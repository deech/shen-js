/*
The License
-----------
The user is free to produce commercial applications with the software, to
distribute these applications in source or binary form, and to charge monies
for them as he sees fit and in concordance with the laws of the land subject
to the following license.
 
1. The license applies to all the software and all derived software and must
   appear on such.

2. It is illegal to distribute the software without this license attached to
	 it and use of the software implies agreement with the license as such. It
	 is illegal for anyone who is not the copyright holder to tamper with or
	 change the license.

3. Neither the names of Lambda Associates or the copyright holder may be used
	 to endorse or promote products built using the software without specific
	 prior written permission from the copyright holder.

4. That possession of this license does not confer on the copyright holder any
	 special contractual obligation towards the user. That in no event shall the
	 copyright holder be liable for any direct, indirect, incidental, special,
	 exemplary or consequential damages (including but not limited to
	 procurement of substitute goods or services, loss of use, data, or profits;
	 or business interruption), however caused and on any theory of liability,
	 whether in contract, strict liability or tort (including negligence)
	 arising in any way out of the use of the software, even if advised of the
	 possibility of such damage.

5. It is permitted for the user to change the software, for the purpose of
	 improving performance, correcting an error, or porting to a new platform,
	 and distribute the modified version of Shen (hereafter the modified
	 version) provided the resulting program conforms in all respects to the
	 Shen standard and is issued under that title. The user must make it clear
	 with his distribution that he/she is the author of the changes and what
	 these changes are and why.

6. Derived versions of this software in whatever form are subject to the same
	 restrictions. In particular it is not permitted to make derived copies of
	 this software which do not conform to the Shen standard or appear under a
	 different title.

7. It is permitted to distribute versions of Shen which incorporate libraries,
	 graphics or other facilities which are not part of the Shen standard.

For an explication of this license see
[http://www.lambdassociates.org/News/june11/license.htm] which explains this
license in full.
*/

Shen = {}
Shen.globals = {}

Shen.globals["*language*"] = "Javascript"
Shen.globals["*implementation*"] = "cli"
Shen.globals["*port*"] = Shen.version = "0.9.3"
Shen.globals["*porters*"] = Shen.author = "Ramil Farkhshatov"

Shen.Tag = function(name) {
  this.toString = function() {
    return "#<Shen.Tag " + name + ">"
  }
}

Shen.fail_obj = new Object
Shen.fns = {}

Shen.type_func = new Shen.Tag('func')
Shen.type_symbol = new Shen.Tag('sym')
Shen.type_cons = new Shen.Tag('cons')
Shen.type_stream_in = new Shen.Tag('stream_in')
Shen.type_stream_out = new Shen.Tag('stream_out')
Shen.type_stream_inout = new Shen.Tag('stream_inout')
Shen.type_error = new Shen.Tag('error')

Shen.true = true
Shen.false = false

Shen.Freeze = function(vars, fn) {
  this.vars = vars
  this.fn = fn
}

Shen.mkfunction = function(name, nargs, fn) {
  var x = [Shen.type_func, fn, nargs, [], name]
  Shen.fns[name] = x
  return x
}

Shen.call_tail = function(x, args) {
  var j = 0, nargs = args.length
  for (;;) {
    if (typeof(x) == "function") {
      x = x([args[j++]])
    } else if (x[0] == Shen.type_func) {
      var c = x[3], n = c.length, k = x[2], a
      if (!j && !n && nargs <= k) {
        a = args
        j += nargs
      } else {
        k = (k > n + nargs) ? n + nargs : k
        a = new Array(k)

        for (var i = 0; i < n; ++i)
          a[i] = c[i]
        for (;i < k && j < nargs; ++j, ++i)
          a[i] = args[j]
      }
      x = (x[1])(a)
    } else if (x[0] == Shen.type_symbol) {
      x = Shen.get_fn(x)
    } else
      return Shen.error("Shen.call: Wrong function: '" + x + "'")
    if (j >= nargs)
      return x
    while (typeof(x) == "function")
      x = x()
  }
  return x
}

Shen.call = function(x, args) {
  var x = Shen.call_tail(x, args)
  while (typeof(x) == "function")
    x = x()
  return x
}

Shen.call_by_name = function(x, args) {
  return Shen.call(Shen.fns[x], args)
}

Shen.call_toplevel = function(name) {
  var ret = Shen.call(Shen.fns[name], [])
  delete Shen.fns[name]
  return ret
}

Shen.unwind_tail = function(x) {
  while(typeof(x) == "function")
    x = x()
  return x
}

Shen.get_fn = function(x) {
  if (typeof(x) == "function")
    Shen.error("passed function into get_fn")
  switch (x[0]) {
  case Shen.type_func: return x
  case Shen.type_symbol:
    var v = Shen.fns[x[1]]
    if (v != undefined)
      return v
    Shen.error("Cannot find '" + x[1] + "'")
    return Shen.fail_obj
  }
  throw new Error("function " + x[1] + " not found")
}

Shen.thaw = function(f) {
  return f.fn(f.vars)
}

Shen.error = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts("# err: " + s + "\n")
  throw new Error(s);
  return Shen.fail_obj
}

Shen.error_to_string = function(s) {
  var stack = s.stack;
  var show = (stack !== undefined);
  show &= Shen.is_true(Shen.globals["shenjs.*show-error-stack*"]);
  return (show) ? ("" + s + " " + stack) : ("" + s);
}

Shen.get_time = function(x) {
  return (new Date()).getTime() / 1000.0
}

Shen.simple_error = Shen.error
Shen.log_eq = false

Shen.trap_error = function(fn, handler) {
  try {
    return fn()
  } catch (e) {
    return Shen.call(handler, [e])
  }
}

Shen.notrap_error = function(fn, handler) {
  return fn()
}

Shen.equal_boolean = function(b, x) {
  return ((x instanceof Array)
          && x[0] == Shen.type_symbol
          && ((x[1] == "true" && b === true)
              || (x[1] == "false" && b === false)))
}

Shen.equal_function = function(f, x) {
  return (x[0] == Shen.type_symbol && f[0] == Shen.type_func && x[1] == f[4])
}

Shen.$eq$ = function(x, y) {
  if (x === y)
    return true
  var tx = typeof(x), ty = typeof(y)
  if (tx != ty)
    return ((tx == "boolean" && Shen.equal_boolean(x, y))
            || (ty == "boolean" && Shen.equal_boolean(y, x)))
  switch (tx) {
  case "number":
  case "boolean":
  case "function":
  case "string":
    return x == y;

  case "object":
    if (x == y)
      return true

    if ((x instanceof Array) ^ (y instanceof Array))
      return false

    if (Shen.equal_function(x, y) || Shen.equal_function(y, x))
      return true
    if (x.length != y.length)
      return false
    if (x.length == 0)
      return true
    if (x == Shen.fail_obj && y == Shen.fail_obj)
      return true
    if (x[0] != y[0])
      return false
    switch (x[0]) {
    case Shen.type_func:
     if (x[1] != y[1] || x[2] != y[2])
        return false
      var n = x[3].length
      if (n != y[3].length)
        return false
      for (var i = 0; i < n; ++i)
        if (x[3][i] != y[3][i])
          return false
      return true
    case Shen.type_symbol: return x[1] == y[1];
    case Shen.type_cons:
      var r = Shen.$eq$(x[1], y[1])
      while (typeof(r) == "function")
        r = r()
      if (!r)
        return false
      return (function() {
        var r = Shen.$eq$(x[2], y[2])
        while (typeof(r) == "function")
          r = r()
        return r
      });
    case Shen.type_stream_out:
    case Shen.type_stream_in: return x[1] == y[1] && x[2] == y[2];
    default:
      for (var i = 1; i < x.length; ++i) {
        var r = Shen.$eq$(x[i], y[i])
        while (typeof(r) == "function")
          r = r()
        if (!r)
          return false;
      }
      return true;
    }
    break;
  default: return false;
  }
}

Shen.empty$question$ = function(x) {
  return ((x instanceof Array) && !x.length)
}

Shen.is_type = function(x, type) {
  if (type == Shen.type_symbol && (x === true || x === false))
    return true
  return ((x instanceof Array) && x[0] == type)
}

Shen.boolean$question$ = function(x) {
  return (typeof(x) == "boolean") || (Shen.is_type(x, Shen.type_symbol)
                                      && (x[1] == "true" || x[1] == "false"))
}

Shen.vector$question$ = function(x) {
  return ((x instanceof Array) && x[0] > 0)
}

Shen.absvector$question$ = function(x) {
  return ((x instanceof Array) && x.length > 0
          && (!(x[0] instanceof Shen.Tag)))
}

Shen.absvector = function(n) {
  var ret = new Array(n)
  for (var i = 0; i < n; ++i)
    ret[i] = Shen.fail_obj
  return ret
}

Shen.dbg_princ = function(s, x) {
  dbg_print(" " + s + x)
  return x
}

Shen.dbg_print = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts(s + "\n")
}

Shen.is_true = function(x) {
  return x != false || ((x instanceof Array)
                        && (x[0] == Shen.type_symbol)
                        && (x[1] != "false"))
}

Shen.absvector_ref = function(x, i) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  return x[i]
}

Shen.absvector_set = function(x, i, v) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  x[i] = v
  return x
}

Shen.value = function(x) {
  var y = Shen.globals[s[1]]
  if (y === undefined)
    Shen.error("The variable " + x + " is unbound.")
  else
    return y
}

Shen.vector = function(n) {
  var r = new Array(n + 1)
  r[0] = n
  for (var i = 1; i <= n; ++i)
    r[i] = Shen.fail_obj
  return r
}

Shen.esc = function(x) {
  var ret = ""
  for (var i = 0; i < x.length; ++i)
    switch (x[i]) {
      case '"': ret += '\\"'; break;
      default: ret += x[i]; break
    }
  return ret
}

Shen.str = function(x) {
  var err = " is not an atom in Shen; str cannot print it to a string."
  switch (typeof(x)) {
    case "string": return "\"" + Shen.esc(x) + "\""
    case "number":
    case "boolean": return "" + x
    case "function":
      return "#<function>"
    case "object":
      if (x == Shen.fail_obj)
        return "fail!"
      if (x instanceof Array) {
        if (x.length <= 0) {
          Shen.error("[]" + err)
          return Shen.fail_obj
        }
        switch (x[0]) {
          case Shen.type_symbol: return x[1]
          case Shen.type_func:
            if (!x[3].length && x[4] != undefined)
              return x[4]
            if (Shen.is_true(Shen.globals['shenjs.*show-func-js*']))
              Shen.io.puts("\n func: " + x + "\n\n")
            return (x[3].length == 0) ? "#<function>" : "#<closure>"
        }
      }
  }
  Shen.error([x + err])
  return Shen.fail_obj
}

Shen.intern = function(x) {
  switch (x) {
  case "true": return true
  case "false": return false
  default: return [Shen.type_symbol, x]
  }
}

Shen.tlstr = function(x) {
  if (x == "")
    return [Shen.type_symbol, "shen_eos"]
  return x.substring(1, x.length)
}

Shen.n_$gt$string = function(x) {
  return String.fromCharCode(x)
}

Shen.string_$gt$n = function(x) {
  return x.charCodeAt(0)
}

Shen.eval_in_global = function(x) {
  try {
    var g = window;
  } catch (e) {
    var g = this;
  }
  if (g.execScript) // eval in global scope for IE
    return g.execScript(x);
  else // other browsers
    return eval.call(null, x);
}

Shen.eval_kl = function(x) {
  var log = false
  if (Shen.is_true(Shen.globals['shenjs.*show-eval-js*']))
    log = true
  if (log) {
    Shen.io.puts("# eval-kl[KL]: " + "\n")
    Shen.io.puts(Shen.call_by_name("intmake-string",
                                   ["~R~%", [Shen.fns["shen_tuple"], x, []]]))
  }
  var js = Shen.call_by_name("js-from-kl", [x])
  if (log)
    Shen.io.puts("eval-kl[JS]:\n" + js + "\n\n")
  var ret = Shen.eval_in_global(js)
  if (log)
    Shen.io.puts("eval-kl => '" + ret + "'\n\n")
  if (ret === undefined)
    Shen.error("evaluated '" + js + "' to undefined")
  return ret
}

Shen.mkfunction("shenjs.load", 1, function self(x) {
  if (x.length < 1) return [Shen.type_func, self, 1, x]
  return (function() {
    load(x)
    return []
  })
})

Shen.file_instream_get = function(stream, s, pos) {
  if (s.length <= pos) {
    stream[1] = (function() {return -1})
    return -1
  }
  stream[1] = (function() {
    return Shen.file_instream_get(stream, s, pos + 1)
  })
  return s.charCodeAt(pos)
}

Shen.read_byte = function(stream) {
 switch (stream[0]) {
    case Shen.type_stream_in: return stream[1]()
    case Shen.type_stream_inout: return Shen.read_byte(stream[1])
    default:
      Shen.error("read-byte: Wrong stream type.")
      return -1;
  }
}

Shen.write_byte = function(byte, stream) {
 switch (stream[0]) {
    case Shen.type_stream_out: stream[1](byte); break;
    case Shen.type_stream_inout: Shen.write_byte(byte, stream[2]); break;
    default: Shen.error("write-byte: Wrong stream type.")
  }
  return []
}

Shen.close = function(stream) {
  switch (stream[0]) {
    case Shen.type_stream_in:
      stream[2]()
      stream[1] = (function() {return -1});
      break;
    case Shen.type_stream_out:
      stream[2]()
      stream[1] = (function(_) {return []});
      break;
    case Shen.type_stream_inout:
      Shen.close(stream[1])
      Shen.close(stream[2])
      break;
  }
  return []
}

Shen.repl_write_byte = function(byte) {
  Shen.io.puts(String.fromCharCode(byte))
}

Shen.repl_read_byte = function (stream, s, pos) {
  if (s == null) {
    stream[1] = (function() {return -1})
    quit()
    return -1
  } else if (pos >= s.length) {
    stream[1] = (function() {
      return Shen.repl_read_byte(stream, Shen.io.gets(), 0)
    })
    return Shen.call_by_name("shen.newline", [])
  } else {
    stream[1] = (function() {
      return Shen.repl_read_byte(stream, s, pos + 1)
    })
  }
  return s.charCodeAt(pos)
}

Shen.pr = function(s, stream) {
  for (i = 0; i < s.length; ++i)
    Shen.write_byte(s.charCodeAt(i), stream)
  return s
}

Shen.mkfunction("shenjs.exit", 1, function self(x) {quit()})
Shen.globals["js.skip-internals"] = true

Shen.globals["shenjs.*show-error-js*"] = false
Shen.globals["shenjs.*show-error-stack*"] = false
Shen.globals["shenjs.*show-eval-js*"] = false
Shen.globals["shenjs.*show-func-js*"] = false
Shen.globals["shenjs.*dbg-js*"] = false
Shen.globals["*home-directory*"] = ""

/* dummy functions to bypass defstruct's declarations */
Shen.mkfunction("shen.process-datatype", 2, function(_) {return []})
Shen.mkfunction("compile", 3, function(_) {return []})
Shen.mkfunction("declare", 2, function(_) {return []})

Shen.console_io = {
  open: function(type, name, dir) {
    if (type[1] != "file")
      return Shen.fail_obj
    var filename = Shen.globals["*home-directory*"] + name
    if (dir[1] == "in") {
      try {
        var s = read(filename)
      } catch(e) {
        Shen.error(e)
        return Shen.fail_obj
      }
      var stream = [Shen.type_stream_in, null, function(){}]
      stream[1] = (function() {
        return Shen.file_instream_get(stream, s, 0)
      })
      return stream
    } else if (dir[1] == "out") {
      Shen.error("Writing files is not supported in cli interpreter")
      return Shen.fail_obj
    }
    Shen.error("Unsupported open flags")
    return Shen.fail_obj
  },

  init: function() {
    try {
      this.puts = putstr;
    } catch (e) {
      this.puts = write;
    }
    this.gets = readline;
    var fout = [Shen.type_stream_out,
                function(byte) {return Shen.repl_write_byte(byte)},
                function() {}]
    Shen.globals["*stoutput*"] = fout
    
    var fin = [Shen.type_stream_in, null, quit]
    fin[1] = (function() {
      return Shen.repl_read_byte(fin, Shen.io.gets(), 0)
    })
    
    var finout = [Shen.type_stream_inout, fin, fout]
    Shen.globals["*stinput*"] = finout
  }
}

Shen.init = function(conf) {
  Shen.io = conf.io
  Shen.io.init()
  function assert_io(func) {
    if (Shen.io[func] === undefined)
      throw new Error("Shen: IO has no method " + func)
  }
  assert_io('gets')
  assert_io('puts')
  assert_io('open')
  if (conf.start_repl)
    Shen.call_by_name("shen.shen", [])
}

Shen.console_repl = function () {
  Shen.init({io: Shen.console_io, start_repl: true})
}

try {
  module.exports = Shen
} catch (e) {}


Shen.fns["hd"] = [Shen.type_func, function shen_user_lambda5576(Arg5575) {
  if (Arg5575.length < 1) return [Shen.type_func, shen_user_lambda5576, 1, Arg5575];
  var Arg5575_0 = Arg5575[0];
  return Arg5575_0[1]}, 1, [], "hd"];






Shen.fns["tl"] = [Shen.type_func, function shen_user_lambda5578(Arg5577) {
  if (Arg5577.length < 1) return [Shen.type_func, shen_user_lambda5578, 1, Arg5577];
  var Arg5577_0 = Arg5577[0];
  return Arg5577_0[2]}, 1, [], "tl"];






Shen.fns["not"] = [Shen.type_func, function shen_user_lambda5580(Arg5579) {
  if (Arg5579.length < 1) return [Shen.type_func, shen_user_lambda5580, 1, Arg5579];
  var Arg5579_0 = Arg5579[0];
  return (!Arg5579_0)}, 1, [], "not"];






Shen.fns["thaw"] = [Shen.type_func, function shen_user_lambda5582(Arg5581) {
  if (Arg5581.length < 1) return [Shen.type_func, shen_user_lambda5582, 1, Arg5581];
  var Arg5581_0 = Arg5581[0];
  return Shen.thaw(Arg5581_0)}, 1, [], "thaw"];






Shen.fns["string?"] = [Shen.type_func, function shen_user_lambda5584(Arg5583) {
  if (Arg5583.length < 1) return [Shen.type_func, shen_user_lambda5584, 1, Arg5583];
  var Arg5583_0 = Arg5583[0];
  return (typeof(Arg5583_0) == 'string')}, 1, [], "string?"];






Shen.fns["number?"] = [Shen.type_func, function shen_user_lambda5586(Arg5585) {
  if (Arg5585.length < 1) return [Shen.type_func, shen_user_lambda5586, 1, Arg5585];
  var Arg5585_0 = Arg5585[0];
  return (typeof(Arg5585_0) == 'number')}, 1, [], "number?"];






Shen.fns["symbol?"] = [Shen.type_func, function shen_user_lambda5588(Arg5587) {
  if (Arg5587.length < 1) return [Shen.type_func, shen_user_lambda5588, 1, Arg5587];
  var Arg5587_0 = Arg5587[0];
  return Shen.is_type(Arg5587_0, Shen.type_symbol)}, 1, [], "symbol?"];






Shen.fns["cons?"] = [Shen.type_func, function shen_user_lambda5590(Arg5589) {
  if (Arg5589.length < 1) return [Shen.type_func, shen_user_lambda5590, 1, Arg5589];
  var Arg5589_0 = Arg5589[0];
  return Shen.is_type(Arg5589_0, Shen.type_cons)}, 1, [], "cons?"];






Shen.fns["vector?"] = [Shen.type_func, function shen_user_lambda5592(Arg5591) {
  if (Arg5591.length < 1) return [Shen.type_func, shen_user_lambda5592, 1, Arg5591];
  var Arg5591_0 = Arg5591[0];
  return (function() {
  return Shen.vector$question$(Arg5591_0);})}, 1, [], "vector?"];






Shen.fns["absvector?"] = [Shen.type_func, function shen_user_lambda5594(Arg5593) {
  if (Arg5593.length < 1) return [Shen.type_func, shen_user_lambda5594, 1, Arg5593];
  var Arg5593_0 = Arg5593[0];
  return (function() {
  return Shen.absvector$question$(Arg5593_0);})}, 1, [], "absvector?"];






Shen.fns["value"] = [Shen.type_func, function shen_user_lambda5596(Arg5595) {
  if (Arg5595.length < 1) return [Shen.type_func, shen_user_lambda5596, 1, Arg5595];
  var Arg5595_0 = Arg5595[0];
  return (Shen.globals[Arg5595_0[1]])}, 1, [], "value"];






Shen.fns["intern"] = [Shen.type_func, function shen_user_lambda5598(Arg5597) {
  if (Arg5597.length < 1) return [Shen.type_func, shen_user_lambda5598, 1, Arg5597];
  var Arg5597_0 = Arg5597[0];
  return (function() {
  return Shen.intern(Arg5597_0);})}, 1, [], "intern"];






Shen.fns["vector"] = [Shen.type_func, function shen_user_lambda5600(Arg5599) {
  if (Arg5599.length < 1) return [Shen.type_func, shen_user_lambda5600, 1, Arg5599];
  var Arg5599_0 = Arg5599[0];
  return (function() {
  return Shen.vector(Arg5599_0);})}, 1, [], "vector"];






Shen.fns["read-byte"] = [Shen.type_func, function shen_user_lambda5602(Arg5601) {
  if (Arg5601.length < 1) return [Shen.type_func, shen_user_lambda5602, 1, Arg5601];
  var Arg5601_0 = Arg5601[0];
  return (function() {
  return Shen.read_byte(Arg5601_0);})}, 1, [], "read-byte"];






Shen.fns["close"] = [Shen.type_func, function shen_user_lambda5604(Arg5603) {
  if (Arg5603.length < 1) return [Shen.type_func, shen_user_lambda5604, 1, Arg5603];
  var Arg5603_0 = Arg5603[0];
  return (function() {
  return Shen.close(Arg5603_0);})}, 1, [], "close"];






Shen.fns["absvector"] = [Shen.type_func, function shen_user_lambda5606(Arg5605) {
  if (Arg5605.length < 1) return [Shen.type_func, shen_user_lambda5606, 1, Arg5605];
  var Arg5605_0 = Arg5605[0];
  return (function() {
  return Shen.absvector(Arg5605_0);})}, 1, [], "absvector"];






Shen.fns["str"] = [Shen.type_func, function shen_user_lambda5608(Arg5607) {
  if (Arg5607.length < 1) return [Shen.type_func, shen_user_lambda5608, 1, Arg5607];
  var Arg5607_0 = Arg5607[0];
  return (function() {
  return Shen.str(Arg5607_0);})}, 1, [], "str"];






Shen.fns["tlstr"] = [Shen.type_func, function shen_user_lambda5610(Arg5609) {
  if (Arg5609.length < 1) return [Shen.type_func, shen_user_lambda5610, 1, Arg5609];
  var Arg5609_0 = Arg5609[0];
  return (function() {
  return Shen.tlstr(Arg5609_0);})}, 1, [], "tlstr"];






Shen.fns["n->string"] = [Shen.type_func, function shen_user_lambda5612(Arg5611) {
  if (Arg5611.length < 1) return [Shen.type_func, shen_user_lambda5612, 1, Arg5611];
  var Arg5611_0 = Arg5611[0];
  return (function() {
  return Shen.n_$gt$string(Arg5611_0);})}, 1, [], "n->string"];






Shen.fns["string->n"] = [Shen.type_func, function shen_user_lambda5614(Arg5613) {
  if (Arg5613.length < 1) return [Shen.type_func, shen_user_lambda5614, 1, Arg5613];
  var Arg5613_0 = Arg5613[0];
  return (function() {
  return Shen.string_$gt$n(Arg5613_0);})}, 1, [], "string->n"];






Shen.fns["empty?"] = [Shen.type_func, function shen_user_lambda5616(Arg5615) {
  if (Arg5615.length < 1) return [Shen.type_func, shen_user_lambda5616, 1, Arg5615];
  var Arg5615_0 = Arg5615[0];
  return (function() {
  return Shen.empty$question$(Arg5615_0);})}, 1, [], "empty?"];






Shen.fns["get-time"] = [Shen.type_func, function shen_user_lambda5618(Arg5617) {
  if (Arg5617.length < 1) return [Shen.type_func, shen_user_lambda5618, 1, Arg5617];
  var Arg5617_0 = Arg5617[0];
  return (function() {
  return Shen.get_time(Arg5617_0);})}, 1, [], "get-time"];






Shen.fns["error"] = [Shen.type_func, function shen_user_lambda5620(Arg5619) {
  if (Arg5619.length < 1) return [Shen.type_func, shen_user_lambda5620, 1, Arg5619];
  var Arg5619_0 = Arg5619[0];
  return (function() {
  return Shen.error(Arg5619_0);})}, 1, [], "error"];






Shen.fns["simple-error"] = [Shen.type_func, function shen_user_lambda5622(Arg5621) {
  if (Arg5621.length < 1) return [Shen.type_func, shen_user_lambda5622, 1, Arg5621];
  var Arg5621_0 = Arg5621[0];
  return (function() {
  return Shen.simple_error(Arg5621_0);})}, 1, [], "simple-error"];






Shen.fns["eval-kl"] = [Shen.type_func, function shen_user_lambda5624(Arg5623) {
  if (Arg5623.length < 1) return [Shen.type_func, shen_user_lambda5624, 1, Arg5623];
  var Arg5623_0 = Arg5623[0];
  return (function() {
  return Shen.eval_kl(Arg5623_0);})}, 1, [], "eval-kl"];






Shen.fns["error-to-string"] = [Shen.type_func, function shen_user_lambda5626(Arg5625) {
  if (Arg5625.length < 1) return [Shen.type_func, shen_user_lambda5626, 1, Arg5625];
  var Arg5625_0 = Arg5625[0];
  return (function() {
  return Shen.error_to_string(Arg5625_0);})}, 1, [], "error-to-string"];






Shen.fns["js.call-js"] = [Shen.type_func, function shen_user_lambda5628(Arg5627) {
  if (Arg5627.length < 1) return [Shen.type_func, shen_user_lambda5628, 1, Arg5627];
  var Arg5627_0 = Arg5627[0];
  return (function() {
  return Shen.js$dot$call_js(Arg5627_0);})}, 1, [], "js.call-js"];






Shen.fns["+"] = [Shen.type_func, function shen_user_lambda5630(Arg5629) {
  if (Arg5629.length < 2) return [Shen.type_func, shen_user_lambda5630, 2, Arg5629];
  var Arg5629_0 = Arg5629[0], Arg5629_1 = Arg5629[1];
  return (Arg5629_0 + Arg5629_1)}, 2, [], "+"];






Shen.fns["-"] = [Shen.type_func, function shen_user_lambda5632(Arg5631) {
  if (Arg5631.length < 2) return [Shen.type_func, shen_user_lambda5632, 2, Arg5631];
  var Arg5631_0 = Arg5631[0], Arg5631_1 = Arg5631[1];
  return (Arg5631_0 - Arg5631_1)}, 2, [], "-"];






Shen.fns["*"] = [Shen.type_func, function shen_user_lambda5634(Arg5633) {
  if (Arg5633.length < 2) return [Shen.type_func, shen_user_lambda5634, 2, Arg5633];
  var Arg5633_0 = Arg5633[0], Arg5633_1 = Arg5633[1];
  return (Arg5633_0 * Arg5633_1)}, 2, [], "*"];






Shen.fns["/"] = [Shen.type_func, function shen_user_lambda5636(Arg5635) {
  if (Arg5635.length < 2) return [Shen.type_func, shen_user_lambda5636, 2, Arg5635];
  var Arg5635_0 = Arg5635[0], Arg5635_1 = Arg5635[1];
  return (Arg5635_0 / Arg5635_1)}, 2, [], "/"];






Shen.fns["and"] = [Shen.type_func, function shen_user_lambda5638(Arg5637) {
  if (Arg5637.length < 2) return [Shen.type_func, shen_user_lambda5638, 2, Arg5637];
  var Arg5637_0 = Arg5637[0], Arg5637_1 = Arg5637[1];
  return (Arg5637_0 && Arg5637_1)}, 2, [], "and"];






Shen.fns["or"] = [Shen.type_func, function shen_user_lambda5640(Arg5639) {
  if (Arg5639.length < 2) return [Shen.type_func, shen_user_lambda5640, 2, Arg5639];
  var Arg5639_0 = Arg5639[0], Arg5639_1 = Arg5639[1];
  return (Arg5639_0 || Arg5639_1)}, 2, [], "or"];






Shen.fns["="] = [Shen.type_func, function shen_user_lambda5642(Arg5641) {
  if (Arg5641.length < 2) return [Shen.type_func, shen_user_lambda5642, 2, Arg5641];
  var Arg5641_0 = Arg5641[0], Arg5641_1 = Arg5641[1];
  return Shen.$eq$(Arg5641_0, Arg5641_1)}, 2, [], "="];






Shen.fns[">"] = [Shen.type_func, function shen_user_lambda5644(Arg5643) {
  if (Arg5643.length < 2) return [Shen.type_func, shen_user_lambda5644, 2, Arg5643];
  var Arg5643_0 = Arg5643[0], Arg5643_1 = Arg5643[1];
  return (Arg5643_0 > Arg5643_1)}, 2, [], ">"];






Shen.fns[">="] = [Shen.type_func, function shen_user_lambda5646(Arg5645) {
  if (Arg5645.length < 2) return [Shen.type_func, shen_user_lambda5646, 2, Arg5645];
  var Arg5645_0 = Arg5645[0], Arg5645_1 = Arg5645[1];
  return (Arg5645_0 >= Arg5645_1)}, 2, [], ">="];






Shen.fns["<"] = [Shen.type_func, function shen_user_lambda5648(Arg5647) {
  if (Arg5647.length < 2) return [Shen.type_func, shen_user_lambda5648, 2, Arg5647];
  var Arg5647_0 = Arg5647[0], Arg5647_1 = Arg5647[1];
  return (Arg5647_0 < Arg5647_1)}, 2, [], "<"];






Shen.fns["<="] = [Shen.type_func, function shen_user_lambda5650(Arg5649) {
  if (Arg5649.length < 2) return [Shen.type_func, shen_user_lambda5650, 2, Arg5649];
  var Arg5649_0 = Arg5649[0], Arg5649_1 = Arg5649[1];
  return (Arg5649_0 <= Arg5649_1)}, 2, [], "<="];






Shen.fns["cons"] = [Shen.type_func, function shen_user_lambda5652(Arg5651) {
  if (Arg5651.length < 2) return [Shen.type_func, shen_user_lambda5652, 2, Arg5651];
  var Arg5651_0 = Arg5651[0], Arg5651_1 = Arg5651[1];
  return [Shen.type_cons, Arg5651_0, Arg5651_1]}, 2, [], "cons"];






Shen.fns["set"] = [Shen.type_func, function shen_user_lambda5654(Arg5653) {
  if (Arg5653.length < 2) return [Shen.type_func, shen_user_lambda5654, 2, Arg5653];
  var Arg5653_0 = Arg5653[0], Arg5653_1 = Arg5653[1];
  return (Shen.globals[Arg5653_0[1]] = Arg5653_1)}, 2, [], "set"];






Shen.fns["<-address"] = [Shen.type_func, function shen_user_lambda5656(Arg5655) {
  if (Arg5655.length < 2) return [Shen.type_func, shen_user_lambda5656, 2, Arg5655];
  var Arg5655_0 = Arg5655[0], Arg5655_1 = Arg5655[1];
  return Shen.absvector_ref(Arg5655_0, Arg5655_1)}, 2, [], "<-address"];






Shen.fns["cn"] = [Shen.type_func, function shen_user_lambda5658(Arg5657) {
  if (Arg5657.length < 2) return [Shen.type_func, shen_user_lambda5658, 2, Arg5657];
  var Arg5657_0 = Arg5657[0], Arg5657_1 = Arg5657[1];
  return (Arg5657_0 + Arg5657_1)}, 2, [], "cn"];






Shen.fns["pos"] = [Shen.type_func, function shen_user_lambda5660(Arg5659) {
  if (Arg5659.length < 2) return [Shen.type_func, shen_user_lambda5660, 2, Arg5659];
  var Arg5659_0 = Arg5659[0], Arg5659_1 = Arg5659[1];
  return Arg5659_0[Arg5659_1]}, 2, [], "pos"];






Shen.fns["@p"] = [Shen.type_func, function shen_user_lambda5662(Arg5661) {
  if (Arg5661.length < 2) return [Shen.type_func, shen_user_lambda5662, 2, Arg5661];
  var Arg5661_0 = Arg5661[0], Arg5661_1 = Arg5661[1];
  return [Shen.fns['shen.tuple'], Arg5661_0, Arg5661_1]}, 2, [], "@p"];






Shen.fns["pr"] = [Shen.type_func, function shen_user_lambda5664(Arg5663) {
  if (Arg5663.length < 2) return [Shen.type_func, shen_user_lambda5664, 2, Arg5663];
  var Arg5663_0 = Arg5663[0], Arg5663_1 = Arg5663[1];
  return (function() {
  return Shen.pr(Arg5663_0, Arg5663_1);})}, 2, [], "pr"];






Shen.fns["address->"] = [Shen.type_func, function shen_user_lambda5666(Arg5665) {
  if (Arg5665.length < 3) return [Shen.type_func, shen_user_lambda5666, 3, Arg5665];
  var Arg5665_0 = Arg5665[0], Arg5665_1 = Arg5665[1], Arg5665_2 = Arg5665[2];
  return Shen.absvector_set(Arg5665_0, Arg5665_1, Arg5665_2)}, 3, [], "address->"];






Shen.fns["open"] = [Shen.type_func, function shen_user_lambda5668(Arg5667) {
  if (Arg5667.length < 3) return [Shen.type_func, shen_user_lambda5668, 3, Arg5667];
  var Arg5667_0 = Arg5667[0], Arg5667_1 = Arg5667[1], Arg5667_2 = Arg5667[2];
  return (function() {
  return Shen.open(Arg5667_0, Arg5667_1, Arg5667_2);})}, 3, [], "open"];






Shen.fns["reg-kl.shen-toplevel-3867"] = [Shen.type_func, function shen_user_lambda3868(Arg3866) {
  if (Arg3866.length < 0) return [Shen.type_func, shen_user_lambda3868, 0, Arg3866];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "reg-kl.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})}, 0, [], "reg-kl.shen-toplevel-3867"];

Shen.call_toplevel("reg-kl.shen-toplevel-3867")





Shen.fns["reg-kl.mk-context"] = [Shen.type_func, function shen_user_lambda3872(Arg3871) {
  if (Arg3871.length < 2) return [Shen.type_func, shen_user_lambda3872, 2, Arg3871];
  var Arg3871_0 = Arg3871[0], Arg3871_1 = Arg3871[1];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg3871_0, Shen.call(Shen.fns["@v"], [Arg3871_1, Shen.vector(0)])]);})}, 2, [], "reg-kl.mk-context"];





Shen.fns["reg-kl.context-nregs->"] = [Shen.type_func, function shen_user_lambda3876(Arg3875) {
  if (Arg3875.length < 2) return [Shen.type_func, shen_user_lambda3876, 2, Arg3875];
  var Arg3875_0 = Arg3875[0], Arg3875_1 = Arg3875[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg3875_0, 2, Arg3875_1]);})}, 2, [], "reg-kl.context-nregs->"];





Shen.fns["reg-kl.context-toplevel->"] = [Shen.type_func, function shen_user_lambda3880(Arg3879) {
  if (Arg3879.length < 2) return [Shen.type_func, shen_user_lambda3880, 2, Arg3879];
  var Arg3879_0 = Arg3879[0], Arg3879_1 = Arg3879[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg3879_0, 1, Arg3879_1]);})}, 2, [], "reg-kl.context-toplevel->"];





Shen.fns["reg-kl.context-nregs"] = [Shen.type_func, function shen_user_lambda3883(Arg3882) {
  if (Arg3882.length < 1) return [Shen.type_func, shen_user_lambda3883, 1, Arg3882];
  var Arg3882_0 = Arg3882[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg3882_0, 2]);})}, 1, [], "reg-kl.context-nregs"];





Shen.fns["reg-kl.context-toplevel"] = [Shen.type_func, function shen_user_lambda3886(Arg3885) {
  if (Arg3885.length < 1) return [Shen.type_func, shen_user_lambda3886, 1, Arg3885];
  var Arg3885_0 = Arg3885[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg3885_0, 1]);})}, 1, [], "reg-kl.context-toplevel"];





Shen.fns["reg-kl.var-idx-aux"] = [Shen.type_func, function shen_user_lambda3896(Arg3895) {
  if (Arg3895.length < 3) return [Shen.type_func, shen_user_lambda3896, 3, Arg3895];
  var Arg3895_0 = Arg3895[0], Arg3895_1 = Arg3895[1], Arg3895_2 = Arg3895[2];
  return ((Shen.empty$question$(Arg3895_2))
  ? (function() {
  return Shen.simple_error(("Unknown var: " + Shen.call(Shen.fns["shen.app"], [Arg3895_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (((Shen.is_type(Arg3895_2, Shen.type_cons) && (Shen.is_type(Arg3895_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3895_2[1][1], Arg3895_0)))))
  ? Arg3895_2[1][2]
  : ((Shen.is_type(Arg3895_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-idx-aux"], [Arg3895_0, (Arg3895_1 + 1), Arg3895_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.var-idx-aux"]]);}))))}, 3, [], "reg-kl.var-idx-aux"];





Shen.fns["reg-kl.var-idx"] = [Shen.type_func, function shen_user_lambda3900(Arg3899) {
  if (Arg3899.length < 2) return [Shen.type_func, shen_user_lambda3900, 2, Arg3899];
  var Arg3899_0 = Arg3899[0], Arg3899_1 = Arg3899[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-idx-aux"], [Arg3899_0, 0, Arg3899_1]);})}, 2, [], "reg-kl.var-idx"];





Shen.fns["reg-kl.new-var-idx-aux"] = [Shen.type_func, function shen_user_lambda3913(Arg3912) {
  if (Arg3912.length < 3) return [Shen.type_func, shen_user_lambda3913, 3, Arg3912];
  var Arg3912_0 = Arg3912[0], Arg3912_1 = Arg3912[1], Arg3912_2 = Arg3912[2];
  return ((Shen.empty$question$(Arg3912_2))
  ? Arg3912_1
  : (((Shen.is_type(Arg3912_2, Shen.type_cons) && (Shen.is_type(Arg3912_2[1], Shen.type_cons) && (Arg3912_2[1][2] < 0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3912_0, Arg3912_1, Arg3912_2[2]]);})
  : (((Shen.is_type(Arg3912_2, Shen.type_cons) && (Shen.is_type(Arg3912_2[1], Shen.type_cons) && (Arg3912_2[1][2] >= Arg3912_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3912_0, (Arg3912_2[1][2] + 1), Arg3912_2[2]]);})
  : ((Shen.is_type(Arg3912_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3912_0, Arg3912_1, Arg3912_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.new-var-idx-aux"]]);})))))}, 3, [], "reg-kl.new-var-idx-aux"];





Shen.fns["reg-kl.new-var-idx"] = [Shen.type_func, function shen_user_lambda3917(Arg3916) {
  if (Arg3916.length < 2) return [Shen.type_func, shen_user_lambda3917, 2, Arg3916];
  var Arg3916_0 = Arg3916[0], Arg3916_1 = Arg3916[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3916_0, 0, Arg3916_1]);})}, 2, [], "reg-kl.new-var-idx"];





Shen.fns["reg-kl.var-defined?"] = [Shen.type_func, function shen_user_lambda3935(Arg3934) {
  if (Arg3934.length < 2) return [Shen.type_func, shen_user_lambda3935, 2, Arg3934];
  var Arg3934_0 = Arg3934[0], Arg3934_1 = Arg3934[1];
  return ((Shen.empty$question$(Arg3934_1))
  ? false
  : (((Shen.is_type(Arg3934_1, Shen.type_cons) && (Shen.is_type(Arg3934_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3934_1[1][1], Arg3934_0)))))
  ? true
  : (((Shen.is_type(Arg3934_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3934_1[1], Arg3934_0))))
  ? true
  : ((Shen.is_type(Arg3934_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-defined?"], [Arg3934_0, Arg3934_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.var-defined?"]]);})))))}, 2, [], "reg-kl.var-defined?"];





Shen.fns["reg-kl.used-vars-aux"] = [Shen.type_func, function shen_user_lambda3953(Arg3952) {
  if (Arg3952.length < 4) return [Shen.type_func, shen_user_lambda3953, 4, Arg3952];
  var Arg3952_0 = Arg3952[0], Arg3952_1 = Arg3952[1], Arg3952_2 = Arg3952[2], Arg3952_3 = Arg3952[3];
  var R0;
  return (((Shen.is_type(Arg3952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg3952_0[1])) && (Shen.is_type(Arg3952_0[2], Shen.type_cons) && (Shen.is_type(Arg3952_0[2][2], Shen.type_cons) && (Shen.is_type(Arg3952_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg3952_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3952_0[2][2][2][1], Arg3952_1, [Shen.type_cons, Arg3952_0[2][1], Arg3952_2], Arg3952_3])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3952_0[2][2][1], Arg3952_1, Arg3952_2, R0]);}))
  : (((Shen.is_type(Arg3952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg3952_0[1])) && (Shen.is_type(Arg3952_0[2], Shen.type_cons) && (Shen.is_type(Arg3952_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg3952_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3952_0[2][2][1], Arg3952_1, [Shen.type_cons, Arg3952_0[2][1], Arg3952_2], Arg3952_3]);})
  : ((Shen.is_type(Arg3952_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3952_0[1], Arg3952_1, Arg3952_2, Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3952_0[2], Arg3952_1, Arg3952_2, Arg3952_3])]);})
  : (((Shen.is_type(Arg3952_0, Shen.type_symbol) && ((!Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg3952_0, Arg3952_2])) && Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg3952_0, Arg3952_1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["adjoin"], [Arg3952_0, Arg3952_3]);})
  : Arg3952_3))))}, 4, [], "reg-kl.used-vars-aux"];





Shen.fns["reg-kl.used-vars"] = [Shen.type_func, function shen_user_lambda3957(Arg3956) {
  if (Arg3956.length < 2) return [Shen.type_func, shen_user_lambda3957, 2, Arg3956];
  var Arg3956_0 = Arg3956[0], Arg3956_1 = Arg3956[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3956_0, Arg3956_1, [], []]);})}, 2, [], "reg-kl.used-vars"];





Shen.fns["reg-kl.remove-do"] = [Shen.type_func, function shen_user_lambda3960(Arg3959) {
  if (Arg3959.length < 1) return [Shen.type_func, shen_user_lambda3960, 1, Arg3959];
  var Arg3959_0 = Arg3959[0];
  return (((Shen.is_type(Arg3959_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg3959_0[1]))))
  ? Arg3959_0[2]
  : [Shen.type_cons, Arg3959_0, []])}, 1, [], "reg-kl.remove-do"];





Shen.fns["reg-kl.remove-duplicates-aux"] = [Shen.type_func, function shen_user_lambda3964(Arg3963) {
  if (Arg3963.length < 2) return [Shen.type_func, shen_user_lambda3964, 2, Arg3963];
  var Arg3963_0 = Arg3963[0], Arg3963_1 = Arg3963[1];
  return ((Shen.empty$question$(Arg3963_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg3963_1]);})
  : ((Shen.is_type(Arg3963_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.remove-duplicates-aux"], [Arg3963_0[2], Shen.call(Shen.fns["adjoin"], [Arg3963_0[1], Arg3963_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.remove-duplicates-aux"]]);})))}, 2, [], "reg-kl.remove-duplicates-aux"];





Shen.fns["reg-kl.remove-duplicates"] = [Shen.type_func, function shen_user_lambda3967(Arg3966) {
  if (Arg3966.length < 1) return [Shen.type_func, shen_user_lambda3967, 1, Arg3966];
  var Arg3966_0 = Arg3966[0];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.remove-duplicates-aux"], [Arg3966_0, []]);})}, 1, [], "reg-kl.remove-duplicates"];





Shen.fns["reg-kl.used-vars-cascade-aux"] = [Shen.type_func, function shen_user_lambda3977(Arg3976) {
  if (Arg3976.length < 4) return [Shen.type_func, shen_user_lambda3977, 4, Arg3976];
  var Arg3976_0 = Arg3976[0], Arg3976_1 = Arg3976[1], Arg3976_2 = Arg3976[2], Arg3976_3 = Arg3976[3];
  var R0;
  return ((Shen.empty$question$(Arg3976_0))
  ? Arg3976_3
  : ((Shen.is_type(Arg3976_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3976_0[1], Arg3976_1, [], Arg3976_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-cascade-aux"], [Arg3976_0[2], Arg3976_1, R0, [Shen.type_cons, R0, Arg3976_3]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.used-vars-cascade-aux"]]);})))}, 4, [], "reg-kl.used-vars-cascade-aux"];





Shen.fns["reg-kl.used-vars-cascade"] = [Shen.type_func, function shen_user_lambda3982(Arg3981) {
  if (Arg3981.length < 3) return [Shen.type_func, shen_user_lambda3982, 3, Arg3981];
  var Arg3981_0 = Arg3981[0], Arg3981_1 = Arg3981[1], Arg3981_2 = Arg3981[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-cascade-aux"], [Shen.call(Shen.fns["reverse"], [Arg3981_0]), Arg3981_1, Arg3981_2, []]);})}, 3, [], "reg-kl.used-vars-cascade"];





Shen.fns["reg-kl.mk-shen-set-reg"] = [Shen.type_func, function shen_user_lambda3987(Arg3986) {
  if (Arg3986.length < 2) return [Shen.type_func, shen_user_lambda3987, 2, Arg3986];
  var Arg3986_0 = Arg3986[0], Arg3986_1 = Arg3986[1];
  return (((Arg3986_0 < 0))
  ? (function() {
  return Shen.simple_error("Cannot set function argument\x0a");})
  : [Shen.type_cons, [Shen.type_symbol, "shen-set-reg!"], [Shen.type_cons, Arg3986_0, [Shen.type_cons, Arg3986_1, []]]])}, 2, [], "reg-kl.mk-shen-set-reg"];





Shen.fns["reg-kl.mk-shen-get-reg"] = [Shen.type_func, function shen_user_lambda3990(Arg3989) {
  if (Arg3989.length < 1) return [Shen.type_func, shen_user_lambda3990, 1, Arg3989];
  var Arg3989_0 = Arg3989[0];
  return (((Arg3989_0 < 0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-get-arg"], [Shen.type_cons, ((0 - Arg3989_0) - 1), []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen-get-reg"], [Shen.type_cons, Arg3989_0, []]])}, 1, [], "reg-kl.mk-shen-get-reg"];





Shen.fns["reg-kl.reuse-idx"] = [Shen.type_func, function shen_user_lambda3999(Arg3998) {
  if (Arg3998.length < 2) return [Shen.type_func, shen_user_lambda3999, 2, Arg3998];
  var Arg3998_0 = Arg3998[0], Arg3998_1 = Arg3998[1];
  return ((Shen.empty$question$(Arg3998_1))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg3998_1, Shen.type_cons) && (Shen.is_type(Arg3998_1[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Arg3998_1[1][1], Arg3998_0)) && (Arg3998_1[1][2] >= 0)))))
  ? Arg3998_1[1][2]
  : ((Shen.is_type(Arg3998_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.reuse-idx"], [Arg3998_0, Arg3998_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.reuse-idx"]]);}))))}, 2, [], "reg-kl.reuse-idx"];





Shen.fns["reg-kl.new-var-idx-or-reuse"] = [Shen.type_func, function shen_user_lambda4004(Arg4003) {
  if (Arg4003.length < 3) return [Shen.type_func, shen_user_lambda4004, 3, Arg4003];
  var Arg4003_0 = Arg4003[0], Arg4003_1 = Arg4003[1], Arg4003_2 = Arg4003[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg4003_2))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx"], [Arg4003_0, Arg4003_1]);})
  : ((R0 = (new Shen.Freeze([Arg4003_0, Arg4003_2, Arg4003_1], function(Arg4005) {
  var Arg4005_0 = Arg4005[0], Arg4005_1 = Arg4005[1], Arg4005_2 = Arg4005[2];
  return (function() {
  return ((Shen.is_type(Arg4005_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-or-reuse"], [Arg4005_0, Arg4005_2, Arg4005_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.new-var-idx-or-reuse"]]);}));})}))),
  ((Shen.is_type(Arg4003_2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["reg-kl.reuse-idx"], [Arg4003_2[1], Arg4003_1])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))}, 3, [], "reg-kl.new-var-idx-or-reuse"];





Shen.fns["reg-kl.add-var-aux"] = [Shen.type_func, function shen_user_lambda4013(Arg4012) {
  if (Arg4012.length < 4) return [Shen.type_func, shen_user_lambda4013, 4, Arg4012];
  var Arg4012_0 = Arg4012[0], Arg4012_1 = Arg4012[1], Arg4012_2 = Arg4012[2], Arg4012_3 = Arg4012[3];
  return ((Shen.empty$question$(Arg4012_2))
  ? [Shen.type_cons, [Shen.type_cons, Arg4012_0, Arg4012_1], Shen.call(Shen.fns["reverse"], [Arg4012_3])]
  : (((Shen.is_type(Arg4012_2, Shen.type_cons) && (Shen.is_type(Arg4012_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4012_2[1][2], Arg4012_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["reverse"], [[Shen.type_cons, [Shen.type_cons, Arg4012_0, Arg4012_2[1][2]], Arg4012_3]]), Arg4012_2[2]]);})
  : ((Shen.is_type(Arg4012_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.add-var-aux"], [Arg4012_0, Arg4012_1, Arg4012_2[2], [Shen.type_cons, Arg4012_2[1], Arg4012_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.add-var-aux"]]);}))))}, 4, [], "reg-kl.add-var-aux"];





Shen.fns["reg-kl.add-var"] = [Shen.type_func, function shen_user_lambda4018(Arg4017) {
  if (Arg4017.length < 3) return [Shen.type_func, shen_user_lambda4018, 3, Arg4017];
  var Arg4017_0 = Arg4017[0], Arg4017_1 = Arg4017[1], Arg4017_2 = Arg4017[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.add-var-aux"], [Arg4017_0, Arg4017_1, Arg4017_2, []]);})}, 3, [], "reg-kl.add-var"];





Shen.fns["reg-kl.max"] = [Shen.type_func, function shen_user_lambda4026(Arg4025) {
  if (Arg4025.length < 2) return [Shen.type_func, shen_user_lambda4026, 2, Arg4025];
  var Arg4025_0 = Arg4025[0], Arg4025_1 = Arg4025[1];
  return (((Arg4025_0 > Arg4025_1))
  ? Arg4025_0
  : Arg4025_1)}, 2, [], "reg-kl.max"];





Shen.fns["reg-kl.setreg-unexpr"] = [Shen.type_func, function shen_user_lambda4031(Arg4030) {
  if (Arg4030.length < 3) return [Shen.type_func, shen_user_lambda4031, 3, Arg4030];
  var Arg4030_0 = Arg4030[0], Arg4030_1 = Arg4030[1], Arg4030_2 = Arg4030[2];
  return (((Shen.is_type(Arg4030_1, Shen.type_cons) && Shen.empty$question$(Arg4030_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4030_0, Arg4030_1[1]]), Arg4030_2]]);})
  : ((Shen.is_type(Arg4030_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.setreg-unexpr"], [Arg4030_0, Arg4030_1[2], [Shen.type_cons, Arg4030_1[1], Arg4030_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4030_0, Arg4030_1]);})))}, 3, [], "reg-kl.setreg-unexpr"];





Shen.fns["reg-kl.setreg-do-expr"] = [Shen.type_func, function shen_user_lambda4040(Arg4039) {
  if (Arg4039.length < 3) return [Shen.type_func, shen_user_lambda4040, 3, Arg4039];
  var Arg4039_0 = Arg4039[0], Arg4039_1 = Arg4039[1], Arg4039_2 = Arg4039[2];
  return ((Shen.empty$question$(Arg4039_1))
  ? (function() {
  return Shen.simple_error("Broken `do` expression.");})
  : (((Shen.is_type(Arg4039_1, Shen.type_cons) && Shen.empty$question$(Arg4039_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4039_0, Arg4039_1[1]]), Arg4039_2]]);})
  : ((Shen.is_type(Arg4039_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.setreg-do-expr"], [Arg4039_0, Arg4039_1[2], [Shen.type_cons, Arg4039_1[1], Arg4039_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.setreg-do-expr"]]);}))))}, 3, [], "reg-kl.setreg-do-expr"];





Shen.fns["reg-kl.mk-shen-set-reg-unexpr"] = [Shen.type_func, function shen_user_lambda4044(Arg4043) {
  if (Arg4043.length < 2) return [Shen.type_func, shen_user_lambda4044, 2, Arg4043];
  var Arg4043_0 = Arg4043[0], Arg4043_1 = Arg4043[1];
  var R0, R1;
  return (((Shen.is_type(Arg4043_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4043_1[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["reg-kl.setreg-do-expr"], [Arg4043_0, Arg4043_1[2], []])]
  : (((Shen.is_type(Arg4043_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4043_1[1])) && (Shen.is_type(Arg4043_1[2], Shen.type_cons) && (Shen.is_type(Arg4043_1[2][2], Shen.type_cons) && (Shen.is_type(Arg4043_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4043_1[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4043_0, Arg4043_1[2][2][1]])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4043_0, Arg4043_1[2][2][2][1]])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4043_1[2][1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4043_0, Arg4043_1]);})))}, 2, [], "reg-kl.mk-shen-set-reg-unexpr"];





Shen.fns["reg-kl.walk-let-expr"] = [Shen.type_func, function shen_user_lambda4062(Arg4061) {
  if (Arg4061.length < 8) return [Shen.type_func, shen_user_lambda4062, 8, Arg4061];
  var Arg4061_0 = Arg4061[0], Arg4061_1 = Arg4061[1], Arg4061_2 = Arg4061[2], Arg4061_3 = Arg4061[3], Arg4061_4 = Arg4061[4], Arg4061_5 = Arg4061[5], Arg4061_6 = Arg4061[6], Arg4061_7 = Arg4061[7];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4061_7)))
  ? ((R0 = Shen.call(Shen.fns["remove"], [Arg4061_0, Arg4061_3])),
  (R0 = Shen.call(Shen.fns["append"], [R0, Arg4061_5])),
  (R1 = Shen.call(Shen.fns["difference"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "head"], Arg4061_2]), R0])),
  (R1 = Shen.call(Shen.fns["reg-kl.new-var-idx-or-reuse"], [Arg4061_0, Arg4061_2, R1])),
  Shen.call(Shen.fns["reg-kl.context-nregs->"], [Arg4061_6, Shen.call(Shen.fns["reg-kl.max"], [(R1 + 1), Shen.call(Shen.fns["reg-kl.context-nregs"], [Arg4061_6])])]),
  (R2 = Shen.call(Shen.fns["reg-kl.add-var"], [Arg4061_0, R1, Arg4061_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4061_1, Arg4061_2, Arg4061_4, R0, Arg4061_6])),
  [Shen.fns['shen.tuple'], Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [R1, R0]), R2])
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4061_7)))
  ? [Shen.fns['shen.tuple'], Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4061_1, Arg4061_2, Arg4061_4, Arg4061_5, Arg4061_6]), Arg4061_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-let-expr"]]);})))}, 8, [], "reg-kl.walk-let-expr"];





Shen.fns["reg-kl.walk-let"] = [Shen.type_func, function shen_user_lambda4071(Arg4070) {
  if (Arg4070.length < 7) return [Shen.type_func, shen_user_lambda4071, 7, Arg4070];
  var Arg4070_0 = Arg4070[0], Arg4070_1 = Arg4070[1], Arg4070_2 = Arg4070[2], Arg4070_3 = Arg4070[3], Arg4070_4 = Arg4070[4], Arg4070_5 = Arg4070[5], Arg4070_6 = Arg4070[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [Arg4070_2, [Shen.type_cons, Arg4070_0, Arg4070_3]])),
  (R1 = Shen.call(Shen.fns["element?"], [Arg4070_0, R0])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk-let-expr"], [Arg4070_0, Arg4070_1, Arg4070_3, R0, Arg4070_4, Arg4070_5, Arg4070_6, R1])),
  (R2 = Shen.call(Shen.fns["fst"], [R1])),
  (R1 = Shen.call(Shen.fns["snd"], [R1])),
  (R1 = Shen.call(Shen.fns["reg-kl.remove-do"], [Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4070_2, R1, Shen.call(Shen.fns["append"], [R0, Arg4070_5]), Arg4070_5, Arg4070_6])])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? (R2 = [Shen.type_cons, R2, R1])
  : (R2 = R1)),
  [Shen.type_cons, [Shen.type_symbol, "do"], R2])}, 7, [], "reg-kl.walk-let"];





Shen.fns["reg-kl.walk-do-aux"] = [Shen.type_func, function shen_user_lambda4085(Arg4084) {
  if (Arg4084.length < 6) return [Shen.type_func, shen_user_lambda4085, 6, Arg4084];
  var Arg4084_0 = Arg4084[0], Arg4084_1 = Arg4084[1], Arg4084_2 = Arg4084[2], Arg4084_3 = Arg4084[3], Arg4084_4 = Arg4084[4], Arg4084_5 = Arg4084[5];
  var R0, R1;
  return (((Shen.empty$question$(Arg4084_0) && Shen.empty$question$(Arg4084_2)))
  ? Arg4084_5
  : (((Shen.is_type(Arg4084_0, Shen.type_cons) && (Shen.empty$question$(Arg4084_0[2]) && (Shen.is_type(Arg4084_2, Shen.type_cons) && Shen.empty$question$(Arg4084_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4084_0[1], Arg4084_1, Arg4084_2[1], Arg4084_3, Arg4084_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4084_5, Shen.call(Shen.fns["reg-kl.remove-do"], [R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do-aux"], [[], Arg4084_1, [], Arg4084_3, Arg4084_4, R0]);}))
  : (((Shen.is_type(Arg4084_0, Shen.type_cons) && (Shen.is_type(Arg4084_2, Shen.type_cons) && Shen.is_type(Arg4084_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4084_0[1], Arg4084_1, Arg4084_2[1], Arg4084_2[2][1], Arg4084_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4084_5, Shen.call(Shen.fns["reg-kl.remove-do"], [R0])])),
  (R1 = Arg4084_2[2]),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do-aux"], [Arg4084_0[2], Arg4084_1, R1, Arg4084_3, Arg4084_4, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-do-aux"]]);}))))}, 6, [], "reg-kl.walk-do-aux"];





Shen.fns["reg-kl.walk-do"] = [Shen.type_func, function shen_user_lambda4092(Arg4091) {
  if (Arg4091.length < 5) return [Shen.type_func, shen_user_lambda4092, 5, Arg4091];
  var Arg4091_0 = Arg4091[0], Arg4091_1 = Arg4091[1], Arg4091_2 = Arg4091[2], Arg4091_3 = Arg4091[3], Arg4091_4 = Arg4091[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-cascade"], [Arg4091_0, Arg4091_1, Arg4091_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-do-aux"], [Arg4091_0, Arg4091_1, R0, Arg4091_3, Arg4091_4, []])),
  [Shen.type_cons, [Shen.type_symbol, "do"], R0])}, 5, [], "reg-kl.walk-do"];





Shen.fns["reg-kl.walk-apply-aux"] = [Shen.type_func, function shen_user_lambda4106(Arg4105) {
  if (Arg4105.length < 6) return [Shen.type_func, shen_user_lambda4106, 6, Arg4105];
  var Arg4105_0 = Arg4105[0], Arg4105_1 = Arg4105[1], Arg4105_2 = Arg4105[2], Arg4105_3 = Arg4105[3], Arg4105_4 = Arg4105[4], Arg4105_5 = Arg4105[5];
  var R0;
  return (((Shen.empty$question$(Arg4105_0) && Shen.empty$question$(Arg4105_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4105_5]);})
  : (((Shen.is_type(Arg4105_0, Shen.type_cons) && (Shen.empty$question$(Arg4105_0[2]) && (Shen.is_type(Arg4105_2, Shen.type_cons) && Shen.empty$question$(Arg4105_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4105_0[1], Arg4105_1, Arg4105_2[1], Arg4105_3, Arg4105_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [[], Arg4105_1, [], Arg4105_3, Arg4105_4, [Shen.type_cons, R0, Arg4105_5]]);}))
  : (((Shen.is_type(Arg4105_0, Shen.type_cons) && (Shen.is_type(Arg4105_2, Shen.type_cons) && Shen.is_type(Arg4105_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4105_0[1], Arg4105_1, Arg4105_2[1], Arg4105_2[2][1], Arg4105_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [Arg4105_0[2], Arg4105_1, Arg4105_2[2], Arg4105_3, Arg4105_4, [Shen.type_cons, R0, Arg4105_5]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-apply-aux"]]);}))))}, 6, [], "reg-kl.walk-apply-aux"];





Shen.fns["reg-kl.walk-apply"] = [Shen.type_func, function shen_user_lambda4113(Arg4112) {
  if (Arg4112.length < 5) return [Shen.type_func, shen_user_lambda4113, 5, Arg4112];
  var Arg4112_0 = Arg4112[0], Arg4112_1 = Arg4112[1], Arg4112_2 = Arg4112[2], Arg4112_3 = Arg4112[3], Arg4112_4 = Arg4112[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-cascade"], [Arg4112_0, Arg4112_1, Arg4112_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [Arg4112_0, Arg4112_1, R0, Arg4112_3, Arg4112_4, []]);}))}, 5, [], "reg-kl.walk-apply"];





Shen.fns["reg-kl.walk-if"] = [Shen.type_func, function shen_user_lambda4122(Arg4121) {
  if (Arg4121.length < 7) return [Shen.type_func, shen_user_lambda4122, 7, Arg4121];
  var Arg4121_0 = Arg4121[0], Arg4121_1 = Arg4121[1], Arg4121_2 = Arg4121[2], Arg4121_3 = Arg4121[3], Arg4121_4 = Arg4121[4], Arg4121_5 = Arg4121[5], Arg4121_6 = Arg4121[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4121_1, Arg4121_3, [], Arg4121_5])),
  (R1 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4121_2, Arg4121_3, [], Arg4121_5])),
  (R2 = Shen.call(Shen.fns["append"], [R0, R1])),
  (R2 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4121_0, Arg4121_3, Arg4121_4, R2, Arg4121_6])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4121_1, Arg4121_3, R0, Arg4121_5, Arg4121_6])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4121_2, Arg4121_3, R1, Arg4121_5, Arg4121_6])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R2, [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])}, 7, [], "reg-kl.walk-if"];





Shen.fns["reg-kl.walk-cond"] = [Shen.type_func, function shen_user_lambda4137(Arg4136) {
  if (Arg4136.length < 5) return [Shen.type_func, shen_user_lambda4137, 5, Arg4136];
  var Arg4136_0 = Arg4136[0], Arg4136_1 = Arg4136[1], Arg4136_2 = Arg4136[2], Arg4136_3 = Arg4136[3], Arg4136_4 = Arg4136[4];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4136_0))
  ? [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "error: cond failure", []]]
  : (((Shen.is_type(Arg4136_0, Shen.type_cons) && (Shen.is_type(Arg4136_0[1], Shen.type_cons) && (Shen.is_type(Arg4136_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4136_0[1][2][2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4136_0[1][2][1], Arg4136_1, [], Arg4136_3])),
  (R1 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4136_0[2], Arg4136_1, [], Arg4136_3])),
  (R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4136_0[1][1], Arg4136_1, [], Shen.call(Shen.fns["append"], [R0, R1])])),
  (R2 = Shen.call(Shen.fns["reg-kl.walk-cond"], [Arg4136_0[2], Arg4136_1, Arg4136_2, Arg4136_3, Arg4136_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-if"], [Arg4136_0[1][1], Arg4136_0[1][2][1], R2, Arg4136_1, R0, R1, Arg4136_4]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-cond"]]);})))}, 5, [], "reg-kl.walk-cond"];





Shen.fns["reg-kl.mk-closure-args-init"] = [Shen.type_func, function shen_user_lambda4144(Arg4143) {
  if (Arg4143.length < 3) return [Shen.type_func, shen_user_lambda4144, 3, Arg4143];
  var Arg4143_0 = Arg4143[0], Arg4143_1 = Arg4143[1], Arg4143_2 = Arg4143[2];
  var R0;
  return ((Shen.empty$question$(Arg4143_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4143_2]);})
  : ((Shen.is_type(Arg4143_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl.var-idx"], [Arg4143_0[1], Arg4143_1])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-closure-args-init"], [Arg4143_0[2], Arg4143_1, [Shen.type_cons, R0, Arg4143_2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-closure-args-init"]]);})))}, 3, [], "reg-kl.mk-closure-args-init"];





Shen.fns["reg-kl.mk-closure-env"] = [Shen.type_func, function shen_user_lambda4148(Arg4147) {
  if (Arg4147.length < 2) return [Shen.type_func, shen_user_lambda4148, 2, Arg4147];
  var Arg4147_0 = Arg4147[0], Arg4147_1 = Arg4147[1];
  return ((Shen.empty$question$(Arg4147_0))
  ? Arg4147_1
  : ((Shen.is_type(Arg4147_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-closure-env"], [Arg4147_0[2], [Shen.type_cons, [Shen.type_cons, Arg4147_0[1], Shen.call(Shen.fns["reg-kl.new-var-idx"], [Arg4147_0[1], Arg4147_1])], Arg4147_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-closure-env"]]);})))}, 2, [], "reg-kl.mk-closure-env"];





Shen.fns["reg-kl.mk-closure-list"] = [Shen.type_func, function shen_user_lambda4155(Arg4154) {
  if (Arg4154.length < 5) return [Shen.type_func, shen_user_lambda4155, 5, Arg4154];
  var Arg4154_0 = Arg4154[0], Arg4154_1 = Arg4154[1], Arg4154_2 = Arg4154[2], Arg4154_3 = Arg4154[3], Arg4154_4 = Arg4154[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-closure-env"], [Arg4154_3, []])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-args-init"], [Arg4154_3, Arg4154_2, []])),
  (R0 = Shen.call(Shen.fns["reg-kl.mk-function-kl"], [Arg4154_0, Arg4154_1, R0, Arg4154_4])),
  [Shen.type_cons, R1, [Shen.type_cons, R0, []]])}, 5, [], "reg-kl.mk-closure-list"];





Shen.fns["reg-kl.walk-lambda-aux"] = [Shen.type_func, function shen_user_lambda4163(Arg4162) {
  if (Arg4162.length < 6) return [Shen.type_func, shen_user_lambda4163, 6, Arg4162];
  var Arg4162_0 = Arg4162[0], Arg4162_1 = Arg4162[1], Arg4162_2 = Arg4162[2], Arg4162_3 = Arg4162[3], Arg4162_4 = Arg4162[4], Arg4162_5 = Arg4162[5];
  var R0, R1;
  return (((Shen.is_type(Arg4162_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4162_1[1])) && (Shen.is_type(Arg4162_1[2], Shen.type_cons) && (Shen.is_type(Arg4162_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg4162_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-lambda-aux"], [Arg4162_1[2][1], Arg4162_1[2][2][1], [Shen.type_cons, Arg4162_0, Arg4162_2], Arg4162_3, Arg4162_4, Arg4162_5]);})
  : ((R0 = Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4162_0, Arg4162_2]])),
  (R1 = Shen.call(Shen.fns["append"], [Arg4162_4, Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4162_0, R0]])])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-list"], [R1, Arg4162_1, Arg4162_3, Arg4162_4, Arg4162_5])),
  [Shen.type_cons, [Shen.type_symbol, "shen-mk-closure"], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [Arg4162_5]), R1]]]))}, 6, [], "reg-kl.walk-lambda-aux"];





Shen.fns["reg-kl.walk-lambda"] = [Shen.type_func, function shen_user_lambda4170(Arg4169) {
  if (Arg4169.length < 5) return [Shen.type_func, shen_user_lambda4170, 5, Arg4169];
  var Arg4169_0 = Arg4169[0], Arg4169_1 = Arg4169[1], Arg4169_2 = Arg4169[2], Arg4169_3 = Arg4169[3], Arg4169_4 = Arg4169[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [[Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg4169_0, [Shen.type_cons, Arg4169_1, []]]], Arg4169_3])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4169_4]), 0])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-lambda-aux"], [Arg4169_0, Arg4169_1, Arg4169_2, Arg4169_3, R0, R1])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4169_4, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R1])]),
  R0)}, 5, [], "reg-kl.walk-lambda"];





Shen.fns["reg-kl.walk-freeze"] = [Shen.type_func, function shen_user_lambda4176(Arg4175) {
  if (Arg4175.length < 4) return [Shen.type_func, shen_user_lambda4176, 4, Arg4175];
  var Arg4175_0 = Arg4175[0], Arg4175_1 = Arg4175[1], Arg4175_2 = Arg4175[2], Arg4175_3 = Arg4175[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4175_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-list"], [Arg4175_2, Arg4175_0, Arg4175_1, Arg4175_2, R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4175_3, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "shen-mk-freeze"], [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [R0]), R1]])}, 4, [], "reg-kl.walk-freeze"];





Shen.fns["reg-kl.lift-defun"] = [Shen.type_func, function shen_user_lambda4182(Arg4181) {
  if (Arg4181.length < 4) return [Shen.type_func, shen_user_lambda4182, 4, Arg4181];
  var Arg4181_0 = Arg4181[0], Arg4181_1 = Arg4181[1], Arg4181_2 = Arg4181[2], Arg4181_3 = Arg4181[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4181_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-kl"], [Arg4181_0, Arg4181_1, Arg4181_2, [], R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4181_3, [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]]),
  [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, Arg4181_0, []]])}, 4, [], "reg-kl.lift-defun"];





Shen.fns["reg-kl.walk-expr"] = [Shen.type_func, function shen_user_lambda4220(Arg4219) {
  if (Arg4219.length < 5) return [Shen.type_func, shen_user_lambda4220, 5, Arg4219];
  var Arg4219_0 = Arg4219[0], Arg4219_1 = Arg4219[1], Arg4219_2 = Arg4219[2], Arg4219_3 = Arg4219[3], Arg4219_4 = Arg4219[4];
  return (((Shen.is_type(Arg4219_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4219_0[1])) && (Shen.is_type(Arg4219_0[2], Shen.type_cons) && (Shen.is_type(Arg4219_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4219_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4219_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-let"], [Arg4219_0[2][1], Arg4219_0[2][2][1], Arg4219_0[2][2][2][1], Arg4219_1, Arg4219_2, Arg4219_3, Arg4219_4]);})
  : (((Shen.is_type(Arg4219_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4219_0[1])) && (Shen.is_type(Arg4219_0[2], Shen.type_cons) && (Shen.is_type(Arg4219_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4219_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4219_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-if"], [Arg4219_0[2][1], Arg4219_0[2][2][1], Arg4219_0[2][2][2][1], Arg4219_1, Arg4219_2, Arg4219_3, Arg4219_4]);})
  : (((Shen.is_type(Arg4219_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg4219_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-cond"], [Arg4219_0[2], Arg4219_1, Arg4219_2, Arg4219_3, Arg4219_4]);})
  : (((Shen.is_type(Arg4219_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4219_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do"], [Arg4219_0[2], Arg4219_1, Arg4219_2, Arg4219_3, Arg4219_4]);})
  : (((Shen.is_type(Arg4219_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4219_0[1])) && (Shen.is_type(Arg4219_0[2], Shen.type_cons) && (Shen.is_type(Arg4219_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4219_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-lambda"], [Arg4219_0[2][1], Arg4219_0[2][2][1], [], Arg4219_1, Arg4219_4]);})
  : (((Shen.is_type(Arg4219_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg4219_0[1])) && (Shen.is_type(Arg4219_0[2], Shen.type_cons) && Shen.empty$question$(Arg4219_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-freeze"], [Arg4219_0[2][1], Arg4219_1, Arg4219_2, Arg4219_4]);})
  : (((Shen.is_type(Arg4219_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4219_0[1])) && (Shen.is_type(Arg4219_0[2], Shen.type_cons) && (Shen.is_type(Arg4219_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4219_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4219_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.lift-defun"], [Arg4219_0[2][1], Arg4219_0[2][2][1], Arg4219_0[2][2][2][1], Arg4219_4]);})
  : ((Shen.is_type(Arg4219_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply"], [Arg4219_0, Arg4219_1, Arg4219_2, Arg4219_3, Arg4219_4]);})
  : (((Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg4219_0, Arg4219_1]) && Shen.is_type(Arg4219_0, Shen.type_symbol)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl.var-idx"], [Arg4219_0, Arg4219_1])]);})
  : Arg4219_0)))))))))}, 5, [], "reg-kl.walk-expr"];





Shen.fns["reg-kl.mk-defun-env"] = [Shen.type_func, function shen_user_lambda4225(Arg4224) {
  if (Arg4224.length < 3) return [Shen.type_func, shen_user_lambda4225, 3, Arg4224];
  var Arg4224_0 = Arg4224[0], Arg4224_1 = Arg4224[1], Arg4224_2 = Arg4224[2];
  return ((Shen.empty$question$(Arg4224_0))
  ? Arg4224_2
  : ((Shen.is_type(Arg4224_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-defun-env"], [Arg4224_0[2], (Arg4224_1 - 1), [Shen.type_cons, [Shen.type_cons, Arg4224_0[1], Arg4224_1], Arg4224_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-defun-env"]]);})))}, 3, [], "reg-kl.mk-defun-env"];





Shen.fns["reg-kl.mk-function-kl"] = [Shen.type_func, function shen_user_lambda4231(Arg4230) {
  if (Arg4230.length < 4) return [Shen.type_func, shen_user_lambda4231, 4, Arg4230];
  var Arg4230_0 = Arg4230[0], Arg4230_1 = Arg4230[1], Arg4230_2 = Arg4230[2], Arg4230_3 = Arg4230[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.remove-duplicates"], [Arg4230_0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-env"], [R0, -1, Arg4230_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [Arg4230_1, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-expr"], [Arg4230_1, R1, R0, [], Arg4230_3]);}))}, 4, [], "reg-kl.mk-function-kl"];





Shen.fns["reg-kl.mk-defun-kl"] = [Shen.type_func, function shen_user_lambda4238(Arg4237) {
  if (Arg4237.length < 5) return [Shen.type_func, shen_user_lambda4238, 5, Arg4237];
  var Arg4237_0 = Arg4237[0], Arg4237_1 = Arg4237[1], Arg4237_2 = Arg4237[2], Arg4237_3 = Arg4237[3], Arg4237_4 = Arg4237[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4237_4]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-function-kl"], [Arg4237_1, Arg4237_2, Arg4237_3, R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4237_4, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "shen-mk-func"], [Shen.type_cons, Arg4237_0, [Shen.type_cons, Arg4237_1, [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [R0]), [Shen.type_cons, R1, []]]]]])}, 5, [], "reg-kl.mk-defun-kl"];





Shen.fns["reg-kl.walk-toplevel"] = [Shen.type_func, function shen_user_lambda4245(Arg4244) {
  if (Arg4244.length < 3) return [Shen.type_func, shen_user_lambda4245, 3, Arg4244];
  var Arg4244_0 = Arg4244[0], Arg4244_1 = Arg4244[1], Arg4244_2 = Arg4244[2];
  var R0, R1;
  return (((Shen.is_type(Arg4244_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4244_0[1])) && (Shen.is_type(Arg4244_0[2], Shen.type_cons) && (Shen.is_type(Arg4244_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4244_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4244_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Arg4244_2, 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-kl"], [Arg4244_0[2][1], Arg4244_0[2][2][1], Arg4244_0[2][2][2][1], [], R0])),
  [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])])
  : ((Shen.is_type(Arg4244_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "reg-kl.shen-toplevel-"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, [], [Shen.type_cons, Arg4244_0, []]]]]),
  [Shen.type_cons, [Shen.type_cons, R0, []], Shen.call(Shen.fns["reg-kl.walk-toplevel"], [R1, Arg4244_1, Arg4244_2])])
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4244_1)))
  ? Arg4244_2
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4244_1)))
  ? [Shen.type_cons, Arg4244_0, Arg4244_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-toplevel"]]);})))))}, 3, [], "reg-kl.walk-toplevel"];





Shen.fns["reg-kl.walk-aux"] = [Shen.type_func, function shen_user_lambda4252(Arg4251) {
  if (Arg4251.length < 3) return [Shen.type_func, shen_user_lambda4252, 3, Arg4251];
  var Arg4251_0 = Arg4251[0], Arg4251_1 = Arg4251[1], Arg4251_2 = Arg4251[2];
  return ((Shen.empty$question$(Arg4251_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4251_2]);})
  : ((Shen.is_type(Arg4251_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-aux"], [Arg4251_0[2], Arg4251_1, Shen.call(Shen.fns["reg-kl.walk-toplevel"], [Arg4251_0[1], Arg4251_1, Arg4251_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-aux"]]);})))}, 3, [], "reg-kl.walk-aux"];





Shen.fns["reg-kl.walk"] = [Shen.type_func, function shen_user_lambda4256(Arg4255) {
  if (Arg4255.length < 2) return [Shen.type_func, shen_user_lambda4256, 2, Arg4255];
  var Arg4255_0 = Arg4255[0], Arg4255_1 = Arg4255[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-aux"], [Arg4255_0, Arg4255_1, []]);})}, 2, [], "reg-kl.walk"];





Shen.fns["reg-kl.shen-toplevel-4856"] = [Shen.type_func, function shen_user_lambda4857(Arg4855) {
  if (Arg4855.length < 0) return [Shen.type_func, shen_user_lambda4857, 0, Arg4855];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "js.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})}, 0, [], "reg-kl.shen-toplevel-4856"];

Shen.call_toplevel("reg-kl.shen-toplevel-4856")





Shen.fns["js.mk-context"] = [Shen.type_func, function shen_user_lambda4863(Arg4862) {
  if (Arg4862.length < 4) return [Shen.type_func, shen_user_lambda4863, 4, Arg4862];
  var Arg4862_0 = Arg4862[0], Arg4862_1 = Arg4862[1], Arg4862_2 = Arg4862[2], Arg4862_3 = Arg4862[3];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg4862_0, Shen.call(Shen.fns["@v"], [Arg4862_1, Shen.call(Shen.fns["@v"], [Arg4862_2, Shen.call(Shen.fns["@v"], [Arg4862_3, Shen.vector(0)])])])]);})}, 4, [], "js.mk-context"];





Shen.fns["js.context-varname->"] = [Shen.type_func, function shen_user_lambda4867(Arg4866) {
  if (Arg4866.length < 2) return [Shen.type_func, shen_user_lambda4867, 2, Arg4866];
  var Arg4866_0 = Arg4866[0], Arg4866_1 = Arg4866[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4866_0, 4, Arg4866_1]);})}, 2, [], "js.context-varname->"];





Shen.fns["js.context-argname->"] = [Shen.type_func, function shen_user_lambda4871(Arg4870) {
  if (Arg4870.length < 2) return [Shen.type_func, shen_user_lambda4871, 2, Arg4870];
  var Arg4870_0 = Arg4870[0], Arg4870_1 = Arg4870[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4870_0, 3, Arg4870_1]);})}, 2, [], "js.context-argname->"];





Shen.fns["js.context-toplevel->"] = [Shen.type_func, function shen_user_lambda4875(Arg4874) {
  if (Arg4874.length < 2) return [Shen.type_func, shen_user_lambda4875, 2, Arg4874];
  var Arg4874_0 = Arg4874[0], Arg4874_1 = Arg4874[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4874_0, 2, Arg4874_1]);})}, 2, [], "js.context-toplevel->"];





Shen.fns["js.context-nregs->"] = [Shen.type_func, function shen_user_lambda4879(Arg4878) {
  if (Arg4878.length < 2) return [Shen.type_func, shen_user_lambda4879, 2, Arg4878];
  var Arg4878_0 = Arg4878[0], Arg4878_1 = Arg4878[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4878_0, 1, Arg4878_1]);})}, 2, [], "js.context-nregs->"];





Shen.fns["js.context-varname"] = [Shen.type_func, function shen_user_lambda4882(Arg4881) {
  if (Arg4881.length < 1) return [Shen.type_func, shen_user_lambda4882, 1, Arg4881];
  var Arg4881_0 = Arg4881[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4881_0, 4]);})}, 1, [], "js.context-varname"];





Shen.fns["js.context-argname"] = [Shen.type_func, function shen_user_lambda4885(Arg4884) {
  if (Arg4884.length < 1) return [Shen.type_func, shen_user_lambda4885, 1, Arg4884];
  var Arg4884_0 = Arg4884[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4884_0, 3]);})}, 1, [], "js.context-argname"];





Shen.fns["js.context-toplevel"] = [Shen.type_func, function shen_user_lambda4888(Arg4887) {
  if (Arg4887.length < 1) return [Shen.type_func, shen_user_lambda4888, 1, Arg4887];
  var Arg4887_0 = Arg4887[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4887_0, 2]);})}, 1, [], "js.context-toplevel"];





Shen.fns["js.context-nregs"] = [Shen.type_func, function shen_user_lambda4891(Arg4890) {
  if (Arg4890.length < 1) return [Shen.type_func, shen_user_lambda4891, 1, Arg4890];
  var Arg4890_0 = Arg4890[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4890_0, 1]);})}, 1, [], "js.context-nregs"];





Shen.fns["js.max"] = [Shen.type_func, function shen_user_lambda4899(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4899, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (((Arg4898_0 > Arg4898_1))
  ? Arg4898_0
  : Arg4898_1)}, 2, [], "js.max"];





Shen.fns["js.str-js-from-shen*"] = [Shen.type_func, function shen_user_lambda4903(Arg4902) {
  if (Arg4902.length < 2) return [Shen.type_func, shen_user_lambda4903, 2, Arg4902];
  var Arg4902_0 = Arg4902[0], Arg4902_1 = Arg4902[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg4902_0)))
  ? Arg4902_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("-", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("_", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("$", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("'", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$quote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("`", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$bquote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("/", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$slash$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("*", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$asterisk$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("+", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$plus$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("%", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$percent$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("=", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$eq$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("?", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$question$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("!", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$excl$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$(">", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$gt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("<", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$lt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$(".", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$dot$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("|", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$bar$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("#", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$sharp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("~", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$tilde$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$(":", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$colon$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$(";", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$sc$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("@", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$at$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("&", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$amp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("{", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$cbraceopen$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]) && Shen.unwind_tail(Shen.$eq$("}", Arg4902_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + "$cbraceclose$")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg4902_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4902_0), (Arg4902_1 + Arg4902_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-js-from-shen*"]]);})))))))))))))))))))))))))))}, 2, [], "js.str-js-from-shen*"];





Shen.fns["js.str-js-from-shen"] = [Shen.type_func, function shen_user_lambda4906(Arg4905) {
  if (Arg4905.length < 1) return [Shen.type_func, shen_user_lambda4906, 1, Arg4905];
  var Arg4905_0 = Arg4905[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Arg4905_0, ""]);})}, 1, [], "js.str-js-from-shen"];





Shen.fns["js.sym-js-from-shen"] = [Shen.type_func, function shen_user_lambda4909(Arg4908) {
  if (Arg4908.length < 1) return [Shen.type_func, shen_user_lambda4909, 1, Arg4908];
  var Arg4908_0 = Arg4908[0];
  return (function() {
  return Shen.intern(Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg4908_0)]));})}, 1, [], "js.sym-js-from-shen"];





Shen.fns["js.backslash"] = [Shen.type_func, function shen_user_lambda4911(Arg4910) {
  if (Arg4910.length < 0) return [Shen.type_func, shen_user_lambda4911, 0, Arg4910];
  return (function() {
  return Shen.n_$gt$string(92);})}, 0, [], "js.backslash"];





Shen.fns["js.dquote"] = [Shen.type_func, function shen_user_lambda4913(Arg4912) {
  if (Arg4912.length < 0) return [Shen.type_func, shen_user_lambda4913, 0, Arg4912];
  return (function() {
  return Shen.n_$gt$string(34);})}, 0, [], "js.dquote"];





Shen.fns["js.esc-string"] = [Shen.type_func, function shen_user_lambda4917(Arg4916) {
  if (Arg4916.length < 2) return [Shen.type_func, shen_user_lambda4917, 2, Arg4916];
  var Arg4916_0 = Arg4916[0], Arg4916_1 = Arg4916[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg4916_0)))
  ? Arg4916_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4916_0]) && (Shen.unwind_tail(Shen.$eq$(Arg4916_0[0], Shen.call(Shen.fns["js.backslash"], []))) || Shen.unwind_tail(Shen.$eq$(Arg4916_0[0], Shen.call(Shen.fns["js.dquote"], []))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4916_0), (Arg4916_1 + (Shen.call(Shen.fns["js.backslash"], []) + Arg4916_0[0]))]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4916_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg4916_0[0]), 10))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4916_0), (Arg4916_1 + "\\x0a")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4916_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg4916_0[0]), 13))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4916_0), (Arg4916_1 + "\\x0d")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg4916_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4916_0), (Arg4916_1 + Arg4916_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.esc-string"]]);}))))))}, 2, [], "js.esc-string"];





Shen.fns["js.func-name"] = [Shen.type_func, function shen_user_lambda4920(Arg4919) {
  if (Arg4919.length < 1) return [Shen.type_func, shen_user_lambda4920, 1, Arg4919];
  var Arg4919_0 = Arg4919[0];
  return ((Shen.is_type(Arg4919_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4919_0]);})
  : Arg4919_0)}, 1, [], "js.func-name"];





Shen.fns["js.intfunc-name"] = [Shen.type_func, function shen_user_lambda4923(Arg4922) {
  if (Arg4922.length < 1) return [Shen.type_func, shen_user_lambda4923, 1, Arg4922];
  var Arg4922_0 = Arg4922[0];
  return (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg4922_0]) || (Shen.globals["shen.*installing-kl*"])))
  ? (function() {
  return Shen.intern(("Shen." + Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg4922_0)])));})
  : ((Shen.is_type(Arg4922_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4922_0]);})
  : Arg4922_0))}, 1, [], "js.intfunc-name"];





Shen.fns["reg-kl.shen-toplevel-4925"] = [Shen.type_func, function shen_user_lambda4926(Arg4924) {
  if (Arg4924.length < 0) return [Shen.type_func, shen_user_lambda4926, 0, Arg4924];
  return (Shen.globals["js.int-funcs"] = [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], []], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], []]], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "pr"], []]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]], []]]])}, 0, [], "reg-kl.shen-toplevel-4925"];

Shen.call_toplevel("reg-kl.shen-toplevel-4925")





Shen.fns["reg-kl.shen-toplevel-4928"] = [Shen.type_func, function shen_user_lambda4929(Arg4927) {
  if (Arg4927.length < 0) return [Shen.type_func, shen_user_lambda4929, 0, Arg4927];
  return (Shen.globals["js.internals"] = [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "js.write-byte"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]])}, 0, [], "reg-kl.shen-toplevel-4928"];

Shen.call_toplevel("reg-kl.shen-toplevel-4928")





Shen.fns["reg-kl.shen-toplevel-4931"] = [Shen.type_func, function shen_user_lambda4932(Arg4930) {
  if (Arg4930.length < 0) return [Shen.type_func, shen_user_lambda4932, 0, Arg4930];
  return (Shen.globals["js.tail-internals"] = [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]])}, 0, [], "reg-kl.shen-toplevel-4931"];

Shen.call_toplevel("reg-kl.shen-toplevel-4931")





Shen.fns["js.int-func-args*"] = [Shen.type_func, function shen_user_lambda4944(Arg4943) {
  if (Arg4943.length < 2) return [Shen.type_func, shen_user_lambda4944, 2, Arg4943];
  var Arg4943_0 = Arg4943[0], Arg4943_1 = Arg4943[1];
  return ((Shen.empty$question$(Arg4943_1))
  ? []
  : (((Shen.is_type(Arg4943_1, Shen.type_cons) && (Shen.is_type(Arg4943_1[1], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg4943_0, Arg4943_1[1][2]]))))
  ? Arg4943_1[1][1]
  : (((Shen.is_type(Arg4943_1, Shen.type_cons) && Shen.is_type(Arg4943_1[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg4943_0, Arg4943_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-func-args*"]]);}))))}, 2, [], "js.int-func-args*"];





Shen.fns["js.int-func-args"] = [Shen.type_func, function shen_user_lambda4947(Arg4946) {
  if (Arg4946.length < 1) return [Shen.type_func, shen_user_lambda4947, 1, Arg4946];
  var Arg4946_0 = Arg4946[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg4946_0, (Shen.globals["js.int-funcs"])]);})}, 1, [], "js.int-func-args"];





Shen.fns["js.int-func?"] = [Shen.type_func, function shen_user_lambda4950(Arg4949) {
  if (Arg4949.length < 1) return [Shen.type_func, shen_user_lambda4950, 1, Arg4949];
  var Arg4949_0 = Arg4949[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg4949_0)))
  ? true
  : (!Shen.empty$question$(Shen.call(Shen.fns["js.int-func-args"], [Arg4949_0]))))}, 1, [], "js.int-func?"];





Shen.fns["js.esc-obj"] = [Shen.type_func, function shen_user_lambda4953(Arg4952) {
  if (Arg4952.length < 1) return [Shen.type_func, shen_user_lambda4953, 1, Arg4952];
  var Arg4952_0 = Arg4952[0];
  return (((typeof(Arg4952_0) == 'string'))
  ? ("\"" + (Shen.call(Shen.fns["js.esc-string"], [Arg4952_0, ""]) + "\""))
  : ((Shen.is_type(Arg4952_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4952_0]);})
  : (function() {
  return Shen.simple_error(("Object " + Shen.call(Shen.fns["shen.app"], [Arg4952_0, " cannot be escaped", [Shen.type_symbol, "shen.r"]])));})))}, 1, [], "js.esc-obj"];





Shen.fns["js.str-join*"] = [Shen.type_func, function shen_user_lambda4958(Arg4957) {
  if (Arg4957.length < 3) return [Shen.type_func, shen_user_lambda4958, 3, Arg4957];
  var Arg4957_0 = Arg4957[0], Arg4957_1 = Arg4957[1], Arg4957_2 = Arg4957[2];
  return ((Shen.empty$question$(Arg4957_0))
  ? Arg4957_2
  : (((Shen.is_type(Arg4957_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("", Arg4957_2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4957_0[2], Arg4957_1, Shen.call(Shen.fns["shen.app"], [Arg4957_0[1], "", [Shen.type_symbol, "shen.a"]])]);})
  : ((Shen.is_type(Arg4957_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4957_0[2], Arg4957_1, (Arg4957_2 + (Arg4957_1 + Shen.call(Shen.fns["shen.app"], [Arg4957_0[1], "", [Shen.type_symbol, "shen.a"]])))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-join*"]]);}))))}, 3, [], "js.str-join*"];





Shen.fns["js.str-join"] = [Shen.type_func, function shen_user_lambda4962(Arg4961) {
  if (Arg4961.length < 2) return [Shen.type_func, shen_user_lambda4962, 2, Arg4961];
  var Arg4961_0 = Arg4961[0], Arg4961_1 = Arg4961[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4961_0, Arg4961_1, ""]);})}, 2, [], "js.str-join"];





Shen.fns["js.arg-list"] = [Shen.type_func, function shen_user_lambda4965(Arg4964) {
  if (Arg4964.length < 1) return [Shen.type_func, shen_user_lambda4965, 1, Arg4964];
  var Arg4964_0 = Arg4964[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join"], [Arg4964_0, ", "]);})}, 1, [], "js.arg-list"];





Shen.fns["js.arg-name"] = [Shen.type_func, function shen_user_lambda4969(Arg4968) {
  if (Arg4968.length < 2) return [Shen.type_func, shen_user_lambda4969, 2, Arg4968];
  var Arg4968_0 = Arg4968[0], Arg4968_1 = Arg4968[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg4968_1]), ("_" + Shen.call(Shen.fns["shen.app"], [Arg4968_0, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.arg-name"];





Shen.fns["js.tail-call-ret"] = [Shen.type_func, function shen_user_lambda4972(Arg4971) {
  if (Arg4971.length < 1) return [Shen.type_func, shen_user_lambda4972, 1, Arg4971];
  var Arg4971_0 = Arg4971[0];
  return ("(function() {\x0a  return " + Shen.call(Shen.fns["shen.app"], [Arg4971_0, ";})", [Shen.type_symbol, "shen.a"]]))}, 1, [], "js.tail-call-ret"];





Shen.fns["js.tail-call-expr"] = [Shen.type_func, function shen_user_lambda4976(Arg4975) {
  if (Arg4975.length < 2) return [Shen.type_func, shen_user_lambda4976, 2, Arg4975];
  var Arg4975_0 = Arg4975[0], Arg4975_1 = Arg4975[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg4975_0, false, Arg4975_1]);})}, 2, [], "js.tail-call-expr"];





Shen.fns["js.cond-case"] = [Shen.type_func, function shen_user_lambda4980(Arg4979) {
  if (Arg4979.length < 2) return [Shen.type_func, shen_user_lambda4980, 2, Arg4979];
  var Arg4979_0 = Arg4979[0], Arg4979_1 = Arg4979[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-expr"], [Arg4979_0, Arg4979_1]);})}, 2, [], "js.cond-case"];





Shen.fns["js.emit-cond*"] = [Shen.type_func, function shen_user_lambda4985(Arg4984) {
  if (Arg4984.length < 3) return [Shen.type_func, shen_user_lambda4985, 3, Arg4984];
  var Arg4984_0 = Arg4984[0], Arg4984_1 = Arg4984[1], Arg4984_2 = Arg4984[2];
  return ((Shen.empty$question$(Arg4984_0))
  ? (function() {
  return Shen.simple_error("cond failure: no default branch");})
  : (((Shen.is_type(Arg4984_0, Shen.type_cons) && (Shen.is_type(Arg4984_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg4984_0[1][1])) && (Shen.is_type(Arg4984_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4984_0[1][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg4984_0[1][2][1], Arg4984_1, Arg4984_2]);})
  : (((Shen.is_type(Arg4984_0, Shen.type_cons) && (Shen.is_type(Arg4984_0[1], Shen.type_cons) && (Shen.is_type(Arg4984_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4984_0[1][2][2])))))
  ? ("((" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.cond-case"], [Arg4984_0[1][1], Arg4984_2]), (")\x0a  ? " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg4984_0[1][2][1], Arg4984_1, Arg4984_2]), ("\x0a  : " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-cond*"], [Arg4984_0[2], Arg4984_1, Arg4984_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-cond*"]]);}))))}, 3, [], "js.emit-cond*"];





Shen.fns["js.emit-cond"] = [Shen.type_func, function shen_user_lambda4990(Arg4989) {
  if (Arg4989.length < 3) return [Shen.type_func, shen_user_lambda4990, 3, Arg4989];
  var Arg4989_0 = Arg4989[0], Arg4989_1 = Arg4989[1], Arg4989_2 = Arg4989[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond*"], [Arg4989_0, Arg4989_1, Arg4989_2]);})}, 3, [], "js.emit-cond"];





Shen.fns["js.emit-trap-error"] = [Shen.type_func, function shen_user_lambda4996(Arg4995) {
  if (Arg4995.length < 4) return [Shen.type_func, shen_user_lambda4996, 4, Arg4995];
  var Arg4995_0 = Arg4995[0], Arg4995_1 = Arg4995[1], Arg4995_2 = Arg4995[2], Arg4995_3 = Arg4995[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg4995_2)))
  ? ((R0 = ("function() {return " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg4995_0, false, Arg4995_3]), ";}", [Shen.type_symbol, "shen.a"]]))),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg4995_1, false, Arg4995_3])),
  ("Shen.trap_error(" + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4995_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.emit-trap-error"], [Arg4995_0, Arg4995_1, false, Arg4995_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-trap-error"]]);})))}, 4, [], "js.emit-trap-error"];





Shen.fns["js.predicate-op"] = [Shen.type_func, function shen_user_lambda5040(Arg5039) {
  if (Arg5039.length < 4) return [Shen.type_func, shen_user_lambda5040, 4, Arg5039];
  var Arg5039_0 = Arg5039[0], Arg5039_1 = Arg5039[1], Arg5039_2 = Arg5039[2], Arg5039_3 = Arg5039[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5039_0)) && (typeof(Arg5039_1) == 'number')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5039_0)) && (typeof(Arg5039_1) == 'string')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5039_0)) && Shen.unwind_tail(Shen.$eq$(true, Arg5039_1))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5039_0)) && Shen.unwind_tail(Shen.$eq$(false, Arg5039_1))))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5039_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, Arg5039_1, []], Arg5039_2, Arg5039_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5039_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5039_1, false, Arg5039_3]), ") == 'string')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5039_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5039_1, false, Arg5039_3]), ") == 'number')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol?"], Arg5039_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5039_1, false, Arg5039_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_symbol", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons?"], Arg5039_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5039_1, false, Arg5039_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_cons", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tuple?"], Arg5039_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5039_1, false, Arg5039_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.fns['shen.tuple']", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector?"], Arg5039_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, Arg5039_1, []], Arg5039_2, Arg5039_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "empty?"], Arg5039_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5039_1, []], Arg5039_2, Arg5039_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "absvector?"], Arg5039_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, Arg5039_1, []], Arg5039_2, Arg5039_3]);})
  : Shen.fail_obj)))))))))))))}, 4, [], "js.predicate-op"];





Shen.fns["js.math-op"] = [Shen.type_func, function shen_user_lambda5070(Arg5069) {
  if (Arg5069.length < 4) return [Shen.type_func, shen_user_lambda5070, 4, Arg5069];
  var Arg5069_0 = Arg5069[0], Arg5069_1 = Arg5069[1], Arg5069_2 = Arg5069[2], Arg5069_3 = Arg5069[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5069_0)) && (Shen.is_type(Arg5069_1, Shen.type_cons) && (Shen.is_type(Arg5069_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5069_1[2][2]) && ((typeof(Arg5069_1[1]) == 'number') && (typeof(Arg5069_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5069_1[1] + Arg5069_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5069_0)) && (Shen.is_type(Arg5069_1, Shen.type_cons) && (Shen.is_type(Arg5069_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5069_1[2][2]) && ((typeof(Arg5069_1[1]) == 'number') && (typeof(Arg5069_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5069_1[1] - Arg5069_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5069_0)) && (Shen.is_type(Arg5069_1, Shen.type_cons) && (Shen.is_type(Arg5069_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5069_1[2][2]) && ((typeof(Arg5069_1[1]) == 'number') && (typeof(Arg5069_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5069_1[1] * Arg5069_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/"], Arg5069_0)) && (Shen.is_type(Arg5069_1, Shen.type_cons) && (Shen.is_type(Arg5069_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5069_1[2][2]) && ((typeof(Arg5069_1[1]) == 'number') && (typeof(Arg5069_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5069_1[1] / Arg5069_1[2][1]));})
  : (((Shen.is_type(Arg5069_1, Shen.type_cons) && (Shen.is_type(Arg5069_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5069_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5069_0, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], []]]]]])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5069_1[1], false, Arg5069_3]), (" " + Shen.call(Shen.fns["shen.app"], [Arg5069_0, (" " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5069_1[2][1], false, Arg5069_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))}, 4, [], "js.math-op"];





Shen.fns["js.equality-op"] = [Shen.type_func, function shen_user_lambda5093(Arg5092) {
  if (Arg5092.length < 3) return [Shen.type_func, shen_user_lambda5093, 3, Arg5092];
  var Arg5092_0 = Arg5092[0], Arg5092_1 = Arg5092[1], Arg5092_2 = Arg5092[2];
  return (((Shen.is_type(Arg5092_0, Shen.type_cons) && (Shen.is_type(Arg5092_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5092_0[2][2]) && ((typeof(Arg5092_0[1]) == 'number') && (typeof(Arg5092_0[2][1]) == 'number'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5092_0[1], Arg5092_0[2][1])));})
  : (((Shen.is_type(Arg5092_0, Shen.type_cons) && (Shen.is_type(Arg5092_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5092_0[2][2]) && ((typeof(Arg5092_0[1]) == 'string') && (typeof(Arg5092_0[2][1]) == 'string'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5092_0[1], Arg5092_0[2][1])));})
  : (((Shen.is_type(Arg5092_0, Shen.type_cons) && (Shen.is_type(Arg5092_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5092_0[2][2]) && (Shen.boolean$question$(Arg5092_0[1]) && Shen.boolean$question$(Arg5092_0[2][1]))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5092_0[1], Arg5092_0[2][1])));})
  : (((Shen.is_type(Arg5092_0, Shen.type_cons) && (Shen.is_type(Arg5092_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5092_0[2][1]) && Shen.empty$question$(Arg5092_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5092_0[1], []], Arg5092_1, Arg5092_2]);})
  : (((Shen.is_type(Arg5092_0, Shen.type_cons) && (Shen.empty$question$(Arg5092_0[1]) && (Shen.is_type(Arg5092_0[2], Shen.type_cons) && Shen.empty$question$(Arg5092_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], Arg5092_0[2], Arg5092_1, Arg5092_2]);})
  : (((Shen.is_type(Arg5092_0, Shen.type_cons) && (Shen.is_type(Arg5092_0[2], Shen.type_cons) && Shen.empty$question$(Arg5092_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "="], Arg5092_0, Arg5092_1, Arg5092_2]);})
  : Shen.fail_obj))))))}, 3, [], "js.equality-op"];





Shen.fns["js.order-op"] = [Shen.type_func, function shen_user_lambda5116(Arg5115) {
  if (Arg5115.length < 4) return [Shen.type_func, shen_user_lambda5116, 4, Arg5115];
  var Arg5115_0 = Arg5115[0], Arg5115_1 = Arg5115[1], Arg5115_2 = Arg5115[2], Arg5115_3 = Arg5115[3];
  var R0, R1;
  return (((Shen.is_type(Arg5115_1, Shen.type_cons) && (Shen.is_type(Arg5115_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5115_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5115_0, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<="], []]]]]])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5115_1[1], false, Arg5115_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5115_1[2][1], false, Arg5115_3])),
  ("(" + Shen.call(Shen.fns["shen.app"], [R0, (" " + Shen.call(Shen.fns["shen.app"], [Arg5115_0, (" " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : Shen.fail_obj)}, 4, [], "js.order-op"];





Shen.fns["js.logic-op"] = [Shen.type_func, function shen_user_lambda5160(Arg5159) {
  if (Arg5159.length < 4) return [Shen.type_func, shen_user_lambda5160, 4, Arg5159];
  var Arg5159_0 = Arg5159[0], Arg5159_1 = Arg5159[1], Arg5159_2 = Arg5159[2], Arg5159_3 = Arg5159[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5159_0)) && (Shen.is_type(Arg5159_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5159_1[1])) && Shen.empty$question$(Arg5159_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5159_0)) && (Shen.is_type(Arg5159_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5159_1[1])) && Shen.empty$question$(Arg5159_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5159_0)) && (Shen.is_type(Arg5159_1, Shen.type_cons) && Shen.empty$question$(Arg5159_1[2]))))
  ? ("(!" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5159_1[1], false, Arg5159_3]), ")", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5159_0)) && (Shen.is_type(Arg5159_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5159_1[1])) && (Shen.is_type(Arg5159_1[2], Shen.type_cons) && Shen.empty$question$(Arg5159_1[2][2]))))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5159_0)) && (Shen.is_type(Arg5159_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5159_1[1])) && (Shen.is_type(Arg5159_1[2], Shen.type_cons) && Shen.empty$question$(Arg5159_1[2][2]))))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5159_0)) && (Shen.is_type(Arg5159_1, Shen.type_cons) && (Shen.is_type(Arg5159_1[2], Shen.type_cons) && Shen.empty$question$(Arg5159_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5159_1[1], false, Arg5159_3]), (" && " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5159_1[2][1], false, Arg5159_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5159_0)) && (Shen.is_type(Arg5159_1, Shen.type_cons) && (Shen.is_type(Arg5159_1[2], Shen.type_cons) && Shen.empty$question$(Arg5159_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5159_1[1], false, Arg5159_3]), (" || " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5159_1[2][1], false, Arg5159_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))))}, 4, [], "js.logic-op"];





Shen.fns["js.emit-set*"] = [Shen.type_func, function shen_user_lambda5166(Arg5165) {
  if (Arg5165.length < 4) return [Shen.type_func, shen_user_lambda5166, 4, Arg5165];
  var Arg5165_0 = Arg5165[0], Arg5165_1 = Arg5165[1], Arg5165_2 = Arg5165[2], Arg5165_3 = Arg5165[3];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5165_3)))
  ? ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5165_0)])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [Arg5165_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5165_3)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5165_0, false, Arg5165_2])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("[1]] = " + Shen.call(Shen.fns["shen.app"], [Arg5165_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-set*"]]);})))}, 4, [], "js.emit-set*"];





Shen.fns["js.emit-set"] = [Shen.type_func, function shen_user_lambda5171(Arg5170) {
  if (Arg5170.length < 3) return [Shen.type_func, shen_user_lambda5171, 3, Arg5170];
  var Arg5170_0 = Arg5170[0], Arg5170_1 = Arg5170[1], Arg5170_2 = Arg5170[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-set*"], [Arg5170_0, Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5170_1, false, Arg5170_2]), Arg5170_2, Shen.is_type(Arg5170_0, Shen.type_symbol)]);})}, 3, [], "js.emit-set"];





Shen.fns["js.emit-value"] = [Shen.type_func, function shen_user_lambda5176(Arg5175) {
  if (Arg5175.length < 3) return [Shen.type_func, shen_user_lambda5176, 3, Arg5175];
  var Arg5175_0 = Arg5175[0], Arg5175_1 = Arg5175[1], Arg5175_2 = Arg5175[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5175_2)))
  ? ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5175_0)]), "])", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5175_2)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5175_0, false, Arg5175_1])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, "[1]])", [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-value"]]);})))}, 3, [], "js.emit-value"];





Shen.fns["js.basic-op"] = [Shen.type_func, function shen_user_lambda5230(Arg5229) {
  if (Arg5229.length < 4) return [Shen.type_func, shen_user_lambda5230, 4, Arg5229];
  var Arg5229_0 = Arg5229[0], Arg5229_1 = Arg5229[1], Arg5229_2 = Arg5229[2], Arg5229_3 = Arg5229[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("true", Arg5229_1[1])) && Shen.empty$question$(Arg5229_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("false", Arg5229_1[1])) && Shen.empty$question$(Arg5229_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.empty$question$(Arg5229_1[2]) && (typeof(Arg5229_1[1]) == 'string')))))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Arg5229_1[1]]), "]", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && Shen.empty$question$(Arg5229_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "intern"], Arg5229_1, Arg5229_2, Arg5229_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.is_type(Arg5229_1[2], Shen.type_cons) && Shen.empty$question$(Arg5229_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[1], false, Arg5229_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[2][1], false, Arg5229_3])),
  ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.is_type(Arg5229_1[2], Shen.type_cons) && Shen.empty$question$(Arg5229_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[1], false, Arg5229_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[2][1], false, Arg5229_3])),
  ("[Shen.fns['shen.tuple'], " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.is_type(Arg5229_1[2], Shen.type_cons) && Shen.empty$question$(Arg5229_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set"], [Arg5229_1[1], Arg5229_1[2][1], Arg5229_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "value"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && Shen.empty$question$(Arg5229_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-value"], [Arg5229_1[1], Arg5229_3, Shen.is_type(Arg5229_1[1], Shen.type_symbol)]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "thaw"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && Shen.empty$question$(Arg5229_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-thaw"], [Arg5229_1[1], Arg5229_2, Arg5229_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && Shen.empty$question$(Arg5229_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[1], true, Arg5229_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "hd"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && Shen.empty$question$(Arg5229_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[1], false, Arg5229_3]), "[1]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tl"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && Shen.empty$question$(Arg5229_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[1], false, Arg5229_3]), "[2]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.is_type(Arg5229_1[2], Shen.type_cons) && Shen.empty$question$(Arg5229_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[1], false, Arg5229_3]), (" + " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[2][1], false, Arg5229_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pos"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.is_type(Arg5229_1[2], Shen.type_cons) && Shen.empty$question$(Arg5229_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[1], false, Arg5229_3]), ("[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[2][1], false, Arg5229_3]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "address->"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.is_type(Arg5229_1[2], Shen.type_cons) && (Shen.is_type(Arg5229_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg5229_1[2][2][2]))))))
  ? ("Shen.absvector_set(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[1], false, Arg5229_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[2][1], false, Arg5229_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[2][2][1], false, Arg5229_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-address"], Arg5229_0)) && (Shen.is_type(Arg5229_1, Shen.type_cons) && (Shen.is_type(Arg5229_1[2], Shen.type_cons) && Shen.empty$question$(Arg5229_1[2][2])))))
  ? ("Shen.absvector_ref(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[1], false, Arg5229_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5229_1[2][1], false, Arg5229_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj))))))))))))))))}, 4, [], "js.basic-op"];





Shen.fns["js.int-funcall*"] = [Shen.type_func, function shen_user_lambda5237(Arg5236) {
  if (Arg5236.length < 5) return [Shen.type_func, shen_user_lambda5237, 5, Arg5236];
  var Arg5236_0 = Arg5236[0], Arg5236_1 = Arg5236[1], Arg5236_2 = Arg5236[2], Arg5236_3 = Arg5236[3], Arg5236_4 = Arg5236[4];
  var R0;
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg5236_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5236_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5236_0, Arg5236_1, false, false, Arg5236_4]);})
  : (((Shen.unwind_tail(Shen.$eq$(true, Arg5236_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5236_3))))
  ? ((R0 = Shen.call(Shen.fns["js.int-funcall*"], [Arg5236_0, Arg5236_1, false, false, Arg5236_4])),
  ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5236_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5236_3))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5239(Arg5238) {
  if (Arg5238.length < 2) return [Shen.type_func, shen_user_lambda5239, 2, Arg5238];
  var Arg5238_0 = Arg5238[0], Arg5238_1 = Arg5238[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5238_1, false, Arg5238_0]);})}, 2, [Arg5236_4], undefined], Arg5236_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.intfunc-name"], [Arg5236_0]), ("(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);}))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5236_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5236_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.int-funcall*"], [Arg5236_0, Arg5236_1, false, false, Arg5236_4])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-funcall*"]]);})))))}, 5, [], "js.int-funcall*"];





Shen.fns["js.int-funcall"] = [Shen.type_func, function shen_user_lambda5245(Arg5244) {
  if (Arg5244.length < 4) return [Shen.type_func, shen_user_lambda5245, 4, Arg5244];
  var Arg5244_0 = Arg5244[0], Arg5244_1 = Arg5244[1], Arg5244_2 = Arg5244[2], Arg5244_3 = Arg5244[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["element?"], [Arg5244_0, (Shen.globals["js.tail-internals"])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5244_0, Arg5244_1, R0, Arg5244_2, Arg5244_3]);}))}, 4, [], "js.int-funcall"];





Shen.fns["js.int-curry"] = [Shen.type_func, function shen_user_lambda5251(Arg5250) {
  if (Arg5250.length < 4) return [Shen.type_func, shen_user_lambda5251, 4, Arg5250];
  var Arg5250_0 = Arg5250[0], Arg5250_1 = Arg5250[1], Arg5250_2 = Arg5250[2], Arg5250_3 = Arg5250[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.func-name"], [Arg5250_0]), "[1]", [Shen.type_symbol, "shen.a"]])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5253(Arg5252) {
  if (Arg5252.length < 2) return [Shen.type_func, shen_user_lambda5253, 2, Arg5252];
  var Arg5252_0 = Arg5252[0], Arg5252_1 = Arg5252[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5252_1, false, Arg5252_0]);})}, 2, [Arg5250_3], undefined], Arg5250_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [Shen.call(Shen.fns["length"], [Arg5250_1]), R0, R1, []]);}))}, 4, [], "js.int-curry"];





Shen.fns["js.internal-op*"] = [Shen.type_func, function shen_user_lambda5264(Arg5263) {
  if (Arg5263.length < 5) return [Shen.type_func, shen_user_lambda5264, 5, Arg5263];
  var Arg5263_0 = Arg5263[0], Arg5263_1 = Arg5263[1], Arg5263_2 = Arg5263[2], Arg5263_3 = Arg5263[3], Arg5263_4 = Arg5263[4];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg5263_1]), Shen.call(Shen.fns["length"], [Arg5263_2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [Arg5263_0, Arg5263_2, Arg5263_3, Arg5263_4]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.int-curry"], [Arg5263_0, Arg5263_1, Arg5263_2, Arg5263_4]);}))}, 5, [], "js.internal-op*"];





Shen.fns["js.internal-op"] = [Shen.type_func, function shen_user_lambda5270(Arg5269) {
  if (Arg5269.length < 4) return [Shen.type_func, shen_user_lambda5270, 4, Arg5269];
  var Arg5269_0 = Arg5269[0], Arg5269_1 = Arg5269[1], Arg5269_2 = Arg5269[2], Arg5269_3 = Arg5269[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.int-func-args"], [Arg5269_0])),
  Shen.call(Shen.fns["js.intfunc-name"], [Arg5269_0]),
  ((Shen.empty$question$(R0))
  ? Shen.fail_obj
  : (function() {
  return Shen.call_tail(Shen.fns["js.internal-op*"], [Arg5269_0, R0, Arg5269_1, Arg5269_2, Arg5269_3]);})))}, 4, [], "js.internal-op"];





Shen.fns["js.emit-do"] = [Shen.type_func, function shen_user_lambda5276(Arg5275) {
  if (Arg5275.length < 4) return [Shen.type_func, shen_user_lambda5276, 4, Arg5275];
  var Arg5275_0 = Arg5275[0], Arg5275_1 = Arg5275[1], Arg5275_2 = Arg5275[2], Arg5275_3 = Arg5275[3];
  var R0, R1;
  return (((Shen.is_type(Arg5275_0, Shen.type_cons) && Shen.empty$question$(Arg5275_0[2])))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5278(Arg5277) {
  if (Arg5277.length < 2) return [Shen.type_func, shen_user_lambda5278, 2, Arg5277];
  var Arg5277_0 = Arg5277[0], Arg5277_1 = Arg5277[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5277_1, false, Arg5277_0]);})}, 2, [Arg5275_2], undefined], Shen.call(Shen.fns["reverse"], [Arg5275_3])])),
  (R1 = ",\x0a  "),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.str-join"], [R0, R1]), (",\x0a  " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5275_0[1], Arg5275_1, Arg5275_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.is_type(Arg5275_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5275_0[2], Arg5275_1, Arg5275_2, [Shen.type_cons, Arg5275_0[1], Arg5275_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-do"]]);})))}, 4, [], "js.emit-do"];





Shen.fns["js.std-op"] = [Shen.type_func, function shen_user_lambda5304(Arg5303) {
  if (Arg5303.length < 4) return [Shen.type_func, shen_user_lambda5304, 4, Arg5303];
  var Arg5303_0 = Arg5303[0], Arg5303_1 = Arg5303[1], Arg5303_2 = Arg5303[2], Arg5303_3 = Arg5303[3];
  var R0, R1;
  return ((R0 = (new Shen.Freeze([Arg5303_0, Arg5303_1, Arg5303_2, Arg5303_3], function(Arg5305) {
  var Arg5305_0 = Arg5305[0], Arg5305_1 = Arg5305[1], Arg5305_2 = Arg5305[2], Arg5305_3 = Arg5305[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js.math-op"], [Arg5305_0, Arg5305_1, Arg5305_2, Arg5305_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5305_0, Arg5305_1, Arg5305_2, Arg5305_3], function(Arg5307) {
  var Arg5307_0 = Arg5307[0], Arg5307_1 = Arg5307[1], Arg5307_2 = Arg5307[2], Arg5307_3 = Arg5307[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js.logic-op"], [Arg5307_0, Arg5307_1, Arg5307_2, Arg5307_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.order-op"], [Arg5307_0, Arg5307_1, Arg5307_2, Arg5307_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.basic-op"], [Arg5307_0, Arg5307_1, Arg5307_2, Arg5307_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5307_0, Arg5307_1, Arg5307_2, Arg5307_3], function(Arg5309) {
  var Arg5309_0 = Arg5309[0], Arg5309_1 = Arg5309[1], Arg5309_2 = Arg5309[2], Arg5309_3 = Arg5309[3];
  return (function() {
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "trap-error"], Arg5309_0)) && (Shen.is_type(Arg5309_1, Shen.type_cons) && (Shen.is_type(Arg5309_1[2], Shen.type_cons) && Shen.empty$question$(Arg5309_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-trap-error"], [Arg5309_1[1], Arg5309_1[2][1], Arg5309_2, Arg5309_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg5309_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5309_1, Arg5309_2, Arg5309_3, []]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5309_0)) && Shen.empty$question$(Arg5309_1)))
  ? "Shen.fail_obj"
  : Shen.fail_obj)));})}))),
  ((Shen.is_type(Arg5307_0, Shen.type_symbol))
  ? ((R3 = Shen.call(Shen.fns["js.internal-op"], [Arg5307_0, Arg5307_1, Arg5307_2, Arg5307_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4))
  : R4))
  : R4));})}))),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg5305_0)))
  ? ((R3 = Shen.call(Shen.fns["js.equality-op"], [Arg5305_1, Arg5305_2, Arg5305_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4));})}))),
  (((Shen.is_type(Arg5303_1, Shen.type_cons) && Shen.empty$question$(Arg5303_1[2])))
  ? ((R1 = Shen.call(Shen.fns["js.predicate-op"], [Arg5303_0, Arg5303_1[1], Arg5303_2, Arg5303_3])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))}, 4, [], "js.std-op"];





Shen.fns["js.mk-regs-aux"] = [Shen.type_func, function shen_user_lambda5322(Arg5321) {
  if (Arg5321.length < 5) return [Shen.type_func, shen_user_lambda5322, 5, Arg5321];
  var Arg5321_0 = Arg5321[0], Arg5321_1 = Arg5321[1], Arg5321_2 = Arg5321[2], Arg5321_3 = Arg5321[3], Arg5321_4 = Arg5321[4];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5321_1, Arg5321_0)))
  ? Arg5321_4
  : ((R0 = Shen.call(Shen.fns["@s"], [Arg5321_4, Shen.call(Shen.fns["@s"], [Arg5321_3, Shen.call(Shen.fns["@s"], [Shen.str(Shen.call(Shen.fns["js.context-varname"], [Arg5321_2])), Shen.str(Arg5321_0)])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [(Arg5321_0 + 1), Arg5321_1, Arg5321_2, ", ", R0]);})))}, 5, [], "js.mk-regs-aux"];





Shen.fns["js.mk-regs"] = [Shen.type_func, function shen_user_lambda5325(Arg5324) {
  if (Arg5324.length < 1) return [Shen.type_func, shen_user_lambda5325, 1, Arg5324];
  var Arg5324_0 = Arg5324[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [0, Shen.call(Shen.fns["js.context-nregs"], [Arg5324_0]), Arg5324_0, "var ", ""]);})}, 1, [], "js.mk-regs"];





Shen.fns["js.mk-regs-str"] = [Shen.type_func, function shen_user_lambda5328(Arg5327) {
  if (Arg5327.length < 1) return [Shen.type_func, shen_user_lambda5328, 1, Arg5327];
  var Arg5327_0 = Arg5327[0];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["js.context-nregs"], [Arg5327_0]), 0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-regs"], [Arg5327_0]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 1, [], "js.mk-regs-str"];





Shen.fns["js.mk-args-str-aux"] = [Shen.type_func, function shen_user_lambda5340(Arg5339) {
  if (Arg5339.length < 5) return [Shen.type_func, shen_user_lambda5340, 5, Arg5339];
  var Arg5339_0 = Arg5339[0], Arg5339_1 = Arg5339[1], Arg5339_2 = Arg5339[2], Arg5339_3 = Arg5339[3], Arg5339_4 = Arg5339[4];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5339_1, Arg5339_0)))
  ? Arg5339_4
  : ((R0 = "~A~A~A = ~A[~A]"),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5339_2])),
  (R2 = Shen.call(Shen.fns["js.arg-name"], [Arg5339_1, Arg5339_2])),
  (R2 = Shen.call(Shen.fns["shen.insert"], [Arg5339_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [Arg5339_3, Shen.call(Shen.fns["shen.insert"], [Arg5339_4, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-args-str-aux"], [Arg5339_0, (Arg5339_1 + 1), Arg5339_2, ", ", R2]);})))}, 5, [], "js.mk-args-str-aux"];





Shen.fns["js.mk-args-str"] = [Shen.type_func, function shen_user_lambda5346(Arg5345) {
  if (Arg5345.length < 2) return [Shen.type_func, shen_user_lambda5346, 2, Arg5345];
  var Arg5345_0 = Arg5345[0], Arg5345_1 = Arg5345[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5345_0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-args-str-aux"], [Arg5345_0, 0, Arg5345_1, "var ", ""]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 2, [], "js.mk-args-str"];





Shen.fns["js.emit-func-obj"] = [Shen.type_func, function shen_user_lambda5352(Arg5351) {
  if (Arg5351.length < 4) return [Shen.type_func, shen_user_lambda5352, 4, Arg5351];
  var Arg5351_0 = Arg5351[0], Arg5351_1 = Arg5351[1], Arg5351_2 = Arg5351[2], Arg5351_3 = Arg5351[3];
  var R0, R1;
  return ((((Shen.unwind_tail(Shen.$eq$(Arg5351_3, "")) || Shen.empty$question$(Arg5351_3)))
  ? (R0 = "undefined")
  : (R0 = Arg5351_3)),
  (R1 = Shen.call(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [Arg5351_2, ", "]), "]"])])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], ["S", Shen.call(Shen.fns["@s"], ["h", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], [".", Shen.call(Shen.fns["@s"], ["t", Shen.call(Shen.fns["@s"], ["y", Shen.call(Shen.fns["@s"], ["p", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["_", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["c", Shen.call(Shen.fns["@s"], [",", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [[Shen.type_cons, Arg5351_1, [Shen.type_cons, Shen.str(Arg5351_0), [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]], ", "]), "]"])])])])])])])])])])])])])])])])])]);}))}, 4, [], "js.emit-func-obj"];





Shen.fns["js.emit-func-closure"] = [Shen.type_func, function shen_user_lambda5357(Arg5356) {
  if (Arg5356.length < 3) return [Shen.type_func, shen_user_lambda5357, 3, Arg5356];
  var Arg5356_0 = Arg5356[0], Arg5356_1 = Arg5356[1], Arg5356_2 = Arg5356[2];
  var R0, R1;
  return ((R0 = "[~A, ~A, ~A, ~A]"),
  (R1 = "Shen.type_func"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [Arg5356_2, Shen.call(Shen.fns["shen.insert"], [Arg5356_0, Shen.call(Shen.fns["shen.insert"], [Arg5356_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])]);}))}, 3, [], "js.emit-func-closure"];





Shen.fns["js.emit-func-body"] = [Shen.type_func, function shen_user_lambda5364(Arg5363) {
  if (Arg5363.length < 5) return [Shen.type_func, shen_user_lambda5364, 5, Arg5363];
  var Arg5363_0 = Arg5363[0], Arg5363_1 = Arg5363[1], Arg5363_2 = Arg5363[2], Arg5363_3 = Arg5363[3], Arg5363_4 = Arg5363[4];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.func-name"], [Arg5363_1])),
  ((Shen.empty$question$(Arg5363_0))
  ? []
  : Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5363_0)])),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5363_4])),
  (R2 = Shen.call(Shen.fns["js.emit-func-closure"], [Arg5363_2, R0, R1])),
  (R2 = ("if (" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg5363_4]), (".length < " + Shen.call(Shen.fns["shen.app"], [Arg5363_2, (") return " + Shen.call(Shen.fns["shen.app"], [R2, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))),
  (R3 = "function ~A(~A) {~%  ~A;~%  ~A~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5363_3, true, Arg5363_4])),
  (R5 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5363_4])),
  (R6 = Shen.call(Shen.fns["js.mk-args-str"], [Arg5363_2, Arg5363_4])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R5, Shen.call(Shen.fns["shen.insert"], [R6, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.proc-nl"], [R3])])])])])])]);}))}, 5, [], "js.emit-func-body"];





Shen.fns["js.emit-mk-func"] = [Shen.type_func, function shen_user_lambda5370(Arg5369) {
  if (Arg5369.length < 4) return [Shen.type_func, shen_user_lambda5370, 4, Arg5369];
  var Arg5369_0 = Arg5369[0], Arg5369_1 = Arg5369[1], Arg5369_2 = Arg5369[2], Arg5369_3 = Arg5369[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5369_0)])),
  (R1 = Shen.call(Shen.fns["js.func-name"], [Arg5369_0])),
  (R2 = Shen.call(Shen.fns["length"], [Arg5369_1])),
  (R3 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R3 = Shen.call(Shen.fns["js.emit-func-body"], [R1, R3, R2, Arg5369_2, Arg5369_3])),
  (R3 = Shen.call(Shen.fns["js.emit-func-obj"], [R2, R3, [], R0])),
  ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [R3, ";\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))}, 4, [], "js.emit-mk-func"];





Shen.fns["js.emit-mk-closure"] = [Shen.type_func, function shen_user_lambda5376(Arg5375) {
  if (Arg5375.length < 4) return [Shen.type_func, shen_user_lambda5376, 4, Arg5375];
  var Arg5375_0 = Arg5375[0], Arg5375_1 = Arg5375[1], Arg5375_2 = Arg5375[2], Arg5375_3 = Arg5375[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5375_3])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R2 = (Shen.call(Shen.fns["length"], [Arg5375_1]) + Shen.call(Shen.fns["length"], [Arg5375_0]))),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  (R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [[], R0, R2, Arg5375_2, R1])),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5375_3, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5378(Arg5377) {
  if (Arg5377.length < 2) return [Shen.type_func, shen_user_lambda5378, 2, Arg5377];
  var Arg5377_0 = Arg5377[0], Arg5377_1 = Arg5377[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5377_1, false, Arg5377_0]);})}, 2, [Arg5375_3], undefined], Arg5375_1])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [R2, R0, R1, []]);}))}, 4, [], "js.emit-mk-closure"];





Shen.fns["js.emit-freeze"] = [Shen.type_func, function shen_user_lambda5383(Arg5382) {
  if (Arg5382.length < 3) return [Shen.type_func, shen_user_lambda5383, 3, Arg5382];
  var Arg5382_0 = Arg5382[0], Arg5382_1 = Arg5382[1], Arg5382_2 = Arg5382[2];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5382_2])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]]),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5382_2, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5385(Arg5384) {
  if (Arg5384.length < 2) return [Shen.type_func, shen_user_lambda5385, 2, Arg5384];
  var Arg5384_0 = Arg5384[0], Arg5384_1 = Arg5384[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5384_1, false, Arg5384_0]);})}, 2, [Arg5382_2], undefined], Arg5382_0])),
  (R2 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R3 = Shen.call(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5382_1, true, R1])])),
  (R0 = Shen.call(Shen.fns["js.mk-args-str"], [Shen.call(Shen.fns["length"], [R0]), R1])),
  (R4 = "function(~A) {~%  ~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["shen.insert"], [R3, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.insert"], [Shen.call(Shen.fns["js.context-argname"], [R1]), Shen.call(Shen.fns["shen.proc-nl"], [R4])])])])),
  (R3 = "(new Shen.Freeze([~A], ~A))"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.proc-nl"], [R3])])]);}))}, 3, [], "js.emit-freeze"];





Shen.fns["js.emit-thaw"] = [Shen.type_func, function shen_user_lambda5390(Arg5389) {
  if (Arg5389.length < 3) return [Shen.type_func, shen_user_lambda5390, 3, Arg5389];
  var Arg5389_0 = Arg5389[0], Arg5389_1 = Arg5389[1], Arg5389_2 = Arg5389[2];
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5389_1)))
  ? ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-thaw"], [Arg5389_0, true, Arg5389_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5389_1)))
  ? ("Shen.thaw(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5389_0, false, Arg5389_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-thaw"]]);})))}, 3, [], "js.emit-thaw"];





Shen.fns["js.emit-get-arg"] = [Shen.type_func, function shen_user_lambda5394(Arg5393) {
  if (Arg5393.length < 2) return [Shen.type_func, shen_user_lambda5394, 2, Arg5393];
  var Arg5393_0 = Arg5393[0], Arg5393_1 = Arg5393[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.arg-name"], [Arg5393_0, Arg5393_1]);})}, 2, [], "js.emit-get-arg"];





Shen.fns["js.emit-set-reg"] = [Shen.type_func, function shen_user_lambda5399(Arg5398) {
  if (Arg5398.length < 3) return [Shen.type_func, shen_user_lambda5399, 3, Arg5398];
  var Arg5398_0 = Arg5398[0], Arg5398_1 = Arg5398[1], Arg5398_2 = Arg5398[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5398_1, false, Arg5398_2])),
  Shen.call(Shen.fns["js.context-nregs->"], [Arg5398_2, Shen.call(Shen.fns["js.max"], [(Arg5398_0 + 1), Shen.call(Shen.fns["js.context-nregs"], [Arg5398_2])])]),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5398_2]), Shen.call(Shen.fns["shen.app"], [Arg5398_0, (" = " + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])))}, 3, [], "js.emit-set-reg"];





Shen.fns["js.emit-get-reg"] = [Shen.type_func, function shen_user_lambda5403(Arg5402) {
  if (Arg5402.length < 2) return [Shen.type_func, shen_user_lambda5403, 2, Arg5402];
  var Arg5402_0 = Arg5402[0], Arg5402_1 = Arg5402[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5402_1]), Shen.call(Shen.fns["shen.app"], [Arg5402_0, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.emit-get-reg"];





Shen.fns["js.func-arg"] = [Shen.type_func, function shen_user_lambda5407(Arg5406) {
  if (Arg5406.length < 2) return [Shen.type_func, shen_user_lambda5407, 2, Arg5406];
  var Arg5406_0 = Arg5406[0], Arg5406_1 = Arg5406[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5406_1, false, Arg5406_0]);})}, 2, [], "js.func-arg"];





Shen.fns["js.emit-funcall*"] = [Shen.type_func, function shen_user_lambda5413(Arg5412) {
  if (Arg5412.length < 4) return [Shen.type_func, shen_user_lambda5413, 4, Arg5412];
  var Arg5412_0 = Arg5412[0], Arg5412_1 = Arg5412[1], Arg5412_2 = Arg5412[2], Arg5412_3 = Arg5412[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5412_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5415(Arg5414) {
  if (Arg5414.length < 2) return [Shen.type_func, shen_user_lambda5415, 2, Arg5414];
  var Arg5414_0 = Arg5414[0], Arg5414_1 = Arg5414[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5414_1, false, Arg5414_0]);})}, 2, [Arg5412_3], undefined], Arg5412_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R1 = "Shen.call_tail"),
  (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["shen.app"], [R1, ("(" + Shen.call(Shen.fns["shen.app"], [Arg5412_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])]);}))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5412_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5417(Arg5416) {
  if (Arg5416.length < 2) return [Shen.type_func, shen_user_lambda5417, 2, Arg5416];
  var Arg5416_0 = Arg5416[0], Arg5416_1 = Arg5416[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5416_1, false, Arg5416_0]);})}, 2, [Arg5412_3], undefined], Arg5412_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  ("Shen.call(" + Shen.call(Shen.fns["shen.app"], [Arg5412_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-funcall*"]]);})))}, 4, [], "js.emit-funcall*"];





Shen.fns["js.emit-funcall"] = [Shen.type_func, function shen_user_lambda5423(Arg5422) {
  if (Arg5422.length < 4) return [Shen.type_func, shen_user_lambda5423, 4, Arg5422];
  var Arg5422_0 = Arg5422[0], Arg5422_1 = Arg5422[1], Arg5422_2 = Arg5422[2], Arg5422_3 = Arg5422[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5422_0)])),
  (R0 = ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, "]", [Shen.type_symbol, "shen.a"]]))),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R0, Arg5422_1, Arg5422_2, Arg5422_3]);}))}, 4, [], "js.emit-funcall"];





Shen.fns["js.js-from-kl-expr"] = [Shen.type_func, function shen_user_lambda5428(Arg5427) {
  if (Arg5427.length < 3) return [Shen.type_func, shen_user_lambda5428, 3, Arg5427];
  var Arg5427_0 = Arg5427[0], Arg5427_1 = Arg5427[1], Arg5427_2 = Arg5427[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr*"], [Arg5427_0, Arg5427_1, Arg5427_2])),
  (((typeof(R0) == 'string'))
  ? R0
  : (function() {
  return Shen.simple_error(("ERROR: expr " + Shen.call(Shen.fns["shen.app"], [Arg5427_0, (" => " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]])));})))}, 3, [], "js.js-from-kl-expr"];





Shen.fns["js.js-from-kl-expr*"] = [Shen.type_func, function shen_user_lambda5487(Arg5486) {
  if (Arg5486.length < 3) return [Shen.type_func, shen_user_lambda5487, 3, Arg5486];
  var Arg5486_0 = Arg5486[0], Arg5486_1 = Arg5486[1], Arg5486_2 = Arg5486[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg5486_0))
  ? "[]"
  : (((typeof(Arg5486_0) == 'number'))
  ? (function() {
  return Shen.str(Arg5486_0);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg5486_0, Shen.fail_obj)))
  ? "shen_fail_obj"
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5486_0)))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5486_0)))
  ? "false"
  : ((Shen.is_type(Arg5486_0, Shen.type_symbol))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.str(Arg5486_0), "]", [Shen.type_symbol, "shen.s"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bar!"], Arg5486_0)))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], ["|", "]", [Shen.type_symbol, "shen.s"]]))
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2][2]))))))
  ? ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5486_0[2][1], false, Arg5486_2]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5486_0[2][2][1], false, Arg5486_2]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5486_0[2][1], Arg5486_1, Arg5486_2]);})
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg5486_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [Arg5486_0[2], Arg5486_1, Arg5486_2]);})
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [[Shen.type_cons, [Shen.type_cons, Arg5486_0[2][1], [Shen.type_cons, Arg5486_0[2][2][1], []]], [Shen.type_cons, [Shen.type_cons, true, Arg5486_0[2][2][2]], []]], Arg5486_1, Arg5486_2]);})
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2])))))
  ? (function() {
  return Shen.simple_error("Wrong freeze code!");})
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-freeze"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-freeze"], [Arg5486_0[2][2][1], Arg5486_0[2][2][2][1], Arg5486_2]);})
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-arg"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-arg"], [Arg5486_0[2][1], Arg5486_2]);})
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-reg"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-reg"], [Arg5486_0[2][1], Arg5486_2]);})
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-set-reg!"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set-reg"], [Arg5486_0[2][1], Arg5486_0[2][2][1], Arg5486_2]);})
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-func"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-func"], [Arg5486_0[2][1], Arg5486_0[2][2][1], Arg5486_0[2][2][2][2][1], Arg5486_2]);})
  : (((Shen.is_type(Arg5486_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-closure"], Arg5486_0[1])) && (Shen.is_type(Arg5486_0[2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5486_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5486_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-closure"], [Arg5486_0[2][1], Arg5486_0[2][2][2][1], Arg5486_0[2][2][2][2][1], Arg5486_2]);})
  : ((R0 = (new Shen.Freeze([Arg5486_0, Arg5486_1, Arg5486_2], function(Arg5488) {
  var Arg5488_0 = Arg5488[0], Arg5488_1 = Arg5488[1], Arg5488_2 = Arg5488[2];
  return (function() {
  return (((Shen.is_type(Arg5488_0, Shen.type_cons) && Shen.is_type(Arg5488_0[1], Shen.type_cons)))
  ? ((R3 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5488_0[1], false, Arg5488_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R3, Arg5488_0[2], Arg5488_1, Arg5488_2]);}))
  : ((Shen.is_type(Arg5488_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall"], [Arg5488_0[1], Arg5488_0[2], Arg5488_1, Arg5488_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.esc-obj"], [Arg5488_0]);})));})}))),
  ((Shen.is_type(Arg5486_0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["js.std-op"], [Arg5486_0[1], Arg5486_0[2], Arg5486_1, Arg5486_2])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))))))))))))))))))))}, 3, [], "js.js-from-kl-expr*"];





Shen.fns["js.js-from-kl-toplevel-expr"] = [Shen.type_func, function shen_user_lambda5493(Arg5492) {
  if (Arg5492.length < 2) return [Shen.type_func, shen_user_lambda5493, 2, Arg5492];
  var Arg5492_0 = Arg5492[0], Arg5492_1 = Arg5492[1];
  var R0, R1;
  return (((typeof(Arg5492_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5492_0, false, Arg5492_1]), ";\x0a", [Shen.type_symbol, "shen.a"]]);})
  : ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5492_0, false, Arg5492_1])),
  (R1 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5492_1])),
  (((Shen.call(Shen.fns["js.context-nregs"], [Arg5492_1]) > 0))
  ? ("((function() {\x0a  " + Shen.call(Shen.fns["shen.app"], [R1, ("return " + Shen.call(Shen.fns["shen.app"], [R0, "})());\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [R0, ";", [Shen.type_symbol, "shen.a"]]);}))))}, 2, [], "js.js-from-kl-toplevel-expr"];





Shen.fns["js.js-from-kl-toplevel"] = [Shen.type_func, function shen_user_lambda5511(Arg5510) {
  if (Arg5510.length < 3) return [Shen.type_func, shen_user_lambda5511, 3, Arg5510];
  var Arg5510_0 = Arg5510[0], Arg5510_1 = Arg5510[1], Arg5510_2 = Arg5510[2];
  return (((Shen.is_type(Arg5510_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5510_0[1])) && (Shen.is_type(Arg5510_0[2], Shen.type_cons) && (Shen.is_type(Arg5510_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5510_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.emit-set"], [Arg5510_0[2][1], Arg5510_0[2][2][1], Arg5510_2]), ";\x0a"]);})
  : (((Shen.is_type(Arg5510_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-func"], Arg5510_0[1])) && (Shen.is_type(Arg5510_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5510_1)) && Shen.call(Shen.fns["js.int-func?"], [Arg5510_0[2][1]]))))))
  ? ""
  : (((Shen.is_type(Arg5510_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-func"], Arg5510_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5510_0, true, Arg5510_2]);})
  : (((Shen.is_type(Arg5510_0, Shen.type_cons) && (Shen.empty$question$(Arg5510_0[2]) && Shen.is_type(Arg5510_0[1], Shen.type_symbol))))
  ? ("Shen.call_toplevel(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5510_0[1])]), ")\x0a", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5510_0, Shen.type_cons) && Shen.empty$question$(Arg5510_0[2])))
  ? (function() {
  return Shen.simple_error(("Unexpected toplevel expression: " + Shen.call(Shen.fns["shen.app"], [Arg5510_0[1], "\x0a", [Shen.type_symbol, "shen.r"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-expr"], [Arg5510_0, Arg5510_2]);}))))))}, 3, [], "js.js-from-kl-toplevel"];





Shen.fns["js.js-from-kl-toplevel-forms"] = [Shen.type_func, function shen_user_lambda5519(Arg5518) {
  if (Arg5518.length < 4) return [Shen.type_func, shen_user_lambda5519, 4, Arg5518];
  var Arg5518_0 = Arg5518[0], Arg5518_1 = Arg5518[1], Arg5518_2 = Arg5518[2], Arg5518_3 = Arg5518[3];
  var R0;
  return ((Shen.empty$question$(Arg5518_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [Arg5518_2]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [Arg5518_3, "\x0a"])])]);})
  : ((Shen.is_type(Arg5518_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-toplevel"], [Arg5518_0[1], Arg5518_1, Arg5518_2])),
  (R0 = (Arg5518_3 + (R0 + "\x0a"))),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-forms"], [Arg5518_0[2], Arg5518_1, Arg5518_2, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.js-from-kl-toplevel-forms"]]);})))}, 4, [], "js.js-from-kl-toplevel-forms"];





Shen.fns["js.js-from-kl*"] = [Shen.type_func, function shen_user_lambda5524(Arg5523) {
  if (Arg5523.length < 3) return [Shen.type_func, shen_user_lambda5524, 3, Arg5523];
  var Arg5523_0 = Arg5523[0], Arg5523_1 = Arg5523[1], Arg5523_2 = Arg5523[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel"], [Arg5523_0, Arg5523_1, Arg5523_2]);})}, 3, [], "js.js-from-kl*"];





Shen.fns["js-from-kl"] = [Shen.type_func, function shen_user_lambda5527(Arg5526) {
  if (Arg5526.length < 1) return [Shen.type_func, shen_user_lambda5527, 1, Arg5526];
  var Arg5526_0 = Arg5526[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk"], [[Shen.type_cons, Arg5526_0, []], false])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-toplevel-forms"], [R1, (Shen.globals["js.skip-internals"]), R0, ""])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [R0]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [R1, "\x0a"])])]);}))}, 1, [], "js-from-kl"];





Shen.fns["js.js-from-kl-all"] = [Shen.type_func, function shen_user_lambda5530(Arg5529) {
  if (Arg5529.length < 1) return [Shen.type_func, shen_user_lambda5530, 1, Arg5529];
  var Arg5529_0 = Arg5529[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.walk"], [Arg5529_0, false])),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-all"], [R0, (Shen.globals["js.skip-internals"]), R1, ""]);}))}, 1, [], "js.js-from-kl-all"];





Shen.fns["reg-kl.shen-toplevel-5532"] = [Shen.type_func, function shen_user_lambda5533(Arg5531) {
  if (Arg5531.length < 0) return [Shen.type_func, shen_user_lambda5533, 0, Arg5531];
  return (Shen.globals["js.skip-internals"] = true)}, 0, [], "reg-kl.shen-toplevel-5532"];

Shen.call_toplevel("reg-kl.shen-toplevel-5532")





Shen.fns["js.dump-exprs-to-file"] = [Shen.type_func, function shen_user_lambda5539(Arg5538) {
  if (Arg5538.length < 2) return [Shen.type_func, shen_user_lambda5539, 2, Arg5538];
  var Arg5538_0 = Arg5538[0], Arg5538_1 = Arg5538[1];
  var R0;
  return ((Shen.empty$question$(Arg5538_0))
  ? true
  : ((Shen.is_type(Arg5538_0, Shen.type_cons))
  ? (Shen.pr("kl<-shen\x0a", Shen.call(Shen.fns["stoutput"], [])),
  (R0 = Shen.call(Shen.fns["js.kl-from-shen"], [Arg5538_0[1]])),
  Shen.pr("js<-kl\x0a", Shen.call(Shen.fns["stoutput"], [])),
  (R0 = Shen.call(Shen.fns["js-from-kl"], [R0])),
  (((typeof(R0) == 'string'))
  ? [Shen.type_symbol, "_"]
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a string", [Shen.type_symbol, "shen.a"]]))),
  Shen.pr("print js\x0a", Shen.call(Shen.fns["stoutput"], [])),
  Shen.pr(R0, Arg5538_1),
  Shen.pr("end\x0a", Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-exprs-to-file"], [Arg5538_0[2], Arg5538_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.dump-exprs-to-file"]]);})))}, 2, [], "js.dump-exprs-to-file"];





Shen.fns["js.dump-to-file"] = [Shen.type_func, function shen_user_lambda5543(Arg5542) {
  if (Arg5542.length < 2) return [Shen.type_func, shen_user_lambda5543, 2, Arg5542];
  var Arg5542_0 = Arg5542[0], Arg5542_1 = Arg5542[1];
  var R0;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg5542_1, [Shen.type_symbol, "out"])),
  Shen.call(Shen.fns["js.dump-exprs-to-file"], [Arg5542_0, R0]),
  Shen.close(R0),
  true)}, 2, [], "js.dump-to-file"];





Shen.fns["js.kl-from-shen"] = [Shen.type_func, function shen_user_lambda5546(Arg5545) {
  if (Arg5545.length < 1) return [Shen.type_func, shen_user_lambda5546, 1, Arg5545];
  var Arg5545_0 = Arg5545[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda5548(Arg5547) {
  if (Arg5547.length < 1) return [Shen.type_func, shen_user_lambda5548, 1, Arg5547];
  var Arg5547_0 = Arg5547[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg5547_0]);})}, 1, [], undefined], Arg5545_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["js.package-contents"], [R0]))
  : (R0 = R0)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.elim-define"], [Shen.call(Shen.fns["shen.proc-input+"], [R0])]);}))}, 1, [], "js.kl-from-shen"];





Shen.fns["reg-kl.shen-toplevel-5550"] = [Shen.type_func, function shen_user_lambda5551(Arg5549) {
  if (Arg5549.length < 0) return [Shen.type_func, shen_user_lambda5551, 0, Arg5549];
  return (Shen.globals["js.*silence*"] = false)}, 0, [], "reg-kl.shen-toplevel-5550"];

Shen.call_toplevel("reg-kl.shen-toplevel-5550")





Shen.fns["js.dump"] = [Shen.type_func, function shen_user_lambda5556(Arg5555) {
  if (Arg5555.length < 3) return [Shen.type_func, shen_user_lambda5556, 3, Arg5555];
  var Arg5555_0 = Arg5555[0], Arg5555_1 = Arg5555[1], Arg5555_2 = Arg5555[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.app"], [Arg5555_2, Shen.call(Shen.fns["shen.app"], [Arg5555_1, ".js", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R1 = Shen.call(Shen.fns["shen.app"], [Arg5555_0, Shen.call(Shen.fns["shen.app"], [Arg5555_1, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R2 = Shen.call(Shen.fns["read-file"], [R1])),
  (((Shen.globals["js.*silence*"]))
  ? [Shen.type_symbol, "_"]
  : Shen.pr(("== " + Shen.call(Shen.fns["shen.app"], [R1, (" -> " + Shen.call(Shen.fns["shen.app"], [R0, "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []))),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-to-file"], [R2, R0]);}))}, 3, [], "js.dump"];





Shen.fns["reg-kl.shen-toplevel-5558"] = [Shen.type_func, function shen_user_lambda5559(Arg5557) {
  if (Arg5557.length < 0) return [Shen.type_func, shen_user_lambda5559, 0, Arg5557];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "js.dump"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-5558"];

Shen.call_toplevel("reg-kl.shen-toplevel-5558")





Shen.fns["reg-kl.shen-toplevel-5561"] = [Shen.type_func, function shen_user_lambda5562(Arg5560) {
  if (Arg5560.length < 0) return [Shen.type_func, shen_user_lambda5562, 0, Arg5560];
  return ((Shen.trap_error(function() {return (Shen.call(Shen.fns["register-dumper"], []),
  true);}, [Shen.type_func, function shen_user_lambda5564(Arg5563) {
  if (Arg5563.length < 1) return [Shen.type_func, shen_user_lambda5564, 1, Arg5563];
  var Arg5563_0 = Arg5563[0];
  return false}, 1, [], undefined]))
  ? (function() {
  return Shen.call_tail(Shen.fns["register-dumper"], [[Shen.type_symbol, "javascript"], [Shen.type_symbol, "all"], [Shen.type_symbol, "js.dump"]]);})
  : [Shen.type_symbol, "_"])}, 0, [], "reg-kl.shen-toplevel-5561"];

Shen.call_toplevel("reg-kl.shen-toplevel-5561")





Shen.fns["shenjs-repl-split-input-aux"] = [Shen.type_func, function shen_user_lambda5569(Arg5568) {
  if (Arg5568.length < 3) return [Shen.type_func, shen_user_lambda5569, 3, Arg5568];
  var Arg5568_0 = Arg5568[0], Arg5568_1 = Arg5568[1], Arg5568_2 = Arg5568[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5568_0))
  ? Arg5568_2
  : ((Shen.is_type(Arg5568_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg5568_0[1], Arg5568_1]),
  (R1 = Shen.call(Shen.fns["reverse"], [R0])),
  (R2 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen-<st_input>"], R1, [Shen.type_func, function shen_user_lambda5571(Arg5570) {
  if (Arg5570.length < 1) return [Shen.type_func, shen_user_lambda5571, 1, Arg5570];
  var Arg5570_0 = Arg5570[0];
  return ((Shen.is_type(Arg5570_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg5570_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]])),
  (function() {
  return Shen.call_tail(Shen.fns["shenjs-repl-split-input-aux"], [Arg5568_0[2], R0, (((Shen.unwind_tail(Shen.$eq$(R2, Shen.fail_obj)) || Shen.empty$question$(R2)))
  ? Arg5568_2
  : [Shen.fns['shen.tuple'], R1, Arg5568_0[2]])]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shenjs-repl-split-input-aux"]]);})))}, 3, [], "shenjs-repl-split-input-aux"];





Shen.fns["shenjs-repl-split-input"] = [Shen.type_func, function shen_user_lambda5574(Arg5573) {
  if (Arg5573.length < 1) return [Shen.type_func, shen_user_lambda5574, 1, Arg5573];
  var Arg5573_0 = Arg5573[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shenjs-repl-split-input-aux"], [Arg5573_0, [], []]);})}, 1, [], "shenjs-repl-split-input"];










Shen.fns["shen.shen->kl"] = [Shen.type_func, function shen_user_lambda6204(Arg6203) {
  if (Arg6203.length < 2) return [Shen.type_func, shen_user_lambda6204, 2, Arg6203];
  var Arg6203_0 = Arg6203[0], Arg6203_1 = Arg6203[1];
  return (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<define>"], [Shen.type_cons, Arg6203_0, Arg6203_1], [Shen.type_func, function shen_user_lambda6206(Arg6205) {
  if (Arg6205.length < 2) return [Shen.type_func, shen_user_lambda6206, 2, Arg6205];
  var Arg6205_0 = Arg6205[0], Arg6205_1 = Arg6205[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.shen-syntax-error"], [Arg6205_0, Arg6205_1]);})}, 2, [Arg6203_0], undefined]]);})}, 2, [], "shen.shen->kl"];





Shen.fns["shen.shen-syntax-error"] = [Shen.type_func, function shen_user_lambda6208(Arg6207) {
  if (Arg6207.length < 2) return [Shen.type_func, shen_user_lambda6208, 2, Arg6207];
  var Arg6207_0 = Arg6207[0], Arg6207_1 = Arg6207[1];
  return (function() {
  return Shen.simple_error(("syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6207_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6207_1]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})}, 2, [], "shen.shen-syntax-error"];





Shen.fns["shen.<define>"] = [Shen.type_func, function shen_user_lambda6210(Arg6209) {
  if (Arg6209.length < 1) return [Shen.type_func, shen_user_lambda6210, 1, Arg6209];
  var Arg6209_0 = Arg6209[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6209_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<signature>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6209_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<define>"];





Shen.fns["shen.<name>"] = [Shen.type_func, function shen_user_lambda6212(Arg6211) {
  if (Arg6211.length < 1) return [Shen.type_func, shen_user_lambda6212, 1, Arg6211];
  var Arg6211_0 = Arg6211[0];
  var R0;
  return (((Shen.is_type(Arg6211_0[1], Shen.type_cons))
  ? ((R0 = Arg6211_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6211_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6211_0])])[1], (((Shen.is_type(R0, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.sysfunc?"], [R0]))))
  ? R0
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a legitimate function name.\x0a", [Shen.type_symbol, "shen.a"]])))])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<name>"];





Shen.fns["shen.sysfunc?"] = [Shen.type_func, function shen_user_lambda6214(Arg6213) {
  if (Arg6213.length < 1) return [Shen.type_func, shen_user_lambda6214, 1, Arg6213];
  var Arg6213_0 = Arg6213[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6213_0, Shen.call(Shen.fns["get"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])]);})}, 1, [], "shen.sysfunc?"];





Shen.fns["shen.<signature>"] = [Shen.type_func, function shen_user_lambda6216(Arg6215) {
  if (Arg6215.length < 1) return [Shen.type_func, shen_user_lambda6216, 1, Arg6215];
  var Arg6215_0 = Arg6215[0];
  var R0;
  return ((((Shen.is_type(Arg6215_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg6215_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6215_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6215_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])[1], Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])])]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<signature>"];





Shen.fns["shen.curry-type"] = [Shen.type_func, function shen_user_lambda6218(Arg6217) {
  if (Arg6217.length < 1) return [Shen.type_func, shen_user_lambda6218, 1, Arg6217];
  var Arg6217_0 = Arg6217[0];
  return (((Shen.is_type(Arg6217_0, Shen.type_cons) && (Shen.is_type(Arg6217_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6217_0[2][1])) && (Shen.is_type(Arg6217_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6217_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6217_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6217_0[1], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg6217_0[2][2], []]]]]);})
  : (((Shen.is_type(Arg6217_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6217_0[1])) && (Shen.is_type(Arg6217_0[2], Shen.type_cons) && (Shen.is_type(Arg6217_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6217_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.curry-type"], [Arg6217_0[2][1]]), []]]
  : (((Shen.is_type(Arg6217_0, Shen.type_cons) && (Shen.is_type(Arg6217_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6217_0[2][1])) && (Shen.is_type(Arg6217_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6217_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6217_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6217_0[1], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, Arg6217_0[2][2], []]]]]);})
  : ((Shen.is_type(Arg6217_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.curry-type"], Arg6217_0]);})
  : Arg6217_0))))}, 1, [], "shen.curry-type"];





Shen.fns["shen.<signature-help>"] = [Shen.type_func, function shen_user_lambda6220(Arg6219) {
  if (Arg6219.length < 1) return [Shen.type_func, shen_user_lambda6220, 1, Arg6219];
  var Arg6219_0 = Arg6219[0];
  var R0, R1;
  return (((Shen.is_type(Arg6219_0[1], Shen.type_cons))
  ? ((R0 = Arg6219_0[1][1]),
  (R1 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6219_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6219_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "}"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, R0, Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6219_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<signature-help>"];





Shen.fns["shen.<rules>"] = [Shen.type_func, function shen_user_lambda6222(Arg6221) {
  if (Arg6221.length < 1) return [Shen.type_func, shen_user_lambda6222, 1, Arg6221];
  var Arg6221_0 = Arg6221[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6221_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6221_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<rules>"];





Shen.fns["shen.<rule>"] = [Shen.type_func, function shen_user_lambda6224(Arg6223) {
  if (Arg6223.length < 1) return [Shen.type_func, shen_user_lambda6224, 1, Arg6223];
  var Arg6223_0 = Arg6223[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6223_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6223_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6223_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6223_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<rule>"];





Shen.fns["shen.fail_if"] = [Shen.type_func, function shen_user_lambda6226(Arg6225) {
  if (Arg6225.length < 2) return [Shen.type_func, shen_user_lambda6226, 2, Arg6225];
  var Arg6225_0 = Arg6225[0], Arg6225_1 = Arg6225[1];
  return ((Shen.call(Arg6225_0, [Arg6225_1]))
  ? Shen.fail_obj
  : Arg6225_1)}, 2, [], "shen.fail_if"];





Shen.fns["shen.succeeds?"] = [Shen.type_func, function shen_user_lambda6228(Arg6227) {
  if (Arg6227.length < 1) return [Shen.type_func, shen_user_lambda6228, 1, Arg6227];
  var Arg6227_0 = Arg6227[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6227_0, Shen.fail_obj)))
  ? false
  : true)}, 1, [], "shen.succeeds?"];





Shen.fns["shen.<patterns>"] = [Shen.type_func, function shen_user_lambda6230(Arg6229) {
  if (Arg6229.length < 1) return [Shen.type_func, shen_user_lambda6230, 1, Arg6229];
  var Arg6229_0 = Arg6229[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6229_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<patterns>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6229_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<patterns>"];





Shen.fns["shen.<pattern>"] = [Shen.type_func, function shen_user_lambda6232(Arg6231) {
  if (Arg6231.length < 1) return [Shen.type_func, shen_user_lambda6232, 1, Arg6231];
  var Arg6231_0 = Arg6231[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6231_0[1], Shen.type_cons) && Shen.is_type(Arg6231_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6231_0[1], Shen.type_cons) && Shen.is_type(Arg6231_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6231_0[1], Shen.type_cons) && Shen.is_type(Arg6231_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6231_0[1], Shen.type_cons) && Shen.is_type(Arg6231_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6231_0[1], Shen.type_cons) && Shen.is_type(Arg6231_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][1]))))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(0, Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])])])[1][1]))))
  ? Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])])])])])[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]])])
  : Shen.fail_obj)
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6231_0[1], Shen.type_cons))
  ? ((R0 = Arg6231_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6231_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6231_0])])[1], Shen.call(Shen.fns["shen.constructor-error"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<simple_pattern>"], [Arg6231_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<pattern>"];





Shen.fns["shen.constructor-error"] = [Shen.type_func, function shen_user_lambda6234(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6234, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6233_0, " is not a legitimate constructor\x0a", [Shen.type_symbol, "shen.a"]]));})}, 1, [], "shen.constructor-error"];





Shen.fns["shen.<simple_pattern>"] = [Shen.type_func, function shen_user_lambda6236(Arg6235) {
  if (Arg6235.length < 1) return [Shen.type_func, shen_user_lambda6236, 1, Arg6235];
  var Arg6235_0 = Arg6235[0];
  var R0;
  return (((Shen.is_type(Arg6235_0[1], Shen.type_cons))
  ? ((R0 = Arg6235_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "_"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Parse_Y"]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6235_0[1], Shen.type_cons))
  ? ((R0 = Arg6235_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<-"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<simple_pattern>"];





Shen.fns["shen.<pattern1>"] = [Shen.type_func, function shen_user_lambda6238(Arg6237) {
  if (Arg6237.length < 1) return [Shen.type_func, shen_user_lambda6238, 1, Arg6237];
  var Arg6237_0 = Arg6237[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6237_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern1>"];





Shen.fns["shen.<pattern2>"] = [Shen.type_func, function shen_user_lambda6240(Arg6239) {
  if (Arg6239.length < 1) return [Shen.type_func, shen_user_lambda6240, 1, Arg6239];
  var Arg6239_0 = Arg6239[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6239_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern2>"];





Shen.fns["shen.<action>"] = [Shen.type_func, function shen_user_lambda6242(Arg6241) {
  if (Arg6241.length < 1) return [Shen.type_func, shen_user_lambda6242, 1, Arg6241];
  var Arg6241_0 = Arg6241[0];
  var R0;
  return (((Shen.is_type(Arg6241_0[1], Shen.type_cons))
  ? ((R0 = Arg6241_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6241_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6241_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<action>"];





Shen.fns["shen.<guard>"] = [Shen.type_func, function shen_user_lambda6244(Arg6243) {
  if (Arg6243.length < 1) return [Shen.type_func, shen_user_lambda6244, 1, Arg6243];
  var Arg6243_0 = Arg6243[0];
  var R0;
  return (((Shen.is_type(Arg6243_0[1], Shen.type_cons))
  ? ((R0 = Arg6243_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6243_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6243_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<guard>"];





Shen.fns["shen.compile_to_machine_code"] = [Shen.type_func, function shen_user_lambda6246(Arg6245) {
  if (Arg6245.length < 2) return [Shen.type_func, shen_user_lambda6246, 2, Arg6245];
  var Arg6245_0 = Arg6245[0], Arg6245_1 = Arg6245[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compile_to_lambda+"], [Arg6245_0, Arg6245_1])),
  (R0 = Shen.call(Shen.fns["shen.compile_to_kl"], [Arg6245_0, R0])),
  Shen.call(Shen.fns["shen.record-source"], [Arg6245_0, R0]),
  R0)}, 2, [], "shen.compile_to_machine_code"];





Shen.fns["shen.record-source"] = [Shen.type_func, function shen_user_lambda6248(Arg6247) {
  if (Arg6247.length < 2) return [Shen.type_func, shen_user_lambda6248, 2, Arg6247];
  var Arg6247_0 = Arg6247[0], Arg6247_1 = Arg6247[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6247_0, [Shen.type_symbol, "shen.source"], Arg6247_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-source"];





Shen.fns["shen.compile_to_lambda+"] = [Shen.type_func, function shen_user_lambda6250(Arg6249) {
  if (Arg6249.length < 2) return [Shen.type_func, shen_user_lambda6250, 2, Arg6249];
  var Arg6249_0 = Arg6249[0], Arg6249_1 = Arg6249[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.aritycheck"], [Arg6249_0, Arg6249_1])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6252(Arg6251) {
  if (Arg6251.length < 2) return [Shen.type_func, shen_user_lambda6252, 2, Arg6251];
  var Arg6251_0 = Arg6251[0], Arg6251_1 = Arg6251[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_check"], [Arg6251_0, Arg6251_1]);})}, 2, [Arg6249_0], undefined], Arg6249_1]),
  (R0 = Shen.call(Shen.fns["shen.parameters"], [R0])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.strip-protect"], Arg6249_1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.abstract_rule"], R1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6254(Arg6253) {
  if (Arg6253.length < 2) return [Shen.type_func, shen_user_lambda6254, 2, Arg6253];
  var Arg6253_0 = Arg6253[0], Arg6253_1 = Arg6253[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6253_0, Arg6253_1]);})}, 2, [R0], undefined], R1])),
  [Shen.type_cons, R0, [Shen.type_cons, R1, []]])}, 2, [], "shen.compile_to_lambda+"];





Shen.fns["shen.free_variable_check"] = [Shen.type_func, function shen_user_lambda6256(Arg6255) {
  if (Arg6255.length < 2) return [Shen.type_func, shen_user_lambda6256, 2, Arg6255];
  var Arg6255_0 = Arg6255[0], Arg6255_1 = Arg6255[1];
  var R0;
  return (((Shen.is_type(Arg6255_1, Shen.type_cons) && (Shen.is_type(Arg6255_1[2], Shen.type_cons) && Shen.empty$question$(Arg6255_1[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6255_1[1]])),
  (R0 = Shen.call(Shen.fns["shen.extract_free_vars"], [R0, Arg6255_1[2][1]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_warnings"], [Arg6255_0, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.free_variable_check"]]);}))}, 2, [], "shen.free_variable_check"];





Shen.fns["shen.extract_vars"] = [Shen.type_func, function shen_user_lambda6258(Arg6257) {
  if (Arg6257.length < 1) return [Shen.type_func, shen_user_lambda6258, 1, Arg6257];
  var Arg6257_0 = Arg6257[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6257_0]))
  ? [Shen.type_cons, Arg6257_0, []]
  : ((Shen.is_type(Arg6257_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_vars"], [Arg6257_0[1]]), Shen.call(Shen.fns["shen.extract_vars"], [Arg6257_0[2]])]);})
  : []))}, 1, [], "shen.extract_vars"];





Shen.fns["shen.extract_free_vars"] = [Shen.type_func, function shen_user_lambda6260(Arg6259) {
  if (Arg6259.length < 2) return [Shen.type_func, shen_user_lambda6260, 2, Arg6259];
  var Arg6259_0 = Arg6259[0], Arg6259_1 = Arg6259[1];
  return (((Shen.is_type(Arg6259_1, Shen.type_cons) && (Shen.is_type(Arg6259_1[2], Shen.type_cons) && (Shen.empty$question$(Arg6259_1[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6259_1[1], [Shen.type_symbol, "protect"]))))))
  ? []
  : (((Shen.call(Shen.fns["variable?"], [Arg6259_1]) && (!Shen.call(Shen.fns["element?"], [Arg6259_1, Arg6259_0]))))
  ? [Shen.type_cons, Arg6259_1, []]
  : (((Shen.is_type(Arg6259_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg6259_1[1])) && (Shen.is_type(Arg6259_1[2], Shen.type_cons) && (Shen.is_type(Arg6259_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg6259_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6259_1[2][1], Arg6259_0], Arg6259_1[2][2][1]]);})
  : (((Shen.is_type(Arg6259_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6259_1[1])) && (Shen.is_type(Arg6259_1[2], Shen.type_cons) && (Shen.is_type(Arg6259_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6259_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6259_1[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6259_0, Arg6259_1[2][2][1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6259_1[2][1], Arg6259_0], Arg6259_1[2][2][2][1]])]);})
  : ((Shen.is_type(Arg6259_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6259_0, Arg6259_1[1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6259_0, Arg6259_1[2]])]);})
  : [])))))}, 2, [], "shen.extract_free_vars"];





Shen.fns["shen.free_variable_warnings"] = [Shen.type_func, function shen_user_lambda6262(Arg6261) {
  if (Arg6261.length < 2) return [Shen.type_func, shen_user_lambda6262, 2, Arg6261];
  var Arg6261_0 = Arg6261[0], Arg6261_1 = Arg6261[1];
  return ((Shen.empty$question$(Arg6261_1))
  ? [Shen.type_symbol, "_"]
  : (function() {
  return Shen.simple_error(("error: the following variables are free in " + Shen.call(Shen.fns["shen.app"], [Arg6261_0, (": " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.list_variables"], [Arg6261_1]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.free_variable_warnings"];





Shen.fns["shen.list_variables"] = [Shen.type_func, function shen_user_lambda6264(Arg6263) {
  if (Arg6263.length < 1) return [Shen.type_func, shen_user_lambda6264, 1, Arg6263];
  var Arg6263_0 = Arg6263[0];
  return (((Shen.is_type(Arg6263_0, Shen.type_cons) && Shen.empty$question$(Arg6263_0[2])))
  ? (Shen.str(Arg6263_0[1]) + ".")
  : ((Shen.is_type(Arg6263_0, Shen.type_cons))
  ? (Shen.str(Arg6263_0[1]) + (", " + Shen.call(Shen.fns["shen.list_variables"], [Arg6263_0[2]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.list_variables"]]);})))}, 1, [], "shen.list_variables"];





Shen.fns["shen.strip-protect"] = [Shen.type_func, function shen_user_lambda6266(Arg6265) {
  if (Arg6265.length < 1) return [Shen.type_func, shen_user_lambda6266, 1, Arg6265];
  var Arg6265_0 = Arg6265[0];
  return (((Shen.is_type(Arg6265_0, Shen.type_cons) && (Shen.is_type(Arg6265_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6265_0[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6265_0[1], [Shen.type_symbol, "protect"]))))))
  ? Arg6265_0[2][1]
  : ((Shen.is_type(Arg6265_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.strip-protect"], [Arg6265_0[1]]), Shen.call(Shen.fns["shen.strip-protect"], [Arg6265_0[2]])]
  : Arg6265_0))}, 1, [], "shen.strip-protect"];





Shen.fns["shen.linearise"] = [Shen.type_func, function shen_user_lambda6268(Arg6267) {
  if (Arg6267.length < 1) return [Shen.type_func, shen_user_lambda6268, 1, Arg6267];
  var Arg6267_0 = Arg6267[0];
  return (((Shen.is_type(Arg6267_0, Shen.type_cons) && (Shen.is_type(Arg6267_0[2], Shen.type_cons) && Shen.empty$question$(Arg6267_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Shen.call(Shen.fns["shen.flatten"], [Arg6267_0[1]]), Arg6267_0[1], Arg6267_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise"]]);}))}, 1, [], "shen.linearise"];





Shen.fns["shen.flatten"] = [Shen.type_func, function shen_user_lambda6270(Arg6269) {
  if (Arg6269.length < 1) return [Shen.type_func, shen_user_lambda6270, 1, Arg6269];
  var Arg6269_0 = Arg6269[0];
  return ((Shen.empty$question$(Arg6269_0))
  ? []
  : ((Shen.is_type(Arg6269_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.flatten"], [Arg6269_0[1]]), Shen.call(Shen.fns["shen.flatten"], [Arg6269_0[2]])]);})
  : [Shen.type_cons, Arg6269_0, []]))}, 1, [], "shen.flatten"];





Shen.fns["shen.linearise_help"] = [Shen.type_func, function shen_user_lambda6272(Arg6271) {
  if (Arg6271.length < 3) return [Shen.type_func, shen_user_lambda6272, 3, Arg6271];
  var Arg6271_0 = Arg6271[0], Arg6271_1 = Arg6271[1], Arg6271_2 = Arg6271[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6271_0))
  ? [Shen.type_cons, Arg6271_1, [Shen.type_cons, Arg6271_2, []]]
  : ((Shen.is_type(Arg6271_0, Shen.type_cons))
  ? (((Shen.call(Shen.fns["variable?"], [Arg6271_0[1]]) && Shen.call(Shen.fns["element?"], [Arg6271_0[1], Arg6271_0[2]])))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [Arg6271_0[1]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6271_0[1], [Shen.type_cons, R0, []]]], [Shen.type_cons, Arg6271_2, []]]]),
  (R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6271_0[1], R0, Arg6271_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6271_0[2], R0, R1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6271_0[2], Arg6271_1, Arg6271_2]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise_help"]]);})))}, 3, [], "shen.linearise_help"];





Shen.fns["shen.linearise_X"] = [Shen.type_func, function shen_user_lambda6274(Arg6273) {
  if (Arg6273.length < 3) return [Shen.type_func, shen_user_lambda6274, 3, Arg6273];
  var Arg6273_0 = Arg6273[0], Arg6273_1 = Arg6273[1], Arg6273_2 = Arg6273[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6273_2, Arg6273_0)))
  ? Arg6273_1
  : ((Shen.is_type(Arg6273_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6273_0, Arg6273_1, Arg6273_2[1]])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Arg6273_2[1])))
  ? [Shen.type_cons, Arg6273_2[1], Shen.call(Shen.fns["shen.linearise_X"], [Arg6273_0, Arg6273_1, Arg6273_2[2]])]
  : [Shen.type_cons, R0, Arg6273_2[2]]))
  : Arg6273_2))}, 3, [], "shen.linearise_X"];





Shen.fns["shen.aritycheck"] = [Shen.type_func, function shen_user_lambda6276(Arg6275) {
  if (Arg6275.length < 2) return [Shen.type_func, shen_user_lambda6276, 2, Arg6275];
  var Arg6275_0 = Arg6275[0], Arg6275_1 = Arg6275[1];
  return (((Shen.is_type(Arg6275_1, Shen.type_cons) && (Shen.is_type(Arg6275_1[1], Shen.type_cons) && (Shen.is_type(Arg6275_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6275_1[1][2][2]) && Shen.empty$question$(Arg6275_1[2]))))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6275_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck-name"], [Arg6275_0, Shen.call(Shen.fns["arity"], [Arg6275_0]), Shen.call(Shen.fns["length"], [Arg6275_1[1][1]])]);}))
  : (((Shen.is_type(Arg6275_1, Shen.type_cons) && (Shen.is_type(Arg6275_1[1], Shen.type_cons) && (Shen.is_type(Arg6275_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6275_1[1][2][2]) && (Shen.is_type(Arg6275_1[2], Shen.type_cons) && (Shen.is_type(Arg6275_1[2][1], Shen.type_cons) && (Shen.is_type(Arg6275_1[2][1][2], Shen.type_cons) && Shen.empty$question$(Arg6275_1[2][1][2][2])))))))))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6275_1[1][1]]), Shen.call(Shen.fns["length"], [Arg6275_1[2][1][1]]))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6275_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck"], [Arg6275_0, Arg6275_1[2]]);}))
  : (function() {
  return Shen.simple_error(("arity error in " + Shen.call(Shen.fns["shen.app"], [Arg6275_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aritycheck"]]);})))}, 2, [], "shen.aritycheck"];





Shen.fns["shen.aritycheck-name"] = [Shen.type_func, function shen_user_lambda6278(Arg6277) {
  if (Arg6277.length < 3) return [Shen.type_func, shen_user_lambda6278, 3, Arg6277];
  var Arg6277_0 = Arg6277[0], Arg6277_1 = Arg6277[1], Arg6277_2 = Arg6277[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6277_1)))
  ? Arg6277_2
  : ((Shen.unwind_tail(Shen.$eq$(Arg6277_2, Arg6277_1)))
  ? Arg6277_2
  : (Shen.pr(("\x0awarning: changing the arity of " + Shen.call(Shen.fns["shen.app"], [Arg6277_0, " can cause errors.\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  Arg6277_2)))}, 3, [], "shen.aritycheck-name"];





Shen.fns["shen.aritycheck-action"] = [Shen.type_func, function shen_user_lambda6280(Arg6279) {
  if (Arg6279.length < 1) return [Shen.type_func, shen_user_lambda6280, 1, Arg6279];
  var Arg6279_0 = Arg6279[0];
  return ((Shen.is_type(Arg6279_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.aah"], [Arg6279_0[1], Arg6279_0[2]]),
  (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.aritycheck-action"], Arg6279_0]);}))
  : [Shen.type_symbol, "shen.skip"])}, 1, [], "shen.aritycheck-action"];





Shen.fns["shen.aah"] = [Shen.type_func, function shen_user_lambda6282(Arg6281) {
  if (Arg6281.length < 2) return [Shen.type_func, shen_user_lambda6282, 2, Arg6281];
  var Arg6281_0 = Arg6281[0], Arg6281_1 = Arg6281[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["arity"], [Arg6281_0])),
  (R1 = Shen.call(Shen.fns["length"], [Arg6281_1])),
  ((((R0 > -1) && (R1 > R0)))
  ? (function() {
  return Shen.pr(("warning: " + Shen.call(Shen.fns["shen.app"], [Arg6281_0, (" might not like " + Shen.call(Shen.fns["shen.app"], [R1, (" argument" + Shen.call(Shen.fns["shen.app"], [(((R1 > 1))
  ? "s"
  : ""), ".\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));})
  : [Shen.type_symbol, "shen.skip"]))}, 2, [], "shen.aah"];





Shen.fns["shen.abstract_rule"] = [Shen.type_func, function shen_user_lambda6284(Arg6283) {
  if (Arg6283.length < 1) return [Shen.type_func, shen_user_lambda6284, 1, Arg6283];
  var Arg6283_0 = Arg6283[0];
  return (((Shen.is_type(Arg6283_0, Shen.type_cons) && (Shen.is_type(Arg6283_0[2], Shen.type_cons) && Shen.empty$question$(Arg6283_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.abstraction_build"], [Arg6283_0[1], Arg6283_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstract_rule"]]);}))}, 1, [], "shen.abstract_rule"];





Shen.fns["shen.abstraction_build"] = [Shen.type_func, function shen_user_lambda6286(Arg6285) {
  if (Arg6285.length < 2) return [Shen.type_func, shen_user_lambda6286, 2, Arg6285];
  var Arg6285_0 = Arg6285[0], Arg6285_1 = Arg6285[1];
  return ((Shen.empty$question$(Arg6285_0))
  ? Arg6285_1
  : ((Shen.is_type(Arg6285_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6285_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.abstraction_build"], [Arg6285_0[2], Arg6285_1]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstraction_build"]]);})))}, 2, [], "shen.abstraction_build"];





Shen.fns["shen.parameters"] = [Shen.type_func, function shen_user_lambda6288(Arg6287) {
  if (Arg6287.length < 1) return [Shen.type_func, shen_user_lambda6288, 1, Arg6287];
  var Arg6287_0 = Arg6287[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6287_0)))
  ? []
  : [Shen.type_cons, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]), Shen.call(Shen.fns["shen.parameters"], [(Arg6287_0 - 1)])])}, 1, [], "shen.parameters"];





Shen.fns["shen.application_build"] = [Shen.type_func, function shen_user_lambda6290(Arg6289) {
  if (Arg6289.length < 2) return [Shen.type_func, shen_user_lambda6290, 2, Arg6289];
  var Arg6289_0 = Arg6289[0], Arg6289_1 = Arg6289[1];
  return ((Shen.empty$question$(Arg6289_0))
  ? Arg6289_1
  : ((Shen.is_type(Arg6289_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6289_0[2], [Shen.type_cons, Arg6289_1, [Shen.type_cons, Arg6289_0[1], []]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.application_build"]]);})))}, 2, [], "shen.application_build"];





Shen.fns["shen.compile_to_kl"] = [Shen.type_func, function shen_user_lambda6292(Arg6291) {
  if (Arg6291.length < 2) return [Shen.type_func, shen_user_lambda6292, 2, Arg6291];
  var Arg6291_0 = Arg6291[0], Arg6291_1 = Arg6291[1];
  var R0;
  return (((Shen.is_type(Arg6291_1, Shen.type_cons) && (Shen.is_type(Arg6291_1[2], Shen.type_cons) && Shen.empty$question$(Arg6291_1[2][2]))))
  ? (Shen.call(Shen.fns["shen.store-arity"], [Arg6291_0, Shen.call(Shen.fns["length"], [Arg6291_1[1]])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.reduce"], Arg6291_1[2][1]])),
  (R0 = Shen.call(Shen.fns["shen.cond-expression"], [Arg6291_0, Arg6291_1[1], R0])),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg6291_0, [Shen.type_cons, Arg6291_1[1], [Shen.type_cons, R0, []]]]]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compile_to_kl"]]);}))}, 2, [], "shen.compile_to_kl"];





Shen.fns["shen.store-arity"] = [Shen.type_func, function shen_user_lambda6294(Arg6293) {
  if (Arg6293.length < 2) return [Shen.type_func, shen_user_lambda6294, 2, Arg6293];
  var Arg6293_0 = Arg6293[0], Arg6293_1 = Arg6293[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6293_0, [Shen.type_symbol, "arity"], Arg6293_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.store-arity"];





Shen.fns["shen.reduce"] = [Shen.type_func, function shen_user_lambda6296(Arg6295) {
  if (Arg6295.length < 1) return [Shen.type_func, shen_user_lambda6296, 1, Arg6295];
  var Arg6295_0 = Arg6295[0];
  var R0;
  return ((Shen.globals["shen.*teststack*"] = []),
  (R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6295_0])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "shen.tests"], Shen.call(Shen.fns["reverse"], [(Shen.globals["shen.*teststack*"])])]], [Shen.type_cons, R0, []]])}, 1, [], "shen.reduce"];





Shen.fns["shen.reduce_help"] = [Shen.type_func, function shen_user_lambda6298(Arg6297) {
  if (Arg6297.length < 1) return [Shen.type_func, shen_user_lambda6298, 1, Arg6297];
  var Arg6297_0 = Arg6297[0];
  var R0;
  return (((Shen.is_type(Arg6297_0, Shen.type_cons) && (Shen.is_type(Arg6297_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6297_0[1][1])) && (Shen.is_type(Arg6297_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6297_0[1][2][1][1])) && (Shen.is_type(Arg6297_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6297_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][2][2]) && (Shen.is_type(Arg6297_0[2], Shen.type_cons) && Shen.empty$question$(Arg6297_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "cons?"], Arg6297_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6297_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6297_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6297_0[2][1], Arg6297_0[1][2][1], Arg6297_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6297_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6297_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6297_0, Shen.type_cons) && (Shen.is_type(Arg6297_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6297_0[1][1])) && (Shen.is_type(Arg6297_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg6297_0[1][2][1][1])) && (Shen.is_type(Arg6297_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6297_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][2][2]) && (Shen.is_type(Arg6297_0[2], Shen.type_cons) && Shen.empty$question$(Arg6297_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "tuple?"], Arg6297_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6297_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6297_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6297_0[2][1], Arg6297_0[1][2][1], Arg6297_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], Arg6297_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], Arg6297_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6297_0, Shen.type_cons) && (Shen.is_type(Arg6297_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6297_0[1][1])) && (Shen.is_type(Arg6297_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Arg6297_0[1][2][1][1])) && (Shen.is_type(Arg6297_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6297_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][2][2]) && (Shen.is_type(Arg6297_0[2], Shen.type_cons) && Shen.empty$question$(Arg6297_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+vector?"], Arg6297_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6297_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6297_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6297_0[2][1], Arg6297_0[1][2][1], Arg6297_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hdv"], Arg6297_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlv"], Arg6297_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6297_0, Shen.type_cons) && (Shen.is_type(Arg6297_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6297_0[1][1])) && (Shen.is_type(Arg6297_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6297_0[1][2][1][1])) && (Shen.is_type(Arg6297_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6297_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][2][2]) && (Shen.is_type(Arg6297_0[2], Shen.type_cons) && Shen.empty$question$(Arg6297_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+string?"], Arg6297_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6297_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6297_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6297_0[2][1], Arg6297_0[1][2][1], Arg6297_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, Arg6297_0[2][1], [Shen.type_cons, 0, []]]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlstr"], Arg6297_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6297_0, Shen.type_cons) && (Shen.is_type(Arg6297_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6297_0[1][1])) && (Shen.is_type(Arg6297_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][2][2]) && (Shen.is_type(Arg6297_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[2][2]) && (!Shen.call(Shen.fns["variable?"], [Arg6297_0[1][2][1]])))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6297_0[1][2][1], Arg6297_0[2]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6297_0[1][2][2][1]]);}))
  : (((Shen.is_type(Arg6297_0, Shen.type_cons) && (Shen.is_type(Arg6297_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6297_0[1][1])) && (Shen.is_type(Arg6297_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6297_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[1][2][2][2]) && (Shen.is_type(Arg6297_0[2], Shen.type_cons) && Shen.empty$question$(Arg6297_0[2][2])))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Shen.call(Shen.fns["shen.ebr"], [Arg6297_0[2][1], Arg6297_0[1][2][1], Arg6297_0[1][2][2][1]])]);})
  : (((Shen.is_type(Arg6297_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6297_0[1])) && (Shen.is_type(Arg6297_0[2], Shen.type_cons) && (Shen.is_type(Arg6297_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6297_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [Arg6297_0[2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6297_0[2][2][1]]);}))
  : (((Shen.is_type(Arg6297_0, Shen.type_cons) && (Shen.is_type(Arg6297_0[2], Shen.type_cons) && Shen.empty$question$(Arg6297_0[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6297_0[1]])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6297_0[1], R0)))
  ? Arg6297_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [[Shen.type_cons, R0, Arg6297_0[2]]]);})))
  : Arg6297_0))))))))}, 1, [], "shen.reduce_help"];





Shen.fns["shen.+string?"] = [Shen.type_func, function shen_user_lambda6300(Arg6299) {
  if (Arg6299.length < 1) return [Shen.type_func, shen_user_lambda6300, 1, Arg6299];
  var Arg6299_0 = Arg6299[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6299_0)))
  ? false
  : (typeof(Arg6299_0) == 'string'))}, 1, [], "shen.+string?"];





Shen.fns["shen.+vector"] = [Shen.type_func, function shen_user_lambda6302(Arg6301) {
  if (Arg6301.length < 1) return [Shen.type_func, shen_user_lambda6302, 1, Arg6301];
  var Arg6301_0 = Arg6301[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6301_0, Shen.vector(0))))
  ? false
  : (function() {
  return Shen.vector$question$(Arg6301_0);}))}, 1, [], "shen.+vector"];





Shen.fns["shen.ebr"] = [Shen.type_func, function shen_user_lambda6304(Arg6303) {
  if (Arg6303.length < 3) return [Shen.type_func, shen_user_lambda6304, 3, Arg6303];
  var Arg6303_0 = Arg6303[0], Arg6303_1 = Arg6303[1], Arg6303_2 = Arg6303[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6303_2, Arg6303_1)))
  ? Arg6303_0
  : (((Shen.is_type(Arg6303_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6303_2[1])) && (Shen.is_type(Arg6303_2[2], Shen.type_cons) && (Shen.is_type(Arg6303_2[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6303_2[2][2][2]) && (Shen.call(Shen.fns["occurrences"], [Arg6303_1, Arg6303_2[2][1]]) > 0)))))))
  ? Arg6303_2
  : (((Shen.is_type(Arg6303_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6303_2[1])) && (Shen.is_type(Arg6303_2[2], Shen.type_cons) && (Shen.is_type(Arg6303_2[2][2], Shen.type_cons) && (Shen.is_type(Arg6303_2[2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6303_2[2][2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6303_2[2][1], Arg6303_1)))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6303_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6303_0, Arg6303_2[2][1], Arg6303_2[2][2][1]]), Arg6303_2[2][2][2]]]]
  : ((Shen.is_type(Arg6303_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6303_0, Arg6303_1, Arg6303_2[1]]), Shen.call(Shen.fns["shen.ebr"], [Arg6303_0, Arg6303_1, Arg6303_2[2]])]
  : Arg6303_2))))}, 3, [], "shen.ebr"];





Shen.fns["shen.add_test"] = [Shen.type_func, function shen_user_lambda6306(Arg6305) {
  if (Arg6305.length < 1) return [Shen.type_func, shen_user_lambda6306, 1, Arg6305];
  var Arg6305_0 = Arg6305[0];
  return (Shen.globals["shen.*teststack*"] = [Shen.type_cons, Arg6305_0, (Shen.globals["shen.*teststack*"])])}, 1, [], "shen.add_test"];





Shen.fns["shen.cond-expression"] = [Shen.type_func, function shen_user_lambda6308(Arg6307) {
  if (Arg6307.length < 3) return [Shen.type_func, shen_user_lambda6308, 3, Arg6307];
  var Arg6307_0 = Arg6307[0], Arg6307_1 = Arg6307[1], Arg6307_2 = Arg6307[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.err-condition"], [Arg6307_0])),
  (R0 = Shen.call(Shen.fns["shen.case-form"], [Arg6307_2, R0])),
  (R0 = Shen.call(Shen.fns["shen.encode-choices"], [R0, Arg6307_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cond-form"], [R0]);}))}, 3, [], "shen.cond-expression"];





Shen.fns["shen.cond-form"] = [Shen.type_func, function shen_user_lambda6310(Arg6309) {
  if (Arg6309.length < 1) return [Shen.type_func, shen_user_lambda6310, 1, Arg6309];
  var Arg6309_0 = Arg6309[0];
  return (((Shen.is_type(Arg6309_0, Shen.type_cons) && (Shen.is_type(Arg6309_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6309_0[1][1])) && (Shen.is_type(Arg6309_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6309_0[1][2][2]))))))
  ? Arg6309_0[1][2][1]
  : [Shen.type_cons, [Shen.type_symbol, "cond"], Arg6309_0])}, 1, [], "shen.cond-form"];





Shen.fns["shen.encode-choices"] = [Shen.type_func, function shen_user_lambda6312(Arg6311) {
  if (Arg6311.length < 2) return [Shen.type_func, shen_user_lambda6312, 2, Arg6311];
  var Arg6311_0 = Arg6311[0], Arg6311_1 = Arg6311[1];
  return ((Shen.empty$question$(Arg6311_0))
  ? []
  : (((Shen.is_type(Arg6311_0, Shen.type_cons) && (Shen.is_type(Arg6311_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6311_0[1][1])) && (Shen.is_type(Arg6311_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6311_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6311_0[1][2][1][1])) && (Shen.is_type(Arg6311_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6311_0[1][2][1][2][2]) && (Shen.empty$question$(Arg6311_0[1][2][2]) && Shen.empty$question$(Arg6311_0[2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6311_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.sys-error"], [Shen.type_cons, Arg6311_1, []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6311_1, []]]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6311_0, Shen.type_cons) && (Shen.is_type(Arg6311_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6311_0[1][1])) && (Shen.is_type(Arg6311_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6311_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6311_0[1][2][1][1])) && (Shen.is_type(Arg6311_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6311_0[1][2][1][2][2]) && Shen.empty$question$(Arg6311_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6311_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6311_0[2], Arg6311_1])]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6311_0, Shen.type_cons) && (Shen.is_type(Arg6311_0[1], Shen.type_cons) && (Shen.is_type(Arg6311_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6311_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6311_0[1][2][1][1])) && (Shen.is_type(Arg6311_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6311_0[1][2][1][2][2]) && Shen.empty$question$(Arg6311_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6311_0[2], Arg6311_1])]), []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6311_0[1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6311_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6311_0, Shen.type_cons) && (Shen.is_type(Arg6311_0[1], Shen.type_cons) && (Shen.is_type(Arg6311_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6311_0[1][2][2])))))
  ? [Shen.type_cons, Arg6311_0[1], Shen.call(Shen.fns["shen.encode-choices"], [Arg6311_0[2], Arg6311_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.encode-choices"]]);}))))))}, 2, [], "shen.encode-choices"];





Shen.fns["shen.case-form"] = [Shen.type_func, function shen_user_lambda6314(Arg6313) {
  if (Arg6313.length < 2) return [Shen.type_func, shen_user_lambda6314, 2, Arg6313];
  var Arg6313_0 = Arg6313[0], Arg6313_1 = Arg6313[1];
  return ((Shen.empty$question$(Arg6313_0))
  ? [Shen.type_cons, Arg6313_1, []]
  : (((Shen.is_type(Arg6313_0, Shen.type_cons) && (Shen.is_type(Arg6313_0[1], Shen.type_cons) && (Shen.is_type(Arg6313_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6313_0[1][1][1])) && (Shen.is_type(Arg6313_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6313_0[1][1][2][1])) && (Shen.empty$question$(Arg6313_0[1][1][2][2]) && (Shen.is_type(Arg6313_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6313_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6313_0[1][2][1][1])) && (Shen.is_type(Arg6313_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6313_0[1][2][1][2][2]) && Shen.empty$question$(Arg6313_0[1][2][2]))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6313_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6313_0[2], Arg6313_1])]
  : (((Shen.is_type(Arg6313_0, Shen.type_cons) && (Shen.is_type(Arg6313_0[1], Shen.type_cons) && (Shen.is_type(Arg6313_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6313_0[1][1][1])) && (Shen.is_type(Arg6313_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6313_0[1][1][2][1])) && (Shen.empty$question$(Arg6313_0[1][1][2][2]) && (Shen.is_type(Arg6313_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6313_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6313_0[1][2]], []]
  : (((Shen.is_type(Arg6313_0, Shen.type_cons) && (Shen.is_type(Arg6313_0[1], Shen.type_cons) && (Shen.is_type(Arg6313_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6313_0[1][1][1])) && (Shen.is_type(Arg6313_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6313_0[1][1][2][1])) && (Shen.is_type(Arg6313_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6313_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6313_0[1][1][2][2]]), Arg6313_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6313_0[2], Arg6313_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.case-form"]]);})))))}, 2, [], "shen.case-form"];





Shen.fns["shen.embed-and"] = [Shen.type_func, function shen_user_lambda6316(Arg6315) {
  if (Arg6315.length < 1) return [Shen.type_func, shen_user_lambda6316, 1, Arg6315];
  var Arg6315_0 = Arg6315[0];
  return (((Shen.is_type(Arg6315_0, Shen.type_cons) && Shen.empty$question$(Arg6315_0[2])))
  ? Arg6315_0[1]
  : ((Shen.is_type(Arg6315_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, Arg6315_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6315_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.embed-and"]]);})))}, 1, [], "shen.embed-and"];





Shen.fns["shen.err-condition"] = [Shen.type_func, function shen_user_lambda6318(Arg6317) {
  if (Arg6317.length < 1) return [Shen.type_func, shen_user_lambda6318, 1, Arg6317];
  var Arg6317_0 = Arg6317[0];
  return [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6317_0, []]], []]]}, 1, [], "shen.err-condition"];





Shen.fns["shen.sys-error"] = [Shen.type_func, function shen_user_lambda6320(Arg6319) {
  if (Arg6319.length < 1) return [Shen.type_func, shen_user_lambda6320, 1, Arg6319];
  var Arg6319_0 = Arg6319[0];
  return (function() {
  return Shen.simple_error(("system function " + Shen.call(Shen.fns["shen.app"], [Arg6319_0, ": unexpected argument\x0a", [Shen.type_symbol, "shen.a"]])));})}, 1, [], "shen.sys-error"];















Shen.fns["eval"] = [Shen.type_func, function shen_user_lambda6976(Arg6975) {
  if (Arg6975.length < 1) return [Shen.type_func, shen_user_lambda6976, 1, Arg6975];
  var Arg6975_0 = Arg6975[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda6978(Arg6977) {
  if (Arg6977.length < 1) return [Shen.type_func, shen_user_lambda6978, 1, Arg6977];
  var Arg6977_0 = Arg6977[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg6977_0]);})}, 1, [], undefined], Arg6975_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.eval-without-macros"], Shen.call(Shen.fns["shen.package-contents"], [R0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.eval-without-macros"], [R0]);})))}, 1, [], "eval"];





Shen.fns["shen.eval-without-macros"] = [Shen.type_func, function shen_user_lambda6980(Arg6979) {
  if (Arg6979.length < 1) return [Shen.type_func, shen_user_lambda6980, 1, Arg6979];
  var Arg6979_0 = Arg6979[0];
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["shen.elim-define"], [Shen.call(Shen.fns["shen.proc-input+"], [Arg6979_0])]));})}, 1, [], "shen.eval-without-macros"];





Shen.fns["shen.proc-input+"] = [Shen.type_func, function shen_user_lambda6982(Arg6981) {
  if (Arg6981.length < 1) return [Shen.type_func, shen_user_lambda6982, 1, Arg6981];
  var Arg6981_0 = Arg6981[0];
  return (((Shen.is_type(Arg6981_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg6981_0[1])) && (Shen.is_type(Arg6981_0[2], Shen.type_cons) && (Shen.is_type(Arg6981_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6981_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Arg6981_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6981_0[2][2][1]]), []]]]
  : ((Shen.is_type(Arg6981_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.proc-input+"], Arg6981_0]);})
  : Arg6981_0))}, 1, [], "shen.proc-input+"];





Shen.fns["shen.elim-define"] = [Shen.type_func, function shen_user_lambda6984(Arg6983) {
  if (Arg6983.length < 1) return [Shen.type_func, shen_user_lambda6984, 1, Arg6983];
  var Arg6983_0 = Arg6983[0];
  return (((Shen.is_type(Arg6983_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg6983_0[1])) && Shen.is_type(Arg6983_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.shen->kl"], [Arg6983_0[2][1], Arg6983_0[2][2]]);})
  : (((Shen.is_type(Arg6983_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6983_0[1])) && Shen.is_type(Arg6983_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.elim-define"], [Shen.call(Shen.fns["shen.yacc"], [Arg6983_0])]);})
  : ((Shen.is_type(Arg6983_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.elim-define"], Arg6983_0]);})
  : Arg6983_0)))}, 1, [], "shen.elim-define"];





Shen.fns["shen.packaged?"] = [Shen.type_func, function shen_user_lambda6986(Arg6985) {
  if (Arg6985.length < 1) return [Shen.type_func, shen_user_lambda6986, 1, Arg6985];
  var Arg6985_0 = Arg6985[0];
  return (((Shen.is_type(Arg6985_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6985_0[1])) && (Shen.is_type(Arg6985_0[2], Shen.type_cons) && Shen.is_type(Arg6985_0[2][2], Shen.type_cons)))))
  ? true
  : false)}, 1, [], "shen.packaged?"];





Shen.fns["external"] = [Shen.type_func, function shen_user_lambda6988(Arg6987) {
  if (Arg6987.length < 1) return [Shen.type_func, shen_user_lambda6988, 1, Arg6987];
  var Arg6987_0 = Arg6987[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6987_0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6990(Arg6989) {
  if (Arg6989.length < 2) return [Shen.type_func, shen_user_lambda6990, 2, Arg6989];
  var Arg6989_0 = Arg6989[0], Arg6989_1 = Arg6989[1];
  return (function() {
  return Shen.simple_error(("package " + Shen.call(Shen.fns["shen.app"], [Arg6989_0, " has not been used.\x0a", [Shen.type_symbol, "shen.a"]])));})}, 2, [Arg6987_0], undefined]);})}, 1, [], "external"];





Shen.fns["shen.package-contents"] = [Shen.type_func, function shen_user_lambda6992(Arg6991) {
  if (Arg6991.length < 1) return [Shen.type_func, shen_user_lambda6992, 1, Arg6991];
  var Arg6991_0 = Arg6991[0];
  return (((Shen.is_type(Arg6991_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6991_0[1])) && (Shen.is_type(Arg6991_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg6991_0[2][1])) && Shen.is_type(Arg6991_0[2][2], Shen.type_cons))))))
  ? Arg6991_0[2][2][2]
  : (((Shen.is_type(Arg6991_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6991_0[1])) && (Shen.is_type(Arg6991_0[2], Shen.type_cons) && Shen.is_type(Arg6991_0[2][2], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.packageh"], [Arg6991_0[2][1], Arg6991_0[2][2][1], Arg6991_0[2][2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.package-contents"]]);})))}, 1, [], "shen.package-contents"];





Shen.fns["shen.walk"] = [Shen.type_func, function shen_user_lambda6994(Arg6993) {
  if (Arg6993.length < 2) return [Shen.type_func, shen_user_lambda6994, 2, Arg6993];
  var Arg6993_0 = Arg6993[0], Arg6993_1 = Arg6993[1];
  return ((Shen.is_type(Arg6993_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Arg6993_0, [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6996(Arg6995) {
  if (Arg6995.length < 2) return [Shen.type_func, shen_user_lambda6996, 2, Arg6995];
  var Arg6995_0 = Arg6995[0], Arg6995_1 = Arg6995[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [Arg6995_0, Arg6995_1]);})}, 2, [Arg6993_0], undefined], Arg6993_1])]);})
  : (function() {
  return Shen.call_tail(Arg6993_0, [Arg6993_1]);}))}, 2, [], "shen.walk"];





Shen.fns["compile"] = [Shen.type_func, function shen_user_lambda6998(Arg6997) {
  if (Arg6997.length < 3) return [Shen.type_func, shen_user_lambda6998, 3, Arg6997];
  var Arg6997_0 = Arg6997[0], Arg6997_1 = Arg6997[1], Arg6997_2 = Arg6997[2];
  var R0;
  return ((R0 = Shen.call(Arg6997_0, [[Shen.type_cons, Arg6997_1, [Shen.type_cons, [], []]]])),
  (((Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0)) || (!Shen.empty$question$(R0[1]))))
  ? (function() {
  return Shen.call_tail(Arg6997_2, [R0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.hdtl"], [R0]);})))}, 3, [], "compile"];





Shen.fns["fail-if"] = [Shen.type_func, function shen_user_lambda7000(Arg6999) {
  if (Arg6999.length < 2) return [Shen.type_func, shen_user_lambda7000, 2, Arg6999];
  var Arg6999_0 = Arg6999[0], Arg6999_1 = Arg6999[1];
  return ((Shen.call(Arg6999_0, [Arg6999_1]))
  ? Shen.fail_obj
  : Arg6999_1)}, 2, [], "fail-if"];





Shen.fns["@s"] = [Shen.type_func, function shen_user_lambda7002(Arg7001) {
  if (Arg7001.length < 2) return [Shen.type_func, shen_user_lambda7002, 2, Arg7001];
  var Arg7001_0 = Arg7001[0], Arg7001_1 = Arg7001[1];
  return (Arg7001_0 + Arg7001_1)}, 2, [], "@s"];





Shen.fns["tc?"] = [Shen.type_func, function shen_user_lambda7004(Arg7003) {
  if (Arg7003.length < 1) return [Shen.type_func, shen_user_lambda7004, 1, Arg7003];
  var Arg7003_0 = Arg7003[0];
  return (Shen.globals["shen.*tc*"])}, 1, [], "tc?"];





Shen.fns["ps"] = [Shen.type_func, function shen_user_lambda7006(Arg7005) {
  if (Arg7005.length < 1) return [Shen.type_func, shen_user_lambda7006, 1, Arg7005];
  var Arg7005_0 = Arg7005[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7005_0, [Shen.type_symbol, "shen.source"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7008(Arg7007) {
  if (Arg7007.length < 2) return [Shen.type_func, shen_user_lambda7008, 2, Arg7007];
  var Arg7007_0 = Arg7007[0], Arg7007_1 = Arg7007[1];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7007_0, " not found.\x0a", [Shen.type_symbol, "shen.a"]]));})}, 2, [Arg7005_0], undefined]);})}, 1, [], "ps"];





Shen.fns["stinput"] = [Shen.type_func, function shen_user_lambda7010(Arg7009) {
  if (Arg7009.length < 0) return [Shen.type_func, shen_user_lambda7010, 0, Arg7009];
  return (Shen.globals["*stinput*"])}, 0, [], "stinput"];





Shen.fns["shen.+vector?"] = [Shen.type_func, function shen_user_lambda7012(Arg7011) {
  if (Arg7011.length < 1) return [Shen.type_func, shen_user_lambda7012, 1, Arg7011];
  var Arg7011_0 = Arg7011[0];
  return (Shen.absvector$question$(Arg7011_0) && (Shen.absvector_ref(Arg7011_0, 0) > 0))}, 1, [], "shen.+vector?"];










Shen.fns["shen.fillvector"] = [Shen.type_func, function shen_user_lambda7015(Arg7014) {
  if (Arg7014.length < 4) return [Shen.type_func, shen_user_lambda7015, 4, Arg7014];
  var Arg7014_0 = Arg7014[0], Arg7014_1 = Arg7014[1], Arg7014_2 = Arg7014[2], Arg7014_3 = Arg7014[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7014_2, Arg7014_1)))
  ? Shen.absvector_set(Arg7014_0, Arg7014_2, Arg7014_3)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fillvector"], [Shen.absvector_set(Arg7014_0, Arg7014_1, Arg7014_3), (1 + Arg7014_1), Arg7014_2, Arg7014_3]);}))}, 4, [], "shen.fillvector"];










Shen.fns["vector->"] = [Shen.type_func, function shen_user_lambda7018(Arg7017) {
  if (Arg7017.length < 3) return [Shen.type_func, shen_user_lambda7018, 3, Arg7017];
  var Arg7017_0 = Arg7017[0], Arg7017_1 = Arg7017[1], Arg7017_2 = Arg7017[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7017_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : Shen.absvector_set(Arg7017_0, Arg7017_1, Arg7017_2))}, 3, [], "vector->"];





Shen.fns["<-vector"] = [Shen.type_func, function shen_user_lambda7020(Arg7019) {
  if (Arg7019.length < 2) return [Shen.type_func, shen_user_lambda7020, 2, Arg7019];
  var Arg7019_0 = Arg7019[0], Arg7019_1 = Arg7019[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7019_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : ((R0 = Shen.absvector_ref(Arg7019_0, Arg7019_1)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error("vector element not found\x0a");})
  : R0)))}, 2, [], "<-vector"];





Shen.fns["shen.posint?"] = [Shen.type_func, function shen_user_lambda7022(Arg7021) {
  if (Arg7021.length < 1) return [Shen.type_func, shen_user_lambda7022, 1, Arg7021];
  var Arg7021_0 = Arg7021[0];
  return (Shen.call(Shen.fns["integer?"], [Arg7021_0]) && (Arg7021_0 >= 0))}, 1, [], "shen.posint?"];





Shen.fns["limit"] = [Shen.type_func, function shen_user_lambda7024(Arg7023) {
  if (Arg7023.length < 1) return [Shen.type_func, shen_user_lambda7024, 1, Arg7023];
  var Arg7023_0 = Arg7023[0];
  return Shen.absvector_ref(Arg7023_0, 0)}, 1, [], "limit"];










Shen.fns["shen.analyse-symbol?"] = [Shen.type_func, function shen_user_lambda7027(Arg7026) {
  if (Arg7026.length < 1) return [Shen.type_func, shen_user_lambda7027, 1, Arg7026];
  var Arg7026_0 = Arg7026[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7026_0]))
  ? (Shen.call(Shen.fns["shen.alpha?"], [Arg7026_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7026_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-symbol?"]]);}))}, 1, [], "shen.analyse-symbol?"];





Shen.fns["shen.alpha?"] = [Shen.type_func, function shen_user_lambda7029(Arg7028) {
  if (Arg7028.length < 1) return [Shen.type_func, shen_user_lambda7029, 1, Arg7028];
  var Arg7028_0 = Arg7028[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7028_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", [Shen.type_cons, "a", [Shen.type_cons, "b", [Shen.type_cons, "c", [Shen.type_cons, "d", [Shen.type_cons, "e", [Shen.type_cons, "f", [Shen.type_cons, "g", [Shen.type_cons, "h", [Shen.type_cons, "i", [Shen.type_cons, "j", [Shen.type_cons, "k", [Shen.type_cons, "l", [Shen.type_cons, "m", [Shen.type_cons, "n", [Shen.type_cons, "o", [Shen.type_cons, "p", [Shen.type_cons, "q", [Shen.type_cons, "r", [Shen.type_cons, "s", [Shen.type_cons, "t", [Shen.type_cons, "u", [Shen.type_cons, "v", [Shen.type_cons, "w", [Shen.type_cons, "x", [Shen.type_cons, "y", [Shen.type_cons, "z", [Shen.type_cons, "=", [Shen.type_cons, "*", [Shen.type_cons, "/", [Shen.type_cons, "+", [Shen.type_cons, "-", [Shen.type_cons, "_", [Shen.type_cons, "?", [Shen.type_cons, "$", [Shen.type_cons, "!", [Shen.type_cons, "@", [Shen.type_cons, "~", [Shen.type_cons, ">", [Shen.type_cons, "<", [Shen.type_cons, "&", [Shen.type_cons, "%", [Shen.type_cons, "{", [Shen.type_cons, "}", [Shen.type_cons, ":", [Shen.type_cons, ";", [Shen.type_cons, "`", [Shen.type_cons, "#", [Shen.type_cons, "'", [Shen.type_cons, ".", []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.alpha?"];





Shen.fns["shen.alphanums?"] = [Shen.type_func, function shen_user_lambda7031(Arg7030) {
  if (Arg7030.length < 1) return [Shen.type_func, shen_user_lambda7031, 1, Arg7030];
  var Arg7030_0 = Arg7030[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7030_0)))
  ? true
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7030_0]))
  ? (Shen.call(Shen.fns["shen.alphanum?"], [Arg7030_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7030_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.alphanums?"]]);})))}, 1, [], "shen.alphanums?"];





Shen.fns["shen.alphanum?"] = [Shen.type_func, function shen_user_lambda7033(Arg7032) {
  if (Arg7032.length < 1) return [Shen.type_func, shen_user_lambda7033, 1, Arg7032];
  var Arg7032_0 = Arg7032[0];
  return (Shen.call(Shen.fns["shen.alpha?"], [Arg7032_0]) || Shen.call(Shen.fns["shen.digit?"], [Arg7032_0]))}, 1, [], "shen.alphanum?"];





Shen.fns["shen.digit?"] = [Shen.type_func, function shen_user_lambda7035(Arg7034) {
  if (Arg7034.length < 1) return [Shen.type_func, shen_user_lambda7035, 1, Arg7034];
  var Arg7034_0 = Arg7034[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7034_0, [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]);})}, 1, [], "shen.digit?"];





Shen.fns["variable?"] = [Shen.type_func, function shen_user_lambda7037(Arg7036) {
  if (Arg7036.length < 1) return [Shen.type_func, shen_user_lambda7037, 1, Arg7036];
  var Arg7036_0 = Arg7036[0];
  var R0;
  return (((Shen.boolean$question$(Arg7036_0) || ((typeof(Arg7036_0) == 'number') || (typeof(Arg7036_0) == 'string'))))
  ? false
  : (function() {
  return Shen.trap_error(function() {return ((R0 = Shen.str(Arg7036_0)),
  Shen.call(Shen.fns["shen.analyse-variable?"], [R0]));}, [Shen.type_func, function shen_user_lambda7039(Arg7038) {
  if (Arg7038.length < 1) return [Shen.type_func, shen_user_lambda7039, 1, Arg7038];
  var Arg7038_0 = Arg7038[0];
  return false}, 1, [], undefined]);}))}, 1, [], "variable?"];





Shen.fns["shen.analyse-variable?"] = [Shen.type_func, function shen_user_lambda7041(Arg7040) {
  if (Arg7040.length < 1) return [Shen.type_func, shen_user_lambda7041, 1, Arg7040];
  var Arg7040_0 = Arg7040[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7040_0]))
  ? (Shen.call(Shen.fns["shen.uppercase?"], [Arg7040_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7040_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-variable?"]]);}))}, 1, [], "shen.analyse-variable?"];





Shen.fns["shen.uppercase?"] = [Shen.type_func, function shen_user_lambda7043(Arg7042) {
  if (Arg7042.length < 1) return [Shen.type_func, shen_user_lambda7043, 1, Arg7042];
  var Arg7042_0 = Arg7042[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7042_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", []]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.uppercase?"];





Shen.fns["gensym"] = [Shen.type_func, function shen_user_lambda7045(Arg7044) {
  if (Arg7044.length < 1) return [Shen.type_func, shen_user_lambda7045, 1, Arg7044];
  var Arg7044_0 = Arg7044[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg7044_0, (Shen.globals["shen.*gensym*"] = (1 + (Shen.globals["shen.*gensym*"])))]);})}, 1, [], "gensym"];





Shen.fns["concat"] = [Shen.type_func, function shen_user_lambda7047(Arg7046) {
  if (Arg7046.length < 2) return [Shen.type_func, shen_user_lambda7047, 2, Arg7046];
  var Arg7046_0 = Arg7046[0], Arg7046_1 = Arg7046[1];
  return (function() {
  return Shen.intern((Shen.str(Arg7046_0) + Shen.str(Arg7046_1)));})}, 2, [], "concat"];










Shen.fns["fst"] = [Shen.type_func, function shen_user_lambda7050(Arg7049) {
  if (Arg7049.length < 1) return [Shen.type_func, shen_user_lambda7050, 1, Arg7049];
  var Arg7049_0 = Arg7049[0];
  return Shen.absvector_ref(Arg7049_0, 1)}, 1, [], "fst"];





Shen.fns["snd"] = [Shen.type_func, function shen_user_lambda7052(Arg7051) {
  if (Arg7051.length < 1) return [Shen.type_func, shen_user_lambda7052, 1, Arg7051];
  var Arg7051_0 = Arg7051[0];
  return Shen.absvector_ref(Arg7051_0, 2)}, 1, [], "snd"];





Shen.fns["tuple?"] = [Shen.type_func, function shen_user_lambda7054(Arg7053) {
  if (Arg7053.length < 1) return [Shen.type_func, shen_user_lambda7054, 1, Arg7053];
  var Arg7053_0 = Arg7053[0];
  return (function() {
  return Shen.trap_error(function() {return (Shen.absvector$question$(Arg7053_0) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tuple"], Shen.absvector_ref(Arg7053_0, 0))));}, [Shen.type_func, function shen_user_lambda7056(Arg7055) {
  if (Arg7055.length < 1) return [Shen.type_func, shen_user_lambda7056, 1, Arg7055];
  var Arg7055_0 = Arg7055[0];
  return false}, 1, [], undefined]);})}, 1, [], "tuple?"];





Shen.fns["append"] = [Shen.type_func, function shen_user_lambda7058(Arg7057) {
  if (Arg7057.length < 2) return [Shen.type_func, shen_user_lambda7058, 2, Arg7057];
  var Arg7057_0 = Arg7057[0], Arg7057_1 = Arg7057[1];
  return ((Shen.empty$question$(Arg7057_0))
  ? Arg7057_1
  : ((Shen.is_type(Arg7057_0, Shen.type_cons))
  ? [Shen.type_cons, Arg7057_0[1], Shen.call(Shen.fns["append"], [Arg7057_0[2], Arg7057_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "append"]]);})))}, 2, [], "append"];





Shen.fns["@v"] = [Shen.type_func, function shen_user_lambda7060(Arg7059) {
  if (Arg7059.length < 2) return [Shen.type_func, shen_user_lambda7060, 2, Arg7059];
  var Arg7059_0 = Arg7059[0], Arg7059_1 = Arg7059[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7059_1])),
  (R1 = Shen.vector((R0 + 1))),
  (R1 = Shen.call(Shen.fns["vector->"], [R1, 1, Arg7059_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? R1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7059_1, 1, R0, R1]);})))}, 2, [], "@v"];





Shen.fns["shen.@v-help"] = [Shen.type_func, function shen_user_lambda7062(Arg7061) {
  if (Arg7061.length < 4) return [Shen.type_func, shen_user_lambda7062, 4, Arg7061];
  var Arg7061_0 = Arg7061[0], Arg7061_1 = Arg7061[1], Arg7061_2 = Arg7061[2], Arg7061_3 = Arg7061[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7061_2, Arg7061_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7061_0, Arg7061_3, Arg7061_2, (Arg7061_2 + 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7061_0, (Arg7061_1 + 1), Arg7061_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7061_0, Arg7061_3, Arg7061_1, (Arg7061_1 + 1)])]);}))}, 4, [], "shen.@v-help"];





Shen.fns["shen.copyfromvector"] = [Shen.type_func, function shen_user_lambda7064(Arg7063) {
  if (Arg7063.length < 4) return [Shen.type_func, shen_user_lambda7064, 4, Arg7063];
  var Arg7063_0 = Arg7063[0], Arg7063_1 = Arg7063[1], Arg7063_2 = Arg7063[2], Arg7063_3 = Arg7063[3];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["vector->"], [Arg7063_1, Arg7063_3, Shen.call(Shen.fns["<-vector"], [Arg7063_0, Arg7063_2])]);}, [Shen.type_func, function shen_user_lambda7066(Arg7065) {
  if (Arg7065.length < 2) return [Shen.type_func, shen_user_lambda7066, 2, Arg7065];
  var Arg7065_0 = Arg7065[0], Arg7065_1 = Arg7065[1];
  return Arg7065_0}, 2, [Arg7063_1], undefined]);})}, 4, [], "shen.copyfromvector"];





Shen.fns["hdv"] = [Shen.type_func, function shen_user_lambda7068(Arg7067) {
  if (Arg7067.length < 1) return [Shen.type_func, shen_user_lambda7068, 1, Arg7067];
  var Arg7067_0 = Arg7067[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7067_0, 1]);}, [Shen.type_func, function shen_user_lambda7070(Arg7069) {
  if (Arg7069.length < 2) return [Shen.type_func, shen_user_lambda7070, 2, Arg7069];
  var Arg7069_0 = Arg7069[0], Arg7069_1 = Arg7069[1];
  return (function() {
  return Shen.simple_error(("hdv needs a non-empty vector as an argument; not " + Shen.call(Shen.fns["shen.app"], [Arg7069_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})}, 2, [Arg7067_0], undefined]);})}, 1, [], "hdv"];





Shen.fns["tlv"] = [Shen.type_func, function shen_user_lambda7072(Arg7071) {
  if (Arg7071.length < 1) return [Shen.type_func, shen_user_lambda7072, 1, Arg7071];
  var Arg7071_0 = Arg7071[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7071_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? (function() {
  return Shen.simple_error("cannot take the tail of the empty vector\x0a");})
  : ((Shen.unwind_tail(Shen.$eq$(R0, 1)))
  ? (function() {
  return Shen.vector(0);})
  : (Shen.vector((R0 - 1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7071_0, 2, R0, Shen.vector((R0 - 1))]);})))))}, 1, [], "tlv"];





Shen.fns["shen.tlv-help"] = [Shen.type_func, function shen_user_lambda7074(Arg7073) {
  if (Arg7073.length < 4) return [Shen.type_func, shen_user_lambda7074, 4, Arg7073];
  var Arg7073_0 = Arg7073[0], Arg7073_1 = Arg7073[1], Arg7073_2 = Arg7073[2], Arg7073_3 = Arg7073[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7073_2, Arg7073_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7073_0, Arg7073_3, Arg7073_2, (Arg7073_2 - 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7073_0, (Arg7073_1 + 1), Arg7073_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7073_0, Arg7073_3, Arg7073_1, (Arg7073_1 - 1)])]);}))}, 4, [], "shen.tlv-help"];





Shen.fns["assoc"] = [Shen.type_func, function shen_user_lambda7076(Arg7075) {
  if (Arg7075.length < 2) return [Shen.type_func, shen_user_lambda7076, 2, Arg7075];
  var Arg7075_0 = Arg7075[0], Arg7075_1 = Arg7075[1];
  return ((Shen.empty$question$(Arg7075_1))
  ? []
  : (((Shen.is_type(Arg7075_1, Shen.type_cons) && (Shen.is_type(Arg7075_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7075_1[1][1], Arg7075_0)))))
  ? Arg7075_1[1]
  : ((Shen.is_type(Arg7075_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["assoc"], [Arg7075_0, Arg7075_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "assoc"]]);}))))}, 2, [], "assoc"];





Shen.fns["boolean?"] = [Shen.type_func, function shen_user_lambda7078(Arg7077) {
  if (Arg7077.length < 1) return [Shen.type_func, shen_user_lambda7078, 1, Arg7077];
  var Arg7077_0 = Arg7077[0];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg7077_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg7077_0)))
  ? true
  : false))}, 1, [], "boolean?"];





Shen.fns["nl"] = [Shen.type_func, function shen_user_lambda7080(Arg7079) {
  if (Arg7079.length < 1) return [Shen.type_func, shen_user_lambda7080, 1, Arg7079];
  var Arg7079_0 = Arg7079[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7079_0)))
  ? 0
  : (Shen.pr("\x0a", Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [(Arg7079_0 - 1)]);})))}, 1, [], "nl"];





Shen.fns["difference"] = [Shen.type_func, function shen_user_lambda7082(Arg7081) {
  if (Arg7081.length < 2) return [Shen.type_func, shen_user_lambda7082, 2, Arg7081];
  var Arg7081_0 = Arg7081[0], Arg7081_1 = Arg7081[1];
  return ((Shen.empty$question$(Arg7081_0))
  ? []
  : ((Shen.is_type(Arg7081_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7081_0[1], Arg7081_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["difference"], [Arg7081_0[2], Arg7081_1]);})
  : [Shen.type_cons, Arg7081_0[1], Shen.call(Shen.fns["difference"], [Arg7081_0[2], Arg7081_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "difference"]]);})))}, 2, [], "difference"];





Shen.fns["do"] = [Shen.type_func, function shen_user_lambda7084(Arg7083) {
  if (Arg7083.length < 2) return [Shen.type_func, shen_user_lambda7084, 2, Arg7083];
  var Arg7083_0 = Arg7083[0], Arg7083_1 = Arg7083[1];
  return Arg7083_1}, 2, [], "do"];





Shen.fns["element?"] = [Shen.type_func, function shen_user_lambda7086(Arg7085) {
  if (Arg7085.length < 2) return [Shen.type_func, shen_user_lambda7086, 2, Arg7085];
  var Arg7085_0 = Arg7085[0], Arg7085_1 = Arg7085[1];
  return ((Shen.empty$question$(Arg7085_1))
  ? false
  : (((Shen.is_type(Arg7085_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7085_1[1], Arg7085_0))))
  ? true
  : ((Shen.is_type(Arg7085_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7085_0, Arg7085_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "element?"]]);}))))}, 2, [], "element?"];










Shen.fns["fix"] = [Shen.type_func, function shen_user_lambda7089(Arg7088) {
  if (Arg7088.length < 2) return [Shen.type_func, shen_user_lambda7089, 2, Arg7088];
  var Arg7088_0 = Arg7088[0], Arg7088_1 = Arg7088[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7088_0, Arg7088_1, Shen.call(Arg7088_0, [Arg7088_1])]);})}, 2, [], "fix"];





Shen.fns["shen.fix-help"] = [Shen.type_func, function shen_user_lambda7091(Arg7090) {
  if (Arg7090.length < 3) return [Shen.type_func, shen_user_lambda7091, 3, Arg7090];
  var Arg7090_0 = Arg7090[0], Arg7090_1 = Arg7090[1], Arg7090_2 = Arg7090[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7090_2, Arg7090_1)))
  ? Arg7090_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7090_0, Arg7090_2, Shen.call(Arg7090_0, [Arg7090_2])]);}))}, 3, [], "shen.fix-help"];





Shen.fns["put"] = [Shen.type_func, function shen_user_lambda7093(Arg7092) {
  if (Arg7092.length < 4) return [Shen.type_func, shen_user_lambda7093, 4, Arg7092];
  var Arg7092_0 = Arg7092[0], Arg7092_1 = Arg7092[1], Arg7092_2 = Arg7092[2], Arg7092_3 = Arg7092[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7092_0, Shen.call(Shen.fns["limit"], [Arg7092_3])])),
  (R1 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7092_3, R0]);}, [Shen.type_func, function shen_user_lambda7095(Arg7094) {
  if (Arg7094.length < 1) return [Shen.type_func, shen_user_lambda7095, 1, Arg7094];
  var Arg7094_0 = Arg7094[0];
  return []}, 1, [], undefined])),
  Shen.call(Shen.fns["vector->"], [Arg7092_3, R0, Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7092_0, Arg7092_1, Arg7092_2, R1])]),
  Arg7092_2)}, 4, [], "put"];





Shen.fns["shen.change-pointer-value"] = [Shen.type_func, function shen_user_lambda7097(Arg7096) {
  if (Arg7096.length < 4) return [Shen.type_func, shen_user_lambda7097, 4, Arg7096];
  var Arg7096_0 = Arg7096[0], Arg7096_1 = Arg7096[1], Arg7096_2 = Arg7096[2], Arg7096_3 = Arg7096[3];
  return ((Shen.empty$question$(Arg7096_3))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg7096_0, [Shen.type_cons, Arg7096_1, []]], Arg7096_2], []]
  : (((Shen.is_type(Arg7096_3, Shen.type_cons) && (Shen.is_type(Arg7096_3[1], Shen.type_cons) && (Shen.is_type(Arg7096_3[1][1], Shen.type_cons) && (Shen.is_type(Arg7096_3[1][1][2], Shen.type_cons) && (Shen.empty$question$(Arg7096_3[1][1][2][2]) && (Shen.unwind_tail(Shen.$eq$(Arg7096_3[1][1][2][1], Arg7096_1)) && Shen.unwind_tail(Shen.$eq$(Arg7096_3[1][1][1], Arg7096_0)))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg7096_3[1][1], Arg7096_2], Arg7096_3[2]]
  : ((Shen.is_type(Arg7096_3, Shen.type_cons))
  ? [Shen.type_cons, Arg7096_3[1], Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7096_0, Arg7096_1, Arg7096_2, Arg7096_3[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.change-pointer-value"]]);}))))}, 4, [], "shen.change-pointer-value"];





Shen.fns["get"] = [Shen.type_func, function shen_user_lambda7099(Arg7098) {
  if (Arg7098.length < 3) return [Shen.type_func, shen_user_lambda7099, 3, Arg7098];
  var Arg7098_0 = Arg7098[0], Arg7098_1 = Arg7098[1], Arg7098_2 = Arg7098[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7098_0, Shen.call(Shen.fns["limit"], [Arg7098_2])])),
  (R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7098_2, R0]);}, [Shen.type_func, function shen_user_lambda7101(Arg7100) {
  if (Arg7100.length < 1) return [Shen.type_func, shen_user_lambda7101, 1, Arg7100];
  var Arg7100_0 = Arg7100[0];
  return (function() {
  return Shen.simple_error("pointer not found\x0a");})}, 1, [], undefined])),
  (R0 = Shen.call(Shen.fns["assoc"], [[Shen.type_cons, Arg7098_0, [Shen.type_cons, Arg7098_1, []]], R0])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("value not found\x0a");})
  : R0[2]))}, 3, [], "get"];





Shen.fns["hash"] = [Shen.type_func, function shen_user_lambda7103(Arg7102) {
  if (Arg7102.length < 2) return [Shen.type_func, shen_user_lambda7103, 2, Arg7102];
  var Arg7102_0 = Arg7102[0], Arg7102_1 = Arg7102[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.mod"], [Shen.call(Shen.fns["shen.sum"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7105(Arg7104) {
  if (Arg7104.length < 1) return [Shen.type_func, shen_user_lambda7105, 1, Arg7104];
  var Arg7104_0 = Arg7104[0];
  return (function() {
  return Shen.string_$gt$n(Arg7104_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg7102_0])])]), Arg7102_1])),
  ((Shen.unwind_tail(Shen.$eq$(0, R0)))
  ? 1
  : R0))}, 2, [], "hash"];





Shen.fns["shen.mod"] = [Shen.type_func, function shen_user_lambda7107(Arg7106) {
  if (Arg7106.length < 2) return [Shen.type_func, shen_user_lambda7107, 2, Arg7106];
  var Arg7106_0 = Arg7106[0], Arg7106_1 = Arg7106[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7106_0, Shen.call(Shen.fns["shen.multiples"], [Arg7106_0, [Shen.type_cons, Arg7106_1, []]])]);})}, 2, [], "shen.mod"];





Shen.fns["shen.multiples"] = [Shen.type_func, function shen_user_lambda7109(Arg7108) {
  if (Arg7108.length < 2) return [Shen.type_func, shen_user_lambda7109, 2, Arg7108];
  var Arg7108_0 = Arg7108[0], Arg7108_1 = Arg7108[1];
  return (((Shen.is_type(Arg7108_1, Shen.type_cons) && (Arg7108_1[1] > Arg7108_0)))
  ? Arg7108_1[2]
  : ((Shen.is_type(Arg7108_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.multiples"], [Arg7108_0, [Shen.type_cons, (2 * Arg7108_1[1]), Arg7108_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiples"]]);})))}, 2, [], "shen.multiples"];





Shen.fns["shen.modh"] = [Shen.type_func, function shen_user_lambda7111(Arg7110) {
  if (Arg7110.length < 2) return [Shen.type_func, shen_user_lambda7111, 2, Arg7110];
  var Arg7110_0 = Arg7110[0], Arg7110_1 = Arg7110[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7110_0)))
  ? 0
  : ((Shen.empty$question$(Arg7110_1))
  ? Arg7110_0
  : (((Shen.is_type(Arg7110_1, Shen.type_cons) && (Arg7110_1[1] > Arg7110_0)))
  ? ((Shen.empty$question$(Arg7110_1[2]))
  ? Arg7110_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7110_0, Arg7110_1[2]]);}))
  : ((Shen.is_type(Arg7110_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [(Arg7110_0 - Arg7110_1[1]), Arg7110_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.modh"]]);})))))}, 2, [], "shen.modh"];





Shen.fns["shen.sum"] = [Shen.type_func, function shen_user_lambda7113(Arg7112) {
  if (Arg7112.length < 1) return [Shen.type_func, shen_user_lambda7113, 1, Arg7112];
  var Arg7112_0 = Arg7112[0];
  return ((Shen.empty$question$(Arg7112_0))
  ? 0
  : ((Shen.is_type(Arg7112_0, Shen.type_cons))
  ? (Arg7112_0[1] + Shen.call(Shen.fns["shen.sum"], [Arg7112_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.sum"]]);})))}, 1, [], "shen.sum"];





Shen.fns["head"] = [Shen.type_func, function shen_user_lambda7115(Arg7114) {
  if (Arg7114.length < 1) return [Shen.type_func, shen_user_lambda7115, 1, Arg7114];
  var Arg7114_0 = Arg7114[0];
  return ((Shen.is_type(Arg7114_0, Shen.type_cons))
  ? Arg7114_0[1]
  : (function() {
  return Shen.simple_error("head expects a non-empty list");}))}, 1, [], "head"];





Shen.fns["tail"] = [Shen.type_func, function shen_user_lambda7117(Arg7116) {
  if (Arg7116.length < 1) return [Shen.type_func, shen_user_lambda7117, 1, Arg7116];
  var Arg7116_0 = Arg7116[0];
  return ((Shen.is_type(Arg7116_0, Shen.type_cons))
  ? Arg7116_0[2]
  : (function() {
  return Shen.simple_error("tail expects a non-empty list");}))}, 1, [], "tail"];





Shen.fns["hdstr"] = [Shen.type_func, function shen_user_lambda7119(Arg7118) {
  if (Arg7118.length < 1) return [Shen.type_func, shen_user_lambda7119, 1, Arg7118];
  var Arg7118_0 = Arg7118[0];
  return Arg7118_0[0]}, 1, [], "hdstr"];





Shen.fns["intersection"] = [Shen.type_func, function shen_user_lambda7121(Arg7120) {
  if (Arg7120.length < 2) return [Shen.type_func, shen_user_lambda7121, 2, Arg7120];
  var Arg7120_0 = Arg7120[0], Arg7120_1 = Arg7120[1];
  return ((Shen.empty$question$(Arg7120_0))
  ? []
  : ((Shen.is_type(Arg7120_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7120_0[1], Arg7120_1]))
  ? [Shen.type_cons, Arg7120_0[1], Shen.call(Shen.fns["intersection"], [Arg7120_0[2], Arg7120_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["intersection"], [Arg7120_0[2], Arg7120_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "intersection"]]);})))}, 2, [], "intersection"];





Shen.fns["reverse"] = [Shen.type_func, function shen_user_lambda7123(Arg7122) {
  if (Arg7122.length < 1) return [Shen.type_func, shen_user_lambda7123, 1, Arg7122];
  var Arg7122_0 = Arg7122[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7122_0, []]);})}, 1, [], "reverse"];





Shen.fns["shen.reverse_help"] = [Shen.type_func, function shen_user_lambda7125(Arg7124) {
  if (Arg7124.length < 2) return [Shen.type_func, shen_user_lambda7125, 2, Arg7124];
  var Arg7124_0 = Arg7124[0], Arg7124_1 = Arg7124[1];
  return ((Shen.empty$question$(Arg7124_0))
  ? Arg7124_1
  : ((Shen.is_type(Arg7124_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7124_0[2], [Shen.type_cons, Arg7124_0[1], Arg7124_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.reverse_help"]]);})))}, 2, [], "shen.reverse_help"];





Shen.fns["union"] = [Shen.type_func, function shen_user_lambda7127(Arg7126) {
  if (Arg7126.length < 2) return [Shen.type_func, shen_user_lambda7127, 2, Arg7126];
  var Arg7126_0 = Arg7126[0], Arg7126_1 = Arg7126[1];
  return ((Shen.empty$question$(Arg7126_0))
  ? Arg7126_1
  : ((Shen.is_type(Arg7126_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7126_0[1], Arg7126_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Arg7126_0[2], Arg7126_1]);})
  : [Shen.type_cons, Arg7126_0[1], Shen.call(Shen.fns["union"], [Arg7126_0[2], Arg7126_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "union"]]);})))}, 2, [], "union"];





Shen.fns["y-or-n?"] = [Shen.type_func, function shen_user_lambda7129(Arg7128) {
  if (Arg7128.length < 1) return [Shen.type_func, shen_user_lambda7129, 1, Arg7128];
  var Arg7128_0 = Arg7128[0];
  var R0;
  return (Shen.pr(Shen.call(Shen.fns["shen.proc-nl"], [Arg7128_0]), Shen.call(Shen.fns["stoutput"], [])),
  Shen.pr(" (y/n) ", Shen.call(Shen.fns["stoutput"], [])),
  (R0 = Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["input"], []), "", [Shen.type_symbol, "shen.s"]])),
  ((Shen.unwind_tail(Shen.$eq$("y", R0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$("n", R0)))
  ? false
  : (Shen.pr("please answer y or n\x0a", Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["y-or-n?"], [Arg7128_0]);})))))}, 1, [], "y-or-n?"];










Shen.fns["subst"] = [Shen.type_func, function shen_user_lambda7132(Arg7131) {
  if (Arg7131.length < 3) return [Shen.type_func, shen_user_lambda7132, 3, Arg7131];
  var Arg7131_0 = Arg7131[0], Arg7131_1 = Arg7131[1], Arg7131_2 = Arg7131[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7131_2, Arg7131_1)))
  ? Arg7131_0
  : ((Shen.is_type(Arg7131_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["subst"], [Arg7131_0, Arg7131_1, Arg7131_2[1]]), Shen.call(Shen.fns["subst"], [Arg7131_0, Arg7131_1, Arg7131_2[2]])]
  : Arg7131_2))}, 3, [], "subst"];





Shen.fns["explode"] = [Shen.type_func, function shen_user_lambda7134(Arg7133) {
  if (Arg7133.length < 1) return [Shen.type_func, shen_user_lambda7134, 1, Arg7133];
  var Arg7133_0 = Arg7133[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.explode-h"], [Shen.call(Shen.fns["shen.app"], [Arg7133_0, "", [Shen.type_symbol, "shen.a"]])]);})}, 1, [], "explode"];





Shen.fns["shen.explode-h"] = [Shen.type_func, function shen_user_lambda7136(Arg7135) {
  if (Arg7135.length < 1) return [Shen.type_func, shen_user_lambda7136, 1, Arg7135];
  var Arg7135_0 = Arg7135[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7135_0)))
  ? []
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7135_0]))
  ? [Shen.type_cons, Arg7135_0[0], Shen.call(Shen.fns["shen.explode-h"], [Shen.tlstr(Arg7135_0)])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explode-h"]]);})))}, 1, [], "shen.explode-h"];





Shen.fns["cd"] = [Shen.type_func, function shen_user_lambda7138(Arg7137) {
  if (Arg7137.length < 1) return [Shen.type_func, shen_user_lambda7138, 1, Arg7137];
  var Arg7137_0 = Arg7137[0];
  return (Shen.globals["*home-directory*"] = ((Shen.unwind_tail(Shen.$eq$(Arg7137_0, "")))
  ? ""
  : Shen.call(Shen.fns["shen.app"], [Arg7137_0, "/", [Shen.type_symbol, "shen.a"]])))}, 1, [], "cd"];





Shen.fns["map"] = [Shen.type_func, function shen_user_lambda7140(Arg7139) {
  if (Arg7139.length < 2) return [Shen.type_func, shen_user_lambda7140, 2, Arg7139];
  var Arg7139_0 = Arg7139[0], Arg7139_1 = Arg7139[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7139_0, Arg7139_1, []]);})}, 2, [], "map"];





Shen.fns["shen.map-h"] = [Shen.type_func, function shen_user_lambda7142(Arg7141) {
  if (Arg7141.length < 3) return [Shen.type_func, shen_user_lambda7142, 3, Arg7141];
  var Arg7141_0 = Arg7141[0], Arg7141_1 = Arg7141[1], Arg7141_2 = Arg7141[2];
  return ((Shen.empty$question$(Arg7141_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg7141_2]);})
  : ((Shen.is_type(Arg7141_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7141_0, Arg7141_1[2], [Shen.type_cons, Shen.call(Arg7141_0, [Arg7141_1[1]]), Arg7141_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.map-h"]]);})))}, 3, [], "shen.map-h"];





Shen.fns["length"] = [Shen.type_func, function shen_user_lambda7144(Arg7143) {
  if (Arg7143.length < 1) return [Shen.type_func, shen_user_lambda7144, 1, Arg7143];
  var Arg7143_0 = Arg7143[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7143_0, 0]);})}, 1, [], "length"];





Shen.fns["shen.length-h"] = [Shen.type_func, function shen_user_lambda7146(Arg7145) {
  if (Arg7145.length < 2) return [Shen.type_func, shen_user_lambda7146, 2, Arg7145];
  var Arg7145_0 = Arg7145[0], Arg7145_1 = Arg7145[1];
  return ((Shen.empty$question$(Arg7145_0))
  ? Arg7145_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7145_0[2], (Arg7145_1 + 1)]);}))}, 2, [], "shen.length-h"];





Shen.fns["occurrences"] = [Shen.type_func, function shen_user_lambda7148(Arg7147) {
  if (Arg7147.length < 2) return [Shen.type_func, shen_user_lambda7148, 2, Arg7147];
  var Arg7147_0 = Arg7147[0], Arg7147_1 = Arg7147[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7147_1, Arg7147_0)))
  ? 1
  : ((Shen.is_type(Arg7147_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["occurrences"], [Arg7147_0, Arg7147_1[1]]) + Shen.call(Shen.fns["occurrences"], [Arg7147_0, Arg7147_1[2]]))
  : 0))}, 2, [], "occurrences"];





Shen.fns["nth"] = [Shen.type_func, function shen_user_lambda7150(Arg7149) {
  if (Arg7149.length < 2) return [Shen.type_func, shen_user_lambda7150, 2, Arg7149];
  var Arg7149_0 = Arg7149[0], Arg7149_1 = Arg7149[1];
  return (((Shen.unwind_tail(Shen.$eq$(1, Arg7149_0)) && Shen.is_type(Arg7149_1, Shen.type_cons)))
  ? Arg7149_1[1]
  : ((Shen.is_type(Arg7149_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["nth"], [(Arg7149_0 - 1), Arg7149_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "nth"]]);})))}, 2, [], "nth"];





Shen.fns["integer?"] = [Shen.type_func, function shen_user_lambda7152(Arg7151) {
  if (Arg7151.length < 1) return [Shen.type_func, shen_user_lambda7152, 1, Arg7151];
  var Arg7151_0 = Arg7151[0];
  var R0;
  return ((typeof(Arg7151_0) == 'number') && ((R0 = Shen.call(Shen.fns["shen.abs"], [Arg7151_0])),
  Shen.call(Shen.fns["shen.integer-test?"], [R0, Shen.call(Shen.fns["shen.magless"], [R0, 1])])))}, 1, [], "integer?"];





Shen.fns["shen.abs"] = [Shen.type_func, function shen_user_lambda7154(Arg7153) {
  if (Arg7153.length < 1) return [Shen.type_func, shen_user_lambda7154, 1, Arg7153];
  var Arg7153_0 = Arg7153[0];
  return (((Arg7153_0 > 0))
  ? Arg7153_0
  : (0 - Arg7153_0))}, 1, [], "shen.abs"];





Shen.fns["shen.magless"] = [Shen.type_func, function shen_user_lambda7156(Arg7155) {
  if (Arg7155.length < 2) return [Shen.type_func, shen_user_lambda7156, 2, Arg7155];
  var Arg7155_0 = Arg7155[0], Arg7155_1 = Arg7155[1];
  var R0;
  return ((R0 = (Arg7155_1 * 2)),
  (((R0 > Arg7155_0))
  ? Arg7155_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.magless"], [Arg7155_0, R0]);})))}, 2, [], "shen.magless"];





Shen.fns["shen.integer-test?"] = [Shen.type_func, function shen_user_lambda7158(Arg7157) {
  if (Arg7157.length < 2) return [Shen.type_func, shen_user_lambda7158, 2, Arg7157];
  var Arg7157_0 = Arg7157[0], Arg7157_1 = Arg7157[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7157_0)))
  ? true
  : (((1 > Arg7157_0))
  ? false
  : ((R0 = (Arg7157_0 - Arg7157_1)),
  (((0 > R0))
  ? (function() {
  return Shen.call_tail(Shen.fns["integer?"], [Arg7157_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.integer-test?"], [R0, Arg7157_1]);})))))}, 2, [], "shen.integer-test?"];





Shen.fns["mapcan"] = [Shen.type_func, function shen_user_lambda7160(Arg7159) {
  if (Arg7159.length < 2) return [Shen.type_func, shen_user_lambda7160, 2, Arg7159];
  var Arg7159_0 = Arg7159[0], Arg7159_1 = Arg7159[1];
  return ((Shen.empty$question$(Arg7159_1))
  ? []
  : ((Shen.is_type(Arg7159_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Arg7159_0, [Arg7159_1[1]]), Shen.call(Shen.fns["mapcan"], [Arg7159_0, Arg7159_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "mapcan"]]);})))}, 2, [], "mapcan"];





Shen.fns["read-file-as-bytelist"] = [Shen.type_func, function shen_user_lambda7162(Arg7161) {
  if (Arg7161.length < 1) return [Shen.type_func, shen_user_lambda7162, 1, Arg7161];
  var Arg7161_0 = Arg7161[0];
  var R0, R1;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg7161_0, [Shen.type_symbol, "in"])),
  (R1 = Shen.read_byte(R0)),
  (R1 = Shen.call(Shen.fns["shen.read-file-as-bytelist-help"], [R0, R1, []])),
  Shen.close(R0),
  (function() {
  return Shen.call_tail(Shen.fns["reverse"], [R1]);}))}, 1, [], "read-file-as-bytelist"];





Shen.fns["shen.read-file-as-bytelist-help"] = [Shen.type_func, function shen_user_lambda7164(Arg7163) {
  if (Arg7163.length < 3) return [Shen.type_func, shen_user_lambda7164, 3, Arg7163];
  var Arg7163_0 = Arg7163[0], Arg7163_1 = Arg7163[1], Arg7163_2 = Arg7163[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7163_1)))
  ? Arg7163_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.read-file-as-bytelist-help"], [Arg7163_0, Shen.read_byte(Arg7163_0), [Shen.type_cons, Arg7163_1, Arg7163_2]]);}))}, 3, [], "shen.read-file-as-bytelist-help"];





Shen.fns["read-file-as-string"] = [Shen.type_func, function shen_user_lambda7166(Arg7165) {
  if (Arg7165.length < 1) return [Shen.type_func, shen_user_lambda7166, 1, Arg7165];
  var Arg7165_0 = Arg7165[0];
  var R0;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg7165_0, [Shen.type_symbol, "in"])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [R0, Shen.read_byte(R0), ""]);}))}, 1, [], "read-file-as-string"];





Shen.fns["shen.rfas-h"] = [Shen.type_func, function shen_user_lambda7168(Arg7167) {
  if (Arg7167.length < 3) return [Shen.type_func, shen_user_lambda7168, 3, Arg7167];
  var Arg7167_0 = Arg7167[0], Arg7167_1 = Arg7167[1], Arg7167_2 = Arg7167[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7167_1)))
  ? (Shen.close(Arg7167_0),
  Arg7167_2)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [Arg7167_0, Shen.read_byte(Arg7167_0), (Arg7167_2 + Shen.n_$gt$string(Arg7167_1))]);}))}, 3, [], "shen.rfas-h"];





Shen.fns["=="] = [Shen.type_func, function shen_user_lambda7170(Arg7169) {
  if (Arg7169.length < 2) return [Shen.type_func, shen_user_lambda7170, 2, Arg7169];
  var Arg7169_0 = Arg7169[0], Arg7169_1 = Arg7169[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7169_1, Arg7169_0)))
  ? true
  : false)}, 2, [], "=="];





Shen.fns["abort"] = [Shen.type_func, function shen_user_lambda7172(Arg7171) {
  if (Arg7171.length < 0) return [Shen.type_func, shen_user_lambda7172, 0, Arg7171];
  return (function() {
  return Shen.simple_error("");})}, 0, [], "abort"];





Shen.fns["read"] = [Shen.type_func, function shen_user_lambda7174(Arg7173) {
  if (Arg7173.length < 0) return [Shen.type_func, shen_user_lambda7174, 0, Arg7173];
  return Shen.call(Shen.fns["lineread"], [])[1]}, 0, [], "read"];





Shen.fns["input"] = [Shen.type_func, function shen_user_lambda7176(Arg7175) {
  if (Arg7175.length < 0) return [Shen.type_func, shen_user_lambda7176, 0, Arg7175];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["read"], [])]);})}, 0, [], "input"];





Shen.fns["input+"] = [Shen.type_func, function shen_user_lambda7178(Arg7177) {
  if (Arg7177.length < 2) return [Shen.type_func, shen_user_lambda7178, 2, Arg7177];
  var Arg7177_0 = Arg7177[0], Arg7177_1 = Arg7177[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["read"], [])),
  (R1 = Shen.call(Shen.fns["shen.typecheck"], [R0, Arg7177_1])),
  ((Shen.unwind_tail(Shen.$eq$(false, R1)))
  ? (Shen.pr(("input is not of type " + Shen.call(Shen.fns["shen.app"], [Arg7177_1, ": please re-enter ", [Shen.type_symbol, "shen.r"]])), Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["input+"], [[Shen.type_symbol, ":"], Arg7177_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["eval"], [R0]);})))}, 2, [], "input+"];





Shen.fns["bound?"] = [Shen.type_func, function shen_user_lambda7180(Arg7179) {
  if (Arg7179.length < 1) return [Shen.type_func, shen_user_lambda7180, 1, Arg7179];
  var Arg7179_0 = Arg7179[0];
  var R0;
  return (Shen.is_type(Arg7179_0, Shen.type_symbol) && ((R0 = Shen.trap_error(function() {return (Shen.globals[Arg7179_0[1]]);}, [Shen.type_func, function shen_user_lambda7182(Arg7181) {
  if (Arg7181.length < 1) return [Shen.type_func, shen_user_lambda7182, 1, Arg7181];
  var Arg7181_0 = Arg7181[0];
  return [Shen.type_symbol, "shen.this-symbol-is-unbound"]}, 1, [], undefined])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.this-symbol-is-unbound"])))
  ? false
  : true)))}, 1, [], "bound?"];





Shen.fns["shen.string->bytes"] = [Shen.type_func, function shen_user_lambda7184(Arg7183) {
  if (Arg7183.length < 1) return [Shen.type_func, shen_user_lambda7184, 1, Arg7183];
  var Arg7183_0 = Arg7183[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7183_0)))
  ? []
  : [Shen.type_cons, Shen.string_$gt$n(Arg7183_0[0]), Shen.call(Shen.fns["shen.string->bytes"], [Shen.tlstr(Arg7183_0)])])}, 1, [], "shen.string->bytes"];





Shen.fns["maxinferences"] = [Shen.type_func, function shen_user_lambda7186(Arg7185) {
  if (Arg7185.length < 1) return [Shen.type_func, shen_user_lambda7186, 1, Arg7185];
  var Arg7185_0 = Arg7185[0];
  return (Shen.globals["shen.*maxinferences*"] = Arg7185_0)}, 1, [], "maxinferences"];





Shen.fns["inferences"] = [Shen.type_func, function shen_user_lambda7188(Arg7187) {
  if (Arg7187.length < 0) return [Shen.type_func, shen_user_lambda7188, 0, Arg7187];
  return (Shen.globals["shen.*infs*"])}, 0, [], "inferences"];





Shen.fns["protect"] = [Shen.type_func, function shen_user_lambda7190(Arg7189) {
  if (Arg7189.length < 1) return [Shen.type_func, shen_user_lambda7190, 1, Arg7189];
  var Arg7189_0 = Arg7189[0];
  return Arg7189_0}, 1, [], "protect"];





Shen.fns["stoutput"] = [Shen.type_func, function shen_user_lambda7192(Arg7191) {
  if (Arg7191.length < 0) return [Shen.type_func, shen_user_lambda7192, 0, Arg7191];
  return (Shen.globals["*stoutput*"])}, 0, [], "stoutput"];





Shen.fns["string->symbol"] = [Shen.type_func, function shen_user_lambda7194(Arg7193) {
  if (Arg7193.length < 1) return [Shen.type_func, shen_user_lambda7194, 1, Arg7193];
  var Arg7193_0 = Arg7193[0];
  var R0;
  return ((R0 = Shen.intern(Arg7193_0)),
  ((Shen.is_type(R0, Shen.type_symbol))
  ? R0
  : (function() {
  return Shen.simple_error(("cannot intern " + Shen.call(Shen.fns["shen.app"], [Arg7193_0, " to a symbol", [Shen.type_symbol, "shen.s"]])));})))}, 1, [], "string->symbol"];










Shen.fns["shen.datatype-error"] = [Shen.type_func, function shen_user_lambda6870(Arg6869) {
  if (Arg6869.length < 1) return [Shen.type_func, shen_user_lambda6870, 1, Arg6869];
  var Arg6869_0 = Arg6869[0];
  return (((Shen.is_type(Arg6869_0, Shen.type_cons) && (Shen.is_type(Arg6869_0[2], Shen.type_cons) && Shen.empty$question$(Arg6869_0[2][2]))))
  ? (function() {
  return Shen.simple_error(("datatype syntax error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6869_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.datatype-error"]]);}))}, 1, [], "shen.datatype-error"];





Shen.fns["shen.<datatype-rules>"] = [Shen.type_func, function shen_user_lambda6872(Arg6871) {
  if (Arg6871.length < 1) return [Shen.type_func, shen_user_lambda6872, 1, Arg6871];
  var Arg6871_0 = Arg6871[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<datatype-rule>"], [Arg6871_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<datatype-rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6871_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rules>"];





Shen.fns["shen.<datatype-rule>"] = [Shen.type_func, function shen_user_lambda6874(Arg6873) {
  if (Arg6873.length < 1) return [Shen.type_func, shen_user_lambda6874, 1, Arg6873];
  var Arg6873_0 = Arg6873[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6873_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<singleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.single"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6873_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<doubleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.double"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rule>"];





Shen.fns["shen.<side-conditions>"] = [Shen.type_func, function shen_user_lambda6876(Arg6875) {
  if (Arg6875.length < 1) return [Shen.type_func, shen_user_lambda6876, 1, Arg6875];
  var Arg6875_0 = Arg6875[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<side-condition>"], [Arg6875_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<side-conditions>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6875_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-conditions>"];





Shen.fns["shen.<side-condition>"] = [Shen.type_func, function shen_user_lambda6878(Arg6877) {
  if (Arg6877.length < 1) return [Shen.type_func, shen_user_lambda6878, 1, Arg6877];
  var Arg6877_0 = Arg6877[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6877_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6877_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<expr>"], [Shen.call(Shen.fns["shen.pair"], [Arg6877_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6877_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6877_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6877_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<variable?>"], [Shen.call(Shen.fns["shen.pair"], [Arg6877_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6877_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<expr>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-condition>"];





Shen.fns["shen.<variable?>"] = [Shen.type_func, function shen_user_lambda6880(Arg6879) {
  if (Arg6879.length < 1) return [Shen.type_func, shen_user_lambda6880, 1, Arg6879];
  var Arg6879_0 = Arg6879[0];
  var R0;
  return (((Shen.is_type(Arg6879_0[1], Shen.type_cons))
  ? ((R0 = Arg6879_0[1][1]),
  ((Shen.call(Shen.fns["variable?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6879_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6879_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<variable?>"];





Shen.fns["shen.<expr>"] = [Shen.type_func, function shen_user_lambda6882(Arg6881) {
  if (Arg6881.length < 1) return [Shen.type_func, shen_user_lambda6882, 1, Arg6881];
  var Arg6881_0 = Arg6881[0];
  var R0;
  return (((Shen.is_type(Arg6881_0[1], Shen.type_cons))
  ? ((R0 = Arg6881_0[1][1]),
  (((!(Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]) || (Shen.call(Shen.fns["shen.singleunderline?"], [R0]) || Shen.call(Shen.fns["shen.doubleunderline?"], [R0])))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6881_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6881_0])])[1], Shen.call(Shen.fns["shen.remove-bar"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<expr>"];





Shen.fns["shen.remove-bar"] = [Shen.type_func, function shen_user_lambda6884(Arg6883) {
  if (Arg6883.length < 1) return [Shen.type_func, shen_user_lambda6884, 1, Arg6883];
  var Arg6883_0 = Arg6883[0];
  return (((Shen.is_type(Arg6883_0, Shen.type_cons) && (Shen.is_type(Arg6883_0[2], Shen.type_cons) && (Shen.is_type(Arg6883_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6883_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6883_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, Arg6883_0[1], Arg6883_0[2][2][1]]
  : ((Shen.is_type(Arg6883_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove-bar"], [Arg6883_0[1]]), Shen.call(Shen.fns["shen.remove-bar"], [Arg6883_0[2]])]
  : Arg6883_0))}, 1, [], "shen.remove-bar"];





Shen.fns["shen.<premises>"] = [Shen.type_func, function shen_user_lambda6886(Arg6885) {
  if (Arg6885.length < 1) return [Shen.type_func, shen_user_lambda6886, 1, Arg6885];
  var Arg6885_0 = Arg6885[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<premise>"], [Arg6885_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6885_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<premises>"];





Shen.fns["shen.<semicolon-symbol>"] = [Shen.type_func, function shen_user_lambda6888(Arg6887) {
  if (Arg6887.length < 1) return [Shen.type_func, shen_user_lambda6888, 1, Arg6887];
  var Arg6887_0 = Arg6887[0];
  var R0;
  return (((Shen.is_type(Arg6887_0[1], Shen.type_cons))
  ? ((R0 = Arg6887_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6887_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6887_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon-symbol>"];





Shen.fns["shen.<premise>"] = [Shen.type_func, function shen_user_lambda6890(Arg6889) {
  if (Arg6889.length < 1) return [Shen.type_func, shen_user_lambda6890, 1, Arg6889];
  var Arg6889_0 = Arg6889[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6889_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6889_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6889_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6889_0])])[1], [Shen.type_symbol, "!"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6889_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6889_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<premise>"];





Shen.fns["shen.<conclusion>"] = [Shen.type_func, function shen_user_lambda6892(Arg6891) {
  if (Arg6891.length < 1) return [Shen.type_func, shen_user_lambda6892, 1, Arg6891];
  var Arg6891_0 = Arg6891[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6891_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6891_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<conclusion>"];





Shen.fns["shen.sequent"] = [Shen.type_func, function shen_user_lambda6894(Arg6893) {
  if (Arg6893.length < 2) return [Shen.type_func, shen_user_lambda6894, 2, Arg6893];
  var Arg6893_0 = Arg6893[0], Arg6893_1 = Arg6893[1];
  return [Shen.fns['shen.tuple'], Arg6893_0, Arg6893_1]}, 2, [], "shen.sequent"];





Shen.fns["shen.<formulae>"] = [Shen.type_func, function shen_user_lambda6896(Arg6895) {
  if (Arg6895.length < 1) return [Shen.type_func, shen_user_lambda6896, 1, Arg6895];
  var Arg6895_0 = Arg6895[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6895_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<comma-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formulae>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6895_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6895_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<formulae>"];





Shen.fns["shen.<comma-symbol>"] = [Shen.type_func, function shen_user_lambda6898(Arg6897) {
  if (Arg6897.length < 1) return [Shen.type_func, shen_user_lambda6898, 1, Arg6897];
  var Arg6897_0 = Arg6897[0];
  var R0;
  return (((Shen.is_type(Arg6897_0[1], Shen.type_cons))
  ? ((R0 = Arg6897_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ","])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6897_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6897_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma-symbol>"];





Shen.fns["shen.<formula>"] = [Shen.type_func, function shen_user_lambda6900(Arg6899) {
  if (Arg6899.length < 1) return [Shen.type_func, shen_user_lambda6900, 1, Arg6899];
  var Arg6899_0 = Arg6899[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6899_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<type>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.hdtl"], [R1])]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6899_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<formula>"];





Shen.fns["shen.<type>"] = [Shen.type_func, function shen_user_lambda6902(Arg6901) {
  if (Arg6901.length < 1) return [Shen.type_func, shen_user_lambda6902, 1, Arg6901];
  var Arg6901_0 = Arg6901[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6901_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<type>"];





Shen.fns["shen.<doubleunderline>"] = [Shen.type_func, function shen_user_lambda6904(Arg6903) {
  if (Arg6903.length < 1) return [Shen.type_func, shen_user_lambda6904, 1, Arg6903];
  var Arg6903_0 = Arg6903[0];
  var R0;
  return (((Shen.is_type(Arg6903_0[1], Shen.type_cons))
  ? ((R0 = Arg6903_0[1][1]),
  ((Shen.call(Shen.fns["shen.doubleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6903_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6903_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<doubleunderline>"];





Shen.fns["shen.<singleunderline>"] = [Shen.type_func, function shen_user_lambda6906(Arg6905) {
  if (Arg6905.length < 1) return [Shen.type_func, shen_user_lambda6906, 1, Arg6905];
  var Arg6905_0 = Arg6905[0];
  var R0;
  return (((Shen.is_type(Arg6905_0[1], Shen.type_cons))
  ? ((R0 = Arg6905_0[1][1]),
  ((Shen.call(Shen.fns["shen.singleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6905_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6905_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<singleunderline>"];





Shen.fns["shen.singleunderline?"] = [Shen.type_func, function shen_user_lambda6908(Arg6907) {
  if (Arg6907.length < 1) return [Shen.type_func, shen_user_lambda6908, 1, Arg6907];
  var Arg6907_0 = Arg6907[0];
  return (Shen.is_type(Arg6907_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.sh?"], [Shen.str(Arg6907_0)]))}, 1, [], "shen.singleunderline?"];





Shen.fns["shen.sh?"] = [Shen.type_func, function shen_user_lambda6910(Arg6909) {
  if (Arg6909.length < 1) return [Shen.type_func, shen_user_lambda6910, 1, Arg6909];
  var Arg6909_0 = Arg6909[0];
  return ((Shen.unwind_tail(Shen.$eq$("_", Arg6909_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6909_0[0], "_")) && Shen.call(Shen.fns["shen.sh?"], [Shen.tlstr(Arg6909_0)])))}, 1, [], "shen.sh?"];





Shen.fns["shen.doubleunderline?"] = [Shen.type_func, function shen_user_lambda6912(Arg6911) {
  if (Arg6911.length < 1) return [Shen.type_func, shen_user_lambda6912, 1, Arg6911];
  var Arg6911_0 = Arg6911[0];
  return (Shen.is_type(Arg6911_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.dh?"], [Shen.str(Arg6911_0)]))}, 1, [], "shen.doubleunderline?"];





Shen.fns["shen.dh?"] = [Shen.type_func, function shen_user_lambda6914(Arg6913) {
  if (Arg6913.length < 1) return [Shen.type_func, shen_user_lambda6914, 1, Arg6913];
  var Arg6913_0 = Arg6913[0];
  return ((Shen.unwind_tail(Shen.$eq$("=", Arg6913_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6913_0[0], "=")) && Shen.call(Shen.fns["shen.dh?"], [Shen.tlstr(Arg6913_0)])))}, 1, [], "shen.dh?"];





Shen.fns["shen.process-datatype"] = [Shen.type_func, function shen_user_lambda6916(Arg6915) {
  if (Arg6915.length < 2) return [Shen.type_func, shen_user_lambda6916, 2, Arg6915];
  var Arg6915_0 = Arg6915[0], Arg6915_1 = Arg6915[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember-datatype"], [Shen.call(Shen.fns["shen.s-prolog"], [Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg6915_0, Arg6915_1])])]);})}, 2, [], "shen.process-datatype"];





Shen.fns["shen.remember-datatype"] = [Shen.type_func, function shen_user_lambda6918(Arg6917) {
  if (Arg6917.length < 1) return [Shen.type_func, shen_user_lambda6918, 1, Arg6917];
  var Arg6917_0 = Arg6917[0];
  return ((Shen.is_type(Arg6917_0, Shen.type_cons))
  ? ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6917_0[1], (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*alldatatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6917_0[1], (Shen.globals["shen.*alldatatypes*"])])),
  Arg6917_0[1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remember-datatype"]]);}))}, 1, [], "shen.remember-datatype"];





Shen.fns["shen.rules->horn-clauses"] = [Shen.type_func, function shen_user_lambda6920(Arg6919) {
  if (Arg6919.length < 2) return [Shen.type_func, shen_user_lambda6920, 2, Arg6919];
  var Arg6919_0 = Arg6919[0], Arg6919_1 = Arg6919[1];
  return ((Shen.empty$question$(Arg6919_1))
  ? []
  : (((Shen.is_type(Arg6919_1, Shen.type_cons) && (Shen.is_type(Arg6919_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.single"], Shen.call(Shen.fns["fst"], [Arg6919_1[1]]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause"], [Arg6919_0, Shen.call(Shen.fns["snd"], [Arg6919_1[1]])]), Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg6919_0, Arg6919_1[2]])]
  : (((Shen.is_type(Arg6919_1, Shen.type_cons) && (Shen.is_type(Arg6919_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.double"], Shen.call(Shen.fns["fst"], [Arg6919_1[1]]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.rules->horn-clauses"], [Arg6919_0, Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.double->singles"], [Shen.call(Shen.fns["snd"], [Arg6919_1[1]])]), Arg6919_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rules->horn-clauses"]]);}))))}, 2, [], "shen.rules->horn-clauses"];





Shen.fns["shen.double->singles"] = [Shen.type_func, function shen_user_lambda6922(Arg6921) {
  if (Arg6921.length < 1) return [Shen.type_func, shen_user_lambda6922, 1, Arg6921];
  var Arg6921_0 = Arg6921[0];
  return [Shen.type_cons, Shen.call(Shen.fns["shen.right-rule"], [Arg6921_0]), [Shen.type_cons, Shen.call(Shen.fns["shen.left-rule"], [Arg6921_0]), []]]}, 1, [], "shen.double->singles"];





Shen.fns["shen.right-rule"] = [Shen.type_func, function shen_user_lambda6924(Arg6923) {
  if (Arg6923.length < 1) return [Shen.type_func, shen_user_lambda6924, 1, Arg6923];
  var Arg6923_0 = Arg6923[0];
  return [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], Arg6923_0]}, 1, [], "shen.right-rule"];





Shen.fns["shen.left-rule"] = [Shen.type_func, function shen_user_lambda6926(Arg6925) {
  if (Arg6925.length < 1) return [Shen.type_func, shen_user_lambda6926, 1, Arg6925];
  var Arg6925_0 = Arg6925[0];
  var R0, R1;
  return (((Shen.is_type(Arg6925_0, Shen.type_cons) && (Shen.is_type(Arg6925_0[2], Shen.type_cons) && (Shen.is_type(Arg6925_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6925_0[2][2][1], Shen.fns['shen.tuple']) && (Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6925_0[2][2][1]])) && Shen.empty$question$(Arg6925_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Qv"]])),
  (R1 = [Shen.fns['shen.tuple'], [Shen.type_cons, Shen.call(Shen.fns["snd"], [Arg6925_0[2][2][1]]), []], R0]),
  (R0 = [Shen.type_cons, [Shen.fns['shen.tuple'], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.right->left"], Arg6925_0[2][1]]), R0], []]),
  [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], [Shen.type_cons, Arg6925_0[1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.left-rule"]]);}))}, 1, [], "shen.left-rule"];





Shen.fns["shen.right->left"] = [Shen.type_func, function shen_user_lambda6928(Arg6927) {
  if (Arg6927.length < 1) return [Shen.type_func, shen_user_lambda6928, 1, Arg6927];
  var Arg6927_0 = Arg6927[0];
  return (((Shen.is_type(Arg6927_0, Shen.fns['shen.tuple']) && Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6927_0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["snd"], [Arg6927_0]);})
  : (function() {
  return Shen.simple_error("syntax error with ==========\x0a");}))}, 1, [], "shen.right->left"];





Shen.fns["shen.rule->horn-clause"] = [Shen.type_func, function shen_user_lambda6930(Arg6929) {
  if (Arg6929.length < 2) return [Shen.type_func, shen_user_lambda6930, 2, Arg6929];
  var Arg6929_0 = Arg6929[0], Arg6929_1 = Arg6929[1];
  return (((Shen.is_type(Arg6929_1, Shen.type_cons) && (Shen.is_type(Arg6929_1[2], Shen.type_cons) && (Shen.is_type(Arg6929_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6929_1[2][2][1], Shen.fns['shen.tuple']) && Shen.empty$question$(Arg6929_1[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-head"], [Arg6929_0, Shen.call(Shen.fns["snd"], [Arg6929_1[2][2][1]])]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-body"], [Arg6929_1[1], Arg6929_1[2][1], Shen.call(Shen.fns["fst"], [Arg6929_1[2][2][1]])]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rule->horn-clause"]]);}))}, 2, [], "shen.rule->horn-clause"];





Shen.fns["shen.rule->horn-clause-head"] = [Shen.type_func, function shen_user_lambda6932(Arg6931) {
  if (Arg6931.length < 2) return [Shen.type_func, shen_user_lambda6932, 2, Arg6931];
  var Arg6931_0 = Arg6931[0], Arg6931_1 = Arg6931[1];
  return [Shen.type_cons, Arg6931_0, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg6931_1]), [Shen.type_cons, [Shen.type_symbol, "Context_1957"], []]]]}, 2, [], "shen.rule->horn-clause-head"];





Shen.fns["shen.mode-ify"] = [Shen.type_func, function shen_user_lambda6934(Arg6933) {
  if (Arg6933.length < 1) return [Shen.type_func, shen_user_lambda6934, 1, Arg6933];
  var Arg6933_0 = Arg6933[0];
  return (((Shen.is_type(Arg6933_0, Shen.type_cons) && (Shen.is_type(Arg6933_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6933_0[2][1])) && (Shen.is_type(Arg6933_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6933_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_cons, Arg6933_0[1], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6933_0[2][2][1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "-"], []]]]
  : Arg6933_0)}, 1, [], "shen.mode-ify"];





Shen.fns["shen.rule->horn-clause-body"] = [Shen.type_func, function shen_user_lambda6936(Arg6935) {
  if (Arg6935.length < 3) return [Shen.type_func, shen_user_lambda6936, 3, Arg6935];
  var Arg6935_0 = Arg6935[0], Arg6935_1 = Arg6935[1], Arg6935_2 = Arg6935[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.extract_vars"], Arg6935_2])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6938(Arg6937) {
  if (Arg6937.length < 1) return [Shen.type_func, shen_user_lambda6938, 1, Arg6937];
  var Arg6937_0 = Arg6937[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "shen.cl"]]);})}, 1, [], undefined], Arg6935_2])),
  (R2 = Shen.call(Shen.fns["shen.construct-search-literals"], [R1, R0, [Shen.type_symbol, "Context_1957"], [Shen.type_symbol, "Context1_1957"]])),
  Shen.call(Shen.fns["shen.construct-search-clauses"], [R1, Arg6935_2, R0]),
  (R1 = Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6935_0])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6940(Arg6939) {
  if (Arg6939.length < 2) return [Shen.type_func, shen_user_lambda6940, 2, Arg6939];
  var Arg6939_0 = Arg6939[0], Arg6939_1 = Arg6939[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.construct-premiss-literal"], [Arg6939_1, Shen.empty$question$(Arg6939_0)]);})}, 2, [Arg6935_2], undefined], Arg6935_1])),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [R1, R0])]);}))}, 3, [], "shen.rule->horn-clause-body"];





Shen.fns["shen.construct-search-literals"] = [Shen.type_func, function shen_user_lambda6942(Arg6941) {
  if (Arg6941.length < 4) return [Shen.type_func, shen_user_lambda6942, 4, Arg6941];
  var Arg6941_0 = Arg6941[0], Arg6941_1 = Arg6941[1], Arg6941_2 = Arg6941[2], Arg6941_3 = Arg6941[3];
  return (((Shen.empty$question$(Arg6941_0) && Shen.empty$question$(Arg6941_1)))
  ? []
  : (function() {
  return Shen.call_tail(Shen.fns["shen.csl-help"], [Arg6941_0, Arg6941_1, Arg6941_2, Arg6941_3]);}))}, 4, [], "shen.construct-search-literals"];





Shen.fns["shen.csl-help"] = [Shen.type_func, function shen_user_lambda6944(Arg6943) {
  if (Arg6943.length < 4) return [Shen.type_func, shen_user_lambda6944, 4, Arg6943];
  var Arg6943_0 = Arg6943[0], Arg6943_1 = Arg6943[1], Arg6943_2 = Arg6943[2], Arg6943_3 = Arg6943[3];
  return (((Shen.empty$question$(Arg6943_0) && Shen.empty$question$(Arg6943_1)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "ContextOut_1957"], [Shen.type_cons, Arg6943_2, []]]], []]
  : (((Shen.is_type(Arg6943_0, Shen.type_cons) && Shen.is_type(Arg6943_1, Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_cons, Arg6943_0[1], [Shen.type_cons, Arg6943_2, [Shen.type_cons, Arg6943_3, Arg6943_1[1]]]], Shen.call(Shen.fns["shen.csl-help"], [Arg6943_0[2], Arg6943_1[2], Arg6943_3, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Context"]])])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.csl-help"]]);})))}, 4, [], "shen.csl-help"];





Shen.fns["shen.construct-search-clauses"] = [Shen.type_func, function shen_user_lambda6946(Arg6945) {
  if (Arg6945.length < 3) return [Shen.type_func, shen_user_lambda6946, 3, Arg6945];
  var Arg6945_0 = Arg6945[0], Arg6945_1 = Arg6945[1], Arg6945_2 = Arg6945[2];
  return (((Shen.empty$question$(Arg6945_0) && (Shen.empty$question$(Arg6945_1) && Shen.empty$question$(Arg6945_2))))
  ? [Shen.type_symbol, "shen.skip"]
  : (((Shen.is_type(Arg6945_0, Shen.type_cons) && (Shen.is_type(Arg6945_1, Shen.type_cons) && Shen.is_type(Arg6945_2, Shen.type_cons))))
  ? (Shen.call(Shen.fns["shen.construct-search-clause"], [Arg6945_0[1], Arg6945_1[1], Arg6945_2[1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.construct-search-clauses"], [Arg6945_0[2], Arg6945_1[2], Arg6945_2[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-search-clauses"]]);})))}, 3, [], "shen.construct-search-clauses"];





Shen.fns["shen.construct-search-clause"] = [Shen.type_func, function shen_user_lambda6948(Arg6947) {
  if (Arg6947.length < 3) return [Shen.type_func, shen_user_lambda6948, 3, Arg6947];
  var Arg6947_0 = Arg6947[0], Arg6947_1 = Arg6947[1], Arg6947_2 = Arg6947[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog"], [[Shen.type_cons, Shen.call(Shen.fns["shen.construct-base-search-clause"], [Arg6947_0, Arg6947_1, Arg6947_2]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-recursive-search-clause"], [Arg6947_0, Arg6947_1, Arg6947_2]), []]]]);})}, 3, [], "shen.construct-search-clause"];





Shen.fns["shen.construct-base-search-clause"] = [Shen.type_func, function shen_user_lambda6950(Arg6949) {
  if (Arg6949.length < 3) return [Shen.type_func, shen_user_lambda6950, 3, Arg6949];
  var Arg6949_0 = Arg6949[0], Arg6949_1 = Arg6949[1], Arg6949_2 = Arg6949[2];
  return [Shen.type_cons, [Shen.type_cons, Arg6949_0, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg6949_1]), [Shen.type_symbol, "In_1957"]], [Shen.type_cons, [Shen.type_symbol, "In_1957"], Arg6949_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [], []]]]}, 3, [], "shen.construct-base-search-clause"];





Shen.fns["shen.construct-recursive-search-clause"] = [Shen.type_func, function shen_user_lambda6952(Arg6951) {
  if (Arg6951.length < 3) return [Shen.type_func, shen_user_lambda6952, 3, Arg6951];
  var Arg6951_0 = Arg6951[0], Arg6951_1 = Arg6951[1], Arg6951_2 = Arg6951[2];
  return [Shen.type_cons, [Shen.type_cons, Arg6951_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Assumptions_1957"]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Out_1957"]], Arg6951_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg6951_0, [Shen.type_cons, [Shen.type_symbol, "Assumptions_1957"], [Shen.type_cons, [Shen.type_symbol, "Out_1957"], Arg6951_2]]], []], []]]]}, 3, [], "shen.construct-recursive-search-clause"];





Shen.fns["shen.construct-side-literals"] = [Shen.type_func, function shen_user_lambda6954(Arg6953) {
  if (Arg6953.length < 1) return [Shen.type_func, shen_user_lambda6954, 1, Arg6953];
  var Arg6953_0 = Arg6953[0];
  return ((Shen.empty$question$(Arg6953_0))
  ? []
  : (((Shen.is_type(Arg6953_0, Shen.type_cons) && (Shen.is_type(Arg6953_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6953_0[1][1])) && (Shen.is_type(Arg6953_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6953_0[1][2][2]))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "when"], Arg6953_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6953_0[2]])]
  : (((Shen.is_type(Arg6953_0, Shen.type_cons) && (Shen.is_type(Arg6953_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6953_0[1][1])) && (Shen.is_type(Arg6953_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6953_0[1][2][2], Shen.type_cons) && Shen.empty$question$(Arg6953_0[1][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "is"], Arg6953_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6953_0[2]])]
  : ((Shen.is_type(Arg6953_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.construct-side-literals"], [Arg6953_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-side-literals"]]);})))))}, 1, [], "shen.construct-side-literals"];





Shen.fns["shen.construct-premiss-literal"] = [Shen.type_func, function shen_user_lambda6956(Arg6955) {
  if (Arg6955.length < 2) return [Shen.type_func, shen_user_lambda6956, 2, Arg6955];
  var Arg6955_0 = Arg6955[0], Arg6955_1 = Arg6955[1];
  return ((Shen.is_type(Arg6955_0, Shen.fns['shen.tuple']))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.t*"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Shen.call(Shen.fns["snd"], [Arg6955_0])]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg6955_1, Shen.call(Shen.fns["fst"], [Arg6955_0])]), []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6955_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-premiss-literal"]]);})))}, 2, [], "shen.construct-premiss-literal"];





Shen.fns["shen.construct-context"] = [Shen.type_func, function shen_user_lambda6958(Arg6957) {
  if (Arg6957.length < 2) return [Shen.type_func, shen_user_lambda6958, 2, Arg6957];
  var Arg6957_0 = Arg6957[0], Arg6957_1 = Arg6957[1];
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg6957_0)) && Shen.empty$question$(Arg6957_1)))
  ? [Shen.type_symbol, "Context_1957"]
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg6957_0)) && Shen.empty$question$(Arg6957_1)))
  ? [Shen.type_symbol, "ContextOut_1957"]
  : ((Shen.is_type(Arg6957_1, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg6957_1[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg6957_0, Arg6957_1[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-context"]]);}))))}, 2, [], "shen.construct-context"];





Shen.fns["shen.recursive_cons_form"] = [Shen.type_func, function shen_user_lambda6960(Arg6959) {
  if (Arg6959.length < 1) return [Shen.type_func, shen_user_lambda6960, 1, Arg6959];
  var Arg6959_0 = Arg6959[0];
  return ((Shen.is_type(Arg6959_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg6959_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg6959_0[2]]), []]]]
  : Arg6959_0)}, 1, [], "shen.recursive_cons_form"];





Shen.fns["preclude"] = [Shen.type_func, function shen_user_lambda6962(Arg6961) {
  if (Arg6961.length < 1) return [Shen.type_func, shen_user_lambda6962, 1, Arg6961];
  var Arg6961_0 = Arg6961[0];
  return ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*datatypes*"]), Arg6961_0])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "preclude"];





Shen.fns["include"] = [Shen.type_func, function shen_user_lambda6964(Arg6963) {
  if (Arg6963.length < 1) return [Shen.type_func, shen_user_lambda6964, 1, Arg6963];
  var Arg6963_0 = Arg6963[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["intersection"], [Arg6963_0, (Shen.globals["shen.*alldatatypes*"])])),
  (Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["union"], [R0, (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "include"];





Shen.fns["preclude-all-but"] = [Shen.type_func, function shen_user_lambda6966(Arg6965) {
  if (Arg6965.length < 1) return [Shen.type_func, shen_user_lambda6966, 1, Arg6965];
  var Arg6965_0 = Arg6965[0];
  return (function() {
  return Shen.call_tail(Shen.fns["preclude"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Arg6965_0])]);})}, 1, [], "preclude-all-but"];





Shen.fns["include-all-but"] = [Shen.type_func, function shen_user_lambda6968(Arg6967) {
  if (Arg6967.length < 1) return [Shen.type_func, shen_user_lambda6968, 1, Arg6967];
  var Arg6967_0 = Arg6967[0];
  return (function() {
  return Shen.call_tail(Shen.fns["include"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Arg6967_0])]);})}, 1, [], "include-all-but"];





Shen.fns["shen.synonyms-help"] = [Shen.type_func, function shen_user_lambda6970(Arg6969) {
  if (Arg6969.length < 1) return [Shen.type_func, shen_user_lambda6970, 1, Arg6969];
  var Arg6969_0 = Arg6969[0];
  return ((Shen.empty$question$(Arg6969_0))
  ? [Shen.type_symbol, "synonyms"]
  : (((Shen.is_type(Arg6969_0, Shen.type_cons) && Shen.is_type(Arg6969_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.pushnew"], [[Shen.type_cons, Arg6969_0[1], Shen.call(Shen.fns["shen.curry-type"], [Arg6969_0[2][1]])], [Shen.type_symbol, "shen.*synonyms*"]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.synonyms-help"], [Arg6969_0[2][2]]);}))
  : (function() {
  return Shen.simple_error(("odd number of synonyms\x0a" + ""));})))}, 1, [], "shen.synonyms-help"];





Shen.fns["shen.pushnew"] = [Shen.type_func, function shen_user_lambda6972(Arg6971) {
  if (Arg6971.length < 2) return [Shen.type_func, shen_user_lambda6972, 2, Arg6971];
  var Arg6971_0 = Arg6971[0], Arg6971_1 = Arg6971[1];
  return ((Shen.call(Shen.fns["element?"], [Arg6971_0, (Shen.globals[Arg6971_1[1]])]))
  ? (Shen.globals[Arg6971_1[1]])
  : (Shen.globals[Arg6971_1[1]] = [Shen.type_cons, Arg6971_0, (Shen.globals[Arg6971_1[1]])]))}, 2, [], "shen.pushnew"];










Shen.fns["shen.yacc"] = [Shen.type_func, function shen_user_lambda7767(Arg7766) {
  if (Arg7766.length < 1) return [Shen.type_func, shen_user_lambda7767, 1, Arg7766];
  var Arg7766_0 = Arg7766[0];
  return (((Shen.is_type(Arg7766_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7766_0[1])) && (Shen.is_type(Arg7766_0[2], Shen.type_cons) && (Shen.is_type(Arg7766_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg7766_0[2][2][1])) && (Shen.is_type(Arg7766_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg7766_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg7766_0[2][2][2][2][1])) && (Shen.is_type(Arg7766_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg7766_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg7766_0[2][2][2][2][2][2][1])))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg7766_0[2][1], Arg7766_0[2][2][2][2][2][2][2]]]]);})
  : (((Shen.is_type(Arg7766_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7766_0[1])) && Shen.is_type(Arg7766_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc->shen"], [Arg7766_0[2][1], Arg7766_0[2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.yacc"]]);})))}, 1, [], "shen.yacc"];





Shen.fns["shen.yacc->shen"] = [Shen.type_func, function shen_user_lambda7769(Arg7768) {
  if (Arg7768.length < 2) return [Shen.type_func, shen_user_lambda7769, 2, Arg7768];
  var Arg7768_0 = Arg7768[0], Arg7768_1 = Arg7768[1];
  return [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7768_0, Shen.call(Shen.fns["shen.yacc_cases"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.cc_body"], Shen.call(Shen.fns["shen.split_cc_rules"], [Arg7768_1, []])])])]]}, 2, [], "shen.yacc->shen"];





Shen.fns["shen.yacc_cases"] = [Shen.type_func, function shen_user_lambda7771(Arg7770) {
  if (Arg7770.length < 1) return [Shen.type_func, shen_user_lambda7771, 1, Arg7770];
  var Arg7770_0 = Arg7770[0];
  return (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda7773(Arg7772) {
  if (Arg7772.length < 1) return [Shen.type_func, shen_user_lambda7773, 1, Arg7772];
  var Arg7772_0 = Arg7772[0];
  return [Shen.type_cons, [Shen.type_symbol, "Stream"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, Arg7772_0, []]]]}, 1, [], undefined], Arg7770_0]), [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]);})}, 1, [], "shen.yacc_cases"];





Shen.fns["shen.first_n"] = [Shen.type_func, function shen_user_lambda7775(Arg7774) {
  if (Arg7774.length < 2) return [Shen.type_func, shen_user_lambda7775, 2, Arg7774];
  var Arg7774_0 = Arg7774[0], Arg7774_1 = Arg7774[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7774_0)))
  ? []
  : ((Shen.empty$question$(Arg7774_1))
  ? []
  : ((Shen.is_type(Arg7774_1, Shen.type_cons))
  ? [Shen.type_cons, Arg7774_1[1], Shen.call(Shen.fns["shen.first_n"], [(Arg7774_0 - 1), Arg7774_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.first_n"]]);}))))}, 2, [], "shen.first_n"];





Shen.fns["shen.split_cc_rules"] = [Shen.type_func, function shen_user_lambda7777(Arg7776) {
  if (Arg7776.length < 2) return [Shen.type_func, shen_user_lambda7777, 2, Arg7776];
  var Arg7776_0 = Arg7776[0], Arg7776_1 = Arg7776[1];
  return (((Shen.empty$question$(Arg7776_0) && Shen.empty$question$(Arg7776_1)))
  ? []
  : ((Shen.empty$question$(Arg7776_0))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7776_1]), []]), []]
  : (((Shen.is_type(Arg7776_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], Arg7776_0[1]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7776_1]), []]), Shen.call(Shen.fns["shen.split_cc_rules"], [Arg7776_0[2], []])]
  : ((Shen.is_type(Arg7776_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rules"], [Arg7776_0[2], [Shen.type_cons, Arg7776_0[1], Arg7776_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rules"]]);})))))}, 2, [], "shen.split_cc_rules"];





Shen.fns["shen.split_cc_rule"] = [Shen.type_func, function shen_user_lambda7779(Arg7778) {
  if (Arg7778.length < 2) return [Shen.type_func, shen_user_lambda7779, 2, Arg7778];
  var Arg7778_0 = Arg7778[0], Arg7778_1 = Arg7778[1];
  return (((Shen.is_type(Arg7778_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7778_0[1])) && (Shen.is_type(Arg7778_0[2], Shen.type_cons) && Shen.empty$question$(Arg7778_0[2][2])))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7778_1]), Arg7778_0[2]]
  : (((Shen.is_type(Arg7778_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7778_0[1])) && (Shen.is_type(Arg7778_0[2], Shen.type_cons) && (Shen.is_type(Arg7778_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg7778_0[2][2][1])) && (Shen.is_type(Arg7778_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7778_0[2][2][2][2]))))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7778_1]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Arg7778_0[2][2][2][1], [Shen.type_cons, Arg7778_0[2][1], []]]], []]]
  : ((Shen.empty$question$(Arg7778_0))
  ? (Shen.pr("warning: ", Shen.call(Shen.fns["stoutput"], [])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7781(Arg7780) {
  if (Arg7780.length < 1) return [Shen.type_func, shen_user_lambda7781, 1, Arg7780];
  var Arg7780_0 = Arg7780[0];
  return (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg7780_0, " ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg7778_1])]),
  Shen.pr("has no semantics.\x0a", Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [[Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Shen.call(Shen.fns["reverse"], [Arg7778_1])]), []]], Arg7778_1]);}))
  : ((Shen.is_type(Arg7778_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [Arg7778_0[2], [Shen.type_cons, Arg7778_0[1], Arg7778_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rule"]]);})))))}, 2, [], "shen.split_cc_rule"];





Shen.fns["shen.default_semantics"] = [Shen.type_func, function shen_user_lambda7783(Arg7782) {
  if (Arg7782.length < 1) return [Shen.type_func, shen_user_lambda7783, 1, Arg7782];
  var Arg7782_0 = Arg7782[0];
  return ((Shen.empty$question$(Arg7782_0))
  ? []
  : (((Shen.is_type(Arg7782_0, Shen.type_cons) && Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7782_0[1]])))
  ? [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, Arg7782_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg7782_0[2]]), []]]]
  : ((Shen.is_type(Arg7782_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg7782_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg7782_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.default_semantics"]]);}))))}, 1, [], "shen.default_semantics"];





Shen.fns["shen.cc_body"] = [Shen.type_func, function shen_user_lambda7785(Arg7784) {
  if (Arg7784.length < 1) return [Shen.type_func, shen_user_lambda7785, 1, Arg7784];
  var Arg7784_0 = Arg7784[0];
  return (((Shen.is_type(Arg7784_0, Shen.type_cons) && (Shen.is_type(Arg7784_0[2], Shen.type_cons) && Shen.empty$question$(Arg7784_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.syntax"], [Arg7784_0[1], [Shen.type_symbol, "Stream"], Arg7784_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cc_body"]]);}))}, 1, [], "shen.cc_body"];





Shen.fns["shen.syntax"] = [Shen.type_func, function shen_user_lambda7787(Arg7786) {
  if (Arg7786.length < 3) return [Shen.type_func, shen_user_lambda7787, 3, Arg7786];
  var Arg7786_0 = Arg7786[0], Arg7786_1 = Arg7786[1], Arg7786_2 = Arg7786[2];
  return (((Shen.empty$question$(Arg7786_0) && (Shen.is_type(Arg7786_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg7786_2[1])) && (Shen.is_type(Arg7786_2[2], Shen.type_cons) && (Shen.is_type(Arg7786_2[2][2], Shen.type_cons) && Shen.empty$question$(Arg7786_2[2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7786_2[2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7786_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7786_2[2][2][1]]), []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]
  : ((Shen.empty$question$(Arg7786_0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7786_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7786_2]), []]]]
  : ((Shen.is_type(Arg7786_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7786_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.recursive_descent"], [Arg7786_0, Arg7786_1, Arg7786_2]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg7786_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variable-match"], [Arg7786_0, Arg7786_1, Arg7786_2]);})
  : ((Shen.call(Shen.fns["shen.terminal?"], [Arg7786_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check_stream"], [Arg7786_0, Arg7786_1, Arg7786_2]);})
  : ((Shen.call(Shen.fns["shen.jump_stream?"], [Arg7786_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.jump_stream"], [Arg7786_0, Arg7786_1, Arg7786_2]);})
  : ((Shen.call(Shen.fns["shen.list_stream?"], [Arg7786_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list_stream"], [Shen.call(Shen.fns["shen.decons"], [Arg7786_0[1]]), Arg7786_0[2], Arg7786_1, Arg7786_2]);})
  : (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7786_0[1], " is not legal syntax\x0a", [Shen.type_symbol, "shen.a"]]));}))))))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.syntax"]]);}))))}, 3, [], "shen.syntax"];





Shen.fns["shen.list_stream?"] = [Shen.type_func, function shen_user_lambda7789(Arg7788) {
  if (Arg7788.length < 1) return [Shen.type_func, shen_user_lambda7789, 1, Arg7788];
  var Arg7788_0 = Arg7788[0];
  return ((Shen.is_type(Arg7788_0, Shen.type_cons))
  ? true
  : false)}, 1, [], "shen.list_stream?"];





Shen.fns["shen.decons"] = [Shen.type_func, function shen_user_lambda7791(Arg7790) {
  if (Arg7790.length < 1) return [Shen.type_func, shen_user_lambda7791, 1, Arg7790];
  var Arg7790_0 = Arg7790[0];
  return (((Shen.is_type(Arg7790_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg7790_0[1])) && (Shen.is_type(Arg7790_0[2], Shen.type_cons) && (Shen.is_type(Arg7790_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7790_0[2][2][2]))))))
  ? [Shen.type_cons, Arg7790_0[2][1], Shen.call(Shen.fns["shen.decons"], [Arg7790_0[2][2][1]])]
  : Arg7790_0)}, 1, [], "shen.decons"];





Shen.fns["shen.list_stream"] = [Shen.type_func, function shen_user_lambda7793(Arg7792) {
  if (Arg7792.length < 4) return [Shen.type_func, shen_user_lambda7793, 4, Arg7792];
  var Arg7792_0 = Arg7792[0], Arg7792_1 = Arg7792[1], Arg7792_2 = Arg7792[2], Arg7792_3 = Arg7792[3];
  var R0, R1, R2;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7792_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7792_2, []]], []]], []]], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "shen.snd-or-fail"], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7792_0, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7792_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7792_2, []]], []]]], [Shen.type_cons, [Shen.type_symbol, "shen.leave!"], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7792_1, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7792_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7792_2, []]], []]]], Arg7792_3]), []]]]), []]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])}, 4, [], "shen.list_stream"];





Shen.fns["shen.snd-or-fail"] = [Shen.type_func, function shen_user_lambda7795(Arg7794) {
  if (Arg7794.length < 1) return [Shen.type_func, shen_user_lambda7795, 1, Arg7794];
  var Arg7794_0 = Arg7794[0];
  return (((Shen.is_type(Arg7794_0, Shen.type_cons) && (Shen.is_type(Arg7794_0[2], Shen.type_cons) && Shen.empty$question$(Arg7794_0[2][2]))))
  ? Arg7794_0[2][1]
  : Shen.fail_obj)}, 1, [], "shen.snd-or-fail"];





Shen.fns["shen.grammar_symbol?"] = [Shen.type_func, function shen_user_lambda7797(Arg7796) {
  if (Arg7796.length < 1) return [Shen.type_func, shen_user_lambda7797, 1, Arg7796];
  var Arg7796_0 = Arg7796[0];
  var R0;
  return (Shen.is_type(Arg7796_0, Shen.type_symbol) && ((R0 = Shen.call(Shen.fns["explode"], [Arg7796_0])),
  (Shen.unwind_tail(Shen.$eq$(R0[1], "<")) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["reverse"], [R0])[1], ">")))))}, 1, [], "shen.grammar_symbol?"];





Shen.fns["shen.recursive_descent"] = [Shen.type_func, function shen_user_lambda7799(Arg7798) {
  if (Arg7798.length < 3) return [Shen.type_func, shen_user_lambda7799, 3, Arg7798];
  var Arg7798_0 = Arg7798[0], Arg7798_1 = Arg7798[1], Arg7798_2 = Arg7798[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7798_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg7798_0[1], [Shen.type_cons, Arg7798_1, []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7798_0[2], Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7798_0[1]]), Arg7798_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7798_0[1]]), [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7798_0[1]]), []]]], []]], [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursive_descent"]]);}))}, 3, [], "shen.recursive_descent"];





Shen.fns["shen.variable-match"] = [Shen.type_func, function shen_user_lambda7801(Arg7800) {
  if (Arg7800.length < 3) return [Shen.type_func, shen_user_lambda7801, 3, Arg7800];
  var Arg7800_0 = Arg7800[0], Arg7800_1 = Arg7800[1], Arg7800_2 = Arg7800[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7800_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7800_1, []]], []]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7800_0[1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7800_1, []]], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7800_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7800_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7800_1, []]], []]]], Arg7800_2]), []]]]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.variable-match"]]);}))}, 3, [], "shen.variable-match"];





Shen.fns["shen.terminal?"] = [Shen.type_func, function shen_user_lambda7803(Arg7802) {
  if (Arg7802.length < 1) return [Shen.type_func, shen_user_lambda7803, 1, Arg7802];
  var Arg7802_0 = Arg7802[0];
  return ((Shen.is_type(Arg7802_0, Shen.type_cons))
  ? false
  : ((Shen.call(Shen.fns["variable?"], [Arg7802_0]))
  ? false
  : true))}, 1, [], "shen.terminal?"];





Shen.fns["shen.jump_stream?"] = [Shen.type_func, function shen_user_lambda7805(Arg7804) {
  if (Arg7804.length < 1) return [Shen.type_func, shen_user_lambda7805, 1, Arg7804];
  var Arg7804_0 = Arg7804[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7804_0, [Shen.type_symbol, "_"])))
  ? true
  : false)}, 1, [], "shen.jump_stream?"];





Shen.fns["shen.check_stream"] = [Shen.type_func, function shen_user_lambda7807(Arg7806) {
  if (Arg7806.length < 3) return [Shen.type_func, shen_user_lambda7807, 3, Arg7806];
  var Arg7806_0 = Arg7806[0], Arg7806_1 = Arg7806[1], Arg7806_2 = Arg7806[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7806_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7806_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg7806_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7806_1, []]], []]], []]]], []]]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7806_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7806_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7806_1, []]], []]]], Arg7806_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.check_stream"]]);}))}, 3, [], "shen.check_stream"];





Shen.fns["shen.jump_stream"] = [Shen.type_func, function shen_user_lambda7809(Arg7808) {
  if (Arg7808.length < 3) return [Shen.type_func, shen_user_lambda7809, 3, Arg7808];
  var Arg7808_0 = Arg7808[0], Arg7808_1 = Arg7808[1], Arg7808_2 = Arg7808[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7808_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7808_1, []]], []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7808_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7808_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7808_1, []]], []]]], Arg7808_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.jump_stream"]]);}))}, 3, [], "shen.jump_stream"];





Shen.fns["shen.semantics"] = [Shen.type_func, function shen_user_lambda7811(Arg7810) {
  if (Arg7810.length < 1) return [Shen.type_func, shen_user_lambda7811, 1, Arg7810];
  var Arg7810_0 = Arg7810[0];
  return (((Shen.is_type(Arg7810_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.leave!"], Arg7810_0[1])) && (Shen.is_type(Arg7810_0[2], Shen.type_cons) && Shen.empty$question$(Arg7810_0[2][2])))))
  ? Arg7810_0[2][1]
  : ((Shen.empty$question$(Arg7810_0))
  ? []
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7810_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7810_0]), []]]
  : ((Shen.call(Shen.fns["variable?"], [Arg7810_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7810_0]);})
  : ((Shen.is_type(Arg7810_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.semantics"], Arg7810_0]);})
  : Arg7810_0)))))}, 1, [], "shen.semantics"];










Shen.fns["shen.pair"] = [Shen.type_func, function shen_user_lambda7814(Arg7813) {
  if (Arg7813.length < 2) return [Shen.type_func, shen_user_lambda7814, 2, Arg7813];
  var Arg7813_0 = Arg7813[0], Arg7813_1 = Arg7813[1];
  return [Shen.type_cons, Arg7813_0, [Shen.type_cons, Arg7813_1, []]]}, 2, [], "shen.pair"];





Shen.fns["shen.hdtl"] = [Shen.type_func, function shen_user_lambda7816(Arg7815) {
  if (Arg7815.length < 1) return [Shen.type_func, shen_user_lambda7816, 1, Arg7815];
  var Arg7815_0 = Arg7815[0];
  return Arg7815_0[2][1]}, 1, [], "shen.hdtl"];





Shen.fns["<!>"] = [Shen.type_func, function shen_user_lambda7818(Arg7817) {
  if (Arg7817.length < 1) return [Shen.type_func, shen_user_lambda7818, 1, Arg7817];
  var Arg7817_0 = Arg7817[0];
  return (((Shen.is_type(Arg7817_0, Shen.type_cons) && (Shen.is_type(Arg7817_0[2], Shen.type_cons) && Shen.empty$question$(Arg7817_0[2][2]))))
  ? [Shen.type_cons, [], [Shen.type_cons, Arg7817_0[1], []]]
  : Shen.fail_obj)}, 1, [], "<!>"];





Shen.fns["<e>"] = [Shen.type_func, function shen_user_lambda7820(Arg7819) {
  if (Arg7819.length < 1) return [Shen.type_func, shen_user_lambda7820, 1, Arg7819];
  var Arg7819_0 = Arg7819[0];
  return (((Shen.is_type(Arg7819_0, Shen.type_cons) && (Shen.is_type(Arg7819_0[2], Shen.type_cons) && Shen.empty$question$(Arg7819_0[2][2]))))
  ? [Shen.type_cons, Arg7819_0[1], [Shen.type_cons, [], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "<e>"]]);}))}, 1, [], "<e>"];










Shen.fns["print"] = [Shen.type_func, function shen_user_lambda7714(Arg7713) {
  if (Arg7713.length < 1) return [Shen.type_func, shen_user_lambda7714, 1, Arg7713];
  var Arg7713_0 = Arg7713[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.insert"], [Arg7713_0, "~S"])),
  Shen.pr(R0, Shen.call(Shen.fns["stoutput"], [])),
  Arg7713_0)}, 1, [], "print"];





Shen.fns["shen.mkstr"] = [Shen.type_func, function shen_user_lambda7716(Arg7715) {
  if (Arg7715.length < 2) return [Shen.type_func, shen_user_lambda7716, 2, Arg7715];
  var Arg7715_0 = Arg7715[0], Arg7715_1 = Arg7715[1];
  return (((typeof(Arg7715_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg7715_0]), Arg7715_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, Arg7715_0, []]], Arg7715_1]);}))}, 2, [], "shen.mkstr"];





Shen.fns["shen.mkstr-l"] = [Shen.type_func, function shen_user_lambda7718(Arg7717) {
  if (Arg7717.length < 2) return [Shen.type_func, shen_user_lambda7718, 2, Arg7717];
  var Arg7717_0 = Arg7717[0], Arg7717_1 = Arg7717[1];
  return ((Shen.empty$question$(Arg7717_1))
  ? Arg7717_0
  : ((Shen.is_type(Arg7717_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.insert-l"], [Arg7717_1[1], Arg7717_0]), Arg7717_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-l"]]);})))}, 2, [], "shen.mkstr-l"];





Shen.fns["shen.insert-l"] = [Shen.type_func, function shen_user_lambda7720(Arg7719) {
  if (Arg7719.length < 2) return [Shen.type_func, shen_user_lambda7720, 2, Arg7719];
  var Arg7719_0 = Arg7719[0], Arg7719_1 = Arg7719[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7719_1)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7719_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7719_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7719_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg7719_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7719_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7719_1)), [Shen.type_cons, [Shen.type_symbol, "shen.a"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7719_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7719_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7719_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg7719_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7719_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7719_1)), [Shen.type_cons, [Shen.type_symbol, "shen.r"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7719_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7719_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7719_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg7719_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7719_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7719_1)), [Shen.type_cons, [Shen.type_symbol, "shen.s"], []]]]]
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7719_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.factor-cn"], [[Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg7719_1[0], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7719_0, Shen.tlstr(Arg7719_1)]), []]]]]);})
  : (((Shen.is_type(Arg7719_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7719_1[1])) && (Shen.is_type(Arg7719_1[2], Shen.type_cons) && (Shen.is_type(Arg7719_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg7719_1[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg7719_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7719_0, Arg7719_1[2][2][1]]), []]]]
  : (((Shen.is_type(Arg7719_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.app"], Arg7719_1[1])) && (Shen.is_type(Arg7719_1[2], Shen.type_cons) && (Shen.is_type(Arg7719_1[2][2], Shen.type_cons) && (Shen.is_type(Arg7719_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7719_1[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7719_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7719_0, Arg7719_1[2][2][1]]), Arg7719_1[2][2][2]]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-l"]]);}))))))))}, 2, [], "shen.insert-l"];





Shen.fns["shen.factor-cn"] = [Shen.type_func, function shen_user_lambda7722(Arg7721) {
  if (Arg7721.length < 1) return [Shen.type_func, shen_user_lambda7722, 1, Arg7721];
  var Arg7721_0 = Arg7721[0];
  return (((Shen.is_type(Arg7721_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7721_0[1])) && (Shen.is_type(Arg7721_0[2], Shen.type_cons) && (Shen.is_type(Arg7721_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7721_0[2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7721_0[2][2][1][1])) && (Shen.is_type(Arg7721_0[2][2][1][2], Shen.type_cons) && (Shen.is_type(Arg7721_0[2][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7721_0[2][2][1][2][2][2]) && (Shen.empty$question$(Arg7721_0[2][2][2]) && ((typeof(Arg7721_0[2][1]) == 'string') && (typeof(Arg7721_0[2][2][1][2][1]) == 'string')))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, (Arg7721_0[2][1] + Arg7721_0[2][2][1][2][1]), Arg7721_0[2][2][1][2][2]]]
  : Arg7721_0)}, 1, [], "shen.factor-cn"];





Shen.fns["shen.proc-nl"] = [Shen.type_func, function shen_user_lambda7724(Arg7723) {
  if (Arg7723.length < 1) return [Shen.type_func, shen_user_lambda7724, 1, Arg7723];
  var Arg7723_0 = Arg7723[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7723_0)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7723_0]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7723_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7723_0)]) && Shen.unwind_tail(Shen.$eq$("%", Shen.tlstr(Arg7723_0)[0]))))))
  ? (Shen.n_$gt$string(10) + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Shen.tlstr(Arg7723_0))]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7723_0]))
  ? (Arg7723_0[0] + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Arg7723_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.proc-nl"]]);}))))}, 1, [], "shen.proc-nl"];





Shen.fns["shen.mkstr-r"] = [Shen.type_func, function shen_user_lambda7726(Arg7725) {
  if (Arg7725.length < 2) return [Shen.type_func, shen_user_lambda7726, 2, Arg7725];
  var Arg7725_0 = Arg7725[0], Arg7725_1 = Arg7725[1];
  return ((Shen.empty$question$(Arg7725_1))
  ? Arg7725_0
  : ((Shen.is_type(Arg7725_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.insert"], [Shen.type_cons, Arg7725_1[1], [Shen.type_cons, Arg7725_0, []]]], Arg7725_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-r"]]);})))}, 2, [], "shen.mkstr-r"];





Shen.fns["shen.insert"] = [Shen.type_func, function shen_user_lambda7728(Arg7727) {
  if (Arg7727.length < 2) return [Shen.type_func, shen_user_lambda7728, 2, Arg7727];
  var Arg7727_0 = Arg7727[0], Arg7727_1 = Arg7727[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7727_1)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7727_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7727_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7727_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg7727_1)[0]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg7727_0, Shen.tlstr(Shen.tlstr(Arg7727_1)), [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7727_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7727_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7727_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg7727_1)[0]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg7727_0, Shen.tlstr(Shen.tlstr(Arg7727_1)), [Shen.type_symbol, "shen.r"]]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7727_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7727_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7727_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg7727_1)[0]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg7727_0, Shen.tlstr(Shen.tlstr(Arg7727_1)), [Shen.type_symbol, "shen.s"]]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7727_1]))
  ? (Arg7727_1[0] + Shen.call(Shen.fns["shen.insert"], [Arg7727_0, Shen.tlstr(Arg7727_1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert"]]);}))))))}, 2, [], "shen.insert"];





Shen.fns["shen.app"] = [Shen.type_func, function shen_user_lambda7730(Arg7729) {
  if (Arg7729.length < 3) return [Shen.type_func, shen_user_lambda7730, 3, Arg7729];
  var Arg7729_0 = Arg7729[0], Arg7729_1 = Arg7729[1], Arg7729_2 = Arg7729[2];
  return (Shen.call(Shen.fns["shen.arg->str"], [Arg7729_0, Arg7729_2]) + Arg7729_1)}, 3, [], "shen.app"];





Shen.fns["shen.arg->str"] = [Shen.type_func, function shen_user_lambda7732(Arg7731) {
  if (Arg7731.length < 2) return [Shen.type_func, shen_user_lambda7732, 2, Arg7731];
  var Arg7731_0 = Arg7731[0], Arg7731_1 = Arg7731[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7731_0, Shen.fail_obj)))
  ? "..."
  : ((Shen.call(Shen.fns["shen.list?"], [Arg7731_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list->str"], [Arg7731_0, Arg7731_1]);})
  : (((typeof(Arg7731_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.str->str"], [Arg7731_0, Arg7731_1]);})
  : ((Shen.absvector$question$(Arg7731_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.vector->str"], [Arg7731_0, Arg7731_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.atom->str"], [Arg7731_0]);})))))}, 2, [], "shen.arg->str"];





Shen.fns["shen.list->str"] = [Shen.type_func, function shen_user_lambda7734(Arg7733) {
  if (Arg7733.length < 2) return [Shen.type_func, shen_user_lambda7734, 2, Arg7733];
  var Arg7733_0 = Arg7733[0], Arg7733_1 = Arg7733[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.r"], Arg7733_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["(", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg7733_0, [Shen.type_symbol, "shen.r"], Shen.call(Shen.fns["shen.maxseq"], [])]), ")"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg7733_0, Arg7733_1, Shen.call(Shen.fns["shen.maxseq"], [])]), "]"])]);}))}, 2, [], "shen.list->str"];





Shen.fns["shen.maxseq"] = [Shen.type_func, function shen_user_lambda7736(Arg7735) {
  if (Arg7735.length < 0) return [Shen.type_func, shen_user_lambda7736, 0, Arg7735];
  return (Shen.globals["*maximum-print-sequence-size*"])}, 0, [], "shen.maxseq"];





Shen.fns["shen.iter-list"] = [Shen.type_func, function shen_user_lambda7738(Arg7737) {
  if (Arg7737.length < 3) return [Shen.type_func, shen_user_lambda7738, 3, Arg7737];
  var Arg7737_0 = Arg7737[0], Arg7737_1 = Arg7737[1], Arg7737_2 = Arg7737[2];
  return ((Shen.empty$question$(Arg7737_0))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg7737_2)))
  ? "... etc"
  : (((Shen.is_type(Arg7737_0, Shen.type_cons) && Shen.empty$question$(Arg7737_0[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [Arg7737_0[1], Arg7737_1]);})
  : ((Shen.is_type(Arg7737_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Arg7737_0[1], Arg7737_1]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-list"], [Arg7737_0[2], Arg7737_1, (Arg7737_2 - 1)])])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [" ", Shen.call(Shen.fns["@s"], ["|", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.arg->str"], [Arg7737_0, Arg7737_1])])])]);})))))}, 3, [], "shen.iter-list"];





Shen.fns["shen.str->str"] = [Shen.type_func, function shen_user_lambda7740(Arg7739) {
  if (Arg7739.length < 2) return [Shen.type_func, shen_user_lambda7740, 2, Arg7739];
  var Arg7739_0 = Arg7739[0], Arg7739_1 = Arg7739[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg7739_1)))
  ? Arg7739_0
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(34), Shen.call(Shen.fns["@s"], [Arg7739_0, Shen.n_$gt$string(34)])]);}))}, 2, [], "shen.str->str"];





Shen.fns["shen.vector->str"] = [Shen.type_func, function shen_user_lambda7742(Arg7741) {
  if (Arg7741.length < 2) return [Shen.type_func, shen_user_lambda7742, 2, Arg7741];
  var Arg7741_0 = Arg7741[0], Arg7741_1 = Arg7741[1];
  return ((Shen.call(Shen.fns["shen.print-vector?"], [Arg7741_0]))
  ? (function() {
  return Shen.call_tail(Shen.absvector_ref(Arg7741_0, 0), [Arg7741_0]);})
  : ((Shen.vector$question$(Arg7741_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg7741_0, 1, Arg7741_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg7741_0, 0, Arg7741_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">>"])])]);})))}, 2, [], "shen.vector->str"];





Shen.fns["shen.print-vector?"] = [Shen.type_func, function shen_user_lambda7744(Arg7743) {
  if (Arg7743.length < 1) return [Shen.type_func, shen_user_lambda7744, 1, Arg7743];
  var Arg7743_0 = Arg7743[0];
  var R0;
  return ((R0 = Shen.absvector_ref(Arg7743_0, 0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.tuple"])))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.pvar"])))
  ? true
  : (((!(typeof(R0) == 'number')))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.fbound?"], [R0]);})
  : false))))}, 1, [], "shen.print-vector?"];





Shen.fns["shen.fbound?"] = [Shen.type_func, function shen_user_lambda7746(Arg7745) {
  if (Arg7745.length < 1) return [Shen.type_func, shen_user_lambda7746, 1, Arg7745];
  var Arg7745_0 = Arg7745[0];
  return (function() {
  return Shen.trap_error(function() {return (Shen.call(Shen.fns["ps"], [Arg7745_0]),
  true);}, [Shen.type_func, function shen_user_lambda7748(Arg7747) {
  if (Arg7747.length < 1) return [Shen.type_func, shen_user_lambda7748, 1, Arg7747];
  var Arg7747_0 = Arg7747[0];
  return false}, 1, [], undefined]);})}, 1, [], "shen.fbound?"];





Shen.fns["shen.tuple"] = [Shen.type_func, function shen_user_lambda7750(Arg7749) {
  if (Arg7749.length < 1) return [Shen.type_func, shen_user_lambda7750, 1, Arg7749];
  var Arg7749_0 = Arg7749[0];
  return ("(@p " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg7749_0, 1), (" " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg7749_0, 2), ")", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.s"]]))}, 1, [], "shen.tuple"];





Shen.fns["shen.iter-vector"] = [Shen.type_func, function shen_user_lambda7752(Arg7751) {
  if (Arg7751.length < 4) return [Shen.type_func, shen_user_lambda7752, 4, Arg7751];
  var Arg7751_0 = Arg7751[0], Arg7751_1 = Arg7751[1], Arg7751_2 = Arg7751[2], Arg7751_3 = Arg7751[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7751_3)))
  ? "... etc"
  : ((R0 = Shen.trap_error(function() {return Shen.absvector_ref(Arg7751_0, Arg7751_1);}, [Shen.type_func, function shen_user_lambda7754(Arg7753) {
  if (Arg7753.length < 1) return [Shen.type_func, shen_user_lambda7754, 1, Arg7753];
  var Arg7753_0 = Arg7753[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined])),
  (R1 = Shen.trap_error(function() {return Shen.absvector_ref(Arg7751_0, (Arg7751_1 + 1));}, [Shen.type_func, function shen_user_lambda7756(Arg7755) {
  if (Arg7755.length < 1) return [Shen.type_func, shen_user_lambda7756, 1, Arg7755];
  var Arg7755_0 = Arg7755[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [R0, Arg7751_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [R0, Arg7751_2]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-vector"], [Arg7751_0, (Arg7751_1 + 1), Arg7751_2, (Arg7751_3 - 1)])])]);})))))}, 4, [], "shen.iter-vector"];





Shen.fns["shen.atom->str"] = [Shen.type_func, function shen_user_lambda7758(Arg7757) {
  if (Arg7757.length < 1) return [Shen.type_func, shen_user_lambda7758, 1, Arg7757];
  var Arg7757_0 = Arg7757[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.str(Arg7757_0);}, [Shen.type_func, function shen_user_lambda7760(Arg7759) {
  if (Arg7759.length < 1) return [Shen.type_func, shen_user_lambda7760, 1, Arg7759];
  var Arg7759_0 = Arg7759[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.funexstring"], []);})}, 1, [], undefined]);})}, 1, [], "shen.atom->str"];





Shen.fns["shen.funexstring"] = [Shen.type_func, function shen_user_lambda7762(Arg7761) {
  if (Arg7761.length < 0) return [Shen.type_func, shen_user_lambda7762, 0, Arg7761];
  return (function() {
  return Shen.call_tail(Shen.fns["@s"], ["", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "x"]]), [Shen.type_symbol, "shen.a"]]), ""])])])])])]);})}, 0, [], "shen.funexstring"];





Shen.fns["shen.list?"] = [Shen.type_func, function shen_user_lambda7764(Arg7763) {
  if (Arg7763.length < 1) return [Shen.type_func, shen_user_lambda7764, 1, Arg7763];
  var Arg7763_0 = Arg7763[0];
  return (Shen.empty$question$(Arg7763_0) || Shen.is_type(Arg7763_0, Shen.type_cons))}, 1, [], "shen.list?"];










Shen.fns["lineread"] = [Shen.type_func, function shen_user_lambda6737(Arg6736) {
  if (Arg6736.length < 0) return [Shen.type_func, shen_user_lambda6737, 0, Arg6736];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), []]);})}, 0, [], "lineread"];





Shen.fns["shen.lineread-loop"] = [Shen.type_func, function shen_user_lambda6739(Arg6738) {
  if (Arg6738.length < 2) return [Shen.type_func, shen_user_lambda6739, 2, Arg6738];
  var Arg6738_0 = Arg6738[0], Arg6738_1 = Arg6738[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6738_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg6738_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg6738_1, [Shen.type_func, function shen_user_lambda6741(Arg6740) {
  if (Arg6740.length < 1) return [Shen.type_func, shen_user_lambda6741, 1, Arg6740];
  var Arg6740_0 = Arg6740[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg6738_1, [Shen.type_cons, Arg6738_0, []]])]);})
  : R0))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg6738_1, [Shen.type_cons, Arg6738_0, []]])]);})))}, 2, [], "shen.lineread-loop"];





Shen.fns["read-file"] = [Shen.type_func, function shen_user_lambda6743(Arg6742) {
  if (Arg6742.length < 1) return [Shen.type_func, shen_user_lambda6743, 1, Arg6742];
  var Arg6742_0 = Arg6742[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["read-file-as-bytelist"], [Arg6742_0])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R0, [Shen.type_symbol, "shen.read-error"]]);}))}, 1, [], "read-file"];





Shen.fns["shen.read-error"] = [Shen.type_func, function shen_user_lambda6745(Arg6744) {
  if (Arg6744.length < 1) return [Shen.type_func, shen_user_lambda6745, 1, Arg6744];
  var Arg6744_0 = Arg6744[0];
  return (((Shen.is_type(Arg6744_0, Shen.type_cons) && (Shen.is_type(Arg6744_0[1], Shen.type_cons) && (Shen.is_type(Arg6744_0[2], Shen.type_cons) && Shen.empty$question$(Arg6744_0[2][2])))))
  ? (function() {
  return Shen.simple_error(("read error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.compress-50"], [50, Arg6744_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error("read error\x0a");}))}, 1, [], "shen.read-error"];





Shen.fns["shen.compress-50"] = [Shen.type_func, function shen_user_lambda6747(Arg6746) {
  if (Arg6746.length < 2) return [Shen.type_func, shen_user_lambda6747, 2, Arg6746];
  var Arg6746_0 = Arg6746[0], Arg6746_1 = Arg6746[1];
  return ((Shen.empty$question$(Arg6746_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6746_0)))
  ? ""
  : ((Shen.is_type(Arg6746_1, Shen.type_cons))
  ? (Shen.n_$gt$string(Arg6746_1[1]) + Shen.call(Shen.fns["shen.compress-50"], [(Arg6746_0 - 1), Arg6746_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compress-50"]]);}))))}, 2, [], "shen.compress-50"];





Shen.fns["shen.<st_input>"] = [Shen.type_func, function shen_user_lambda6749(Arg6748) {
  if (Arg6748.length < 1) return [Shen.type_func, shen_user_lambda6749, 1, Arg6748];
  var Arg6748_0 = Arg6748[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<lsb>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rsb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lrb>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rrb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.package-macro"], [Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lcurly>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "{"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rcurly>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "}"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<bar>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "bar!"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<semicolon>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ";"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<equal>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":="], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<minus>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comma>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ","], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<atom>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6748_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<st_input>"];





Shen.fns["shen.<lsb>"] = [Shen.type_func, function shen_user_lambda6751(Arg6750) {
  if (Arg6750.length < 1) return [Shen.type_func, shen_user_lambda6751, 1, Arg6750];
  var Arg6750_0 = Arg6750[0];
  var R0;
  return ((((Shen.is_type(Arg6750_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(91, Arg6750_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6750_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6750_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lsb>"];





Shen.fns["shen.<rsb>"] = [Shen.type_func, function shen_user_lambda6753(Arg6752) {
  if (Arg6752.length < 1) return [Shen.type_func, shen_user_lambda6753, 1, Arg6752];
  var Arg6752_0 = Arg6752[0];
  var R0;
  return ((((Shen.is_type(Arg6752_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(93, Arg6752_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6752_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6752_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rsb>"];





Shen.fns["shen.<lcurly>"] = [Shen.type_func, function shen_user_lambda6755(Arg6754) {
  if (Arg6754.length < 1) return [Shen.type_func, shen_user_lambda6755, 1, Arg6754];
  var Arg6754_0 = Arg6754[0];
  var R0;
  return ((((Shen.is_type(Arg6754_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(123, Arg6754_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6754_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6754_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lcurly>"];





Shen.fns["shen.<rcurly>"] = [Shen.type_func, function shen_user_lambda6757(Arg6756) {
  if (Arg6756.length < 1) return [Shen.type_func, shen_user_lambda6757, 1, Arg6756];
  var Arg6756_0 = Arg6756[0];
  var R0;
  return ((((Shen.is_type(Arg6756_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(125, Arg6756_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6756_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6756_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rcurly>"];





Shen.fns["shen.<bar>"] = [Shen.type_func, function shen_user_lambda6759(Arg6758) {
  if (Arg6758.length < 1) return [Shen.type_func, shen_user_lambda6759, 1, Arg6758];
  var Arg6758_0 = Arg6758[0];
  var R0;
  return ((((Shen.is_type(Arg6758_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(124, Arg6758_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6758_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6758_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<bar>"];





Shen.fns["shen.<semicolon>"] = [Shen.type_func, function shen_user_lambda6761(Arg6760) {
  if (Arg6760.length < 1) return [Shen.type_func, shen_user_lambda6761, 1, Arg6760];
  var Arg6760_0 = Arg6760[0];
  var R0;
  return ((((Shen.is_type(Arg6760_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(59, Arg6760_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6760_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6760_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon>"];





Shen.fns["shen.<colon>"] = [Shen.type_func, function shen_user_lambda6763(Arg6762) {
  if (Arg6762.length < 1) return [Shen.type_func, shen_user_lambda6763, 1, Arg6762];
  var Arg6762_0 = Arg6762[0];
  var R0;
  return ((((Shen.is_type(Arg6762_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(58, Arg6762_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6762_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6762_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<colon>"];





Shen.fns["shen.<comma>"] = [Shen.type_func, function shen_user_lambda6765(Arg6764) {
  if (Arg6764.length < 1) return [Shen.type_func, shen_user_lambda6765, 1, Arg6764];
  var Arg6764_0 = Arg6764[0];
  var R0;
  return ((((Shen.is_type(Arg6764_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(44, Arg6764_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6764_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6764_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma>"];





Shen.fns["shen.<equal>"] = [Shen.type_func, function shen_user_lambda6767(Arg6766) {
  if (Arg6766.length < 1) return [Shen.type_func, shen_user_lambda6767, 1, Arg6766];
  var Arg6766_0 = Arg6766[0];
  var R0;
  return ((((Shen.is_type(Arg6766_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(61, Arg6766_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6766_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6766_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<equal>"];





Shen.fns["shen.<minus>"] = [Shen.type_func, function shen_user_lambda6769(Arg6768) {
  if (Arg6768.length < 1) return [Shen.type_func, shen_user_lambda6769, 1, Arg6768];
  var Arg6768_0 = Arg6768[0];
  var R0;
  return ((((Shen.is_type(Arg6768_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(45, Arg6768_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6768_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6768_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<minus>"];





Shen.fns["shen.<lrb>"] = [Shen.type_func, function shen_user_lambda6771(Arg6770) {
  if (Arg6770.length < 1) return [Shen.type_func, shen_user_lambda6771, 1, Arg6770];
  var Arg6770_0 = Arg6770[0];
  var R0;
  return ((((Shen.is_type(Arg6770_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(40, Arg6770_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6770_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6770_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lrb>"];





Shen.fns["shen.<rrb>"] = [Shen.type_func, function shen_user_lambda6773(Arg6772) {
  if (Arg6772.length < 1) return [Shen.type_func, shen_user_lambda6773, 1, Arg6772];
  var Arg6772_0 = Arg6772[0];
  var R0;
  return ((((Shen.is_type(Arg6772_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(41, Arg6772_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6772_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6772_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rrb>"];





Shen.fns["shen.<atom>"] = [Shen.type_func, function shen_user_lambda6775(Arg6774) {
  if (Arg6774.length < 1) return [Shen.type_func, shen_user_lambda6775, 1, Arg6774];
  var Arg6774_0 = Arg6774[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<str>"], [Arg6774_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.control-chars"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<number>"], [Arg6774_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<sym>"], [Arg6774_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["shen.hdtl"], [R0]), "<>")))
  ? [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]
  : Shen.intern(Shen.call(Shen.fns["shen.hdtl"], [R0])))]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<atom>"];





Shen.fns["shen.control-chars"] = [Shen.type_func, function shen_user_lambda6777(Arg6776) {
  if (Arg6776.length < 1) return [Shen.type_func, shen_user_lambda6777, 1, Arg6776];
  var Arg6776_0 = Arg6776[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6776_0))
  ? ""
  : (((Shen.is_type(Arg6776_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("c", Arg6776_0[1])) && (Shen.is_type(Arg6776_0[2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("#", Arg6776_0[2][1]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.code-point"], [Arg6776_0[2][2]])),
  (R1 = Shen.call(Shen.fns["shen.after-codepoint"], [Arg6776_0[2][2]])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(Shen.call(Shen.fns["shen.decimalise"], [R0])), Shen.call(Shen.fns["shen.control-chars"], [R1])]);}))
  : ((Shen.is_type(Arg6776_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Arg6776_0[1], Shen.call(Shen.fns["shen.control-chars"], [Arg6776_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.control-chars"]]);}))))}, 1, [], "shen.control-chars"];





Shen.fns["shen.code-point"] = [Shen.type_func, function shen_user_lambda6779(Arg6778) {
  if (Arg6778.length < 1) return [Shen.type_func, shen_user_lambda6779, 1, Arg6778];
  var Arg6778_0 = Arg6778[0];
  return (((Shen.is_type(Arg6778_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6778_0[1]))))
  ? ""
  : (((Shen.is_type(Arg6778_0, Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6778_0[1], [Shen.type_cons, "0", [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]])))
  ? [Shen.type_cons, Arg6778_0[1], Shen.call(Shen.fns["shen.code-point"], [Arg6778_0[2]])]
  : (function() {
  return Shen.simple_error(("code point parse error " + Shen.call(Shen.fns["shen.app"], [Arg6778_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})))}, 1, [], "shen.code-point"];





Shen.fns["shen.after-codepoint"] = [Shen.type_func, function shen_user_lambda6781(Arg6780) {
  if (Arg6780.length < 1) return [Shen.type_func, shen_user_lambda6781, 1, Arg6780];
  var Arg6780_0 = Arg6780[0];
  return ((Shen.empty$question$(Arg6780_0))
  ? []
  : (((Shen.is_type(Arg6780_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6780_0[1]))))
  ? Arg6780_0[2]
  : ((Shen.is_type(Arg6780_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.after-codepoint"], [Arg6780_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.after-codepoint"]]);}))))}, 1, [], "shen.after-codepoint"];





Shen.fns["shen.decimalise"] = [Shen.type_func, function shen_user_lambda6783(Arg6782) {
  if (Arg6782.length < 1) return [Shen.type_func, shen_user_lambda6783, 1, Arg6782];
  var Arg6782_0 = Arg6782[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.digits->integers"], [Arg6782_0])]), 0]);})}, 1, [], "shen.decimalise"];





Shen.fns["shen.digits->integers"] = [Shen.type_func, function shen_user_lambda6785(Arg6784) {
  if (Arg6784.length < 1) return [Shen.type_func, shen_user_lambda6785, 1, Arg6784];
  var Arg6784_0 = Arg6784[0];
  return (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("0", Arg6784_0[1]))))
  ? [Shen.type_cons, 0, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("1", Arg6784_0[1]))))
  ? [Shen.type_cons, 1, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("2", Arg6784_0[1]))))
  ? [Shen.type_cons, 2, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("3", Arg6784_0[1]))))
  ? [Shen.type_cons, 3, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("4", Arg6784_0[1]))))
  ? [Shen.type_cons, 4, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("5", Arg6784_0[1]))))
  ? [Shen.type_cons, 5, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("6", Arg6784_0[1]))))
  ? [Shen.type_cons, 6, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("7", Arg6784_0[1]))))
  ? [Shen.type_cons, 7, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("8", Arg6784_0[1]))))
  ? [Shen.type_cons, 8, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("9", Arg6784_0[1]))))
  ? [Shen.type_cons, 9, Shen.call(Shen.fns["shen.digits->integers"], [Arg6784_0[2]])]
  : []))))))))))}, 1, [], "shen.digits->integers"];





Shen.fns["shen.<sym>"] = [Shen.type_func, function shen_user_lambda6787(Arg6786) {
  if (Arg6786.length < 1) return [Shen.type_func, shen_user_lambda6787, 1, Arg6786];
  var Arg6786_0 = Arg6786[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6786_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sym>"];





Shen.fns["shen.<alphanums>"] = [Shen.type_func, function shen_user_lambda6789(Arg6788) {
  if (Arg6788.length < 1) return [Shen.type_func, shen_user_lambda6789, 1, Arg6788];
  var Arg6788_0 = Arg6788[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alphanum>"], [Arg6788_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6788_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ""]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanums>"];





Shen.fns["shen.<alphanum>"] = [Shen.type_func, function shen_user_lambda6791(Arg6790) {
  if (Arg6790.length < 1) return [Shen.type_func, shen_user_lambda6791, 1, Arg6790];
  var Arg6790_0 = Arg6790[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6790_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<num>"], [Arg6790_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanum>"];





Shen.fns["shen.<num>"] = [Shen.type_func, function shen_user_lambda6793(Arg6792) {
  if (Arg6792.length < 1) return [Shen.type_func, shen_user_lambda6793, 1, Arg6792];
  var Arg6792_0 = Arg6792[0];
  var R0;
  return (((Shen.is_type(Arg6792_0[1], Shen.type_cons))
  ? ((R0 = Arg6792_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6792_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6792_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<num>"];





Shen.fns["shen.numbyte?"] = [Shen.type_func, function shen_user_lambda6795(Arg6794) {
  if (Arg6794.length < 1) return [Shen.type_func, shen_user_lambda6795, 1, Arg6794];
  var Arg6794_0 = Arg6794[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6794_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6794_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6794_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6794_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6794_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6794_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6794_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6794_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6794_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6794_0)))
  ? true
  : false))))))))))}, 1, [], "shen.numbyte?"];





Shen.fns["shen.<alpha>"] = [Shen.type_func, function shen_user_lambda6797(Arg6796) {
  if (Arg6796.length < 1) return [Shen.type_func, shen_user_lambda6797, 1, Arg6796];
  var Arg6796_0 = Arg6796[0];
  var R0;
  return (((Shen.is_type(Arg6796_0[1], Shen.type_cons))
  ? ((R0 = Arg6796_0[1][1]),
  ((Shen.call(Shen.fns["shen.symbol-code?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6796_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6796_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<alpha>"];





Shen.fns["shen.symbol-code?"] = [Shen.type_func, function shen_user_lambda6799(Arg6798) {
  if (Arg6798.length < 1) return [Shen.type_func, shen_user_lambda6799, 1, Arg6798];
  var Arg6798_0 = Arg6798[0];
  return (Shen.unwind_tail(Shen.$eq$(Arg6798_0, 126)) || (((Arg6798_0 > 94) && (Arg6798_0 < 123)) || (((Arg6798_0 > 59) && (Arg6798_0 < 91)) || (((Arg6798_0 > 41) && ((Arg6798_0 < 58) && (!Shen.unwind_tail(Shen.$eq$(Arg6798_0, 44))))) || (((Arg6798_0 > 34) && (Arg6798_0 < 40)) || Shen.unwind_tail(Shen.$eq$(Arg6798_0, 33)))))))}, 1, [], "shen.symbol-code?"];





Shen.fns["shen.<str>"] = [Shen.type_func, function shen_user_lambda6801(Arg6800) {
  if (Arg6800.length < 1) return [Shen.type_func, shen_user_lambda6801, 1, Arg6800];
  var Arg6800_0 = Arg6800[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<dbq>"], [Arg6800_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<dbq>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<str>"];





Shen.fns["shen.<dbq>"] = [Shen.type_func, function shen_user_lambda6803(Arg6802) {
  if (Arg6802.length < 1) return [Shen.type_func, shen_user_lambda6803, 1, Arg6802];
  var Arg6802_0 = Arg6802[0];
  var R0;
  return (((Shen.is_type(Arg6802_0[1], Shen.type_cons))
  ? ((R0 = Arg6802_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 34)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6802_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6802_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<dbq>"];





Shen.fns["shen.<strcontents>"] = [Shen.type_func, function shen_user_lambda6805(Arg6804) {
  if (Arg6804.length < 1) return [Shen.type_func, shen_user_lambda6805, 1, Arg6804];
  var Arg6804_0 = Arg6804[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<strc>"], [Arg6804_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6804_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<strcontents>"];





Shen.fns["shen.<byte>"] = [Shen.type_func, function shen_user_lambda6807(Arg6806) {
  if (Arg6806.length < 1) return [Shen.type_func, shen_user_lambda6807, 1, Arg6806];
  var Arg6806_0 = Arg6806[0];
  var R0;
  return (((Shen.is_type(Arg6806_0[1], Shen.type_cons))
  ? ((R0 = Arg6806_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6806_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6806_0])])[1], Shen.n_$gt$string(R0)])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<byte>"];





Shen.fns["shen.<strc>"] = [Shen.type_func, function shen_user_lambda6809(Arg6808) {
  if (Arg6808.length < 1) return [Shen.type_func, shen_user_lambda6809, 1, Arg6808];
  var Arg6808_0 = Arg6808[0];
  var R0;
  return (((Shen.is_type(Arg6808_0[1], Shen.type_cons))
  ? ((R0 = Arg6808_0[1][1]),
  (((!Shen.unwind_tail(Shen.$eq$(R0, 34))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6808_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6808_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<strc>"];





Shen.fns["shen.<backslash>"] = [Shen.type_func, function shen_user_lambda6811(Arg6810) {
  if (Arg6810.length < 1) return [Shen.type_func, shen_user_lambda6811, 1, Arg6810];
  var Arg6810_0 = Arg6810[0];
  var R0;
  return (((Shen.is_type(Arg6810_0[1], Shen.type_cons))
  ? ((R0 = Arg6810_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 92)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6810_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6810_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<backslash>"];





Shen.fns["shen.<number>"] = [Shen.type_func, function shen_user_lambda6813(Arg6812) {
  if (Arg6812.length < 1) return [Shen.type_func, shen_user_lambda6813, 1, Arg6812];
  var Arg6812_0 = Arg6812[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6812_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.hdtl"], [R0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<plus>"], [Arg6812_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6812_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<E>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<log10>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R2])]) * (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1])))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6812_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<E>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<log10>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R1])]) * Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6812_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6812_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<number>"];





Shen.fns["shen.<E>"] = [Shen.type_func, function shen_user_lambda6815(Arg6814) {
  if (Arg6814.length < 1) return [Shen.type_func, shen_user_lambda6815, 1, Arg6814];
  var Arg6814_0 = Arg6814[0];
  var R0;
  return ((((Shen.is_type(Arg6814_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(101, Arg6814_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6814_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6814_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<E>"];





Shen.fns["shen.<log10>"] = [Shen.type_func, function shen_user_lambda6817(Arg6816) {
  if (Arg6816.length < 1) return [Shen.type_func, shen_user_lambda6817, 1, Arg6816];
  var Arg6816_0 = Arg6816[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6816_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6816_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<log10>"];





Shen.fns["shen.<plus>"] = [Shen.type_func, function shen_user_lambda6819(Arg6818) {
  if (Arg6818.length < 1) return [Shen.type_func, shen_user_lambda6819, 1, Arg6818];
  var Arg6818_0 = Arg6818[0];
  var R0;
  return (((Shen.is_type(Arg6818_0[1], Shen.type_cons))
  ? ((R0 = Arg6818_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 43)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6818_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6818_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<plus>"];





Shen.fns["shen.<stop>"] = [Shen.type_func, function shen_user_lambda6821(Arg6820) {
  if (Arg6820.length < 1) return [Shen.type_func, shen_user_lambda6821, 1, Arg6820];
  var Arg6820_0 = Arg6820[0];
  var R0;
  return (((Shen.is_type(Arg6820_0[1], Shen.type_cons))
  ? ((R0 = Arg6820_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 46)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6820_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6820_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<stop>"];





Shen.fns["shen.<predigits>"] = [Shen.type_func, function shen_user_lambda6823(Arg6822) {
  if (Arg6822.length < 1) return [Shen.type_func, shen_user_lambda6823, 1, Arg6822];
  var Arg6822_0 = Arg6822[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6822_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6822_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<predigits>"];





Shen.fns["shen.<postdigits>"] = [Shen.type_func, function shen_user_lambda6825(Arg6824) {
  if (Arg6824.length < 1) return [Shen.type_func, shen_user_lambda6825, 1, Arg6824];
  var Arg6824_0 = Arg6824[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6824_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<postdigits>"];





Shen.fns["shen.<digits>"] = [Shen.type_func, function shen_user_lambda6827(Arg6826) {
  if (Arg6826.length < 1) return [Shen.type_func, shen_user_lambda6827, 1, Arg6826];
  var Arg6826_0 = Arg6826[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6826_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6826_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<digits>"];





Shen.fns["shen.<digit>"] = [Shen.type_func, function shen_user_lambda6829(Arg6828) {
  if (Arg6828.length < 1) return [Shen.type_func, shen_user_lambda6829, 1, Arg6828];
  var Arg6828_0 = Arg6828[0];
  var R0;
  return (((Shen.is_type(Arg6828_0[1], Shen.type_cons))
  ? ((R0 = Arg6828_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6828_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6828_0])])[1], Shen.call(Shen.fns["shen.byte->digit"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<digit>"];





Shen.fns["shen.byte->digit"] = [Shen.type_func, function shen_user_lambda6831(Arg6830) {
  if (Arg6830.length < 1) return [Shen.type_func, shen_user_lambda6831, 1, Arg6830];
  var Arg6830_0 = Arg6830[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6830_0)))
  ? 0
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6830_0)))
  ? 1
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6830_0)))
  ? 2
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6830_0)))
  ? 3
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6830_0)))
  ? 4
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6830_0)))
  ? 5
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6830_0)))
  ? 6
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6830_0)))
  ? 7
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6830_0)))
  ? 8
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6830_0)))
  ? 9
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.byte->digit"]]);})))))))))))}, 1, [], "shen.byte->digit"];





Shen.fns["shen.pre"] = [Shen.type_func, function shen_user_lambda6833(Arg6832) {
  if (Arg6832.length < 2) return [Shen.type_func, shen_user_lambda6833, 2, Arg6832];
  var Arg6832_0 = Arg6832[0], Arg6832_1 = Arg6832[1];
  return ((Shen.empty$question$(Arg6832_0))
  ? 0
  : ((Shen.is_type(Arg6832_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, Arg6832_1]) * Arg6832_0[1]) + Shen.call(Shen.fns["shen.pre"], [Arg6832_0[2], (Arg6832_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.pre"]]);})))}, 2, [], "shen.pre"];





Shen.fns["shen.post"] = [Shen.type_func, function shen_user_lambda6835(Arg6834) {
  if (Arg6834.length < 2) return [Shen.type_func, shen_user_lambda6835, 2, Arg6834];
  var Arg6834_0 = Arg6834[0], Arg6834_1 = Arg6834[1];
  return ((Shen.empty$question$(Arg6834_0))
  ? 0
  : ((Shen.is_type(Arg6834_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, (0 - Arg6834_1)]) * Arg6834_0[1]) + Shen.call(Shen.fns["shen.post"], [Arg6834_0[2], (Arg6834_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.post"]]);})))}, 2, [], "shen.post"];





Shen.fns["shen.expt"] = [Shen.type_func, function shen_user_lambda6837(Arg6836) {
  if (Arg6836.length < 2) return [Shen.type_func, shen_user_lambda6837, 2, Arg6836];
  var Arg6836_0 = Arg6836[0], Arg6836_1 = Arg6836[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6836_1)))
  ? 1
  : (((Arg6836_1 > 0))
  ? (Arg6836_0 * Shen.call(Shen.fns["shen.expt"], [Arg6836_0, (Arg6836_1 - 1)]))
  : (1 * (Shen.call(Shen.fns["shen.expt"], [Arg6836_0, (Arg6836_1 + 1)]) / Arg6836_0))))}, 2, [], "shen.expt"];





Shen.fns["shen.<st_input1>"] = [Shen.type_func, function shen_user_lambda6839(Arg6838) {
  if (Arg6838.length < 1) return [Shen.type_func, shen_user_lambda6839, 1, Arg6838];
  var Arg6838_0 = Arg6838[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6838_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input1>"];





Shen.fns["shen.<st_input2>"] = [Shen.type_func, function shen_user_lambda6841(Arg6840) {
  if (Arg6840.length < 1) return [Shen.type_func, shen_user_lambda6841, 1, Arg6840];
  var Arg6840_0 = Arg6840[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6840_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input2>"];





Shen.fns["shen.<comment>"] = [Shen.type_func, function shen_user_lambda6843(Arg6842) {
  if (Arg6842.length < 1) return [Shen.type_func, shen_user_lambda6843, 1, Arg6842];
  var Arg6842_0 = Arg6842[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg6842_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comment>"];





Shen.fns["shen.<times>"] = [Shen.type_func, function shen_user_lambda6845(Arg6844) {
  if (Arg6844.length < 1) return [Shen.type_func, shen_user_lambda6845, 1, Arg6844];
  var Arg6844_0 = Arg6844[0];
  var R0;
  return (((Shen.is_type(Arg6844_0[1], Shen.type_cons))
  ? ((R0 = Arg6844_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 42)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6844_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6844_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<times>"];





Shen.fns["shen.<any>"] = [Shen.type_func, function shen_user_lambda6847(Arg6846) {
  if (Arg6846.length < 1) return [Shen.type_func, shen_user_lambda6847, 1, Arg6846];
  var Arg6846_0 = Arg6846[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6846_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<blah>"], [Arg6846_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6846_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<any>"];





Shen.fns["shen.<blah>"] = [Shen.type_func, function shen_user_lambda6849(Arg6848) {
  if (Arg6848.length < 1) return [Shen.type_func, shen_user_lambda6849, 1, Arg6848];
  var Arg6848_0 = Arg6848[0];
  return (((Shen.is_type(Arg6848_0, Shen.type_cons) && (Shen.is_type(Arg6848_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(42, Arg6848_0[1][1])) && (Shen.is_type(Arg6848_0[1][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(92, Arg6848_0[1][2][1])))))))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg6848_0, Shen.type_cons) && (Shen.is_type(Arg6848_0[1], Shen.type_cons) && (Shen.is_type(Arg6848_0[2], Shen.type_cons) && Shen.empty$question$(Arg6848_0[2][2])))))
  ? [Shen.type_cons, Arg6848_0[1][2], [Shen.type_cons, [Shen.type_symbol, "shen.skip"], []]]
  : Shen.fail_obj))}, 1, [], "shen.<blah>"];





Shen.fns["shen.<whitespaces>"] = [Shen.type_func, function shen_user_lambda6851(Arg6850) {
  if (Arg6850.length < 1) return [Shen.type_func, shen_user_lambda6851, 1, Arg6850];
  var Arg6850_0 = Arg6850[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6850_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6850_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<whitespaces>"];





Shen.fns["shen.<whitespace>"] = [Shen.type_func, function shen_user_lambda6853(Arg6852) {
  if (Arg6852.length < 1) return [Shen.type_func, shen_user_lambda6853, 1, Arg6852];
  var Arg6852_0 = Arg6852[0];
  var R0;
  return (((Shen.is_type(Arg6852_0[1], Shen.type_cons))
  ? ((R0 = Arg6852_0[1][1]),
  ((((R0 = R0),
  (Shen.unwind_tail(Shen.$eq$(R0, 32)) || (Shen.unwind_tail(Shen.$eq$(R0, 13)) || (Shen.unwind_tail(Shen.$eq$(R0, 10)) || Shen.unwind_tail(Shen.$eq$(R0, 9)))))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6852_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6852_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<whitespace>"];





Shen.fns["shen.cons_form"] = [Shen.type_func, function shen_user_lambda6855(Arg6854) {
  if (Arg6854.length < 1) return [Shen.type_func, shen_user_lambda6855, 1, Arg6854];
  var Arg6854_0 = Arg6854[0];
  return ((Shen.empty$question$(Arg6854_0))
  ? []
  : (((Shen.is_type(Arg6854_0, Shen.type_cons) && (Shen.is_type(Arg6854_0[2], Shen.type_cons) && (Shen.is_type(Arg6854_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6854_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6854_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6854_0[1], Arg6854_0[2][2]]]
  : ((Shen.is_type(Arg6854_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6854_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg6854_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cons_form"]]);}))))}, 1, [], "shen.cons_form"];





Shen.fns["shen.package-macro"] = [Shen.type_func, function shen_user_lambda6857(Arg6856) {
  if (Arg6856.length < 2) return [Shen.type_func, shen_user_lambda6857, 2, Arg6856];
  var Arg6856_0 = Arg6856[0], Arg6856_1 = Arg6856[1];
  var R0, R1;
  return (((Shen.is_type(Arg6856_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "$"], Arg6856_0[1])) && (Shen.is_type(Arg6856_0[2], Shen.type_cons) && Shen.empty$question$(Arg6856_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["explode"], [Arg6856_0[2][1]]), Arg6856_1]);})
  : (((Shen.is_type(Arg6856_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6856_0[1])) && (Shen.is_type(Arg6856_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg6856_0[2][1])) && Shen.is_type(Arg6856_0[2][2], Shen.type_cons))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Arg6856_0[2][2][2], Arg6856_1]);})
  : (((Shen.is_type(Arg6856_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6856_0[1])) && (Shen.is_type(Arg6856_0[2], Shen.type_cons) && Shen.is_type(Arg6856_0[2][2], Shen.type_cons)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6856_0[2][2][1]])),
  Shen.call(Shen.fns["shen.record-exceptions"], [R0, Arg6856_0[2][1]]),
  (R1 = Shen.intern((Shen.str(Arg6856_0[2][1]) + "."))),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.packageh"], [R1, R0, Arg6856_0[2][2][2]]), Arg6856_1]);}))
  : [Shen.type_cons, Arg6856_0, Arg6856_1])))}, 2, [], "shen.package-macro"];





Shen.fns["shen.record-exceptions"] = [Shen.type_func, function shen_user_lambda6859(Arg6858) {
  if (Arg6858.length < 2) return [Shen.type_func, shen_user_lambda6859, 2, Arg6858];
  var Arg6858_0 = Arg6858[0], Arg6858_1 = Arg6858[1];
  var R0;
  return ((R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6858_1, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6861(Arg6860) {
  if (Arg6860.length < 1) return [Shen.type_func, shen_user_lambda6861, 1, Arg6860];
  var Arg6860_0 = Arg6860[0];
  return []}, 1, [], undefined])),
  (R0 = Shen.call(Shen.fns["union"], [Arg6858_0, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6858_1, [Shen.type_symbol, "shen.external-symbols"], R0, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-exceptions"];





Shen.fns["shen.packageh"] = [Shen.type_func, function shen_user_lambda6863(Arg6862) {
  if (Arg6862.length < 3) return [Shen.type_func, shen_user_lambda6863, 3, Arg6862];
  var Arg6862_0 = Arg6862[0], Arg6862_1 = Arg6862[1], Arg6862_2 = Arg6862[2];
  return ((Shen.is_type(Arg6862_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.packageh"], [Arg6862_0, Arg6862_1, Arg6862_2[1]]), Shen.call(Shen.fns["shen.packageh"], [Arg6862_0, Arg6862_1, Arg6862_2[2]])]
  : (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg6862_2]) || (Shen.call(Shen.fns["variable?"], [Arg6862_2]) || (Shen.call(Shen.fns["element?"], [Arg6862_2, Arg6862_1]) || (Shen.call(Shen.fns["shen.doubleunderline?"], [Arg6862_2]) || Shen.call(Shen.fns["shen.singleunderline?"], [Arg6862_2]))))))
  ? Arg6862_2
  : (((Shen.is_type(Arg6862_2, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.prefix?"], [[Shen.type_cons, "s", [Shen.type_cons, "h", [Shen.type_cons, "e", [Shen.type_cons, "n", [Shen.type_cons, ".", []]]]]], Shen.call(Shen.fns["explode"], [Arg6862_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg6862_0, Arg6862_2]);})
  : Arg6862_2)))}, 3, [], "shen.packageh"];





Shen.fns["read-from-string"] = [Shen.type_func, function shen_user_lambda6865(Arg6864) {
  if (Arg6864.length < 1) return [Shen.type_func, shen_user_lambda6865, 1, Arg6864];
  var Arg6864_0 = Arg6864[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6867(Arg6866) {
  if (Arg6866.length < 1) return [Shen.type_func, shen_user_lambda6867, 1, Arg6866];
  var Arg6866_0 = Arg6866[0];
  return (function() {
  return Shen.string_$gt$n(Arg6866_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg6864_0])])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R0, [Shen.type_symbol, "shen.read-error"]]);}))}, 1, [], "read-from-string"];










Shen.fns["shen.<defprolog>"] = [Shen.type_func, function shen_user_lambda6520(Arg6519) {
  if (Arg6519.length < 1) return [Shen.type_func, shen_user_lambda6520, 1, Arg6519];
  var Arg6519_0 = Arg6519[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<predicate*>"], [Arg6519_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.prolog->shen"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6522(Arg6521) {
  if (Arg6521.length < 2) return [Shen.type_func, shen_user_lambda6522, 2, Arg6521];
  var Arg6521_0 = Arg6521[0], Arg6521_1 = Arg6521[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-predicate"], [Shen.call(Shen.fns["shen.hdtl"], [Arg6521_0]), Arg6521_1]);})}, 2, [R0], undefined], Shen.call(Shen.fns["shen.hdtl"], [R1])])])[1]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<defprolog>"];





Shen.fns["shen.prolog-error"] = [Shen.type_func, function shen_user_lambda6524(Arg6523) {
  if (Arg6523.length < 2) return [Shen.type_func, shen_user_lambda6524, 2, Arg6523];
  var Arg6523_0 = Arg6523[0], Arg6523_1 = Arg6523[1];
  return (((Shen.is_type(Arg6523_1, Shen.type_cons) && (Shen.is_type(Arg6523_1[2], Shen.type_cons) && Shen.empty$question$(Arg6523_1[2][2]))))
  ? (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6523_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6523_1[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6523_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.prolog-error"];





Shen.fns["shen.next-50"] = [Shen.type_func, function shen_user_lambda6526(Arg6525) {
  if (Arg6525.length < 2) return [Shen.type_func, shen_user_lambda6526, 2, Arg6525];
  var Arg6525_0 = Arg6525[0], Arg6525_1 = Arg6525[1];
  return ((Shen.empty$question$(Arg6525_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6525_0)))
  ? ""
  : ((Shen.is_type(Arg6525_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.decons-string"], [Arg6525_1[1]]) + Shen.call(Shen.fns["shen.next-50"], [(Arg6525_0 - 1), Arg6525_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.next-50"]]);}))))}, 2, [], "shen.next-50"];





Shen.fns["shen.decons-string"] = [Shen.type_func, function shen_user_lambda6528(Arg6527) {
  if (Arg6527.length < 1) return [Shen.type_func, shen_user_lambda6528, 1, Arg6527];
  var Arg6527_0 = Arg6527[0];
  return (((Shen.is_type(Arg6527_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6527_0[1])) && (Shen.is_type(Arg6527_0[2], Shen.type_cons) && (Shen.is_type(Arg6527_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6527_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-cons"], [Arg6527_0]), " ", [Shen.type_symbol, "shen.s"]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg6527_0, " ", [Shen.type_symbol, "shen.r"]]);}))}, 1, [], "shen.decons-string"];





Shen.fns["shen.insert-predicate"] = [Shen.type_func, function shen_user_lambda6530(Arg6529) {
  if (Arg6529.length < 2) return [Shen.type_func, shen_user_lambda6530, 2, Arg6529];
  var Arg6529_0 = Arg6529[0], Arg6529_1 = Arg6529[1];
  return (((Shen.is_type(Arg6529_1, Shen.type_cons) && (Shen.is_type(Arg6529_1[2], Shen.type_cons) && Shen.empty$question$(Arg6529_1[2][2]))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6529_0, Arg6529_1[1]], [Shen.type_cons, [Shen.type_symbol, ":-"], Arg6529_1[2]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-predicate"]]);}))}, 2, [], "shen.insert-predicate"];





Shen.fns["shen.<predicate*>"] = [Shen.type_func, function shen_user_lambda6532(Arg6531) {
  if (Arg6531.length < 1) return [Shen.type_func, shen_user_lambda6532, 1, Arg6531];
  var Arg6531_0 = Arg6531[0];
  var R0;
  return (((Shen.is_type(Arg6531_0[1], Shen.type_cons))
  ? ((R0 = Arg6531_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6531_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6531_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<predicate*>"];





Shen.fns["shen.<clauses*>"] = [Shen.type_func, function shen_user_lambda6534(Arg6533) {
  if (Arg6533.length < 1) return [Shen.type_func, shen_user_lambda6534, 1, Arg6533];
  var Arg6533_0 = Arg6533[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<clause*>"], [Arg6533_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6533_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<clauses*>"];





Shen.fns["shen.<clause*>"] = [Shen.type_func, function shen_user_lambda6536(Arg6535) {
  if (Arg6535.length < 1) return [Shen.type_func, shen_user_lambda6536, 1, Arg6535];
  var Arg6535_0 = Arg6535[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<head*>"], [Arg6535_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<end*>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<clause*>"];





Shen.fns["shen.<head*>"] = [Shen.type_func, function shen_user_lambda6538(Arg6537) {
  if (Arg6537.length < 1) return [Shen.type_func, shen_user_lambda6538, 1, Arg6537];
  var Arg6537_0 = Arg6537[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<term*>"], [Arg6537_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<head*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6537_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<head*>"];





Shen.fns["shen.<term*>"] = [Shen.type_func, function shen_user_lambda6540(Arg6539) {
  if (Arg6539.length < 1) return [Shen.type_func, shen_user_lambda6540, 1, Arg6539];
  var Arg6539_0 = Arg6539[0];
  var R0;
  return (((Shen.is_type(Arg6539_0[1], Shen.type_cons))
  ? ((R0 = Arg6539_0[1][1]),
  ((((!Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0))) && Shen.call(Shen.fns["shen.legitimate-term?"], [R0])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6539_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6539_0])])[1], Shen.call(Shen.fns["shen.eval-cons"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<term*>"];





Shen.fns["shen.legitimate-term?"] = [Shen.type_func, function shen_user_lambda6542(Arg6541) {
  if (Arg6541.length < 1) return [Shen.type_func, shen_user_lambda6542, 1, Arg6541];
  var Arg6541_0 = Arg6541[0];
  return (((Shen.is_type(Arg6541_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6541_0[1])) && (Shen.is_type(Arg6541_0[2], Shen.type_cons) && (Shen.is_type(Arg6541_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6541_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6541_0[2][1]]) && Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6541_0[2][2][1]]))
  : (((Shen.is_type(Arg6541_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6541_0[1])) && (Shen.is_type(Arg6541_0[2], Shen.type_cons) && (Shen.is_type(Arg6541_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6541_0[2][2][1])) && Shen.empty$question$(Arg6541_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6541_0[2][1]]);})
  : (((Shen.is_type(Arg6541_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6541_0[1])) && (Shen.is_type(Arg6541_0[2], Shen.type_cons) && (Shen.is_type(Arg6541_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6541_0[2][2][1])) && Shen.empty$question$(Arg6541_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6541_0[2][1]]);})
  : ((Shen.is_type(Arg6541_0, Shen.type_cons))
  ? false
  : true))))}, 1, [], "shen.legitimate-term?"];





Shen.fns["shen.eval-cons"] = [Shen.type_func, function shen_user_lambda6544(Arg6543) {
  if (Arg6543.length < 1) return [Shen.type_func, shen_user_lambda6544, 1, Arg6543];
  var Arg6543_0 = Arg6543[0];
  return (((Shen.is_type(Arg6543_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6543_0[1])) && (Shen.is_type(Arg6543_0[2], Shen.type_cons) && (Shen.is_type(Arg6543_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6543_0[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6543_0[2][1]]), Shen.call(Shen.fns["shen.eval-cons"], [Arg6543_0[2][2][1]])]
  : (((Shen.is_type(Arg6543_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6543_0[1])) && (Shen.is_type(Arg6543_0[2], Shen.type_cons) && (Shen.is_type(Arg6543_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6543_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6543_0[2][1]]), Arg6543_0[2][2]]]
  : Arg6543_0))}, 1, [], "shen.eval-cons"];





Shen.fns["shen.<body*>"] = [Shen.type_func, function shen_user_lambda6546(Arg6545) {
  if (Arg6545.length < 1) return [Shen.type_func, shen_user_lambda6546, 1, Arg6545];
  var Arg6545_0 = Arg6545[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<literal*>"], [Arg6545_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6545_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<body*>"];





Shen.fns["shen.<literal*>"] = [Shen.type_func, function shen_user_lambda6548(Arg6547) {
  if (Arg6547.length < 1) return [Shen.type_func, shen_user_lambda6548, 1, Arg6547];
  var Arg6547_0 = Arg6547[0];
  var R0;
  return ((((Shen.is_type(Arg6547_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6547_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6547_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6547_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6547_0[1], Shen.type_cons))
  ? ((R0 = Arg6547_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6547_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6547_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<literal*>"];





Shen.fns["shen.<end*>"] = [Shen.type_func, function shen_user_lambda6550(Arg6549) {
  if (Arg6549.length < 1) return [Shen.type_func, shen_user_lambda6550, 1, Arg6549];
  var Arg6549_0 = Arg6549[0];
  var R0;
  return (((Shen.is_type(Arg6549_0[1], Shen.type_cons))
  ? ((R0 = Arg6549_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6549_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6549_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<end*>"];





Shen.fns["cut"] = [Shen.type_func, function shen_user_lambda6552(Arg6551) {
  if (Arg6551.length < 3) return [Shen.type_func, shen_user_lambda6552, 3, Arg6551];
  var Arg6551_0 = Arg6551[0], Arg6551_1 = Arg6551[1], Arg6551_2 = Arg6551[2];
  var R0;
  return ((R0 = Shen.unwind_tail(Shen.thaw(Arg6551_2))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? Arg6551_0
  : R0))}, 3, [], "cut"];





Shen.fns["shen.insert_modes"] = [Shen.type_func, function shen_user_lambda6554(Arg6553) {
  if (Arg6553.length < 1) return [Shen.type_func, shen_user_lambda6554, 1, Arg6553];
  var Arg6553_0 = Arg6553[0];
  return (((Shen.is_type(Arg6553_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6553_0[1])) && (Shen.is_type(Arg6553_0[2], Shen.type_cons) && (Shen.is_type(Arg6553_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6553_0[2][2][2]))))))
  ? Arg6553_0
  : ((Shen.empty$question$(Arg6553_0))
  ? []
  : ((Shen.is_type(Arg6553_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6553_0[1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_modes"], [Arg6553_0[2]]), [Shen.type_cons, [Shen.type_symbol, "-"], []]]]]
  : Arg6553_0)))}, 1, [], "shen.insert_modes"];





Shen.fns["shen.s-prolog"] = [Shen.type_func, function shen_user_lambda6556(Arg6555) {
  if (Arg6555.length < 1) return [Shen.type_func, shen_user_lambda6556, 1, Arg6555];
  var Arg6555_0 = Arg6555[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6558(Arg6557) {
  if (Arg6557.length < 1) return [Shen.type_func, shen_user_lambda6558, 1, Arg6557];
  var Arg6557_0 = Arg6557[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Arg6557_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.prolog->shen"], [Arg6555_0])]);})}, 1, [], "shen.s-prolog"];





Shen.fns["shen.prolog->shen"] = [Shen.type_func, function shen_user_lambda6560(Arg6559) {
  if (Arg6559.length < 1) return [Shen.type_func, shen_user_lambda6560, 1, Arg6559];
  var Arg6559_0 = Arg6559[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.compile_prolog_procedure"], Shen.call(Shen.fns["shen.group_clauses"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.s-prolog_clause"], Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.head_abstraction"], Arg6559_0])])])]);})}, 1, [], "shen.prolog->shen"];





Shen.fns["shen.s-prolog_clause"] = [Shen.type_func, function shen_user_lambda6562(Arg6561) {
  if (Arg6561.length < 1) return [Shen.type_func, shen_user_lambda6562, 1, Arg6561];
  var Arg6561_0 = Arg6561[0];
  return (((Shen.is_type(Arg6561_0, Shen.type_cons) && (Shen.is_type(Arg6561_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6561_0[2][1])) && (Shen.is_type(Arg6561_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6561_0[2][2][2]))))))
  ? [Shen.type_cons, Arg6561_0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.s-prolog_literal"], Arg6561_0[2][2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_clause"]]);}))}, 1, [], "shen.s-prolog_clause"];





Shen.fns["shen.head_abstraction"] = [Shen.type_func, function shen_user_lambda6564(Arg6563) {
  if (Arg6563.length < 1) return [Shen.type_func, shen_user_lambda6564, 1, Arg6563];
  var Arg6563_0 = Arg6563[0];
  var R0, R1;
  return (((Shen.is_type(Arg6563_0, Shen.type_cons) && (Shen.is_type(Arg6563_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6563_0[2][1])) && (Shen.is_type(Arg6563_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6563_0[2][2][2]) && (Shen.call(Shen.fns["shen.complexity_head"], [Arg6563_0[1]]) < (Shen.globals["shen.*maxcomplexity*"]))))))))
  ? [Shen.type_cons, Arg6563_0, []]
  : (((Shen.is_type(Arg6563_0, Shen.type_cons) && (Shen.is_type(Arg6563_0[1], Shen.type_cons) && (Shen.is_type(Arg6563_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6563_0[2][1])) && (Shen.is_type(Arg6563_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6563_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6566(Arg6565) {
  if (Arg6565.length < 1) return [Shen.type_func, shen_user_lambda6566, 1, Arg6565];
  var Arg6565_0 = Arg6565[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]);})}, 1, [], undefined], Arg6563_0[1][2]])),
  (R1 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6563_0[1][2]])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [R0]), [Shen.type_cons, R1, []]]]),
  (R1 = [Shen.type_cons, [Shen.type_cons, Arg6563_0[1][1], R0], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, R1, Arg6563_0[2][2][1]], []]]]),
  [Shen.type_cons, R1, []])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.head_abstraction"]]);})))}, 1, [], "shen.head_abstraction"];





Shen.fns["shen.complexity_head"] = [Shen.type_func, function shen_user_lambda6568(Arg6567) {
  if (Arg6567.length < 1) return [Shen.type_func, shen_user_lambda6568, 1, Arg6567];
  var Arg6567_0 = Arg6567[0];
  return ((Shen.is_type(Arg6567_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.product"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.complexity"], Arg6567_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.complexity_head"]]);}))}, 1, [], "shen.complexity_head"];





Shen.fns["shen.complexity"] = [Shen.type_func, function shen_user_lambda6570(Arg6569) {
  if (Arg6569.length < 1) return [Shen.type_func, shen_user_lambda6570, 1, Arg6569];
  var Arg6569_0 = Arg6569[0];
  return (((Shen.is_type(Arg6569_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6569_0[1])) && (Shen.is_type(Arg6569_0[2], Shen.type_cons) && (Shen.is_type(Arg6569_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6569_0[2][1][1])) && (Shen.is_type(Arg6569_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6569_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6569_0[2][1][2][2][2]) && (Shen.is_type(Arg6569_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6569_0[2][2][2])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [Arg6569_0[2][1]]);})
  : (((Shen.is_type(Arg6569_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6569_0[1])) && (Shen.is_type(Arg6569_0[2], Shen.type_cons) && (Shen.is_type(Arg6569_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6569_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6569_0[2][2][1])) && Shen.empty$question$(Arg6569_0[2][2][2]))))))))
  ? (2 * (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6569_0[2][1][1], Arg6569_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6569_0[2][1][2], Arg6569_0[2][2]]]])))
  : (((Shen.is_type(Arg6569_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6569_0[1])) && (Shen.is_type(Arg6569_0[2], Shen.type_cons) && (Shen.is_type(Arg6569_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6569_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6569_0[2][2][1])) && Shen.empty$question$(Arg6569_0[2][2][2]))))))))
  ? (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6569_0[2][1][1], Arg6569_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6569_0[2][1][2], Arg6569_0[2][2]]]]))
  : (((Shen.is_type(Arg6569_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6569_0[1])) && (Shen.is_type(Arg6569_0[2], Shen.type_cons) && (Shen.is_type(Arg6569_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6569_0[2][2][2]) && Shen.call(Shen.fns["variable?"], [Arg6569_0[2][1]])))))))
  ? 1
  : (((Shen.is_type(Arg6569_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6569_0[1])) && (Shen.is_type(Arg6569_0[2], Shen.type_cons) && (Shen.is_type(Arg6569_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6569_0[2][2][1])) && Shen.empty$question$(Arg6569_0[2][2][2])))))))
  ? 2
  : (((Shen.is_type(Arg6569_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6569_0[1])) && (Shen.is_type(Arg6569_0[2], Shen.type_cons) && (Shen.is_type(Arg6569_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6569_0[2][2][1])) && Shen.empty$question$(Arg6569_0[2][2][2])))))))
  ? 1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6569_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]]]);})))))))}, 1, [], "shen.complexity"];





Shen.fns["shen.product"] = [Shen.type_func, function shen_user_lambda6572(Arg6571) {
  if (Arg6571.length < 1) return [Shen.type_func, shen_user_lambda6572, 1, Arg6571];
  var Arg6571_0 = Arg6571[0];
  return ((Shen.empty$question$(Arg6571_0))
  ? 1
  : ((Shen.is_type(Arg6571_0, Shen.type_cons))
  ? (Arg6571_0[1] * Shen.call(Shen.fns["shen.product"], [Arg6571_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.product"]]);})))}, 1, [], "shen.product"];





Shen.fns["shen.s-prolog_literal"] = [Shen.type_func, function shen_user_lambda6574(Arg6573) {
  if (Arg6573.length < 1) return [Shen.type_func, shen_user_lambda6574, 1, Arg6573];
  var Arg6573_0 = Arg6573[0];
  return (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6573_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6573_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6573_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "when"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && Shen.empty$question$(Arg6573_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6573_0[2][1]]), []]]
  : (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6573_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6573_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6573_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fwhen"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && Shen.empty$question$(Arg6573_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6573_0[2][1]]), []]]
  : ((Shen.is_type(Arg6573_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Arg6573_0[1]]), Arg6573_0[2]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_literal"]]);}))))))}, 1, [], "shen.s-prolog_literal"];





Shen.fns["shen.insert_deref"] = [Shen.type_func, function shen_user_lambda6576(Arg6575) {
  if (Arg6575.length < 1) return [Shen.type_func, shen_user_lambda6576, 1, Arg6575];
  var Arg6575_0 = Arg6575[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6575_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.deref"], [Shen.type_cons, Arg6575_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6575_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6575_0[1]]), Shen.call(Shen.fns["shen.insert_deref"], [Arg6575_0[2]])]
  : Arg6575_0))}, 1, [], "shen.insert_deref"];





Shen.fns["shen.insert_lazyderef"] = [Shen.type_func, function shen_user_lambda6578(Arg6577) {
  if (Arg6577.length < 1) return [Shen.type_func, shen_user_lambda6578, 1, Arg6577];
  var Arg6577_0 = Arg6577[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6577_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Arg6577_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6577_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6577_0[1]]), Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6577_0[2]])]
  : Arg6577_0))}, 1, [], "shen.insert_lazyderef"];





Shen.fns["shen.m_prolog_to_s-prolog_predicate"] = [Shen.type_func, function shen_user_lambda6580(Arg6579) {
  if (Arg6579.length < 1) return [Shen.type_func, shen_user_lambda6580, 1, Arg6579];
  var Arg6579_0 = Arg6579[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6579_0)))
  ? [Shen.type_symbol, "unify"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=!"], Arg6579_0)))
  ? [Shen.type_symbol, "unify!"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=="], Arg6579_0)))
  ? [Shen.type_symbol, "identical"]
  : Arg6579_0)))}, 1, [], "shen.m_prolog_to_s-prolog_predicate"];





Shen.fns["shen.group_clauses"] = [Shen.type_func, function shen_user_lambda6582(Arg6581) {
  if (Arg6581.length < 1) return [Shen.type_func, shen_user_lambda6582, 1, Arg6581];
  var Arg6581_0 = Arg6581[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6581_0))
  ? []
  : ((Shen.is_type(Arg6581_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.collect"], [[Shen.type_func, function shen_user_lambda6584(Arg6583) {
  if (Arg6583.length < 2) return [Shen.type_func, shen_user_lambda6584, 2, Arg6583];
  var Arg6583_0 = Arg6583[0], Arg6583_1 = Arg6583[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.same_predicate?"], [Arg6583_0[1], Arg6583_1]);})}, 2, [Arg6581_0], undefined], Arg6581_0])),
  (R1 = Shen.call(Shen.fns["difference"], [Arg6581_0, R0])),
  [Shen.type_cons, R0, Shen.call(Shen.fns["shen.group_clauses"], [R1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.group_clauses"]]);})))}, 1, [], "shen.group_clauses"];





Shen.fns["shen.collect"] = [Shen.type_func, function shen_user_lambda6586(Arg6585) {
  if (Arg6585.length < 2) return [Shen.type_func, shen_user_lambda6586, 2, Arg6585];
  var Arg6585_0 = Arg6585[0], Arg6585_1 = Arg6585[1];
  return ((Shen.empty$question$(Arg6585_1))
  ? []
  : ((Shen.is_type(Arg6585_1, Shen.type_cons))
  ? ((Shen.call(Arg6585_0, [Arg6585_1[1]]))
  ? [Shen.type_cons, Arg6585_1[1], Shen.call(Shen.fns["shen.collect"], [Arg6585_0, Arg6585_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.collect"], [Arg6585_0, Arg6585_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.collect"]]);})))}, 2, [], "shen.collect"];





Shen.fns["shen.same_predicate?"] = [Shen.type_func, function shen_user_lambda6588(Arg6587) {
  if (Arg6587.length < 2) return [Shen.type_func, shen_user_lambda6588, 2, Arg6587];
  var Arg6587_0 = Arg6587[0], Arg6587_1 = Arg6587[1];
  return (((Shen.is_type(Arg6587_0, Shen.type_cons) && (Shen.is_type(Arg6587_0[1], Shen.type_cons) && (Shen.is_type(Arg6587_1, Shen.type_cons) && Shen.is_type(Arg6587_1[1], Shen.type_cons)))))
  ? Shen.$eq$(Arg6587_0[1][1], Arg6587_1[1][1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.same_predicate?"]]);}))}, 2, [], "shen.same_predicate?"];





Shen.fns["shen.compile_prolog_procedure"] = [Shen.type_func, function shen_user_lambda6590(Arg6589) {
  if (Arg6589.length < 1) return [Shen.type_func, shen_user_lambda6590, 1, Arg6589];
  var Arg6589_0 = Arg6589[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.procedure_name"], [Arg6589_0])),
  (R0 = Shen.call(Shen.fns["shen.clauses-to-shen"], [R0, Arg6589_0])),
  R0)}, 1, [], "shen.compile_prolog_procedure"];





Shen.fns["shen.procedure_name"] = [Shen.type_func, function shen_user_lambda6592(Arg6591) {
  if (Arg6591.length < 1) return [Shen.type_func, shen_user_lambda6592, 1, Arg6591];
  var Arg6591_0 = Arg6591[0];
  return (((Shen.is_type(Arg6591_0, Shen.type_cons) && (Shen.is_type(Arg6591_0[1], Shen.type_cons) && Shen.is_type(Arg6591_0[1][1], Shen.type_cons))))
  ? Arg6591_0[1][1][1]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.procedure_name"]]);}))}, 1, [], "shen.procedure_name"];





Shen.fns["shen.clauses-to-shen"] = [Shen.type_func, function shen_user_lambda6594(Arg6593) {
  if (Arg6593.length < 2) return [Shen.type_func, shen_user_lambda6594, 2, Arg6593];
  var Arg6593_0 = Arg6593[0], Arg6593_1 = Arg6593[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.linearise-clause"], Arg6593_1])),
  (R1 = Shen.call(Shen.fns["shen.prolog-aritycheck"], [Arg6593_0, Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6596(Arg6595) {
  if (Arg6595.length < 1) return [Shen.type_func, shen_user_lambda6596, 1, Arg6595];
  var Arg6595_0 = Arg6595[0];
  return (function() {
  return Shen.call_tail(Shen.fns["head"], [Arg6595_0]);})}, 1, [], undefined], Arg6593_1])])),
  (R1 = Shen.call(Shen.fns["shen.parameters"], [R1])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6598(Arg6597) {
  if (Arg6597.length < 2) return [Shen.type_func, shen_user_lambda6598, 2, Arg6597];
  var Arg6597_0 = Arg6597[0], Arg6597_1 = Arg6597[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aum"], [Arg6597_1, Arg6597_0]);})}, 2, [R1], undefined], R0])),
  (R0 = Shen.call(Shen.fns["shen.catch-cut"], [Shen.call(Shen.fns["shen.nest-disjunct"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.aum_to_shen"], R0])])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6593_0, Shen.call(Shen.fns["append"], [R1, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  R1)}, 2, [], "shen.clauses-to-shen"];





Shen.fns["shen.catch-cut"] = [Shen.type_func, function shen_user_lambda6600(Arg6599) {
  if (Arg6599.length < 1) return [Shen.type_func, shen_user_lambda6600, 1, Arg6599];
  var Arg6599_0 = Arg6599[0];
  return (((!Shen.call(Shen.fns["shen.occurs?"], [[Shen.type_symbol, "cut"], Arg6599_0])))
  ? Arg6599_0
  : [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.catchpoint"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.cutpoint"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, Arg6599_0, []]]], []]]]])}, 1, [], "shen.catch-cut"];





Shen.fns["shen.catchpoint"] = [Shen.type_func, function shen_user_lambda6602(Arg6601) {
  if (Arg6601.length < 0) return [Shen.type_func, shen_user_lambda6602, 0, Arg6601];
  return (Shen.globals["shen.*catch*"] = (1 + (Shen.globals["shen.*catch*"])))}, 0, [], "shen.catchpoint"];





Shen.fns["shen.cutpoint"] = [Shen.type_func, function shen_user_lambda6604(Arg6603) {
  if (Arg6603.length < 2) return [Shen.type_func, shen_user_lambda6604, 2, Arg6603];
  var Arg6603_0 = Arg6603[0], Arg6603_1 = Arg6603[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6603_1, Arg6603_0)))
  ? false
  : Arg6603_1)}, 2, [], "shen.cutpoint"];





Shen.fns["shen.nest-disjunct"] = [Shen.type_func, function shen_user_lambda6606(Arg6605) {
  if (Arg6605.length < 1) return [Shen.type_func, shen_user_lambda6606, 1, Arg6605];
  var Arg6605_0 = Arg6605[0];
  return (((Shen.is_type(Arg6605_0, Shen.type_cons) && Shen.empty$question$(Arg6605_0[2])))
  ? Arg6605_0[1]
  : ((Shen.is_type(Arg6605_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lisp-or"], [Arg6605_0[1], Shen.call(Shen.fns["shen.nest-disjunct"], [Arg6605_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.nest-disjunct"]]);})))}, 1, [], "shen.nest-disjunct"];





Shen.fns["shen.lisp-or"] = [Shen.type_func, function shen_user_lambda6608(Arg6607) {
  if (Arg6607.length < 2) return [Shen.type_func, shen_user_lambda6608, 2, Arg6607];
  var Arg6607_0 = Arg6607[0], Arg6607_1 = Arg6607[1];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, Arg6607_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, false, []]]], [Shen.type_cons, Arg6607_1, [Shen.type_cons, [Shen.type_symbol, "Case"], []]]]], []]]]]}, 2, [], "shen.lisp-or"];





Shen.fns["shen.prolog-aritycheck"] = [Shen.type_func, function shen_user_lambda6610(Arg6609) {
  if (Arg6609.length < 2) return [Shen.type_func, shen_user_lambda6610, 2, Arg6609];
  var Arg6609_0 = Arg6609[0], Arg6609_1 = Arg6609[1];
  return (((Shen.is_type(Arg6609_1, Shen.type_cons) && Shen.empty$question$(Arg6609_1[2])))
  ? (Shen.call(Shen.fns["length"], [Arg6609_1[1]]) - 1)
  : (((Shen.is_type(Arg6609_1, Shen.type_cons) && Shen.is_type(Arg6609_1[2], Shen.type_cons)))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6609_1[1]]), Shen.call(Shen.fns["length"], [Arg6609_1[2][1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-aritycheck"], [Arg6609_0, Arg6609_1[2]]);})
  : (function() {
  return Shen.simple_error(("arity error in prolog procedure " + Shen.call(Shen.fns["shen.app"], [[Shen.type_cons, Arg6609_0, []], "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.prolog-aritycheck"]]);})))}, 2, [], "shen.prolog-aritycheck"];





Shen.fns["shen.linearise-clause"] = [Shen.type_func, function shen_user_lambda6612(Arg6611) {
  if (Arg6611.length < 1) return [Shen.type_func, shen_user_lambda6612, 1, Arg6611];
  var Arg6611_0 = Arg6611[0];
  var R0;
  return (((Shen.is_type(Arg6611_0, Shen.type_cons) && (Shen.is_type(Arg6611_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6611_0[2][1])) && (Shen.is_type(Arg6611_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6611_0[2][2][2]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise"], [[Shen.type_cons, Arg6611_0[1], Arg6611_0[2][2]]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.clause_form"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise-clause"]]);}))}, 1, [], "shen.linearise-clause"];





Shen.fns["shen.clause_form"] = [Shen.type_func, function shen_user_lambda6614(Arg6613) {
  if (Arg6613.length < 1) return [Shen.type_func, shen_user_lambda6614, 1, Arg6613];
  var Arg6613_0 = Arg6613[0];
  return (((Shen.is_type(Arg6613_0, Shen.type_cons) && (Shen.is_type(Arg6613_0[2], Shen.type_cons) && Shen.empty$question$(Arg6613_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.explicit_modes"], [Arg6613_0[1]]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.cf_help"], [Arg6613_0[2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.clause_form"]]);}))}, 1, [], "shen.clause_form"];





Shen.fns["shen.explicit_modes"] = [Shen.type_func, function shen_user_lambda6616(Arg6615) {
  if (Arg6615.length < 1) return [Shen.type_func, shen_user_lambda6616, 1, Arg6615];
  var Arg6615_0 = Arg6615[0];
  return ((Shen.is_type(Arg6615_0, Shen.type_cons))
  ? [Shen.type_cons, Arg6615_0[1], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.em_help"], Arg6615_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explicit_modes"]]);}))}, 1, [], "shen.explicit_modes"];





Shen.fns["shen.em_help"] = [Shen.type_func, function shen_user_lambda6618(Arg6617) {
  if (Arg6617.length < 1) return [Shen.type_func, shen_user_lambda6618, 1, Arg6617];
  var Arg6617_0 = Arg6617[0];
  return (((Shen.is_type(Arg6617_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6617_0[1])) && (Shen.is_type(Arg6617_0[2], Shen.type_cons) && (Shen.is_type(Arg6617_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6617_0[2][2][2]))))))
  ? Arg6617_0
  : [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6617_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]])}, 1, [], "shen.em_help"];





Shen.fns["shen.cf_help"] = [Shen.type_func, function shen_user_lambda6620(Arg6619) {
  if (Arg6619.length < 1) return [Shen.type_func, shen_user_lambda6620, 1, Arg6619];
  var Arg6619_0 = Arg6619[0];
  return (((Shen.is_type(Arg6619_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6619_0[1])) && (Shen.is_type(Arg6619_0[2], Shen.type_cons) && (Shen.is_type(Arg6619_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6619_0[2][1][1])) && (Shen.is_type(Arg6619_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6619_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6619_0[2][1][2][2][2]) && (Shen.is_type(Arg6619_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6619_0[2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, (((Shen.globals["shen.*occurs*"]))
  ? [Shen.type_symbol, "unify!"]
  : [Shen.type_symbol, "unify"]), Arg6619_0[2][1][2]], Shen.call(Shen.fns["shen.cf_help"], [Arg6619_0[2][2][1]])]
  : Arg6619_0)}, 1, [], "shen.cf_help"];





Shen.fns["occurs-check"] = [Shen.type_func, function shen_user_lambda6622(Arg6621) {
  if (Arg6621.length < 1) return [Shen.type_func, shen_user_lambda6622, 1, Arg6621];
  var Arg6621_0 = Arg6621[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6621_0)))
  ? (Shen.globals["shen.*occurs*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6621_0)))
  ? (Shen.globals["shen.*occurs*"] = false)
  : (function() {
  return Shen.simple_error("occurs-check expects + or -\x0a");})))}, 1, [], "occurs-check"];





Shen.fns["shen.aum"] = [Shen.type_func, function shen_user_lambda6624(Arg6623) {
  if (Arg6623.length < 2) return [Shen.type_func, shen_user_lambda6624, 2, Arg6623];
  var Arg6623_0 = Arg6623[0], Arg6623_1 = Arg6623[1];
  var R0;
  return (((Shen.is_type(Arg6623_0, Shen.type_cons) && (Shen.is_type(Arg6623_0[1], Shen.type_cons) && (Shen.is_type(Arg6623_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6623_0[2][1])) && (Shen.is_type(Arg6623_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6623_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6623_0[1][2], [Shen.type_cons, Shen.call(Shen.fns["shen.continuation_call"], [Arg6623_0[1][2], Arg6623_0[2][2][1]]), []]]], Arg6623_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [R0, [Shen.type_symbol, "+"]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aum"]]);}))}, 2, [], "shen.aum"];





Shen.fns["shen.continuation_call"] = [Shen.type_func, function shen_user_lambda6626(Arg6625) {
  if (Arg6625.length < 2) return [Shen.type_func, shen_user_lambda6626, 2, Arg6625];
  var Arg6625_0 = Arg6625[0], Arg6625_1 = Arg6625[1];
  var R0, R1;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "ProcessN"], Shen.call(Shen.fns["shen.extract_vars"], [Arg6625_0])]),
  (R1 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6625_1])),
  (R1 = Shen.call(Shen.fns["remove"], [[Shen.type_symbol, "Throwcontrol"], Shen.call(Shen.fns["difference"], [R1, R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cc_help"], [R1, Arg6625_1]);}))}, 2, [], "shen.continuation_call"];





Shen.fns["remove"] = [Shen.type_func, function shen_user_lambda6628(Arg6627) {
  if (Arg6627.length < 2) return [Shen.type_func, shen_user_lambda6628, 2, Arg6627];
  var Arg6627_0 = Arg6627[0], Arg6627_1 = Arg6627[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6627_0, Arg6627_1, []]);})}, 2, [], "remove"];





Shen.fns["shen.remove-h"] = [Shen.type_func, function shen_user_lambda6630(Arg6629) {
  if (Arg6629.length < 3) return [Shen.type_func, shen_user_lambda6630, 3, Arg6629];
  var Arg6629_0 = Arg6629[0], Arg6629_1 = Arg6629[1], Arg6629_2 = Arg6629[2];
  return ((Shen.empty$question$(Arg6629_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg6629_2]);})
  : (((Shen.is_type(Arg6629_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6629_1[1], Arg6629_0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6629_1[1], Arg6629_1[2], Arg6629_2]);})
  : ((Shen.is_type(Arg6629_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6629_0, Arg6629_1[2], [Shen.type_cons, Arg6629_1[1], Arg6629_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remove-h"]]);}))))}, 3, [], "shen.remove-h"];





Shen.fns["shen.cc_help"] = [Shen.type_func, function shen_user_lambda6632(Arg6631) {
  if (Arg6631.length < 2) return [Shen.type_func, shen_user_lambda6632, 2, Arg6631];
  var Arg6631_0 = Arg6631[0], Arg6631_1 = Arg6631[1];
  return (((Shen.empty$question$(Arg6631_0) && Shen.empty$question$(Arg6631_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]]
  : ((Shen.empty$question$(Arg6631_1))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6631_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]], []]]]]]]]]
  : ((Shen.empty$question$(Arg6631_0))
  ? [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6631_1, []]]]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6631_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6631_1, []]]]], []]]]]]]]])))}, 2, [], "shen.cc_help"];





Shen.fns["shen.make_mu_application"] = [Shen.type_func, function shen_user_lambda6634(Arg6633) {
  if (Arg6633.length < 2) return [Shen.type_func, shen_user_lambda6634, 2, Arg6633];
  var Arg6633_0 = Arg6633[0], Arg6633_1 = Arg6633[1];
  return (((Shen.is_type(Arg6633_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6633_0[1])) && (Shen.is_type(Arg6633_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6633_0[2][1]) && (Shen.is_type(Arg6633_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6633_0[2][2][2]) && Shen.empty$question$(Arg6633_1))))))))
  ? Arg6633_0[2][2][1]
  : (((Shen.is_type(Arg6633_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6633_0[1])) && (Shen.is_type(Arg6633_0[2], Shen.type_cons) && (Shen.is_type(Arg6633_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6633_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6633_0[2][2][2]) && Shen.is_type(Arg6633_1, Shen.type_cons))))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6633_0[2][1][1], [Shen.type_cons, Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6633_0[2][1][2], Arg6633_0[2][2]]], Arg6633_1[2]]), []]]], [Shen.type_cons, Arg6633_1[1], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.make_mu_application"]]);})))}, 2, [], "shen.make_mu_application"];





Shen.fns["shen.mu_reduction"] = [Shen.type_func, function shen_user_lambda6636(Arg6635) {
  if (Arg6635.length < 2) return [Shen.type_func, shen_user_lambda6636, 2, Arg6635];
  var Arg6635_0 = Arg6635[0], Arg6635_1 = Arg6635[1];
  var R0;
  return (((Shen.is_type(Arg6635_0, Shen.type_cons) && (Shen.is_type(Arg6635_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6635_0[1][1])) && (Shen.is_type(Arg6635_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6635_0[1][2][1][1])) && (Shen.is_type(Arg6635_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6635_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[1][2][2][2]) && (Shen.is_type(Arg6635_0[2], Shen.type_cons) && Shen.empty$question$(Arg6635_0[2][2]))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6635_0[1][2][1][2][1], Arg6635_0[1][2][2]]], Arg6635_0[2]], Arg6635_0[1][2][1][2][2][1]]);})
  : (((Shen.is_type(Arg6635_0, Shen.type_cons) && (Shen.is_type(Arg6635_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6635_0[1][1])) && (Shen.is_type(Arg6635_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[1][2][2][2]) && (Shen.is_type(Arg6635_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "_"], Arg6635_0[1][2][1])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [Arg6635_0[1][2][2][1], Arg6635_1]);})
  : (((Shen.is_type(Arg6635_0, Shen.type_cons) && (Shen.is_type(Arg6635_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6635_0[1][1])) && (Shen.is_type(Arg6635_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[1][2][2][2]) && (Shen.is_type(Arg6635_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[2][2]) && Shen.call(Shen.fns["shen.ephemeral_variable?"], [Arg6635_0[1][2][1], Arg6635_0[2][1]]))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["subst"], [Arg6635_0[2][1], Arg6635_0[1][2][1], Shen.call(Shen.fns["shen.mu_reduction"], [Arg6635_0[1][2][2][1], Arg6635_1])]);})
  : (((Shen.is_type(Arg6635_0, Shen.type_cons) && (Shen.is_type(Arg6635_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6635_0[1][1])) && (Shen.is_type(Arg6635_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[1][2][2][2]) && (Shen.is_type(Arg6635_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[2][2]) && Shen.call(Shen.fns["variable?"], [Arg6635_0[1][2][1]]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6635_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, Arg6635_0[2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6635_0[1][2][2][1], Arg6635_1]), []]]]]]]
  : (((Shen.is_type(Arg6635_0, Shen.type_cons) && (Shen.is_type(Arg6635_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6635_0[1][1])) && (Shen.is_type(Arg6635_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[1][2][2][2]) && (Shen.is_type(Arg6635_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6635_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6635_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6635_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6635_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6635_0[1][2][2][1], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6635_0, Shen.type_cons) && (Shen.is_type(Arg6635_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6635_0[1][1])) && (Shen.is_type(Arg6635_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[1][2][2][2]) && (Shen.is_type(Arg6635_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6635_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6635_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6635_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6635_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6635_0[1][2][2][1], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6635_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6635_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6635_0, Shen.type_cons) && (Shen.is_type(Arg6635_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6635_0[1][1])) && (Shen.is_type(Arg6635_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[1][2][2][2]) && (Shen.is_type(Arg6635_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6635_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6635_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6635_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6635_0[1][2][1][2], Arg6635_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6635_0, Shen.type_cons) && (Shen.is_type(Arg6635_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6635_0[1][1])) && (Shen.is_type(Arg6635_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6635_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[1][2][2][2]) && (Shen.is_type(Arg6635_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6635_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6635_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6635_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6635_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6635_0[1][2][1][2], Arg6635_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.extract_vars"], [Arg6635_0[1][2][1]]), [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6635_0[1][2][1]])]), [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6635_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], []]]]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : Arg6635_0))))))))}, 2, [], "shen.mu_reduction"];





Shen.fns["shen.rcons_form"] = [Shen.type_func, function shen_user_lambda6638(Arg6637) {
  if (Arg6637.length < 1) return [Shen.type_func, shen_user_lambda6638, 1, Arg6637];
  var Arg6637_0 = Arg6637[0];
  return ((Shen.is_type(Arg6637_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6637_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6637_0[2]]), []]]]
  : Arg6637_0)}, 1, [], "shen.rcons_form"];





Shen.fns["shen.remove_modes"] = [Shen.type_func, function shen_user_lambda6640(Arg6639) {
  if (Arg6639.length < 1) return [Shen.type_func, shen_user_lambda6640, 1, Arg6639];
  var Arg6639_0 = Arg6639[0];
  return (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6639_0[1])) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && (Shen.is_type(Arg6639_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6639_0[2][2][1])) && Shen.empty$question$(Arg6639_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6639_0[2][1]]);})
  : (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6639_0[1])) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && (Shen.is_type(Arg6639_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6639_0[2][2][1])) && Shen.empty$question$(Arg6639_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6639_0[2][1]]);})
  : ((Shen.is_type(Arg6639_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove_modes"], [Arg6639_0[1]]), Shen.call(Shen.fns["shen.remove_modes"], [Arg6639_0[2]])]
  : Arg6639_0)))}, 1, [], "shen.remove_modes"];





Shen.fns["shen.ephemeral_variable?"] = [Shen.type_func, function shen_user_lambda6642(Arg6641) {
  if (Arg6641.length < 2) return [Shen.type_func, shen_user_lambda6642, 2, Arg6641];
  var Arg6641_0 = Arg6641[0], Arg6641_1 = Arg6641[1];
  return (Shen.call(Shen.fns["variable?"], [Arg6641_0]) && Shen.call(Shen.fns["variable?"], [Arg6641_1]))}, 2, [], "shen.ephemeral_variable?"];





Shen.fns["shen.prolog_constant?"] = [Shen.type_func, function shen_user_lambda6644(Arg6643) {
  if (Arg6643.length < 1) return [Shen.type_func, shen_user_lambda6644, 1, Arg6643];
  var Arg6643_0 = Arg6643[0];
  return ((Shen.is_type(Arg6643_0, Shen.type_cons))
  ? false
  : true)}, 1, [], "shen.prolog_constant?"];





Shen.fns["shen.aum_to_shen"] = [Shen.type_func, function shen_user_lambda6646(Arg6645) {
  if (Arg6645.length < 1) return [Shen.type_func, shen_user_lambda6646, 1, Arg6645];
  var Arg6645_0 = Arg6645[0];
  return (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.be"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6645_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6645_0[2][2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6645_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6645_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6645_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.result"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.dereferencing"], Arg6645_0[2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6645_0[2][2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6645_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.else"], Arg6645_0[2][2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6645_0[2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6645_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6645_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variable"], Arg6645_0[2][2][2][1])) && Shen.empty$question$(Arg6645_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pvar?"], [Shen.type_cons, Arg6645_0[1], []]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.non-empty"], Arg6645_0[2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6645_0[2][2][2][2][1])) && Shen.empty$question$(Arg6645_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, Arg6645_0[1], []]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6645_0[2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6645_0[2][2][2][2][1]) && (Shen.is_type(Arg6645_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6645_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6645_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.aum_to_shen"], [Arg6645_0[2][2][2][2][2][2][2][1]]);})
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6645_0[2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6645_0[2][2][2][2][1], Shen.type_cons) && (Shen.is_type(Arg6645_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6645_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6645_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6645_0[2][2][2][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [[Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6645_0[2][2][2][2][1][2], Arg6645_0[2][2][2][2][2]]]]]]]), []]]]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6645_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6645_0[2][2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.bindv"], [Shen.type_cons, Arg6645_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.chwild"], [Arg6645_0[2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6645_0[2][2][2][2][2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.unbindv"], [Shen.type_cons, Arg6645_0[2][1], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]]], []]]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "identical"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6645_0[2][2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6645_0[2][2][2][2][1], [Shen.type_cons, Arg6645_0[1], []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.failed!"], Arg6645_0)))
  ? false
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "head"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6645_0[2][2][2]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tail"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6645_0[2][2][2]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.pop"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.stack"], Arg6645_0[2][2][1])) && Shen.empty$question$(Arg6645_0[2][2][2]))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], []]]]
  : (((Shen.is_type(Arg6645_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "call"], Arg6645_0[1])) && (Shen.is_type(Arg6645_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6645_0[2][1])) && (Shen.is_type(Arg6645_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.continuation"], Arg6645_0[2][2][1])) && (Shen.is_type(Arg6645_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6645_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, Shen.call(Shen.fns["shen.call_the_continuation"], [Shen.call(Shen.fns["shen.chwild"], [Arg6645_0[2][2][2][1]]), [Shen.type_symbol, "ProcessN"], [Shen.type_symbol, "Continuation"]]), []]]]
  : Arg6645_0))))))))))))))}, 1, [], "shen.aum_to_shen"];





Shen.fns["shen.chwild"] = [Shen.type_func, function shen_user_lambda6648(Arg6647) {
  if (Arg6647.length < 1) return [Shen.type_func, shen_user_lambda6648, 1, Arg6647];
  var Arg6647_0 = Arg6647[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6647_0, [Shen.type_symbol, "_"])))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]
  : ((Shen.is_type(Arg6647_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.chwild"], Arg6647_0]);})
  : Arg6647_0))}, 1, [], "shen.chwild"];





Shen.fns["shen.newpv"] = [Shen.type_func, function shen_user_lambda6650(Arg6649) {
  if (Arg6649.length < 1) return [Shen.type_func, shen_user_lambda6650, 1, Arg6649];
  var Arg6649_0 = Arg6649[0];
  var R0, R1;
  return ((R0 = (Shen.absvector_ref((Shen.globals["shen.*varcounter*"]), Arg6649_0) + 1)),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6649_0, R0),
  (R1 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6649_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.call(Shen.fns["limit"], [R1]))))
  ? Shen.call(Shen.fns["shen.resizeprocessvector"], [Arg6649_0, R0])
  : [Shen.type_symbol, "shen.skip"]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mk-pvar"], [R0]);}))}, 1, [], "shen.newpv"];





Shen.fns["shen.resizeprocessvector"] = [Shen.type_func, function shen_user_lambda6652(Arg6651) {
  if (Arg6651.length < 2) return [Shen.type_func, shen_user_lambda6652, 2, Arg6651];
  var Arg6651_0 = Arg6651[0], Arg6651_1 = Arg6651[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6651_0)),
  (R0 = Shen.call(Shen.fns["shen.resize-vector"], [R0, (Arg6651_1 + Arg6651_1), [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6651_0, R0))}, 2, [], "shen.resizeprocessvector"];





Shen.fns["shen.resize-vector"] = [Shen.type_func, function shen_user_lambda6654(Arg6653) {
  if (Arg6653.length < 3) return [Shen.type_func, shen_user_lambda6654, 3, Arg6653];
  var Arg6653_0 = Arg6653[0], Arg6653_1 = Arg6653[1], Arg6653_2 = Arg6653[2];
  var R0;
  return ((R0 = Shen.absvector_set(Shen.absvector((1 + Arg6653_1)), 0, Arg6653_1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector"], [Arg6653_0, R0, Shen.call(Shen.fns["limit"], [Arg6653_0]), Arg6653_1, Arg6653_2]);}))}, 3, [], "shen.resize-vector"];





Shen.fns["shen.copy-vector"] = [Shen.type_func, function shen_user_lambda6656(Arg6655) {
  if (Arg6655.length < 5) return [Shen.type_func, shen_user_lambda6656, 5, Arg6655];
  var Arg6655_0 = Arg6655[0], Arg6655_1 = Arg6655[1], Arg6655_2 = Arg6655[2], Arg6655_3 = Arg6655[3], Arg6655_4 = Arg6655[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(1 + Arg6655_2), (Arg6655_3 + 1), Arg6655_4, Shen.call(Shen.fns["shen.copy-vector-stage-1"], [1, Arg6655_0, Arg6655_1, (1 + Arg6655_2)])]);})}, 5, [], "shen.copy-vector"];





Shen.fns["shen.copy-vector-stage-1"] = [Shen.type_func, function shen_user_lambda6658(Arg6657) {
  if (Arg6657.length < 4) return [Shen.type_func, shen_user_lambda6658, 4, Arg6657];
  var Arg6657_0 = Arg6657[0], Arg6657_1 = Arg6657[1], Arg6657_2 = Arg6657[2], Arg6657_3 = Arg6657[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6657_3, Arg6657_0)))
  ? Arg6657_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-1"], [(1 + Arg6657_0), Arg6657_1, Shen.absvector_set(Arg6657_2, Arg6657_0, Shen.absvector_ref(Arg6657_1, Arg6657_0)), Arg6657_3]);}))}, 4, [], "shen.copy-vector-stage-1"];





Shen.fns["shen.copy-vector-stage-2"] = [Shen.type_func, function shen_user_lambda6660(Arg6659) {
  if (Arg6659.length < 4) return [Shen.type_func, shen_user_lambda6660, 4, Arg6659];
  var Arg6659_0 = Arg6659[0], Arg6659_1 = Arg6659[1], Arg6659_2 = Arg6659[2], Arg6659_3 = Arg6659[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6659_1, Arg6659_0)))
  ? Arg6659_3
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(Arg6659_0 + 1), Arg6659_1, Arg6659_2, Shen.absvector_set(Arg6659_3, Arg6659_0, Arg6659_2)]);}))}, 4, [], "shen.copy-vector-stage-2"];





Shen.fns["shen.mk-pvar"] = [Shen.type_func, function shen_user_lambda6662(Arg6661) {
  if (Arg6661.length < 1) return [Shen.type_func, shen_user_lambda6662, 1, Arg6661];
  var Arg6661_0 = Arg6661[0];
  return Shen.absvector_set(Shen.absvector_set(Shen.absvector(2), 0, [Shen.type_symbol, "shen.pvar"]), 1, Arg6661_0)}, 1, [], "shen.mk-pvar"];





Shen.fns["shen.pvar?"] = [Shen.type_func, function shen_user_lambda6664(Arg6663) {
  if (Arg6663.length < 1) return [Shen.type_func, shen_user_lambda6664, 1, Arg6663];
  var Arg6663_0 = Arg6663[0];
  return (Shen.absvector$question$(Arg6663_0) && Shen.unwind_tail(Shen.$eq$(Shen.absvector_ref(Arg6663_0, 0), [Shen.type_symbol, "shen.pvar"])))}, 1, [], "shen.pvar?"];





Shen.fns["shen.bindv"] = [Shen.type_func, function shen_user_lambda6666(Arg6665) {
  if (Arg6665.length < 3) return [Shen.type_func, shen_user_lambda6666, 3, Arg6665];
  var Arg6665_0 = Arg6665[0], Arg6665_1 = Arg6665[1], Arg6665_2 = Arg6665[2];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6665_2)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6665_0, 1), Arg6665_1))}, 3, [], "shen.bindv"];





Shen.fns["shen.unbindv"] = [Shen.type_func, function shen_user_lambda6668(Arg6667) {
  if (Arg6667.length < 2) return [Shen.type_func, shen_user_lambda6668, 2, Arg6667];
  var Arg6667_0 = Arg6667[0], Arg6667_1 = Arg6667[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6667_1)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6667_0, 1), [Shen.type_symbol, "shen.-null-"]))}, 2, [], "shen.unbindv"];





Shen.fns["shen.incinfs"] = [Shen.type_func, function shen_user_lambda6670(Arg6669) {
  if (Arg6669.length < 0) return [Shen.type_func, shen_user_lambda6670, 0, Arg6669];
  return (Shen.globals["shen.*infs*"] = (1 + (Shen.globals["shen.*infs*"])))}, 0, [], "shen.incinfs"];





Shen.fns["shen.call_the_continuation"] = [Shen.type_func, function shen_user_lambda6672(Arg6671) {
  if (Arg6671.length < 3) return [Shen.type_func, shen_user_lambda6672, 3, Arg6671];
  var Arg6671_0 = Arg6671[0], Arg6671_1 = Arg6671[1], Arg6671_2 = Arg6671[2];
  var R0;
  return (((Shen.is_type(Arg6671_0, Shen.type_cons) && (Shen.is_type(Arg6671_0[1], Shen.type_cons) && Shen.empty$question$(Arg6671_0[2]))))
  ? [Shen.type_cons, Arg6671_0[1][1], Shen.call(Shen.fns["append"], [Arg6671_0[1][2], [Shen.type_cons, Arg6671_1, [Shen.type_cons, Arg6671_2, []]]])]
  : (((Shen.is_type(Arg6671_0, Shen.type_cons) && Shen.is_type(Arg6671_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.newcontinuation"], [Arg6671_0[2], Arg6671_1, Arg6671_2])),
  [Shen.type_cons, Arg6671_0[1][1], Shen.call(Shen.fns["append"], [Arg6671_0[1][2], [Shen.type_cons, Arg6671_1, [Shen.type_cons, R0, []]]])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call_the_continuation"]]);})))}, 3, [], "shen.call_the_continuation"];





Shen.fns["shen.newcontinuation"] = [Shen.type_func, function shen_user_lambda6674(Arg6673) {
  if (Arg6673.length < 3) return [Shen.type_func, shen_user_lambda6674, 3, Arg6673];
  var Arg6673_0 = Arg6673[0], Arg6673_1 = Arg6673[1], Arg6673_2 = Arg6673[2];
  return ((Shen.empty$question$(Arg6673_0))
  ? Arg6673_2
  : (((Shen.is_type(Arg6673_0, Shen.type_cons) && Shen.is_type(Arg6673_0[1], Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_cons, Arg6673_0[1][1], Shen.call(Shen.fns["append"], [Arg6673_0[1][2], [Shen.type_cons, Arg6673_1, [Shen.type_cons, Shen.call(Shen.fns["shen.newcontinuation"], [Arg6673_0[2], Arg6673_1, Arg6673_2]), []]]])], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.newcontinuation"]]);})))}, 3, [], "shen.newcontinuation"];





Shen.fns["return"] = [Shen.type_func, function shen_user_lambda6676(Arg6675) {
  if (Arg6675.length < 3) return [Shen.type_func, shen_user_lambda6676, 3, Arg6675];
  var Arg6675_0 = Arg6675[0], Arg6675_1 = Arg6675[1], Arg6675_2 = Arg6675[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6675_0, Arg6675_1]);})}, 3, [], "return"];





Shen.fns["shen.measure&return"] = [Shen.type_func, function shen_user_lambda6678(Arg6677) {
  if (Arg6677.length < 3) return [Shen.type_func, shen_user_lambda6678, 3, Arg6677];
  var Arg6677_0 = Arg6677[0], Arg6677_1 = Arg6677[1], Arg6677_2 = Arg6677[2];
  return (Shen.pr(Shen.call(Shen.fns["shen.app"], [(Shen.globals["shen.*infs*"]), " inferences\x0a", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6677_0, Arg6677_1]);}))}, 3, [], "shen.measure&return"];





Shen.fns["unify"] = [Shen.type_func, function shen_user_lambda6680(Arg6679) {
  if (Arg6679.length < 4) return [Shen.type_func, shen_user_lambda6680, 4, Arg6679];
  var Arg6679_0 = Arg6679[0], Arg6679_1 = Arg6679[1], Arg6679_2 = Arg6679[2], Arg6679_3 = Arg6679[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6679_0, Arg6679_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6679_1, Arg6679_2]), Arg6679_2, Arg6679_3]);})}, 4, [], "unify"];





Shen.fns["shen.lzy="] = [Shen.type_func, function shen_user_lambda6682(Arg6681) {
  if (Arg6681.length < 4) return [Shen.type_func, shen_user_lambda6682, 4, Arg6681];
  var Arg6681_0 = Arg6681[0], Arg6681_1 = Arg6681[1], Arg6681_2 = Arg6681[2], Arg6681_3 = Arg6681[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6681_1, Arg6681_0)))
  ? Shen.thaw(Arg6681_3)
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6681_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6681_0, Arg6681_1, Arg6681_2, Arg6681_3]);})
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6681_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6681_1, Arg6681_0, Arg6681_2, Arg6681_3]);})
  : (((Shen.is_type(Arg6681_0, Shen.type_cons) && Shen.is_type(Arg6681_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6681_0[1], Arg6681_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6681_1[1], Arg6681_2]), Arg6681_2, (new Shen.Freeze([Arg6681_0, Arg6681_1, Arg6681_2, Arg6681_3], function(Arg6683) {
  var Arg6683_0 = Arg6683[0], Arg6683_1 = Arg6683[1], Arg6683_2 = Arg6683[2], Arg6683_3 = Arg6683[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6683_0[2], Arg6683_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6683_1[2], Arg6683_2]), Arg6683_2, Arg6683_3]);});})}))]);})
  : false))))}, 4, [], "shen.lzy="];





Shen.fns["shen.deref"] = [Shen.type_func, function shen_user_lambda6686(Arg6685) {
  if (Arg6685.length < 2) return [Shen.type_func, shen_user_lambda6686, 2, Arg6685];
  var Arg6685_0 = Arg6685[0], Arg6685_1 = Arg6685[1];
  var R0;
  return ((Shen.is_type(Arg6685_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6685_0[1], Arg6685_1]), Shen.call(Shen.fns["shen.deref"], [Arg6685_0[2], Arg6685_1])]
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6685_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6685_0, Arg6685_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6685_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [R0, Arg6685_1]);})))
  : Arg6685_0))}, 2, [], "shen.deref"];





Shen.fns["shen.lazyderef"] = [Shen.type_func, function shen_user_lambda6688(Arg6687) {
  if (Arg6687.length < 2) return [Shen.type_func, shen_user_lambda6688, 2, Arg6687];
  var Arg6687_0 = Arg6687[0], Arg6687_1 = Arg6687[1];
  var R0;
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg6687_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6687_0, Arg6687_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6687_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lazyderef"], [R0, Arg6687_1]);})))
  : Arg6687_0)}, 2, [], "shen.lazyderef"];





Shen.fns["shen.valvector"] = [Shen.type_func, function shen_user_lambda6690(Arg6689) {
  if (Arg6689.length < 2) return [Shen.type_func, shen_user_lambda6690, 2, Arg6689];
  var Arg6689_0 = Arg6689[0], Arg6689_1 = Arg6689[1];
  return Shen.absvector_ref(Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6689_1), Shen.absvector_ref(Arg6689_0, 1))}, 2, [], "shen.valvector"];





Shen.fns["unify!"] = [Shen.type_func, function shen_user_lambda6692(Arg6691) {
  if (Arg6691.length < 4) return [Shen.type_func, shen_user_lambda6692, 4, Arg6691];
  var Arg6691_0 = Arg6691[0], Arg6691_1 = Arg6691[1], Arg6691_2 = Arg6691[2], Arg6691_3 = Arg6691[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6691_0, Arg6691_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6691_1, Arg6691_2]), Arg6691_2, Arg6691_3]);})}, 4, [], "unify!"];





Shen.fns["shen.lzy=!"] = [Shen.type_func, function shen_user_lambda6694(Arg6693) {
  if (Arg6693.length < 4) return [Shen.type_func, shen_user_lambda6694, 4, Arg6693];
  var Arg6693_0 = Arg6693[0], Arg6693_1 = Arg6693[1], Arg6693_2 = Arg6693[2], Arg6693_3 = Arg6693[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6693_1, Arg6693_0)))
  ? Shen.thaw(Arg6693_3)
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6693_0]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6693_0, Shen.call(Shen.fns["shen.deref"], [Arg6693_1, Arg6693_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6693_0, Arg6693_1, Arg6693_2, Arg6693_3]);})
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6693_1]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6693_1, Shen.call(Shen.fns["shen.deref"], [Arg6693_0, Arg6693_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6693_1, Arg6693_0, Arg6693_2, Arg6693_3]);})
  : (((Shen.is_type(Arg6693_0, Shen.type_cons) && Shen.is_type(Arg6693_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6693_0[1], Arg6693_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6693_1[1], Arg6693_2]), Arg6693_2, (new Shen.Freeze([Arg6693_0, Arg6693_1, Arg6693_2, Arg6693_3], function(Arg6695) {
  var Arg6695_0 = Arg6695[0], Arg6695_1 = Arg6695[1], Arg6695_2 = Arg6695[2], Arg6695_3 = Arg6695[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6695_0[2], Arg6695_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6695_1[2], Arg6695_2]), Arg6695_2, Arg6695_3]);});})}))]);})
  : false))))}, 4, [], "shen.lzy=!"];





Shen.fns["shen.occurs?"] = [Shen.type_func, function shen_user_lambda6698(Arg6697) {
  if (Arg6697.length < 2) return [Shen.type_func, shen_user_lambda6698, 2, Arg6697];
  var Arg6697_0 = Arg6697[0], Arg6697_1 = Arg6697[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6697_1, Arg6697_0)))
  ? true
  : ((Shen.is_type(Arg6697_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.occurs?"], [Arg6697_0, Arg6697_1[1]]) || Shen.call(Shen.fns["shen.occurs?"], [Arg6697_0, Arg6697_1[2]]))
  : false))}, 2, [], "shen.occurs?"];





Shen.fns["identical"] = [Shen.type_func, function shen_user_lambda6700(Arg6699) {
  if (Arg6699.length < 4) return [Shen.type_func, shen_user_lambda6700, 4, Arg6699];
  var Arg6699_0 = Arg6699[0], Arg6699_1 = Arg6699[1], Arg6699_2 = Arg6699[2], Arg6699_3 = Arg6699[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6699_0, Arg6699_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6699_1, Arg6699_2]), Arg6699_2, Arg6699_3]);})}, 4, [], "identical"];





Shen.fns["shen.lzy=="] = [Shen.type_func, function shen_user_lambda6702(Arg6701) {
  if (Arg6701.length < 4) return [Shen.type_func, shen_user_lambda6702, 4, Arg6701];
  var Arg6701_0 = Arg6701[0], Arg6701_1 = Arg6701[1], Arg6701_2 = Arg6701[2], Arg6701_3 = Arg6701[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6701_1, Arg6701_0)))
  ? Shen.thaw(Arg6701_3)
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && Shen.is_type(Arg6701_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6701_0[1], Arg6701_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6701_1[1], Arg6701_2]), Arg6701_2, (new Shen.Freeze([Arg6701_0, Arg6701_1, Arg6701_2, Arg6701_3], function(Arg6703) {
  var Arg6703_0 = Arg6703[0], Arg6703_1 = Arg6703[1], Arg6703_2 = Arg6703[2], Arg6703_3 = Arg6703[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Arg6703_0[2], Arg6703_1[2], Arg6703_2, Arg6703_3]);});})}))]);})
  : false))}, 4, [], "shen.lzy=="];





Shen.fns["shen.pvar"] = [Shen.type_func, function shen_user_lambda6706(Arg6705) {
  if (Arg6705.length < 1) return [Shen.type_func, shen_user_lambda6706, 1, Arg6705];
  var Arg6705_0 = Arg6705[0];
  return ("Var" + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg6705_0, 1), "", [Shen.type_symbol, "shen.a"]]))}, 1, [], "shen.pvar"];





Shen.fns["bind"] = [Shen.type_func, function shen_user_lambda6708(Arg6707) {
  if (Arg6707.length < 4) return [Shen.type_func, shen_user_lambda6708, 4, Arg6707];
  var Arg6707_0 = Arg6707[0], Arg6707_1 = Arg6707[1], Arg6707_2 = Arg6707[2], Arg6707_3 = Arg6707[3];
  var R0;
  return (Shen.call(Shen.fns["shen.bindv"], [Arg6707_0, Arg6707_1, Arg6707_2]),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6707_3))),
  Shen.call(Shen.fns["shen.unbindv"], [Arg6707_0, Arg6707_2]),
  R0)}, 4, [], "bind"];





Shen.fns["fwhen"] = [Shen.type_func, function shen_user_lambda6710(Arg6709) {
  if (Arg6709.length < 3) return [Shen.type_func, shen_user_lambda6710, 3, Arg6709];
  var Arg6709_0 = Arg6709[0], Arg6709_1 = Arg6709[1], Arg6709_2 = Arg6709[2];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg6709_0)))
  ? Shen.thaw(Arg6709_2)
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg6709_0)))
  ? false
  : (function() {
  return Shen.simple_error(("fwhen expects a boolean: not " + Shen.call(Shen.fns["shen.app"], [Arg6709_0, "%", [Shen.type_symbol, "shen.s"]])));})))}, 3, [], "fwhen"];





Shen.fns["call"] = [Shen.type_func, function shen_user_lambda6712(Arg6711) {
  if (Arg6711.length < 3) return [Shen.type_func, shen_user_lambda6712, 3, Arg6711];
  var Arg6711_0 = Arg6711[0], Arg6711_1 = Arg6711[1], Arg6711_2 = Arg6711[2];
  return ((Shen.is_type(Arg6711_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6711_0[1], Arg6711_1])]), Arg6711_0[2], Arg6711_1, Arg6711_2]);})
  : false)}, 3, [], "call"];





Shen.fns["shen.call-help"] = [Shen.type_func, function shen_user_lambda6714(Arg6713) {
  if (Arg6713.length < 4) return [Shen.type_func, shen_user_lambda6714, 4, Arg6713];
  var Arg6713_0 = Arg6713[0], Arg6713_1 = Arg6713[1], Arg6713_2 = Arg6713[2], Arg6713_3 = Arg6713[3];
  return ((Shen.empty$question$(Arg6713_1))
  ? (function() {
  return Shen.call_tail(Arg6713_0, [Arg6713_2, Arg6713_3]);})
  : ((Shen.is_type(Arg6713_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Arg6713_0, [Arg6713_1[1]]), Arg6713_1[2], Arg6713_2, Arg6713_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-help"]]);})))}, 4, [], "shen.call-help"];





Shen.fns["shen.intprolog"] = [Shen.type_func, function shen_user_lambda6716(Arg6715) {
  if (Arg6715.length < 1) return [Shen.type_func, shen_user_lambda6716, 1, Arg6715];
  var Arg6715_0 = Arg6715[0];
  var R0;
  return (((Shen.is_type(Arg6715_0, Shen.type_cons) && Shen.is_type(Arg6715_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help"], [Arg6715_0[1][1], Shen.call(Shen.fns["shen.insert-prolog-variables"], [[Shen.type_cons, Arg6715_0[1][2], [Shen.type_cons, Arg6715_0[2], []]], R0]), R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog"]]);}))}, 1, [], "shen.intprolog"];





Shen.fns["shen.intprolog-help"] = [Shen.type_func, function shen_user_lambda6718(Arg6717) {
  if (Arg6717.length < 3) return [Shen.type_func, shen_user_lambda6718, 3, Arg6717];
  var Arg6717_0 = Arg6717[0], Arg6717_1 = Arg6717[1], Arg6717_2 = Arg6717[2];
  return (((Shen.is_type(Arg6717_1, Shen.type_cons) && (Shen.is_type(Arg6717_1[2], Shen.type_cons) && Shen.empty$question$(Arg6717_1[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Arg6717_0, Arg6717_1[1], Arg6717_1[2][1], Arg6717_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help"]]);}))}, 3, [], "shen.intprolog-help"];





Shen.fns["shen.intprolog-help-help"] = [Shen.type_func, function shen_user_lambda6720(Arg6719) {
  if (Arg6719.length < 4) return [Shen.type_func, shen_user_lambda6720, 4, Arg6719];
  var Arg6719_0 = Arg6719[0], Arg6719_1 = Arg6719[1], Arg6719_2 = Arg6719[2], Arg6719_3 = Arg6719[3];
  return ((Shen.empty$question$(Arg6719_1))
  ? (function() {
  return Shen.call_tail(Arg6719_0, [Arg6719_3, (new Shen.Freeze([Arg6719_0, Arg6719_1, Arg6719_2, Arg6719_3], function(Arg6721) {
  var Arg6721_0 = Arg6721[0], Arg6721_1 = Arg6721[1], Arg6721_2 = Arg6721[2], Arg6721_3 = Arg6721[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6721_2, Arg6721_3]);});})}))]);})
  : ((Shen.is_type(Arg6719_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Shen.call(Arg6719_0, [Arg6719_1[1]]), Arg6719_1[2], Arg6719_2, Arg6719_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help-help"]]);})))}, 4, [], "shen.intprolog-help-help"];





Shen.fns["shen.call-rest"] = [Shen.type_func, function shen_user_lambda6724(Arg6723) {
  if (Arg6723.length < 2) return [Shen.type_func, shen_user_lambda6724, 2, Arg6723];
  var Arg6723_0 = Arg6723[0], Arg6723_1 = Arg6723[1];
  return ((Shen.empty$question$(Arg6723_0))
  ? true
  : (((Shen.is_type(Arg6723_0, Shen.type_cons) && (Shen.is_type(Arg6723_0[1], Shen.type_cons) && Shen.is_type(Arg6723_0[1][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [[Shen.type_cons, [Shen.type_cons, Shen.call(Arg6723_0[1][1], [Arg6723_0[1][2][1]]), Arg6723_0[1][2][2]], Arg6723_0[2]], Arg6723_1]);})
  : (((Shen.is_type(Arg6723_0, Shen.type_cons) && (Shen.is_type(Arg6723_0[1], Shen.type_cons) && Shen.empty$question$(Arg6723_0[1][2]))))
  ? (function() {
  return Shen.call_tail(Arg6723_0[1][1], [Arg6723_1, (new Shen.Freeze([Arg6723_0, Arg6723_1], function(Arg6725) {
  var Arg6725_0 = Arg6725[0], Arg6725_1 = Arg6725[1];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6725_0[2], Arg6725_1]);});})}))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-rest"]]);}))))}, 2, [], "shen.call-rest"];





Shen.fns["shen.start-new-prolog-process"] = [Shen.type_func, function shen_user_lambda6728(Arg6727) {
  if (Arg6727.length < 0) return [Shen.type_func, shen_user_lambda6728, 0, Arg6727];
  var R0;
  return ((R0 = (Shen.globals["shen.*process-counter*"] = (1 + (Shen.globals["shen.*process-counter*"])))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise-prolog"], [R0]);}))}, 0, [], "shen.start-new-prolog-process"];





Shen.fns["shen.insert-prolog-variables"] = [Shen.type_func, function shen_user_lambda6730(Arg6729) {
  if (Arg6729.length < 2) return [Shen.type_func, shen_user_lambda6730, 2, Arg6729];
  var Arg6729_0 = Arg6729[0], Arg6729_1 = Arg6729[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6729_0, Shen.call(Shen.fns["shen.flatten"], [Arg6729_0]), Arg6729_1]);})}, 2, [], "shen.insert-prolog-variables"];





Shen.fns["shen.insert-prolog-variables-help"] = [Shen.type_func, function shen_user_lambda6732(Arg6731) {
  if (Arg6731.length < 3) return [Shen.type_func, shen_user_lambda6732, 3, Arg6731];
  var Arg6731_0 = Arg6731[0], Arg6731_1 = Arg6731[1], Arg6731_2 = Arg6731[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6731_1))
  ? Arg6731_0
  : (((Shen.is_type(Arg6731_1, Shen.type_cons) && Shen.call(Shen.fns["variable?"], [Arg6731_1[1]])))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6731_2])),
  (R0 = Shen.call(Shen.fns["subst"], [R0, Arg6731_1[1], Arg6731_0])),
  (R1 = Shen.call(Shen.fns["remove"], [Arg6731_1[1], Arg6731_1[2]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [R0, R1, Arg6731_2]);}))
  : ((Shen.is_type(Arg6731_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6731_0, Arg6731_1[2], Arg6731_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-prolog-variables-help"]]);}))))}, 3, [], "shen.insert-prolog-variables-help"];





Shen.fns["shen.initialise-prolog"] = [Shen.type_func, function shen_user_lambda6734(Arg6733) {
  if (Arg6733.length < 1) return [Shen.type_func, shen_user_lambda6734, 1, Arg6733];
  var Arg6733_0 = Arg6733[0];
  return (Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6733_0, Shen.call(Shen.fns["shen.fillvector"], [Shen.vector(10), 1, 10, [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6733_0, 1),
  Arg6733_0)}, 1, [], "shen.initialise-prolog"];










Shen.fns["shen.f_error"] = [Shen.type_func, function shen_user_lambda7288(Arg7287) {
  if (Arg7287.length < 1) return [Shen.type_func, shen_user_lambda7288, 1, Arg7287];
  var Arg7287_0 = Arg7287[0];
  return (Shen.pr(("partial function " + Shen.call(Shen.fns["shen.app"], [Arg7287_0, ";\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  ((((!Shen.call(Shen.fns["shen.tracked?"], [Arg7287_0])) && Shen.call(Shen.fns["y-or-n?"], [("track " + Shen.call(Shen.fns["shen.app"], [Arg7287_0, "? ", [Shen.type_symbol, "shen.a"]]))])))
  ? Shen.call(Shen.fns["shen.track-function"], [Shen.call(Shen.fns["ps"], [Arg7287_0])])
  : [Shen.type_symbol, "shen.ok"]),
  (function() {
  return Shen.simple_error("aborted");}))}, 1, [], "shen.f_error"];





Shen.fns["shen.tracked?"] = [Shen.type_func, function shen_user_lambda7290(Arg7289) {
  if (Arg7289.length < 1) return [Shen.type_func, shen_user_lambda7290, 1, Arg7289];
  var Arg7289_0 = Arg7289[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7289_0, (Shen.globals["shen.*tracking*"])]);})}, 1, [], "shen.tracked?"];





Shen.fns["track"] = [Shen.type_func, function shen_user_lambda7292(Arg7291) {
  if (Arg7291.length < 1) return [Shen.type_func, shen_user_lambda7292, 1, Arg7291];
  var Arg7291_0 = Arg7291[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["ps"], [Arg7291_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.track-function"], [R0]);}))}, 1, [], "track"];





Shen.fns["shen.track-function"] = [Shen.type_func, function shen_user_lambda7294(Arg7293) {
  if (Arg7293.length < 1) return [Shen.type_func, shen_user_lambda7294, 1, Arg7293];
  var Arg7293_0 = Arg7293[0];
  var R0;
  return (((Shen.is_type(Arg7293_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7293_0[1])) && (Shen.is_type(Arg7293_0[2], Shen.type_cons) && (Shen.is_type(Arg7293_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7293_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7293_0[2][2][2][2])))))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7293_0[2][1], [Shen.type_cons, Arg7293_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-tracking-code"], [Arg7293_0[2][1], Arg7293_0[2][2][1], Arg7293_0[2][2][2][1]]), []]]]]),
  (R0 = Shen.call(Shen.fns["eval"], [R0])),
  (Shen.globals["shen.*tracking*"] = [Shen.type_cons, R0, (Shen.globals["shen.*tracking*"])]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.track-function"]]);}))}, 1, [], "shen.track-function"];





Shen.fns["shen.insert-tracking-code"] = [Shen.type_func, function shen_user_lambda7296(Arg7295) {
  if (Arg7295.length < 3) return [Shen.type_func, shen_user_lambda7296, 3, Arg7295];
  var Arg7295_0 = Arg7295[0], Arg7295_1 = Arg7295[1], Arg7295_2 = Arg7295[2];
  return [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.input-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg7295_0, [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg7295_1]), []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7295_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.output-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg7295_0, [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]], []]]], []]]]], []]]], []]]], []]]]}, 3, [], "shen.insert-tracking-code"];





Shen.fns["reg-kl.shen-toplevel-7298"] = [Shen.type_func, function shen_user_lambda7299(Arg7297) {
  if (Arg7297.length < 0) return [Shen.type_func, shen_user_lambda7299, 0, Arg7297];
  return (Shen.globals["shen.*step*"] = false)}, 0, [], "reg-kl.shen-toplevel-7298"];

Shen.call_toplevel("reg-kl.shen-toplevel-7298")





Shen.fns["step"] = [Shen.type_func, function shen_user_lambda7301(Arg7300) {
  if (Arg7300.length < 1) return [Shen.type_func, shen_user_lambda7301, 1, Arg7300];
  var Arg7300_0 = Arg7300[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7300_0)))
  ? (Shen.globals["shen.*step*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7300_0)))
  ? (Shen.globals["shen.*step*"] = false)
  : (function() {
  return Shen.simple_error("step expects a + or a -.\x0a");})))}, 1, [], "step"];





Shen.fns["spy"] = [Shen.type_func, function shen_user_lambda7303(Arg7302) {
  if (Arg7302.length < 1) return [Shen.type_func, shen_user_lambda7303, 1, Arg7302];
  var Arg7302_0 = Arg7302[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7302_0)))
  ? (Shen.globals["shen.*spy*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7302_0)))
  ? (Shen.globals["shen.*spy*"] = false)
  : (function() {
  return Shen.simple_error("spy expects a + or a -.\x0a");})))}, 1, [], "spy"];





Shen.fns["shen.terpri-or-read-char"] = [Shen.type_func, function shen_user_lambda7305(Arg7304) {
  if (Arg7304.length < 0) return [Shen.type_func, shen_user_lambda7305, 0, Arg7304];
  return (((Shen.globals["shen.*step*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check-byte"], [Shen.read_byte((Shen.globals["*stinput*"]))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 0, [], "shen.terpri-or-read-char"];





Shen.fns["shen.check-byte"] = [Shen.type_func, function shen_user_lambda7307(Arg7306) {
  if (Arg7306.length < 1) return [Shen.type_func, shen_user_lambda7307, 1, Arg7306];
  var Arg7306_0 = Arg7306[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7306_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("aborted");})
  : true)}, 1, [], "shen.check-byte"];





Shen.fns["shen.input-track"] = [Shen.type_func, function shen_user_lambda7309(Arg7308) {
  if (Arg7308.length < 3) return [Shen.type_func, shen_user_lambda7309, 3, Arg7308];
  var Arg7308_0 = Arg7308[0], Arg7308_1 = Arg7308[1], Arg7308_2 = Arg7308[2];
  return (Shen.pr(("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7308_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg7308_0, ("> Inputs to " + Shen.call(Shen.fns["shen.app"], [Arg7308_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7308_0]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg7308_2]);}))}, 3, [], "shen.input-track"];





Shen.fns["shen.recursively-print"] = [Shen.type_func, function shen_user_lambda7311(Arg7310) {
  if (Arg7310.length < 1) return [Shen.type_func, shen_user_lambda7311, 1, Arg7310];
  var Arg7310_0 = Arg7310[0];
  return ((Shen.empty$question$(Arg7310_0))
  ? (function() {
  return Shen.pr(" ==>", Shen.call(Shen.fns["stoutput"], []));})
  : ((Shen.is_type(Arg7310_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["print"], [Arg7310_0[1]]),
  Shen.pr(", ", Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg7310_0[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursively-print"]]);})))}, 1, [], "shen.recursively-print"];





Shen.fns["shen.spaces"] = [Shen.type_func, function shen_user_lambda7313(Arg7312) {
  if (Arg7312.length < 1) return [Shen.type_func, shen_user_lambda7313, 1, Arg7312];
  var Arg7312_0 = Arg7312[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7312_0)))
  ? ""
  : (" " + Shen.call(Shen.fns["shen.spaces"], [(Arg7312_0 - 1)])))}, 1, [], "shen.spaces"];





Shen.fns["shen.output-track"] = [Shen.type_func, function shen_user_lambda7315(Arg7314) {
  if (Arg7314.length < 3) return [Shen.type_func, shen_user_lambda7315, 3, Arg7314];
  var Arg7314_0 = Arg7314[0], Arg7314_1 = Arg7314[1], Arg7314_2 = Arg7314[2];
  return (function() {
  return Shen.pr(("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7314_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg7314_0, ("> Output from " + Shen.call(Shen.fns["shen.app"], [Arg7314_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7314_0]), ("==> " + Shen.call(Shen.fns["shen.app"], [Arg7314_2, "", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));})}, 3, [], "shen.output-track"];





Shen.fns["untrack"] = [Shen.type_func, function shen_user_lambda7317(Arg7316) {
  if (Arg7316.length < 1) return [Shen.type_func, shen_user_lambda7317, 1, Arg7316];
  var Arg7316_0 = Arg7316[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["ps"], [Arg7316_0])]);})}, 1, [], "untrack"];





Shen.fns["profile"] = [Shen.type_func, function shen_user_lambda7319(Arg7318) {
  if (Arg7318.length < 1) return [Shen.type_func, shen_user_lambda7319, 1, Arg7318];
  var Arg7318_0 = Arg7318[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.profile-help"], [Shen.call(Shen.fns["ps"], [Arg7318_0])]);})}, 1, [], "profile"];





Shen.fns["shen.profile-help"] = [Shen.type_func, function shen_user_lambda7321(Arg7320) {
  if (Arg7320.length < 1) return [Shen.type_func, shen_user_lambda7321, 1, Arg7320];
  var Arg7320_0 = Arg7320[0];
  var R0, R1;
  return (((Shen.is_type(Arg7320_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7320_0[1])) && (Shen.is_type(Arg7320_0[2], Shen.type_cons) && (Shen.is_type(Arg7320_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7320_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7320_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.f"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7320_0[2][1], [Shen.type_cons, Arg7320_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.profile-func"], [Arg7320_0[2][1], Arg7320_0[2][2][1], [Shen.type_cons, R0, Arg7320_0[2][2][1]]]), []]]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, Arg7320_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["subst"], [R0, Arg7320_0[2][1], Arg7320_0[2][2][2][1]]), []]]]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R1]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R0]),
  Arg7320_0[2][1])
  : (function() {
  return Shen.simple_error("Cannot profile.\x0a");}))}, 1, [], "shen.profile-help"];





Shen.fns["unprofile"] = [Shen.type_func, function shen_user_lambda7323(Arg7322) {
  if (Arg7322.length < 1) return [Shen.type_func, shen_user_lambda7323, 1, Arg7322];
  var Arg7322_0 = Arg7322[0];
  return (function() {
  return Shen.call_tail(Shen.fns["untrack"], [Arg7322_0]);})}, 1, [], "unprofile"];





Shen.fns["shen.profile-func"] = [Shen.type_func, function shen_user_lambda7325(Arg7324) {
  if (Arg7324.length < 3) return [Shen.type_func, shen_user_lambda7325, 3, Arg7324];
  var Arg7324_0 = Arg7324[0], Arg7324_1 = Arg7324[1], Arg7324_2 = Arg7324[2];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7324_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Record"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.put-profile"], [Shen.type_cons, Arg7324_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.get-profile"], [Shen.type_cons, Arg7324_0, []]], [Shen.type_cons, [Shen.type_symbol, "Finish"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]]]], []]]]]}, 3, [], "shen.profile-func"];





Shen.fns["profile-results"] = [Shen.type_func, function shen_user_lambda7327(Arg7326) {
  if (Arg7326.length < 1) return [Shen.type_func, shen_user_lambda7327, 1, Arg7326];
  var Arg7326_0 = Arg7326[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.get-profile"], [Arg7326_0])),
  Shen.call(Shen.fns["shen.put-profile"], [Arg7326_0, 0]),
  [Shen.fns['shen.tuple'], Arg7326_0, R0])}, 1, [], "profile-results"];





Shen.fns["shen.get-profile"] = [Shen.type_func, function shen_user_lambda7329(Arg7328) {
  if (Arg7328.length < 1) return [Shen.type_func, shen_user_lambda7329, 1, Arg7328];
  var Arg7328_0 = Arg7328[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7328_0, [Shen.type_symbol, "profile"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7331(Arg7330) {
  if (Arg7330.length < 1) return [Shen.type_func, shen_user_lambda7331, 1, Arg7330];
  var Arg7330_0 = Arg7330[0];
  return 0}, 1, [], undefined]);})}, 1, [], "shen.get-profile"];





Shen.fns["shen.put-profile"] = [Shen.type_func, function shen_user_lambda7333(Arg7332) {
  if (Arg7332.length < 2) return [Shen.type_func, shen_user_lambda7333, 2, Arg7332];
  var Arg7332_0 = Arg7332[0], Arg7332_1 = Arg7332[1];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg7332_0, [Shen.type_symbol, "profile"], Arg7332_1, (Shen.globals["*property-vector*"])]);})}, 2, [], "shen.put-profile"];










Shen.fns["reg-kl.shen-toplevel-6323"] = [Shen.type_func, function shen_user_lambda6324(Arg6322) {
  if (Arg6322.length < 0) return [Shen.type_func, shen_user_lambda6324, 0, Arg6322];
  return (Shen.globals["shen.*installing-kl*"] = false)}, 0, [], "reg-kl.shen-toplevel-6323"];

Shen.call_toplevel("reg-kl.shen-toplevel-6323")





Shen.fns["reg-kl.shen-toplevel-6326"] = [Shen.type_func, function shen_user_lambda6327(Arg6325) {
  if (Arg6325.length < 0) return [Shen.type_func, shen_user_lambda6327, 0, Arg6325];
  return (Shen.globals["shen.*history*"] = [])}, 0, [], "reg-kl.shen-toplevel-6326"];

Shen.call_toplevel("reg-kl.shen-toplevel-6326")





Shen.fns["reg-kl.shen-toplevel-6329"] = [Shen.type_func, function shen_user_lambda6330(Arg6328) {
  if (Arg6328.length < 0) return [Shen.type_func, shen_user_lambda6330, 0, Arg6328];
  return (Shen.globals["shen.*tc*"] = false)}, 0, [], "reg-kl.shen-toplevel-6329"];

Shen.call_toplevel("reg-kl.shen-toplevel-6329")





Shen.fns["reg-kl.shen-toplevel-6332"] = [Shen.type_func, function shen_user_lambda6333(Arg6331) {
  if (Arg6331.length < 0) return [Shen.type_func, shen_user_lambda6333, 0, Arg6331];
  return (Shen.globals["*property-vector*"] = Shen.vector(20000))}, 0, [], "reg-kl.shen-toplevel-6332"];

Shen.call_toplevel("reg-kl.shen-toplevel-6332")





Shen.fns["reg-kl.shen-toplevel-6335"] = [Shen.type_func, function shen_user_lambda6336(Arg6334) {
  if (Arg6334.length < 0) return [Shen.type_func, shen_user_lambda6336, 0, Arg6334];
  return (Shen.globals["shen.*process-counter*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6335"];

Shen.call_toplevel("reg-kl.shen-toplevel-6335")





Shen.fns["reg-kl.shen-toplevel-6338"] = [Shen.type_func, function shen_user_lambda6339(Arg6337) {
  if (Arg6337.length < 0) return [Shen.type_func, shen_user_lambda6339, 0, Arg6337];
  return (Shen.globals["shen.*varcounter*"] = Shen.vector(1000))}, 0, [], "reg-kl.shen-toplevel-6338"];

Shen.call_toplevel("reg-kl.shen-toplevel-6338")





Shen.fns["reg-kl.shen-toplevel-6341"] = [Shen.type_func, function shen_user_lambda6342(Arg6340) {
  if (Arg6340.length < 0) return [Shen.type_func, shen_user_lambda6342, 0, Arg6340];
  return (Shen.globals["shen.*prologvectors*"] = Shen.vector(1000))}, 0, [], "reg-kl.shen-toplevel-6341"];

Shen.call_toplevel("reg-kl.shen-toplevel-6341")





Shen.fns["reg-kl.shen-toplevel-6344"] = [Shen.type_func, function shen_user_lambda6345(Arg6343) {
  if (Arg6343.length < 0) return [Shen.type_func, shen_user_lambda6345, 0, Arg6343];
  return (Shen.globals["shen.*reader-macros*"] = [])}, 0, [], "reg-kl.shen-toplevel-6344"];

Shen.call_toplevel("reg-kl.shen-toplevel-6344")





Shen.fns["reg-kl.shen-toplevel-6347"] = [Shen.type_func, function shen_user_lambda6348(Arg6346) {
  if (Arg6346.length < 0) return [Shen.type_func, shen_user_lambda6348, 0, Arg6346];
  return (Shen.globals["*home-directory*"] = [])}, 0, [], "reg-kl.shen-toplevel-6347"];

Shen.call_toplevel("reg-kl.shen-toplevel-6347")





Shen.fns["reg-kl.shen-toplevel-6350"] = [Shen.type_func, function shen_user_lambda6351(Arg6349) {
  if (Arg6349.length < 0) return [Shen.type_func, shen_user_lambda6351, 0, Arg6349];
  return (Shen.globals["shen.*gensym*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6350"];

Shen.call_toplevel("reg-kl.shen-toplevel-6350")





Shen.fns["reg-kl.shen-toplevel-6353"] = [Shen.type_func, function shen_user_lambda6354(Arg6352) {
  if (Arg6352.length < 0) return [Shen.type_func, shen_user_lambda6354, 0, Arg6352];
  return (Shen.globals["shen.*tracking*"] = [])}, 0, [], "reg-kl.shen-toplevel-6353"];

Shen.call_toplevel("reg-kl.shen-toplevel-6353")





Shen.fns["reg-kl.shen-toplevel-6356"] = [Shen.type_func, function shen_user_lambda6357(Arg6355) {
  if (Arg6355.length < 0) return [Shen.type_func, shen_user_lambda6357, 0, Arg6355];
  return (Shen.globals["*home-directory*"] = "")}, 0, [], "reg-kl.shen-toplevel-6356"];

Shen.call_toplevel("reg-kl.shen-toplevel-6356")





Shen.fns["reg-kl.shen-toplevel-6359"] = [Shen.type_func, function shen_user_lambda6360(Arg6358) {
  if (Arg6358.length < 0) return [Shen.type_func, shen_user_lambda6360, 0, Arg6358];
  return (Shen.globals["shen.*alphabet*"] = [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "C"], [Shen.type_cons, [Shen.type_symbol, "D"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_symbol, "F"], [Shen.type_cons, [Shen.type_symbol, "G"], [Shen.type_cons, [Shen.type_symbol, "H"], [Shen.type_cons, [Shen.type_symbol, "I"], [Shen.type_cons, [Shen.type_symbol, "J"], [Shen.type_cons, [Shen.type_symbol, "K"], [Shen.type_cons, [Shen.type_symbol, "L"], [Shen.type_cons, [Shen.type_symbol, "M"], [Shen.type_cons, [Shen.type_symbol, "N"], [Shen.type_cons, [Shen.type_symbol, "O"], [Shen.type_cons, [Shen.type_symbol, "P"], [Shen.type_cons, [Shen.type_symbol, "Q"], [Shen.type_cons, [Shen.type_symbol, "R"], [Shen.type_cons, [Shen.type_symbol, "S"], [Shen.type_cons, [Shen.type_symbol, "T"], [Shen.type_cons, [Shen.type_symbol, "U"], [Shen.type_cons, [Shen.type_symbol, "V"], [Shen.type_cons, [Shen.type_symbol, "W"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]]]]]]]]]]]]]]]]]]]]]]]]])}, 0, [], "reg-kl.shen-toplevel-6359"];

Shen.call_toplevel("reg-kl.shen-toplevel-6359")





Shen.fns["reg-kl.shen-toplevel-6362"] = [Shen.type_func, function shen_user_lambda6363(Arg6361) {
  if (Arg6361.length < 0) return [Shen.type_func, shen_user_lambda6363, 0, Arg6361];
  return (Shen.globals["shen.*special*"] = [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]]]]]]]]])}, 0, [], "reg-kl.shen-toplevel-6362"];

Shen.call_toplevel("reg-kl.shen-toplevel-6362")





Shen.fns["reg-kl.shen-toplevel-6365"] = [Shen.type_func, function shen_user_lambda6366(Arg6364) {
  if (Arg6364.length < 0) return [Shen.type_func, shen_user_lambda6366, 0, Arg6364];
  return (Shen.globals["shen.*extraspecial*"] = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "defcc"], []]]]])}, 0, [], "reg-kl.shen-toplevel-6365"];

Shen.call_toplevel("reg-kl.shen-toplevel-6365")





Shen.fns["reg-kl.shen-toplevel-6368"] = [Shen.type_func, function shen_user_lambda6369(Arg6367) {
  if (Arg6367.length < 0) return [Shen.type_func, shen_user_lambda6369, 0, Arg6367];
  return (Shen.globals["shen.*spy*"] = false)}, 0, [], "reg-kl.shen-toplevel-6368"];

Shen.call_toplevel("reg-kl.shen-toplevel-6368")





Shen.fns["reg-kl.shen-toplevel-6371"] = [Shen.type_func, function shen_user_lambda6372(Arg6370) {
  if (Arg6370.length < 0) return [Shen.type_func, shen_user_lambda6372, 0, Arg6370];
  return (Shen.globals["shen.*datatypes*"] = [])}, 0, [], "reg-kl.shen-toplevel-6371"];

Shen.call_toplevel("reg-kl.shen-toplevel-6371")





Shen.fns["reg-kl.shen-toplevel-6374"] = [Shen.type_func, function shen_user_lambda6375(Arg6373) {
  if (Arg6373.length < 0) return [Shen.type_func, shen_user_lambda6375, 0, Arg6373];
  return (Shen.globals["shen.*alldatatypes*"] = [])}, 0, [], "reg-kl.shen-toplevel-6374"];

Shen.call_toplevel("reg-kl.shen-toplevel-6374")





Shen.fns["reg-kl.shen-toplevel-6377"] = [Shen.type_func, function shen_user_lambda6378(Arg6376) {
  if (Arg6376.length < 0) return [Shen.type_func, shen_user_lambda6378, 0, Arg6376];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)}, 0, [], "reg-kl.shen-toplevel-6377"];

Shen.call_toplevel("reg-kl.shen-toplevel-6377")





Shen.fns["reg-kl.shen-toplevel-6380"] = [Shen.type_func, function shen_user_lambda6381(Arg6379) {
  if (Arg6379.length < 0) return [Shen.type_func, shen_user_lambda6381, 0, Arg6379];
  return (Shen.globals["shen.*synonyms*"] = [])}, 0, [], "reg-kl.shen-toplevel-6380"];

Shen.call_toplevel("reg-kl.shen-toplevel-6380")





Shen.fns["reg-kl.shen-toplevel-6383"] = [Shen.type_func, function shen_user_lambda6384(Arg6382) {
  if (Arg6382.length < 0) return [Shen.type_func, shen_user_lambda6384, 0, Arg6382];
  return (Shen.globals["shen.*system*"] = [])}, 0, [], "reg-kl.shen-toplevel-6383"];

Shen.call_toplevel("reg-kl.shen-toplevel-6383")





Shen.fns["reg-kl.shen-toplevel-6386"] = [Shen.type_func, function shen_user_lambda6387(Arg6385) {
  if (Arg6385.length < 0) return [Shen.type_func, shen_user_lambda6387, 0, Arg6385];
  return (Shen.globals["shen.*signedfuncs*"] = [])}, 0, [], "reg-kl.shen-toplevel-6386"];

Shen.call_toplevel("reg-kl.shen-toplevel-6386")





Shen.fns["reg-kl.shen-toplevel-6389"] = [Shen.type_func, function shen_user_lambda6390(Arg6388) {
  if (Arg6388.length < 0) return [Shen.type_func, shen_user_lambda6390, 0, Arg6388];
  return (Shen.globals["shen.*maxcomplexity*"] = 128)}, 0, [], "reg-kl.shen-toplevel-6389"];

Shen.call_toplevel("reg-kl.shen-toplevel-6389")





Shen.fns["reg-kl.shen-toplevel-6392"] = [Shen.type_func, function shen_user_lambda6393(Arg6391) {
  if (Arg6391.length < 0) return [Shen.type_func, shen_user_lambda6393, 0, Arg6391];
  return (Shen.globals["shen.*occurs*"] = true)}, 0, [], "reg-kl.shen-toplevel-6392"];

Shen.call_toplevel("reg-kl.shen-toplevel-6392")





Shen.fns["reg-kl.shen-toplevel-6395"] = [Shen.type_func, function shen_user_lambda6396(Arg6394) {
  if (Arg6394.length < 0) return [Shen.type_func, shen_user_lambda6396, 0, Arg6394];
  return (Shen.globals["shen.*maxinferences*"] = 1000000)}, 0, [], "reg-kl.shen-toplevel-6395"];

Shen.call_toplevel("reg-kl.shen-toplevel-6395")





Shen.fns["reg-kl.shen-toplevel-6398"] = [Shen.type_func, function shen_user_lambda6399(Arg6397) {
  if (Arg6397.length < 0) return [Shen.type_func, shen_user_lambda6399, 0, Arg6397];
  return (Shen.globals["*maximum-print-sequence-size*"] = 20)}, 0, [], "reg-kl.shen-toplevel-6398"];

Shen.call_toplevel("reg-kl.shen-toplevel-6398")





Shen.fns["reg-kl.shen-toplevel-6401"] = [Shen.type_func, function shen_user_lambda6402(Arg6400) {
  if (Arg6400.length < 0) return [Shen.type_func, shen_user_lambda6402, 0, Arg6400];
  return (Shen.globals["shen.*catch*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6401"];

Shen.call_toplevel("reg-kl.shen-toplevel-6401")





Shen.fns["reg-kl.shen-toplevel-6404"] = [Shen.type_func, function shen_user_lambda6405(Arg6403) {
  if (Arg6403.length < 0) return [Shen.type_func, shen_user_lambda6405, 0, Arg6403];
  return (Shen.globals["shen.*call*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6404"];

Shen.call_toplevel("reg-kl.shen-toplevel-6404")





Shen.fns["reg-kl.shen-toplevel-6407"] = [Shen.type_func, function shen_user_lambda6408(Arg6406) {
  if (Arg6406.length < 0) return [Shen.type_func, shen_user_lambda6408, 0, Arg6406];
  return (Shen.globals["shen.*infs*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6407"];

Shen.call_toplevel("reg-kl.shen-toplevel-6407")





Shen.fns["shen.initialise_arity_table"] = [Shen.type_func, function shen_user_lambda6410(Arg6409) {
  if (Arg6409.length < 1) return [Shen.type_func, shen_user_lambda6410, 1, Arg6409];
  var Arg6409_0 = Arg6409[0];
  return ((Shen.empty$question$(Arg6409_0))
  ? []
  : (((Shen.is_type(Arg6409_0, Shen.type_cons) && Shen.is_type(Arg6409_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["put"], [Arg6409_0[1], [Shen.type_symbol, "arity"], Arg6409_0[2][1], (Shen.globals["*property-vector*"])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [Arg6409_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.initialise_arity_table"]]);})))}, 1, [], "shen.initialise_arity_table"];





Shen.fns["arity"] = [Shen.type_func, function shen_user_lambda6412(Arg6411) {
  if (Arg6411.length < 1) return [Shen.type_func, shen_user_lambda6412, 1, Arg6411];
  var Arg6411_0 = Arg6411[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6411_0, [Shen.type_symbol, "arity"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6414(Arg6413) {
  if (Arg6413.length < 1) return [Shen.type_func, shen_user_lambda6414, 1, Arg6413];
  var Arg6413_0 = Arg6413[0];
  return -1}, 1, [], undefined]);})}, 1, [], "arity"];





Shen.fns["reg-kl.shen-toplevel-6416"] = [Shen.type_func, function shen_user_lambda6417(Arg6415) {
  if (Arg6415.length < 0) return [Shen.type_func, shen_user_lambda6417, 0, Arg6415];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [[Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "interror"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, 5, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "shen.reassemble"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "shen.strong-warning"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "shen.sum"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "shen.<1>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, 2, []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 0, [], "reg-kl.shen-toplevel-6416"];

Shen.call_toplevel("reg-kl.shen-toplevel-6416")





Shen.fns["systemf"] = [Shen.type_func, function shen_user_lambda6419(Arg6418) {
  if (Arg6418.length < 1) return [Shen.type_func, shen_user_lambda6419, 1, Arg6418];
  var Arg6418_0 = Arg6418[0];
  var R0, R1;
  return ((R0 = [Shen.type_symbol, "shen"]),
  (R1 = Shen.call(Shen.fns["get"], [R0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [R0, [Shen.type_symbol, "shen.external-symbols"], Shen.call(Shen.fns["adjoin"], [Arg6418_0, R1]), (Shen.globals["*property-vector*"])]);}))}, 1, [], "systemf"];





Shen.fns["adjoin"] = [Shen.type_func, function shen_user_lambda6421(Arg6420) {
  if (Arg6420.length < 2) return [Shen.type_func, shen_user_lambda6421, 2, Arg6420];
  var Arg6420_0 = Arg6420[0], Arg6420_1 = Arg6420[1];
  return ((Shen.call(Shen.fns["element?"], [Arg6420_0, Arg6420_1]))
  ? Arg6420_1
  : [Shen.type_cons, Arg6420_0, Arg6420_1])}, 2, [], "adjoin"];





Shen.fns["reg-kl.shen-toplevel-6423"] = [Shen.type_func, function shen_user_lambda6424(Arg6422) {
  if (Arg6422.length < 0) return [Shen.type_func, shen_user_lambda6424, 0, Arg6422];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], [Shen.type_cons, [Shen.type_symbol, "!"], [Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "<--"], [Shen.type_cons, [Shen.type_symbol, "&&"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "*language*"], [Shen.type_cons, [Shen.type_symbol, "*implementation*"], [Shen.type_cons, [Shen.type_symbol, "*stinput*"], [Shen.type_cons, [Shen.type_symbol, "*home-directory*"], [Shen.type_cons, [Shen.type_symbol, "*version*"], [Shen.type_cons, [Shen.type_symbol, "*maximum-print-sequence-size*"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_symbol, "*os*"], [Shen.type_cons, [Shen.type_symbol, "*release*"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "*port*"], [Shen.type_cons, [Shen.type_symbol, "*porters*"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, [Shen.type_symbol, "=!"], [Shen.type_cons, [Shen.type_symbol, "$"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, Shen.vector(0), [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "when"], [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "verified"], [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "unit"], [Shen.type_cons, [Shen.type_symbol, "shen.unix"], [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, true, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "time"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "synonyms"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "save"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "run"], [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "quit"], [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "prolog?"], [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "output"], [Shen.type_cons, [Shen.type_symbol, "out"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_symbol, "macro"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_symbol, "make-string"], [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "loaded"], [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_symbol, "file"], [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, false, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "defprolog"], [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, [Shen.type_symbol, "datatype"], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "cond"], [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "cases"], [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "bar!"], [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "abort"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], (Shen.globals["*property-vector*"])]);})}, 0, [], "reg-kl.shen-toplevel-6423"];

Shen.call_toplevel("reg-kl.shen-toplevel-6423")





Shen.fns["specialise"] = [Shen.type_func, function shen_user_lambda6426(Arg6425) {
  if (Arg6425.length < 1) return [Shen.type_func, shen_user_lambda6426, 1, Arg6425];
  var Arg6425_0 = Arg6425[0];
  return ((Shen.globals["shen.*special*"] = [Shen.type_cons, Arg6425_0, (Shen.globals["shen.*special*"])]),
  Arg6425_0)}, 1, [], "specialise"];





Shen.fns["unspecialise"] = [Shen.type_func, function shen_user_lambda6428(Arg6427) {
  if (Arg6427.length < 1) return [Shen.type_func, shen_user_lambda6428, 1, Arg6427];
  var Arg6427_0 = Arg6427[0];
  return ((Shen.globals["shen.*special*"] = Shen.call(Shen.fns["remove"], [Arg6427_0, (Shen.globals["shen.*special*"])])),
  Arg6427_0)}, 1, [], "unspecialise"];










Shen.fns["load"] = [Shen.type_func, function shen_user_lambda6431(Arg6430) {
  if (Arg6430.length < 1) return [Shen.type_func, shen_user_lambda6431, 1, Arg6430];
  var Arg6430_0 = Arg6430[0];
  var R0, R1, R2;
  return (((R0 = Shen.get_time([Shen.type_symbol, "run"])),
  (R1 = Shen.call(Shen.fns["shen.load-help"], [(Shen.globals["shen.*tc*"]), Shen.call(Shen.fns["read-file"], [Arg6430_0])])),
  (R2 = Shen.get_time([Shen.type_symbol, "run"])),
  (R2 = (R2 - R0)),
  Shen.pr(("\x0arun time: " + (Shen.str(R2) + " secs\x0a")), Shen.call(Shen.fns["stoutput"], [])),
  R1),
  (((Shen.globals["shen.*tc*"]))
  ? Shen.pr(("\x0atypechecked in " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["inferences"], []), " inferences\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []))
  : [Shen.type_symbol, "shen.skip"]),
  [Shen.type_symbol, "loaded"])}, 1, [], "load"];





Shen.fns["shen.load-help"] = [Shen.type_func, function shen_user_lambda6433(Arg6432) {
  if (Arg6432.length < 2) return [Shen.type_func, shen_user_lambda6433, 2, Arg6432];
  var Arg6432_0 = Arg6432[0], Arg6432_1 = Arg6432[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg6432_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6435(Arg6434) {
  if (Arg6434.length < 1) return [Shen.type_func, shen_user_lambda6435, 1, Arg6434];
  var Arg6434_0 = Arg6434[0];
  return (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6434_0]), "\x0a", [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined], Arg6432_1]);})
  : ((R0 = Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.remove-synonyms"], Arg6432_1])),
  (R1 = Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.typetable"], R0])),
  Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.assumetype"], R1]),
  (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.typecheck-and-load"], R0]);}, [Shen.type_func, function shen_user_lambda6437(Arg6436) {
  if (Arg6436.length < 2) return [Shen.type_func, shen_user_lambda6437, 2, Arg6436];
  var Arg6436_0 = Arg6436[0], Arg6436_1 = Arg6436[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6436_1, Arg6436_0]);})}, 2, [R1], undefined]);})))}, 2, [], "shen.load-help"];





Shen.fns["shen.remove-synonyms"] = [Shen.type_func, function shen_user_lambda6439(Arg6438) {
  if (Arg6438.length < 1) return [Shen.type_func, shen_user_lambda6439, 1, Arg6438];
  var Arg6438_0 = Arg6438[0];
  return (((Shen.is_type(Arg6438_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], Arg6438_0[1]))))
  ? (Shen.call(Shen.fns["eval"], [Arg6438_0]),
  [])
  : [Shen.type_cons, Arg6438_0, []])}, 1, [], "shen.remove-synonyms"];





Shen.fns["shen.typecheck-and-load"] = [Shen.type_func, function shen_user_lambda6441(Arg6440) {
  if (Arg6440.length < 1) return [Shen.type_func, shen_user_lambda6441, 1, Arg6440];
  var Arg6440_0 = Arg6440[0];
  return (Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg6440_0, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);}))}, 1, [], "shen.typecheck-and-load"];





Shen.fns["shen.typetable"] = [Shen.type_func, function shen_user_lambda6443(Arg6442) {
  if (Arg6442.length < 1) return [Shen.type_func, shen_user_lambda6443, 1, Arg6442];
  var Arg6442_0 = Arg6442[0];
  var R0;
  return (((Shen.is_type(Arg6442_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg6442_0[1])) && Shen.is_type(Arg6442_0[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<sig+rest>"], Arg6442_0[2][2], []])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6442_0[2][1], " lacks a proper signature.\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [Shen.type_cons, [Shen.type_cons, Arg6442_0[2][1], R0], []]))
  : (((Shen.is_type(Arg6442_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6442_0[1])) && (Shen.is_type(Arg6442_0[2], Shen.type_cons) && (Shen.is_type(Arg6442_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg6442_0[2][2][1])) && (Shen.is_type(Arg6442_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6442_0[2][2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6442_0[2][2][2][1][1])) && (Shen.is_type(Arg6442_0[2][2][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6442_0[2][2][2][1][2][2]) && (Shen.is_type(Arg6442_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg6442_0[2][2][2][2][1])) && (Shen.is_type(Arg6442_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6442_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg6442_0[2][2][2][2][2][2][1])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6442_0[2][1], [Shen.type_cons, Arg6442_0[2][2][2][1], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6442_0[2][2][2][2][2][1], []]]]], []]
  : (((Shen.is_type(Arg6442_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6442_0[1])) && Shen.is_type(Arg6442_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6442_0[2][1], " lacks a proper signature.\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [])))}, 1, [], "shen.typetable"];





Shen.fns["shen.assumetype"] = [Shen.type_func, function shen_user_lambda6445(Arg6444) {
  if (Arg6444.length < 1) return [Shen.type_func, shen_user_lambda6445, 1, Arg6444];
  var Arg6444_0 = Arg6444[0];
  return ((Shen.is_type(Arg6444_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg6444_0[1], Arg6444_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.assumetype"]]);}))}, 1, [], "shen.assumetype"];





Shen.fns["shen.unwind-types"] = [Shen.type_func, function shen_user_lambda6447(Arg6446) {
  if (Arg6446.length < 2) return [Shen.type_func, shen_user_lambda6447, 2, Arg6446];
  var Arg6446_0 = Arg6446[0], Arg6446_1 = Arg6446[1];
  return ((Shen.empty$question$(Arg6446_1))
  ? (function() {
  return Shen.simple_error(Shen.error_to_string(Arg6446_0));})
  : (((Shen.is_type(Arg6446_1, Shen.type_cons) && Shen.is_type(Arg6446_1[1], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.remtype"], [Arg6446_1[1][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6446_0, Arg6446_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.unwind-types"]]);})))}, 2, [], "shen.unwind-types"];





Shen.fns["shen.remtype"] = [Shen.type_func, function shen_user_lambda6449(Arg6448) {
  if (Arg6448.length < 1) return [Shen.type_func, shen_user_lambda6449, 1, Arg6448];
  var Arg6448_0 = Arg6448[0];
  return ((Shen.globals["shen.*signedfuncs*"] = Shen.call(Shen.fns["remove"], [Arg6448_0, (Shen.globals["shen.*signedfuncs*"])])),
  Arg6448_0)}, 1, [], "shen.remtype"];





Shen.fns["shen.<sig+rest>"] = [Shen.type_func, function shen_user_lambda6451(Arg6450) {
  if (Arg6450.length < 1) return [Shen.type_func, shen_user_lambda6451, 1, Arg6450];
  var Arg6450_0 = Arg6450[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg6450_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rest>"];





Shen.fns["write-to-file"] = [Shen.type_func, function shen_user_lambda6453(Arg6452) {
  if (Arg6452.length < 2) return [Shen.type_func, shen_user_lambda6453, 2, Arg6452];
  var Arg6452_0 = Arg6452[0], Arg6452_1 = Arg6452[1];
  var R0, R1;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg6452_0, [Shen.type_symbol, "out"])),
  (((typeof(Arg6452_1) == 'string'))
  ? (R1 = Shen.call(Shen.fns["shen.app"], [Arg6452_1, "\x0a\x0a", [Shen.type_symbol, "shen.a"]]))
  : (R1 = Shen.call(Shen.fns["shen.app"], [Arg6452_1, "\x0a\x0a", [Shen.type_symbol, "shen.s"]]))),
  Shen.pr(R1, R0),
  Shen.close(R0),
  Arg6452_1)}, 2, [], "write-to-file"];










Shen.fns["macroexpand"] = [Shen.type_func, function shen_user_lambda6456(Arg6455) {
  if (Arg6455.length < 1) return [Shen.type_func, shen_user_lambda6456, 1, Arg6455];
  var Arg6455_0 = Arg6455[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compose"], [(Shen.globals["*macros*"]), Arg6455_0])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6455_0, R0)))
  ? Arg6455_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [[Shen.type_symbol, "macroexpand"], R0]);})))}, 1, [], "macroexpand"];





Shen.fns["reg-kl.shen-toplevel-6458"] = [Shen.type_func, function shen_user_lambda6459(Arg6457) {
  if (Arg6457.length < 0) return [Shen.type_func, shen_user_lambda6459, 0, Arg6457];
  return (Shen.globals["*macros*"] = [Shen.type_cons, [Shen.type_symbol, "shen.timer-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.cases-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.abs-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.put/get-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.compile-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.let-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.assoc-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.make-string-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.output-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.error-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.prolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.nl-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.@s-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.defmacro-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.defprolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.function-macro"], []]]]]]]]]]]]]]]]]]])}, 0, [], "reg-kl.shen-toplevel-6458"];

Shen.call_toplevel("reg-kl.shen-toplevel-6458")





Shen.fns["shen.error-macro"] = [Shen.type_func, function shen_user_lambda6461(Arg6460) {
  if (Arg6460.length < 1) return [Shen.type_func, shen_user_lambda6461, 1, Arg6460];
  var Arg6460_0 = Arg6460[0];
  return (((Shen.is_type(Arg6460_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "error"], Arg6460_0[1])) && Shen.is_type(Arg6460_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6460_0[2][1], Arg6460_0[2][2]]), []]]
  : Arg6460_0)}, 1, [], "shen.error-macro"];





Shen.fns["shen.output-macro"] = [Shen.type_func, function shen_user_lambda6463(Arg6462) {
  if (Arg6462.length < 1) return [Shen.type_func, shen_user_lambda6463, 1, Arg6462];
  var Arg6462_0 = Arg6462[0];
  return (((Shen.is_type(Arg6462_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "output"], Arg6462_0[1])) && Shen.is_type(Arg6462_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6462_0[2][1], Arg6462_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]]
  : Arg6462_0)}, 1, [], "shen.output-macro"];





Shen.fns["shen.make-string-macro"] = [Shen.type_func, function shen_user_lambda6465(Arg6464) {
  if (Arg6464.length < 1) return [Shen.type_func, shen_user_lambda6465, 1, Arg6464];
  var Arg6464_0 = Arg6464[0];
  return (((Shen.is_type(Arg6464_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "make-string"], Arg6464_0[1])) && Shen.is_type(Arg6464_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr"], [Arg6464_0[2][1], Arg6464_0[2][2]]);})
  : Arg6464_0)}, 1, [], "shen.make-string-macro"];





Shen.fns["shen.compose"] = [Shen.type_func, function shen_user_lambda6467(Arg6466) {
  if (Arg6466.length < 2) return [Shen.type_func, shen_user_lambda6467, 2, Arg6466];
  var Arg6466_0 = Arg6466[0], Arg6466_1 = Arg6466[1];
  return ((Shen.empty$question$(Arg6466_0))
  ? Arg6466_1
  : ((Shen.is_type(Arg6466_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.compose"], [Arg6466_0[2], Shen.call(Arg6466_0[1], [Arg6466_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compose"]]);})))}, 2, [], "shen.compose"];





Shen.fns["shen.compile-macro"] = [Shen.type_func, function shen_user_lambda6469(Arg6468) {
  if (Arg6468.length < 1) return [Shen.type_func, shen_user_lambda6469, 1, Arg6468];
  var Arg6468_0 = Arg6468[0];
  return (((Shen.is_type(Arg6468_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "compile"], Arg6468_0[1])) && (Shen.is_type(Arg6468_0[2], Shen.type_cons) && (Shen.is_type(Arg6468_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6468_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, Arg6468_0[2][1], [Shen.type_cons, Arg6468_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "E"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error here: ~S~%", [Shen.type_cons, [Shen.type_symbol, "E"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error~%", []]], []]]]], []]]], []]]]]
  : Arg6468_0)}, 1, [], "shen.compile-macro"];





Shen.fns["shen.prolog-macro"] = [Shen.type_func, function shen_user_lambda6471(Arg6470) {
  if (Arg6470.length < 1) return [Shen.type_func, shen_user_lambda6471, 1, Arg6470];
  var Arg6470_0 = Arg6470[0];
  return (((Shen.is_type(Arg6470_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "prolog?"], Arg6470_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.intprolog"], [Shen.type_cons, Shen.call(Shen.fns["shen.prolog-form"], [Arg6470_0[2]]), []]]
  : Arg6470_0)}, 1, [], "shen.prolog-macro"];





Shen.fns["shen.defprolog-macro"] = [Shen.type_func, function shen_user_lambda6473(Arg6472) {
  if (Arg6472.length < 1) return [Shen.type_func, shen_user_lambda6473, 1, Arg6472];
  var Arg6472_0 = Arg6472[0];
  return (((Shen.is_type(Arg6472_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defprolog"], Arg6472_0[1])) && Shen.is_type(Arg6472_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<defprolog>"], Arg6472_0[2], [Shen.type_func, function shen_user_lambda6475(Arg6474) {
  if (Arg6474.length < 2) return [Shen.type_func, shen_user_lambda6475, 2, Arg6474];
  var Arg6474_0 = Arg6474[0], Arg6474_1 = Arg6474[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-error"], [Arg6474_0[2][1], Arg6474_1]);})}, 2, [Arg6472_0], undefined]]);})
  : Arg6472_0)}, 1, [], "shen.defprolog-macro"];





Shen.fns["shen.prolog-form"] = [Shen.type_func, function shen_user_lambda6477(Arg6476) {
  if (Arg6476.length < 1) return [Shen.type_func, shen_user_lambda6477, 1, Arg6476];
  var Arg6476_0 = Arg6476[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.cons_form"], Arg6476_0])]);})}, 1, [], "shen.prolog-form"];





Shen.fns["shen.datatype-macro"] = [Shen.type_func, function shen_user_lambda6479(Arg6478) {
  if (Arg6478.length < 1) return [Shen.type_func, shen_user_lambda6479, 1, Arg6478];
  var Arg6478_0 = Arg6478[0];
  return (((Shen.is_type(Arg6478_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "datatype"], Arg6478_0[1])) && Shen.is_type(Arg6478_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, Shen.intern(("type#" + Shen.str(Arg6478_0[2][1]))), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.<datatype-rules>"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6478_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-error"], []]], []]]]], []]]]
  : Arg6478_0)}, 1, [], "shen.datatype-macro"];





Shen.fns["shen.defmacro-macro"] = [Shen.type_func, function shen_user_lambda6481(Arg6480) {
  if (Arg6480.length < 1) return [Shen.type_func, shen_user_lambda6481, 1, Arg6480];
  var Arg6480_0 = Arg6480[0];
  var R0, R1;
  return (((Shen.is_type(Arg6480_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], Arg6480_0[1])) && Shen.is_type(Arg6480_0[2], Shen.type_cons))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6480_0[2][1], Shen.call(Shen.fns["append"], [Arg6480_0[2][2], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]])]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, Arg6480_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "macro"], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [], [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]]]),
  R1)
  : Arg6480_0)}, 1, [], "shen.defmacro-macro"];





Shen.fns["shen.<defmacro>"] = [Shen.type_func, function shen_user_lambda6483(Arg6482) {
  if (Arg6482.length < 1) return [Shen.type_func, shen_user_lambda6483, 1, Arg6482];
  var Arg6482_0 = Arg6482[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6482_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macrorules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<defmacro>"];





Shen.fns["shen.<macrorules>"] = [Shen.type_func, function shen_user_lambda6485(Arg6484) {
  if (Arg6484.length < 1) return [Shen.type_func, shen_user_lambda6485, 1, Arg6484];
  var Arg6484_0 = Arg6484[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<macrorule>"], [Arg6484_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macrorules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), []])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<macrorule>"], [Arg6484_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "Parse_X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "Parse_X"], []]]]])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<macrorules>"];





Shen.fns["shen.<macrorule>"] = [Shen.type_func, function shen_user_lambda6487(Arg6486) {
  if (Arg6486.length < 1) return [Shen.type_func, shen_user_lambda6487, 1, Arg6486];
  var Arg6486_0 = Arg6486[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6486_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "->"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, [Shen.type_symbol, "where"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R2]), []])]])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6486_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "->"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), []])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6486_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "<-"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, [Shen.type_symbol, "where"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R2]), []])]])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6486_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "<-"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), []])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<macrorule>"];





Shen.fns["shen.<macroaction>"] = [Shen.type_func, function shen_user_lambda6489(Arg6488) {
  if (Arg6488.length < 1) return [Shen.type_func, shen_user_lambda6489, 1, Arg6488];
  var Arg6488_0 = Arg6488[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<action>"], [Arg6488_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.walk"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]], []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<macroaction>"];





Shen.fns["shen.@s-macro"] = [Shen.type_func, function shen_user_lambda6491(Arg6490) {
  if (Arg6490.length < 1) return [Shen.type_func, shen_user_lambda6491, 1, Arg6490];
  var Arg6490_0 = Arg6490[0];
  var R0;
  return (((Shen.is_type(Arg6490_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6490_0[1])) && (Shen.is_type(Arg6490_0[2], Shen.type_cons) && (Shen.is_type(Arg6490_0[2][2], Shen.type_cons) && Shen.is_type(Arg6490_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Arg6490_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Arg6490_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6490_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6490_0[1])) && (Shen.is_type(Arg6490_0[2], Shen.type_cons) && (Shen.is_type(Arg6490_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6490_0[2][2][2]) && (typeof(Arg6490_0[2][1]) == 'string')))))))
  ? ((R0 = Shen.call(Shen.fns["explode"], [Arg6490_0[2][1]])),
  (((Shen.call(Shen.fns["length"], [R0]) > 1))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Shen.call(Shen.fns["append"], [R0, Arg6490_0[2][2]])]]);})
  : Arg6490_0))
  : Arg6490_0))}, 1, [], "shen.@s-macro"];





Shen.fns["shen.synonyms-macro"] = [Shen.type_func, function shen_user_lambda6493(Arg6492) {
  if (Arg6492.length < 1) return [Shen.type_func, shen_user_lambda6493, 1, Arg6492];
  var Arg6492_0 = Arg6492[0];
  return (((Shen.is_type(Arg6492_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "synonyms"], Arg6492_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-help"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6492_0[2]]), []]]
  : Arg6492_0)}, 1, [], "shen.synonyms-macro"];





Shen.fns["shen.nl-macro"] = [Shen.type_func, function shen_user_lambda6495(Arg6494) {
  if (Arg6494.length < 1) return [Shen.type_func, shen_user_lambda6495, 1, Arg6494];
  var Arg6494_0 = Arg6494[0];
  return (((Shen.is_type(Arg6494_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "nl"], Arg6494_0[1])) && Shen.empty$question$(Arg6494_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, 1, []]]
  : Arg6494_0)}, 1, [], "shen.nl-macro"];





Shen.fns["shen.assoc-macro"] = [Shen.type_func, function shen_user_lambda6497(Arg6496) {
  if (Arg6496.length < 1) return [Shen.type_func, shen_user_lambda6497, 1, Arg6496];
  var Arg6496_0 = Arg6496[0];
  return (((Shen.is_type(Arg6496_0, Shen.type_cons) && (Shen.is_type(Arg6496_0[2], Shen.type_cons) && (Shen.is_type(Arg6496_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6496_0[2][2][2], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6496_0[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "do"], []]]]]]]]]]))))))
  ? [Shen.type_cons, Arg6496_0[1], [Shen.type_cons, Arg6496_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assoc-macro"], [[Shen.type_cons, Arg6496_0[1], Arg6496_0[2][2]]]), []]]]
  : Arg6496_0)}, 1, [], "shen.assoc-macro"];





Shen.fns["shen.let-macro"] = [Shen.type_func, function shen_user_lambda6499(Arg6498) {
  if (Arg6498.length < 1) return [Shen.type_func, shen_user_lambda6499, 1, Arg6498];
  var Arg6498_0 = Arg6498[0];
  return (((Shen.is_type(Arg6498_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6498_0[1])) && (Shen.is_type(Arg6498_0[2], Shen.type_cons) && (Shen.is_type(Arg6498_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6498_0[2][2][2], Shen.type_cons) && Shen.is_type(Arg6498_0[2][2][2][2], Shen.type_cons)))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6498_0[2][1], [Shen.type_cons, Arg6498_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], Arg6498_0[2][2][2]]]), []]]]]
  : Arg6498_0)}, 1, [], "shen.let-macro"];





Shen.fns["shen.abs-macro"] = [Shen.type_func, function shen_user_lambda6501(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6501, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  return (((Shen.is_type(Arg6500_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6500_0[1])) && (Shen.is_type(Arg6500_0[2], Shen.type_cons) && (Shen.is_type(Arg6500_0[2][2], Shen.type_cons) && Shen.is_type(Arg6500_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg6500_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.abs-macro"], [[Shen.type_cons, [Shen.type_symbol, "/."], Arg6500_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6500_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6500_0[1])) && (Shen.is_type(Arg6500_0[2], Shen.type_cons) && (Shen.is_type(Arg6500_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6500_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], Arg6500_0[2]]
  : Arg6500_0))}, 1, [], "shen.abs-macro"];





Shen.fns["shen.cases-macro"] = [Shen.type_func, function shen_user_lambda6503(Arg6502) {
  if (Arg6502.length < 1) return [Shen.type_func, shen_user_lambda6503, 1, Arg6502];
  var Arg6502_0 = Arg6502[0];
  return (((Shen.is_type(Arg6502_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6502_0[1])) && (Shen.is_type(Arg6502_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6502_0[2][1])) && Shen.is_type(Arg6502_0[2][2], Shen.type_cons))))))
  ? Arg6502_0[2][2][1]
  : (((Shen.is_type(Arg6502_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6502_0[1])) && (Shen.is_type(Arg6502_0[2], Shen.type_cons) && (Shen.is_type(Arg6502_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6502_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6502_0[2][1], [Shen.type_cons, Arg6502_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, "error: cases exhausted", []]], []]]]]
  : (((Shen.is_type(Arg6502_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6502_0[1])) && (Shen.is_type(Arg6502_0[2], Shen.type_cons) && Shen.is_type(Arg6502_0[2][2], Shen.type_cons)))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6502_0[2][1], [Shen.type_cons, Arg6502_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.cases-macro"], [[Shen.type_cons, [Shen.type_symbol, "cases"], Arg6502_0[2][2][2]]]), []]]]]
  : (((Shen.is_type(Arg6502_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6502_0[1])) && (Shen.is_type(Arg6502_0[2], Shen.type_cons) && Shen.empty$question$(Arg6502_0[2][2])))))
  ? (function() {
  return Shen.simple_error("error: odd number of case elements\x0a");})
  : Arg6502_0))))}, 1, [], "shen.cases-macro"];





Shen.fns["shen.timer-macro"] = [Shen.type_func, function shen_user_lambda6505(Arg6504) {
  if (Arg6504.length < 1) return [Shen.type_func, shen_user_lambda6505, 1, Arg6504];
  var Arg6504_0 = Arg6504[0];
  return (((Shen.is_type(Arg6504_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "time"], Arg6504_0[1])) && (Shen.is_type(Arg6504_0[2], Shen.type_cons) && Shen.empty$question$(Arg6504_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6504_0[2][1], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Time"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_symbol, "Message"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, "\x0arun time: ", [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "Time"], []]], [Shen.type_cons, " secs\x0a", []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]]]]]]]]]]]);})
  : Arg6504_0)}, 1, [], "shen.timer-macro"];





Shen.fns["shen.tuple-up"] = [Shen.type_func, function shen_user_lambda6507(Arg6506) {
  if (Arg6506.length < 1) return [Shen.type_func, shen_user_lambda6507, 1, Arg6506];
  var Arg6506_0 = Arg6506[0];
  return ((Shen.is_type(Arg6506_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Arg6506_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.tuple-up"], [Arg6506_0[2]]), []]]]
  : Arg6506_0)}, 1, [], "shen.tuple-up"];





Shen.fns["shen.put/get-macro"] = [Shen.type_func, function shen_user_lambda6509(Arg6508) {
  if (Arg6508.length < 1) return [Shen.type_func, shen_user_lambda6509, 1, Arg6508];
  var Arg6508_0 = Arg6508[0];
  return (((Shen.is_type(Arg6508_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "put"], Arg6508_0[1])) && (Shen.is_type(Arg6508_0[2], Shen.type_cons) && (Shen.is_type(Arg6508_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6508_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6508_0[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, Arg6508_0[2][1], [Shen.type_cons, Arg6508_0[2][2][1], [Shen.type_cons, Arg6508_0[2][2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]]
  : (((Shen.is_type(Arg6508_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "get"], Arg6508_0[1])) && (Shen.is_type(Arg6508_0[2], Shen.type_cons) && (Shen.is_type(Arg6508_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6508_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, Arg6508_0[2][1], [Shen.type_cons, Arg6508_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]
  : Arg6508_0))}, 1, [], "shen.put/get-macro"];





Shen.fns["shen.function-macro"] = [Shen.type_func, function shen_user_lambda6511(Arg6510) {
  if (Arg6510.length < 1) return [Shen.type_func, shen_user_lambda6511, 1, Arg6510];
  var Arg6510_0 = Arg6510[0];
  return (((Shen.is_type(Arg6510_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg6510_0[1])) && (Shen.is_type(Arg6510_0[2], Shen.type_cons) && Shen.empty$question$(Arg6510_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction"], [Arg6510_0[2][1], Shen.call(Shen.fns["arity"], [Arg6510_0[2][1]])]);})
  : Arg6510_0)}, 1, [], "shen.function-macro"];





Shen.fns["shen.function-abstraction"] = [Shen.type_func, function shen_user_lambda6513(Arg6512) {
  if (Arg6512.length < 2) return [Shen.type_func, shen_user_lambda6513, 2, Arg6512];
  var Arg6512_0 = Arg6512[0], Arg6512_1 = Arg6512[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6512_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Arg6512_0, []]]
  : ((Shen.unwind_tail(Shen.$eq$(-1, Arg6512_1)))
  ? Arg6512_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction-help"], [Arg6512_0, Arg6512_1, []]);})))}, 2, [], "shen.function-abstraction"];





Shen.fns["shen.function-abstraction-help"] = [Shen.type_func, function shen_user_lambda6515(Arg6514) {
  if (Arg6514.length < 3) return [Shen.type_func, shen_user_lambda6515, 3, Arg6514];
  var Arg6514_0 = Arg6514[0], Arg6514_1 = Arg6514[1], Arg6514_2 = Arg6514[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6514_1)))
  ? [Shen.type_cons, Arg6514_0, Arg6514_2]
  : ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["shen.function-abstraction-help"], [Arg6514_0, (Arg6514_1 - 1), Shen.call(Shen.fns["append"], [Arg6514_2, [Shen.type_cons, R0, []]])]), []]]]))}, 3, [], "shen.function-abstraction-help"];





Shen.fns["undefmacro"] = [Shen.type_func, function shen_user_lambda6517(Arg6516) {
  if (Arg6516.length < 1) return [Shen.type_func, shen_user_lambda6517, 1, Arg6516];
  var Arg6516_0 = Arg6516[0];
  return ((Shen.globals["*macros*"] = Shen.call(Shen.fns["remove"], [Arg6516_0, (Shen.globals["*macros*"])])),
  Arg6516_0)}, 1, [], "undefmacro"];










Shen.fns["declare"] = [Shen.type_func, function shen_user_lambda7336(Arg7335) {
  if (Arg7335.length < 2) return [Shen.type_func, shen_user_lambda7336, 2, Arg7335];
  var Arg7335_0 = Arg7335[0], Arg7335_1 = Arg7335[1];
  var R0, R1, R2;
  return ((Shen.globals["shen.*signedfuncs*"] = Shen.call(Shen.fns["adjoin"], [Arg7335_0, (Shen.globals["shen.*signedfuncs*"])])),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen.variancy-test"], [Arg7335_0, Arg7335_1]);}, [Shen.type_func, function shen_user_lambda7338(Arg7337) {
  if (Arg7337.length < 1) return [Shen.type_func, shen_user_lambda7338, 1, Arg7337];
  var Arg7337_0 = Arg7337[0];
  return [Shen.type_symbol, "shen.skip"]}, 1, [], undefined]),
  (R0 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.demodulate"], [Arg7335_1])])),
  (R1 = Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg7335_0])),
  (R2 = Shen.call(Shen.fns["shen.parameters"], [1])),
  (R0 = [Shen.type_cons, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "X"], []]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, R0, []]]], []], []]]]),
  (R0 = Shen.call(Shen.fns["shen.aum"], [R0, R2])),
  (R0 = Shen.call(Shen.fns["shen.aum_to_shen"], [R0])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, R1, Shen.call(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R2]),
  Arg7335_0)}, 2, [], "declare"];





Shen.fns["shen.demodulate"] = [Shen.type_func, function shen_user_lambda7340(Arg7339) {
  if (Arg7339.length < 1) return [Shen.type_func, shen_user_lambda7340, 1, Arg7339];
  var Arg7339_0 = Arg7339[0];
  return (function() {
  return Shen.call_tail(Shen.fns["fix"], [[Shen.type_symbol, "shen.demodh"], Arg7339_0]);})}, 1, [], "shen.demodulate"];





Shen.fns["shen.demodh"] = [Shen.type_func, function shen_user_lambda7342(Arg7341) {
  if (Arg7341.length < 1) return [Shen.type_func, shen_user_lambda7342, 1, Arg7341];
  var Arg7341_0 = Arg7341[0];
  return ((Shen.is_type(Arg7341_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.demodh"], Arg7341_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.demod-atom"], [Arg7341_0]);}))}, 1, [], "shen.demodh"];





Shen.fns["shen.demod-atom"] = [Shen.type_func, function shen_user_lambda7344(Arg7343) {
  if (Arg7343.length < 1) return [Shen.type_func, shen_user_lambda7344, 1, Arg7343];
  var Arg7343_0 = Arg7343[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["assoc"], [Arg7343_0, (Shen.globals["shen.*synonyms*"])])),
  ((Shen.empty$question$(R0))
  ? Arg7343_0
  : R0[2]))}, 1, [], "shen.demod-atom"];





Shen.fns["shen.variancy-test"] = [Shen.type_func, function shen_user_lambda7346(Arg7345) {
  if (Arg7345.length < 2) return [Shen.type_func, shen_user_lambda7346, 2, Arg7345];
  var Arg7345_0 = Arg7345[0], Arg7345_1 = Arg7345[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg7345_0, [Shen.type_symbol, "B"]])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.call(Shen.fns["shen.variant?"], [R0, Arg7345_1]))
  ? [Shen.type_symbol, "shen.skip"]
  : Shen.pr(("warning: changing the type of " + Shen.call(Shen.fns["shen.app"], [Arg7345_0, " may create errors\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])))),
  [Shen.type_symbol, "shen.skip"])}, 2, [], "shen.variancy-test"];





Shen.fns["shen.variant?"] = [Shen.type_func, function shen_user_lambda7348(Arg7347) {
  if (Arg7347.length < 2) return [Shen.type_func, shen_user_lambda7348, 2, Arg7347];
  var Arg7347_0 = Arg7347[0], Arg7347_1 = Arg7347[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7347_1, Arg7347_0)))
  ? true
  : (((Shen.is_type(Arg7347_0, Shen.type_cons) && (Shen.is_type(Arg7347_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7347_1[1], Arg7347_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Arg7347_0[2], Arg7347_1[2]]);})
  : (((Shen.is_type(Arg7347_0, Shen.type_cons) && (Shen.is_type(Arg7347_1, Shen.type_cons) && (Shen.call(Shen.fns["shen.pvar?"], [Arg7347_0[1]]) && Shen.call(Shen.fns["variable?"], [Arg7347_1[1]])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg7347_0[1], Arg7347_0[2]]), Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg7347_1[1], Arg7347_1[2]])]);})
  : (((Shen.is_type(Arg7347_0, Shen.type_cons) && (Shen.is_type(Arg7347_0[1], Shen.type_cons) && (Shen.is_type(Arg7347_1, Shen.type_cons) && Shen.is_type(Arg7347_1[1], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["append"], [Arg7347_0[1], Arg7347_0[2]]), Shen.call(Shen.fns["append"], [Arg7347_1[1], Arg7347_1[2]])]);})
  : false))))}, 2, [], "shen.variant?"];





Shen.fns["reg-kl.shen-toplevel-7350"] = [Shen.type_func, function shen_user_lambda7351(Arg7349) {
  if (Arg7349.length < 0) return [Shen.type_func, shen_user_lambda7351, 0, Arg7349];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7350"];

Shen.call_toplevel("reg-kl.shen-toplevel-7350")





Shen.fns["reg-kl.shen-toplevel-7353"] = [Shen.type_func, function shen_user_lambda7354(Arg7352) {
  if (Arg7352.length < 0) return [Shen.type_func, shen_user_lambda7354, 0, Arg7352];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7353"];

Shen.call_toplevel("reg-kl.shen-toplevel-7353")





Shen.fns["reg-kl.shen-toplevel-7356"] = [Shen.type_func, function shen_user_lambda7357(Arg7355) {
  if (Arg7355.length < 0) return [Shen.type_func, shen_user_lambda7357, 0, Arg7355];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7356"];

Shen.call_toplevel("reg-kl.shen-toplevel-7356")





Shen.fns["reg-kl.shen-toplevel-7359"] = [Shen.type_func, function shen_user_lambda7360(Arg7358) {
  if (Arg7358.length < 0) return [Shen.type_func, shen_user_lambda7360, 0, Arg7358];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.app"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7359"];

Shen.call_toplevel("reg-kl.shen-toplevel-7359")





Shen.fns["reg-kl.shen-toplevel-7362"] = [Shen.type_func, function shen_user_lambda7363(Arg7361) {
  if (Arg7361.length < 0) return [Shen.type_func, shen_user_lambda7363, 0, Arg7361];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7362"];

Shen.call_toplevel("reg-kl.shen-toplevel-7362")





Shen.fns["reg-kl.shen-toplevel-7365"] = [Shen.type_func, function shen_user_lambda7366(Arg7364) {
  if (Arg7364.length < 0) return [Shen.type_func, shen_user_lambda7366, 0, Arg7364];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7365"];

Shen.call_toplevel("reg-kl.shen-toplevel-7365")





Shen.fns["reg-kl.shen-toplevel-7368"] = [Shen.type_func, function shen_user_lambda7369(Arg7367) {
  if (Arg7367.length < 0) return [Shen.type_func, shen_user_lambda7369, 0, Arg7367];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7368"];

Shen.call_toplevel("reg-kl.shen-toplevel-7368")





Shen.fns["reg-kl.shen-toplevel-7371"] = [Shen.type_func, function shen_user_lambda7372(Arg7370) {
  if (Arg7370.length < 0) return [Shen.type_func, shen_user_lambda7372, 0, Arg7370];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7371"];

Shen.call_toplevel("reg-kl.shen-toplevel-7371")





Shen.fns["reg-kl.shen-toplevel-7374"] = [Shen.type_func, function shen_user_lambda7375(Arg7373) {
  if (Arg7373.length < 0) return [Shen.type_func, shen_user_lambda7375, 0, Arg7373];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7374"];

Shen.call_toplevel("reg-kl.shen-toplevel-7374")





Shen.fns["reg-kl.shen-toplevel-7377"] = [Shen.type_func, function shen_user_lambda7378(Arg7376) {
  if (Arg7376.length < 0) return [Shen.type_func, shen_user_lambda7378, 0, Arg7376];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7377"];

Shen.call_toplevel("reg-kl.shen-toplevel-7377")





Shen.fns["reg-kl.shen-toplevel-7380"] = [Shen.type_func, function shen_user_lambda7381(Arg7379) {
  if (Arg7379.length < 0) return [Shen.type_func, shen_user_lambda7381, 0, Arg7379];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7380"];

Shen.call_toplevel("reg-kl.shen-toplevel-7380")





Shen.fns["reg-kl.shen-toplevel-7383"] = [Shen.type_func, function shen_user_lambda7384(Arg7382) {
  if (Arg7382.length < 0) return [Shen.type_func, shen_user_lambda7384, 0, Arg7382];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7383"];

Shen.call_toplevel("reg-kl.shen-toplevel-7383")





Shen.fns["reg-kl.shen-toplevel-7386"] = [Shen.type_func, function shen_user_lambda7387(Arg7385) {
  if (Arg7385.length < 0) return [Shen.type_func, shen_user_lambda7387, 0, Arg7385];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7386"];

Shen.call_toplevel("reg-kl.shen-toplevel-7386")





Shen.fns["reg-kl.shen-toplevel-7389"] = [Shen.type_func, function shen_user_lambda7390(Arg7388) {
  if (Arg7388.length < 0) return [Shen.type_func, shen_user_lambda7390, 0, Arg7388];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7389"];

Shen.call_toplevel("reg-kl.shen-toplevel-7389")





Shen.fns["reg-kl.shen-toplevel-7392"] = [Shen.type_func, function shen_user_lambda7393(Arg7391) {
  if (Arg7391.length < 0) return [Shen.type_func, shen_user_lambda7393, 0, Arg7391];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7392"];

Shen.call_toplevel("reg-kl.shen-toplevel-7392")





Shen.fns["reg-kl.shen-toplevel-7395"] = [Shen.type_func, function shen_user_lambda7396(Arg7394) {
  if (Arg7394.length < 0) return [Shen.type_func, shen_user_lambda7396, 0, Arg7394];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7395"];

Shen.call_toplevel("reg-kl.shen-toplevel-7395")





Shen.fns["reg-kl.shen-toplevel-7398"] = [Shen.type_func, function shen_user_lambda7399(Arg7397) {
  if (Arg7397.length < 0) return [Shen.type_func, shen_user_lambda7399, 0, Arg7397];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7398"];

Shen.call_toplevel("reg-kl.shen-toplevel-7398")





Shen.fns["reg-kl.shen-toplevel-7401"] = [Shen.type_func, function shen_user_lambda7402(Arg7400) {
  if (Arg7400.length < 0) return [Shen.type_func, shen_user_lambda7402, 0, Arg7400];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7401"];

Shen.call_toplevel("reg-kl.shen-toplevel-7401")





Shen.fns["reg-kl.shen-toplevel-7404"] = [Shen.type_func, function shen_user_lambda7405(Arg7403) {
  if (Arg7403.length < 0) return [Shen.type_func, shen_user_lambda7405, 0, Arg7403];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<!>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7404"];

Shen.call_toplevel("reg-kl.shen-toplevel-7404")





Shen.fns["reg-kl.shen-toplevel-7407"] = [Shen.type_func, function shen_user_lambda7408(Arg7406) {
  if (Arg7406.length < 0) return [Shen.type_func, shen_user_lambda7408, 0, Arg7406];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7407"];

Shen.call_toplevel("reg-kl.shen-toplevel-7407")





Shen.fns["reg-kl.shen-toplevel-7410"] = [Shen.type_func, function shen_user_lambda7411(Arg7409) {
  if (Arg7409.length < 0) return [Shen.type_func, shen_user_lambda7411, 0, Arg7409];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7410"];

Shen.call_toplevel("reg-kl.shen-toplevel-7410")





Shen.fns["reg-kl.shen-toplevel-7413"] = [Shen.type_func, function shen_user_lambda7414(Arg7412) {
  if (Arg7412.length < 0) return [Shen.type_func, shen_user_lambda7414, 0, Arg7412];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7413"];

Shen.call_toplevel("reg-kl.shen-toplevel-7413")





Shen.fns["reg-kl.shen-toplevel-7416"] = [Shen.type_func, function shen_user_lambda7417(Arg7415) {
  if (Arg7415.length < 0) return [Shen.type_func, shen_user_lambda7417, 0, Arg7415];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7416"];

Shen.call_toplevel("reg-kl.shen-toplevel-7416")





Shen.fns["reg-kl.shen-toplevel-7419"] = [Shen.type_func, function shen_user_lambda7420(Arg7418) {
  if (Arg7418.length < 0) return [Shen.type_func, shen_user_lambda7420, 0, Arg7418];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7419"];

Shen.call_toplevel("reg-kl.shen-toplevel-7419")





Shen.fns["reg-kl.shen-toplevel-7422"] = [Shen.type_func, function shen_user_lambda7423(Arg7421) {
  if (Arg7421.length < 0) return [Shen.type_func, shen_user_lambda7423, 0, Arg7421];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "string"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7422"];

Shen.call_toplevel("reg-kl.shen-toplevel-7422")





Shen.fns["reg-kl.shen-toplevel-7425"] = [Shen.type_func, function shen_user_lambda7426(Arg7424) {
  if (Arg7424.length < 0) return [Shen.type_func, shen_user_lambda7426, 0, Arg7424];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7425"];

Shen.call_toplevel("reg-kl.shen-toplevel-7425")





Shen.fns["reg-kl.shen-toplevel-7428"] = [Shen.type_func, function shen_user_lambda7429(Arg7427) {
  if (Arg7427.length < 0) return [Shen.type_func, shen_user_lambda7429, 0, Arg7427];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7428"];

Shen.call_toplevel("reg-kl.shen-toplevel-7428")





Shen.fns["reg-kl.shen-toplevel-7431"] = [Shen.type_func, function shen_user_lambda7432(Arg7430) {
  if (Arg7430.length < 0) return [Shen.type_func, shen_user_lambda7432, 0, Arg7430];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "format"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7431"];

Shen.call_toplevel("reg-kl.shen-toplevel-7431")





Shen.fns["reg-kl.shen-toplevel-7434"] = [Shen.type_func, function shen_user_lambda7435(Arg7433) {
  if (Arg7433.length < 0) return [Shen.type_func, shen_user_lambda7435, 0, Arg7433];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7434"];

Shen.call_toplevel("reg-kl.shen-toplevel-7434")





Shen.fns["reg-kl.shen-toplevel-7437"] = [Shen.type_func, function shen_user_lambda7438(Arg7436) {
  if (Arg7436.length < 0) return [Shen.type_func, shen_user_lambda7438, 0, Arg7436];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7437"];

Shen.call_toplevel("reg-kl.shen-toplevel-7437")





Shen.fns["reg-kl.shen-toplevel-7440"] = [Shen.type_func, function shen_user_lambda7441(Arg7439) {
  if (Arg7439.length < 0) return [Shen.type_func, shen_user_lambda7441, 0, Arg7439];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7440"];

Shen.call_toplevel("reg-kl.shen-toplevel-7440")





Shen.fns["reg-kl.shen-toplevel-7443"] = [Shen.type_func, function shen_user_lambda7444(Arg7442) {
  if (Arg7442.length < 0) return [Shen.type_func, shen_user_lambda7444, 0, Arg7442];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7443"];

Shen.call_toplevel("reg-kl.shen-toplevel-7443")





Shen.fns["reg-kl.shen-toplevel-7446"] = [Shen.type_func, function shen_user_lambda7447(Arg7445) {
  if (Arg7445.length < 0) return [Shen.type_func, shen_user_lambda7447, 0, Arg7445];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7446"];

Shen.call_toplevel("reg-kl.shen-toplevel-7446")





Shen.fns["reg-kl.shen-toplevel-7449"] = [Shen.type_func, function shen_user_lambda7450(Arg7448) {
  if (Arg7448.length < 0) return [Shen.type_func, shen_user_lambda7450, 0, Arg7448];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7449"];

Shen.call_toplevel("reg-kl.shen-toplevel-7449")





Shen.fns["reg-kl.shen-toplevel-7452"] = [Shen.type_func, function shen_user_lambda7453(Arg7451) {
  if (Arg7451.length < 0) return [Shen.type_func, shen_user_lambda7453, 0, Arg7451];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7452"];

Shen.call_toplevel("reg-kl.shen-toplevel-7452")





Shen.fns["reg-kl.shen-toplevel-7455"] = [Shen.type_func, function shen_user_lambda7456(Arg7454) {
  if (Arg7454.length < 0) return [Shen.type_func, shen_user_lambda7456, 0, Arg7454];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7455"];

Shen.call_toplevel("reg-kl.shen-toplevel-7455")





Shen.fns["reg-kl.shen-toplevel-7458"] = [Shen.type_func, function shen_user_lambda7459(Arg7457) {
  if (Arg7457.length < 0) return [Shen.type_func, shen_user_lambda7459, 0, Arg7457];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7458"];

Shen.call_toplevel("reg-kl.shen-toplevel-7458")





Shen.fns["reg-kl.shen-toplevel-7461"] = [Shen.type_func, function shen_user_lambda7462(Arg7460) {
  if (Arg7460.length < 0) return [Shen.type_func, shen_user_lambda7462, 0, Arg7460];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7461"];

Shen.call_toplevel("reg-kl.shen-toplevel-7461")





Shen.fns["reg-kl.shen-toplevel-7464"] = [Shen.type_func, function shen_user_lambda7465(Arg7463) {
  if (Arg7463.length < 0) return [Shen.type_func, shen_user_lambda7465, 0, Arg7463];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7464"];

Shen.call_toplevel("reg-kl.shen-toplevel-7464")





Shen.fns["reg-kl.shen-toplevel-7467"] = [Shen.type_func, function shen_user_lambda7468(Arg7466) {
  if (Arg7466.length < 0) return [Shen.type_func, shen_user_lambda7468, 0, Arg7466];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7467"];

Shen.call_toplevel("reg-kl.shen-toplevel-7467")





Shen.fns["reg-kl.shen-toplevel-7470"] = [Shen.type_func, function shen_user_lambda7471(Arg7469) {
  if (Arg7469.length < 0) return [Shen.type_func, shen_user_lambda7471, 0, Arg7469];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7470"];

Shen.call_toplevel("reg-kl.shen-toplevel-7470")





Shen.fns["reg-kl.shen-toplevel-7473"] = [Shen.type_func, function shen_user_lambda7474(Arg7472) {
  if (Arg7472.length < 0) return [Shen.type_func, shen_user_lambda7474, 0, Arg7472];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7473"];

Shen.call_toplevel("reg-kl.shen-toplevel-7473")





Shen.fns["reg-kl.shen-toplevel-7476"] = [Shen.type_func, function shen_user_lambda7477(Arg7475) {
  if (Arg7475.length < 0) return [Shen.type_func, shen_user_lambda7477, 0, Arg7475];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]);})}, 0, [], "reg-kl.shen-toplevel-7476"];

Shen.call_toplevel("reg-kl.shen-toplevel-7476")





Shen.fns["reg-kl.shen-toplevel-7479"] = [Shen.type_func, function shen_user_lambda7480(Arg7478) {
  if (Arg7478.length < 0) return [Shen.type_func, shen_user_lambda7480, 0, Arg7478];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.insert"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7479"];

Shen.call_toplevel("reg-kl.shen-toplevel-7479")





Shen.fns["reg-kl.shen-toplevel-7482"] = [Shen.type_func, function shen_user_lambda7483(Arg7481) {
  if (Arg7481.length < 0) return [Shen.type_func, shen_user_lambda7483, 0, Arg7481];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7482"];

Shen.call_toplevel("reg-kl.shen-toplevel-7482")





Shen.fns["reg-kl.shen-toplevel-7485"] = [Shen.type_func, function shen_user_lambda7486(Arg7484) {
  if (Arg7484.length < 0) return [Shen.type_func, shen_user_lambda7486, 0, Arg7484];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7485"];

Shen.call_toplevel("reg-kl.shen-toplevel-7485")





Shen.fns["reg-kl.shen-toplevel-7488"] = [Shen.type_func, function shen_user_lambda7489(Arg7487) {
  if (Arg7487.length < 0) return [Shen.type_func, shen_user_lambda7489, 0, Arg7487];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7488"];

Shen.call_toplevel("reg-kl.shen-toplevel-7488")





Shen.fns["reg-kl.shen-toplevel-7491"] = [Shen.type_func, function shen_user_lambda7492(Arg7490) {
  if (Arg7490.length < 0) return [Shen.type_func, shen_user_lambda7492, 0, Arg7490];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7491"];

Shen.call_toplevel("reg-kl.shen-toplevel-7491")





Shen.fns["reg-kl.shen-toplevel-7494"] = [Shen.type_func, function shen_user_lambda7495(Arg7493) {
  if (Arg7493.length < 0) return [Shen.type_func, shen_user_lambda7495, 0, Arg7493];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7494"];

Shen.call_toplevel("reg-kl.shen-toplevel-7494")





Shen.fns["reg-kl.shen-toplevel-7497"] = [Shen.type_func, function shen_user_lambda7498(Arg7496) {
  if (Arg7496.length < 0) return [Shen.type_func, shen_user_lambda7498, 0, Arg7496];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7497"];

Shen.call_toplevel("reg-kl.shen-toplevel-7497")





Shen.fns["reg-kl.shen-toplevel-7500"] = [Shen.type_func, function shen_user_lambda7501(Arg7499) {
  if (Arg7499.length < 0) return [Shen.type_func, shen_user_lambda7501, 0, Arg7499];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7500"];

Shen.call_toplevel("reg-kl.shen-toplevel-7500")





Shen.fns["reg-kl.shen-toplevel-7503"] = [Shen.type_func, function shen_user_lambda7504(Arg7502) {
  if (Arg7502.length < 0) return [Shen.type_func, shen_user_lambda7504, 0, Arg7502];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7503"];

Shen.call_toplevel("reg-kl.shen-toplevel-7503")





Shen.fns["reg-kl.shen-toplevel-7506"] = [Shen.type_func, function shen_user_lambda7507(Arg7505) {
  if (Arg7505.length < 0) return [Shen.type_func, shen_user_lambda7507, 0, Arg7505];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7506"];

Shen.call_toplevel("reg-kl.shen-toplevel-7506")





Shen.fns["reg-kl.shen-toplevel-7509"] = [Shen.type_func, function shen_user_lambda7510(Arg7508) {
  if (Arg7508.length < 0) return [Shen.type_func, shen_user_lambda7510, 0, Arg7508];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7509"];

Shen.call_toplevel("reg-kl.shen-toplevel-7509")





Shen.fns["reg-kl.shen-toplevel-7512"] = [Shen.type_func, function shen_user_lambda7513(Arg7511) {
  if (Arg7511.length < 0) return [Shen.type_func, shen_user_lambda7513, 0, Arg7511];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7512"];

Shen.call_toplevel("reg-kl.shen-toplevel-7512")





Shen.fns["reg-kl.shen-toplevel-7515"] = [Shen.type_func, function shen_user_lambda7516(Arg7514) {
  if (Arg7514.length < 0) return [Shen.type_func, shen_user_lambda7516, 0, Arg7514];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7515"];

Shen.call_toplevel("reg-kl.shen-toplevel-7515")





Shen.fns["reg-kl.shen-toplevel-7518"] = [Shen.type_func, function shen_user_lambda7519(Arg7517) {
  if (Arg7517.length < 0) return [Shen.type_func, shen_user_lambda7519, 0, Arg7517];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7518"];

Shen.call_toplevel("reg-kl.shen-toplevel-7518")





Shen.fns["reg-kl.shen-toplevel-7521"] = [Shen.type_func, function shen_user_lambda7522(Arg7520) {
  if (Arg7520.length < 0) return [Shen.type_func, shen_user_lambda7522, 0, Arg7520];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7521"];

Shen.call_toplevel("reg-kl.shen-toplevel-7521")





Shen.fns["reg-kl.shen-toplevel-7524"] = [Shen.type_func, function shen_user_lambda7525(Arg7523) {
  if (Arg7523.length < 0) return [Shen.type_func, shen_user_lambda7525, 0, Arg7523];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7524"];

Shen.call_toplevel("reg-kl.shen-toplevel-7524")





Shen.fns["reg-kl.shen-toplevel-7527"] = [Shen.type_func, function shen_user_lambda7528(Arg7526) {
  if (Arg7526.length < 0) return [Shen.type_func, shen_user_lambda7528, 0, Arg7526];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7527"];

Shen.call_toplevel("reg-kl.shen-toplevel-7527")





Shen.fns["reg-kl.shen-toplevel-7530"] = [Shen.type_func, function shen_user_lambda7531(Arg7529) {
  if (Arg7529.length < 0) return [Shen.type_func, shen_user_lambda7531, 0, Arg7529];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7530"];

Shen.call_toplevel("reg-kl.shen-toplevel-7530")





Shen.fns["reg-kl.shen-toplevel-7533"] = [Shen.type_func, function shen_user_lambda7534(Arg7532) {
  if (Arg7532.length < 0) return [Shen.type_func, shen_user_lambda7534, 0, Arg7532];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7533"];

Shen.call_toplevel("reg-kl.shen-toplevel-7533")





Shen.fns["reg-kl.shen-toplevel-7536"] = [Shen.type_func, function shen_user_lambda7537(Arg7535) {
  if (Arg7535.length < 0) return [Shen.type_func, shen_user_lambda7537, 0, Arg7535];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7536"];

Shen.call_toplevel("reg-kl.shen-toplevel-7536")





Shen.fns["reg-kl.shen-toplevel-7539"] = [Shen.type_func, function shen_user_lambda7540(Arg7538) {
  if (Arg7538.length < 0) return [Shen.type_func, shen_user_lambda7540, 0, Arg7538];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7539"];

Shen.call_toplevel("reg-kl.shen-toplevel-7539")





Shen.fns["reg-kl.shen-toplevel-7542"] = [Shen.type_func, function shen_user_lambda7543(Arg7541) {
  if (Arg7541.length < 0) return [Shen.type_func, shen_user_lambda7543, 0, Arg7541];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7542"];

Shen.call_toplevel("reg-kl.shen-toplevel-7542")





Shen.fns["reg-kl.shen-toplevel-7545"] = [Shen.type_func, function shen_user_lambda7546(Arg7544) {
  if (Arg7544.length < 0) return [Shen.type_func, shen_user_lambda7546, 0, Arg7544];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7545"];

Shen.call_toplevel("reg-kl.shen-toplevel-7545")





Shen.fns["reg-kl.shen-toplevel-7548"] = [Shen.type_func, function shen_user_lambda7549(Arg7547) {
  if (Arg7547.length < 0) return [Shen.type_func, shen_user_lambda7549, 0, Arg7547];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7548"];

Shen.call_toplevel("reg-kl.shen-toplevel-7548")





Shen.fns["reg-kl.shen-toplevel-7551"] = [Shen.type_func, function shen_user_lambda7552(Arg7550) {
  if (Arg7550.length < 0) return [Shen.type_func, shen_user_lambda7552, 0, Arg7550];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7551"];

Shen.call_toplevel("reg-kl.shen-toplevel-7551")





Shen.fns["reg-kl.shen-toplevel-7554"] = [Shen.type_func, function shen_user_lambda7555(Arg7553) {
  if (Arg7553.length < 0) return [Shen.type_func, shen_user_lambda7555, 0, Arg7553];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7554"];

Shen.call_toplevel("reg-kl.shen-toplevel-7554")





Shen.fns["reg-kl.shen-toplevel-7557"] = [Shen.type_func, function shen_user_lambda7558(Arg7556) {
  if (Arg7556.length < 0) return [Shen.type_func, shen_user_lambda7558, 0, Arg7556];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7557"];

Shen.call_toplevel("reg-kl.shen-toplevel-7557")





Shen.fns["reg-kl.shen-toplevel-7560"] = [Shen.type_func, function shen_user_lambda7561(Arg7559) {
  if (Arg7559.length < 0) return [Shen.type_func, shen_user_lambda7561, 0, Arg7559];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7560"];

Shen.call_toplevel("reg-kl.shen-toplevel-7560")





Shen.fns["reg-kl.shen-toplevel-7563"] = [Shen.type_func, function shen_user_lambda7564(Arg7562) {
  if (Arg7562.length < 0) return [Shen.type_func, shen_user_lambda7564, 0, Arg7562];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7563"];

Shen.call_toplevel("reg-kl.shen-toplevel-7563")





Shen.fns["reg-kl.shen-toplevel-7566"] = [Shen.type_func, function shen_user_lambda7567(Arg7565) {
  if (Arg7565.length < 0) return [Shen.type_func, shen_user_lambda7567, 0, Arg7565];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7566"];

Shen.call_toplevel("reg-kl.shen-toplevel-7566")





Shen.fns["reg-kl.shen-toplevel-7569"] = [Shen.type_func, function shen_user_lambda7570(Arg7568) {
  if (Arg7568.length < 0) return [Shen.type_func, shen_user_lambda7570, 0, Arg7568];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7569"];

Shen.call_toplevel("reg-kl.shen-toplevel-7569")





Shen.fns["reg-kl.shen-toplevel-7572"] = [Shen.type_func, function shen_user_lambda7573(Arg7571) {
  if (Arg7571.length < 0) return [Shen.type_func, shen_user_lambda7573, 0, Arg7571];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7572"];

Shen.call_toplevel("reg-kl.shen-toplevel-7572")





Shen.fns["reg-kl.shen-toplevel-7575"] = [Shen.type_func, function shen_user_lambda7576(Arg7574) {
  if (Arg7574.length < 0) return [Shen.type_func, shen_user_lambda7576, 0, Arg7574];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7575"];

Shen.call_toplevel("reg-kl.shen-toplevel-7575")





Shen.fns["reg-kl.shen-toplevel-7578"] = [Shen.type_func, function shen_user_lambda7579(Arg7577) {
  if (Arg7577.length < 0) return [Shen.type_func, shen_user_lambda7579, 0, Arg7577];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7578"];

Shen.call_toplevel("reg-kl.shen-toplevel-7578")





Shen.fns["reg-kl.shen-toplevel-7581"] = [Shen.type_func, function shen_user_lambda7582(Arg7580) {
  if (Arg7580.length < 0) return [Shen.type_func, shen_user_lambda7582, 0, Arg7580];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7581"];

Shen.call_toplevel("reg-kl.shen-toplevel-7581")





Shen.fns["reg-kl.shen-toplevel-7584"] = [Shen.type_func, function shen_user_lambda7585(Arg7583) {
  if (Arg7583.length < 0) return [Shen.type_func, shen_user_lambda7585, 0, Arg7583];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7584"];

Shen.call_toplevel("reg-kl.shen-toplevel-7584")





Shen.fns["reg-kl.shen-toplevel-7587"] = [Shen.type_func, function shen_user_lambda7588(Arg7586) {
  if (Arg7586.length < 0) return [Shen.type_func, shen_user_lambda7588, 0, Arg7586];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7587"];

Shen.call_toplevel("reg-kl.shen-toplevel-7587")





Shen.fns["reg-kl.shen-toplevel-7590"] = [Shen.type_func, function shen_user_lambda7591(Arg7589) {
  if (Arg7589.length < 0) return [Shen.type_func, shen_user_lambda7591, 0, Arg7589];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7590"];

Shen.call_toplevel("reg-kl.shen-toplevel-7590")





Shen.fns["reg-kl.shen-toplevel-7593"] = [Shen.type_func, function shen_user_lambda7594(Arg7592) {
  if (Arg7592.length < 0) return [Shen.type_func, shen_user_lambda7594, 0, Arg7592];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7593"];

Shen.call_toplevel("reg-kl.shen-toplevel-7593")





Shen.fns["reg-kl.shen-toplevel-7596"] = [Shen.type_func, function shen_user_lambda7597(Arg7595) {
  if (Arg7595.length < 0) return [Shen.type_func, shen_user_lambda7597, 0, Arg7595];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], []]]]);})}, 0, [], "reg-kl.shen-toplevel-7596"];

Shen.call_toplevel("reg-kl.shen-toplevel-7596")





Shen.fns["reg-kl.shen-toplevel-7599"] = [Shen.type_func, function shen_user_lambda7600(Arg7598) {
  if (Arg7598.length < 0) return [Shen.type_func, shen_user_lambda7600, 0, Arg7598];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], []]]]);})}, 0, [], "reg-kl.shen-toplevel-7599"];

Shen.call_toplevel("reg-kl.shen-toplevel-7599")





Shen.fns["reg-kl.shen-toplevel-7602"] = [Shen.type_func, function shen_user_lambda7603(Arg7601) {
  if (Arg7601.length < 0) return [Shen.type_func, shen_user_lambda7603, 0, Arg7601];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7602"];

Shen.call_toplevel("reg-kl.shen-toplevel-7602")





Shen.fns["reg-kl.shen-toplevel-7605"] = [Shen.type_func, function shen_user_lambda7606(Arg7604) {
  if (Arg7604.length < 0) return [Shen.type_func, shen_user_lambda7606, 0, Arg7604];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7605"];

Shen.call_toplevel("reg-kl.shen-toplevel-7605")





Shen.fns["reg-kl.shen-toplevel-7608"] = [Shen.type_func, function shen_user_lambda7609(Arg7607) {
  if (Arg7607.length < 0) return [Shen.type_func, shen_user_lambda7609, 0, Arg7607];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7608"];

Shen.call_toplevel("reg-kl.shen-toplevel-7608")





Shen.fns["reg-kl.shen-toplevel-7611"] = [Shen.type_func, function shen_user_lambda7612(Arg7610) {
  if (Arg7610.length < 0) return [Shen.type_func, shen_user_lambda7612, 0, Arg7610];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7611"];

Shen.call_toplevel("reg-kl.shen-toplevel-7611")





Shen.fns["reg-kl.shen-toplevel-7614"] = [Shen.type_func, function shen_user_lambda7615(Arg7613) {
  if (Arg7613.length < 0) return [Shen.type_func, shen_user_lambda7615, 0, Arg7613];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.sum"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7614"];

Shen.call_toplevel("reg-kl.shen-toplevel-7614")





Shen.fns["reg-kl.shen-toplevel-7617"] = [Shen.type_func, function shen_user_lambda7618(Arg7616) {
  if (Arg7616.length < 0) return [Shen.type_func, shen_user_lambda7618, 0, Arg7616];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7617"];

Shen.call_toplevel("reg-kl.shen-toplevel-7617")





Shen.fns["reg-kl.shen-toplevel-7620"] = [Shen.type_func, function shen_user_lambda7621(Arg7619) {
  if (Arg7619.length < 0) return [Shen.type_func, shen_user_lambda7621, 0, Arg7619];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7620"];

Shen.call_toplevel("reg-kl.shen-toplevel-7620")





Shen.fns["reg-kl.shen-toplevel-7623"] = [Shen.type_func, function shen_user_lambda7624(Arg7622) {
  if (Arg7622.length < 0) return [Shen.type_func, shen_user_lambda7624, 0, Arg7622];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7623"];

Shen.call_toplevel("reg-kl.shen-toplevel-7623")





Shen.fns["reg-kl.shen-toplevel-7626"] = [Shen.type_func, function shen_user_lambda7627(Arg7625) {
  if (Arg7625.length < 0) return [Shen.type_func, shen_user_lambda7627, 0, Arg7625];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7626"];

Shen.call_toplevel("reg-kl.shen-toplevel-7626")





Shen.fns["reg-kl.shen-toplevel-7629"] = [Shen.type_func, function shen_user_lambda7630(Arg7628) {
  if (Arg7628.length < 0) return [Shen.type_func, shen_user_lambda7630, 0, Arg7628];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7629"];

Shen.call_toplevel("reg-kl.shen-toplevel-7629")





Shen.fns["reg-kl.shen-toplevel-7632"] = [Shen.type_func, function shen_user_lambda7633(Arg7631) {
  if (Arg7631.length < 0) return [Shen.type_func, shen_user_lambda7633, 0, Arg7631];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7632"];

Shen.call_toplevel("reg-kl.shen-toplevel-7632")





Shen.fns["reg-kl.shen-toplevel-7635"] = [Shen.type_func, function shen_user_lambda7636(Arg7634) {
  if (Arg7634.length < 0) return [Shen.type_func, shen_user_lambda7636, 0, Arg7634];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7635"];

Shen.call_toplevel("reg-kl.shen-toplevel-7635")





Shen.fns["reg-kl.shen-toplevel-7638"] = [Shen.type_func, function shen_user_lambda7639(Arg7637) {
  if (Arg7637.length < 0) return [Shen.type_func, shen_user_lambda7639, 0, Arg7637];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7638"];

Shen.call_toplevel("reg-kl.shen-toplevel-7638")





Shen.fns["reg-kl.shen-toplevel-7641"] = [Shen.type_func, function shen_user_lambda7642(Arg7640) {
  if (Arg7640.length < 0) return [Shen.type_func, shen_user_lambda7642, 0, Arg7640];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7641"];

Shen.call_toplevel("reg-kl.shen-toplevel-7641")





Shen.fns["reg-kl.shen-toplevel-7644"] = [Shen.type_func, function shen_user_lambda7645(Arg7643) {
  if (Arg7643.length < 0) return [Shen.type_func, shen_user_lambda7645, 0, Arg7643];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7644"];

Shen.call_toplevel("reg-kl.shen-toplevel-7644")





Shen.fns["reg-kl.shen-toplevel-7647"] = [Shen.type_func, function shen_user_lambda7648(Arg7646) {
  if (Arg7646.length < 0) return [Shen.type_func, shen_user_lambda7648, 0, Arg7646];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.truncate"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7647"];

Shen.call_toplevel("reg-kl.shen-toplevel-7647")





Shen.fns["reg-kl.shen-toplevel-7650"] = [Shen.type_func, function shen_user_lambda7651(Arg7649) {
  if (Arg7649.length < 0) return [Shen.type_func, shen_user_lambda7651, 0, Arg7649];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tuple?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7650"];

Shen.call_toplevel("reg-kl.shen-toplevel-7650")





Shen.fns["reg-kl.shen-toplevel-7653"] = [Shen.type_func, function shen_user_lambda7654(Arg7652) {
  if (Arg7652.length < 0) return [Shen.type_func, shen_user_lambda7654, 0, Arg7652];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7653"];

Shen.call_toplevel("reg-kl.shen-toplevel-7653")





Shen.fns["reg-kl.shen-toplevel-7656"] = [Shen.type_func, function shen_user_lambda7657(Arg7655) {
  if (Arg7655.length < 0) return [Shen.type_func, shen_user_lambda7657, 0, Arg7655];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7656"];

Shen.call_toplevel("reg-kl.shen-toplevel-7656")





Shen.fns["reg-kl.shen-toplevel-7659"] = [Shen.type_func, function shen_user_lambda7660(Arg7658) {
  if (Arg7658.length < 0) return [Shen.type_func, shen_user_lambda7660, 0, Arg7658];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7659"];

Shen.call_toplevel("reg-kl.shen-toplevel-7659")





Shen.fns["reg-kl.shen-toplevel-7662"] = [Shen.type_func, function shen_user_lambda7663(Arg7661) {
  if (Arg7661.length < 0) return [Shen.type_func, shen_user_lambda7663, 0, Arg7661];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7662"];

Shen.call_toplevel("reg-kl.shen-toplevel-7662")





Shen.fns["reg-kl.shen-toplevel-7665"] = [Shen.type_func, function shen_user_lambda7666(Arg7664) {
  if (Arg7664.length < 0) return [Shen.type_func, shen_user_lambda7666, 0, Arg7664];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7665"];

Shen.call_toplevel("reg-kl.shen-toplevel-7665")





Shen.fns["reg-kl.shen-toplevel-7668"] = [Shen.type_func, function shen_user_lambda7669(Arg7667) {
  if (Arg7667.length < 0) return [Shen.type_func, shen_user_lambda7669, 0, Arg7667];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7668"];

Shen.call_toplevel("reg-kl.shen-toplevel-7668")





Shen.fns["reg-kl.shen-toplevel-7671"] = [Shen.type_func, function shen_user_lambda7672(Arg7670) {
  if (Arg7670.length < 0) return [Shen.type_func, shen_user_lambda7672, 0, Arg7670];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7671"];

Shen.call_toplevel("reg-kl.shen-toplevel-7671")





Shen.fns["reg-kl.shen-toplevel-7674"] = [Shen.type_func, function shen_user_lambda7675(Arg7673) {
  if (Arg7673.length < 0) return [Shen.type_func, shen_user_lambda7675, 0, Arg7673];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7674"];

Shen.call_toplevel("reg-kl.shen-toplevel-7674")





Shen.fns["reg-kl.shen-toplevel-7677"] = [Shen.type_func, function shen_user_lambda7678(Arg7676) {
  if (Arg7676.length < 0) return [Shen.type_func, shen_user_lambda7678, 0, Arg7676];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7677"];

Shen.call_toplevel("reg-kl.shen-toplevel-7677")





Shen.fns["reg-kl.shen-toplevel-7680"] = [Shen.type_func, function shen_user_lambda7681(Arg7679) {
  if (Arg7679.length < 0) return [Shen.type_func, shen_user_lambda7681, 0, Arg7679];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7680"];

Shen.call_toplevel("reg-kl.shen-toplevel-7680")





Shen.fns["reg-kl.shen-toplevel-7683"] = [Shen.type_func, function shen_user_lambda7684(Arg7682) {
  if (Arg7682.length < 0) return [Shen.type_func, shen_user_lambda7684, 0, Arg7682];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7683"];

Shen.call_toplevel("reg-kl.shen-toplevel-7683")





Shen.fns["reg-kl.shen-toplevel-7686"] = [Shen.type_func, function shen_user_lambda7687(Arg7685) {
  if (Arg7685.length < 0) return [Shen.type_func, shen_user_lambda7687, 0, Arg7685];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7686"];

Shen.call_toplevel("reg-kl.shen-toplevel-7686")





Shen.fns["reg-kl.shen-toplevel-7689"] = [Shen.type_func, function shen_user_lambda7690(Arg7688) {
  if (Arg7688.length < 0) return [Shen.type_func, shen_user_lambda7690, 0, Arg7688];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7689"];

Shen.call_toplevel("reg-kl.shen-toplevel-7689")





Shen.fns["reg-kl.shen-toplevel-7692"] = [Shen.type_func, function shen_user_lambda7693(Arg7691) {
  if (Arg7691.length < 0) return [Shen.type_func, shen_user_lambda7693, 0, Arg7691];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7692"];

Shen.call_toplevel("reg-kl.shen-toplevel-7692")





Shen.fns["reg-kl.shen-toplevel-7695"] = [Shen.type_func, function shen_user_lambda7696(Arg7694) {
  if (Arg7694.length < 0) return [Shen.type_func, shen_user_lambda7696, 0, Arg7694];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7695"];

Shen.call_toplevel("reg-kl.shen-toplevel-7695")





Shen.fns["reg-kl.shen-toplevel-7698"] = [Shen.type_func, function shen_user_lambda7699(Arg7697) {
  if (Arg7697.length < 0) return [Shen.type_func, shen_user_lambda7699, 0, Arg7697];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7698"];

Shen.call_toplevel("reg-kl.shen-toplevel-7698")





Shen.fns["reg-kl.shen-toplevel-7701"] = [Shen.type_func, function shen_user_lambda7702(Arg7700) {
  if (Arg7700.length < 0) return [Shen.type_func, shen_user_lambda7702, 0, Arg7700];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7701"];

Shen.call_toplevel("reg-kl.shen-toplevel-7701")





Shen.fns["reg-kl.shen-toplevel-7704"] = [Shen.type_func, function shen_user_lambda7705(Arg7703) {
  if (Arg7703.length < 0) return [Shen.type_func, shen_user_lambda7705, 0, Arg7703];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7704"];

Shen.call_toplevel("reg-kl.shen-toplevel-7704")





Shen.fns["reg-kl.shen-toplevel-7707"] = [Shen.type_func, function shen_user_lambda7708(Arg7706) {
  if (Arg7706.length < 0) return [Shen.type_func, shen_user_lambda7708, 0, Arg7706];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7707"];

Shen.call_toplevel("reg-kl.shen-toplevel-7707")





Shen.fns["reg-kl.shen-toplevel-7710"] = [Shen.type_func, function shen_user_lambda7711(Arg7709) {
  if (Arg7709.length < 0) return [Shen.type_func, shen_user_lambda7711, 0, Arg7709];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7710"];

Shen.call_toplevel("reg-kl.shen-toplevel-7710")










Shen.fns["shen.typecheck"] = [Shen.type_func, function shen_user_lambda5671(Arg5670) {
  if (Arg5670.length < 2) return [Shen.type_func, shen_user_lambda5671, 2, Arg5670];
  var Arg5670_0 = Arg5670[0], Arg5670_1 = Arg5670[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.curry"], [Arg5670_0])),
  (R1 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (R2 = Shen.call(Shen.fns["shen.insert-prolog-variables"], [Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Arg5670_1])]), R1])),
  (R3 = (new Shen.Freeze([R0, R2, R1], function(Arg5672) {
  var Arg5672_0 = Arg5672[0], Arg5672_1 = Arg5672[1], Arg5672_2 = Arg5672[2];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["return"], [Arg5672_1, Arg5672_2, [Shen.type_symbol, "shen.void"]]);});})}))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R2, []]]], [], R1, R3]);}))}, 2, [], "shen.typecheck"];





Shen.fns["shen.curry"] = [Shen.type_func, function shen_user_lambda5675(Arg5674) {
  if (Arg5674.length < 1) return [Shen.type_func, shen_user_lambda5675, 1, Arg5674];
  var Arg5674_0 = Arg5674[0];
  return (((Shen.is_type(Arg5674_0, Shen.type_cons) && Shen.call(Shen.fns["shen.special?"], [Arg5674_0[1]])))
  ? [Shen.type_cons, Arg5674_0[1], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.curry"], Arg5674_0[2]])]
  : (((Shen.is_type(Arg5674_0, Shen.type_cons) && (Shen.is_type(Arg5674_0[2], Shen.type_cons) && Shen.call(Shen.fns["shen.extraspecial?"], [Arg5674_0[1]]))))
  ? Arg5674_0
  : (((Shen.is_type(Arg5674_0, Shen.type_cons) && (Shen.is_type(Arg5674_0[2], Shen.type_cons) && Shen.is_type(Arg5674_0[2][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry"], [[Shen.type_cons, [Shen.type_cons, Arg5674_0[1], [Shen.type_cons, Arg5674_0[2][1], []]], Arg5674_0[2][2]]]);})
  : (((Shen.is_type(Arg5674_0, Shen.type_cons) && (Shen.is_type(Arg5674_0[2], Shen.type_cons) && Shen.empty$question$(Arg5674_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg5674_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg5674_0[2][1]]), []]]
  : Arg5674_0))))}, 1, [], "shen.curry"];





Shen.fns["shen.special?"] = [Shen.type_func, function shen_user_lambda5677(Arg5676) {
  if (Arg5676.length < 1) return [Shen.type_func, shen_user_lambda5677, 1, Arg5676];
  var Arg5676_0 = Arg5676[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5676_0, (Shen.globals["shen.*special*"])]);})}, 1, [], "shen.special?"];





Shen.fns["shen.extraspecial?"] = [Shen.type_func, function shen_user_lambda5679(Arg5678) {
  if (Arg5678.length < 1) return [Shen.type_func, shen_user_lambda5679, 1, Arg5678];
  var Arg5678_0 = Arg5678[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5678_0, (Shen.globals["shen.*extraspecial*"])]);})}, 1, [], "shen.extraspecial?"];





Shen.fns["shen.t*"] = [Shen.type_func, function shen_user_lambda5681(Arg5680) {
  if (Arg5680.length < 4) return [Shen.type_func, shen_user_lambda5681, 4, Arg5680];
  var Arg5680_0 = Arg5680[0], Arg5680_1 = Arg5680[1], Arg5680_2 = Arg5680[2], Arg5680_3 = Arg5680[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5680_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.maxinfexceeded?"], []), Arg5680_2, (new Shen.Freeze([R1, Arg5680_2, Arg5680_3, R0, Arg5680_0, Arg5680_1, Arg5680_2, Arg5680_3], function(Arg5682) {
  var Arg5682_0 = Arg5682[0], Arg5682_1 = Arg5682[1], Arg5682_2 = Arg5682[2], Arg5682_3 = Arg5682[3], Arg5682_4 = Arg5682[4], Arg5682_5 = Arg5682[5], Arg5682_6 = Arg5682[6], Arg5682_7 = Arg5682[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5682_0, Shen.call(Shen.fns["shen.errormaxinfs"], []), Arg5682_1, Arg5682_2]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5680_0, Arg5680_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5680_2, (new Shen.Freeze([R0, Arg5680_0, Arg5680_1, Arg5680_2, Arg5680_3], function(Arg5684) {
  var Arg5684_0 = Arg5684[0], Arg5684_1 = Arg5684[1], Arg5684_2 = Arg5684[2], Arg5684_3 = Arg5684[3], Arg5684_4 = Arg5684[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-failure"], [Arg5684_3, Arg5684_4]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5680_0, Arg5680_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5680_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5680_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5680_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5680_2])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.type-theory-enabled?"], []), Arg5680_2, (new Shen.Freeze([R0, R2, R1, Arg5680_0, Arg5680_1, Arg5680_2, Arg5680_3], function(Arg5686) {
  var Arg5686_0 = Arg5686[0], Arg5686_1 = Arg5686[1], Arg5686_2 = Arg5686[2], Arg5686_3 = Arg5686[3], Arg5686_4 = Arg5686[4], Arg5686_5 = Arg5686[5], Arg5686_6 = Arg5686[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5686_0, Arg5686_5, (new Shen.Freeze([Arg5686_0, Arg5686_1, Arg5686_2, Arg5686_4, Arg5686_5, Arg5686_6], function(Arg5688) {
  var Arg5688_0 = Arg5688[0], Arg5688_1 = Arg5688[1], Arg5688_2 = Arg5688[2], Arg5688_3 = Arg5688[3], Arg5688_4 = Arg5688[4], Arg5688_5 = Arg5688[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5688_1, Arg5688_2, Arg5688_3, Arg5688_4, Arg5688_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5680_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.show"], [Arg5680_0, Arg5680_1, Arg5680_2, (new Shen.Freeze([Arg5680_0, Arg5680_1, R1, Arg5680_2, Arg5680_3], function(Arg5690) {
  var Arg5690_0 = Arg5690[0], Arg5690_1 = Arg5690[1], Arg5690_2 = Arg5690[2], Arg5690_3 = Arg5690[3], Arg5690_4 = Arg5690[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5690_2, (Shen.globals["shen.*datatypes*"]), Arg5690_3, (new Shen.Freeze([Arg5690_0, Arg5690_1, Arg5690_2, Arg5690_3, Arg5690_4], function(Arg5692) {
  var Arg5692_0 = Arg5692[0], Arg5692_1 = Arg5692[1], Arg5692_2 = Arg5692[2], Arg5692_3 = Arg5692[3], Arg5692_4 = Arg5692[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg5692_0, Arg5692_1, Arg5692_2, Arg5692_3, Arg5692_4]);});})}))]);});})}))]))
  : R1))
  : R1))
  : R1))]);}))}, 4, [], "shen.t*"];





Shen.fns["shen.type-theory-enabled?"] = [Shen.type_func, function shen_user_lambda5695(Arg5694) {
  if (Arg5694.length < 0) return [Shen.type_func, shen_user_lambda5695, 0, Arg5694];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"])}, 0, [], "shen.type-theory-enabled?"];





Shen.fns["enable-type-theory"] = [Shen.type_func, function shen_user_lambda5697(Arg5696) {
  if (Arg5696.length < 1) return [Shen.type_func, shen_user_lambda5697, 1, Arg5696];
  var Arg5696_0 = Arg5696[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5696_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5696_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = false)
  : (function() {
  return Shen.simple_error("enable-type-theory expects a + or a -\x0a");})))}, 1, [], "enable-type-theory"];





Shen.fns["shen.prolog-failure"] = [Shen.type_func, function shen_user_lambda5699(Arg5698) {
  if (Arg5698.length < 2) return [Shen.type_func, shen_user_lambda5699, 2, Arg5698];
  var Arg5698_0 = Arg5698[0], Arg5698_1 = Arg5698[1];
  return false}, 2, [], "shen.prolog-failure"];





Shen.fns["shen.maxinfexceeded?"] = [Shen.type_func, function shen_user_lambda5701(Arg5700) {
  if (Arg5700.length < 0) return [Shen.type_func, shen_user_lambda5701, 0, Arg5700];
  return (Shen.call(Shen.fns["inferences"], []) > (Shen.globals["shen.*maxinferences*"]))}, 0, [], "shen.maxinfexceeded?"];





Shen.fns["shen.errormaxinfs"] = [Shen.type_func, function shen_user_lambda5703(Arg5702) {
  if (Arg5702.length < 0) return [Shen.type_func, shen_user_lambda5703, 0, Arg5702];
  return (function() {
  return Shen.simple_error("maximum inferences exceeded~%");})}, 0, [], "shen.errormaxinfs"];





Shen.fns["shen.udefs*"] = [Shen.type_func, function shen_user_lambda5705(Arg5704) {
  if (Arg5704.length < 5) return [Shen.type_func, shen_user_lambda5705, 5, Arg5704];
  var Arg5704_0 = Arg5704[0], Arg5704_1 = Arg5704[1], Arg5704_2 = Arg5704[2], Arg5704_3 = Arg5704[3], Arg5704_4 = Arg5704[4];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5704_2, Arg5704_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[1]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [[Shen.type_cons, R0, [Shen.type_cons, Arg5704_0, [Shen.type_cons, Arg5704_1, []]]], Arg5704_3, Arg5704_4])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5704_2, Arg5704_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg5704_0, Arg5704_1, R0, Arg5704_3, Arg5704_4]);}))
  : false))
  : R0))}, 5, [], "shen.udefs*"];





Shen.fns["shen.th*"] = [Shen.type_func, function shen_user_lambda5707(Arg5706) {
  if (Arg5706.length < 5) return [Shen.type_func, shen_user_lambda5707, 5, Arg5706];
  var Arg5706_0 = Arg5706[0], Arg5706_1 = Arg5706[1], Arg5706_2 = Arg5706[2], Arg5706_3 = Arg5706[3], Arg5706_4 = Arg5706[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.show"], [[Shen.type_cons, Arg5706_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5706_1, []]]], Arg5706_2, Arg5706_3, (new Shen.Freeze([R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5708) {
  var Arg5708_0 = Arg5708[0], Arg5708_1 = Arg5708[1], Arg5708_2 = Arg5708[2], Arg5708_3 = Arg5708[3], Arg5708_4 = Arg5708[4], Arg5708_5 = Arg5708[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg5708_4, Arg5708_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.typedf?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])]), Arg5706_3, (new Shen.Freeze([Arg5706_0, R1, Arg5706_1, Arg5706_3, Arg5706_4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5710) {
  var Arg5710_0 = Arg5710[0], Arg5710_1 = Arg5710[1], Arg5710_2 = Arg5710[2], Arg5710_3 = Arg5710[3], Arg5710_4 = Arg5710[4], Arg5710_5 = Arg5710[5], Arg5710_6 = Arg5710[6], Arg5710_7 = Arg5710[7], Arg5710_8 = Arg5710[8], Arg5710_9 = Arg5710[9], Arg5710_10 = Arg5710[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5710_1, Shen.call(Shen.fns["shen.sigf"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])]), Arg5710_3, (new Shen.Freeze([Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5712) {
  var Arg5712_0 = Arg5712[0], Arg5712_1 = Arg5712[1], Arg5712_2 = Arg5712[2], Arg5712_3 = Arg5712[3], Arg5712_4 = Arg5712[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["call"], [[Shen.type_cons, Arg5712_1, [Shen.type_cons, Arg5712_2, []]], Arg5712_3, Arg5712_4]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.base"], [Arg5706_0, Arg5706_1, Arg5706_3, Arg5706_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.by_hypothesis"], [Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5706_1, []]], Arg5706_2, Arg5706_3, Arg5706_4])))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5706_1, []]]], Arg5706_2, Arg5706_3, (new Shen.Freeze([R2, Arg5706_1, R3, R1, Arg5706_2, Arg5706_3, Arg5706_4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5714) {
  var Arg5714_0 = Arg5714[0], Arg5714_1 = Arg5714[1], Arg5714_2 = Arg5714[2], Arg5714_3 = Arg5714[3], Arg5714_4 = Arg5714[4], Arg5714_5 = Arg5714[5], Arg5714_6 = Arg5714[6], Arg5714_7 = Arg5714[7], Arg5714_8 = Arg5714[8], Arg5714_9 = Arg5714[9], Arg5714_10 = Arg5714[10], Arg5714_11 = Arg5714[11], Arg5714_12 = Arg5714[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5714_2, Arg5714_3, Arg5714_4, Arg5714_5, Arg5714_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_1, Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5706_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5716) {
  var Arg5716_0 = Arg5716[0], Arg5716_1 = Arg5716[1], Arg5716_2 = Arg5716[2], Arg5716_3 = Arg5716[3], Arg5716_4 = Arg5716[4], Arg5716_5 = Arg5716[5], Arg5716_6 = Arg5716[6], Arg5716_7 = Arg5716[7], Arg5716_8 = Arg5716[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5716_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5716_2, []]], Arg5716_6, Arg5716_7, Arg5716_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5718) {
  var Arg5718_0 = Arg5718[0], Arg5718_1 = Arg5718[1], Arg5718_2 = Arg5718[2], Arg5718_3 = Arg5718[3], Arg5718_4 = Arg5718[4], Arg5718_5 = Arg5718[5], Arg5718_6 = Arg5718[6], Arg5718_7 = Arg5718[7], Arg5718_8 = Arg5718[8], Arg5718_9 = Arg5718[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5718_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5718_2, []]], Arg5718_7, Arg5718_8, Arg5718_9]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R2, Arg5706_2, Arg5706_4, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5720) {
  var Arg5720_0 = Arg5720[0], Arg5720_1 = Arg5720[1], Arg5720_2 = Arg5720[2], Arg5720_3 = Arg5720[3], Arg5720_4 = Arg5720[4], Arg5720_5 = Arg5720[5], Arg5720_6 = Arg5720[6], Arg5720_7 = Arg5720[7], Arg5720_8 = Arg5720[8], Arg5720_9 = Arg5720[9], Arg5720_10 = Arg5720[10], Arg5720_11 = Arg5720[11], Arg5720_12 = Arg5720[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5720_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5720_2, []]], Arg5720_3, Arg5720_6, Arg5720_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "list"], Arg5706_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R5, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5722) {
  var Arg5722_0 = Arg5722[0], Arg5722_1 = Arg5722[1], Arg5722_2 = Arg5722[2], Arg5722_3 = Arg5722[3], Arg5722_4 = Arg5722[4], Arg5722_5 = Arg5722[5], Arg5722_6 = Arg5722[6], Arg5722_7 = Arg5722[7], Arg5722_8 = Arg5722[8], Arg5722_9 = Arg5722[9], Arg5722_10 = Arg5722[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5722_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5722_2, []]], Arg5722_8, Arg5722_4, Arg5722_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5724) {
  var Arg5724_0 = Arg5724[0], Arg5724_1 = Arg5724[1], Arg5724_2 = Arg5724[2], Arg5724_3 = Arg5724[3], Arg5724_4 = Arg5724[4], Arg5724_5 = Arg5724[5], Arg5724_6 = Arg5724[6], Arg5724_7 = Arg5724[7], Arg5724_8 = Arg5724[8], Arg5724_9 = Arg5724[9], Arg5724_10 = Arg5724[10], Arg5724_11 = Arg5724[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5724_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5724_2, []]], Arg5724_9, Arg5724_5, Arg5724_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R5, Arg5706_2, Arg5706_4, R2, Arg5706_3, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5726) {
  var Arg5726_0 = Arg5726[0], Arg5726_1 = Arg5726[1], Arg5726_2 = Arg5726[2], Arg5726_3 = Arg5726[3], Arg5726_4 = Arg5726[4], Arg5726_5 = Arg5726[5], Arg5726_6 = Arg5726[6], Arg5726_7 = Arg5726[7], Arg5726_8 = Arg5726[8], Arg5726_9 = Arg5726[9], Arg5726_10 = Arg5726[10], Arg5726_11 = Arg5726[11], Arg5726_12 = Arg5726[12], Arg5726_13 = Arg5726[13], Arg5726_14 = Arg5726[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5726_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5726_2, []]], Arg5726_3, Arg5726_6, Arg5726_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R4, []]], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R4, Arg5706_2, Arg5706_4, R2, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5728) {
  var Arg5728_0 = Arg5728[0], Arg5728_1 = Arg5728[1], Arg5728_2 = Arg5728[2], Arg5728_3 = Arg5728[3], Arg5728_4 = Arg5728[4], Arg5728_5 = Arg5728[5], Arg5728_6 = Arg5728[6], Arg5728_7 = Arg5728[7], Arg5728_8 = Arg5728[8], Arg5728_9 = Arg5728[9], Arg5728_10 = Arg5728[10], Arg5728_11 = Arg5728[11], Arg5728_12 = Arg5728[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5728_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5728_2, []]], Arg5728_3, Arg5728_6, Arg5728_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_1, Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5706_3])),
  ((Shen.empty$question$(R5))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R4, R3, R2, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5730) {
  var Arg5730_0 = Arg5730[0], Arg5730_1 = Arg5730[1], Arg5730_2 = Arg5730[2], Arg5730_3 = Arg5730[3], Arg5730_4 = Arg5730[4], Arg5730_5 = Arg5730[5], Arg5730_6 = Arg5730[6], Arg5730_7 = Arg5730[7], Arg5730_8 = Arg5730[8], Arg5730_9 = Arg5730[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5730_2, Arg5730_3, Arg5730_7, Arg5730_8, Arg5730_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R4, R3, R2, R5, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5732) {
  var Arg5732_0 = Arg5732[0], Arg5732_1 = Arg5732[1], Arg5732_2 = Arg5732[2], Arg5732_3 = Arg5732[3], Arg5732_4 = Arg5732[4], Arg5732_5 = Arg5732[5], Arg5732_6 = Arg5732[6], Arg5732_7 = Arg5732[7], Arg5732_8 = Arg5732[8], Arg5732_9 = Arg5732[9], Arg5732_10 = Arg5732[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5732_2, Arg5732_3, Arg5732_8, Arg5732_9, Arg5732_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5706_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R4, R3, R2, Arg5706_2, Arg5706_4, R5, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5734) {
  var Arg5734_0 = Arg5734[0], Arg5734_1 = Arg5734[1], Arg5734_2 = Arg5734[2], Arg5734_3 = Arg5734[3], Arg5734_4 = Arg5734[4], Arg5734_5 = Arg5734[5], Arg5734_6 = Arg5734[6], Arg5734_7 = Arg5734[7], Arg5734_8 = Arg5734[8], Arg5734_9 = Arg5734[9], Arg5734_10 = Arg5734[10], Arg5734_11 = Arg5734[11], Arg5734_12 = Arg5734[12], Arg5734_13 = Arg5734[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5734_2, Arg5734_3, Arg5734_4, Arg5734_7, Arg5734_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5706_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "*"], Arg5706_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R4, R3, R6, R5, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5736) {
  var Arg5736_0 = Arg5736[0], Arg5736_1 = Arg5736[1], Arg5736_2 = Arg5736[2], Arg5736_3 = Arg5736[3], Arg5736_4 = Arg5736[4], Arg5736_5 = Arg5736[5], Arg5736_6 = Arg5736[6], Arg5736_7 = Arg5736[7], Arg5736_8 = Arg5736[8], Arg5736_9 = Arg5736[9], Arg5736_10 = Arg5736[10], Arg5736_11 = Arg5736[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5736_2, Arg5736_3, Arg5736_9, Arg5736_5, Arg5736_10]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R4, R3, R6, R2, R5, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5738) {
  var Arg5738_0 = Arg5738[0], Arg5738_1 = Arg5738[1], Arg5738_2 = Arg5738[2], Arg5738_3 = Arg5738[3], Arg5738_4 = Arg5738[4], Arg5738_5 = Arg5738[5], Arg5738_6 = Arg5738[6], Arg5738_7 = Arg5738[7], Arg5738_8 = Arg5738[8], Arg5738_9 = Arg5738[9], Arg5738_10 = Arg5738[10], Arg5738_11 = Arg5738[11], Arg5738_12 = Arg5738[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5738_2, Arg5738_3, Arg5738_10, Arg5738_6, Arg5738_11]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R4, R3, R6, Arg5706_2, Arg5706_4, R2, Arg5706_3, R5, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5740) {
  var Arg5740_0 = Arg5740[0], Arg5740_1 = Arg5740[1], Arg5740_2 = Arg5740[2], Arg5740_3 = Arg5740[3], Arg5740_4 = Arg5740[4], Arg5740_5 = Arg5740[5], Arg5740_6 = Arg5740[6], Arg5740_7 = Arg5740[7], Arg5740_8 = Arg5740[8], Arg5740_9 = Arg5740[9], Arg5740_10 = Arg5740[10], Arg5740_11 = Arg5740[11], Arg5740_12 = Arg5740[12], Arg5740_13 = Arg5740[13], Arg5740_14 = Arg5740[14], Arg5740_15 = Arg5740[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5740_2, Arg5740_3, Arg5740_4, Arg5740_7, Arg5740_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5706_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R4, R3, R5, Arg5706_2, Arg5706_4, R2, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5742) {
  var Arg5742_0 = Arg5742[0], Arg5742_1 = Arg5742[1], Arg5742_2 = Arg5742[2], Arg5742_3 = Arg5742[3], Arg5742_4 = Arg5742[4], Arg5742_5 = Arg5742[5], Arg5742_6 = Arg5742[6], Arg5742_7 = Arg5742[7], Arg5742_8 = Arg5742[8], Arg5742_9 = Arg5742[9], Arg5742_10 = Arg5742[10], Arg5742_11 = Arg5742[11], Arg5742_12 = Arg5742[12], Arg5742_13 = Arg5742[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5742_2, Arg5742_3, Arg5742_4, Arg5742_7, Arg5742_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]]], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R4, R3, R5, Arg5706_2, Arg5706_4, R2, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5744) {
  var Arg5744_0 = Arg5744[0], Arg5744_1 = Arg5744[1], Arg5744_2 = Arg5744[2], Arg5744_3 = Arg5744[3], Arg5744_4 = Arg5744[4], Arg5744_5 = Arg5744[5], Arg5744_6 = Arg5744[6], Arg5744_7 = Arg5744[7], Arg5744_8 = Arg5744[8], Arg5744_9 = Arg5744[9], Arg5744_10 = Arg5744[10], Arg5744_11 = Arg5744[11], Arg5744_12 = Arg5744[12], Arg5744_13 = Arg5744[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5744_2, Arg5744_3, Arg5744_4, Arg5744_7, Arg5744_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_1, Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5706_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5746) {
  var Arg5746_0 = Arg5746[0], Arg5746_1 = Arg5746[1], Arg5746_2 = Arg5746[2], Arg5746_3 = Arg5746[3], Arg5746_4 = Arg5746[4], Arg5746_5 = Arg5746[5], Arg5746_6 = Arg5746[6], Arg5746_7 = Arg5746[7], Arg5746_8 = Arg5746[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5746_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5746_2, []]], Arg5746_6, Arg5746_7, Arg5746_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5748) {
  var Arg5748_0 = Arg5748[0], Arg5748_1 = Arg5748[1], Arg5748_2 = Arg5748[2], Arg5748_3 = Arg5748[3], Arg5748_4 = Arg5748[4], Arg5748_5 = Arg5748[5], Arg5748_6 = Arg5748[6], Arg5748_7 = Arg5748[7], Arg5748_8 = Arg5748[8], Arg5748_9 = Arg5748[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5748_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5748_2, []]], Arg5748_7, Arg5748_8, Arg5748_9]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R2, Arg5706_2, Arg5706_4, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5750) {
  var Arg5750_0 = Arg5750[0], Arg5750_1 = Arg5750[1], Arg5750_2 = Arg5750[2], Arg5750_3 = Arg5750[3], Arg5750_4 = Arg5750[4], Arg5750_5 = Arg5750[5], Arg5750_6 = Arg5750[6], Arg5750_7 = Arg5750[7], Arg5750_8 = Arg5750[8], Arg5750_9 = Arg5750[9], Arg5750_10 = Arg5750[10], Arg5750_11 = Arg5750[11], Arg5750_12 = Arg5750[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5750_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5750_2, []]], Arg5750_3, Arg5750_6, Arg5750_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "vector"], Arg5706_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R5, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5752) {
  var Arg5752_0 = Arg5752[0], Arg5752_1 = Arg5752[1], Arg5752_2 = Arg5752[2], Arg5752_3 = Arg5752[3], Arg5752_4 = Arg5752[4], Arg5752_5 = Arg5752[5], Arg5752_6 = Arg5752[6], Arg5752_7 = Arg5752[7], Arg5752_8 = Arg5752[8], Arg5752_9 = Arg5752[9], Arg5752_10 = Arg5752[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5752_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5752_2, []]], Arg5752_8, Arg5752_4, Arg5752_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5754) {
  var Arg5754_0 = Arg5754[0], Arg5754_1 = Arg5754[1], Arg5754_2 = Arg5754[2], Arg5754_3 = Arg5754[3], Arg5754_4 = Arg5754[4], Arg5754_5 = Arg5754[5], Arg5754_6 = Arg5754[6], Arg5754_7 = Arg5754[7], Arg5754_8 = Arg5754[8], Arg5754_9 = Arg5754[9], Arg5754_10 = Arg5754[10], Arg5754_11 = Arg5754[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5754_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5754_2, []]], Arg5754_9, Arg5754_5, Arg5754_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R5, Arg5706_2, Arg5706_4, R2, Arg5706_3, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5756) {
  var Arg5756_0 = Arg5756[0], Arg5756_1 = Arg5756[1], Arg5756_2 = Arg5756[2], Arg5756_3 = Arg5756[3], Arg5756_4 = Arg5756[4], Arg5756_5 = Arg5756[5], Arg5756_6 = Arg5756[6], Arg5756_7 = Arg5756[7], Arg5756_8 = Arg5756[8], Arg5756_9 = Arg5756[9], Arg5756_10 = Arg5756[10], Arg5756_11 = Arg5756[11], Arg5756_12 = Arg5756[12], Arg5756_13 = Arg5756[13], Arg5756_14 = Arg5756[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5756_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5756_2, []]], Arg5756_3, Arg5756_6, Arg5756_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R4, []]], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R4, Arg5706_2, Arg5706_4, R2, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5758) {
  var Arg5758_0 = Arg5758[0], Arg5758_1 = Arg5758[1], Arg5758_2 = Arg5758[2], Arg5758_3 = Arg5758[3], Arg5758_4 = Arg5758[4], Arg5758_5 = Arg5758[5], Arg5758_6 = Arg5758[6], Arg5758_7 = Arg5758[7], Arg5758_8 = Arg5758[8], Arg5758_9 = Arg5758[9], Arg5758_10 = Arg5758[10], Arg5758_11 = Arg5758[11], Arg5758_12 = Arg5758[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5758_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5758_2, []]], Arg5758_3, Arg5758_6, Arg5758_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_1, Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5760) {
  var Arg5760_0 = Arg5760[0], Arg5760_1 = Arg5760[1], Arg5760_2 = Arg5760[2], Arg5760_3 = Arg5760[3], Arg5760_4 = Arg5760[4], Arg5760_5 = Arg5760[5], Arg5760_6 = Arg5760[6], Arg5760_7 = Arg5760[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5760_1, [Shen.type_symbol, "string"], Arg5760_5, Arg5760_6, Arg5760_7]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "string"], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg5706_2, Arg5706_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5762) {
  var Arg5762_0 = Arg5762[0], Arg5762_1 = Arg5762[1], Arg5762_2 = Arg5762[2], Arg5762_3 = Arg5762[3], Arg5762_4 = Arg5762[4], Arg5762_5 = Arg5762[5], Arg5762_6 = Arg5762[6], Arg5762_7 = Arg5762[7], Arg5762_8 = Arg5762[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5762_1, [Shen.type_symbol, "string"], Arg5762_6, Arg5762_7, Arg5762_8]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_1, Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5706_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R3, R5, R2, R6, R4, Arg5706_2, Arg5706_3, Arg5706_4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5764) {
  var Arg5764_0 = Arg5764[0], Arg5764_1 = Arg5764[1], Arg5764_2 = Arg5764[2], Arg5764_3 = Arg5764[3], Arg5764_4 = Arg5764[4], Arg5764_5 = Arg5764[5], Arg5764_6 = Arg5764[6], Arg5764_7 = Arg5764[7], Arg5764_8 = Arg5764[8], Arg5764_9 = Arg5764[9], Arg5764_10 = Arg5764[10], Arg5764_11 = Arg5764[11], Arg5764_12 = Arg5764[12], Arg5764_13 = Arg5764[13], Arg5764_14 = Arg5764[14], Arg5764_15 = Arg5764[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5764_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5764_8, (new Shen.Freeze([Arg5764_1, Arg5764_2, Arg5764_3, Arg5764_4, Arg5764_5, Arg5764_6, Arg5764_7, Arg5764_8, Arg5764_9], function(Arg5766) {
  var Arg5766_0 = Arg5766[0], Arg5766_1 = Arg5766[1], Arg5766_2 = Arg5766[2], Arg5766_3 = Arg5766[3], Arg5766_4 = Arg5766[4], Arg5766_5 = Arg5766[5], Arg5766_6 = Arg5766[6], Arg5766_7 = Arg5766[7], Arg5766_8 = Arg5766[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5766_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5766_4, Arg5766_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5766_0, Arg5766_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5766_1, Arg5766_7])]), Arg5766_7, (new Shen.Freeze([Arg5766_0, Arg5766_1, Arg5766_2, Arg5766_3, Arg5766_4, Arg5766_5, Arg5766_6, Arg5766_7, Arg5766_8], function(Arg5768) {
  var Arg5768_0 = Arg5768[0], Arg5768_1 = Arg5768[1], Arg5768_2 = Arg5768[2], Arg5768_3 = Arg5768[3], Arg5768_4 = Arg5768[4], Arg5768_5 = Arg5768[5], Arg5768_6 = Arg5768[6], Arg5768_7 = Arg5768[7], Arg5768_8 = Arg5768[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5768_2, Arg5768_3, [Shen.type_cons, [Shen.type_cons, Arg5768_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5768_5, []]]], Arg5768_6], Arg5768_7, Arg5768_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5706_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg5706_2, Arg5706_3, Arg5706_4, R5, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5770) {
  var Arg5770_0 = Arg5770[0], Arg5770_1 = Arg5770[1], Arg5770_2 = Arg5770[2], Arg5770_3 = Arg5770[3], Arg5770_4 = Arg5770[4], Arg5770_5 = Arg5770[5], Arg5770_6 = Arg5770[6], Arg5770_7 = Arg5770[7], Arg5770_8 = Arg5770[8], Arg5770_9 = Arg5770[9], Arg5770_10 = Arg5770[10], Arg5770_11 = Arg5770[11], Arg5770_12 = Arg5770[12], Arg5770_13 = Arg5770[13], Arg5770_14 = Arg5770[14], Arg5770_15 = Arg5770[15], Arg5770_16 = Arg5770[16], Arg5770_17 = Arg5770[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5770_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5770_8, (new Shen.Freeze([Arg5770_1, Arg5770_2, Arg5770_3, Arg5770_4, Arg5770_5, Arg5770_6, Arg5770_7, Arg5770_8, Arg5770_9], function(Arg5772) {
  var Arg5772_0 = Arg5772[0], Arg5772_1 = Arg5772[1], Arg5772_2 = Arg5772[2], Arg5772_3 = Arg5772[3], Arg5772_4 = Arg5772[4], Arg5772_5 = Arg5772[5], Arg5772_6 = Arg5772[6], Arg5772_7 = Arg5772[7], Arg5772_8 = Arg5772[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5772_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5772_4, Arg5772_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5772_0, Arg5772_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5772_1, Arg5772_7])]), Arg5772_7, (new Shen.Freeze([Arg5772_0, Arg5772_1, Arg5772_2, Arg5772_3, Arg5772_4, Arg5772_5, Arg5772_6, Arg5772_7, Arg5772_8], function(Arg5774) {
  var Arg5774_0 = Arg5774[0], Arg5774_1 = Arg5774[1], Arg5774_2 = Arg5774[2], Arg5774_3 = Arg5774[3], Arg5774_4 = Arg5774[4], Arg5774_5 = Arg5774[5], Arg5774_6 = Arg5774[6], Arg5774_7 = Arg5774[7], Arg5774_8 = Arg5774[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5774_2, Arg5774_3, [Shen.type_cons, [Shen.type_cons, Arg5774_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5774_5, []]]], Arg5774_6], Arg5774_7, Arg5774_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5706_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg5706_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg5706_2, Arg5706_3, Arg5706_4, R5, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5776) {
  var Arg5776_0 = Arg5776[0], Arg5776_1 = Arg5776[1], Arg5776_2 = Arg5776[2], Arg5776_3 = Arg5776[3], Arg5776_4 = Arg5776[4], Arg5776_5 = Arg5776[5], Arg5776_6 = Arg5776[6], Arg5776_7 = Arg5776[7], Arg5776_8 = Arg5776[8], Arg5776_9 = Arg5776[9], Arg5776_10 = Arg5776[10], Arg5776_11 = Arg5776[11], Arg5776_12 = Arg5776[12], Arg5776_13 = Arg5776[13], Arg5776_14 = Arg5776[14], Arg5776_15 = Arg5776[15], Arg5776_16 = Arg5776[16], Arg5776_17 = Arg5776[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5776_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5776_8, (new Shen.Freeze([Arg5776_1, Arg5776_2, Arg5776_3, Arg5776_4, Arg5776_5, Arg5776_6, Arg5776_7, Arg5776_8, Arg5776_9], function(Arg5778) {
  var Arg5778_0 = Arg5778[0], Arg5778_1 = Arg5778[1], Arg5778_2 = Arg5778[2], Arg5778_3 = Arg5778[3], Arg5778_4 = Arg5778[4], Arg5778_5 = Arg5778[5], Arg5778_6 = Arg5778[6], Arg5778_7 = Arg5778[7], Arg5778_8 = Arg5778[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5778_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5778_4, Arg5778_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5778_0, Arg5778_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5778_1, Arg5778_7])]), Arg5778_7, (new Shen.Freeze([Arg5778_0, Arg5778_1, Arg5778_2, Arg5778_3, Arg5778_4, Arg5778_5, Arg5778_6, Arg5778_7, Arg5778_8], function(Arg5780) {
  var Arg5780_0 = Arg5780[0], Arg5780_1 = Arg5780[1], Arg5780_2 = Arg5780[2], Arg5780_3 = Arg5780[3], Arg5780_4 = Arg5780[4], Arg5780_5 = Arg5780[5], Arg5780_6 = Arg5780[6], Arg5780_7 = Arg5780[7], Arg5780_8 = Arg5780[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5780_2, Arg5780_3, [Shen.type_cons, [Shen.type_cons, Arg5780_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5780_5, []]]], Arg5780_6], Arg5780_7, Arg5780_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5706_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "-->"], Arg5706_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R3, R2, R6, R7, R4, Arg5706_2, Arg5706_3, Arg5706_4, R5, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5782) {
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1], Arg5782_2 = Arg5782[2], Arg5782_3 = Arg5782[3], Arg5782_4 = Arg5782[4], Arg5782_5 = Arg5782[5], Arg5782_6 = Arg5782[6], Arg5782_7 = Arg5782[7], Arg5782_8 = Arg5782[8], Arg5782_9 = Arg5782[9], Arg5782_10 = Arg5782[10], Arg5782_11 = Arg5782[11], Arg5782_12 = Arg5782[12], Arg5782_13 = Arg5782[13], Arg5782_14 = Arg5782[14], Arg5782_15 = Arg5782[15], Arg5782_16 = Arg5782[16], Arg5782_17 = Arg5782[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5782_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5782_8, (new Shen.Freeze([Arg5782_1, Arg5782_2, Arg5782_3, Arg5782_4, Arg5782_5, Arg5782_6, Arg5782_7, Arg5782_8, Arg5782_9], function(Arg5784) {
  var Arg5784_0 = Arg5784[0], Arg5784_1 = Arg5784[1], Arg5784_2 = Arg5784[2], Arg5784_3 = Arg5784[3], Arg5784_4 = Arg5784[4], Arg5784_5 = Arg5784[5], Arg5784_6 = Arg5784[6], Arg5784_7 = Arg5784[7], Arg5784_8 = Arg5784[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5784_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5784_4, Arg5784_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5784_0, Arg5784_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5784_1, Arg5784_7])]), Arg5784_7, (new Shen.Freeze([Arg5784_0, Arg5784_1, Arg5784_2, Arg5784_3, Arg5784_4, Arg5784_5, Arg5784_6, Arg5784_7, Arg5784_8], function(Arg5786) {
  var Arg5786_0 = Arg5786[0], Arg5786_1 = Arg5786[1], Arg5786_2 = Arg5786[2], Arg5786_3 = Arg5786[3], Arg5786_4 = Arg5786[4], Arg5786_5 = Arg5786[5], Arg5786_6 = Arg5786[6], Arg5786_7 = Arg5786[7], Arg5786_8 = Arg5786[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5786_2, Arg5786_3, [Shen.type_cons, [Shen.type_cons, Arg5786_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5786_5, []]]], Arg5786_6], Arg5786_7, Arg5786_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5706_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg5706_2, Arg5706_3, Arg5706_4, R2, Arg5706_3, R5, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5788) {
  var Arg5788_0 = Arg5788[0], Arg5788_1 = Arg5788[1], Arg5788_2 = Arg5788[2], Arg5788_3 = Arg5788[3], Arg5788_4 = Arg5788[4], Arg5788_5 = Arg5788[5], Arg5788_6 = Arg5788[6], Arg5788_7 = Arg5788[7], Arg5788_8 = Arg5788[8], Arg5788_9 = Arg5788[9], Arg5788_10 = Arg5788[10], Arg5788_11 = Arg5788[11], Arg5788_12 = Arg5788[12], Arg5788_13 = Arg5788[13], Arg5788_14 = Arg5788[14], Arg5788_15 = Arg5788[15], Arg5788_16 = Arg5788[16], Arg5788_17 = Arg5788[17], Arg5788_18 = Arg5788[18], Arg5788_19 = Arg5788[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5788_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5788_8, (new Shen.Freeze([Arg5788_1, Arg5788_2, Arg5788_3, Arg5788_4, Arg5788_5, Arg5788_6, Arg5788_7, Arg5788_8, Arg5788_9], function(Arg5790) {
  var Arg5790_0 = Arg5790[0], Arg5790_1 = Arg5790[1], Arg5790_2 = Arg5790[2], Arg5790_3 = Arg5790[3], Arg5790_4 = Arg5790[4], Arg5790_5 = Arg5790[5], Arg5790_6 = Arg5790[6], Arg5790_7 = Arg5790[7], Arg5790_8 = Arg5790[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5790_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5790_4, Arg5790_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5790_0, Arg5790_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5790_1, Arg5790_7])]), Arg5790_7, (new Shen.Freeze([Arg5790_0, Arg5790_1, Arg5790_2, Arg5790_3, Arg5790_4, Arg5790_5, Arg5790_6, Arg5790_7, Arg5790_8], function(Arg5792) {
  var Arg5792_0 = Arg5792[0], Arg5792_1 = Arg5792[1], Arg5792_2 = Arg5792[2], Arg5792_3 = Arg5792[3], Arg5792_4 = Arg5792[4], Arg5792_5 = Arg5792[5], Arg5792_6 = Arg5792[6], Arg5792_7 = Arg5792[7], Arg5792_8 = Arg5792[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5792_2, Arg5792_3, [Shen.type_cons, [Shen.type_cons, Arg5792_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5792_5, []]]], Arg5792_6], Arg5792_7, Arg5792_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg5706_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg5706_2, Arg5706_3, Arg5706_4, R2, Arg5706_3, R5, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5794) {
  var Arg5794_0 = Arg5794[0], Arg5794_1 = Arg5794[1], Arg5794_2 = Arg5794[2], Arg5794_3 = Arg5794[3], Arg5794_4 = Arg5794[4], Arg5794_5 = Arg5794[5], Arg5794_6 = Arg5794[6], Arg5794_7 = Arg5794[7], Arg5794_8 = Arg5794[8], Arg5794_9 = Arg5794[9], Arg5794_10 = Arg5794[10], Arg5794_11 = Arg5794[11], Arg5794_12 = Arg5794[12], Arg5794_13 = Arg5794[13], Arg5794_14 = Arg5794[14], Arg5794_15 = Arg5794[15], Arg5794_16 = Arg5794[16], Arg5794_17 = Arg5794[17], Arg5794_18 = Arg5794[18], Arg5794_19 = Arg5794[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5794_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5794_8, (new Shen.Freeze([Arg5794_1, Arg5794_2, Arg5794_3, Arg5794_4, Arg5794_5, Arg5794_6, Arg5794_7, Arg5794_8, Arg5794_9], function(Arg5796) {
  var Arg5796_0 = Arg5796[0], Arg5796_1 = Arg5796[1], Arg5796_2 = Arg5796[2], Arg5796_3 = Arg5796[3], Arg5796_4 = Arg5796[4], Arg5796_5 = Arg5796[5], Arg5796_6 = Arg5796[6], Arg5796_7 = Arg5796[7], Arg5796_8 = Arg5796[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5796_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5796_4, Arg5796_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5796_0, Arg5796_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5796_1, Arg5796_7])]), Arg5796_7, (new Shen.Freeze([Arg5796_0, Arg5796_1, Arg5796_2, Arg5796_3, Arg5796_4, Arg5796_5, Arg5796_6, Arg5796_7, Arg5796_8], function(Arg5798) {
  var Arg5798_0 = Arg5798[0], Arg5798_1 = Arg5798[1], Arg5798_2 = Arg5798[2], Arg5798_3 = Arg5798[3], Arg5798_4 = Arg5798[4], Arg5798_5 = Arg5798[5], Arg5798_6 = Arg5798[6], Arg5798_7 = Arg5798[7], Arg5798_8 = Arg5798[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5798_2, Arg5798_3, [Shen.type_cons, [Shen.type_cons, Arg5798_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5798_5, []]]], Arg5798_6], Arg5798_7, Arg5798_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5706_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]], Arg5706_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg5706_2, Arg5706_3, Arg5706_4, R2, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5800) {
  var Arg5800_0 = Arg5800[0], Arg5800_1 = Arg5800[1], Arg5800_2 = Arg5800[2], Arg5800_3 = Arg5800[3], Arg5800_4 = Arg5800[4], Arg5800_5 = Arg5800[5], Arg5800_6 = Arg5800[6], Arg5800_7 = Arg5800[7], Arg5800_8 = Arg5800[8], Arg5800_9 = Arg5800[9], Arg5800_10 = Arg5800[10], Arg5800_11 = Arg5800[11], Arg5800_12 = Arg5800[12], Arg5800_13 = Arg5800[13], Arg5800_14 = Arg5800[14], Arg5800_15 = Arg5800[15], Arg5800_16 = Arg5800[16], Arg5800_17 = Arg5800[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5800_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5800_8, (new Shen.Freeze([Arg5800_1, Arg5800_2, Arg5800_3, Arg5800_4, Arg5800_5, Arg5800_6, Arg5800_7, Arg5800_8, Arg5800_9], function(Arg5802) {
  var Arg5802_0 = Arg5802[0], Arg5802_1 = Arg5802[1], Arg5802_2 = Arg5802[2], Arg5802_3 = Arg5802[3], Arg5802_4 = Arg5802[4], Arg5802_5 = Arg5802[5], Arg5802_6 = Arg5802[6], Arg5802_7 = Arg5802[7], Arg5802_8 = Arg5802[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5802_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5802_4, Arg5802_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5802_0, Arg5802_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5802_1, Arg5802_7])]), Arg5802_7, (new Shen.Freeze([Arg5802_0, Arg5802_1, Arg5802_2, Arg5802_3, Arg5802_4, Arg5802_5, Arg5802_6, Arg5802_7, Arg5802_8], function(Arg5804) {
  var Arg5804_0 = Arg5804[0], Arg5804_1 = Arg5804[1], Arg5804_2 = Arg5804[2], Arg5804_3 = Arg5804[3], Arg5804_4 = Arg5804[4], Arg5804_5 = Arg5804[5], Arg5804_6 = Arg5804[6], Arg5804_7 = Arg5804[7], Arg5804_8 = Arg5804[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5804_2, Arg5804_3, [Shen.type_cons, [Shen.type_cons, Arg5804_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5804_5, []]]], Arg5804_6], Arg5804_7, Arg5804_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]]], Arg5706_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg5706_2, Arg5706_3, Arg5706_4, R2, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5806) {
  var Arg5806_0 = Arg5806[0], Arg5806_1 = Arg5806[1], Arg5806_2 = Arg5806[2], Arg5806_3 = Arg5806[3], Arg5806_4 = Arg5806[4], Arg5806_5 = Arg5806[5], Arg5806_6 = Arg5806[6], Arg5806_7 = Arg5806[7], Arg5806_8 = Arg5806[8], Arg5806_9 = Arg5806[9], Arg5806_10 = Arg5806[10], Arg5806_11 = Arg5806[11], Arg5806_12 = Arg5806[12], Arg5806_13 = Arg5806[13], Arg5806_14 = Arg5806[14], Arg5806_15 = Arg5806[15], Arg5806_16 = Arg5806[16], Arg5806_17 = Arg5806[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5806_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5806_8, (new Shen.Freeze([Arg5806_1, Arg5806_2, Arg5806_3, Arg5806_4, Arg5806_5, Arg5806_6, Arg5806_7, Arg5806_8, Arg5806_9], function(Arg5808) {
  var Arg5808_0 = Arg5808[0], Arg5808_1 = Arg5808[1], Arg5808_2 = Arg5808[2], Arg5808_3 = Arg5808[3], Arg5808_4 = Arg5808[4], Arg5808_5 = Arg5808[5], Arg5808_6 = Arg5808[6], Arg5808_7 = Arg5808[7], Arg5808_8 = Arg5808[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5808_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5808_4, Arg5808_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5808_0, Arg5808_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5808_1, Arg5808_7])]), Arg5808_7, (new Shen.Freeze([Arg5808_0, Arg5808_1, Arg5808_2, Arg5808_3, Arg5808_4, Arg5808_5, Arg5808_6, Arg5808_7, Arg5808_8], function(Arg5810) {
  var Arg5810_0 = Arg5810[0], Arg5810_1 = Arg5810[1], Arg5810_2 = Arg5810[2], Arg5810_3 = Arg5810[3], Arg5810_4 = Arg5810[4], Arg5810_5 = Arg5810[5], Arg5810_6 = Arg5810[6], Arg5810_7 = Arg5810[7], Arg5810_8 = Arg5810[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5810_2, Arg5810_3, [Shen.type_cons, [Shen.type_cons, Arg5810_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5810_5, []]]], Arg5810_6], Arg5810_7, Arg5810_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R3, R1, R4, R2, Arg5706_1, R5, R6, Arg5706_2, Arg5706_3, Arg5706_4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5812) {
  var Arg5812_0 = Arg5812[0], Arg5812_1 = Arg5812[1], Arg5812_2 = Arg5812[2], Arg5812_3 = Arg5812[3], Arg5812_4 = Arg5812[4], Arg5812_5 = Arg5812[5], Arg5812_6 = Arg5812[6], Arg5812_7 = Arg5812[7], Arg5812_8 = Arg5812[8], Arg5812_9 = Arg5812[9], Arg5812_10 = Arg5812[10], Arg5812_11 = Arg5812[11], Arg5812_12 = Arg5812[12], Arg5812_13 = Arg5812[13], Arg5812_14 = Arg5812[14], Arg5812_15 = Arg5812[15], Arg5812_16 = Arg5812[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5812_1, Arg5812_7, Arg5812_8, Arg5812_9, (new Shen.Freeze([Arg5812_1, Arg5812_2, Arg5812_3, Arg5812_4, Arg5812_5, Arg5812_6, Arg5812_7, Arg5812_8, Arg5812_9, Arg5812_10], function(Arg5814) {
  var Arg5814_0 = Arg5814[0], Arg5814_1 = Arg5814[1], Arg5814_2 = Arg5814[2], Arg5814_3 = Arg5814[3], Arg5814_4 = Arg5814[4], Arg5814_5 = Arg5814[5], Arg5814_6 = Arg5814[6], Arg5814_7 = Arg5814[7], Arg5814_8 = Arg5814[8], Arg5814_9 = Arg5814[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5814_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5814_8, (new Shen.Freeze([Arg5814_1, Arg5814_2, Arg5814_3, Arg5814_4, Arg5814_5, Arg5814_6, Arg5814_7, Arg5814_8, Arg5814_9], function(Arg5816) {
  var Arg5816_0 = Arg5816[0], Arg5816_1 = Arg5816[1], Arg5816_2 = Arg5816[2], Arg5816_3 = Arg5816[3], Arg5816_4 = Arg5816[4], Arg5816_5 = Arg5816[5], Arg5816_6 = Arg5816[6], Arg5816_7 = Arg5816[7], Arg5816_8 = Arg5816[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5816_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5816_4, Arg5816_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5816_0, Arg5816_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5816_1, Arg5816_7])]), Arg5816_7, (new Shen.Freeze([Arg5816_0, Arg5816_1, Arg5816_2, Arg5816_3, Arg5816_4, Arg5816_5, Arg5816_6, Arg5816_7, Arg5816_8], function(Arg5818) {
  var Arg5818_0 = Arg5818[0], Arg5818_1 = Arg5818[1], Arg5818_2 = Arg5818[2], Arg5818_3 = Arg5818[3], Arg5818_4 = Arg5818[4], Arg5818_5 = Arg5818[5], Arg5818_6 = Arg5818[6], Arg5818_7 = Arg5818[7], Arg5818_8 = Arg5818[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5818_2, Arg5818_3, [Shen.type_cons, [Shen.type_cons, Arg5818_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5818_5, []]]], Arg5818_6], Arg5818_7, Arg5818_8]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "open"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "file"], R1)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_1, Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "stream"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5706_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5706_3, (new Shen.Freeze([R2, R3, R1, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5820) {
  var Arg5820_0 = Arg5820[0], Arg5820_1 = Arg5820[1], Arg5820_2 = Arg5820[2], Arg5820_3 = Arg5820[3], Arg5820_4 = Arg5820[4], Arg5820_5 = Arg5820[5], Arg5820_6 = Arg5820[6], Arg5820_7 = Arg5820[7], Arg5820_8 = Arg5820[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5820_3, Arg5820_7, (new Shen.Freeze([Arg5820_3, Arg5820_2, Arg5820_6, Arg5820_7, Arg5820_8], function(Arg5822) {
  var Arg5822_0 = Arg5822[0], Arg5822_1 = Arg5822[1], Arg5822_2 = Arg5822[2], Arg5822_3 = Arg5822[3], Arg5822_4 = Arg5822[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5822_1, [Shen.type_symbol, "string"], Arg5822_2, Arg5822_3, Arg5822_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5706_3, (new Shen.Freeze([R2, R3, R1, R4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5824) {
  var Arg5824_0 = Arg5824[0], Arg5824_1 = Arg5824[1], Arg5824_2 = Arg5824[2], Arg5824_3 = Arg5824[3], Arg5824_4 = Arg5824[4], Arg5824_5 = Arg5824[5], Arg5824_6 = Arg5824[6], Arg5824_7 = Arg5824[7], Arg5824_8 = Arg5824[8], Arg5824_9 = Arg5824[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5824_4, Arg5824_8, (new Shen.Freeze([Arg5824_4, Arg5824_2, Arg5824_7, Arg5824_8, Arg5824_9], function(Arg5826) {
  var Arg5826_0 = Arg5826[0], Arg5826_1 = Arg5826[1], Arg5826_2 = Arg5826[2], Arg5826_3 = Arg5826[3], Arg5826_4 = Arg5826[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5826_1, [Shen.type_symbol, "string"], Arg5826_2, Arg5826_3, Arg5826_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5706_3, (new Shen.Freeze([R2, R3, R0, R1, Arg5706_2, Arg5706_4, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5828) {
  var Arg5828_0 = Arg5828[0], Arg5828_1 = Arg5828[1], Arg5828_2 = Arg5828[2], Arg5828_3 = Arg5828[3], Arg5828_4 = Arg5828[4], Arg5828_5 = Arg5828[5], Arg5828_6 = Arg5828[6], Arg5828_7 = Arg5828[7], Arg5828_8 = Arg5828[8], Arg5828_9 = Arg5828[9], Arg5828_10 = Arg5828[10], Arg5828_11 = Arg5828[11], Arg5828_12 = Arg5828[12], Arg5828_13 = Arg5828[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5828_2, Arg5828_7, (new Shen.Freeze([Arg5828_2, Arg5828_3, Arg5828_4, Arg5828_7, Arg5828_5], function(Arg5830) {
  var Arg5830_0 = Arg5830[0], Arg5830_1 = Arg5830[1], Arg5830_2 = Arg5830[2], Arg5830_3 = Arg5830[3], Arg5830_4 = Arg5830[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5830_1, [Shen.type_symbol, "string"], Arg5830_2, Arg5830_3, Arg5830_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "stream"], Arg5706_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5706_3, (new Shen.Freeze([R5, R3, R1, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5832) {
  var Arg5832_0 = Arg5832[0], Arg5832_1 = Arg5832[1], Arg5832_2 = Arg5832[2], Arg5832_3 = Arg5832[3], Arg5832_4 = Arg5832[4], Arg5832_5 = Arg5832[5], Arg5832_6 = Arg5832[6], Arg5832_7 = Arg5832[7], Arg5832_8 = Arg5832[8], Arg5832_9 = Arg5832[9], Arg5832_10 = Arg5832[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5832_5, Arg5832_4, (new Shen.Freeze([Arg5832_5, Arg5832_2, Arg5832_8, Arg5832_4, Arg5832_9], function(Arg5834) {
  var Arg5834_0 = Arg5834[0], Arg5834_1 = Arg5834[1], Arg5834_2 = Arg5834[2], Arg5834_3 = Arg5834[3], Arg5834_4 = Arg5834[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5834_1, [Shen.type_symbol, "string"], Arg5834_2, Arg5834_3, Arg5834_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5706_3, (new Shen.Freeze([R5, R3, R1, R2, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5836) {
  var Arg5836_0 = Arg5836[0], Arg5836_1 = Arg5836[1], Arg5836_2 = Arg5836[2], Arg5836_3 = Arg5836[3], Arg5836_4 = Arg5836[4], Arg5836_5 = Arg5836[5], Arg5836_6 = Arg5836[6], Arg5836_7 = Arg5836[7], Arg5836_8 = Arg5836[8], Arg5836_9 = Arg5836[9], Arg5836_10 = Arg5836[10], Arg5836_11 = Arg5836[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5836_6, Arg5836_5, (new Shen.Freeze([Arg5836_6, Arg5836_2, Arg5836_9, Arg5836_5, Arg5836_10], function(Arg5838) {
  var Arg5838_0 = Arg5838[0], Arg5838_1 = Arg5838[1], Arg5838_2 = Arg5838[2], Arg5838_3 = Arg5838[3], Arg5838_4 = Arg5838[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5838_1, [Shen.type_symbol, "string"], Arg5838_2, Arg5838_3, Arg5838_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5706_3, (new Shen.Freeze([R5, R3, R0, R1, Arg5706_2, Arg5706_4, R2, Arg5706_3, R4, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5840) {
  var Arg5840_0 = Arg5840[0], Arg5840_1 = Arg5840[1], Arg5840_2 = Arg5840[2], Arg5840_3 = Arg5840[3], Arg5840_4 = Arg5840[4], Arg5840_5 = Arg5840[5], Arg5840_6 = Arg5840[6], Arg5840_7 = Arg5840[7], Arg5840_8 = Arg5840[8], Arg5840_9 = Arg5840[9], Arg5840_10 = Arg5840[10], Arg5840_11 = Arg5840[11], Arg5840_12 = Arg5840[12], Arg5840_13 = Arg5840[13], Arg5840_14 = Arg5840[14], Arg5840_15 = Arg5840[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5840_2, Arg5840_7, (new Shen.Freeze([Arg5840_2, Arg5840_3, Arg5840_4, Arg5840_7, Arg5840_5], function(Arg5842) {
  var Arg5842_0 = Arg5842[0], Arg5842_1 = Arg5842[1], Arg5842_2 = Arg5842[2], Arg5842_3 = Arg5842[3], Arg5842_4 = Arg5842[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5842_1, [Shen.type_symbol, "string"], Arg5842_2, Arg5842_3, Arg5842_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5706_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, R4, []]], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R3, Arg5706_3, (new Shen.Freeze([R4, R3, R0, R1, Arg5706_2, Arg5706_4, R2, Arg5706_3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5844) {
  var Arg5844_0 = Arg5844[0], Arg5844_1 = Arg5844[1], Arg5844_2 = Arg5844[2], Arg5844_3 = Arg5844[3], Arg5844_4 = Arg5844[4], Arg5844_5 = Arg5844[5], Arg5844_6 = Arg5844[6], Arg5844_7 = Arg5844[7], Arg5844_8 = Arg5844[8], Arg5844_9 = Arg5844[9], Arg5844_10 = Arg5844[10], Arg5844_11 = Arg5844[11], Arg5844_12 = Arg5844[12], Arg5844_13 = Arg5844[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5844_2, Arg5844_7, (new Shen.Freeze([Arg5844_2, Arg5844_3, Arg5844_4, Arg5844_7, Arg5844_5], function(Arg5846) {
  var Arg5846_0 = Arg5846[0], Arg5846_1 = Arg5846[1], Arg5846_2 = Arg5846[2], Arg5846_3 = Arg5846[3], Arg5846_4 = Arg5846[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5846_1, [Shen.type_symbol, "string"], Arg5846_2, Arg5846_3, Arg5846_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R1, R3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5848) {
  var Arg5848_0 = Arg5848[0], Arg5848_1 = Arg5848[1], Arg5848_2 = Arg5848[2], Arg5848_3 = Arg5848[3], Arg5848_4 = Arg5848[4], Arg5848_5 = Arg5848[5], Arg5848_6 = Arg5848[6], Arg5848_7 = Arg5848[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg5848_1, Arg5848_4, Arg5848_6, (new Shen.Freeze([Arg5848_4, Arg5848_0, Arg5848_1, Arg5848_5, Arg5848_6, Arg5848_7], function(Arg5850) {
  var Arg5850_0 = Arg5850[0], Arg5850_1 = Arg5850[1], Arg5850_2 = Arg5850[2], Arg5850_3 = Arg5850[3], Arg5850_4 = Arg5850[4], Arg5850_5 = Arg5850[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5850_1, Arg5850_2, Arg5850_3, Arg5850_4, Arg5850_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["bind"], [R2, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5706_3])]), Arg5706_3, (new Shen.Freeze([R1, Arg5706_1, R2, Arg5706_3, Arg5706_4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5852) {
  var Arg5852_0 = Arg5852[0], Arg5852_1 = Arg5852[1], Arg5852_2 = Arg5852[2], Arg5852_3 = Arg5852[3], Arg5852_4 = Arg5852[4], Arg5852_5 = Arg5852[5], Arg5852_6 = Arg5852[6], Arg5852_7 = Arg5852[7], Arg5852_8 = Arg5852[8], Arg5852_9 = Arg5852[9], Arg5852_10 = Arg5852[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg5852_1, Arg5852_2, Arg5852_3, Arg5852_4]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R3, R1, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5854) {
  var Arg5854_0 = Arg5854[0], Arg5854_1 = Arg5854[1], Arg5854_2 = Arg5854[2], Arg5854_3 = Arg5854[3], Arg5854_4 = Arg5854[4], Arg5854_5 = Arg5854[5], Arg5854_6 = Arg5854[6], Arg5854_7 = Arg5854[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5854_1, [Shen.type_symbol, "boolean"], Arg5854_5, Arg5854_6, (new Shen.Freeze([Arg5854_2, Arg5854_0, Arg5854_4, Arg5854_1, Arg5854_5, Arg5854_6, Arg5854_7], function(Arg5856) {
  var Arg5856_0 = Arg5856[0], Arg5856_1 = Arg5856[1], Arg5856_2 = Arg5856[2], Arg5856_3 = Arg5856[3], Arg5856_4 = Arg5856[4], Arg5856_5 = Arg5856[5], Arg5856_6 = Arg5856[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5856_0, Arg5856_5, (new Shen.Freeze([Arg5856_0, Arg5856_1, Arg5856_2, Arg5856_3, Arg5856_4, Arg5856_5, Arg5856_6], function(Arg5858) {
  var Arg5858_0 = Arg5858[0], Arg5858_1 = Arg5858[1], Arg5858_2 = Arg5858[2], Arg5858_3 = Arg5858[3], Arg5858_4 = Arg5858[4], Arg5858_5 = Arg5858[5], Arg5858_6 = Arg5858[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5858_1, Arg5858_2, [Shen.type_cons, [Shen.type_cons, Arg5858_3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "verified"], []]]], Arg5858_4], Arg5858_5, Arg5858_6]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R1, R3, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5860) {
  var Arg5860_0 = Arg5860[0], Arg5860_1 = Arg5860[1], Arg5860_2 = Arg5860[2], Arg5860_3 = Arg5860[3], Arg5860_4 = Arg5860[4], Arg5860_5 = Arg5860[5], Arg5860_6 = Arg5860[6], Arg5860_7 = Arg5860[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [[Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, Arg5860_0, []]], Arg5860_4, Arg5860_5, Arg5860_6, (new Shen.Freeze([Arg5860_0, Arg5860_1, Arg5860_4, Arg5860_5, Arg5860_6, Arg5860_7], function(Arg5862) {
  var Arg5862_0 = Arg5862[0], Arg5862_1 = Arg5862[1], Arg5862_2 = Arg5862[2], Arg5862_3 = Arg5862[3], Arg5862_4 = Arg5862[4], Arg5862_5 = Arg5862[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5862_1, Arg5862_2, Arg5862_3, Arg5862_4, Arg5862_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.<-sem"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R2, R1, R0, Arg5706_1, R3, R4, Arg5706_2, Arg5706_3, Arg5706_4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5864) {
  var Arg5864_0 = Arg5864[0], Arg5864_1 = Arg5864[1], Arg5864_2 = Arg5864[2], Arg5864_3 = Arg5864[3], Arg5864_4 = Arg5864[4], Arg5864_5 = Arg5864[5], Arg5864_6 = Arg5864[6], Arg5864_7 = Arg5864[7], Arg5864_8 = Arg5864[8], Arg5864_9 = Arg5864[9], Arg5864_10 = Arg5864[10], Arg5864_11 = Arg5864[11], Arg5864_12 = Arg5864[12], Arg5864_13 = Arg5864[13], Arg5864_14 = Arg5864[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5864_1, [Shen.type_cons, Arg5864_0, [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg5864_5, []]]], Arg5864_6, Arg5864_7, (new Shen.Freeze([Arg5864_0, Arg5864_1, Arg5864_2, Arg5864_3, Arg5864_4, Arg5864_5, Arg5864_6, Arg5864_7, Arg5864_8], function(Arg5866) {
  var Arg5866_0 = Arg5866[0], Arg5866_1 = Arg5866[1], Arg5866_2 = Arg5866[2], Arg5866_3 = Arg5866[3], Arg5866_4 = Arg5866[4], Arg5866_5 = Arg5866[5], Arg5866_6 = Arg5866[6], Arg5866_7 = Arg5866[7], Arg5866_8 = Arg5866[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5866_2, Arg5866_7, (new Shen.Freeze([Arg5866_1, Arg5866_2, Arg5866_3, Arg5866_4, Arg5866_5, Arg5866_6, Arg5866_7, Arg5866_8], function(Arg5868) {
  var Arg5868_0 = Arg5868[0], Arg5868_1 = Arg5868[1], Arg5868_2 = Arg5868[2], Arg5868_3 = Arg5868[3], Arg5868_4 = Arg5868[4], Arg5868_5 = Arg5868[5], Arg5868_6 = Arg5868[6], Arg5868_7 = Arg5868[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5868_3, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Shen.call(Shen.fns["shen.lazyderef"], [Arg5868_0, Arg5868_6])]), Arg5868_6, (new Shen.Freeze([Arg5868_0, Arg5868_1, Arg5868_2, Arg5868_3, Arg5868_4, Arg5868_5, Arg5868_6, Arg5868_7], function(Arg5870) {
  var Arg5870_0 = Arg5870[0], Arg5870_1 = Arg5870[1], Arg5870_2 = Arg5870[2], Arg5870_3 = Arg5870[3], Arg5870_4 = Arg5870[4], Arg5870_5 = Arg5870[5], Arg5870_6 = Arg5870[6], Arg5870_7 = Arg5870[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5870_1, Arg5870_6, (new Shen.Freeze([Arg5870_1, Arg5870_2, Arg5870_3, Arg5870_4, Arg5870_5, Arg5870_6, Arg5870_7], function(Arg5872) {
  var Arg5872_0 = Arg5872[0], Arg5872_1 = Arg5872[1], Arg5872_2 = Arg5872[2], Arg5872_3 = Arg5872[3], Arg5872_4 = Arg5872[4], Arg5872_5 = Arg5872[5], Arg5872_6 = Arg5872[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5872_2, Arg5872_1, [Shen.type_cons, [Shen.type_cons, Arg5872_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5872_3, []]]], Arg5872_4], Arg5872_5, Arg5872_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_1, Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5706_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "symbol"], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5706_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5706_3]),
  (R1 = R1))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-hyps"], [Arg5706_2, R1, Arg5706_3, (new Shen.Freeze([Arg5706_2, Arg5706_0, Arg5706_1, R1, Arg5706_3, Arg5706_4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5874) {
  var Arg5874_0 = Arg5874[0], Arg5874_1 = Arg5874[1], Arg5874_2 = Arg5874[2], Arg5874_3 = Arg5874[3], Arg5874_4 = Arg5874[4], Arg5874_5 = Arg5874[5], Arg5874_6 = Arg5874[6], Arg5874_7 = Arg5874[7], Arg5874_8 = Arg5874[8], Arg5874_9 = Arg5874[9], Arg5874_10 = Arg5874[10], Arg5874_11 = Arg5874[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5874_1, Arg5874_2, Arg5874_3, Arg5874_4, Arg5874_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R2, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4, R0, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5876) {
  var Arg5876_0 = Arg5876[0], Arg5876_1 = Arg5876[1], Arg5876_2 = Arg5876[2], Arg5876_3 = Arg5876[3], Arg5876_4 = Arg5876[4], Arg5876_5 = Arg5876[5], Arg5876_6 = Arg5876[6], Arg5876_7 = Arg5876[7], Arg5876_8 = Arg5876[8], Arg5876_9 = Arg5876[9], Arg5876_10 = Arg5876[10], Arg5876_11 = Arg5876[11], Arg5876_12 = Arg5876[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg5876_1, Arg5876_2]], Arg5876_3, Arg5876_4, Arg5876_5, Arg5876_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5706_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5706_3, (new Shen.Freeze([R0, R1, R2, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4, Arg5706_0, Arg5706_1, Arg5706_2, Arg5706_3, Arg5706_4], function(Arg5878) {
  var Arg5878_0 = Arg5878[0], Arg5878_1 = Arg5878[1], Arg5878_2 = Arg5878[2], Arg5878_3 = Arg5878[3], Arg5878_4 = Arg5878[4], Arg5878_5 = Arg5878[5], Arg5878_6 = Arg5878[6], Arg5878_7 = Arg5878[7], Arg5878_8 = Arg5878[8], Arg5878_9 = Arg5878[9], Arg5878_10 = Arg5878[10], Arg5878_11 = Arg5878[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defcc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg5878_1, Arg5878_2]], Arg5878_3, Arg5878_4, Arg5878_5, Arg5878_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.process-datatype"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_1, Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5706_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5706_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5706_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_0, Arg5706_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5706_1, Arg5706_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5706_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg5706_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5706_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5706_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5706_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, (Shen.globals["shen.*datatypes*"]), Arg5706_3, (new Shen.Freeze([Arg5706_0, Arg5706_1, Arg5706_2, R1, Arg5706_3, Arg5706_4], function(Arg5880) {
  var Arg5880_0 = Arg5880[0], Arg5880_1 = Arg5880[1], Arg5880_2 = Arg5880[2], Arg5880_3 = Arg5880[3], Arg5880_4 = Arg5880[4], Arg5880_5 = Arg5880[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [[Shen.type_cons, Arg5880_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5880_1, []]]], Arg5880_2, Arg5880_3, Arg5880_4, Arg5880_5]);});})}))]))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.th*"];





Shen.fns["shen.t*-hyps"] = [Shen.type_func, function shen_user_lambda5883(Arg5882) {
  if (Arg5882.length < 4) return [Shen.type_func, shen_user_lambda5883, 4, Arg5882];
  var Arg5882_0 = Arg5882[0], Arg5882_1 = Arg5882[1], Arg5882_2 = Arg5882[2], Arg5882_3 = Arg5882[3];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5882_0, Arg5882_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5882_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5882_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5882_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "list"], Arg5882_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R5, []]], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5882_0, Arg5882_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5882_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg5882_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg5882_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5882_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5882_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R1, []], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5882_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, "*"], Arg5882_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R7 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R7, []], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5882_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R0 = R6))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]]], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R0 = R6))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5882_0, Arg5882_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5882_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5882_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5882_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "vector"], Arg5882_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R5, []]], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5882_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5882_0, Arg5882_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5882_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5882_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5882_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "string"], Arg5882_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5882_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5882_2])]], Arg5882_2, Arg5882_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5882_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5882_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5882_2])]], Arg5882_2, Arg5882_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5882_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5882_2]),
  (R0 = R4))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5882_0, Arg5882_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5882_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5882_1, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5882_2]), Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5882_2])], Arg5882_2, (new Shen.Freeze([Arg5882_1, R1, R0, R2, Arg5882_2, Arg5882_3], function(Arg5884) {
  var Arg5884_0 = Arg5884[0], Arg5884_1 = Arg5884[1], Arg5884_2 = Arg5884[2], Arg5884_3 = Arg5884[3], Arg5884_4 = Arg5884[4], Arg5884_5 = Arg5884[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-hyps"], [Arg5884_2, Arg5884_3, Arg5884_4, Arg5884_5]);});})}))]);}))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.t*-hyps"];





Shen.fns["shen.show"] = [Shen.type_func, function shen_user_lambda5887(Arg5886) {
  if (Arg5886.length < 4) return [Shen.type_func, shen_user_lambda5887, 4, Arg5886];
  var Arg5886_0 = Arg5886[0], Arg5886_1 = Arg5886[1], Arg5886_2 = Arg5886[2], Arg5886_3 = Arg5886[3];
  return (((Shen.globals["shen.*spy*"]))
  ? (Shen.call(Shen.fns["shen.line"], []),
  Shen.call(Shen.fns["shen.show-p"], [Shen.call(Shen.fns["shen.deref"], [Arg5886_0, Arg5886_2])]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["shen.show-assumptions"], [Shen.call(Shen.fns["shen.deref"], [Arg5886_1, Arg5886_2]), 1]),
  Shen.pr("\x0a> ", Shen.call(Shen.fns["stoutput"], [])),
  Shen.call(Shen.fns["shen.pause-for-user"], [(Shen.globals["*language*"])]),
  Shen.thaw(Arg5886_3))
  : Shen.thaw(Arg5886_3))}, 4, [], "shen.show"];





Shen.fns["shen.line"] = [Shen.type_func, function shen_user_lambda5889(Arg5888) {
  if (Arg5888.length < 0) return [Shen.type_func, shen_user_lambda5889, 0, Arg5888];
  var R0;
  return ((R0 = Shen.call(Shen.fns["inferences"], [])),
  (function() {
  return Shen.pr(("____________________________________________________________ " + Shen.call(Shen.fns["shen.app"], [R0, (" inference" + Shen.call(Shen.fns["shen.app"], [((Shen.unwind_tail(Shen.$eq$(1, R0)))
  ? ""
  : "s"), " \x0a?- ", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));}))}, 0, [], "shen.line"];





Shen.fns["shen.show-p"] = [Shen.type_func, function shen_user_lambda5891(Arg5890) {
  if (Arg5890.length < 1) return [Shen.type_func, shen_user_lambda5891, 1, Arg5890];
  var Arg5890_0 = Arg5890[0];
  return (((Shen.is_type(Arg5890_0, Shen.type_cons) && (Shen.is_type(Arg5890_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg5890_0[2][1])) && (Shen.is_type(Arg5890_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5890_0[2][2][2]))))))
  ? (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg5890_0[1], (" : " + Shen.call(Shen.fns["shen.app"], [Arg5890_0[2][2][1], "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], []));})
  : (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg5890_0, "", [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], []));}))}, 1, [], "shen.show-p"];





Shen.fns["shen.show-assumptions"] = [Shen.type_func, function shen_user_lambda5893(Arg5892) {
  if (Arg5892.length < 2) return [Shen.type_func, shen_user_lambda5893, 2, Arg5892];
  var Arg5892_0 = Arg5892[0], Arg5892_1 = Arg5892[1];
  return ((Shen.empty$question$(Arg5892_0))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.is_type(Arg5892_0, Shen.type_cons))
  ? (Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg5892_1, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])),
  Shen.call(Shen.fns["shen.show-p"], [Arg5892_0[1]]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.show-assumptions"], [Arg5892_0[2], (Arg5892_1 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.show-assumptions"]]);})))}, 2, [], "shen.show-assumptions"];





Shen.fns["shen.pause-for-user"] = [Shen.type_func, function shen_user_lambda5895(Arg5894) {
  if (Arg5894.length < 1) return [Shen.type_func, shen_user_lambda5895, 1, Arg5894];
  var Arg5894_0 = Arg5894[0];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$("Common Lisp", Arg5894_0)))
  ? ((R0 = Shen.call(Shen.fns["FORMAT"], [[], "~C", Shen.call(Shen.fns["READ-CHAR"], [])])),
  ((Shen.unwind_tail(Shen.$eq$(R0, "a")))
  ? (function() {
  return Shen.simple_error("input aborted\x0a");})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);})))
  : ((R0 = Shen.call(Shen.fns["shen.read-char"], [])),
  ((Shen.unwind_tail(Shen.$eq$(R0, "a")))
  ? (function() {
  return Shen.simple_error("input aborted\x0a");})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))))}, 1, [], "shen.pause-for-user"];





Shen.fns["shen.read-char"] = [Shen.type_func, function shen_user_lambda5897(Arg5896) {
  if (Arg5896.length < 0) return [Shen.type_func, shen_user_lambda5897, 0, Arg5896];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 0]);})}, 0, [], "shen.read-char"];





Shen.fns["shen.read-char-h"] = [Shen.type_func, function shen_user_lambda5899(Arg5898) {
  if (Arg5898.length < 2) return [Shen.type_func, shen_user_lambda5899, 2, Arg5898];
  var Arg5898_0 = Arg5898[0], Arg5898_1 = Arg5898[1];
  return (((Shen.unwind_tail(Shen.$eq$(-1, Arg5898_0)) && Shen.unwind_tail(Shen.$eq$(0, Arg5898_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 1]);})
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg5898_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 0]);})
  : (((Shen.unwind_tail(Shen.$eq$(-1, Arg5898_0)) && Shen.unwind_tail(Shen.$eq$(1, Arg5898_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 1]);})
  : ((Shen.unwind_tail(Shen.$eq$(1, Arg5898_1)))
  ? (function() {
  return Shen.n_$gt$string(Arg5898_0);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.read-char-h"]]);})))))}, 2, [], "shen.read-char-h"];





Shen.fns["shen.typedf?"] = [Shen.type_func, function shen_user_lambda5901(Arg5900) {
  if (Arg5900.length < 1) return [Shen.type_func, shen_user_lambda5901, 1, Arg5900];
  var Arg5900_0 = Arg5900[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5900_0, (Shen.globals["shen.*signedfuncs*"])]);})}, 1, [], "shen.typedf?"];





Shen.fns["shen.sigf"] = [Shen.type_func, function shen_user_lambda5903(Arg5902) {
  if (Arg5902.length < 1) return [Shen.type_func, shen_user_lambda5903, 1, Arg5902];
  var Arg5902_0 = Arg5902[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg5902_0]);})}, 1, [], "shen.sigf"];





Shen.fns["shen.placeholder"] = [Shen.type_func, function shen_user_lambda5905(Arg5904) {
  if (Arg5904.length < 0) return [Shen.type_func, shen_user_lambda5905, 0, Arg5904];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "&&"]]);})}, 0, [], "shen.placeholder"];





Shen.fns["shen.base"] = [Shen.type_func, function shen_user_lambda5907(Arg5906) {
  if (Arg5906.length < 4) return [Shen.type_func, shen_user_lambda5907, 4, Arg5906];
  var Arg5906_0 = Arg5906[0], Arg5906_1 = Arg5906[1], Arg5906_2 = Arg5906[2], Arg5906_3 = Arg5906[3];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_1, Arg5906_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_0, Arg5906_2])) == 'number'), Arg5906_2, Arg5906_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "number"], Arg5906_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_0, Arg5906_2])) == 'number'), Arg5906_2, Arg5906_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5906_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_1, Arg5906_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_0, Arg5906_2])), Arg5906_2, Arg5906_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "boolean"], Arg5906_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_0, Arg5906_2])), Arg5906_2, Arg5906_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5906_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_1, Arg5906_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_0, Arg5906_2])) == 'string'), Arg5906_2, Arg5906_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "string"], Arg5906_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_0, Arg5906_2])) == 'string'), Arg5906_2, Arg5906_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5906_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_1, Arg5906_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_0, Arg5906_2]), Shen.type_symbol), Arg5906_2, (new Shen.Freeze([Arg5906_0, Arg5906_1, Arg5906_3, Arg5906_2], function(Arg5908) {
  var Arg5908_0 = Arg5908[0], Arg5908_1 = Arg5908[1], Arg5908_2 = Arg5908[2], Arg5908_3 = Arg5908[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5908_0, Arg5908_3])])), Arg5908_3, Arg5908_2]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "symbol"], Arg5906_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_0, Arg5906_2]), Shen.type_symbol), Arg5906_2, (new Shen.Freeze([R0, Arg5906_0, Arg5906_1, Arg5906_3, Arg5906_2], function(Arg5910) {
  var Arg5910_0 = Arg5910[0], Arg5910_1 = Arg5910[1], Arg5910_2 = Arg5910[2], Arg5910_3 = Arg5910[3], Arg5910_4 = Arg5910[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_1, Arg5910_4])])), Arg5910_4, Arg5910_3]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5906_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_0, Arg5906_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5906_1, Arg5906_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5906_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5906_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? (R1[1],
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5906_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.thaw(Arg5906_3))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5906_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5906_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5906_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg5906_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, []], Arg5906_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5906_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5906_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "list"], Arg5906_2]),
  ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5906_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0[1],
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5906_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5906_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg5906_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg5906_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5906_2]),
  (R0 = R2))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5906_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, R2, []], Arg5906_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg5906_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5906_2]),
  (R0 = R2))
  : (R0 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5906_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5906_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R1, []]], Arg5906_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5906_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5906_2]),
  R1)
  : false)))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.base"];





Shen.fns["shen.placeholder?"] = [Shen.type_func, function shen_user_lambda5913(Arg5912) {
  if (Arg5912.length < 1) return [Shen.type_func, shen_user_lambda5913, 1, Arg5912];
  var Arg5912_0 = Arg5912[0];
  return (Shen.is_type(Arg5912_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.placeholder-help?"], [Shen.str(Arg5912_0)]))}, 1, [], "shen.placeholder?"];





Shen.fns["shen.placeholder-help?"] = [Shen.type_func, function shen_user_lambda5915(Arg5914) {
  if (Arg5914.length < 1) return [Shen.type_func, shen_user_lambda5915, 1, Arg5914];
  var Arg5914_0 = Arg5914[0];
  return (((Shen.call(Shen.fns["shen.+string?"], [Arg5914_0]) && (Shen.unwind_tail(Shen.$eq$("&", Arg5914_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg5914_0)]) && Shen.unwind_tail(Shen.$eq$("&", Shen.tlstr(Arg5914_0)[0]))))))
  ? true
  : false)}, 1, [], "shen.placeholder-help?"];





Shen.fns["shen.by_hypothesis"] = [Shen.type_func, function shen_user_lambda5917(Arg5916) {
  if (Arg5916.length < 5) return [Shen.type_func, shen_user_lambda5917, 5, Arg5916];
  var Arg5916_0 = Arg5916[0], Arg5916_1 = Arg5916[1], Arg5916_2 = Arg5916[2], Arg5916_3 = Arg5916[3], Arg5916_4 = Arg5916[4];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5916_2, Arg5916_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5916_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5916_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5916_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5916_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R0 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5916_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["identical"], [Arg5916_0, R1, Arg5916_3, (new Shen.Freeze([R1, R0, Arg5916_2, Arg5916_0, Arg5916_1, Arg5916_3, Arg5916_4], function(Arg5918) {
  var Arg5918_0 = Arg5918[0], Arg5918_1 = Arg5918[1], Arg5918_2 = Arg5918[2], Arg5918_3 = Arg5918[3], Arg5918_4 = Arg5918[4], Arg5918_5 = Arg5918[5], Arg5918_6 = Arg5918[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg5918_4, Arg5918_1, Arg5918_5, Arg5918_6]);});})}))])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5916_2, Arg5916_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.by_hypothesis"], [Arg5916_0, Arg5916_1, R0, Arg5916_3, Arg5916_4]);}))
  : false))
  : R0))}, 5, [], "shen.by_hypothesis"];





Shen.fns["shen.t*-def"] = [Shen.type_func, function shen_user_lambda5921(Arg5920) {
  if (Arg5920.length < 5) return [Shen.type_func, shen_user_lambda5921, 5, Arg5920];
  var Arg5920_0 = Arg5920[0], Arg5920_1 = Arg5920[1], Arg5920_2 = Arg5920[2], Arg5920_3 = Arg5920[3], Arg5920_4 = Arg5920[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5920_0, Arg5920_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5920_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5920_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.newpv"], [Arg5920_3]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defh"], [Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<sig+rules>"], R1, [Shen.type_func, function shen_user_lambda5923(Arg5922) {
  if (Arg5922.length < 1) return [Shen.type_func, shen_user_lambda5923, 1, Arg5922];
  var Arg5922_0 = Arg5922[0];
  return ((Shen.is_type(Arg5922_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg5922_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]]), R0, Arg5920_1, Arg5920_2, Arg5920_3, Arg5920_4]);}))
  : false))
  : false))
  : false))}, 5, [], "shen.t*-def"];





Shen.fns["shen.t*-defh"] = [Shen.type_func, function shen_user_lambda5925(Arg5924) {
  if (Arg5924.length < 6) return [Shen.type_func, shen_user_lambda5925, 6, Arg5924];
  var Arg5924_0 = Arg5924[0], Arg5924_1 = Arg5924[1], Arg5924_2 = Arg5924[2], Arg5924_3 = Arg5924[3], Arg5924_4 = Arg5924[4], Arg5924_5 = Arg5924[5];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5924_0, Arg5924_4])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defhh"], [R1, Shen.call(Shen.fns["shen.ue"], [R1]), Arg5924_1, Arg5924_2, Arg5924_3, R0, Arg5924_4, Arg5924_5]);}))
  : false))}, 6, [], "shen.t*-defh"];





Shen.fns["shen.t*-defhh"] = [Shen.type_func, function shen_user_lambda5927(Arg5926) {
  if (Arg5926.length < 8) return [Shen.type_func, shen_user_lambda5927, 8, Arg5926];
  var Arg5926_0 = Arg5926[0], Arg5926_1 = Arg5926[1], Arg5926_2 = Arg5926[2], Arg5926_3 = Arg5926[3], Arg5926_4 = Arg5926[4], Arg5926_5 = Arg5926[5], Arg5926_6 = Arg5926[6], Arg5926_7 = Arg5926[7];
  return (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5926_5, Arg5926_1, 1, Arg5926_2, [Shen.type_cons, [Shen.type_cons, Arg5926_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5926_1, []]]], Arg5926_4], Arg5926_6, (new Shen.Freeze([Arg5926_5, Arg5926_1, Arg5926_4, Arg5926_2, Arg5926_0, Arg5926_3, Arg5926_6, Arg5926_7], function(Arg5928) {
  var Arg5928_0 = Arg5928[0], Arg5928_1 = Arg5928[1], Arg5928_2 = Arg5928[2], Arg5928_3 = Arg5928[3], Arg5928_4 = Arg5928[4], Arg5928_5 = Arg5928[5], Arg5928_6 = Arg5928[6], Arg5928_7 = Arg5928[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.memo"], [Arg5928_3, Arg5928_4, Arg5928_5, Arg5928_6, Arg5928_7]);});})}))]);}))}, 8, [], "shen.t*-defhh"];





Shen.fns["shen.memo"] = [Shen.type_func, function shen_user_lambda5931(Arg5930) {
  if (Arg5930.length < 5) return [Shen.type_func, shen_user_lambda5931, 5, Arg5930];
  var Arg5930_0 = Arg5930[0], Arg5930_1 = Arg5930[1], Arg5930_2 = Arg5930[2], Arg5930_3 = Arg5930[3], Arg5930_4 = Arg5930[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg5930_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg5930_2, Arg5930_1, Arg5930_3, (new Shen.Freeze([Arg5930_1, R0, Arg5930_0, Arg5930_2, Arg5930_3, Arg5930_4], function(Arg5932) {
  var Arg5932_0 = Arg5932[0], Arg5932_1 = Arg5932[1], Arg5932_2 = Arg5932[2], Arg5932_3 = Arg5932[3], Arg5932_4 = Arg5932[4], Arg5932_5 = Arg5932[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5932_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5932_2, Arg5932_4]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5932_3, Arg5932_4])]), Arg5932_4, Arg5932_5]);});})}))]);}))}, 5, [], "shen.memo"];





Shen.fns["shen.<sig+rules>"] = [Shen.type_func, function shen_user_lambda5935(Arg5934) {
  if (Arg5934.length < 1) return [Shen.type_func, shen_user_lambda5935, 1, Arg5934];
  var Arg5934_0 = Arg5934[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg5934_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rules>"];





Shen.fns["shen.ue"] = [Shen.type_func, function shen_user_lambda5937(Arg5936) {
  if (Arg5936.length < 1) return [Shen.type_func, shen_user_lambda5937, 1, Arg5936];
  var Arg5936_0 = Arg5936[0];
  return ((Shen.is_type(Arg5936_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.ue"], Arg5936_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg5936_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Arg5936_0]);})
  : Arg5936_0))}, 1, [], "shen.ue"];





Shen.fns["shen.t*-rules"] = [Shen.type_func, function shen_user_lambda5939(Arg5938) {
  if (Arg5938.length < 7) return [Shen.type_func, shen_user_lambda5939, 7, Arg5938];
  var Arg5938_0 = Arg5938[0], Arg5938_1 = Arg5938[1], Arg5938_2 = Arg5938[2], Arg5938_3 = Arg5938[3], Arg5938_4 = Arg5938[4], Arg5938_5 = Arg5938[5], Arg5938_6 = Arg5938[6];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5938_0, Arg5938_5])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5938_6))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5938_0, Arg5938_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5938_5])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5938_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5938_5])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5938_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R1[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5938_1, Arg5938_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5938_5])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5938_5])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5938_5])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [[Shen.type_cons, [], [Shen.type_cons, Shen.call(Shen.fns["shen.ue"], [R2]), []]], R1, Arg5938_4, Arg5938_5, (new Shen.Freeze([R2, R3, R1, Arg5938_0, R0, Arg5938_1, Arg5938_4, Arg5938_2, Arg5938_3, Arg5938_5, Arg5938_6], function(Arg5940) {
  var Arg5940_0 = Arg5940[0], Arg5940_1 = Arg5940[1], Arg5940_2 = Arg5940[2], Arg5940_3 = Arg5940[3], Arg5940_4 = Arg5940[4], Arg5940_5 = Arg5940[5], Arg5940_6 = Arg5940[6], Arg5940_7 = Arg5940[7], Arg5940_8 = Arg5940[8], Arg5940_9 = Arg5940[9], Arg5940_10 = Arg5940[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5940_4, Arg5940_9, (new Shen.Freeze([Arg5940_4, Arg5940_1, Arg5940_2, Arg5940_7, Arg5940_8, Arg5940_6, Arg5940_9, Arg5940_10], function(Arg5942) {
  var Arg5942_0 = Arg5942[0], Arg5942_1 = Arg5942[1], Arg5942_2 = Arg5942[2], Arg5942_3 = Arg5942[3], Arg5942_4 = Arg5942[4], Arg5942_5 = Arg5942[5], Arg5942_6 = Arg5942[6], Arg5942_7 = Arg5942[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5942_1, Arg5942_2, (Arg5942_3 + 1), Arg5942_4, Arg5942_5, Arg5942_6, Arg5942_7]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5938_0, Arg5938_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [Shen.call(Shen.fns["shen.ue"], [R2]), Arg5938_1, Arg5938_4, Arg5938_5, (new Shen.Freeze([R2, R0, R1, Arg5938_1, Arg5938_2, Arg5938_3, Arg5938_4, Arg5938_5, Arg5938_6, Arg5938_2, Arg5938_3, Arg5938_5, Arg5938_6], function(Arg5944) {
  var Arg5944_0 = Arg5944[0], Arg5944_1 = Arg5944[1], Arg5944_2 = Arg5944[2], Arg5944_3 = Arg5944[3], Arg5944_4 = Arg5944[4], Arg5944_5 = Arg5944[5], Arg5944_6 = Arg5944[6], Arg5944_7 = Arg5944[7], Arg5944_8 = Arg5944[8], Arg5944_9 = Arg5944[9], Arg5944_10 = Arg5944[10], Arg5944_11 = Arg5944[11], Arg5944_12 = Arg5944[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5944_1, Arg5944_7, (new Shen.Freeze([Arg5944_1, Arg5944_2, Arg5944_3, Arg5944_4, Arg5944_5, Arg5944_6, Arg5944_7, Arg5944_8], function(Arg5946) {
  var Arg5946_0 = Arg5946[0], Arg5946_1 = Arg5946[1], Arg5946_2 = Arg5946[2], Arg5946_3 = Arg5946[3], Arg5946_4 = Arg5946[4], Arg5946_5 = Arg5946[5], Arg5946_6 = Arg5946[6], Arg5946_7 = Arg5946[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5946_1, Arg5946_2, (Arg5946_3 + 1), Arg5946_4, Arg5946_5, Arg5946_6, Arg5946_7]);});})}))]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5938_5])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5938_2, Arg5938_5]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5938_3, Arg5938_5]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg5938_5, Arg5938_6]))
  : R1))
  : R1))
  : R1))]);}))}, 7, [], "shen.t*-rules"];





Shen.fns["shen.t*-rule"] = [Shen.type_func, function shen_user_lambda5949(Arg5948) {
  if (Arg5948.length < 5) return [Shen.type_func, shen_user_lambda5949, 5, Arg5948];
  var Arg5948_0 = Arg5948[0], Arg5948_1 = Arg5948[1], Arg5948_2 = Arg5948[2], Arg5948_3 = Arg5948[3], Arg5948_4 = Arg5948[4];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5948_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5948_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5948_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5948_3, (new Shen.Freeze([R1, Arg5948_0, Arg5948_1, R0, Arg5948_2, Arg5948_3, Arg5948_4], function(Arg5950) {
  var Arg5950_0 = Arg5950[0], Arg5950_1 = Arg5950[1], Arg5950_2 = Arg5950[2], Arg5950_3 = Arg5950[3], Arg5950_4 = Arg5950[4], Arg5950_5 = Arg5950[5], Arg5950_6 = Arg5950[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Shen.call(Shen.fns["shen.curry"], [Arg5950_0]), Arg5950_2, Arg5950_4, Arg5950_5, Arg5950_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5948_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5948_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5948_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_1, Arg5948_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5948_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5948_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5948_3])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg5948_3])),
  ((Shen.empty$question$(R6))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*-pattern"], [R3, R5, Arg5948_3, (new Shen.Freeze([R0, R2, R4, R1, R3, R5, Arg5948_2, Arg5948_3, Arg5948_4], function(Arg5952) {
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2], Arg5952_3 = Arg5952[3], Arg5952_4 = Arg5952[4], Arg5952_5 = Arg5952[5], Arg5952_6 = Arg5952[6], Arg5952_7 = Arg5952[7], Arg5952_8 = Arg5952[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5952_0, Arg5952_7, (new Shen.Freeze([Arg5952_0, Arg5952_1, Arg5952_2, Arg5952_3, Arg5952_4, Arg5952_5, Arg5952_6, Arg5952_7, Arg5952_8], function(Arg5954) {
  var Arg5954_0 = Arg5954[0], Arg5954_1 = Arg5954[1], Arg5954_2 = Arg5954[2], Arg5954_3 = Arg5954[3], Arg5954_4 = Arg5954[4], Arg5954_5 = Arg5954[5], Arg5954_6 = Arg5954[6], Arg5954_7 = Arg5954[7], Arg5954_8 = Arg5954[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rule"], [[Shen.type_cons, Arg5954_1, [Shen.type_cons, Arg5954_2, []]], Arg5954_3, [Shen.type_cons, [Shen.type_cons, Arg5954_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5954_5, []]]], Arg5954_6], Arg5954_7, Arg5954_8]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 5, [], "shen.t*-rule"];





Shen.fns["shen.t*-action"] = [Shen.type_func, function shen_user_lambda5957(Arg5956) {
  if (Arg5956.length < 5) return [Shen.type_func, shen_user_lambda5957, 5, Arg5956];
  var Arg5956_0 = Arg5956[0], Arg5956_1 = Arg5956[1], Arg5956_2 = Arg5956[2], Arg5956_3 = Arg5956[3], Arg5956_4 = Arg5956[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5956_0, Arg5956_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5956_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5956_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5956_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5956_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5956_3, (new Shen.Freeze([R3, R1, R0, Arg5956_0, Arg5956_1, Arg5956_2, Arg5956_3, Arg5956_4], function(Arg5958) {
  var Arg5958_0 = Arg5958[0], Arg5958_1 = Arg5958[1], Arg5958_2 = Arg5958[2], Arg5958_3 = Arg5958[3], Arg5958_4 = Arg5958[4], Arg5958_5 = Arg5958[5], Arg5958_6 = Arg5958[6], Arg5958_7 = Arg5958[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg5958_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], Arg5958_5, Arg5958_6, (new Shen.Freeze([Arg5958_2, Arg5958_0, Arg5958_4, Arg5958_1, Arg5958_5, Arg5958_6, Arg5958_7], function(Arg5960) {
  var Arg5960_0 = Arg5960[0], Arg5960_1 = Arg5960[1], Arg5960_2 = Arg5960[2], Arg5960_3 = Arg5960[3], Arg5960_4 = Arg5960[4], Arg5960_5 = Arg5960[5], Arg5960_6 = Arg5960[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5960_0, Arg5960_5, (new Shen.Freeze([Arg5960_0, Arg5960_1, Arg5960_2, Arg5960_3, Arg5960_4, Arg5960_5, Arg5960_6], function(Arg5962) {
  var Arg5962_0 = Arg5962[0], Arg5962_1 = Arg5962[1], Arg5962_2 = Arg5962[2], Arg5962_3 = Arg5962[3], Arg5962_4 = Arg5962[4], Arg5962_5 = Arg5962[5], Arg5962_6 = Arg5962[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Arg5962_1, Arg5962_2, [Shen.type_cons, [Shen.type_cons, Arg5962_3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "verified"], []]]], Arg5962_4], Arg5962_5, Arg5962_6]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5956_0, Arg5956_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5956_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5956_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5956_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5956_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5956_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail-if"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5956_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5956_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5956_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5956_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5956_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5956_3, (new Shen.Freeze([R3, R1, R0, Arg5956_0, Arg5956_1, Arg5956_2, Arg5956_3, Arg5956_4], function(Arg5964) {
  var Arg5964_0 = Arg5964[0], Arg5964_1 = Arg5964[1], Arg5964_2 = Arg5964[2], Arg5964_3 = Arg5964[3], Arg5964_4 = Arg5964[4], Arg5964_5 = Arg5964[5], Arg5964_6 = Arg5964[6], Arg5964_7 = Arg5964[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, Arg5964_0, [Shen.type_cons, Arg5964_1, []]], []]], [Shen.type_cons, Arg5964_1, []]]], Arg5964_4, Arg5964_5, Arg5964_6, Arg5964_7]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5956_0, Arg5956_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5956_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5956_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5956_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5956_3, (new Shen.Freeze([R0, R1, Arg5956_0, Arg5956_1, Arg5956_2, Arg5956_3, Arg5956_4], function(Arg5966) {
  var Arg5966_0 = Arg5966[0], Arg5966_1 = Arg5966[1], Arg5966_2 = Arg5966[2], Arg5966_3 = Arg5966[3], Arg5966_4 = Arg5966[4], Arg5966_5 = Arg5966[5], Arg5966_6 = Arg5966[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg5966_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]], []]], [Shen.type_cons, Arg5966_1, []]]], Arg5966_3, Arg5966_4, Arg5966_5, Arg5966_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, Arg5956_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5956_1, []]]], Arg5956_2, Arg5956_3, Arg5956_4]))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.t*-action"];





Shen.fns["shen.t*-pattern"] = [Shen.type_func, function shen_user_lambda5969(Arg5968) {
  if (Arg5968.length < 4) return [Shen.type_func, shen_user_lambda5969, 4, Arg5968];
  var Arg5968_0 = Arg5968[0], Arg5968_1 = Arg5968[1], Arg5968_2 = Arg5968[2], Arg5968_3 = Arg5968[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5968_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tms->hyp"], [Shen.call(Shen.fns["shen.ues"], [Arg5968_0]), R1, Arg5968_2, (new Shen.Freeze([R0, Arg5968_0, Arg5968_1, R1, Arg5968_2, Arg5968_3], function(Arg5970) {
  var Arg5970_0 = Arg5970[0], Arg5970_1 = Arg5970[1], Arg5970_2 = Arg5970[2], Arg5970_3 = Arg5970[3], Arg5970_4 = Arg5970[4], Arg5970_5 = Arg5970[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5970_0, Arg5970_4, (new Shen.Freeze([Arg5970_0, Arg5970_1, Arg5970_2, Arg5970_3, Arg5970_4, Arg5970_5], function(Arg5972) {
  var Arg5972_0 = Arg5972[0], Arg5972_1 = Arg5972[1], Arg5972_2 = Arg5972[2], Arg5972_3 = Arg5972[3], Arg5972_4 = Arg5972[4], Arg5972_5 = Arg5972[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg5972_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5972_2, []]]], Arg5972_3, Arg5972_4, Arg5972_5]);});})}))]);});})}))]))]);}))}, 4, [], "shen.t*-pattern"];





Shen.fns["shen.ues"] = [Shen.type_func, function shen_user_lambda5975(Arg5974) {
  if (Arg5974.length < 1) return [Shen.type_func, shen_user_lambda5975, 1, Arg5974];
  var Arg5974_0 = Arg5974[0];
  return ((Shen.call(Shen.fns["shen.ue?"], [Arg5974_0]))
  ? [Shen.type_cons, Arg5974_0, []]
  : ((Shen.is_type(Arg5974_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.ues"], [Arg5974_0[1]]), Shen.call(Shen.fns["shen.ues"], [Arg5974_0[2]])]);})
  : []))}, 1, [], "shen.ues"];





Shen.fns["shen.ue?"] = [Shen.type_func, function shen_user_lambda5977(Arg5976) {
  if (Arg5976.length < 1) return [Shen.type_func, shen_user_lambda5977, 1, Arg5976];
  var Arg5976_0 = Arg5976[0];
  return (Shen.is_type(Arg5976_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.ue-h?"], [Shen.str(Arg5976_0)]))}, 1, [], "shen.ue?"];





Shen.fns["shen.ue-h?"] = [Shen.type_func, function shen_user_lambda5979(Arg5978) {
  if (Arg5978.length < 1) return [Shen.type_func, shen_user_lambda5979, 1, Arg5978];
  var Arg5978_0 = Arg5978[0];
  return (((Shen.call(Shen.fns["shen.+string?"], [Arg5978_0]) && (Shen.unwind_tail(Shen.$eq$("&", Arg5978_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg5978_0)]) && Shen.unwind_tail(Shen.$eq$("&", Shen.tlstr(Arg5978_0)[0]))))))
  ? true
  : false)}, 1, [], "shen.ue-h?"];





Shen.fns["shen.tms->hyp"] = [Shen.type_func, function shen_user_lambda5981(Arg5980) {
  if (Arg5980.length < 4) return [Shen.type_func, shen_user_lambda5981, 4, Arg5980];
  var Arg5980_0 = Arg5980[0], Arg5980_1 = Arg5980[1], Arg5980_2 = Arg5980[2], Arg5980_3 = Arg5980[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5980_0, Arg5980_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5980_1, Arg5980_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5980_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg5980_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5980_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5980_2]),
  (R0 = R1))
  : (R0 = false))))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5980_0, Arg5980_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5980_1, Arg5980_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5980_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5980_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5980_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5980_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? (R5[1],
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5980_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [R4, R1, Arg5980_2, (new Shen.Freeze([R4, R1, R0, R5, Arg5980_2, Arg5980_3], function(Arg5982) {
  var Arg5982_0 = Arg5982[0], Arg5982_1 = Arg5982[1], Arg5982_2 = Arg5982[2], Arg5982_3 = Arg5982[3], Arg5982_4 = Arg5982[4], Arg5982_5 = Arg5982[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5982_2, Arg5982_3, Arg5982_4, Arg5982_5]);});})}))]);}))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5980_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5980_2, (new Shen.Freeze([R4, R1, R0, R3, Arg5980_2, Arg5980_3, R5, Arg5980_2], function(Arg5984) {
  var Arg5984_0 = Arg5984[0], Arg5984_1 = Arg5984[1], Arg5984_2 = Arg5984[2], Arg5984_3 = Arg5984[3], Arg5984_4 = Arg5984[4], Arg5984_5 = Arg5984[5], Arg5984_6 = Arg5984[6], Arg5984_7 = Arg5984[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5984_2, Arg5984_3, Arg5984_4, Arg5984_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5980_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg5980_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R3, []], Arg5980_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5980_2, (new Shen.Freeze([R4, R1, R0, R3, Arg5980_2, Arg5980_3, R5, Arg5980_2], function(Arg5986) {
  var Arg5986_0 = Arg5986[0], Arg5986_1 = Arg5986[1], Arg5986_2 = Arg5986[2], Arg5986_3 = Arg5986[3], Arg5986_4 = Arg5986[4], Arg5986_5 = Arg5986[5], Arg5986_6 = Arg5986[6], Arg5986_7 = Arg5986[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5986_2, Arg5986_3, Arg5986_4, Arg5986_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5980_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, ":"], Arg5980_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5980_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? (R3[1],
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5980_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5980_2, (new Shen.Freeze([R4, R1, R0, R3, Arg5980_2, Arg5980_3, R5, Arg5980_2], function(Arg5988) {
  var Arg5988_0 = Arg5988[0], Arg5988_1 = Arg5988[1], Arg5988_2 = Arg5988[2], Arg5988_3 = Arg5988[3], Arg5988_4 = Arg5988[4], Arg5988_5 = Arg5988[5], Arg5988_6 = Arg5988[6], Arg5988_7 = Arg5988[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5988_2, Arg5988_3, Arg5988_4, Arg5988_5]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5980_2]),
  ((R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5980_2, (new Shen.Freeze([R4, R1, R0, R2, Arg5980_2, Arg5980_3, R3, Arg5980_2, R5, Arg5980_2], function(Arg5990) {
  var Arg5990_0 = Arg5990[0], Arg5990_1 = Arg5990[1], Arg5990_2 = Arg5990[2], Arg5990_3 = Arg5990[3], Arg5990_4 = Arg5990[4], Arg5990_5 = Arg5990[5], Arg5990_6 = Arg5990[6], Arg5990_7 = Arg5990[7], Arg5990_8 = Arg5990[8], Arg5990_9 = Arg5990[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5990_2, Arg5990_3, Arg5990_4, Arg5990_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5980_2]),
  (R4 = R4))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5980_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R6, []], Arg5980_2]),
  ((R6 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5980_2, (new Shen.Freeze([R4, R1, R0, R6, Arg5980_2, Arg5980_3, R3, Arg5980_2, R5, Arg5980_2], function(Arg5992) {
  var Arg5992_0 = Arg5992[0], Arg5992_1 = Arg5992[1], Arg5992_2 = Arg5992[2], Arg5992_3 = Arg5992[3], Arg5992_4 = Arg5992[4], Arg5992_5 = Arg5992[5], Arg5992_6 = Arg5992[6], Arg5992_7 = Arg5992[7], Arg5992_8 = Arg5992[8], Arg5992_9 = Arg5992[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5992_2, Arg5992_3, Arg5992_4, Arg5992_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5980_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5980_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5980_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]], Arg5980_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5980_2, (new Shen.Freeze([R4, R1, R0, R5, Arg5980_2, Arg5980_3, R3, Arg5980_2], function(Arg5994) {
  var Arg5994_0 = Arg5994[0], Arg5994_1 = Arg5994[1], Arg5994_2 = Arg5994[2], Arg5994_3 = Arg5994[3], Arg5994_4 = Arg5994[4], Arg5994_5 = Arg5994[5], Arg5994_6 = Arg5994[6], Arg5994_7 = Arg5994[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5994_2, Arg5994_3, Arg5994_4, Arg5994_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5980_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5980_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5980_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], Arg5980_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5980_2, (new Shen.Freeze([R4, R1, R0, R5, Arg5980_2, Arg5980_3, R3, Arg5980_2], function(Arg5996) {
  var Arg5996_0 = Arg5996[0], Arg5996_1 = Arg5996[1], Arg5996_2 = Arg5996[2], Arg5996_3 = Arg5996[3], Arg5996_4 = Arg5996[4], Arg5996_5 = Arg5996[5], Arg5996_6 = Arg5996[6], Arg5996_7 = Arg5996[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5996_2, Arg5996_3, Arg5996_4, Arg5996_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5980_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg5980_2])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5980_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5980_2])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_cons, R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R4, []]]], R5], Arg5980_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg5980_2, (new Shen.Freeze([R4, R3, R1, R0, R5, Arg5980_3, R2, Arg5980_2], function(Arg5998) {
  var Arg5998_0 = Arg5998[0], Arg5998_1 = Arg5998[1], Arg5998_2 = Arg5998[2], Arg5998_3 = Arg5998[3], Arg5998_4 = Arg5998[4], Arg5998_5 = Arg5998[5], Arg5998_6 = Arg5998[6], Arg5998_7 = Arg5998[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5998_3, Arg5998_4, Arg5998_7, Arg5998_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5980_2]),
  R5)
  : false)))
  : false))
  : R0))}, 4, [], "shen.tms->hyp"];





Shen.fns["findall"] = [Shen.type_func, function shen_user_lambda6001(Arg6000) {
  if (Arg6000.length < 5) return [Shen.type_func, shen_user_lambda6001, 5, Arg6000];
  var Arg6000_0 = Arg6000[0], Arg6000_1 = Arg6000[1], Arg6000_2 = Arg6000[2], Arg6000_3 = Arg6000[3], Arg6000_4 = Arg6000[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6000_3])),
  (R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6000_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R1, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.a"]]), Arg6000_3, (new Shen.Freeze([R0, Arg6000_0, Arg6000_1, Arg6000_2, R1, Arg6000_3, Arg6000_4], function(Arg6002) {
  var Arg6002_0 = Arg6002[0], Arg6002_1 = Arg6002[1], Arg6002_2 = Arg6002[2], Arg6002_3 = Arg6002[3], Arg6002_4 = Arg6002[4], Arg6002_5 = Arg6002[5], Arg6002_6 = Arg6002[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6002_0, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6002_4, Arg6002_5])[1]] = []), Arg6002_5, (new Shen.Freeze([Arg6002_0, Arg6002_1, Arg6002_2, Arg6002_3, Arg6002_4, Arg6002_5, Arg6002_6], function(Arg6004) {
  var Arg6004_0 = Arg6004[0], Arg6004_1 = Arg6004[1], Arg6004_2 = Arg6004[2], Arg6004_3 = Arg6004[3], Arg6004_4 = Arg6004[4], Arg6004_5 = Arg6004[5], Arg6004_6 = Arg6004[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.findallhelp"], [Arg6004_1, Arg6004_2, Arg6004_3, Arg6004_4, Arg6004_5, Arg6004_6]);});})}))]);});})}))]);}))}, 5, [], "findall"];





Shen.fns["shen.findallhelp"] = [Shen.type_func, function shen_user_lambda6007(Arg6006) {
  if (Arg6006.length < 6) return [Shen.type_func, shen_user_lambda6007, 6, Arg6006];
  var Arg6006_0 = Arg6006[0], Arg6006_1 = Arg6006[1], Arg6006_2 = Arg6006[2], Arg6006_3 = Arg6006[3], Arg6006_4 = Arg6006[4], Arg6006_5 = Arg6006[5];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [Arg6006_1, Arg6006_4, (new Shen.Freeze([Arg6006_1, Arg6006_0, Arg6006_2, Arg6006_3, Arg6006_4, Arg6006_5], function(Arg6008) {
  var Arg6008_0 = Arg6008[0], Arg6008_1 = Arg6008[1], Arg6008_2 = Arg6008[2], Arg6008_3 = Arg6008[3], Arg6008_4 = Arg6008[4], Arg6008_5 = Arg6008[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember"], [Arg6008_3, Arg6008_1, Arg6008_4, (new Shen.Freeze([Arg6008_3, Arg6008_1, Arg6008_4, Arg6008_5], function(Arg6010) {
  var Arg6010_0 = Arg6010[0], Arg6010_1 = Arg6010[1], Arg6010_2 = Arg6010[2], Arg6010_3 = Arg6010[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg6010_2, Arg6010_3]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6006_2, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6006_3, Arg6006_4])[1]]), Arg6006_4, Arg6006_5]);}))
  : R0))}, 6, [], "shen.findallhelp"];





Shen.fns["shen.remember"] = [Shen.type_func, function shen_user_lambda6013(Arg6012) {
  if (Arg6012.length < 4) return [Shen.type_func, shen_user_lambda6013, 4, Arg6012];
  var Arg6012_0 = Arg6012[0], Arg6012_1 = Arg6012[1], Arg6012_2 = Arg6012[2], Arg6012_3 = Arg6012[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6012_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6012_0, Arg6012_2])[1]] = [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6012_1, Arg6012_2]), (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6012_0, Arg6012_2])[1]])]), Arg6012_2, Arg6012_3]);}))}, 4, [], "shen.remember"];





Shen.fns["shen.t*-defcc"] = [Shen.type_func, function shen_user_lambda6015(Arg6014) {
  if (Arg6014.length < 5) return [Shen.type_func, shen_user_lambda6015, 5, Arg6014];
  var Arg6014_0 = Arg6014[0], Arg6014_1 = Arg6014[1], Arg6014_2 = Arg6014[2], Arg6014_3 = Arg6014[3], Arg6014_4 = Arg6014[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6014_0, Arg6014_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6014_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6014_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6014_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6014_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6014_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6014_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6014_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6014_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6014_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6014_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6014_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], R3)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6014_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6014_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6014_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R5)))
  ? ((R5 = R4[2]),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6014_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6014_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6014_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg6014_3])),
  (R9 = Shen.call(Shen.fns["shen.newpv"], [Arg6014_3])),
  (R10 = Shen.call(Shen.fns["shen.newpv"], [Arg6014_3])),
  (R11 = Shen.call(Shen.fns["shen.newpv"], [Arg6014_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R10, Shen.call(Shen.fns["shen.placeholders"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6014_3]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6014_3]), []]]], Shen.call(Shen.fns["shen.extract_vars"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6014_3]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6014_3]), []]]]])]), Arg6014_3, (new Shen.Freeze([R5, R4, R6, R0, R7, R8, R9, R10, Arg6014_2, Arg6014_1, R11, R1, R2, R3, Arg6014_3, Arg6014_4], function(Arg6016) {
  var Arg6016_0 = Arg6016[0], Arg6016_1 = Arg6016[1], Arg6016_2 = Arg6016[2], Arg6016_3 = Arg6016[3], Arg6016_4 = Arg6016[4], Arg6016_5 = Arg6016[5], Arg6016_6 = Arg6016[6], Arg6016_7 = Arg6016[7], Arg6016_8 = Arg6016[8], Arg6016_9 = Arg6016[9], Arg6016_10 = Arg6016[10], Arg6016_11 = Arg6016[11], Arg6016_12 = Arg6016[12], Arg6016_13 = Arg6016[13], Arg6016_14 = Arg6016[14], Arg6016_15 = Arg6016[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6016_5, Shen.call(Shen.fns["shen.lazyderef"], [Arg6016_7, Arg6016_14])[1], Arg6016_14, (new Shen.Freeze([Arg6016_0, Arg6016_1, Arg6016_2, Arg6016_3, Arg6016_4, Arg6016_5, Arg6016_6, Arg6016_7, Arg6016_8, Arg6016_9, Arg6016_10, Arg6016_11, Arg6016_12, Arg6016_13, Arg6016_14, Arg6016_15], function(Arg6018) {
  var Arg6018_0 = Arg6018[0], Arg6018_1 = Arg6018[1], Arg6018_2 = Arg6018[2], Arg6018_3 = Arg6018[3], Arg6018_4 = Arg6018[4], Arg6018_5 = Arg6018[5], Arg6018_6 = Arg6018[6], Arg6018_7 = Arg6018[7], Arg6018_8 = Arg6018[8], Arg6018_9 = Arg6018[9], Arg6018_10 = Arg6018[10], Arg6018_11 = Arg6018[11], Arg6018_12 = Arg6018[12], Arg6018_13 = Arg6018[13], Arg6018_14 = Arg6018[14], Arg6018_15 = Arg6018[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6018_6, Shen.call(Shen.fns["shen.lazyderef"], [Arg6018_7, Arg6018_14])[2][2][1], Arg6018_14, (new Shen.Freeze([Arg6018_0, Arg6018_1, Arg6018_2, Arg6018_3, Arg6018_4, Arg6018_5, Arg6018_6, Arg6018_7, Arg6018_8, Arg6018_9, Arg6018_10, Arg6018_11, Arg6018_12, Arg6018_13, Arg6018_14, Arg6018_15], function(Arg6020) {
  var Arg6020_0 = Arg6020[0], Arg6020_1 = Arg6020[1], Arg6020_2 = Arg6020[2], Arg6020_3 = Arg6020[3], Arg6020_4 = Arg6020[4], Arg6020_5 = Arg6020[5], Arg6020_6 = Arg6020[6], Arg6020_7 = Arg6020[7], Arg6020_8 = Arg6020[8], Arg6020_9 = Arg6020[9], Arg6020_10 = Arg6020[10], Arg6020_11 = Arg6020[11], Arg6020_12 = Arg6020[12], Arg6020_13 = Arg6020[13], Arg6020_14 = Arg6020[14], Arg6020_15 = Arg6020[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6020_1, Shen.call(Shen.fns["shen.plug-wildcards"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6020_0, Arg6020_14])]), Arg6020_14, (new Shen.Freeze([Arg6020_0, Arg6020_1, Arg6020_2, Arg6020_3, Arg6020_4, Arg6020_5, Arg6020_6, Arg6020_7, Arg6020_8, Arg6020_9, Arg6020_10, Arg6020_11, Arg6020_12, Arg6020_13, Arg6020_14, Arg6020_15], function(Arg6022) {
  var Arg6022_0 = Arg6022[0], Arg6022_1 = Arg6022[1], Arg6022_2 = Arg6022[2], Arg6022_3 = Arg6022[3], Arg6022_4 = Arg6022[4], Arg6022_5 = Arg6022[5], Arg6022_6 = Arg6022[6], Arg6022_7 = Arg6022[7], Arg6022_8 = Arg6022[8], Arg6022_9 = Arg6022[9], Arg6022_10 = Arg6022[10], Arg6022_11 = Arg6022[11], Arg6022_12 = Arg6022[12], Arg6022_13 = Arg6022[13], Arg6022_14 = Arg6022[14], Arg6022_15 = Arg6022[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6022_2, Shen.call(Shen.fns["shen.placeholders"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6022_1, Arg6022_14]), Shen.call(Shen.fns["shen.extract_vars"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6022_1, Arg6022_14])])]), Arg6022_14, (new Shen.Freeze([Arg6022_1, Arg6022_2, Arg6022_3, Arg6022_4, Arg6022_5, Arg6022_6, Arg6022_7, Arg6022_8, Arg6022_9, Arg6022_10, Arg6022_11, Arg6022_12, Arg6022_13, Arg6022_14, Arg6022_15], function(Arg6024) {
  var Arg6024_0 = Arg6024[0], Arg6024_1 = Arg6024[1], Arg6024_2 = Arg6024[2], Arg6024_3 = Arg6024[3], Arg6024_4 = Arg6024[4], Arg6024_5 = Arg6024[5], Arg6024_6 = Arg6024[6], Arg6024_7 = Arg6024[7], Arg6024_8 = Arg6024[8], Arg6024_9 = Arg6024[9], Arg6024_10 = Arg6024[10], Arg6024_11 = Arg6024[11], Arg6024_12 = Arg6024[12], Arg6024_13 = Arg6024[13], Arg6024_14 = Arg6024[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6024_3, Arg6024_1, Arg6024_13, (new Shen.Freeze([Arg6024_1, Arg6024_2, Arg6024_3, Arg6024_4, Arg6024_5, Arg6024_6, Arg6024_7, Arg6024_8, Arg6024_9, Arg6024_10, Arg6024_11, Arg6024_12, Arg6024_13, Arg6024_14], function(Arg6026) {
  var Arg6026_0 = Arg6026[0], Arg6026_1 = Arg6026[1], Arg6026_2 = Arg6026[2], Arg6026_3 = Arg6026[3], Arg6026_4 = Arg6026[4], Arg6026_5 = Arg6026[5], Arg6026_6 = Arg6026[6], Arg6026_7 = Arg6026[7], Arg6026_8 = Arg6026[8], Arg6026_9 = Arg6026[9], Arg6026_10 = Arg6026[10], Arg6026_11 = Arg6026[11], Arg6026_12 = Arg6026[12], Arg6026_13 = Arg6026[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6026_1, Arg6026_12, (new Shen.Freeze([Arg6026_1, Arg6026_2, Arg6026_3, Arg6026_4, Arg6026_5, Arg6026_6, Arg6026_7, Arg6026_8, Arg6026_9, Arg6026_10, Arg6026_11, Arg6026_12, Arg6026_13], function(Arg6028) {
  var Arg6028_0 = Arg6028[0], Arg6028_1 = Arg6028[1], Arg6028_2 = Arg6028[2], Arg6028_3 = Arg6028[3], Arg6028_4 = Arg6028[4], Arg6028_5 = Arg6028[5], Arg6028_6 = Arg6028[6], Arg6028_7 = Arg6028[7], Arg6028_8 = Arg6028[8], Arg6028_9 = Arg6028[9], Arg6028_10 = Arg6028[10], Arg6028_11 = Arg6028[11], Arg6028_12 = Arg6028[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6028_8, Arg6028_1, Arg6028_2, Arg6028_3, [Shen.type_cons, [Shen.type_cons, Arg6028_8, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6028_4, []]]], Arg6028_5], 1, Arg6028_11, (new Shen.Freeze([Arg6028_1, Arg6028_2, Arg6028_3, Arg6028_4, Arg6028_5, Arg6028_6, Arg6028_7, Arg6028_8, Arg6028_9, Arg6028_10, Arg6028_11, Arg6028_12], function(Arg6030) {
  var Arg6030_0 = Arg6030[0], Arg6030_1 = Arg6030[1], Arg6030_2 = Arg6030[2], Arg6030_3 = Arg6030[3], Arg6030_4 = Arg6030[4], Arg6030_5 = Arg6030[5], Arg6030_6 = Arg6030[6], Arg6030_7 = Arg6030[7], Arg6030_8 = Arg6030[8], Arg6030_9 = Arg6030[9], Arg6030_10 = Arg6030[10], Arg6030_11 = Arg6030[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg6030_5, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6030_8, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6030_9, []]]], Arg6030_10, (new Shen.Freeze([Arg6030_5, Arg6030_6, Arg6030_7, Arg6030_8, Arg6030_9, Arg6030_10, Arg6030_11], function(Arg6032) {
  var Arg6032_0 = Arg6032[0], Arg6032_1 = Arg6032[1], Arg6032_2 = Arg6032[2], Arg6032_3 = Arg6032[3], Arg6032_4 = Arg6032[4], Arg6032_5 = Arg6032[5], Arg6032_6 = Arg6032[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6032_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6032_2, Arg6032_5]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6032_3, Arg6032_5]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6032_4, Arg6032_5]), []]]]]), Arg6032_5, Arg6032_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))]);}))}, 5, [], "shen.t*-defcc"];





Shen.fns["shen.plug-wildcards"] = [Shen.type_func, function shen_user_lambda6035(Arg6034) {
  if (Arg6034.length < 1) return [Shen.type_func, shen_user_lambda6035, 1, Arg6034];
  var Arg6034_0 = Arg6034[0];
  return ((Shen.is_type(Arg6034_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.plug-wildcards"], Arg6034_0]);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg6034_0, [Shen.type_symbol, "_"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "X"]]);})
  : Arg6034_0))}, 1, [], "shen.plug-wildcards"];





Shen.fns["shen.get-rules"] = [Shen.type_func, function shen_user_lambda6037(Arg6036) {
  if (Arg6036.length < 4) return [Shen.type_func, shen_user_lambda6037, 4, Arg6036];
  var Arg6036_0 = Arg6036[0], Arg6036_1 = Arg6036[1], Arg6036_2 = Arg6036[2], Arg6036_3 = Arg6036[3];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6036_0, Arg6036_2])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6036_1, Arg6036_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6036_2, Arg6036_3])))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6036_2]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6036_1, Arg6036_2])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["cut"], [R0, Arg6036_2, Arg6036_3])))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6036_2]),
  (R1 = R2))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6036_0, Arg6036_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6036_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.first-rule"], [Arg6036_1, R2, R3, Arg6036_2, (new Shen.Freeze([Arg6036_1, R2, R0, R1, R3, Arg6036_2, Arg6036_3], function(Arg6038) {
  var Arg6038_0 = Arg6038[0], Arg6038_1 = Arg6038[1], Arg6038_2 = Arg6038[2], Arg6038_3 = Arg6038[3], Arg6038_4 = Arg6038[4], Arg6038_5 = Arg6038[5], Arg6038_6 = Arg6038[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6038_2, Arg6038_5, (new Shen.Freeze([Arg6038_2, Arg6038_3, Arg6038_4, Arg6038_5, Arg6038_6], function(Arg6040) {
  var Arg6040_0 = Arg6040[0], Arg6040_1 = Arg6040[1], Arg6040_2 = Arg6040[2], Arg6040_3 = Arg6040[3], Arg6040_4 = Arg6040[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6040_1, Arg6040_2, Arg6040_3, Arg6040_4]);});})}))]);});})}))]))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6036_2])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6036_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R2, R3], Arg6036_2]),
  ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6036_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.first-rule"], [Arg6036_1, R2, R4, Arg6036_2, (new Shen.Freeze([Arg6036_1, R2, R0, R3, R4, Arg6036_2, Arg6036_3, R1, Arg6036_2], function(Arg6042) {
  var Arg6042_0 = Arg6042[0], Arg6042_1 = Arg6042[1], Arg6042_2 = Arg6042[2], Arg6042_3 = Arg6042[3], Arg6042_4 = Arg6042[4], Arg6042_5 = Arg6042[5], Arg6042_6 = Arg6042[6], Arg6042_7 = Arg6042[7], Arg6042_8 = Arg6042[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6042_2, Arg6042_5, (new Shen.Freeze([Arg6042_2, Arg6042_3, Arg6042_4, Arg6042_5, Arg6042_6], function(Arg6044) {
  var Arg6044_0 = Arg6044[0], Arg6044_1 = Arg6044[1], Arg6044_2 = Arg6044[2], Arg6044_3 = Arg6044[3], Arg6044_4 = Arg6044[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6044_1, Arg6044_2, Arg6044_3, Arg6044_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6036_2]),
  R3)
  : false)))
  : R1))]);}))}, 4, [], "shen.get-rules"];





Shen.fns["shen.first-rule"] = [Shen.type_func, function shen_user_lambda6047(Arg6046) {
  if (Arg6046.length < 5) return [Shen.type_func, shen_user_lambda6047, 5, Arg6046];
  var Arg6046_0 = Arg6046[0], Arg6046_1 = Arg6046[1], Arg6046_2 = Arg6046[2], Arg6046_3 = Arg6046[3], Arg6046_4 = Arg6046[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6046_0, Arg6046_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6046_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], R2)))
  ? ((R2 = R1[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6046_1, Arg6046_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["unify!"], [Arg6046_2, R2, Arg6046_3, (new Shen.Freeze([R2, R0, Arg6046_0, Arg6046_1, Arg6046_2, Arg6046_4, Arg6046_3], function(Arg6048) {
  var Arg6048_0 = Arg6048[0], Arg6048_1 = Arg6048[1], Arg6048_2 = Arg6048[2], Arg6048_3 = Arg6048[3], Arg6048_4 = Arg6048[4], Arg6048_5 = Arg6048[5], Arg6048_6 = Arg6048[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6048_1, Arg6048_6, Arg6048_5]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6046_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["unify!"], [Arg6046_2, R2, Arg6046_3, (new Shen.Freeze([R2, R0, R1, Arg6046_0, Arg6046_1, Arg6046_2, Arg6046_4, Arg6046_3], function(Arg6050) {
  var Arg6050_0 = Arg6050[0], Arg6050_1 = Arg6050[1], Arg6050_2 = Arg6050[2], Arg6050_3 = Arg6050[3], Arg6050_4 = Arg6050[4], Arg6050_5 = Arg6050[5], Arg6050_6 = Arg6050[6], Arg6050_7 = Arg6050[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6050_1, Arg6050_7, Arg6050_6]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6046_3]),
  (R0 = R2))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6046_0, Arg6046_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6046_1, Arg6046_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["unify!"], [R3, R1, Arg6046_3, (new Shen.Freeze([R3, R1, R0, R2, Arg6046_2, Arg6046_3, Arg6046_4], function(Arg6052) {
  var Arg6052_0 = Arg6052[0], Arg6052_1 = Arg6052[1], Arg6052_2 = Arg6052[2], Arg6052_3 = Arg6052[3], Arg6052_4 = Arg6052[4], Arg6052_5 = Arg6052[5], Arg6052_6 = Arg6052[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.first-rule"], [Arg6052_2, Arg6052_3, Arg6052_4, Arg6052_5, Arg6052_6]);});})}))]))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6046_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6046_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R3, R4], Arg6046_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg6046_3, (new Shen.Freeze([R3, R1, R0, R4, Arg6046_2, Arg6046_4, R2, Arg6046_3], function(Arg6054) {
  var Arg6054_0 = Arg6054[0], Arg6054_1 = Arg6054[1], Arg6054_2 = Arg6054[2], Arg6054_3 = Arg6054[3], Arg6054_4 = Arg6054[4], Arg6054_5 = Arg6054[5], Arg6054_6 = Arg6054[6], Arg6054_7 = Arg6054[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.first-rule"], [Arg6054_2, Arg6054_3, Arg6054_4, Arg6054_7, Arg6054_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6046_3]),
  R4)
  : false)))
  : false))
  : R0))]);}))}, 5, [], "shen.first-rule"];





Shen.fns["shen.tc-rules"] = [Shen.type_func, function shen_user_lambda6057(Arg6056) {
  if (Arg6056.length < 8) return [Shen.type_func, shen_user_lambda6057, 8, Arg6056];
  var Arg6056_0 = Arg6056[0], Arg6056_1 = Arg6056[1], Arg6056_2 = Arg6056[2], Arg6056_3 = Arg6056[3], Arg6056_4 = Arg6056[4], Arg6056_5 = Arg6056[5], Arg6056_6 = Arg6056[6], Arg6056_7 = Arg6056[7];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6056_1, Arg6056_6])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6056_7))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6056_1, Arg6056_6])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6056_2, Arg6056_6])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6056_6])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6056_6])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6056_6])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6056_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tc-rule"], [Arg6056_0, R2, R3, Arg6056_3, Arg6056_4, Arg6056_5, Arg6056_6, (new Shen.Freeze([R2, Arg6056_5, R0, Arg6056_0, R1, R3, Arg6056_3, Arg6056_4, R4, Arg6056_6, Arg6056_7], function(Arg6058) {
  var Arg6058_0 = Arg6058[0], Arg6058_1 = Arg6058[1], Arg6058_2 = Arg6058[2], Arg6058_3 = Arg6058[3], Arg6058_4 = Arg6058[4], Arg6058_5 = Arg6058[5], Arg6058_6 = Arg6058[6], Arg6058_7 = Arg6058[7], Arg6058_8 = Arg6058[8], Arg6058_9 = Arg6058[9], Arg6058_10 = Arg6058[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6058_8, (Shen.call(Shen.fns["shen.deref"], [Arg6058_1, Arg6058_9]) + 1), Arg6058_9, (new Shen.Freeze([Arg6058_1, Arg6058_2, Arg6058_3, Arg6058_4, Arg6058_5, Arg6058_6, Arg6058_7, Arg6058_8, Arg6058_9, Arg6058_10], function(Arg6060) {
  var Arg6060_0 = Arg6060[0], Arg6060_1 = Arg6060[1], Arg6060_2 = Arg6060[2], Arg6060_3 = Arg6060[3], Arg6060_4 = Arg6060[4], Arg6060_5 = Arg6060[5], Arg6060_6 = Arg6060[6], Arg6060_7 = Arg6060[7], Arg6060_8 = Arg6060[8], Arg6060_9 = Arg6060[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6060_1, Arg6060_8, (new Shen.Freeze([Arg6060_1, Arg6060_2, Arg6060_3, Arg6060_4, Arg6060_5, Arg6060_6, Arg6060_7, Arg6060_8, Arg6060_9], function(Arg6062) {
  var Arg6062_0 = Arg6062[0], Arg6062_1 = Arg6062[1], Arg6062_2 = Arg6062[2], Arg6062_3 = Arg6062[3], Arg6062_4 = Arg6062[4], Arg6062_5 = Arg6062[5], Arg6062_6 = Arg6062[6], Arg6062_7 = Arg6062[7], Arg6062_8 = Arg6062[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6062_1, Arg6062_2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6062_3, []]], Arg6062_4, Arg6062_5, Arg6062_6, Arg6062_7, Arg6062_8]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 8, [], "shen.tc-rules"];





Shen.fns["shen.tc-rule"] = [Shen.type_func, function shen_user_lambda6065(Arg6064) {
  if (Arg6064.length < 8) return [Shen.type_func, shen_user_lambda6065, 8, Arg6064];
  var Arg6064_0 = Arg6064[0], Arg6064_1 = Arg6064[1], Arg6064_2 = Arg6064[2], Arg6064_3 = Arg6064[3], Arg6064_4 = Arg6064[4], Arg6064_5 = Arg6064[5], Arg6064_6 = Arg6064[6], Arg6064_7 = Arg6064[7];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["shen.check-defcc-rule"], [Arg6064_1, Arg6064_2, Arg6064_3, Arg6064_4, Arg6064_6, Arg6064_7]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6064_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6064_5, Arg6064_6]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6064_0, Arg6064_6]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg6064_6, Arg6064_7]);}))
  : R0))}, 8, [], "shen.tc-rule"];





Shen.fns["shen.check-defcc-rule"] = [Shen.type_func, function shen_user_lambda6067(Arg6066) {
  if (Arg6066.length < 6) return [Shen.type_func, shen_user_lambda6067, 6, Arg6066];
  var Arg6066_0 = Arg6066[0], Arg6066_1 = Arg6066[1], Arg6066_2 = Arg6066[2], Arg6066_3 = Arg6066[3], Arg6066_4 = Arg6066[4], Arg6066_5 = Arg6066[5];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6066_4])),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6066_4])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6066_4])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.get-syntax+semantics"], [R1, R2, Arg6066_0, Arg6066_4, (new Shen.Freeze([Arg6066_0, Arg6066_3, R1, Arg6066_1, R0, R2, Arg6066_2, R3, Arg6066_4, Arg6066_5], function(Arg6068) {
  var Arg6068_0 = Arg6068[0], Arg6068_1 = Arg6068[1], Arg6068_2 = Arg6068[2], Arg6068_3 = Arg6068[3], Arg6068_4 = Arg6068[4], Arg6068_5 = Arg6068[5], Arg6068_6 = Arg6068[6], Arg6068_7 = Arg6068[7], Arg6068_8 = Arg6068[8], Arg6068_9 = Arg6068[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6068_4, Arg6068_8, (new Shen.Freeze([Arg6068_1, Arg6068_2, Arg6068_3, Arg6068_4, Arg6068_5, Arg6068_6, Arg6068_7, Arg6068_8, Arg6068_9], function(Arg6070) {
  var Arg6070_0 = Arg6070[0], Arg6070_1 = Arg6070[1], Arg6070_2 = Arg6070[2], Arg6070_3 = Arg6070[3], Arg6070_4 = Arg6070[4], Arg6070_5 = Arg6070[5], Arg6070_6 = Arg6070[6], Arg6070_7 = Arg6070[7], Arg6070_8 = Arg6070[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6070_1, Arg6070_0, Arg6070_6, Arg6070_2, Arg6070_7, (new Shen.Freeze([Arg6070_0, Arg6070_1, Arg6070_2, Arg6070_3, Arg6070_4, Arg6070_5, Arg6070_6, Arg6070_7, Arg6070_8], function(Arg6072) {
  var Arg6072_0 = Arg6072[0], Arg6072_1 = Arg6072[1], Arg6072_2 = Arg6072[2], Arg6072_3 = Arg6072[3], Arg6072_4 = Arg6072[4], Arg6072_5 = Arg6072[5], Arg6072_6 = Arg6072[6], Arg6072_7 = Arg6072[7], Arg6072_8 = Arg6072[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6072_3, Arg6072_7, (new Shen.Freeze([Arg6072_1, Arg6072_2, Arg6072_3, Arg6072_4, Arg6072_5, Arg6072_6, Arg6072_7, Arg6072_8], function(Arg6074) {
  var Arg6074_0 = Arg6074[0], Arg6074_1 = Arg6074[1], Arg6074_2 = Arg6074[2], Arg6074_3 = Arg6074[3], Arg6074_4 = Arg6074[4], Arg6074_5 = Arg6074[5], Arg6074_6 = Arg6074[6], Arg6074_7 = Arg6074[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6074_0, Arg6074_1, Arg6074_5, Arg6074_6, (new Shen.Freeze([Arg6074_0, Arg6074_1, Arg6074_2, Arg6074_3, Arg6074_4, Arg6074_5, Arg6074_6, Arg6074_7], function(Arg6076) {
  var Arg6076_0 = Arg6076[0], Arg6076_1 = Arg6076[1], Arg6076_2 = Arg6076[2], Arg6076_3 = Arg6076[3], Arg6076_4 = Arg6076[4], Arg6076_5 = Arg6076[5], Arg6076_6 = Arg6076[6], Arg6076_7 = Arg6076[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6076_2, Arg6076_6, (new Shen.Freeze([Arg6076_2, Arg6076_3, Arg6076_4, Arg6076_5, Arg6076_6, Arg6076_7], function(Arg6078) {
  var Arg6078_0 = Arg6078[0], Arg6078_1 = Arg6078[1], Arg6078_2 = Arg6078[2], Arg6078_3 = Arg6078[3], Arg6078_4 = Arg6078[4], Arg6078_5 = Arg6078[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.semantics-check"], [Arg6078_1, Arg6078_2, Arg6078_3, Arg6078_4, Arg6078_5]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))]);}))}, 6, [], "shen.check-defcc-rule"];





Shen.fns["shen.syntax-hyps"] = [Shen.type_func, function shen_user_lambda6081(Arg6080) {
  if (Arg6080.length < 6) return [Shen.type_func, shen_user_lambda6081, 6, Arg6080];
  var Arg6080_0 = Arg6080[0], Arg6080_1 = Arg6080[1], Arg6080_2 = Arg6080[2], Arg6080_3 = Arg6080[3], Arg6080_4 = Arg6080[4], Arg6080_5 = Arg6080[5];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6080_0, Arg6080_4])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6080_2, Arg6080_1, Arg6080_4, Arg6080_5])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6080_0, Arg6080_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6080_4])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  (R1 = R1[2]),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6080_4])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6080_4, (new Shen.Freeze([R3, R2, R1, R0, R4, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5, R0, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6082) {
  var Arg6082_0 = Arg6082[0], Arg6082_1 = Arg6082[1], Arg6082_2 = Arg6082[2], Arg6082_3 = Arg6082[3], Arg6082_4 = Arg6082[4], Arg6082_5 = Arg6082[5], Arg6082_6 = Arg6082[6], Arg6082_7 = Arg6082[7], Arg6082_8 = Arg6082[8], Arg6082_9 = Arg6082[9], Arg6082_10 = Arg6082[10], Arg6082_11 = Arg6082[11], Arg6082_12 = Arg6082[12], Arg6082_13 = Arg6082[13], Arg6082_14 = Arg6082[14], Arg6082_15 = Arg6082[15], Arg6082_16 = Arg6082[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.conc"], [[Shen.type_cons, Arg6082_0, Arg6082_1], Arg6082_2, Arg6082_4, Arg6082_8, (new Shen.Freeze([Arg6082_0, Arg6082_1, Arg6082_2, Arg6082_3, Arg6082_4, Arg6082_5, Arg6082_6, Arg6082_7, Arg6082_8, Arg6082_9], function(Arg6084) {
  var Arg6084_0 = Arg6084[0], Arg6084_1 = Arg6084[1], Arg6084_2 = Arg6084[2], Arg6084_3 = Arg6084[3], Arg6084_4 = Arg6084[4], Arg6084_5 = Arg6084[5], Arg6084_6 = Arg6084[6], Arg6084_7 = Arg6084[7], Arg6084_8 = Arg6084[8], Arg6084_9 = Arg6084[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6084_3, Arg6084_8, (new Shen.Freeze([Arg6084_3, Arg6084_4, Arg6084_5, Arg6084_6, Arg6084_7, Arg6084_8, Arg6084_9], function(Arg6086) {
  var Arg6086_0 = Arg6086[0], Arg6086_1 = Arg6086[1], Arg6086_2 = Arg6086[2], Arg6086_3 = Arg6086[3], Arg6086_4 = Arg6086[4], Arg6086_5 = Arg6086[5], Arg6086_6 = Arg6086[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6086_1, Arg6086_2, Arg6086_3, Arg6086_4, Arg6086_5, Arg6086_6]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6080_0, Arg6080_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6080_2, Arg6080_4])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6080_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6080_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6080_4])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6080_4])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R4 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg6080_4])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6080_3, R4, Arg6080_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6080_1, R6, Arg6080_3, Arg6080_4, Arg6080_5, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6088) {
  var Arg6088_0 = Arg6088[0], Arg6088_1 = Arg6088[1], Arg6088_2 = Arg6088[2], Arg6088_3 = Arg6088[3], Arg6088_4 = Arg6088[4], Arg6088_5 = Arg6088[5], Arg6088_6 = Arg6088[6], Arg6088_7 = Arg6088[7], Arg6088_8 = Arg6088[8], Arg6088_9 = Arg6088[9], Arg6088_10 = Arg6088[10], Arg6088_11 = Arg6088[11], Arg6088_12 = Arg6088[12], Arg6088_13 = Arg6088[13], Arg6088_14 = Arg6088[14], Arg6088_15 = Arg6088[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6088_2, Arg6088_1, Arg6088_8, (new Shen.Freeze([Arg6088_1, Arg6088_2, Arg6088_3, Arg6088_4, Arg6088_5, Arg6088_6, Arg6088_7, Arg6088_8, Arg6088_9], function(Arg6090) {
  var Arg6090_0 = Arg6090[0], Arg6090_1 = Arg6090[1], Arg6090_2 = Arg6090[2], Arg6090_3 = Arg6090[3], Arg6090_4 = Arg6090[4], Arg6090_5 = Arg6090[5], Arg6090_6 = Arg6090[6], Arg6090_7 = Arg6090[7], Arg6090_8 = Arg6090[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6090_1, Arg6090_7])]), Arg6090_7, (new Shen.Freeze([Arg6090_1, Arg6090_2, Arg6090_3, Arg6090_4, Arg6090_5, Arg6090_6, Arg6090_7, Arg6090_8], function(Arg6092) {
  var Arg6092_0 = Arg6092[0], Arg6092_1 = Arg6092[1], Arg6092_2 = Arg6092[2], Arg6092_3 = Arg6092[3], Arg6092_4 = Arg6092[4], Arg6092_5 = Arg6092[5], Arg6092_6 = Arg6092[6], Arg6092_7 = Arg6092[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6092_1, Arg6092_6, (new Shen.Freeze([Arg6092_1, Arg6092_2, Arg6092_3, Arg6092_4, Arg6092_5, Arg6092_6, Arg6092_7], function(Arg6094) {
  var Arg6094_0 = Arg6094[0], Arg6094_1 = Arg6094[1], Arg6094_2 = Arg6094[2], Arg6094_3 = Arg6094[3], Arg6094_4 = Arg6094[4], Arg6094_5 = Arg6094[5], Arg6094_6 = Arg6094[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6094_1, Arg6094_2, Arg6094_3, Arg6094_4, Arg6094_5, Arg6094_6]);});})}))]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg6080_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6080_3, R4, Arg6080_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6080_1, R3, Arg6080_3, Arg6080_4, Arg6080_5, R6, Arg6080_4, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6096) {
  var Arg6096_0 = Arg6096[0], Arg6096_1 = Arg6096[1], Arg6096_2 = Arg6096[2], Arg6096_3 = Arg6096[3], Arg6096_4 = Arg6096[4], Arg6096_5 = Arg6096[5], Arg6096_6 = Arg6096[6], Arg6096_7 = Arg6096[7], Arg6096_8 = Arg6096[8], Arg6096_9 = Arg6096[9], Arg6096_10 = Arg6096[10], Arg6096_11 = Arg6096[11], Arg6096_12 = Arg6096[12], Arg6096_13 = Arg6096[13], Arg6096_14 = Arg6096[14], Arg6096_15 = Arg6096[15], Arg6096_16 = Arg6096[16], Arg6096_17 = Arg6096[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6096_2, Arg6096_1, Arg6096_8, (new Shen.Freeze([Arg6096_1, Arg6096_2, Arg6096_3, Arg6096_4, Arg6096_5, Arg6096_6, Arg6096_7, Arg6096_8, Arg6096_9], function(Arg6098) {
  var Arg6098_0 = Arg6098[0], Arg6098_1 = Arg6098[1], Arg6098_2 = Arg6098[2], Arg6098_3 = Arg6098[3], Arg6098_4 = Arg6098[4], Arg6098_5 = Arg6098[5], Arg6098_6 = Arg6098[6], Arg6098_7 = Arg6098[7], Arg6098_8 = Arg6098[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6098_1, Arg6098_7])]), Arg6098_7, (new Shen.Freeze([Arg6098_1, Arg6098_2, Arg6098_3, Arg6098_4, Arg6098_5, Arg6098_6, Arg6098_7, Arg6098_8], function(Arg6100) {
  var Arg6100_0 = Arg6100[0], Arg6100_1 = Arg6100[1], Arg6100_2 = Arg6100[2], Arg6100_3 = Arg6100[3], Arg6100_4 = Arg6100[4], Arg6100_5 = Arg6100[5], Arg6100_6 = Arg6100[6], Arg6100_7 = Arg6100[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6100_1, Arg6100_6, (new Shen.Freeze([Arg6100_1, Arg6100_2, Arg6100_3, Arg6100_4, Arg6100_5, Arg6100_6, Arg6100_7], function(Arg6102) {
  var Arg6102_0 = Arg6102[0], Arg6102_1 = Arg6102[1], Arg6102_2 = Arg6102[2], Arg6102_3 = Arg6102[3], Arg6102_4 = Arg6102[4], Arg6102_5 = Arg6102[5], Arg6102_6 = Arg6102[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6102_1, Arg6102_2, Arg6102_3, Arg6102_4, Arg6102_5, Arg6102_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6080_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6080_4])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R4, []], Arg6080_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6080_3, R4, Arg6080_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6080_1, R3, Arg6080_3, Arg6080_4, Arg6080_5, R6, Arg6080_4, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6104) {
  var Arg6104_0 = Arg6104[0], Arg6104_1 = Arg6104[1], Arg6104_2 = Arg6104[2], Arg6104_3 = Arg6104[3], Arg6104_4 = Arg6104[4], Arg6104_5 = Arg6104[5], Arg6104_6 = Arg6104[6], Arg6104_7 = Arg6104[7], Arg6104_8 = Arg6104[8], Arg6104_9 = Arg6104[9], Arg6104_10 = Arg6104[10], Arg6104_11 = Arg6104[11], Arg6104_12 = Arg6104[12], Arg6104_13 = Arg6104[13], Arg6104_14 = Arg6104[14], Arg6104_15 = Arg6104[15], Arg6104_16 = Arg6104[16], Arg6104_17 = Arg6104[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6104_2, Arg6104_1, Arg6104_8, (new Shen.Freeze([Arg6104_1, Arg6104_2, Arg6104_3, Arg6104_4, Arg6104_5, Arg6104_6, Arg6104_7, Arg6104_8, Arg6104_9], function(Arg6106) {
  var Arg6106_0 = Arg6106[0], Arg6106_1 = Arg6106[1], Arg6106_2 = Arg6106[2], Arg6106_3 = Arg6106[3], Arg6106_4 = Arg6106[4], Arg6106_5 = Arg6106[5], Arg6106_6 = Arg6106[6], Arg6106_7 = Arg6106[7], Arg6106_8 = Arg6106[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6106_1, Arg6106_7])]), Arg6106_7, (new Shen.Freeze([Arg6106_1, Arg6106_2, Arg6106_3, Arg6106_4, Arg6106_5, Arg6106_6, Arg6106_7, Arg6106_8], function(Arg6108) {
  var Arg6108_0 = Arg6108[0], Arg6108_1 = Arg6108[1], Arg6108_2 = Arg6108[2], Arg6108_3 = Arg6108[3], Arg6108_4 = Arg6108[4], Arg6108_5 = Arg6108[5], Arg6108_6 = Arg6108[6], Arg6108_7 = Arg6108[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6108_1, Arg6108_6, (new Shen.Freeze([Arg6108_1, Arg6108_2, Arg6108_3, Arg6108_4, Arg6108_5, Arg6108_6, Arg6108_7], function(Arg6110) {
  var Arg6110_0 = Arg6110[0], Arg6110_1 = Arg6110[1], Arg6110_2 = Arg6110[2], Arg6110_3 = Arg6110[3], Arg6110_4 = Arg6110[4], Arg6110_5 = Arg6110[5], Arg6110_6 = Arg6110[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6110_1, Arg6110_2, Arg6110_3, Arg6110_4, Arg6110_5, Arg6110_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6080_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, ":"], Arg6080_4]),
  ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6080_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R7 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6080_4])),
  ((Shen.empty$question$(R4))
  ? ((R4 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6080_3, R7, Arg6080_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6080_1, R4, Arg6080_3, Arg6080_4, Arg6080_5, R6, Arg6080_4, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6112) {
  var Arg6112_0 = Arg6112[0], Arg6112_1 = Arg6112[1], Arg6112_2 = Arg6112[2], Arg6112_3 = Arg6112[3], Arg6112_4 = Arg6112[4], Arg6112_5 = Arg6112[5], Arg6112_6 = Arg6112[6], Arg6112_7 = Arg6112[7], Arg6112_8 = Arg6112[8], Arg6112_9 = Arg6112[9], Arg6112_10 = Arg6112[10], Arg6112_11 = Arg6112[11], Arg6112_12 = Arg6112[12], Arg6112_13 = Arg6112[13], Arg6112_14 = Arg6112[14], Arg6112_15 = Arg6112[15], Arg6112_16 = Arg6112[16], Arg6112_17 = Arg6112[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6112_2, Arg6112_1, Arg6112_8, (new Shen.Freeze([Arg6112_1, Arg6112_2, Arg6112_3, Arg6112_4, Arg6112_5, Arg6112_6, Arg6112_7, Arg6112_8, Arg6112_9], function(Arg6114) {
  var Arg6114_0 = Arg6114[0], Arg6114_1 = Arg6114[1], Arg6114_2 = Arg6114[2], Arg6114_3 = Arg6114[3], Arg6114_4 = Arg6114[4], Arg6114_5 = Arg6114[5], Arg6114_6 = Arg6114[6], Arg6114_7 = Arg6114[7], Arg6114_8 = Arg6114[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6114_1, Arg6114_7])]), Arg6114_7, (new Shen.Freeze([Arg6114_1, Arg6114_2, Arg6114_3, Arg6114_4, Arg6114_5, Arg6114_6, Arg6114_7, Arg6114_8], function(Arg6116) {
  var Arg6116_0 = Arg6116[0], Arg6116_1 = Arg6116[1], Arg6116_2 = Arg6116[2], Arg6116_3 = Arg6116[3], Arg6116_4 = Arg6116[4], Arg6116_5 = Arg6116[5], Arg6116_6 = Arg6116[6], Arg6116_7 = Arg6116[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6116_1, Arg6116_6, (new Shen.Freeze([Arg6116_1, Arg6116_2, Arg6116_3, Arg6116_4, Arg6116_5, Arg6116_6, Arg6116_7], function(Arg6118) {
  var Arg6118_0 = Arg6118[0], Arg6118_1 = Arg6118[1], Arg6118_2 = Arg6118[2], Arg6118_3 = Arg6118[3], Arg6118_4 = Arg6118[4], Arg6118_5 = Arg6118[5], Arg6118_6 = Arg6118[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5, Arg6118_6]);});})}))]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6080_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6080_3, R7, Arg6080_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6080_1, R3, Arg6080_3, Arg6080_4, Arg6080_5, R4, Arg6080_4, R6, Arg6080_4, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6120) {
  var Arg6120_0 = Arg6120[0], Arg6120_1 = Arg6120[1], Arg6120_2 = Arg6120[2], Arg6120_3 = Arg6120[3], Arg6120_4 = Arg6120[4], Arg6120_5 = Arg6120[5], Arg6120_6 = Arg6120[6], Arg6120_7 = Arg6120[7], Arg6120_8 = Arg6120[8], Arg6120_9 = Arg6120[9], Arg6120_10 = Arg6120[10], Arg6120_11 = Arg6120[11], Arg6120_12 = Arg6120[12], Arg6120_13 = Arg6120[13], Arg6120_14 = Arg6120[14], Arg6120_15 = Arg6120[15], Arg6120_16 = Arg6120[16], Arg6120_17 = Arg6120[17], Arg6120_18 = Arg6120[18], Arg6120_19 = Arg6120[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6120_2, Arg6120_1, Arg6120_8, (new Shen.Freeze([Arg6120_1, Arg6120_2, Arg6120_3, Arg6120_4, Arg6120_5, Arg6120_6, Arg6120_7, Arg6120_8, Arg6120_9], function(Arg6122) {
  var Arg6122_0 = Arg6122[0], Arg6122_1 = Arg6122[1], Arg6122_2 = Arg6122[2], Arg6122_3 = Arg6122[3], Arg6122_4 = Arg6122[4], Arg6122_5 = Arg6122[5], Arg6122_6 = Arg6122[6], Arg6122_7 = Arg6122[7], Arg6122_8 = Arg6122[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6122_1, Arg6122_7])]), Arg6122_7, (new Shen.Freeze([Arg6122_1, Arg6122_2, Arg6122_3, Arg6122_4, Arg6122_5, Arg6122_6, Arg6122_7, Arg6122_8], function(Arg6124) {
  var Arg6124_0 = Arg6124[0], Arg6124_1 = Arg6124[1], Arg6124_2 = Arg6124[2], Arg6124_3 = Arg6124[3], Arg6124_4 = Arg6124[4], Arg6124_5 = Arg6124[5], Arg6124_6 = Arg6124[6], Arg6124_7 = Arg6124[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6124_1, Arg6124_6, (new Shen.Freeze([Arg6124_1, Arg6124_2, Arg6124_3, Arg6124_4, Arg6124_5, Arg6124_6, Arg6124_7], function(Arg6126) {
  var Arg6126_0 = Arg6126[0], Arg6126_1 = Arg6126[1], Arg6126_2 = Arg6126[2], Arg6126_3 = Arg6126[3], Arg6126_4 = Arg6126[4], Arg6126_5 = Arg6126[5], Arg6126_6 = Arg6126[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6126_1, Arg6126_2, Arg6126_3, Arg6126_4, Arg6126_5, Arg6126_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6080_4]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6080_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R7, []], Arg6080_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6080_3, R7, Arg6080_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6080_1, R3, Arg6080_3, Arg6080_4, Arg6080_5, R4, Arg6080_4, R6, Arg6080_4, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6128) {
  var Arg6128_0 = Arg6128[0], Arg6128_1 = Arg6128[1], Arg6128_2 = Arg6128[2], Arg6128_3 = Arg6128[3], Arg6128_4 = Arg6128[4], Arg6128_5 = Arg6128[5], Arg6128_6 = Arg6128[6], Arg6128_7 = Arg6128[7], Arg6128_8 = Arg6128[8], Arg6128_9 = Arg6128[9], Arg6128_10 = Arg6128[10], Arg6128_11 = Arg6128[11], Arg6128_12 = Arg6128[12], Arg6128_13 = Arg6128[13], Arg6128_14 = Arg6128[14], Arg6128_15 = Arg6128[15], Arg6128_16 = Arg6128[16], Arg6128_17 = Arg6128[17], Arg6128_18 = Arg6128[18], Arg6128_19 = Arg6128[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6128_2, Arg6128_1, Arg6128_8, (new Shen.Freeze([Arg6128_1, Arg6128_2, Arg6128_3, Arg6128_4, Arg6128_5, Arg6128_6, Arg6128_7, Arg6128_8, Arg6128_9], function(Arg6130) {
  var Arg6130_0 = Arg6130[0], Arg6130_1 = Arg6130[1], Arg6130_2 = Arg6130[2], Arg6130_3 = Arg6130[3], Arg6130_4 = Arg6130[4], Arg6130_5 = Arg6130[5], Arg6130_6 = Arg6130[6], Arg6130_7 = Arg6130[7], Arg6130_8 = Arg6130[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6130_1, Arg6130_7])]), Arg6130_7, (new Shen.Freeze([Arg6130_1, Arg6130_2, Arg6130_3, Arg6130_4, Arg6130_5, Arg6130_6, Arg6130_7, Arg6130_8], function(Arg6132) {
  var Arg6132_0 = Arg6132[0], Arg6132_1 = Arg6132[1], Arg6132_2 = Arg6132[2], Arg6132_3 = Arg6132[3], Arg6132_4 = Arg6132[4], Arg6132_5 = Arg6132[5], Arg6132_6 = Arg6132[6], Arg6132_7 = Arg6132[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6132_1, Arg6132_6, (new Shen.Freeze([Arg6132_1, Arg6132_2, Arg6132_3, Arg6132_4, Arg6132_5, Arg6132_6, Arg6132_7], function(Arg6134) {
  var Arg6134_0 = Arg6134[0], Arg6134_1 = Arg6134[1], Arg6134_2 = Arg6134[2], Arg6134_3 = Arg6134[3], Arg6134_4 = Arg6134[4], Arg6134_5 = Arg6134[5], Arg6134_6 = Arg6134[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6134_1, Arg6134_2, Arg6134_3, Arg6134_4, Arg6134_5, Arg6134_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6080_4]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6080_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6080_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]], Arg6080_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6080_3, R6, Arg6080_4, (new Shen.Freeze([R6, R2, R5, R0, R1, Arg6080_1, R3, Arg6080_3, Arg6080_4, Arg6080_5, R4, Arg6080_4, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6136) {
  var Arg6136_0 = Arg6136[0], Arg6136_1 = Arg6136[1], Arg6136_2 = Arg6136[2], Arg6136_3 = Arg6136[3], Arg6136_4 = Arg6136[4], Arg6136_5 = Arg6136[5], Arg6136_6 = Arg6136[6], Arg6136_7 = Arg6136[7], Arg6136_8 = Arg6136[8], Arg6136_9 = Arg6136[9], Arg6136_10 = Arg6136[10], Arg6136_11 = Arg6136[11], Arg6136_12 = Arg6136[12], Arg6136_13 = Arg6136[13], Arg6136_14 = Arg6136[14], Arg6136_15 = Arg6136[15], Arg6136_16 = Arg6136[16], Arg6136_17 = Arg6136[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6136_2, Arg6136_1, Arg6136_8, (new Shen.Freeze([Arg6136_1, Arg6136_2, Arg6136_3, Arg6136_4, Arg6136_5, Arg6136_6, Arg6136_7, Arg6136_8, Arg6136_9], function(Arg6138) {
  var Arg6138_0 = Arg6138[0], Arg6138_1 = Arg6138[1], Arg6138_2 = Arg6138[2], Arg6138_3 = Arg6138[3], Arg6138_4 = Arg6138[4], Arg6138_5 = Arg6138[5], Arg6138_6 = Arg6138[6], Arg6138_7 = Arg6138[7], Arg6138_8 = Arg6138[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6138_1, Arg6138_7])]), Arg6138_7, (new Shen.Freeze([Arg6138_1, Arg6138_2, Arg6138_3, Arg6138_4, Arg6138_5, Arg6138_6, Arg6138_7, Arg6138_8], function(Arg6140) {
  var Arg6140_0 = Arg6140[0], Arg6140_1 = Arg6140[1], Arg6140_2 = Arg6140[2], Arg6140_3 = Arg6140[3], Arg6140_4 = Arg6140[4], Arg6140_5 = Arg6140[5], Arg6140_6 = Arg6140[6], Arg6140_7 = Arg6140[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6140_1, Arg6140_6, (new Shen.Freeze([Arg6140_1, Arg6140_2, Arg6140_3, Arg6140_4, Arg6140_5, Arg6140_6, Arg6140_7], function(Arg6142) {
  var Arg6142_0 = Arg6142[0], Arg6142_1 = Arg6142[1], Arg6142_2 = Arg6142[2], Arg6142_3 = Arg6142[3], Arg6142_4 = Arg6142[4], Arg6142_5 = Arg6142[5], Arg6142_6 = Arg6142[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6142_1, Arg6142_2, Arg6142_3, Arg6142_4, Arg6142_5, Arg6142_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6080_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6080_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6080_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]]], Arg6080_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6080_3, R6, Arg6080_4, (new Shen.Freeze([R6, R2, R5, R0, R1, Arg6080_1, R3, Arg6080_3, Arg6080_4, Arg6080_5, R4, Arg6080_4, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6144) {
  var Arg6144_0 = Arg6144[0], Arg6144_1 = Arg6144[1], Arg6144_2 = Arg6144[2], Arg6144_3 = Arg6144[3], Arg6144_4 = Arg6144[4], Arg6144_5 = Arg6144[5], Arg6144_6 = Arg6144[6], Arg6144_7 = Arg6144[7], Arg6144_8 = Arg6144[8], Arg6144_9 = Arg6144[9], Arg6144_10 = Arg6144[10], Arg6144_11 = Arg6144[11], Arg6144_12 = Arg6144[12], Arg6144_13 = Arg6144[13], Arg6144_14 = Arg6144[14], Arg6144_15 = Arg6144[15], Arg6144_16 = Arg6144[16], Arg6144_17 = Arg6144[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6144_2, Arg6144_1, Arg6144_8, (new Shen.Freeze([Arg6144_1, Arg6144_2, Arg6144_3, Arg6144_4, Arg6144_5, Arg6144_6, Arg6144_7, Arg6144_8, Arg6144_9], function(Arg6146) {
  var Arg6146_0 = Arg6146[0], Arg6146_1 = Arg6146[1], Arg6146_2 = Arg6146[2], Arg6146_3 = Arg6146[3], Arg6146_4 = Arg6146[4], Arg6146_5 = Arg6146[5], Arg6146_6 = Arg6146[6], Arg6146_7 = Arg6146[7], Arg6146_8 = Arg6146[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6146_1, Arg6146_7])]), Arg6146_7, (new Shen.Freeze([Arg6146_1, Arg6146_2, Arg6146_3, Arg6146_4, Arg6146_5, Arg6146_6, Arg6146_7, Arg6146_8], function(Arg6148) {
  var Arg6148_0 = Arg6148[0], Arg6148_1 = Arg6148[1], Arg6148_2 = Arg6148[2], Arg6148_3 = Arg6148[3], Arg6148_4 = Arg6148[4], Arg6148_5 = Arg6148[5], Arg6148_6 = Arg6148[6], Arg6148_7 = Arg6148[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6148_1, Arg6148_6, (new Shen.Freeze([Arg6148_1, Arg6148_2, Arg6148_3, Arg6148_4, Arg6148_5, Arg6148_6, Arg6148_7], function(Arg6150) {
  var Arg6150_0 = Arg6150[0], Arg6150_1 = Arg6150[1], Arg6150_2 = Arg6150[2], Arg6150_3 = Arg6150[3], Arg6150_4 = Arg6150[4], Arg6150_5 = Arg6150[5], Arg6150_6 = Arg6150[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6150_1, Arg6150_2, Arg6150_3, Arg6150_4, Arg6150_5, Arg6150_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6080_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6080_4])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6080_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6080_4])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], R6], Arg6080_4]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6080_3, R5, Arg6080_4, (new Shen.Freeze([R5, R2, R4, R0, R1, Arg6080_1, R6, Arg6080_3, Arg6080_5, R3, Arg6080_4, Arg6080_0, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5], function(Arg6152) {
  var Arg6152_0 = Arg6152[0], Arg6152_1 = Arg6152[1], Arg6152_2 = Arg6152[2], Arg6152_3 = Arg6152[3], Arg6152_4 = Arg6152[4], Arg6152_5 = Arg6152[5], Arg6152_6 = Arg6152[6], Arg6152_7 = Arg6152[7], Arg6152_8 = Arg6152[8], Arg6152_9 = Arg6152[9], Arg6152_10 = Arg6152[10], Arg6152_11 = Arg6152[11], Arg6152_12 = Arg6152[12], Arg6152_13 = Arg6152[13], Arg6152_14 = Arg6152[14], Arg6152_15 = Arg6152[15], Arg6152_16 = Arg6152[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6152_2, Arg6152_1, Arg6152_10, (new Shen.Freeze([Arg6152_1, Arg6152_2, Arg6152_3, Arg6152_4, Arg6152_5, Arg6152_6, Arg6152_7, Arg6152_10, Arg6152_8], function(Arg6154) {
  var Arg6154_0 = Arg6154[0], Arg6154_1 = Arg6154[1], Arg6154_2 = Arg6154[2], Arg6154_3 = Arg6154[3], Arg6154_4 = Arg6154[4], Arg6154_5 = Arg6154[5], Arg6154_6 = Arg6154[6], Arg6154_7 = Arg6154[7], Arg6154_8 = Arg6154[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6154_1, Arg6154_7])]), Arg6154_7, (new Shen.Freeze([Arg6154_1, Arg6154_2, Arg6154_3, Arg6154_4, Arg6154_5, Arg6154_6, Arg6154_7, Arg6154_8], function(Arg6156) {
  var Arg6156_0 = Arg6156[0], Arg6156_1 = Arg6156[1], Arg6156_2 = Arg6156[2], Arg6156_3 = Arg6156[3], Arg6156_4 = Arg6156[4], Arg6156_5 = Arg6156[5], Arg6156_6 = Arg6156[6], Arg6156_7 = Arg6156[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6156_1, Arg6156_6, (new Shen.Freeze([Arg6156_1, Arg6156_2, Arg6156_3, Arg6156_4, Arg6156_5, Arg6156_6, Arg6156_7], function(Arg6158) {
  var Arg6158_0 = Arg6158[0], Arg6158_1 = Arg6158[1], Arg6158_2 = Arg6158[2], Arg6158_3 = Arg6158[3], Arg6158_4 = Arg6158[4], Arg6158_5 = Arg6158[5], Arg6158_6 = Arg6158[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6158_1, Arg6158_2, Arg6158_3, Arg6158_4, Arg6158_5, Arg6158_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6080_4]),
  (R1 = R6))
  : (R1 = false))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6080_0, Arg6080_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.syntax-hyps"], [R1, Arg6080_1, Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5]))
  : false))
  : R1))
  : R1))
  : R1))]);}))}, 6, [], "shen.syntax-hyps"];





Shen.fns["shen.get-syntax+semantics"] = [Shen.type_func, function shen_user_lambda6161(Arg6160) {
  if (Arg6160.length < 5) return [Shen.type_func, shen_user_lambda6161, 5, Arg6160];
  var Arg6160_0 = Arg6160[0], Arg6160_1 = Arg6160[1], Arg6160_2 = Arg6160[2], Arg6160_3 = Arg6160[3], Arg6160_4 = Arg6160[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6160_0, Arg6160_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6160_2, Arg6160_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6160_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6160_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6160_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6160_3, (new Shen.Freeze([R1, R0, Arg6160_0, Arg6160_2, Arg6160_1, Arg6160_4, Arg6160_3], function(Arg6162) {
  var Arg6162_0 = Arg6162[0], Arg6162_1 = Arg6162[1], Arg6162_2 = Arg6162[2], Arg6162_3 = Arg6162[3], Arg6162_4 = Arg6162[4], Arg6162_5 = Arg6162[5], Arg6162_6 = Arg6162[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6162_4, Shen.call(Shen.fns["shen.lazyderef"], [Arg6162_0, Arg6162_6]), Arg6162_6, Arg6162_5]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6160_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6160_2, Arg6160_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6160_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6160_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6160_3])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["cut"], [R0, Arg6160_3, (new Shen.Freeze([R2, R1, Arg6160_3, R0, Arg6160_0, Arg6160_2, Arg6160_1, Arg6160_4, Arg6160_3], function(Arg6164) {
  var Arg6164_0 = Arg6164[0], Arg6164_1 = Arg6164[1], Arg6164_2 = Arg6164[2], Arg6164_3 = Arg6164[3], Arg6164_4 = Arg6164[4], Arg6164_5 = Arg6164[5], Arg6164_6 = Arg6164[6], Arg6164_7 = Arg6164[7], Arg6164_8 = Arg6164[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6164_6, Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_0, Arg6164_2]), Arg6164_2, Arg6164_7]);});})}))])))
  : (R2 = false)))
  : (R2 = false)))
  : (R2 = false)))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6160_3]),
  (R1 = R2))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6160_0, Arg6160_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6160_2, Arg6160_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6160_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6160_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6160_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6160_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6160_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6160_3])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6160_3, (new Shen.Freeze([R0, R2, R1, Arg6160_0, Arg6160_2, Arg6160_1, Arg6160_4, Arg6160_3], function(Arg6166) {
  var Arg6166_0 = Arg6166[0], Arg6166_1 = Arg6166[1], Arg6166_2 = Arg6166[2], Arg6166_3 = Arg6166[3], Arg6166_4 = Arg6166[4], Arg6166_5 = Arg6166[5], Arg6166_6 = Arg6166[6], Arg6166_7 = Arg6166[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6166_5, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6166_1, Arg6166_7]), [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6166_2, Arg6166_7]), []]]], Arg6166_7, Arg6166_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6160_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6160_2, Arg6160_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6160_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6160_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6160_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6160_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6160_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6160_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["cut"], [R0, Arg6160_3, (new Shen.Freeze([R0, R3, R2, R1, Arg6160_3, Arg6160_0, Arg6160_2, Arg6160_1, Arg6160_4, Arg6160_3], function(Arg6168) {
  var Arg6168_0 = Arg6168[0], Arg6168_1 = Arg6168[1], Arg6168_2 = Arg6168[2], Arg6168_3 = Arg6168[3], Arg6168_4 = Arg6168[4], Arg6168_5 = Arg6168[5], Arg6168_6 = Arg6168[6], Arg6168_7 = Arg6168[7], Arg6168_8 = Arg6168[8], Arg6168_9 = Arg6168[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6168_7, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6168_1, Arg6168_4]), [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6168_2, Arg6168_4]), []]]], Arg6168_4, Arg6168_8]);});})}))])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6160_3]),
  (R1 = R0))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6160_0, Arg6160_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6160_2, Arg6160_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["unify!"], [R3, R0, Arg6160_3, (new Shen.Freeze([R3, R0, R1, Arg6160_1, R2, Arg6160_3, Arg6160_4], function(Arg6170) {
  var Arg6170_0 = Arg6170[0], Arg6170_1 = Arg6170[1], Arg6170_2 = Arg6170[2], Arg6170_3 = Arg6170[3], Arg6170_4 = Arg6170[4], Arg6170_5 = Arg6170[5], Arg6170_6 = Arg6170[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-syntax+semantics"], [Arg6170_2, Arg6170_3, Arg6170_4, Arg6170_5, Arg6170_6]);});})}))]))
  : false))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6160_3])),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6160_3])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, R2], Arg6160_3]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6160_2, Arg6160_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["unify!"], [R4, R0, Arg6160_3, (new Shen.Freeze([R4, R0, R2, Arg6160_1, R3, Arg6160_3, Arg6160_4, R1, Arg6160_3], function(Arg6172) {
  var Arg6172_0 = Arg6172[0], Arg6172_1 = Arg6172[1], Arg6172_2 = Arg6172[2], Arg6172_3 = Arg6172[3], Arg6172_4 = Arg6172[4], Arg6172_5 = Arg6172[5], Arg6172_6 = Arg6172[6], Arg6172_7 = Arg6172[7], Arg6172_8 = Arg6172[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-syntax+semantics"], [Arg6172_2, Arg6172_3, Arg6172_4, Arg6172_5, Arg6172_6]);});})}))])))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6160_3]),
  R2)
  : false)))
  : R1))
  : R1))]);}))}, 5, [], "shen.get-syntax+semantics"];





Shen.fns["shen.syntax-check"] = [Shen.type_func, function shen_user_lambda6175(Arg6174) {
  if (Arg6174.length < 5) return [Shen.type_func, shen_user_lambda6175, 5, Arg6174];
  var Arg6174_0 = Arg6174[0], Arg6174_1 = Arg6174[1], Arg6174_2 = Arg6174[2], Arg6174_3 = Arg6174[3], Arg6174_4 = Arg6174[4];
  var R0, R1, R2, R3, R4, R5;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6174_0, Arg6174_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6174_4))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6174_0, Arg6174_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6174_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6174_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6174_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.grammar_symbol?"], [Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6174_3])]), Arg6174_3, (new Shen.Freeze([R3, R2, R4, R5, R0, R1, Arg6174_1, Arg6174_2, Arg6174_3, Arg6174_4, Arg6174_0, R0, Arg6174_1, Arg6174_2, Arg6174_3, Arg6174_4], function(Arg6176) {
  var Arg6176_0 = Arg6176[0], Arg6176_1 = Arg6176[1], Arg6176_2 = Arg6176[2], Arg6176_3 = Arg6176[3], Arg6176_4 = Arg6176[4], Arg6176_5 = Arg6176[5], Arg6176_6 = Arg6176[6], Arg6176_7 = Arg6176[7], Arg6176_8 = Arg6176[8], Arg6176_9 = Arg6176[9], Arg6176_10 = Arg6176[10], Arg6176_11 = Arg6176[11], Arg6176_12 = Arg6176[12], Arg6176_13 = Arg6176[13], Arg6176_14 = Arg6176[14], Arg6176_15 = Arg6176[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6176_4, Arg6176_8, (new Shen.Freeze([Arg6176_0, Arg6176_1, Arg6176_2, Arg6176_3, Arg6176_4, Arg6176_5, Arg6176_6, Arg6176_7, Arg6176_8, Arg6176_9], function(Arg6178) {
  var Arg6178_0 = Arg6178[0], Arg6178_1 = Arg6178[1], Arg6178_2 = Arg6178[2], Arg6178_3 = Arg6178[3], Arg6178_4 = Arg6178[4], Arg6178_5 = Arg6178[5], Arg6178_6 = Arg6178[6], Arg6178_7 = Arg6178[7], Arg6178_8 = Arg6178[8], Arg6178_9 = Arg6178[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6178_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6178_3, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6178_0, []]]], []]]], Arg6178_7, Arg6178_8, (new Shen.Freeze([Arg6178_0, Arg6178_1, Arg6178_2, Arg6178_3, Arg6178_4, Arg6178_5, Arg6178_6, Arg6178_7, Arg6178_8, Arg6178_9], function(Arg6180) {
  var Arg6180_0 = Arg6180[0], Arg6180_1 = Arg6180[1], Arg6180_2 = Arg6180[2], Arg6180_3 = Arg6180[3], Arg6180_4 = Arg6180[4], Arg6180_5 = Arg6180[5], Arg6180_6 = Arg6180[6], Arg6180_7 = Arg6180[7], Arg6180_8 = Arg6180[8], Arg6180_9 = Arg6180[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6180_4, Arg6180_8, (new Shen.Freeze([Arg6180_1, Arg6180_2, Arg6180_3, Arg6180_4, Arg6180_5, Arg6180_6, Arg6180_7, Arg6180_8, Arg6180_9], function(Arg6182) {
  var Arg6182_0 = Arg6182[0], Arg6182_1 = Arg6182[1], Arg6182_2 = Arg6182[2], Arg6182_3 = Arg6182[3], Arg6182_4 = Arg6182[4], Arg6182_5 = Arg6182[5], Arg6182_6 = Arg6182[6], Arg6182_7 = Arg6182[7], Arg6182_8 = Arg6182[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6182_1, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Shen.call(Shen.fns["shen.lazyderef"], [Arg6182_0, Arg6182_7])]), Arg6182_7, (new Shen.Freeze([Arg6182_0, Arg6182_1, Arg6182_2, Arg6182_3, Arg6182_4, Arg6182_5, Arg6182_6, Arg6182_7, Arg6182_8], function(Arg6184) {
  var Arg6184_0 = Arg6184[0], Arg6184_1 = Arg6184[1], Arg6184_2 = Arg6184[2], Arg6184_3 = Arg6184[3], Arg6184_4 = Arg6184[4], Arg6184_5 = Arg6184[5], Arg6184_6 = Arg6184[6], Arg6184_7 = Arg6184[7], Arg6184_8 = Arg6184[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6184_3, Arg6184_7, (new Shen.Freeze([Arg6184_1, Arg6184_2, Arg6184_3, Arg6184_4, Arg6184_5, Arg6184_6, Arg6184_7, Arg6184_8], function(Arg6186) {
  var Arg6186_0 = Arg6186[0], Arg6186_1 = Arg6186[1], Arg6186_2 = Arg6186[2], Arg6186_3 = Arg6186[3], Arg6186_4 = Arg6186[4], Arg6186_5 = Arg6186[5], Arg6186_6 = Arg6186[6], Arg6186_7 = Arg6186[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6186_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6186_4, []]], []]]], [Shen.type_cons, [Shen.type_cons, Arg6186_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6186_1, []]], []]]], Arg6186_5], Arg6186_6, (new Shen.Freeze([Arg6186_0, Arg6186_1, Arg6186_2, Arg6186_3, Arg6186_4, Arg6186_5, Arg6186_6, Arg6186_7], function(Arg6188) {
  var Arg6188_0 = Arg6188[0], Arg6188_1 = Arg6188[1], Arg6188_2 = Arg6188[2], Arg6188_3 = Arg6188[3], Arg6188_4 = Arg6188[4], Arg6188_5 = Arg6188[5], Arg6188_6 = Arg6188[6], Arg6188_7 = Arg6188[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6188_2, Arg6188_6, (new Shen.Freeze([Arg6188_2, Arg6188_3, Arg6188_4, Arg6188_5, Arg6188_6, Arg6188_7], function(Arg6190) {
  var Arg6190_0 = Arg6190[0], Arg6190_1 = Arg6190[1], Arg6190_2 = Arg6190[2], Arg6190_3 = Arg6190[3], Arg6190_4 = Arg6190[4], Arg6190_5 = Arg6190[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6190_1, Arg6190_2, Arg6190_3, Arg6190_4, Arg6190_5]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6174_0, Arg6174_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, R2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6174_1, []]]], Arg6174_2, Arg6174_3, (new Shen.Freeze([R2, R0, R1, Arg6174_1, Arg6174_2, Arg6174_3, Arg6174_4], function(Arg6192) {
  var Arg6192_0 = Arg6192[0], Arg6192_1 = Arg6192[1], Arg6192_2 = Arg6192[2], Arg6192_3 = Arg6192[3], Arg6192_4 = Arg6192[4], Arg6192_5 = Arg6192[5], Arg6192_6 = Arg6192[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6192_1, Arg6192_5, (new Shen.Freeze([Arg6192_1, Arg6192_2, Arg6192_3, Arg6192_4, Arg6192_5, Arg6192_6], function(Arg6194) {
  var Arg6194_0 = Arg6194[0], Arg6194_1 = Arg6194[1], Arg6194_2 = Arg6194[2], Arg6194_3 = Arg6194[3], Arg6194_4 = Arg6194[4], Arg6194_5 = Arg6194[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6194_1, Arg6194_2, Arg6194_3, Arg6194_4, Arg6194_5]);});})}))]);});})}))]))
  : false))
  : R1))
  : R1))]);}))}, 5, [], "shen.syntax-check"];





Shen.fns["shen.semantics-check"] = [Shen.type_func, function shen_user_lambda6197(Arg6196) {
  if (Arg6196.length < 5) return [Shen.type_func, shen_user_lambda6197, 5, Arg6196];
  var Arg6196_0 = Arg6196[0], Arg6196_1 = Arg6196[1], Arg6196_2 = Arg6196[2], Arg6196_3 = Arg6196[3], Arg6196_4 = Arg6196[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6196_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.rename-semantics"], [Shen.call(Shen.fns["shen.deref"], [Arg6196_0, Arg6196_3])])]), Arg6196_3, (new Shen.Freeze([Arg6196_0, R0, Arg6196_1, Arg6196_2, Arg6196_3, Arg6196_4], function(Arg6198) {
  var Arg6198_0 = Arg6198[0], Arg6198_1 = Arg6198[1], Arg6198_2 = Arg6198[2], Arg6198_3 = Arg6198[3], Arg6198_4 = Arg6198[4], Arg6198_5 = Arg6198[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6198_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6198_2, []]]], Arg6198_3, Arg6198_4, Arg6198_5]);});})}))]);}))}, 5, [], "shen.semantics-check"];





Shen.fns["shen.rename-semantics"] = [Shen.type_func, function shen_user_lambda6201(Arg6200) {
  if (Arg6200.length < 1) return [Shen.type_func, shen_user_lambda6201, 1, Arg6200];
  var Arg6200_0 = Arg6200[0];
  return ((Shen.is_type(Arg6200_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rename-semantics"], [Arg6200_0[1]]), Shen.call(Shen.fns["shen.rename-semantics"], [Arg6200_0[2]])]
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg6200_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.<-sem"], [Shen.type_cons, Arg6200_0, []]]
  : Arg6200_0))}, 1, [], "shen.rename-semantics"];










Shen.fns["shen.shen"] = [Shen.type_func, function shen_user_lambda7197(Arg7196) {
  if (Arg7196.length < 0) return [Shen.type_func, shen_user_lambda7197, 0, Arg7196];
  return (Shen.call(Shen.fns["shen.credits"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.shen"];





Shen.fns["shen.loop"] = [Shen.type_func, function shen_user_lambda7199(Arg7198) {
  if (Arg7198.length < 0) return [Shen.type_func, shen_user_lambda7199, 0, Arg7198];
  return (Shen.call(Shen.fns["shen.initialise_environment"], []),
  Shen.call(Shen.fns["shen.prompt"], []),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen.read-evaluate-print"], []);}, [Shen.type_func, function shen_user_lambda7201(Arg7200) {
  if (Arg7200.length < 1) return [Shen.type_func, shen_user_lambda7201, 1, Arg7200];
  var Arg7200_0 = Arg7200[0];
  return (function() {
  return Shen.pr(Shen.error_to_string(Arg7200_0), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.loop"];





Shen.fns["version"] = [Shen.type_func, function shen_user_lambda7203(Arg7202) {
  if (Arg7202.length < 1) return [Shen.type_func, shen_user_lambda7203, 1, Arg7202];
  var Arg7202_0 = Arg7202[0];
  return (Shen.globals["*version*"] = Arg7202_0)}, 1, [], "version"];





Shen.fns["reg-kl.shen-toplevel-7205"] = [Shen.type_func, function shen_user_lambda7206(Arg7204) {
  if (Arg7204.length < 0) return [Shen.type_func, shen_user_lambda7206, 0, Arg7204];
  return (function() {
  return Shen.call_tail(Shen.fns["version"], ["version 9.1"]);})}, 0, [], "reg-kl.shen-toplevel-7205"];

Shen.call_toplevel("reg-kl.shen-toplevel-7205")





Shen.fns["shen.credits"] = [Shen.type_func, function shen_user_lambda7208(Arg7207) {
  if (Arg7207.length < 0) return [Shen.type_func, shen_user_lambda7208, 0, Arg7207];
  return (Shen.pr("\x0aShen 2010, copyright (C) 2010 Mark Tarver\x0a", Shen.call(Shen.fns["stoutput"], [])),
  Shen.pr(("www.shenlanguage.org, " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*version*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  Shen.pr(("running under " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*language*"]), (", implementation: " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*implementation*"]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.pr(("\x0aport " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*port*"]), (" ported by " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*porters*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));}))}, 0, [], "shen.credits"];





Shen.fns["shen.initialise_environment"] = [Shen.type_func, function shen_user_lambda7210(Arg7209) {
  if (Arg7209.length < 0) return [Shen.type_func, shen_user_lambda7210, 0, Arg7209];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [[Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*infs*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*process-counter*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*catch*"], [Shen.type_cons, 0, []]]]]]]]]]);})}, 0, [], "shen.initialise_environment"];





Shen.fns["shen.multiple-set"] = [Shen.type_func, function shen_user_lambda7212(Arg7211) {
  if (Arg7211.length < 1) return [Shen.type_func, shen_user_lambda7212, 1, Arg7211];
  var Arg7211_0 = Arg7211[0];
  return ((Shen.empty$question$(Arg7211_0))
  ? []
  : (((Shen.is_type(Arg7211_0, Shen.type_cons) && Shen.is_type(Arg7211_0[2], Shen.type_cons)))
  ? ((Shen.globals[Arg7211_0[1][1]] = Arg7211_0[2][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [Arg7211_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiple-set"]]);})))}, 1, [], "shen.multiple-set"];





Shen.fns["destroy"] = [Shen.type_func, function shen_user_lambda7214(Arg7213) {
  if (Arg7213.length < 1) return [Shen.type_func, shen_user_lambda7214, 1, Arg7213];
  var Arg7213_0 = Arg7213[0];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg7213_0, []]);})}, 1, [], "destroy"];





Shen.fns["reg-kl.shen-toplevel-7216"] = [Shen.type_func, function shen_user_lambda7217(Arg7215) {
  if (Arg7215.length < 0) return [Shen.type_func, shen_user_lambda7217, 0, Arg7215];
  return (Shen.globals["shen.*history*"] = [])}, 0, [], "reg-kl.shen-toplevel-7216"];

Shen.call_toplevel("reg-kl.shen-toplevel-7216")





Shen.fns["shen.read-evaluate-print"] = [Shen.type_func, function shen_user_lambda7219(Arg7218) {
  if (Arg7218.length < 0) return [Shen.type_func, shen_user_lambda7219, 0, Arg7218];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.toplineread"], [])),
  (R1 = (Shen.globals["shen.*history*"])),
  (R0 = Shen.call(Shen.fns["shen.retrieve-from-history-if-needed"], [R0, R1])),
  Shen.call(Shen.fns["shen.update_history"], [R0, R1]),
  (R1 = Shen.call(Shen.fns["fst"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel"], [R1]);}))}, 0, [], "shen.read-evaluate-print"];





Shen.fns["shen.retrieve-from-history-if-needed"] = [Shen.type_func, function shen_user_lambda7221(Arg7220) {
  if (Arg7220.length < 2) return [Shen.type_func, shen_user_lambda7221, 2, Arg7220];
  var Arg7220_0 = Arg7220[0], Arg7220_1 = Arg7220[1];
  var R0;
  return (((Shen.is_type(Arg7220_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7220_0]), Shen.type_cons) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7220_0])[2], Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg7220_0])[2][2]) && (Shen.is_type(Arg7220_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7220_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7220_0])[2][1], Shen.call(Shen.fns["shen.exclamation"], []))))))))))
  ? (Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg7220_1[1]])]),
  Arg7220_1[1])
  : (((Shen.is_type(Arg7220_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7220_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7220_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg7220_0])[2], Arg7220_1])),
  (R0 = Shen.call(Shen.fns["head"], [Shen.call(Shen.fns["shen.find-past-inputs"], [R0, Arg7220_1])])),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [R0])]),
  R0)
  : (((Shen.is_type(Arg7220_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7220_0]), Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg7220_0])[2]) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7220_0])[1], Shen.call(Shen.fns["shen.percent"], [])))))))
  ? (Shen.call(Shen.fns["shen.print-past-inputs"], [[Shen.type_func, function shen_user_lambda7223(Arg7222) {
  if (Arg7222.length < 1) return [Shen.type_func, shen_user_lambda7223, 1, Arg7222];
  var Arg7222_0 = Arg7222[0];
  return true}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg7220_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : (((Shen.is_type(Arg7220_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7220_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7220_0])[1], Shen.call(Shen.fns["shen.percent"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg7220_0])[2], Arg7220_1])),
  Shen.call(Shen.fns["shen.print-past-inputs"], [R0, Shen.call(Shen.fns["reverse"], [Arg7220_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : Arg7220_0))))}, 2, [], "shen.retrieve-from-history-if-needed"];





Shen.fns["shen.percent"] = [Shen.type_func, function shen_user_lambda7225(Arg7224) {
  if (Arg7224.length < 0) return [Shen.type_func, shen_user_lambda7225, 0, Arg7224];
  return 37}, 0, [], "shen.percent"];





Shen.fns["shen.exclamation"] = [Shen.type_func, function shen_user_lambda7227(Arg7226) {
  if (Arg7226.length < 0) return [Shen.type_func, shen_user_lambda7227, 0, Arg7226];
  return 33}, 0, [], "shen.exclamation"];





Shen.fns["shen.prbytes"] = [Shen.type_func, function shen_user_lambda7229(Arg7228) {
  if (Arg7228.length < 1) return [Shen.type_func, shen_user_lambda7229, 1, Arg7228];
  var Arg7228_0 = Arg7228[0];
  return (Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7231(Arg7230) {
  if (Arg7230.length < 1) return [Shen.type_func, shen_user_lambda7231, 1, Arg7230];
  var Arg7230_0 = Arg7230[0];
  return (function() {
  return Shen.pr(Shen.n_$gt$string(Arg7230_0), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined], Arg7228_0]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 1, [], "shen.prbytes"];





Shen.fns["shen.update_history"] = [Shen.type_func, function shen_user_lambda7233(Arg7232) {
  if (Arg7232.length < 2) return [Shen.type_func, shen_user_lambda7233, 2, Arg7232];
  var Arg7232_0 = Arg7232[0], Arg7232_1 = Arg7232[1];
  return (Shen.globals["shen.*history*"] = [Shen.type_cons, Arg7232_0, Arg7232_1])}, 2, [], "shen.update_history"];





Shen.fns["shen.toplineread"] = [Shen.type_func, function shen_user_lambda7235(Arg7234) {
  if (Arg7234.length < 0) return [Shen.type_func, shen_user_lambda7235, 0, Arg7234];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), []]);})}, 0, [], "shen.toplineread"];





Shen.fns["shen.toplineread_loop"] = [Shen.type_func, function shen_user_lambda7237(Arg7236) {
  if (Arg7236.length < 2) return [Shen.type_func, shen_user_lambda7237, 2, Arg7236];
  var Arg7236_0 = Arg7236[0], Arg7236_1 = Arg7236[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7236_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg7236_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg7236_1, [Shen.type_func, function shen_user_lambda7239(Arg7238) {
  if (Arg7238.length < 1) return [Shen.type_func, shen_user_lambda7239, 1, Arg7238];
  var Arg7238_0 = Arg7238[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg7236_1, [Shen.type_cons, Arg7236_0, []]])]);})
  : [Shen.fns['shen.tuple'], R0, Arg7236_1]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg7236_1, [Shen.type_cons, Arg7236_0, []]])]);})))}, 2, [], "shen.toplineread_loop"];





Shen.fns["shen.hat"] = [Shen.type_func, function shen_user_lambda7241(Arg7240) {
  if (Arg7240.length < 0) return [Shen.type_func, shen_user_lambda7241, 0, Arg7240];
  return 94}, 0, [], "shen.hat"];





Shen.fns["shen.newline"] = [Shen.type_func, function shen_user_lambda7243(Arg7242) {
  if (Arg7242.length < 0) return [Shen.type_func, shen_user_lambda7243, 0, Arg7242];
  return 10}, 0, [], "shen.newline"];





Shen.fns["shen.carriage-return"] = [Shen.type_func, function shen_user_lambda7245(Arg7244) {
  if (Arg7244.length < 0) return [Shen.type_func, shen_user_lambda7245, 0, Arg7244];
  return 13}, 0, [], "shen.carriage-return"];





Shen.fns["tc"] = [Shen.type_func, function shen_user_lambda7247(Arg7246) {
  if (Arg7246.length < 1) return [Shen.type_func, shen_user_lambda7247, 1, Arg7246];
  var Arg7246_0 = Arg7246[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7246_0)))
  ? (Shen.globals["shen.*tc*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7246_0)))
  ? (Shen.globals["shen.*tc*"] = false)
  : (function() {
  return Shen.simple_error("tc expects a + or -");})))}, 1, [], "tc"];





Shen.fns["shen.prompt"] = [Shen.type_func, function shen_user_lambda7249(Arg7248) {
  if (Arg7248.length < 0) return [Shen.type_func, shen_user_lambda7249, 0, Arg7248];
  return (((Shen.globals["shen.*tc*"]))
  ? (function() {
  return Shen.pr(("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "+) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));})
  : (function() {
  return Shen.pr(("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "-) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));}))}, 0, [], "shen.prompt"];





Shen.fns["shen.toplevel"] = [Shen.type_func, function shen_user_lambda7251(Arg7250) {
  if (Arg7250.length < 1) return [Shen.type_func, shen_user_lambda7251, 1, Arg7250];
  var Arg7250_0 = Arg7250[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg7250_0, (Shen.globals["shen.*tc*"])]);})}, 1, [], "shen.toplevel"];





Shen.fns["shen.find-past-inputs"] = [Shen.type_func, function shen_user_lambda7253(Arg7252) {
  if (Arg7252.length < 2) return [Shen.type_func, shen_user_lambda7253, 2, Arg7252];
  var Arg7252_0 = Arg7252[0], Arg7252_1 = Arg7252[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.find"], [Arg7252_0, Arg7252_1])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("input not found\x0a");})
  : R0))}, 2, [], "shen.find-past-inputs"];





Shen.fns["shen.make-key"] = [Shen.type_func, function shen_user_lambda7255(Arg7254) {
  if (Arg7254.length < 2) return [Shen.type_func, shen_user_lambda7255, 2, Arg7254];
  var Arg7254_0 = Arg7254[0], Arg7254_1 = Arg7254[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg7254_0, [Shen.type_func, function shen_user_lambda7257(Arg7256) {
  if (Arg7256.length < 1) return [Shen.type_func, shen_user_lambda7257, 1, Arg7256];
  var Arg7256_0 = Arg7256[0];
  return ((Shen.is_type(Arg7256_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg7256_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]])[1]),
  ((Shen.call(Shen.fns["integer?"], [R0]))
  ? [Shen.type_func, function shen_user_lambda7259(Arg7258) {
  if (Arg7258.length < 3) return [Shen.type_func, shen_user_lambda7259, 3, Arg7258];
  var Arg7258_0 = Arg7258[0], Arg7258_1 = Arg7258[1], Arg7258_2 = Arg7258[2];
  return Shen.$eq$(Arg7258_2, Shen.call(Shen.fns["nth"], [(Arg7258_0 + 1), Shen.call(Shen.fns["reverse"], [Arg7258_1])]))}, 3, [R0, Arg7254_1], undefined]
  : [Shen.type_func, function shen_user_lambda7261(Arg7260) {
  if (Arg7260.length < 2) return [Shen.type_func, shen_user_lambda7261, 2, Arg7260];
  var Arg7260_0 = Arg7260[0], Arg7260_1 = Arg7260[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg7260_0, Shen.call(Shen.fns["shen.trim-gubbins"], [Shen.call(Shen.fns["snd"], [Arg7260_1])])]);})}, 2, [Arg7254_0], undefined]))}, 2, [], "shen.make-key"];





Shen.fns["shen.trim-gubbins"] = [Shen.type_func, function shen_user_lambda7263(Arg7262) {
  if (Arg7262.length < 1) return [Shen.type_func, shen_user_lambda7263, 1, Arg7262];
  var Arg7262_0 = Arg7262[0];
  return (((Shen.is_type(Arg7262_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7262_0[1], Shen.call(Shen.fns["shen.space"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7262_0[2]]);})
  : (((Shen.is_type(Arg7262_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7262_0[1], Shen.call(Shen.fns["shen.newline"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7262_0[2]]);})
  : (((Shen.is_type(Arg7262_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7262_0[1], Shen.call(Shen.fns["shen.carriage-return"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7262_0[2]]);})
  : (((Shen.is_type(Arg7262_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7262_0[1], Shen.call(Shen.fns["shen.tab"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7262_0[2]]);})
  : (((Shen.is_type(Arg7262_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7262_0[1], Shen.call(Shen.fns["shen.left-round"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7262_0[2]]);})
  : Arg7262_0)))))}, 1, [], "shen.trim-gubbins"];





Shen.fns["shen.space"] = [Shen.type_func, function shen_user_lambda7265(Arg7264) {
  if (Arg7264.length < 0) return [Shen.type_func, shen_user_lambda7265, 0, Arg7264];
  return 32}, 0, [], "shen.space"];





Shen.fns["shen.tab"] = [Shen.type_func, function shen_user_lambda7267(Arg7266) {
  if (Arg7266.length < 0) return [Shen.type_func, shen_user_lambda7267, 0, Arg7266];
  return 9}, 0, [], "shen.tab"];





Shen.fns["shen.left-round"] = [Shen.type_func, function shen_user_lambda7269(Arg7268) {
  if (Arg7268.length < 0) return [Shen.type_func, shen_user_lambda7269, 0, Arg7268];
  return 40}, 0, [], "shen.left-round"];





Shen.fns["shen.find"] = [Shen.type_func, function shen_user_lambda7271(Arg7270) {
  if (Arg7270.length < 2) return [Shen.type_func, shen_user_lambda7271, 2, Arg7270];
  var Arg7270_0 = Arg7270[0], Arg7270_1 = Arg7270[1];
  return ((Shen.empty$question$(Arg7270_1))
  ? []
  : (((Shen.is_type(Arg7270_1, Shen.type_cons) && Shen.call(Arg7270_0, [Arg7270_1[1]])))
  ? [Shen.type_cons, Arg7270_1[1], Shen.call(Shen.fns["shen.find"], [Arg7270_0, Arg7270_1[2]])]
  : ((Shen.is_type(Arg7270_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.find"], [Arg7270_0, Arg7270_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.find"]]);}))))}, 2, [], "shen.find"];





Shen.fns["shen.prefix?"] = [Shen.type_func, function shen_user_lambda7273(Arg7272) {
  if (Arg7272.length < 2) return [Shen.type_func, shen_user_lambda7273, 2, Arg7272];
  var Arg7272_0 = Arg7272[0], Arg7272_1 = Arg7272[1];
  return ((Shen.empty$question$(Arg7272_0))
  ? true
  : (((Shen.is_type(Arg7272_0, Shen.type_cons) && (Shen.is_type(Arg7272_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7272_1[1], Arg7272_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg7272_0[2], Arg7272_1[2]]);})
  : false))}, 2, [], "shen.prefix?"];





Shen.fns["shen.print-past-inputs"] = [Shen.type_func, function shen_user_lambda7275(Arg7274) {
  if (Arg7274.length < 3) return [Shen.type_func, shen_user_lambda7275, 3, Arg7274];
  var Arg7274_0 = Arg7274[0], Arg7274_1 = Arg7274[1], Arg7274_2 = Arg7274[2];
  return ((Shen.empty$question$(Arg7274_1))
  ? [Shen.type_symbol, "_"]
  : (((Shen.is_type(Arg7274_1, Shen.type_cons) && (!Shen.call(Arg7274_0, [Arg7274_1[1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg7274_0, Arg7274_1[2], (Arg7274_2 + 1)]);})
  : (((Shen.is_type(Arg7274_1, Shen.type_cons) && Shen.is_type(Arg7274_1[1], Shen.fns['shen.tuple'])))
  ? (Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg7274_2, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg7274_1[1]])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg7274_0, Arg7274_1[2], (Arg7274_2 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.print-past-inputs"]]);}))))}, 3, [], "shen.print-past-inputs"];





Shen.fns["shen.toplevel_evaluate"] = [Shen.type_func, function shen_user_lambda7277(Arg7276) {
  if (Arg7276.length < 2) return [Shen.type_func, shen_user_lambda7277, 2, Arg7276];
  var Arg7276_0 = Arg7276[0], Arg7276_1 = Arg7276[1];
  var R0;
  return (((Shen.is_type(Arg7276_0, Shen.type_cons) && (Shen.is_type(Arg7276_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg7276_0[2][1])) && (Shen.is_type(Arg7276_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7276_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7276_1))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg7276_0[1], Arg7276_0[2][2][1]]);})
  : (((Shen.is_type(Arg7276_0, Shen.type_cons) && Shen.is_type(Arg7276_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.toplevel_evaluate"], [[Shen.type_cons, Arg7276_0[1], []], Arg7276_1]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg7276_0[2], Arg7276_1]);}))
  : (((Shen.is_type(Arg7276_0, Shen.type_cons) && (Shen.empty$question$(Arg7276_0[2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7276_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg7276_0[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);})
  : (((Shen.is_type(Arg7276_0, Shen.type_cons) && (Shen.empty$question$(Arg7276_0[2]) && Shen.unwind_tail(Shen.$eq$(false, Arg7276_1)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7276_0[1]])),
  (function() {
  return Shen.call_tail(Shen.fns["print"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.toplevel_evaluate"]]);})))))}, 2, [], "shen.toplevel_evaluate"];





Shen.fns["shen.typecheck-and-evaluate"] = [Shen.type_func, function shen_user_lambda7279(Arg7278) {
  if (Arg7278.length < 2) return [Shen.type_func, shen_user_lambda7279, 2, Arg7278];
  var Arg7278_0 = Arg7278[0], Arg7278_1 = Arg7278[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg7278_0, Arg7278_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (function() {
  return Shen.simple_error("type error\x0a");})
  : ((R1 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7278_0])),
  (R0 = Shen.call(Shen.fns["shen.pretty-type"], [R0])),
  (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [R1, (" : " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], []));}))))}, 2, [], "shen.typecheck-and-evaluate"];





Shen.fns["shen.pretty-type"] = [Shen.type_func, function shen_user_lambda7281(Arg7280) {
  if (Arg7280.length < 1) return [Shen.type_func, shen_user_lambda7281, 1, Arg7280];
  var Arg7280_0 = Arg7280[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [(Shen.globals["shen.*alphabet*"]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg7280_0]), Arg7280_0]);})}, 1, [], "shen.pretty-type"];





Shen.fns["shen.extract-pvars"] = [Shen.type_func, function shen_user_lambda7283(Arg7282) {
  if (Arg7282.length < 1) return [Shen.type_func, shen_user_lambda7283, 1, Arg7282];
  var Arg7282_0 = Arg7282[0];
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg7282_0]))
  ? [Shen.type_cons, Arg7282_0, []]
  : ((Shen.is_type(Arg7282_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract-pvars"], [Arg7282_0[1]]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg7282_0[2]])]);})
  : []))}, 1, [], "shen.extract-pvars"];





Shen.fns["shen.mult_subst"] = [Shen.type_func, function shen_user_lambda7285(Arg7284) {
  if (Arg7284.length < 3) return [Shen.type_func, shen_user_lambda7285, 3, Arg7284];
  var Arg7284_0 = Arg7284[0], Arg7284_1 = Arg7284[1], Arg7284_2 = Arg7284[2];
  return ((Shen.empty$question$(Arg7284_0))
  ? Arg7284_2
  : ((Shen.empty$question$(Arg7284_1))
  ? Arg7284_2
  : (((Shen.is_type(Arg7284_0, Shen.type_cons) && Shen.is_type(Arg7284_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [Arg7284_0[2], Arg7284_1[2], Shen.call(Shen.fns["subst"], [Arg7284_0[1], Arg7284_1[1], Arg7284_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mult_subst"]]);}))))}, 3, [], "shen.mult_subst"];



