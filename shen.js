/*
The License
-----------
The user is free to produce commercial applications with the software, to
distribute these applications in source or binary form, and to charge monies
for them as he sees fit and in concordance with the laws of the land subject
to the following license.

1. The license applies to all the software and all derived software and must
   appear on such.

2. It is illegal to distribute the software without this license attached to
   it and use of the software implies agreement with the license as such. It
   is illegal for anyone who is not the copyright holder to tamper with or
   change the license.

3. Neither the names of Lambda Associates or the copyright holder may be used
   to endorse or promote products built using the software without specific
   prior written permission from the copyright holder.

4. That possession of this license does not confer on the copyright holder any
   special contractual obligation towards the user. That in no event shall the
   copyright holder be liable for any direct, indirect, incidental, special,
   exemplary or consequential damages (including but not limited to
   procurement of substitute goods or services, loss of use, data, or profits;
   or business interruption), however caused and on any theory of liability,
   whether in contract, strict liability or tort (including negligence)
   arising in any way out of the use of the software, even if advised of the
   possibility of such damage.

5. It is permitted for the user to change the software, for the purpose of
   improving performance, correcting an error, or porting to a new platform,
   and distribute the modified version of Shen (hereafter the modified
   version) provided the resulting program conforms in all respects to the
   Shen standard and is issued under that title. The user must make it clear
   with his distribution that he/she is the author of the changes and what
   these changes are and why.

6. Derived versions of this software in whatever form are subject to the same
   restrictions. In particular it is not permitted to make derived copies of
   this software which do not conform to the Shen standard or appear under a
   different title.

7. It is permitted to distribute versions of Shen which incorporate libraries,
   graphics or other facilities which are not part of the Shen standard.

For an explication of this license see
[http://www.lambdassociates.org/News/june11/license.htm] which explains this
license in full.
*/

Shen = {};

Shen.globals = {};

Shen.globals["*language*"] = "Javascript";
Shen.globals["*implementation*"] = "cli";
Shen.globals["*port*"] = Shen.version = "13.0.2";
Shen.globals["*porters*"] = Shen.author = "Ramil Farkhshatov";

Shen.Tag = function(name) {
  this.toString = function() {
    return "#<Shen.Tag " + name + ">";
  }
}

Shen.fail_obj = new Shen.Tag('fail_obj');
Shen.fns = {};

Shen.type_func = new Shen.Tag('func');
Shen.type_symbol = new Shen.Tag('sym');
Shen.type_cons = new Shen.Tag('cons');
Shen.type_stream_in = new Shen.Tag('stream_in');
Shen.type_stream_out = new Shen.Tag('stream_out');
Shen.type_stream_inout = new Shen.Tag('stream_inout');
Shen.type_error = new Shen.Tag('error');

Shen.mkfunction = function(name, nargs, fn) {
  var x = [Shen.type_func, fn, nargs, [], name]
  Shen.fns[name] = x
  return x
}

Shen.defun = function(name, nargs, fn) {
  var partfn = {}
  partfn = (function (args) {
    if (args.length < nargs) return [Shen.type_func, partfn, nargs, args]
    return fn(args)
  })
  return Shen.mkfunction(name, nargs, partfn)
}

Shen.call_tail = function(x, args) {
  var j = 0, nargs = args.length
  for (;;) {
    if (typeof(x) == "function") {
      x = x([args[j++]])
    } else if (x[0] == Shen.type_func) {
      var c = x[3], n = c.length, k = x[2], a
      if (!j && !n && nargs <= k) {
        a = args
        j += nargs
      } else {
        k = (k > n + nargs) ? n + nargs : k
        a = new Array(k)

        for (var i = 0; i < n; ++i)
          a[i] = c[i]
        for (;i < k && j < nargs; ++j, ++i)
          a[i] = args[j]
      }
      x = (x[1])(a)
    } else if (x[0] == Shen.type_symbol) {
      x = Shen.get_fn(x)
    } else
      return Shen.error("Shen.call: Wrong function: '" + x + "'")
    if (j >= nargs)
      return x
    while (typeof(x) == "function")
      x = x()
  }
  return x
}

Shen.call = function(x, args) {
  var x = Shen.call_tail(x, args)
  while (typeof(x) == "function")
    x = x()
  return x
}

Shen.call_by_name = function(x, args) {
  return Shen.call(Shen.fns[x], args)
}

Shen.call_toplevel = function(fn) {
  return Shen.call(fn, [])
}

Shen.unwind_tail = function(x) {
  while(typeof(x) == "function")
    x = x()
  return x
}

Shen.get_fn = function(x) {
  if (typeof(x) == "function")
    Shen.error("passed function into get_fn")
  switch (x[0]) {
  case Shen.type_func: return x
  case Shen.type_symbol:
    var v = Shen.fns[x[1]]
    if (v != undefined)
      return v
    Shen.error("Cannot find '" + x[1] + "'")
    return Shen.fail_obj
  }
  throw new Error("function " + x[1] + " not found")
}

Shen.thaw = function(f) {
  return f.fn(f.vars)
}

Shen.thaw = function(f) {return this.call(f, []);}

Shen.error = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts("# err: " + s + "\n")
  throw new Error(s);
  return Shen.fail_obj
}

Shen.error_to_string = function(s) {
  var stack = s.stack;
  var show = (stack !== undefined);
  show &= Shen.is_true(Shen.globals["shenjs.*show-error-stack*"]);
  return (show) ? ("" + s + " " + stack) : ("" + s);
}

Shen.get_time = function(x) {
  return (new Date()).getTime() / 1000.0;
}

Shen.simple_error = Shen.error;
Shen.log_eq = false;

Shen.trap_error = function(fn, handler) {
  try {
    return Shen.call(fn, []);
  } catch (e) {
    return Shen.call(handler, [e]);
  }
}

Shen.notrap_error = function(fn, handler) {
  return fn();
}

Shen.equal_boolean = function(b, x) {
  return ((x instanceof Array)
          && x[0] == Shen.type_symbol
          && ((x[1] == "true" && b === true)
              || (x[1] == "false" && b === false)));
}

Shen.equal_function = function(f, x) {
  return (x[0] == Shen.type_symbol && f[0] == Shen.type_func && x[1] == f[4])
}

Shen.is_equal = function(x, y) {
  if (x === y)
    return true
  var tx = typeof(x), ty = typeof(y)
  if (tx != ty)
    return ((tx == "boolean" && Shen.equal_boolean(x, y))
            || (ty == "boolean" && Shen.equal_boolean(y, x)))
  switch (tx) {
  case "number":
  case "boolean":
  case "function":
  case "string":
    return x == y;

  case "object":
    if (x == y)
      return true

    if ((x instanceof Array) ^ (y instanceof Array))
      return false

    if (Shen.equal_function(x, y) || Shen.equal_function(y, x))
      return true
    if (x.length != y.length)
      return false
    if (x.length == 0)
      return true
    if (x == Shen.fail_obj && y == Shen.fail_obj)
      return true
    if (x[0] != y[0])
      return false
    switch (x[0]) {
    case Shen.type_func:
     if (x[1] != y[1] || x[2] != y[2])
        return false
      var n = x[3].length
      if (n != y[3].length)
        return false
      for (var i = 0; i < n; ++i)
        if (x[3][i] != y[3][i])
          return false
      return true
    case Shen.type_symbol: return x[1] == y[1];
    case Shen.type_cons:
      var r = Shen.$eq$(x[1], y[1])
      while (typeof(r) == "function")
        r = r()
      if (!r)
        return false
      return (function() {
        var r = Shen.$eq$(x[2], y[2])
        while (typeof(r) == "function")
          r = r()
        return r
      });
    case Shen.type_stream_out:
    case Shen.type_stream_in: return x[1] == y[1] && x[2] == y[2];
    default:
      for (var i = 1; i < x.length; ++i) {
        var r = Shen.$eq$(x[i], y[i])
        while (typeof(r) == "function")
          r = r()
        if (!r)
          return false;
      }
      return true;
    }
    break;
  default: return false;
  }
}

Shen.$eq$ = Shen.is_equal;

Shen.empty$question$ = function(x) {
  return ((x instanceof Array) && !x.length)
}

Shen.is_type = function(x, type) {
  if (type == Shen.type_symbol && (x === true || x === false))
    return true
  return ((x instanceof Array) && x[0] == type)
}

Shen.boolean$question$ = function(x) {
  return (typeof(x) == "boolean") || (Shen.is_type(x, Shen.type_symbol)
                                      && (x[1] == "true" || x[1] == "false"))
}

Shen.vector$question$ = function(x) {
  return ((x instanceof Array) && x[0] > 0)
}

Shen.absvector$question$ = function(x) {
  return ((x instanceof Array) && x.length > 0
          && (!(x[0] instanceof Shen.Tag)))
}

Shen.absvector = function(n) {
  var ret = new Array(n)
  for (var i = 0; i < n; ++i)
    ret[i] = Shen.fail_obj
  return ret
}

Shen.dbg_princ = function(s, x) {
  dbg_print(" " + s + x)
  return x
}

Shen.dbg_print = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts(s + "\n")
}

Shen.is_true = function(x) {
  return x != false || ((x instanceof Array)
                        && (x[0] == Shen.type_symbol)
                        && (x[1] != "false"))
}

Shen.absvector_ref = function(x, i) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  return x[i]
}

Shen.absvector_set = function(x, i, v) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  x[i] = v
  return x
}

Shen.value = function(x) {
  var y = Shen.globals[s[1]]
  if (y === undefined)
    Shen.error("The variable " + x + " is unbound.")
  else
    return y
}

Shen.vector = function(n) {
  var r = new Array(n + 1)
  r[0] = n
  for (var i = 1; i <= n; ++i)
    r[i] = Shen.fail_obj
  return r
}

Shen.esc = function(x) {
  var ret = ""
  for (var i = 0; i < x.length; ++i)
    switch (x[i]) {
      case '"': ret += '\\"'; break;
      default: ret += x[i]; break
    }
  return ret
}

Shen.str = function(x) {
  var err = " is not an atom in Shen; str cannot print it to a string."
  switch (typeof(x)) {
    case "string": return "\"" + Shen.esc(x) + "\""
    case "number":
    case "boolean": return "" + x
    case "function":
      return "#<function>"
    case "object":
      if (x == Shen.fail_obj)
        return "fail!"
      if (x instanceof Array) {
        if (x.length <= 0) {
          Shen.error("[]" + err)
          return Shen.fail_obj
        }
        switch (x[0]) {
          case Shen.type_symbol: return x[1]
          case Shen.type_func:
            if (!x[3].length && x[4] != undefined)
              return x[4]
            if (Shen.is_true(Shen.globals['shenjs.*show-func-js*']))
              Shen.io.puts("\n func: " + x + "\n\n")
            return (x[3].length == 0) ? "#<function>" : "#<closure>"
        }
      }
  }
  Shen.error([x + err])
  return Shen.fail_obj
}

Shen.intern = function(x) {
  switch (x) {
  case "true": return true
  case "false": return false
  default: return [Shen.type_symbol, x]
  }
}

Shen.tlstr = function(x) {
  if (x == "")
    return [Shen.type_symbol, "shen_eos"]
  return x.substring(1, x.length)
}

Shen.n_$gt$string = function(x) {
  return String.fromCharCode(x)
}

Shen.string_$gt$n = function(x) {
  return x.charCodeAt(0)
}

Shen.eval_kl = function(x) {
  var log = false
  if (Shen.is_true(Shen.globals['shenjs.*show-eval-js*']))
    log = true
  if (log)
    Shen.io.puts("# eval-kl[KL]: " + "\n" + Shen.shenstr(x) + "\n\n")
  var js = Shen.call_by_name("js-from-kl", [x])
  if (log)
    Shen.io.puts("eval-kl[JS]:\n" + js + "\n\n")
  var ret = eval(js)
  if (log)
    Shen.io.puts("eval-kl => '" + ret + "'\n\n")
  if (ret === undefined)
    Shen.error("evaluated '" + js + "' to undefined")
  return ret
}

Shen.eval_string = function(str) {
  var x = Shen.call_by_name("read-from-string", [str])
  if (Shen.empty$question$(x))
    return []
  if (!Shen.is_type(x, Shen.type_cons)) {
    Shen.error("Broken read-from-string return value")
    return Shen.fail_obj
  }
  var js = Shen.call_by_name("js-from-shen", [x[1]])
  return eval(js)
}

Shen.mkfunction("shenjs.load", 1, function self(x) {
  if (x.length < 1) return [Shen.type_func, self, 1, x]
  return (function() {
    load(x)
    return []
  })
})

Shen.Utf8_reader = function (str) {
  this.str = (str == null) ? "" : str
  this.strpos = 0
  this.bytes = Array(6)
  this.bytepos = 0
  this.nbytes = 0
  this.read_byte = function () {
    if (this.bytepos < this.nbytes)
      return this.bytes[this.bytepos++]
    if (this.strpos >= this.str.length)
      return -1
    var c = this.str.charCodeAt(this.strpos++)
    this.bytepos = 0
    this.nbytes = 0
    if (c <= 0x7f)
      return c
    if (c <= 0x7ff) {
      var n = 1
      var c0 = (c >> 6) | 192
    } else if (c <= 0xffff) {
      var n = 2
      var c0 = (c >> 12) | 224
    } else if (c <= 0x1fffff) {
      var n = 3
      var c0 = (c >> 18) | 240
    } else if (c <= 0x3ffffff) {
      var n = 4
      var c0 = (c >> 24) | 248
    } else if (c <= 0x7fffffff) {
      var n = 5
      var c0 = (c >> 30) | 252
    } else {
      return Shen.error('Character ' + c + ' cannot be coded to UTF-8')
    }
    this.nbytes = n
    var shift = (n - 1) * 6
    for (i = 0; i < n; ++i, shift -= 6)
      this.bytes[i] = ((c >> shift) & 63) | 128
    return c0
  }
}

Shen.Utf8_writer = function(char_fn) {
  this.nbytes = 0
  this.char = 0
  this.bytespos = 0
  this.write_byte = function(byte) {
    if (!(byte & 0x80)) {
      char_fn(byte)
      this.bytespos = 0
    } else if ((byte & 224) == 192) {
      this.char = byte & 31
      this.nbytes = 2
      this.bytespos = 1
    } else if ((byte & 240) == 224) {
      this.char = byte & 15
      this.nbytes = 3
      this.bytespos = 1
    } else if ((byte & 248) == 240) {
      this.char = byte & 7
      this.nbytes = 4
      this.bytespos = 1
    } else if ((byte & 252) == 248) {
      this.char = byte & 3
      this.nbytes = 5
      this.bytespos = 1
    } else if ((byte & 254) == 252) {
      this.char = byte & 1
      this.nbytes = 6
      this.bytespos = 1
    } else {
      this.char = (this.char << 6) | (byte & 0x7f)
      this.bytespos++
      if (this.bytespos >= this.nbytes) {
        char_fn(this.char)
        this.bytespos = 0
        this.nbytes = 0
      }
    }
  }
}

Shen.str_from_utf8 = function(s) {
  var ret = ""
  function emit(x) {ret += String.fromCharCode(x)}
  var w = new Shen.Utf8_writer(emit)
  var n = s.length
  for (var i = 0; i < n; ++i)
    w.write_byte(s[i])
  return ret
}

Shen.file_instream_get_buf = function(stream, buf, pos) {
  if (buf.byteLength <= pos) {
    stream[1] = (function() {return -1})
    return -1
  }
  stream[1] = (function() {
    return Shen.file_instream_get_buf(stream, buf, pos + 1)
  })
  return buf[pos]
}

Shen.read_byte = function(stream) {
 switch (stream[0]) {
    case Shen.type_stream_in: return stream[1]()
    case Shen.type_stream_inout: return Shen.read_byte(stream[1])
    default:
      Shen.error("read-byte: Wrong stream type.")
      return -1;
  }
}

Shen.write_byte = function(byte, stream) {
 switch (stream[0]) {
    case Shen.type_stream_out: stream[1](byte); break;
    case Shen.type_stream_inout: Shen.write_byte(byte, stream[2]); break;
    default: Shen.error("write-byte: Wrong stream type.")
  }
  return []
}

Shen.close = function(stream) {
  switch (stream[0]) {
    case Shen.type_stream_in:
      stream[2]()
      stream[1] = (function() {return -1});
      break;
    case Shen.type_stream_out:
      stream[2]()
      stream[1] = (function(_) {return []});
      break;
    case Shen.type_stream_inout:
      Shen.close(stream[1])
      Shen.close(stream[2])
      break;
  }
  return []
}

Shen.open = function() {
  return this.io.open.apply(this.io, arguments)
}

Shen.repl_read_byte = function (stream, strbuf) {
  var x = strbuf.read_byte()
  if (x >= 0)
    return x
  var str = Shen.io.gets()
  if (str == null) {
    quit()
    return -1
  }
  strbuf = new Shen.Utf8_reader(str + '\n')
  stream[1] = (function() {
    return Shen.repl_read_byte(stream, strbuf)
  })
  return stream[1]()
}

Shen.pr = function(s, stream) {
  for (i = 0; i < s.length; ++i)
    Shen.write_byte(s.charCodeAt(i), stream)
  return s
}

Shen.shenstr = function(x) {
  return Shen.call_by_name("shen.app", [x, "", [Shen.type_symbol, "shen.s"]])
}

Shen.mkfunction("shenjs.exit", 1, function self(x) {quit()})
Shen.globals["js.skip-internals"] = true

Shen.globals["shenjs.*show-error-js*"] = true
Shen.globals["shenjs.*show-error-stack*"] = false
Shen.globals["shenjs.*show-eval-js*"] = false
Shen.globals["shenjs.*show-func-js*"] = false
Shen.globals["shenjs.*dbg-js*"] = false
Shen.globals["*home-directory*"] = ""

/* dummy functions to bypass defstruct's declarations */
Shen.mkfunction("shen.process-datatype", 2, function(_) {return []})
Shen.mkfunction("compile", 3, function(_) {return []})
Shen.mkfunction("declare", 2, function(_) {return []})

Shen.console_io = {
  open: function(name, dir) {
    var filename = Shen.globals["*home-directory*"] + name
    if (dir[1] == "in") {
      try {
        var buf = readbuffer(filename)
      } catch(e) {
        try {
          var buf = read(filename, 'binary')
        } catch (e) {
          Shen.error(e)
          return Shen.fail_obj
        }
      }
      var stream = [Shen.type_stream_in, null, function(){}]
      if (buf.byteLength !== undefined) {
        stream[1] = (function() {
          return Shen.file_instream_get_buf(stream, buf, 0)
        })
      } else {
        var strbuf = new Shen.Utf8_reader(buf)
        stream[1] = (function() {return strbuf.read_byte()})
      }
      return stream
    } else if (dir[1] == "out") {
      Shen.error("Writing files is not supported in cli interpreter")
      return Shen.fail_obj
    }
    Shen.error("Unsupported open flags")
    return Shen.fail_obj
  },

  init: function() {
    try {
      this.puts = putstr;
    } catch (e) {
      this.puts = write;
    }
    this.gets = readline;
    var writer = new Shen.Utf8_writer(function(char) {
       Shen.io.puts(String.fromCharCode(char))
    })
    var fout = [Shen.type_stream_out,
                function(byte) {return writer.write_byte(byte)},
                function() {}]
    Shen.globals["*stoutput*"] = fout
    
    var fin = [Shen.type_stream_in, null, quit]
    var strbuf = new Shen.Utf8_reader(null)
    fin[1] = (function() {
      return Shen.repl_read_byte(fin, strbuf)
    })
    
    var finout = [Shen.type_stream_inout, fin, fout]
    Shen.globals["*stinput*"] = finout
  }
}

Shen.init = function(conf) {
  Shen.io = conf.io
  Shen.io.init()
  function assert_io(func) {
    if (Shen.io[func] === undefined)
      throw new Error("Shen: IO has no method " + func)
  }
  assert_io('gets')
  assert_io('puts')
  assert_io('open')
  if (conf.start_repl)
    Shen.call_by_name("shen.shen", [])
}

Shen.console_repl = function () {
  Shen.init({io: Shen.console_io, start_repl: true});
}

Shen.xstr_list = function(x) {
  var lst = [];
  while (!this.empty$question$(x)) {
    lst.push(this.xstr(x[1]));
    x = x[2];
  }
  return "[" + lst.join(" ") + "]";
}

Shen.xstr = function(x) {
  switch (typeof(x)) {
    case 'string': return x;
    case 'number': return '' + x;
    case 'boolean': return '' + x;
  }
  if (this.is_type(x, this.type_symbol))
    return x[1];
  if (this.is_type(x, this.type_cons))
    return this.xstr_list(x);
  if (this.empty$question$(x))
    return "[]";
  function str(x) {
    return Shen.xstr(x);
  }
  if (this.vector$question$(x))
    return "<" + x.map(str).join(" ") + ">";
  if (x instanceof Array)
    return "<<" + x.map(str).join(" ") + ">>";
  return '' + x;
}

Shen.list = function(x) {
  var ret = [];
  for (var i = x.length - 1; i >= 0; --i)
    ret = [Shen.type_cons, x[i], ret];
  return ret;
}

try {
  module.exports = Shen
} catch (e) {}


Shen.fns["hd"] = [Shen.type_func, function shen_user_lambda6218(Arg6217) {
  if (Arg6217.length < 1) return [Shen.type_func, shen_user_lambda6218, 1, Arg6217];
  var Arg6217_0 = Arg6217[0];
  return Arg6217_0[1]}, 1, [], "hd"];






Shen.fns["tl"] = [Shen.type_func, function shen_user_lambda6220(Arg6219) {
  if (Arg6219.length < 1) return [Shen.type_func, shen_user_lambda6220, 1, Arg6219];
  var Arg6219_0 = Arg6219[0];
  return Arg6219_0[2]}, 1, [], "tl"];






Shen.fns["not"] = [Shen.type_func, function shen_user_lambda6222(Arg6221) {
  if (Arg6221.length < 1) return [Shen.type_func, shen_user_lambda6222, 1, Arg6221];
  var Arg6221_0 = Arg6221[0];
  return (!Arg6221_0)}, 1, [], "not"];






Shen.fns["thaw"] = [Shen.type_func, function shen_user_lambda6224(Arg6223) {
  if (Arg6223.length < 1) return [Shen.type_func, shen_user_lambda6224, 1, Arg6223];
  var Arg6223_0 = Arg6223[0];
  return Shen.thaw(Arg6223_0)}, 1, [], "thaw"];






Shen.fns["string?"] = [Shen.type_func, function shen_user_lambda6226(Arg6225) {
  if (Arg6225.length < 1) return [Shen.type_func, shen_user_lambda6226, 1, Arg6225];
  var Arg6225_0 = Arg6225[0];
  return (typeof(Arg6225_0) == 'string')}, 1, [], "string?"];






Shen.fns["number?"] = [Shen.type_func, function shen_user_lambda6228(Arg6227) {
  if (Arg6227.length < 1) return [Shen.type_func, shen_user_lambda6228, 1, Arg6227];
  var Arg6227_0 = Arg6227[0];
  return (typeof(Arg6227_0) == 'number')}, 1, [], "number?"];






Shen.fns["symbol?"] = [Shen.type_func, function shen_user_lambda6230(Arg6229) {
  if (Arg6229.length < 1) return [Shen.type_func, shen_user_lambda6230, 1, Arg6229];
  var Arg6229_0 = Arg6229[0];
  return Shen.is_type(Arg6229_0, Shen.type_symbol)}, 1, [], "symbol?"];






Shen.fns["cons?"] = [Shen.type_func, function shen_user_lambda6232(Arg6231) {
  if (Arg6231.length < 1) return [Shen.type_func, shen_user_lambda6232, 1, Arg6231];
  var Arg6231_0 = Arg6231[0];
  return Shen.is_type(Arg6231_0, Shen.type_cons)}, 1, [], "cons?"];






Shen.fns["vector?"] = [Shen.type_func, function shen_user_lambda6234(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6234, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  return (function() {
  return Shen.vector$question$(Arg6233_0);})}, 1, [], "vector?"];






Shen.fns["absvector?"] = [Shen.type_func, function shen_user_lambda6236(Arg6235) {
  if (Arg6235.length < 1) return [Shen.type_func, shen_user_lambda6236, 1, Arg6235];
  var Arg6235_0 = Arg6235[0];
  return (function() {
  return Shen.absvector$question$(Arg6235_0);})}, 1, [], "absvector?"];






Shen.fns["value"] = [Shen.type_func, function shen_user_lambda6238(Arg6237) {
  if (Arg6237.length < 1) return [Shen.type_func, shen_user_lambda6238, 1, Arg6237];
  var Arg6237_0 = Arg6237[0];
  return (Shen.globals[Arg6237_0[1]])}, 1, [], "value"];






Shen.fns["intern"] = [Shen.type_func, function shen_user_lambda6240(Arg6239) {
  if (Arg6239.length < 1) return [Shen.type_func, shen_user_lambda6240, 1, Arg6239];
  var Arg6239_0 = Arg6239[0];
  return (function() {
  return Shen.intern(Arg6239_0);})}, 1, [], "intern"];






Shen.fns["vector"] = [Shen.type_func, function shen_user_lambda6242(Arg6241) {
  if (Arg6241.length < 1) return [Shen.type_func, shen_user_lambda6242, 1, Arg6241];
  var Arg6241_0 = Arg6241[0];
  return (function() {
  return Shen.vector(Arg6241_0);})}, 1, [], "vector"];






Shen.fns["read-byte"] = [Shen.type_func, function shen_user_lambda6244(Arg6243) {
  if (Arg6243.length < 1) return [Shen.type_func, shen_user_lambda6244, 1, Arg6243];
  var Arg6243_0 = Arg6243[0];
  return (function() {
  return Shen.read_byte(Arg6243_0);})}, 1, [], "read-byte"];






Shen.fns["close"] = [Shen.type_func, function shen_user_lambda6246(Arg6245) {
  if (Arg6245.length < 1) return [Shen.type_func, shen_user_lambda6246, 1, Arg6245];
  var Arg6245_0 = Arg6245[0];
  return (function() {
  return Shen.close(Arg6245_0);})}, 1, [], "close"];






Shen.fns["absvector"] = [Shen.type_func, function shen_user_lambda6248(Arg6247) {
  if (Arg6247.length < 1) return [Shen.type_func, shen_user_lambda6248, 1, Arg6247];
  var Arg6247_0 = Arg6247[0];
  return (function() {
  return Shen.absvector(Arg6247_0);})}, 1, [], "absvector"];






Shen.fns["str"] = [Shen.type_func, function shen_user_lambda6250(Arg6249) {
  if (Arg6249.length < 1) return [Shen.type_func, shen_user_lambda6250, 1, Arg6249];
  var Arg6249_0 = Arg6249[0];
  return (function() {
  return Shen.str(Arg6249_0);})}, 1, [], "str"];






Shen.fns["tlstr"] = [Shen.type_func, function shen_user_lambda6252(Arg6251) {
  if (Arg6251.length < 1) return [Shen.type_func, shen_user_lambda6252, 1, Arg6251];
  var Arg6251_0 = Arg6251[0];
  return (function() {
  return Shen.tlstr(Arg6251_0);})}, 1, [], "tlstr"];






Shen.fns["n->string"] = [Shen.type_func, function shen_user_lambda6254(Arg6253) {
  if (Arg6253.length < 1) return [Shen.type_func, shen_user_lambda6254, 1, Arg6253];
  var Arg6253_0 = Arg6253[0];
  return (function() {
  return Shen.n_$gt$string(Arg6253_0);})}, 1, [], "n->string"];






Shen.fns["string->n"] = [Shen.type_func, function shen_user_lambda6256(Arg6255) {
  if (Arg6255.length < 1) return [Shen.type_func, shen_user_lambda6256, 1, Arg6255];
  var Arg6255_0 = Arg6255[0];
  return (function() {
  return Shen.string_$gt$n(Arg6255_0);})}, 1, [], "string->n"];






Shen.fns["empty?"] = [Shen.type_func, function shen_user_lambda6258(Arg6257) {
  if (Arg6257.length < 1) return [Shen.type_func, shen_user_lambda6258, 1, Arg6257];
  var Arg6257_0 = Arg6257[0];
  return (function() {
  return Shen.empty$question$(Arg6257_0);})}, 1, [], "empty?"];






Shen.fns["get-time"] = [Shen.type_func, function shen_user_lambda6260(Arg6259) {
  if (Arg6259.length < 1) return [Shen.type_func, shen_user_lambda6260, 1, Arg6259];
  var Arg6259_0 = Arg6259[0];
  return (function() {
  return Shen.get_time(Arg6259_0);})}, 1, [], "get-time"];






Shen.fns["error"] = [Shen.type_func, function shen_user_lambda6262(Arg6261) {
  if (Arg6261.length < 1) return [Shen.type_func, shen_user_lambda6262, 1, Arg6261];
  var Arg6261_0 = Arg6261[0];
  return (function() {
  return Shen.error(Arg6261_0);})}, 1, [], "error"];






Shen.fns["simple-error"] = [Shen.type_func, function shen_user_lambda6264(Arg6263) {
  if (Arg6263.length < 1) return [Shen.type_func, shen_user_lambda6264, 1, Arg6263];
  var Arg6263_0 = Arg6263[0];
  return (function() {
  return Shen.simple_error(Arg6263_0);})}, 1, [], "simple-error"];






Shen.fns["eval-kl"] = [Shen.type_func, function shen_user_lambda6266(Arg6265) {
  if (Arg6265.length < 1) return [Shen.type_func, shen_user_lambda6266, 1, Arg6265];
  var Arg6265_0 = Arg6265[0];
  return (function() {
  return Shen.eval_kl(Arg6265_0);})}, 1, [], "eval-kl"];






Shen.fns["error-to-string"] = [Shen.type_func, function shen_user_lambda6268(Arg6267) {
  if (Arg6267.length < 1) return [Shen.type_func, shen_user_lambda6268, 1, Arg6267];
  var Arg6267_0 = Arg6267[0];
  return (function() {
  return Shen.error_to_string(Arg6267_0);})}, 1, [], "error-to-string"];






Shen.fns["js.call-js"] = [Shen.type_func, function shen_user_lambda6270(Arg6269) {
  if (Arg6269.length < 1) return [Shen.type_func, shen_user_lambda6270, 1, Arg6269];
  var Arg6269_0 = Arg6269[0];
  return (function() {
  return Shen.js$dot$call_js(Arg6269_0);})}, 1, [], "js.call-js"];






Shen.fns["+"] = [Shen.type_func, function shen_user_lambda6272(Arg6271) {
  if (Arg6271.length < 2) return [Shen.type_func, shen_user_lambda6272, 2, Arg6271];
  var Arg6271_0 = Arg6271[0], Arg6271_1 = Arg6271[1];
  return (Arg6271_0 + Arg6271_1)}, 2, [], "+"];






Shen.fns["-"] = [Shen.type_func, function shen_user_lambda6274(Arg6273) {
  if (Arg6273.length < 2) return [Shen.type_func, shen_user_lambda6274, 2, Arg6273];
  var Arg6273_0 = Arg6273[0], Arg6273_1 = Arg6273[1];
  return (Arg6273_0 - Arg6273_1)}, 2, [], "-"];






Shen.fns["*"] = [Shen.type_func, function shen_user_lambda6276(Arg6275) {
  if (Arg6275.length < 2) return [Shen.type_func, shen_user_lambda6276, 2, Arg6275];
  var Arg6275_0 = Arg6275[0], Arg6275_1 = Arg6275[1];
  return (Arg6275_0 * Arg6275_1)}, 2, [], "*"];






Shen.fns["/"] = [Shen.type_func, function shen_user_lambda6278(Arg6277) {
  if (Arg6277.length < 2) return [Shen.type_func, shen_user_lambda6278, 2, Arg6277];
  var Arg6277_0 = Arg6277[0], Arg6277_1 = Arg6277[1];
  return (Arg6277_0 / Arg6277_1)}, 2, [], "/"];






Shen.fns["and"] = [Shen.type_func, function shen_user_lambda6280(Arg6279) {
  if (Arg6279.length < 2) return [Shen.type_func, shen_user_lambda6280, 2, Arg6279];
  var Arg6279_0 = Arg6279[0], Arg6279_1 = Arg6279[1];
  return (Arg6279_0 && Arg6279_1)}, 2, [], "and"];






Shen.fns["or"] = [Shen.type_func, function shen_user_lambda6282(Arg6281) {
  if (Arg6281.length < 2) return [Shen.type_func, shen_user_lambda6282, 2, Arg6281];
  var Arg6281_0 = Arg6281[0], Arg6281_1 = Arg6281[1];
  return (Arg6281_0 || Arg6281_1)}, 2, [], "or"];






Shen.fns["="] = [Shen.type_func, function shen_user_lambda6284(Arg6283) {
  if (Arg6283.length < 2) return [Shen.type_func, shen_user_lambda6284, 2, Arg6283];
  var Arg6283_0 = Arg6283[0], Arg6283_1 = Arg6283[1];
  return Shen.$eq$(Arg6283_0, Arg6283_1)}, 2, [], "="];






Shen.fns[">"] = [Shen.type_func, function shen_user_lambda6286(Arg6285) {
  if (Arg6285.length < 2) return [Shen.type_func, shen_user_lambda6286, 2, Arg6285];
  var Arg6285_0 = Arg6285[0], Arg6285_1 = Arg6285[1];
  return (Arg6285_0 > Arg6285_1)}, 2, [], ">"];






Shen.fns[">="] = [Shen.type_func, function shen_user_lambda6288(Arg6287) {
  if (Arg6287.length < 2) return [Shen.type_func, shen_user_lambda6288, 2, Arg6287];
  var Arg6287_0 = Arg6287[0], Arg6287_1 = Arg6287[1];
  return (Arg6287_0 >= Arg6287_1)}, 2, [], ">="];






Shen.fns["<"] = [Shen.type_func, function shen_user_lambda6290(Arg6289) {
  if (Arg6289.length < 2) return [Shen.type_func, shen_user_lambda6290, 2, Arg6289];
  var Arg6289_0 = Arg6289[0], Arg6289_1 = Arg6289[1];
  return (Arg6289_0 < Arg6289_1)}, 2, [], "<"];






Shen.fns["<="] = [Shen.type_func, function shen_user_lambda6292(Arg6291) {
  if (Arg6291.length < 2) return [Shen.type_func, shen_user_lambda6292, 2, Arg6291];
  var Arg6291_0 = Arg6291[0], Arg6291_1 = Arg6291[1];
  return (Arg6291_0 <= Arg6291_1)}, 2, [], "<="];






Shen.fns["cons"] = [Shen.type_func, function shen_user_lambda6294(Arg6293) {
  if (Arg6293.length < 2) return [Shen.type_func, shen_user_lambda6294, 2, Arg6293];
  var Arg6293_0 = Arg6293[0], Arg6293_1 = Arg6293[1];
  return [Shen.type_cons, Arg6293_0, Arg6293_1]}, 2, [], "cons"];






Shen.fns["set"] = [Shen.type_func, function shen_user_lambda6296(Arg6295) {
  if (Arg6295.length < 2) return [Shen.type_func, shen_user_lambda6296, 2, Arg6295];
  var Arg6295_0 = Arg6295[0], Arg6295_1 = Arg6295[1];
  return (Shen.globals[Arg6295_0[1]] = Arg6295_1)}, 2, [], "set"];






Shen.fns["<-address"] = [Shen.type_func, function shen_user_lambda6298(Arg6297) {
  if (Arg6297.length < 2) return [Shen.type_func, shen_user_lambda6298, 2, Arg6297];
  var Arg6297_0 = Arg6297[0], Arg6297_1 = Arg6297[1];
  return Shen.absvector_ref(Arg6297_0, Arg6297_1)}, 2, [], "<-address"];






Shen.fns["cn"] = [Shen.type_func, function shen_user_lambda6300(Arg6299) {
  if (Arg6299.length < 2) return [Shen.type_func, shen_user_lambda6300, 2, Arg6299];
  var Arg6299_0 = Arg6299[0], Arg6299_1 = Arg6299[1];
  return (Arg6299_0 + Arg6299_1)}, 2, [], "cn"];






Shen.fns["pos"] = [Shen.type_func, function shen_user_lambda6302(Arg6301) {
  if (Arg6301.length < 2) return [Shen.type_func, shen_user_lambda6302, 2, Arg6301];
  var Arg6301_0 = Arg6301[0], Arg6301_1 = Arg6301[1];
  return Arg6301_0[Arg6301_1]}, 2, [], "pos"];






Shen.fns["@p"] = [Shen.type_func, function shen_user_lambda6304(Arg6303) {
  if (Arg6303.length < 2) return [Shen.type_func, shen_user_lambda6304, 2, Arg6303];
  var Arg6303_0 = Arg6303[0], Arg6303_1 = Arg6303[1];
  return [Shen.fns['shen.tuple'], Arg6303_0, Arg6303_1]}, 2, [], "@p"];






Shen.fns["open"] = [Shen.type_func, function shen_user_lambda6306(Arg6305) {
  if (Arg6305.length < 2) return [Shen.type_func, shen_user_lambda6306, 2, Arg6305];
  var Arg6305_0 = Arg6305[0], Arg6305_1 = Arg6305[1];
  return (function() {
  return Shen.open(Arg6305_0, Arg6305_1);})}, 2, [], "open"];






Shen.fns["write-byte"] = [Shen.type_func, function shen_user_lambda6308(Arg6307) {
  if (Arg6307.length < 2) return [Shen.type_func, shen_user_lambda6308, 2, Arg6307];
  var Arg6307_0 = Arg6307[0], Arg6307_1 = Arg6307[1];
  return (function() {
  return Shen.write_byte(Arg6307_0, Arg6307_1);})}, 2, [], "write-byte"];






Shen.fns["address->"] = [Shen.type_func, function shen_user_lambda6310(Arg6309) {
  if (Arg6309.length < 3) return [Shen.type_func, shen_user_lambda6310, 3, Arg6309];
  var Arg6309_0 = Arg6309[0], Arg6309_1 = Arg6309[1], Arg6309_2 = Arg6309[2];
  return Shen.absvector_set(Arg6309_0, Arg6309_1, Arg6309_2)}, 3, [], "address->"];






Shen.call_toplevel(function js$dot$shen_js_toplevel4292(Arg4290) {
  if (Arg4290.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4292, 0, Arg4290];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "regkl.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})});




Shen.fns["regkl.mk-context"] = [Shen.type_func, function shen_user_lambda4296(Arg4295) {
  if (Arg4295.length < 2) return [Shen.type_func, shen_user_lambda4296, 2, Arg4295];
  var Arg4295_0 = Arg4295[0], Arg4295_1 = Arg4295[1];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg4295_0, Shen.call(Shen.fns["@v"], [Arg4295_1, Shen.vector(0)])]);})}, 2, [], "regkl.mk-context"];





Shen.fns["regkl.context-nregs->"] = [Shen.type_func, function shen_user_lambda4300(Arg4299) {
  if (Arg4299.length < 2) return [Shen.type_func, shen_user_lambda4300, 2, Arg4299];
  var Arg4299_0 = Arg4299[0], Arg4299_1 = Arg4299[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4299_0, 2, Arg4299_1]);})}, 2, [], "regkl.context-nregs->"];





Shen.fns["regkl.context-toplevel->"] = [Shen.type_func, function shen_user_lambda4304(Arg4303) {
  if (Arg4303.length < 2) return [Shen.type_func, shen_user_lambda4304, 2, Arg4303];
  var Arg4303_0 = Arg4303[0], Arg4303_1 = Arg4303[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4303_0, 1, Arg4303_1]);})}, 2, [], "regkl.context-toplevel->"];





Shen.fns["regkl.context-nregs"] = [Shen.type_func, function shen_user_lambda4307(Arg4306) {
  if (Arg4306.length < 1) return [Shen.type_func, shen_user_lambda4307, 1, Arg4306];
  var Arg4306_0 = Arg4306[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4306_0, 2]);})}, 1, [], "regkl.context-nregs"];





Shen.fns["regkl.context-toplevel"] = [Shen.type_func, function shen_user_lambda4310(Arg4309) {
  if (Arg4309.length < 1) return [Shen.type_func, shen_user_lambda4310, 1, Arg4309];
  var Arg4309_0 = Arg4309[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4309_0, 1]);})}, 1, [], "regkl.context-toplevel"];





Shen.fns["regkl.var-idx-aux"] = [Shen.type_func, function shen_user_lambda4320(Arg4319) {
  if (Arg4319.length < 3) return [Shen.type_func, shen_user_lambda4320, 3, Arg4319];
  var Arg4319_0 = Arg4319[0], Arg4319_1 = Arg4319[1], Arg4319_2 = Arg4319[2];
  return ((Shen.empty$question$(Arg4319_2))
  ? (function() {
  return Shen.simple_error(("Unknown var: " + Shen.call(Shen.fns["shen.app"], [Arg4319_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (((Shen.is_type(Arg4319_2, Shen.type_cons) && (Shen.is_type(Arg4319_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4319_2[1][1], Arg4319_0)))))
  ? Arg4319_2[1][2]
  : ((Shen.is_type(Arg4319_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.var-idx-aux"], [Arg4319_0, (Arg4319_1 + 1), Arg4319_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.var-idx-aux"]]);}))))}, 3, [], "regkl.var-idx-aux"];





Shen.fns["regkl.var-idx"] = [Shen.type_func, function shen_user_lambda4324(Arg4323) {
  if (Arg4323.length < 2) return [Shen.type_func, shen_user_lambda4324, 2, Arg4323];
  var Arg4323_0 = Arg4323[0], Arg4323_1 = Arg4323[1];
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.var-idx-aux"], [Arg4323_0, 0, Arg4323_1]);})}, 2, [], "regkl.var-idx"];





Shen.fns["regkl.new-var-idx-aux"] = [Shen.type_func, function shen_user_lambda4337(Arg4336) {
  if (Arg4336.length < 3) return [Shen.type_func, shen_user_lambda4337, 3, Arg4336];
  var Arg4336_0 = Arg4336[0], Arg4336_1 = Arg4336[1], Arg4336_2 = Arg4336[2];
  return ((Shen.empty$question$(Arg4336_2))
  ? Arg4336_1
  : (((Shen.is_type(Arg4336_2, Shen.type_cons) && (Shen.is_type(Arg4336_2[1], Shen.type_cons) && (Arg4336_2[1][2] < 0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-aux"], [Arg4336_0, Arg4336_1, Arg4336_2[2]]);})
  : (((Shen.is_type(Arg4336_2, Shen.type_cons) && (Shen.is_type(Arg4336_2[1], Shen.type_cons) && (Arg4336_2[1][2] >= Arg4336_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-aux"], [Arg4336_0, (Arg4336_2[1][2] + 1), Arg4336_2[2]]);})
  : ((Shen.is_type(Arg4336_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-aux"], [Arg4336_0, Arg4336_1, Arg4336_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.new-var-idx-aux"]]);})))))}, 3, [], "regkl.new-var-idx-aux"];





Shen.fns["regkl.new-var-idx"] = [Shen.type_func, function shen_user_lambda4341(Arg4340) {
  if (Arg4340.length < 2) return [Shen.type_func, shen_user_lambda4341, 2, Arg4340];
  var Arg4340_0 = Arg4340[0], Arg4340_1 = Arg4340[1];
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-aux"], [Arg4340_0, 0, Arg4340_1]);})}, 2, [], "regkl.new-var-idx"];





Shen.fns["regkl.var-defined?"] = [Shen.type_func, function shen_user_lambda4359(Arg4358) {
  if (Arg4358.length < 2) return [Shen.type_func, shen_user_lambda4359, 2, Arg4358];
  var Arg4358_0 = Arg4358[0], Arg4358_1 = Arg4358[1];
  return ((Shen.empty$question$(Arg4358_1))
  ? false
  : (((Shen.is_type(Arg4358_1, Shen.type_cons) && (Shen.is_type(Arg4358_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4358_1[1][1], Arg4358_0)))))
  ? true
  : (((Shen.is_type(Arg4358_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4358_1[1], Arg4358_0))))
  ? true
  : ((Shen.is_type(Arg4358_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.var-defined?"], [Arg4358_0, Arg4358_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.var-defined?"]]);})))))}, 2, [], "regkl.var-defined?"];





Shen.fns["regkl.used-vars-aux"] = [Shen.type_func, function shen_user_lambda4377(Arg4376) {
  if (Arg4376.length < 4) return [Shen.type_func, shen_user_lambda4377, 4, Arg4376];
  var Arg4376_0 = Arg4376[0], Arg4376_1 = Arg4376[1], Arg4376_2 = Arg4376[2], Arg4376_3 = Arg4376[3];
  var R0;
  return (((Shen.is_type(Arg4376_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4376_0[1])) && (Shen.is_type(Arg4376_0[2], Shen.type_cons) && (Shen.is_type(Arg4376_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4376_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4376_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4376_0[2][2][2][1], Arg4376_1, [Shen.type_cons, Arg4376_0[2][1], Arg4376_2], Arg4376_3])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-aux"], [Arg4376_0[2][2][1], Arg4376_1, Arg4376_2, R0]);}))
  : (((Shen.is_type(Arg4376_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4376_0[1])) && (Shen.is_type(Arg4376_0[2], Shen.type_cons) && (Shen.is_type(Arg4376_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4376_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-aux"], [Arg4376_0[2][2][1], Arg4376_1, [Shen.type_cons, Arg4376_0[2][1], Arg4376_2], Arg4376_3]);})
  : ((Shen.is_type(Arg4376_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-aux"], [Arg4376_0[1], Arg4376_1, Arg4376_2, Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4376_0[2], Arg4376_1, Arg4376_2, Arg4376_3])]);})
  : (((Shen.is_type(Arg4376_0, Shen.type_symbol) && ((!Shen.call(Shen.fns["regkl.var-defined?"], [Arg4376_0, Arg4376_2])) && Shen.call(Shen.fns["regkl.var-defined?"], [Arg4376_0, Arg4376_1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["adjoin"], [Arg4376_0, Arg4376_3]);})
  : Arg4376_3))))}, 4, [], "regkl.used-vars-aux"];





Shen.fns["regkl.used-vars"] = [Shen.type_func, function shen_user_lambda4381(Arg4380) {
  if (Arg4380.length < 2) return [Shen.type_func, shen_user_lambda4381, 2, Arg4380];
  var Arg4380_0 = Arg4380[0], Arg4380_1 = Arg4380[1];
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-aux"], [Arg4380_0, Arg4380_1, [], []]);})}, 2, [], "regkl.used-vars"];





Shen.fns["regkl.remove-do"] = [Shen.type_func, function shen_user_lambda4384(Arg4383) {
  if (Arg4383.length < 1) return [Shen.type_func, shen_user_lambda4384, 1, Arg4383];
  var Arg4383_0 = Arg4383[0];
  return (((Shen.is_type(Arg4383_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4383_0[1]))))
  ? Arg4383_0[2]
  : [Shen.type_cons, Arg4383_0, []])}, 1, [], "regkl.remove-do"];





Shen.fns["regkl.remove-duplicates-aux"] = [Shen.type_func, function shen_user_lambda4388(Arg4387) {
  if (Arg4387.length < 2) return [Shen.type_func, shen_user_lambda4388, 2, Arg4387];
  var Arg4387_0 = Arg4387[0], Arg4387_1 = Arg4387[1];
  return ((Shen.empty$question$(Arg4387_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4387_1]);})
  : ((Shen.is_type(Arg4387_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.remove-duplicates-aux"], [Arg4387_0[2], Shen.call(Shen.fns["adjoin"], [Arg4387_0[1], Arg4387_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.remove-duplicates-aux"]]);})))}, 2, [], "regkl.remove-duplicates-aux"];





Shen.fns["regkl.remove-duplicates"] = [Shen.type_func, function shen_user_lambda4391(Arg4390) {
  if (Arg4390.length < 1) return [Shen.type_func, shen_user_lambda4391, 1, Arg4390];
  var Arg4390_0 = Arg4390[0];
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.remove-duplicates-aux"], [Arg4390_0, []]);})}, 1, [], "regkl.remove-duplicates"];





Shen.fns["regkl.used-vars-cascade-aux"] = [Shen.type_func, function shen_user_lambda4401(Arg4400) {
  if (Arg4400.length < 4) return [Shen.type_func, shen_user_lambda4401, 4, Arg4400];
  var Arg4400_0 = Arg4400[0], Arg4400_1 = Arg4400[1], Arg4400_2 = Arg4400[2], Arg4400_3 = Arg4400[3];
  var R0;
  return ((Shen.empty$question$(Arg4400_0))
  ? Arg4400_3
  : ((Shen.is_type(Arg4400_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4400_0[1], Arg4400_1, [], Arg4400_2])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-cascade-aux"], [Arg4400_0[2], Arg4400_1, R0, [Shen.type_cons, R0, Arg4400_3]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.used-vars-cascade-aux"]]);})))}, 4, [], "regkl.used-vars-cascade-aux"];





Shen.fns["regkl.used-vars-cascade"] = [Shen.type_func, function shen_user_lambda4406(Arg4405) {
  if (Arg4405.length < 3) return [Shen.type_func, shen_user_lambda4406, 3, Arg4405];
  var Arg4405_0 = Arg4405[0], Arg4405_1 = Arg4405[1], Arg4405_2 = Arg4405[2];
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-cascade-aux"], [Shen.call(Shen.fns["reverse"], [Arg4405_0]), Arg4405_1, Arg4405_2, []]);})}, 3, [], "regkl.used-vars-cascade"];





Shen.fns["regkl.mk-set-reg"] = [Shen.type_func, function shen_user_lambda4411(Arg4410) {
  if (Arg4410.length < 2) return [Shen.type_func, shen_user_lambda4411, 2, Arg4410];
  var Arg4410_0 = Arg4410[0], Arg4410_1 = Arg4410[1];
  return (((Arg4410_0 < 0))
  ? (function() {
  return Shen.simple_error("Cannot set function argument\x0a");})
  : [Shen.type_cons, [Shen.type_symbol, "regkl.reg->"], [Shen.type_cons, Arg4410_0, [Shen.type_cons, Arg4410_1, []]]])}, 2, [], "regkl.mk-set-reg"];





Shen.fns["regkl.mk-get-reg"] = [Shen.type_func, function shen_user_lambda4414(Arg4413) {
  if (Arg4413.length < 1) return [Shen.type_func, shen_user_lambda4414, 1, Arg4413];
  var Arg4413_0 = Arg4413[0];
  return (((Arg4413_0 < 0))
  ? [Shen.type_cons, [Shen.type_symbol, "regkl.arg"], [Shen.type_cons, ((0 - Arg4413_0) - 1), []]]
  : [Shen.type_cons, [Shen.type_symbol, "regkl.reg"], [Shen.type_cons, Arg4413_0, []]])}, 1, [], "regkl.mk-get-reg"];





Shen.fns["regkl.reuse-idx"] = [Shen.type_func, function shen_user_lambda4423(Arg4422) {
  if (Arg4422.length < 2) return [Shen.type_func, shen_user_lambda4423, 2, Arg4422];
  var Arg4422_0 = Arg4422[0], Arg4422_1 = Arg4422[1];
  return ((Shen.empty$question$(Arg4422_1))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg4422_1, Shen.type_cons) && (Shen.is_type(Arg4422_1[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Arg4422_1[1][1], Arg4422_0)) && (Arg4422_1[1][2] >= 0)))))
  ? Arg4422_1[1][2]
  : ((Shen.is_type(Arg4422_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.reuse-idx"], [Arg4422_0, Arg4422_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.reuse-idx"]]);}))))}, 2, [], "regkl.reuse-idx"];





Shen.fns["regkl.new-var-idx-or-reuse"] = [Shen.type_func, function shen_user_lambda4428(Arg4427) {
  if (Arg4427.length < 3) return [Shen.type_func, shen_user_lambda4428, 3, Arg4427];
  var Arg4427_0 = Arg4427[0], Arg4427_1 = Arg4427[1], Arg4427_2 = Arg4427[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg4427_2))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx"], [Arg4427_0, Arg4427_1]);})
  : ((R0 = [Shen.type_func, function shen_user_lambda4430(Arg4429) {
  if (Arg4429.length < 3) return [Shen.type_func, shen_user_lambda4430, 3, Arg4429];
  var Arg4429_0 = Arg4429[0], Arg4429_1 = Arg4429[1], Arg4429_2 = Arg4429[2];
  return ((Shen.is_type(Arg4429_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-or-reuse"], [Arg4429_0, Arg4429_2, Arg4429_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.new-var-idx-or-reuse"]]);}))}, 3, [Arg4427_0, Arg4427_2, Arg4427_1], undefined]),
  ((Shen.is_type(Arg4427_2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["regkl.reuse-idx"], [Arg4427_2[1], Arg4427_1])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))}, 3, [], "regkl.new-var-idx-or-reuse"];





Shen.fns["regkl.add-var-aux"] = [Shen.type_func, function shen_user_lambda4437(Arg4436) {
  if (Arg4436.length < 4) return [Shen.type_func, shen_user_lambda4437, 4, Arg4436];
  var Arg4436_0 = Arg4436[0], Arg4436_1 = Arg4436[1], Arg4436_2 = Arg4436[2], Arg4436_3 = Arg4436[3];
  return ((Shen.empty$question$(Arg4436_2))
  ? [Shen.type_cons, [Shen.type_cons, Arg4436_0, Arg4436_1], Shen.call(Shen.fns["reverse"], [Arg4436_3])]
  : (((Shen.is_type(Arg4436_2, Shen.type_cons) && (Shen.is_type(Arg4436_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4436_2[1][2], Arg4436_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["reverse"], [[Shen.type_cons, [Shen.type_cons, Arg4436_0, Arg4436_2[1][2]], Arg4436_3]]), Arg4436_2[2]]);})
  : ((Shen.is_type(Arg4436_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.add-var-aux"], [Arg4436_0, Arg4436_1, Arg4436_2[2], [Shen.type_cons, Arg4436_2[1], Arg4436_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.add-var-aux"]]);}))))}, 4, [], "regkl.add-var-aux"];





Shen.fns["regkl.add-var"] = [Shen.type_func, function shen_user_lambda4442(Arg4441) {
  if (Arg4441.length < 3) return [Shen.type_func, shen_user_lambda4442, 3, Arg4441];
  var Arg4441_0 = Arg4441[0], Arg4441_1 = Arg4441[1], Arg4441_2 = Arg4441[2];
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.add-var-aux"], [Arg4441_0, Arg4441_1, Arg4441_2, []]);})}, 3, [], "regkl.add-var"];





Shen.fns["regkl.max"] = [Shen.type_func, function shen_user_lambda4450(Arg4449) {
  if (Arg4449.length < 2) return [Shen.type_func, shen_user_lambda4450, 2, Arg4449];
  var Arg4449_0 = Arg4449[0], Arg4449_1 = Arg4449[1];
  return (((Arg4449_0 > Arg4449_1))
  ? Arg4449_0
  : Arg4449_1)}, 2, [], "regkl.max"];





Shen.fns["regkl.setreg-unexpr"] = [Shen.type_func, function shen_user_lambda4455(Arg4454) {
  if (Arg4454.length < 3) return [Shen.type_func, shen_user_lambda4455, 3, Arg4454];
  var Arg4454_0 = Arg4454[0], Arg4454_1 = Arg4454[1], Arg4454_2 = Arg4454[2];
  return (((Shen.is_type(Arg4454_1, Shen.type_cons) && Shen.empty$question$(Arg4454_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["regkl.mk-set-reg"], [Arg4454_0, Arg4454_1[1]]), Arg4454_2]]);})
  : ((Shen.is_type(Arg4454_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.setreg-unexpr"], [Arg4454_0, Arg4454_1[2], [Shen.type_cons, Arg4454_1[1], Arg4454_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-set-reg"], [Arg4454_0, Arg4454_1]);})))}, 3, [], "regkl.setreg-unexpr"];





Shen.fns["regkl.setreg-do-expr"] = [Shen.type_func, function shen_user_lambda4464(Arg4463) {
  if (Arg4463.length < 3) return [Shen.type_func, shen_user_lambda4464, 3, Arg4463];
  var Arg4463_0 = Arg4463[0], Arg4463_1 = Arg4463[1], Arg4463_2 = Arg4463[2];
  return ((Shen.empty$question$(Arg4463_1))
  ? (function() {
  return Shen.simple_error("Broken `do` expression.");})
  : (((Shen.is_type(Arg4463_1, Shen.type_cons) && Shen.empty$question$(Arg4463_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["regkl.mk-set-reg-unexpr"], [Arg4463_0, Arg4463_1[1]]), Arg4463_2]]);})
  : ((Shen.is_type(Arg4463_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.setreg-do-expr"], [Arg4463_0, Arg4463_1[2], [Shen.type_cons, Arg4463_1[1], Arg4463_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.setreg-do-expr"]]);}))))}, 3, [], "regkl.setreg-do-expr"];





Shen.fns["regkl.mk-set-reg-unexpr"] = [Shen.type_func, function shen_user_lambda4468(Arg4467) {
  if (Arg4467.length < 2) return [Shen.type_func, shen_user_lambda4468, 2, Arg4467];
  var Arg4467_0 = Arg4467[0], Arg4467_1 = Arg4467[1];
  var R0, R1;
  return (((Shen.is_type(Arg4467_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4467_1[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["regkl.setreg-do-expr"], [Arg4467_0, Arg4467_1[2], []])]
  : (((Shen.is_type(Arg4467_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4467_1[1])) && (Shen.is_type(Arg4467_1[2], Shen.type_cons) && (Shen.is_type(Arg4467_1[2][2], Shen.type_cons) && (Shen.is_type(Arg4467_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4467_1[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["regkl.mk-set-reg-unexpr"], [Arg4467_0, Arg4467_1[2][2][1]])),
  (R1 = Shen.call(Shen.fns["regkl.mk-set-reg-unexpr"], [Arg4467_0, Arg4467_1[2][2][2][1]])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4467_1[2][1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-set-reg"], [Arg4467_0, Arg4467_1]);})))}, 2, [], "regkl.mk-set-reg-unexpr"];





Shen.fns["regkl.walk-let-expr"] = [Shen.type_func, function shen_user_lambda4486(Arg4485) {
  if (Arg4485.length < 8) return [Shen.type_func, shen_user_lambda4486, 8, Arg4485];
  var Arg4485_0 = Arg4485[0], Arg4485_1 = Arg4485[1], Arg4485_2 = Arg4485[2], Arg4485_3 = Arg4485[3], Arg4485_4 = Arg4485[4], Arg4485_5 = Arg4485[5], Arg4485_6 = Arg4485[6], Arg4485_7 = Arg4485[7];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4485_7)))
  ? ((R0 = Shen.call(Shen.fns["remove"], [Arg4485_0, Arg4485_3])),
  (R0 = Shen.call(Shen.fns["append"], [R0, Arg4485_5])),
  (R1 = Shen.call(Shen.fns["difference"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "head"], Arg4485_2]), R0])),
  (R1 = Shen.call(Shen.fns["regkl.new-var-idx-or-reuse"], [Arg4485_0, Arg4485_2, R1])),
  Shen.call(Shen.fns["regkl.context-nregs->"], [Arg4485_6, Shen.call(Shen.fns["regkl.max"], [(R1 + 1), Shen.call(Shen.fns["regkl.context-nregs"], [Arg4485_6])])]),
  (R2 = Shen.call(Shen.fns["regkl.add-var"], [Arg4485_0, R1, Arg4485_2])),
  (R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4485_1, Arg4485_2, Arg4485_4, R0, Arg4485_6])),
  [Shen.fns['shen.tuple'], Shen.call(Shen.fns["regkl.mk-set-reg-unexpr"], [R1, R0]), R2])
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4485_7)))
  ? [Shen.fns['shen.tuple'], Shen.call(Shen.fns["regkl.walk-expr"], [Arg4485_1, Arg4485_2, Arg4485_4, Arg4485_5, Arg4485_6]), Arg4485_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-let-expr"]]);})))}, 8, [], "regkl.walk-let-expr"];





Shen.fns["regkl.walk-let"] = [Shen.type_func, function shen_user_lambda4495(Arg4494) {
  if (Arg4494.length < 7) return [Shen.type_func, shen_user_lambda4495, 7, Arg4494];
  var Arg4494_0 = Arg4494[0], Arg4494_1 = Arg4494[1], Arg4494_2 = Arg4494[2], Arg4494_3 = Arg4494[3], Arg4494_4 = Arg4494[4], Arg4494_5 = Arg4494[5], Arg4494_6 = Arg4494[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars"], [Arg4494_2, [Shen.type_cons, Arg4494_0, Arg4494_3]])),
  (R1 = Shen.call(Shen.fns["element?"], [Arg4494_0, R0])),
  (R1 = Shen.call(Shen.fns["regkl.walk-let-expr"], [Arg4494_0, Arg4494_1, Arg4494_3, R0, Arg4494_4, Arg4494_5, Arg4494_6, R1])),
  (R2 = Shen.call(Shen.fns["fst"], [R1])),
  (R1 = Shen.call(Shen.fns["snd"], [R1])),
  (R1 = Shen.call(Shen.fns["regkl.remove-do"], [Shen.call(Shen.fns["regkl.walk-expr"], [Arg4494_2, R1, Shen.call(Shen.fns["append"], [R0, Arg4494_5]), Arg4494_5, Arg4494_6])])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? (R2 = [Shen.type_cons, R2, R1])
  : (R2 = R1)),
  [Shen.type_cons, [Shen.type_symbol, "do"], R2])}, 7, [], "regkl.walk-let"];





Shen.fns["regkl.walk-do-aux"] = [Shen.type_func, function shen_user_lambda4509(Arg4508) {
  if (Arg4508.length < 6) return [Shen.type_func, shen_user_lambda4509, 6, Arg4508];
  var Arg4508_0 = Arg4508[0], Arg4508_1 = Arg4508[1], Arg4508_2 = Arg4508[2], Arg4508_3 = Arg4508[3], Arg4508_4 = Arg4508[4], Arg4508_5 = Arg4508[5];
  var R0, R1;
  return (((Shen.empty$question$(Arg4508_0) && Shen.empty$question$(Arg4508_2)))
  ? Arg4508_5
  : (((Shen.is_type(Arg4508_0, Shen.type_cons) && (Shen.empty$question$(Arg4508_0[2]) && (Shen.is_type(Arg4508_2, Shen.type_cons) && Shen.empty$question$(Arg4508_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4508_0[1], Arg4508_1, Arg4508_2[1], Arg4508_3, Arg4508_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4508_5, Shen.call(Shen.fns["regkl.remove-do"], [R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-do-aux"], [[], Arg4508_1, [], Arg4508_3, Arg4508_4, R0]);}))
  : (((Shen.is_type(Arg4508_0, Shen.type_cons) && (Shen.is_type(Arg4508_2, Shen.type_cons) && Shen.is_type(Arg4508_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4508_0[1], Arg4508_1, Arg4508_2[1], Arg4508_2[2][1], Arg4508_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4508_5, Shen.call(Shen.fns["regkl.remove-do"], [R0])])),
  (R1 = Arg4508_2[2]),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-do-aux"], [Arg4508_0[2], Arg4508_1, R1, Arg4508_3, Arg4508_4, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-do-aux"]]);}))))}, 6, [], "regkl.walk-do-aux"];





Shen.fns["regkl.walk-do"] = [Shen.type_func, function shen_user_lambda4516(Arg4515) {
  if (Arg4515.length < 5) return [Shen.type_func, shen_user_lambda4516, 5, Arg4515];
  var Arg4515_0 = Arg4515[0], Arg4515_1 = Arg4515[1], Arg4515_2 = Arg4515[2], Arg4515_3 = Arg4515[3], Arg4515_4 = Arg4515[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars-cascade"], [Arg4515_0, Arg4515_1, Arg4515_2])),
  (R0 = Shen.call(Shen.fns["regkl.walk-do-aux"], [Arg4515_0, Arg4515_1, R0, Arg4515_3, Arg4515_4, []])),
  [Shen.type_cons, [Shen.type_symbol, "do"], R0])}, 5, [], "regkl.walk-do"];





Shen.fns["regkl.walk-apply-aux"] = [Shen.type_func, function shen_user_lambda4530(Arg4529) {
  if (Arg4529.length < 6) return [Shen.type_func, shen_user_lambda4530, 6, Arg4529];
  var Arg4529_0 = Arg4529[0], Arg4529_1 = Arg4529[1], Arg4529_2 = Arg4529[2], Arg4529_3 = Arg4529[3], Arg4529_4 = Arg4529[4], Arg4529_5 = Arg4529[5];
  var R0;
  return (((Shen.empty$question$(Arg4529_0) && Shen.empty$question$(Arg4529_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4529_5]);})
  : (((Shen.is_type(Arg4529_0, Shen.type_cons) && (Shen.empty$question$(Arg4529_0[2]) && (Shen.is_type(Arg4529_2, Shen.type_cons) && Shen.empty$question$(Arg4529_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4529_0[1], Arg4529_1, Arg4529_2[1], Arg4529_3, Arg4529_4])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-apply-aux"], [[], Arg4529_1, [], Arg4529_3, Arg4529_4, [Shen.type_cons, R0, Arg4529_5]]);}))
  : (((Shen.is_type(Arg4529_0, Shen.type_cons) && (Shen.is_type(Arg4529_2, Shen.type_cons) && Shen.is_type(Arg4529_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4529_0[1], Arg4529_1, Arg4529_2[1], Arg4529_2[2][1], Arg4529_4])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-apply-aux"], [Arg4529_0[2], Arg4529_1, Arg4529_2[2], Arg4529_3, Arg4529_4, [Shen.type_cons, R0, Arg4529_5]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-apply-aux"]]);}))))}, 6, [], "regkl.walk-apply-aux"];





Shen.fns["regkl.walk-apply"] = [Shen.type_func, function shen_user_lambda4537(Arg4536) {
  if (Arg4536.length < 5) return [Shen.type_func, shen_user_lambda4537, 5, Arg4536];
  var Arg4536_0 = Arg4536[0], Arg4536_1 = Arg4536[1], Arg4536_2 = Arg4536[2], Arg4536_3 = Arg4536[3], Arg4536_4 = Arg4536[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars-cascade"], [Arg4536_0, Arg4536_1, Arg4536_2])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-apply-aux"], [Arg4536_0, Arg4536_1, R0, Arg4536_3, Arg4536_4, []]);}))}, 5, [], "regkl.walk-apply"];





Shen.fns["regkl.walk-if"] = [Shen.type_func, function shen_user_lambda4546(Arg4545) {
  if (Arg4545.length < 7) return [Shen.type_func, shen_user_lambda4546, 7, Arg4545];
  var Arg4545_0 = Arg4545[0], Arg4545_1 = Arg4545[1], Arg4545_2 = Arg4545[2], Arg4545_3 = Arg4545[3], Arg4545_4 = Arg4545[4], Arg4545_5 = Arg4545[5], Arg4545_6 = Arg4545[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4545_1, Arg4545_3, [], Arg4545_5])),
  (R1 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4545_2, Arg4545_3, [], Arg4545_5])),
  (R2 = Shen.call(Shen.fns["append"], [R0, R1])),
  (R2 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4545_0, Arg4545_3, Arg4545_4, R2, Arg4545_6])),
  (R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4545_1, Arg4545_3, R0, Arg4545_5, Arg4545_6])),
  (R1 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4545_2, Arg4545_3, R1, Arg4545_5, Arg4545_6])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R2, [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])}, 7, [], "regkl.walk-if"];





Shen.fns["regkl.walk-cond"] = [Shen.type_func, function shen_user_lambda4561(Arg4560) {
  if (Arg4560.length < 5) return [Shen.type_func, shen_user_lambda4561, 5, Arg4560];
  var Arg4560_0 = Arg4560[0], Arg4560_1 = Arg4560[1], Arg4560_2 = Arg4560[2], Arg4560_3 = Arg4560[3], Arg4560_4 = Arg4560[4];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4560_0))
  ? [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "error: cond failure", []]]
  : (((Shen.is_type(Arg4560_0, Shen.type_cons) && (Shen.is_type(Arg4560_0[1], Shen.type_cons) && (Shen.is_type(Arg4560_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4560_0[1][2][2])))))
  ? ((R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4560_0[1][2][1], Arg4560_1, [], Arg4560_3])),
  (R1 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4560_0[2], Arg4560_1, [], Arg4560_3])),
  (R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4560_0[1][1], Arg4560_1, [], Shen.call(Shen.fns["append"], [R0, R1])])),
  (R2 = Shen.call(Shen.fns["regkl.walk-cond"], [Arg4560_0[2], Arg4560_1, Arg4560_2, Arg4560_3, Arg4560_4])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-if"], [Arg4560_0[1][1], Arg4560_0[1][2][1], R2, Arg4560_1, R0, R1, Arg4560_4]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-cond"]]);})))}, 5, [], "regkl.walk-cond"];





Shen.fns["regkl.mk-closure-args-init"] = [Shen.type_func, function shen_user_lambda4568(Arg4567) {
  if (Arg4567.length < 3) return [Shen.type_func, shen_user_lambda4568, 3, Arg4567];
  var Arg4567_0 = Arg4567[0], Arg4567_1 = Arg4567[1], Arg4567_2 = Arg4567[2];
  var R0;
  return ((Shen.empty$question$(Arg4567_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4567_2]);})
  : ((Shen.is_type(Arg4567_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["regkl.mk-get-reg"], [Shen.call(Shen.fns["regkl.var-idx"], [Arg4567_0[1], Arg4567_1])])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-closure-args-init"], [Arg4567_0[2], Arg4567_1, [Shen.type_cons, R0, Arg4567_2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.mk-closure-args-init"]]);})))}, 3, [], "regkl.mk-closure-args-init"];





Shen.fns["regkl.mk-closure-env"] = [Shen.type_func, function shen_user_lambda4572(Arg4571) {
  if (Arg4571.length < 2) return [Shen.type_func, shen_user_lambda4572, 2, Arg4571];
  var Arg4571_0 = Arg4571[0], Arg4571_1 = Arg4571[1];
  return ((Shen.empty$question$(Arg4571_0))
  ? Arg4571_1
  : ((Shen.is_type(Arg4571_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-closure-env"], [Arg4571_0[2], [Shen.type_cons, [Shen.type_cons, Arg4571_0[1], Shen.call(Shen.fns["regkl.new-var-idx"], [Arg4571_0[1], Arg4571_1])], Arg4571_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.mk-closure-env"]]);})))}, 2, [], "regkl.mk-closure-env"];





Shen.fns["regkl.mk-closure-list"] = [Shen.type_func, function shen_user_lambda4579(Arg4578) {
  if (Arg4578.length < 5) return [Shen.type_func, shen_user_lambda4579, 5, Arg4578];
  var Arg4578_0 = Arg4578[0], Arg4578_1 = Arg4578[1], Arg4578_2 = Arg4578[2], Arg4578_3 = Arg4578[3], Arg4578_4 = Arg4578[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-closure-env"], [Arg4578_3, []])),
  (R1 = Shen.call(Shen.fns["regkl.mk-closure-args-init"], [Arg4578_3, Arg4578_2, []])),
  (R0 = Shen.call(Shen.fns["regkl.mk-function-kl"], [Arg4578_0, Arg4578_1, R0, Arg4578_4])),
  [Shen.type_cons, R1, [Shen.type_cons, R0, []]])}, 5, [], "regkl.mk-closure-list"];





Shen.fns["regkl.walk-lambda-aux"] = [Shen.type_func, function shen_user_lambda4587(Arg4586) {
  if (Arg4586.length < 6) return [Shen.type_func, shen_user_lambda4587, 6, Arg4586];
  var Arg4586_0 = Arg4586[0], Arg4586_1 = Arg4586[1], Arg4586_2 = Arg4586[2], Arg4586_3 = Arg4586[3], Arg4586_4 = Arg4586[4], Arg4586_5 = Arg4586[5];
  var R0, R1;
  return (((Shen.is_type(Arg4586_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4586_1[1])) && (Shen.is_type(Arg4586_1[2], Shen.type_cons) && (Shen.is_type(Arg4586_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg4586_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-lambda-aux"], [Arg4586_1[2][1], Arg4586_1[2][2][1], [Shen.type_cons, Arg4586_0, Arg4586_2], Arg4586_3, Arg4586_4, Arg4586_5]);})
  : ((R0 = Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4586_0, Arg4586_2]])),
  (R1 = Shen.call(Shen.fns["append"], [Arg4586_4, R0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-closure-list"], [R1, Arg4586_1, Arg4586_3, Arg4586_4, Arg4586_5])),
  [Shen.type_cons, [Shen.type_symbol, "regkl.closure"], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["regkl.context-nregs"], [Arg4586_5]), R1]]]))}, 6, [], "regkl.walk-lambda-aux"];





Shen.fns["regkl.walk-lambda"] = [Shen.type_func, function shen_user_lambda4594(Arg4593) {
  if (Arg4593.length < 5) return [Shen.type_func, shen_user_lambda4594, 5, Arg4593];
  var Arg4593_0 = Arg4593[0], Arg4593_1 = Arg4593[1], Arg4593_2 = Arg4593[2], Arg4593_3 = Arg4593[3], Arg4593_4 = Arg4593[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars"], [[Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg4593_0, [Shen.type_cons, Arg4593_1, []]]], Arg4593_3])),
  (R1 = Shen.call(Shen.fns["regkl.mk-context"], [Shen.call(Shen.fns["regkl.context-toplevel"], [Arg4593_4]), 0])),
  (R0 = Shen.call(Shen.fns["regkl.walk-lambda-aux"], [Arg4593_0, Arg4593_1, Arg4593_2, Arg4593_3, R0, R1])),
  Shen.call(Shen.fns["regkl.context-toplevel->"], [Arg4593_4, Shen.call(Shen.fns["regkl.context-toplevel"], [R1])]),
  R0)}, 5, [], "regkl.walk-lambda"];





Shen.fns["regkl.walk-freeze"] = [Shen.type_func, function shen_user_lambda4600(Arg4599) {
  if (Arg4599.length < 4) return [Shen.type_func, shen_user_lambda4600, 4, Arg4599];
  var Arg4599_0 = Arg4599[0], Arg4599_1 = Arg4599[1], Arg4599_2 = Arg4599[2], Arg4599_3 = Arg4599[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-context"], [Shen.call(Shen.fns["regkl.context-toplevel"], [Arg4599_3]), 0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-closure-list"], [Arg4599_2, Arg4599_0, Arg4599_1, Arg4599_2, R0])),
  Shen.call(Shen.fns["regkl.context-toplevel->"], [Arg4599_3, Shen.call(Shen.fns["regkl.context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "regkl.freeze"], [Shen.type_cons, Shen.call(Shen.fns["regkl.context-nregs"], [R0]), R1]])}, 4, [], "regkl.walk-freeze"];





Shen.fns["regkl.lift-defun"] = [Shen.type_func, function shen_user_lambda4606(Arg4605) {
  if (Arg4605.length < 4) return [Shen.type_func, shen_user_lambda4606, 4, Arg4605];
  var Arg4605_0 = Arg4605[0], Arg4605_1 = Arg4605[1], Arg4605_2 = Arg4605[2], Arg4605_3 = Arg4605[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-context"], [Shen.call(Shen.fns["regkl.context-toplevel"], [Arg4605_3]), 0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-defun-kl"], [Arg4605_0, Arg4605_1, Arg4605_2, [], R0])),
  Shen.call(Shen.fns["regkl.context-toplevel->"], [Arg4605_3, [Shen.type_cons, R1, Shen.call(Shen.fns["regkl.context-toplevel"], [R0])]]),
  [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, Arg4605_0, []]])}, 4, [], "regkl.lift-defun"];





Shen.fns["regkl.walk-trap"] = [Shen.type_func, function shen_user_lambda4614(Arg4613) {
  if (Arg4613.length < 6) return [Shen.type_func, shen_user_lambda4614, 6, Arg4613];
  var Arg4613_0 = Arg4613[0], Arg4613_1 = Arg4613[1], Arg4613_2 = Arg4613[2], Arg4613_3 = Arg4613[3], Arg4613_4 = Arg4613[4], Arg4613_5 = Arg4613[5];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Shenkl."]])),
  (R1 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Shenkl."]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Arg4613_0, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R1, [Shen.type_cons, Arg4613_1, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "regkl.trap-error"], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]], []]]]], []]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-expr"], [R1, Arg4613_2, Arg4613_3, Arg4613_4, Arg4613_5]);}))}, 6, [], "regkl.walk-trap"];





Shen.fns["regkl.walk-expr"] = [Shen.type_func, function shen_user_lambda4652(Arg4651) {
  if (Arg4651.length < 5) return [Shen.type_func, shen_user_lambda4652, 5, Arg4651];
  var Arg4651_0 = Arg4651[0], Arg4651_1 = Arg4651[1], Arg4651_2 = Arg4651[2], Arg4651_3 = Arg4651[3], Arg4651_4 = Arg4651[4];
  return (((Shen.is_type(Arg4651_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4651_0[1])) && (Shen.is_type(Arg4651_0[2], Shen.type_cons) && (Shen.is_type(Arg4651_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4651_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4651_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-let"], [Arg4651_0[2][1], Arg4651_0[2][2][1], Arg4651_0[2][2][2][1], Arg4651_1, Arg4651_2, Arg4651_3, Arg4651_4]);})
  : (((Shen.is_type(Arg4651_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4651_0[1])) && (Shen.is_type(Arg4651_0[2], Shen.type_cons) && (Shen.is_type(Arg4651_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4651_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4651_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-if"], [Arg4651_0[2][1], Arg4651_0[2][2][1], Arg4651_0[2][2][2][1], Arg4651_1, Arg4651_2, Arg4651_3, Arg4651_4]);})
  : (((Shen.is_type(Arg4651_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg4651_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-cond"], [Arg4651_0[2], Arg4651_1, Arg4651_2, Arg4651_3, Arg4651_4]);})
  : (((Shen.is_type(Arg4651_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4651_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-do"], [Arg4651_0[2], Arg4651_1, Arg4651_2, Arg4651_3, Arg4651_4]);})
  : (((Shen.is_type(Arg4651_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4651_0[1])) && (Shen.is_type(Arg4651_0[2], Shen.type_cons) && (Shen.is_type(Arg4651_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4651_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-lambda"], [Arg4651_0[2][1], Arg4651_0[2][2][1], [], Arg4651_1, Arg4651_4]);})
  : (((Shen.is_type(Arg4651_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg4651_0[1])) && (Shen.is_type(Arg4651_0[2], Shen.type_cons) && Shen.empty$question$(Arg4651_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-freeze"], [Arg4651_0[2][1], Arg4651_1, Arg4651_2, Arg4651_4]);})
  : (((Shen.is_type(Arg4651_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4651_0[1])) && (Shen.is_type(Arg4651_0[2], Shen.type_cons) && (Shen.is_type(Arg4651_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4651_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4651_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.lift-defun"], [Arg4651_0[2][1], Arg4651_0[2][2][1], Arg4651_0[2][2][2][1], Arg4651_4]);})
  : (((Shen.is_type(Arg4651_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "trap-error"], Arg4651_0[1])) && (Shen.is_type(Arg4651_0[2], Shen.type_cons) && (Shen.is_type(Arg4651_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4651_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-trap"], [Arg4651_0[2][1], Arg4651_0[2][2][1], Arg4651_1, Arg4651_2, Arg4651_3, Arg4651_4]);})
  : ((Shen.is_type(Arg4651_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-apply"], [Arg4651_0, Arg4651_1, Arg4651_2, Arg4651_3, Arg4651_4]);})
  : (((Shen.call(Shen.fns["regkl.var-defined?"], [Arg4651_0, Arg4651_1]) && Shen.is_type(Arg4651_0, Shen.type_symbol)))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-get-reg"], [Shen.call(Shen.fns["regkl.var-idx"], [Arg4651_0, Arg4651_1])]);})
  : Arg4651_0))))))))))}, 5, [], "regkl.walk-expr"];





Shen.fns["regkl.mk-defun-env"] = [Shen.type_func, function shen_user_lambda4657(Arg4656) {
  if (Arg4656.length < 3) return [Shen.type_func, shen_user_lambda4657, 3, Arg4656];
  var Arg4656_0 = Arg4656[0], Arg4656_1 = Arg4656[1], Arg4656_2 = Arg4656[2];
  return ((Shen.empty$question$(Arg4656_0))
  ? Arg4656_2
  : ((Shen.is_type(Arg4656_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-defun-env"], [Arg4656_0[2], (Arg4656_1 - 1), [Shen.type_cons, [Shen.type_cons, Arg4656_0[1], Arg4656_1], Arg4656_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.mk-defun-env"]]);})))}, 3, [], "regkl.mk-defun-env"];





Shen.fns["regkl.mk-function-kl"] = [Shen.type_func, function shen_user_lambda4663(Arg4662) {
  if (Arg4662.length < 4) return [Shen.type_func, shen_user_lambda4663, 4, Arg4662];
  var Arg4662_0 = Arg4662[0], Arg4662_1 = Arg4662[1], Arg4662_2 = Arg4662[2], Arg4662_3 = Arg4662[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["regkl.remove-duplicates"], [Arg4662_0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-defun-env"], [R0, -1, Arg4662_2])),
  (R0 = Shen.call(Shen.fns["regkl.used-vars"], [Arg4662_1, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-expr"], [Arg4662_1, R1, R0, [], Arg4662_3]);}))}, 4, [], "regkl.mk-function-kl"];





Shen.fns["regkl.defun-hdr"] = [Shen.type_func, function shen_user_lambda4666(Arg4665) {
  if (Arg4665.length < 1) return [Shen.type_func, shen_user_lambda4666, 1, Arg4665];
  var Arg4665_0 = Arg4665[0];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4665_0)))
  ? [Shen.type_symbol, "regkl.toplevel"]
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4665_0)))
  ? [Shen.type_symbol, "regkl.func"]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.defun-hdr"]]);})))}, 1, [], "regkl.defun-hdr"];





Shen.fns["regkl.mk-defun-kl"] = [Shen.type_func, function shen_user_lambda4674(Arg4673) {
  if (Arg4673.length < 6) return [Shen.type_func, shen_user_lambda4674, 6, Arg4673];
  var Arg4673_0 = Arg4673[0], Arg4673_1 = Arg4673[1], Arg4673_2 = Arg4673[2], Arg4673_3 = Arg4673[3], Arg4673_4 = Arg4673[4], Arg4673_5 = Arg4673[5];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-context"], [Shen.call(Shen.fns["regkl.context-toplevel"], [Arg4673_5]), 0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-function-kl"], [Arg4673_1, Arg4673_2, Arg4673_3, R0])),
  Shen.call(Shen.fns["regkl.context-toplevel->"], [Arg4673_5, Shen.call(Shen.fns["regkl.context-toplevel"], [R0])]),
  [Shen.type_cons, Shen.call(Shen.fns["regkl.defun-hdr"], [Arg4673_4]), [Shen.type_cons, Arg4673_0, [Shen.type_cons, Arg4673_1, [Shen.type_cons, Shen.call(Shen.fns["regkl.context-nregs"], [R0]), [Shen.type_cons, R1, []]]]]])}, 6, [], "regkl.mk-defun-kl"];





Shen.fns["regkl.walk-defun"] = [Shen.type_func, function shen_user_lambda4681(Arg4680) {
  if (Arg4680.length < 5) return [Shen.type_func, shen_user_lambda4681, 5, Arg4680];
  var Arg4680_0 = Arg4680[0], Arg4680_1 = Arg4680[1], Arg4680_2 = Arg4680[2], Arg4680_3 = Arg4680[3], Arg4680_4 = Arg4680[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-context"], [Arg4680_4, 0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-defun-kl"], [Arg4680_0, Arg4680_1, Arg4680_2, [], Arg4680_3, R0])),
  [Shen.type_cons, R1, Shen.call(Shen.fns["regkl.context-toplevel"], [R0])])}, 5, [], "regkl.walk-defun"];





Shen.fns["regkl.walk-toplevel"] = [Shen.type_func, function shen_user_lambda4694(Arg4693) {
  if (Arg4693.length < 3) return [Shen.type_func, shen_user_lambda4694, 3, Arg4693];
  var Arg4693_0 = Arg4693[0], Arg4693_1 = Arg4693[1], Arg4693_2 = Arg4693[2];
  var R0;
  return (((Shen.is_type(Arg4693_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4693_0[1])) && (Shen.is_type(Arg4693_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg4693_0[2][1])) && (Shen.is_type(Arg4693_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4693_0[2][2][1])))))))
  ? Arg4693_2
  : (((Shen.is_type(Arg4693_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4693_0[1])) && (Shen.is_type(Arg4693_0[2], Shen.type_cons) && (Shen.is_type(Arg4693_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4693_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4693_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-defun"], [Arg4693_0[2][1], Arg4693_0[2][2][1], Arg4693_0[2][2][2][1], false, Arg4693_2]);})
  : ((Shen.is_type(Arg4693_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "regkl.shen-toplevel-"]])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-defun"], [R0, [], Arg4693_0, true, Arg4693_2]);}))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4693_1)))
  ? Arg4693_2
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4693_1)))
  ? [Shen.type_cons, Arg4693_0, Arg4693_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-toplevel"]]);}))))))}, 3, [], "regkl.walk-toplevel"];





Shen.fns["regkl.walk-aux"] = [Shen.type_func, function shen_user_lambda4701(Arg4700) {
  if (Arg4700.length < 3) return [Shen.type_func, shen_user_lambda4701, 3, Arg4700];
  var Arg4700_0 = Arg4700[0], Arg4700_1 = Arg4700[1], Arg4700_2 = Arg4700[2];
  return ((Shen.empty$question$(Arg4700_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4700_2]);})
  : ((Shen.is_type(Arg4700_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-aux"], [Arg4700_0[2], Arg4700_1, Shen.call(Shen.fns["regkl.walk-toplevel"], [Arg4700_0[1], Arg4700_1, Arg4700_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-aux"]]);})))}, 3, [], "regkl.walk-aux"];





Shen.fns["regkl.walk"] = [Shen.type_func, function shen_user_lambda4705(Arg4704) {
  if (Arg4704.length < 2) return [Shen.type_func, shen_user_lambda4705, 2, Arg4704];
  var Arg4704_0 = Arg4704[0], Arg4704_1 = Arg4704[1];
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-aux"], [Arg4704_0, Arg4704_1, []]);})}, 2, [], "regkl.walk"];





Shen.call_toplevel(function js$dot$shen_js_toplevel5481(Arg5479) {
  if (Arg5479.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel5481, 0, Arg5479];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "js.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})});




Shen.fns["js.mk-context"] = [Shen.type_func, function shen_user_lambda5487(Arg5486) {
  if (Arg5486.length < 4) return [Shen.type_func, shen_user_lambda5487, 4, Arg5486];
  var Arg5486_0 = Arg5486[0], Arg5486_1 = Arg5486[1], Arg5486_2 = Arg5486[2], Arg5486_3 = Arg5486[3];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg5486_0, Shen.call(Shen.fns["@v"], [Arg5486_1, Shen.call(Shen.fns["@v"], [Arg5486_2, Shen.call(Shen.fns["@v"], [Arg5486_3, Shen.vector(0)])])])]);})}, 4, [], "js.mk-context"];





Shen.fns["js.context-varname->"] = [Shen.type_func, function shen_user_lambda5491(Arg5490) {
  if (Arg5490.length < 2) return [Shen.type_func, shen_user_lambda5491, 2, Arg5490];
  var Arg5490_0 = Arg5490[0], Arg5490_1 = Arg5490[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5490_0, 4, Arg5490_1]);})}, 2, [], "js.context-varname->"];





Shen.fns["js.context-argname->"] = [Shen.type_func, function shen_user_lambda5495(Arg5494) {
  if (Arg5494.length < 2) return [Shen.type_func, shen_user_lambda5495, 2, Arg5494];
  var Arg5494_0 = Arg5494[0], Arg5494_1 = Arg5494[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5494_0, 3, Arg5494_1]);})}, 2, [], "js.context-argname->"];





Shen.fns["js.context-toplevel->"] = [Shen.type_func, function shen_user_lambda5499(Arg5498) {
  if (Arg5498.length < 2) return [Shen.type_func, shen_user_lambda5499, 2, Arg5498];
  var Arg5498_0 = Arg5498[0], Arg5498_1 = Arg5498[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5498_0, 2, Arg5498_1]);})}, 2, [], "js.context-toplevel->"];





Shen.fns["js.context-nregs->"] = [Shen.type_func, function shen_user_lambda5503(Arg5502) {
  if (Arg5502.length < 2) return [Shen.type_func, shen_user_lambda5503, 2, Arg5502];
  var Arg5502_0 = Arg5502[0], Arg5502_1 = Arg5502[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5502_0, 1, Arg5502_1]);})}, 2, [], "js.context-nregs->"];





Shen.fns["js.context-varname"] = [Shen.type_func, function shen_user_lambda5506(Arg5505) {
  if (Arg5505.length < 1) return [Shen.type_func, shen_user_lambda5506, 1, Arg5505];
  var Arg5505_0 = Arg5505[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5505_0, 4]);})}, 1, [], "js.context-varname"];





Shen.fns["js.context-argname"] = [Shen.type_func, function shen_user_lambda5509(Arg5508) {
  if (Arg5508.length < 1) return [Shen.type_func, shen_user_lambda5509, 1, Arg5508];
  var Arg5508_0 = Arg5508[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5508_0, 3]);})}, 1, [], "js.context-argname"];





Shen.fns["js.context-toplevel"] = [Shen.type_func, function shen_user_lambda5512(Arg5511) {
  if (Arg5511.length < 1) return [Shen.type_func, shen_user_lambda5512, 1, Arg5511];
  var Arg5511_0 = Arg5511[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5511_0, 2]);})}, 1, [], "js.context-toplevel"];





Shen.fns["js.context-nregs"] = [Shen.type_func, function shen_user_lambda5515(Arg5514) {
  if (Arg5514.length < 1) return [Shen.type_func, shen_user_lambda5515, 1, Arg5514];
  var Arg5514_0 = Arg5514[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5514_0, 1]);})}, 1, [], "js.context-nregs"];





Shen.fns["js.max"] = [Shen.type_func, function shen_user_lambda5523(Arg5522) {
  if (Arg5522.length < 2) return [Shen.type_func, shen_user_lambda5523, 2, Arg5522];
  var Arg5522_0 = Arg5522[0], Arg5522_1 = Arg5522[1];
  return (((Arg5522_0 > Arg5522_1))
  ? Arg5522_0
  : Arg5522_1)}, 2, [], "js.max"];





Shen.fns["js.str-js-from-shen*"] = [Shen.type_func, function shen_user_lambda5527(Arg5526) {
  if (Arg5526.length < 2) return [Shen.type_func, shen_user_lambda5527, 2, Arg5526];
  var Arg5526_0 = Arg5526[0], Arg5526_1 = Arg5526[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5526_0)))
  ? Arg5526_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("-", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("_", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("$", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("'", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$quote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("`", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$bquote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("/", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$slash$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("*", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$asterisk$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("+", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$plus$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("%", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$percent$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("=", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$eq$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("?", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$question$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("!", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$excl$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$(">", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$gt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("<", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$lt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$(".", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$dot$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("|", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$bar$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("#", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$sharp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("~", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$tilde$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$(":", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$colon$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$(";", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$sc$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("@", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$at$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("&", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$amp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("{", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$cbraceopen$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]) && Shen.unwind_tail(Shen.$eq$("}", Arg5526_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + "$cbraceclose$")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg5526_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5526_0), (Arg5526_1 + Arg5526_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-js-from-shen*"]]);})))))))))))))))))))))))))))}, 2, [], "js.str-js-from-shen*"];





Shen.fns["js.str-js-from-shen"] = [Shen.type_func, function shen_user_lambda5530(Arg5529) {
  if (Arg5529.length < 1) return [Shen.type_func, shen_user_lambda5530, 1, Arg5529];
  var Arg5529_0 = Arg5529[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Arg5529_0, ""]);})}, 1, [], "js.str-js-from-shen"];





Shen.fns["js.sym-js-from-shen"] = [Shen.type_func, function shen_user_lambda5533(Arg5532) {
  if (Arg5532.length < 1) return [Shen.type_func, shen_user_lambda5533, 1, Arg5532];
  var Arg5532_0 = Arg5532[0];
  return (function() {
  return Shen.intern(Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg5532_0)]));})}, 1, [], "js.sym-js-from-shen"];





Shen.fns["js.backslash"] = [Shen.type_func, function shen_user_lambda5535(Arg5534) {
  if (Arg5534.length < 0) return [Shen.type_func, shen_user_lambda5535, 0, Arg5534];
  return (function() {
  return Shen.n_$gt$string(92);})}, 0, [], "js.backslash"];





Shen.fns["js.dquote"] = [Shen.type_func, function shen_user_lambda5537(Arg5536) {
  if (Arg5536.length < 0) return [Shen.type_func, shen_user_lambda5537, 0, Arg5536];
  return (function() {
  return Shen.n_$gt$string(34);})}, 0, [], "js.dquote"];





Shen.fns["js.esc-string"] = [Shen.type_func, function shen_user_lambda5541(Arg5540) {
  if (Arg5540.length < 2) return [Shen.type_func, shen_user_lambda5541, 2, Arg5540];
  var Arg5540_0 = Arg5540[0], Arg5540_1 = Arg5540[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5540_0)))
  ? Arg5540_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5540_0]) && (Shen.unwind_tail(Shen.$eq$(Arg5540_0[0], Shen.call(Shen.fns["js.backslash"], []))) || Shen.unwind_tail(Shen.$eq$(Arg5540_0[0], Shen.call(Shen.fns["js.dquote"], []))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg5540_0), (Arg5540_1 + (Shen.call(Shen.fns["js.backslash"], []) + Arg5540_0[0]))]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5540_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg5540_0[0]), 10))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg5540_0), (Arg5540_1 + "\\x0a")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5540_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg5540_0[0]), 13))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg5540_0), (Arg5540_1 + "\\x0d")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg5540_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg5540_0), (Arg5540_1 + Arg5540_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.esc-string"]]);}))))))}, 2, [], "js.esc-string"];





Shen.fns["js.func-name"] = [Shen.type_func, function shen_user_lambda5544(Arg5543) {
  if (Arg5543.length < 1) return [Shen.type_func, shen_user_lambda5544, 1, Arg5543];
  var Arg5543_0 = Arg5543[0];
  return ((Shen.is_type(Arg5543_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg5543_0]);})
  : Arg5543_0)}, 1, [], "js.func-name"];





Shen.fns["js.intfunc-name"] = [Shen.type_func, function shen_user_lambda5547(Arg5546) {
  if (Arg5546.length < 1) return [Shen.type_func, shen_user_lambda5547, 1, Arg5546];
  var Arg5546_0 = Arg5546[0];
  return (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg5546_0]) || (Shen.globals["shen.*installing-kl*"])))
  ? (function() {
  return Shen.intern(("Shen." + Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg5546_0)])));})
  : ((Shen.is_type(Arg5546_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg5546_0]);})
  : Arg5546_0))}, 1, [], "js.intfunc-name"];





Shen.call_toplevel(function js$dot$shen_js_toplevel5550(Arg5548) {
  if (Arg5548.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel5550, 0, Arg5548];
  return (Shen.globals["js.int-funcs"] = [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], []], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], []]], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "write-byte"], []]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]], [Shen.type_cons, [Shen.type_symbol, "address->"], []]], []]]])});




Shen.call_toplevel(function js$dot$shen_js_toplevel5553(Arg5551) {
  if (Arg5551.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel5553, 0, Arg5551];
  return (Shen.globals["js.internals"] = [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "write-byte"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]]]]]]]]]]]]]]]]]]]]]]]])});




Shen.call_toplevel(function js$dot$shen_js_toplevel5556(Arg5554) {
  if (Arg5554.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel5556, 0, Arg5554];
  return (Shen.globals["js.tail-internals"] = [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]])});




Shen.fns["js.int-func-args*"] = [Shen.type_func, function shen_user_lambda5568(Arg5567) {
  if (Arg5567.length < 2) return [Shen.type_func, shen_user_lambda5568, 2, Arg5567];
  var Arg5567_0 = Arg5567[0], Arg5567_1 = Arg5567[1];
  return ((Shen.empty$question$(Arg5567_1))
  ? []
  : (((Shen.is_type(Arg5567_1, Shen.type_cons) && (Shen.is_type(Arg5567_1[1], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg5567_0, Arg5567_1[1][2]]))))
  ? Arg5567_1[1][1]
  : (((Shen.is_type(Arg5567_1, Shen.type_cons) && Shen.is_type(Arg5567_1[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg5567_0, Arg5567_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-func-args*"]]);}))))}, 2, [], "js.int-func-args*"];





Shen.fns["js.int-func-args"] = [Shen.type_func, function shen_user_lambda5571(Arg5570) {
  if (Arg5570.length < 1) return [Shen.type_func, shen_user_lambda5571, 1, Arg5570];
  var Arg5570_0 = Arg5570[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg5570_0, (Shen.globals["js.int-funcs"])]);})}, 1, [], "js.int-func-args"];





Shen.fns["js.int-func?"] = [Shen.type_func, function shen_user_lambda5574(Arg5573) {
  if (Arg5573.length < 1) return [Shen.type_func, shen_user_lambda5574, 1, Arg5573];
  var Arg5573_0 = Arg5573[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5573_0)))
  ? true
  : (!Shen.empty$question$(Shen.call(Shen.fns["js.int-func-args"], [Arg5573_0]))))}, 1, [], "js.int-func?"];





Shen.fns["js.esc-obj"] = [Shen.type_func, function shen_user_lambda5577(Arg5576) {
  if (Arg5576.length < 1) return [Shen.type_func, shen_user_lambda5577, 1, Arg5576];
  var Arg5576_0 = Arg5576[0];
  return (((typeof(Arg5576_0) == 'string'))
  ? ("\"" + (Shen.call(Shen.fns["js.esc-string"], [Arg5576_0, ""]) + "\""))
  : ((Shen.is_type(Arg5576_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg5576_0]);})
  : (function() {
  return Shen.simple_error(("Object " + Shen.call(Shen.fns["shen.app"], [Arg5576_0, " cannot be escaped", [Shen.type_symbol, "shen.r"]])));})))}, 1, [], "js.esc-obj"];





Shen.fns["js.str-join*"] = [Shen.type_func, function shen_user_lambda5582(Arg5581) {
  if (Arg5581.length < 3) return [Shen.type_func, shen_user_lambda5582, 3, Arg5581];
  var Arg5581_0 = Arg5581[0], Arg5581_1 = Arg5581[1], Arg5581_2 = Arg5581[2];
  return ((Shen.empty$question$(Arg5581_0))
  ? Arg5581_2
  : (((Shen.is_type(Arg5581_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("", Arg5581_2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg5581_0[2], Arg5581_1, Shen.call(Shen.fns["shen.app"], [Arg5581_0[1], "", [Shen.type_symbol, "shen.a"]])]);})
  : ((Shen.is_type(Arg5581_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg5581_0[2], Arg5581_1, (Arg5581_2 + (Arg5581_1 + Shen.call(Shen.fns["shen.app"], [Arg5581_0[1], "", [Shen.type_symbol, "shen.a"]])))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-join*"]]);}))))}, 3, [], "js.str-join*"];





Shen.fns["js.str-join"] = [Shen.type_func, function shen_user_lambda5586(Arg5585) {
  if (Arg5585.length < 2) return [Shen.type_func, shen_user_lambda5586, 2, Arg5585];
  var Arg5585_0 = Arg5585[0], Arg5585_1 = Arg5585[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg5585_0, Arg5585_1, ""]);})}, 2, [], "js.str-join"];





Shen.fns["js.arg-list"] = [Shen.type_func, function shen_user_lambda5589(Arg5588) {
  if (Arg5588.length < 1) return [Shen.type_func, shen_user_lambda5589, 1, Arg5588];
  var Arg5588_0 = Arg5588[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join"], [Arg5588_0, ", "]);})}, 1, [], "js.arg-list"];





Shen.fns["js.arg-name"] = [Shen.type_func, function shen_user_lambda5593(Arg5592) {
  if (Arg5592.length < 2) return [Shen.type_func, shen_user_lambda5593, 2, Arg5592];
  var Arg5592_0 = Arg5592[0], Arg5592_1 = Arg5592[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg5592_1]), ("_" + Shen.call(Shen.fns["shen.app"], [Arg5592_0, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.arg-name"];





Shen.fns["js.tail-call-ret"] = [Shen.type_func, function shen_user_lambda5596(Arg5595) {
  if (Arg5595.length < 1) return [Shen.type_func, shen_user_lambda5596, 1, Arg5595];
  var Arg5595_0 = Arg5595[0];
  return ("(function() {\x0a  return " + Shen.call(Shen.fns["shen.app"], [Arg5595_0, ";})", [Shen.type_symbol, "shen.a"]]))}, 1, [], "js.tail-call-ret"];





Shen.fns["js.tail-call-expr"] = [Shen.type_func, function shen_user_lambda5600(Arg5599) {
  if (Arg5599.length < 2) return [Shen.type_func, shen_user_lambda5600, 2, Arg5599];
  var Arg5599_0 = Arg5599[0], Arg5599_1 = Arg5599[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5599_0, false, Arg5599_1]);})}, 2, [], "js.tail-call-expr"];





Shen.fns["js.cond-case"] = [Shen.type_func, function shen_user_lambda5604(Arg5603) {
  if (Arg5603.length < 2) return [Shen.type_func, shen_user_lambda5604, 2, Arg5603];
  var Arg5603_0 = Arg5603[0], Arg5603_1 = Arg5603[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-expr"], [Arg5603_0, Arg5603_1]);})}, 2, [], "js.cond-case"];





Shen.fns["js.emit-cond*"] = [Shen.type_func, function shen_user_lambda5609(Arg5608) {
  if (Arg5608.length < 3) return [Shen.type_func, shen_user_lambda5609, 3, Arg5608];
  var Arg5608_0 = Arg5608[0], Arg5608_1 = Arg5608[1], Arg5608_2 = Arg5608[2];
  return ((Shen.empty$question$(Arg5608_0))
  ? (function() {
  return Shen.simple_error("cond failure: no default branch");})
  : (((Shen.is_type(Arg5608_0, Shen.type_cons) && (Shen.is_type(Arg5608_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5608_0[1][1])) && (Shen.is_type(Arg5608_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5608_0[1][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5608_0[1][2][1], Arg5608_1, Arg5608_2]);})
  : (((Shen.is_type(Arg5608_0, Shen.type_cons) && (Shen.is_type(Arg5608_0[1], Shen.type_cons) && (Shen.is_type(Arg5608_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5608_0[1][2][2])))))
  ? ("((" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.cond-case"], [Arg5608_0[1][1], Arg5608_2]), (")\x0a  ? " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5608_0[1][2][1], Arg5608_1, Arg5608_2]), ("\x0a  : " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-cond*"], [Arg5608_0[2], Arg5608_1, Arg5608_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-cond*"]]);}))))}, 3, [], "js.emit-cond*"];





Shen.fns["js.emit-cond"] = [Shen.type_func, function shen_user_lambda5614(Arg5613) {
  if (Arg5613.length < 3) return [Shen.type_func, shen_user_lambda5614, 3, Arg5613];
  var Arg5613_0 = Arg5613[0], Arg5613_1 = Arg5613[1], Arg5613_2 = Arg5613[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond*"], [Arg5613_0, Arg5613_1, Arg5613_2]);})}, 3, [], "js.emit-cond"];





Shen.fns["js.emit-trap-error"] = [Shen.type_func, function shen_user_lambda5620(Arg5619) {
  if (Arg5619.length < 4) return [Shen.type_func, shen_user_lambda5620, 4, Arg5619];
  var Arg5619_0 = Arg5619[0], Arg5619_1 = Arg5619[1], Arg5619_2 = Arg5619[2], Arg5619_3 = Arg5619[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5619_2)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5619_0, false, Arg5619_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5619_1, false, Arg5619_3])),
  ("Shen.trap_error(" + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5619_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.emit-trap-error"], [Arg5619_0, Arg5619_1, false, Arg5619_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-trap-error"]]);})))}, 4, [], "js.emit-trap-error"];





Shen.fns["js.predicate-op"] = [Shen.type_func, function shen_user_lambda5664(Arg5663) {
  if (Arg5663.length < 4) return [Shen.type_func, shen_user_lambda5664, 4, Arg5663];
  var Arg5663_0 = Arg5663[0], Arg5663_1 = Arg5663[1], Arg5663_2 = Arg5663[2], Arg5663_3 = Arg5663[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5663_0)) && (typeof(Arg5663_1) == 'number')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5663_0)) && (typeof(Arg5663_1) == 'string')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5663_0)) && Shen.unwind_tail(Shen.$eq$(true, Arg5663_1))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5663_0)) && Shen.unwind_tail(Shen.$eq$(false, Arg5663_1))))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5663_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, Arg5663_1, []], Arg5663_2, Arg5663_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5663_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5663_1, false, Arg5663_3]), ") == 'string')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5663_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5663_1, false, Arg5663_3]), ") == 'number')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol?"], Arg5663_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5663_1, false, Arg5663_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_symbol", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons?"], Arg5663_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5663_1, false, Arg5663_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_cons", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tuple?"], Arg5663_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5663_1, false, Arg5663_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.fns['shen.tuple']", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector?"], Arg5663_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, Arg5663_1, []], Arg5663_2, Arg5663_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "empty?"], Arg5663_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5663_1, []], Arg5663_2, Arg5663_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "absvector?"], Arg5663_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, Arg5663_1, []], Arg5663_2, Arg5663_3]);})
  : Shen.fail_obj)))))))))))))}, 4, [], "js.predicate-op"];





Shen.fns["js.math-op"] = [Shen.type_func, function shen_user_lambda5694(Arg5693) {
  if (Arg5693.length < 4) return [Shen.type_func, shen_user_lambda5694, 4, Arg5693];
  var Arg5693_0 = Arg5693[0], Arg5693_1 = Arg5693[1], Arg5693_2 = Arg5693[2], Arg5693_3 = Arg5693[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5693_0)) && (Shen.is_type(Arg5693_1, Shen.type_cons) && (Shen.is_type(Arg5693_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5693_1[2][2]) && ((typeof(Arg5693_1[1]) == 'number') && (typeof(Arg5693_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5693_1[1] + Arg5693_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5693_0)) && (Shen.is_type(Arg5693_1, Shen.type_cons) && (Shen.is_type(Arg5693_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5693_1[2][2]) && ((typeof(Arg5693_1[1]) == 'number') && (typeof(Arg5693_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5693_1[1] - Arg5693_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5693_0)) && (Shen.is_type(Arg5693_1, Shen.type_cons) && (Shen.is_type(Arg5693_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5693_1[2][2]) && ((typeof(Arg5693_1[1]) == 'number') && (typeof(Arg5693_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5693_1[1] * Arg5693_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/"], Arg5693_0)) && (Shen.is_type(Arg5693_1, Shen.type_cons) && (Shen.is_type(Arg5693_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5693_1[2][2]) && ((typeof(Arg5693_1[1]) == 'number') && ((typeof(Arg5693_1[2][1]) == 'number') && (!Shen.unwind_tail(Shen.$eq$(Arg5693_1[2][1], 0))))))))))
  ? (function() {
  return Shen.str((Arg5693_1[1] / Arg5693_1[2][1]));})
  : (((Shen.is_type(Arg5693_1, Shen.type_cons) && (Shen.is_type(Arg5693_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5693_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5693_0, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], []]]]]])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5693_1[1], false, Arg5693_3]), (" " + Shen.call(Shen.fns["shen.app"], [Arg5693_0, (" " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5693_1[2][1], false, Arg5693_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))}, 4, [], "js.math-op"];





Shen.fns["js.equality-op"] = [Shen.type_func, function shen_user_lambda5717(Arg5716) {
  if (Arg5716.length < 3) return [Shen.type_func, shen_user_lambda5717, 3, Arg5716];
  var Arg5716_0 = Arg5716[0], Arg5716_1 = Arg5716[1], Arg5716_2 = Arg5716[2];
  return (((Shen.is_type(Arg5716_0, Shen.type_cons) && (Shen.is_type(Arg5716_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5716_0[2][2]) && ((typeof(Arg5716_0[1]) == 'number') && (typeof(Arg5716_0[2][1]) == 'number'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5716_0[1], Arg5716_0[2][1])));})
  : (((Shen.is_type(Arg5716_0, Shen.type_cons) && (Shen.is_type(Arg5716_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5716_0[2][2]) && ((typeof(Arg5716_0[1]) == 'string') && (typeof(Arg5716_0[2][1]) == 'string'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5716_0[1], Arg5716_0[2][1])));})
  : (((Shen.is_type(Arg5716_0, Shen.type_cons) && (Shen.is_type(Arg5716_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5716_0[2][2]) && (Shen.boolean$question$(Arg5716_0[1]) && Shen.boolean$question$(Arg5716_0[2][1]))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5716_0[1], Arg5716_0[2][1])));})
  : (((Shen.is_type(Arg5716_0, Shen.type_cons) && (Shen.is_type(Arg5716_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5716_0[2][1]) && Shen.empty$question$(Arg5716_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5716_0[1], []], Arg5716_1, Arg5716_2]);})
  : (((Shen.is_type(Arg5716_0, Shen.type_cons) && (Shen.empty$question$(Arg5716_0[1]) && (Shen.is_type(Arg5716_0[2], Shen.type_cons) && Shen.empty$question$(Arg5716_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], Arg5716_0[2], Arg5716_1, Arg5716_2]);})
  : (((Shen.is_type(Arg5716_0, Shen.type_cons) && (Shen.is_type(Arg5716_0[2], Shen.type_cons) && Shen.empty$question$(Arg5716_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "="], Arg5716_0, Arg5716_1, Arg5716_2]);})
  : Shen.fail_obj))))))}, 3, [], "js.equality-op"];





Shen.fns["js.order-op"] = [Shen.type_func, function shen_user_lambda5740(Arg5739) {
  if (Arg5739.length < 4) return [Shen.type_func, shen_user_lambda5740, 4, Arg5739];
  var Arg5739_0 = Arg5739[0], Arg5739_1 = Arg5739[1], Arg5739_2 = Arg5739[2], Arg5739_3 = Arg5739[3];
  var R0, R1;
  return (((Shen.is_type(Arg5739_1, Shen.type_cons) && (Shen.is_type(Arg5739_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5739_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5739_0, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<="], []]]]]])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5739_1[1], false, Arg5739_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5739_1[2][1], false, Arg5739_3])),
  ("(" + Shen.call(Shen.fns["shen.app"], [R0, (" " + Shen.call(Shen.fns["shen.app"], [Arg5739_0, (" " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : Shen.fail_obj)}, 4, [], "js.order-op"];





Shen.fns["js.logic-op"] = [Shen.type_func, function shen_user_lambda5784(Arg5783) {
  if (Arg5783.length < 4) return [Shen.type_func, shen_user_lambda5784, 4, Arg5783];
  var Arg5783_0 = Arg5783[0], Arg5783_1 = Arg5783[1], Arg5783_2 = Arg5783[2], Arg5783_3 = Arg5783[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5783_0)) && (Shen.is_type(Arg5783_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5783_1[1])) && Shen.empty$question$(Arg5783_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5783_0)) && (Shen.is_type(Arg5783_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5783_1[1])) && Shen.empty$question$(Arg5783_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5783_0)) && (Shen.is_type(Arg5783_1, Shen.type_cons) && Shen.empty$question$(Arg5783_1[2]))))
  ? ("(!" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5783_1[1], false, Arg5783_3]), ")", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5783_0)) && (Shen.is_type(Arg5783_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5783_1[1])) && (Shen.is_type(Arg5783_1[2], Shen.type_cons) && Shen.empty$question$(Arg5783_1[2][2]))))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5783_0)) && (Shen.is_type(Arg5783_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5783_1[1])) && (Shen.is_type(Arg5783_1[2], Shen.type_cons) && Shen.empty$question$(Arg5783_1[2][2]))))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5783_0)) && (Shen.is_type(Arg5783_1, Shen.type_cons) && (Shen.is_type(Arg5783_1[2], Shen.type_cons) && Shen.empty$question$(Arg5783_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5783_1[1], false, Arg5783_3]), (" && " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5783_1[2][1], false, Arg5783_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5783_0)) && (Shen.is_type(Arg5783_1, Shen.type_cons) && (Shen.is_type(Arg5783_1[2], Shen.type_cons) && Shen.empty$question$(Arg5783_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5783_1[1], false, Arg5783_3]), (" || " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5783_1[2][1], false, Arg5783_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))))}, 4, [], "js.logic-op"];





Shen.fns["js.emit-set*"] = [Shen.type_func, function shen_user_lambda5790(Arg5789) {
  if (Arg5789.length < 4) return [Shen.type_func, shen_user_lambda5790, 4, Arg5789];
  var Arg5789_0 = Arg5789[0], Arg5789_1 = Arg5789[1], Arg5789_2 = Arg5789[2], Arg5789_3 = Arg5789[3];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5789_3)))
  ? ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5789_0)])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [Arg5789_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5789_3)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5789_0, false, Arg5789_2])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("[1]] = " + Shen.call(Shen.fns["shen.app"], [Arg5789_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-set*"]]);})))}, 4, [], "js.emit-set*"];





Shen.fns["js.emit-set"] = [Shen.type_func, function shen_user_lambda5795(Arg5794) {
  if (Arg5794.length < 3) return [Shen.type_func, shen_user_lambda5795, 3, Arg5794];
  var Arg5794_0 = Arg5794[0], Arg5794_1 = Arg5794[1], Arg5794_2 = Arg5794[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-set*"], [Arg5794_0, Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5794_1, false, Arg5794_2]), Arg5794_2, Shen.is_type(Arg5794_0, Shen.type_symbol)]);})}, 3, [], "js.emit-set"];





Shen.fns["js.emit-value"] = [Shen.type_func, function shen_user_lambda5800(Arg5799) {
  if (Arg5799.length < 3) return [Shen.type_func, shen_user_lambda5800, 3, Arg5799];
  var Arg5799_0 = Arg5799[0], Arg5799_1 = Arg5799[1], Arg5799_2 = Arg5799[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5799_2)))
  ? ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5799_0)]), "])", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5799_2)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5799_0, false, Arg5799_1])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, "[1]])", [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-value"]]);})))}, 3, [], "js.emit-value"];





Shen.fns["js.basic-op"] = [Shen.type_func, function shen_user_lambda5854(Arg5853) {
  if (Arg5853.length < 4) return [Shen.type_func, shen_user_lambda5854, 4, Arg5853];
  var Arg5853_0 = Arg5853[0], Arg5853_1 = Arg5853[1], Arg5853_2 = Arg5853[2], Arg5853_3 = Arg5853[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("true", Arg5853_1[1])) && Shen.empty$question$(Arg5853_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("false", Arg5853_1[1])) && Shen.empty$question$(Arg5853_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.empty$question$(Arg5853_1[2]) && (typeof(Arg5853_1[1]) == 'string')))))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Arg5853_1[1]]), "]", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && Shen.empty$question$(Arg5853_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "intern"], Arg5853_1, Arg5853_2, Arg5853_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.is_type(Arg5853_1[2], Shen.type_cons) && Shen.empty$question$(Arg5853_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[1], false, Arg5853_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[2][1], false, Arg5853_3])),
  ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.is_type(Arg5853_1[2], Shen.type_cons) && Shen.empty$question$(Arg5853_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[1], false, Arg5853_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[2][1], false, Arg5853_3])),
  ("[Shen.fns['shen.tuple'], " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.is_type(Arg5853_1[2], Shen.type_cons) && Shen.empty$question$(Arg5853_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set"], [Arg5853_1[1], Arg5853_1[2][1], Arg5853_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "value"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && Shen.empty$question$(Arg5853_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-value"], [Arg5853_1[1], Arg5853_3, Shen.is_type(Arg5853_1[1], Shen.type_symbol)]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "thaw"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && Shen.empty$question$(Arg5853_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-thaw"], [Arg5853_1[1], Arg5853_2, Arg5853_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && Shen.empty$question$(Arg5853_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[1], true, Arg5853_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "hd"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && Shen.empty$question$(Arg5853_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[1], false, Arg5853_3]), "[1]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tl"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && Shen.empty$question$(Arg5853_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[1], false, Arg5853_3]), "[2]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.is_type(Arg5853_1[2], Shen.type_cons) && Shen.empty$question$(Arg5853_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[1], false, Arg5853_3]), (" + " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[2][1], false, Arg5853_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pos"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.is_type(Arg5853_1[2], Shen.type_cons) && Shen.empty$question$(Arg5853_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[1], false, Arg5853_3]), ("[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[2][1], false, Arg5853_3]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "address->"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.is_type(Arg5853_1[2], Shen.type_cons) && (Shen.is_type(Arg5853_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg5853_1[2][2][2]))))))
  ? ("Shen.absvector_set(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[1], false, Arg5853_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[2][1], false, Arg5853_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[2][2][1], false, Arg5853_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-address"], Arg5853_0)) && (Shen.is_type(Arg5853_1, Shen.type_cons) && (Shen.is_type(Arg5853_1[2], Shen.type_cons) && Shen.empty$question$(Arg5853_1[2][2])))))
  ? ("Shen.absvector_ref(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[1], false, Arg5853_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5853_1[2][1], false, Arg5853_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj))))))))))))))))}, 4, [], "js.basic-op"];





Shen.fns["js.int-funcall*"] = [Shen.type_func, function shen_user_lambda5861(Arg5860) {
  if (Arg5860.length < 5) return [Shen.type_func, shen_user_lambda5861, 5, Arg5860];
  var Arg5860_0 = Arg5860[0], Arg5860_1 = Arg5860[1], Arg5860_2 = Arg5860[2], Arg5860_3 = Arg5860[3], Arg5860_4 = Arg5860[4];
  var R0;
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg5860_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5860_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5860_0, Arg5860_1, false, false, Arg5860_4]);})
  : (((Shen.unwind_tail(Shen.$eq$(true, Arg5860_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5860_3))))
  ? ((R0 = Shen.call(Shen.fns["js.int-funcall*"], [Arg5860_0, Arg5860_1, false, false, Arg5860_4])),
  ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5860_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5860_3))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5863(Arg5862) {
  if (Arg5862.length < 2) return [Shen.type_func, shen_user_lambda5863, 2, Arg5862];
  var Arg5862_0 = Arg5862[0], Arg5862_1 = Arg5862[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5862_1, false, Arg5862_0]);})}, 2, [Arg5860_4], undefined], Arg5860_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.intfunc-name"], [Arg5860_0]), ("(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);}))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5860_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5860_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.int-funcall*"], [Arg5860_0, Arg5860_1, false, false, Arg5860_4])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-funcall*"]]);})))))}, 5, [], "js.int-funcall*"];





Shen.fns["js.int-funcall"] = [Shen.type_func, function shen_user_lambda5869(Arg5868) {
  if (Arg5868.length < 4) return [Shen.type_func, shen_user_lambda5869, 4, Arg5868];
  var Arg5868_0 = Arg5868[0], Arg5868_1 = Arg5868[1], Arg5868_2 = Arg5868[2], Arg5868_3 = Arg5868[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["element?"], [Arg5868_0, (Shen.globals["js.tail-internals"])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5868_0, Arg5868_1, R0, Arg5868_2, Arg5868_3]);}))}, 4, [], "js.int-funcall"];





Shen.fns["js.int-curry"] = [Shen.type_func, function shen_user_lambda5875(Arg5874) {
  if (Arg5874.length < 4) return [Shen.type_func, shen_user_lambda5875, 4, Arg5874];
  var Arg5874_0 = Arg5874[0], Arg5874_1 = Arg5874[1], Arg5874_2 = Arg5874[2], Arg5874_3 = Arg5874[3];
  var R0, R1;
  return ((R0 = ("Shen.fns[\"" + Shen.call(Shen.fns["shen.app"], [Arg5874_0, "\"][1]", [Shen.type_symbol, "shen.a"]]))),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5877(Arg5876) {
  if (Arg5876.length < 2) return [Shen.type_func, shen_user_lambda5877, 2, Arg5876];
  var Arg5876_0 = Arg5876[0], Arg5876_1 = Arg5876[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5876_1, false, Arg5876_0]);})}, 2, [Arg5874_3], undefined], Arg5874_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [Shen.call(Shen.fns["length"], [Arg5874_1]), R0, R1, []]);}))}, 4, [], "js.int-curry"];





Shen.fns["js.internal-op*"] = [Shen.type_func, function shen_user_lambda5888(Arg5887) {
  if (Arg5887.length < 5) return [Shen.type_func, shen_user_lambda5888, 5, Arg5887];
  var Arg5887_0 = Arg5887[0], Arg5887_1 = Arg5887[1], Arg5887_2 = Arg5887[2], Arg5887_3 = Arg5887[3], Arg5887_4 = Arg5887[4];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg5887_1]), Shen.call(Shen.fns["length"], [Arg5887_2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [Arg5887_0, Arg5887_2, Arg5887_3, Arg5887_4]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.int-curry"], [Arg5887_0, Arg5887_1, Arg5887_2, Arg5887_4]);}))}, 5, [], "js.internal-op*"];





Shen.fns["js.internal-op"] = [Shen.type_func, function shen_user_lambda5894(Arg5893) {
  if (Arg5893.length < 4) return [Shen.type_func, shen_user_lambda5894, 4, Arg5893];
  var Arg5893_0 = Arg5893[0], Arg5893_1 = Arg5893[1], Arg5893_2 = Arg5893[2], Arg5893_3 = Arg5893[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.int-func-args"], [Arg5893_0])),
  Shen.call(Shen.fns["js.intfunc-name"], [Arg5893_0]),
  ((Shen.empty$question$(R0))
  ? Shen.fail_obj
  : (function() {
  return Shen.call_tail(Shen.fns["js.internal-op*"], [Arg5893_0, R0, Arg5893_1, Arg5893_2, Arg5893_3]);})))}, 4, [], "js.internal-op"];





Shen.fns["js.emit-do"] = [Shen.type_func, function shen_user_lambda5900(Arg5899) {
  if (Arg5899.length < 4) return [Shen.type_func, shen_user_lambda5900, 4, Arg5899];
  var Arg5899_0 = Arg5899[0], Arg5899_1 = Arg5899[1], Arg5899_2 = Arg5899[2], Arg5899_3 = Arg5899[3];
  var R0, R1;
  return (((Shen.is_type(Arg5899_0, Shen.type_cons) && Shen.empty$question$(Arg5899_0[2])))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5902(Arg5901) {
  if (Arg5901.length < 2) return [Shen.type_func, shen_user_lambda5902, 2, Arg5901];
  var Arg5901_0 = Arg5901[0], Arg5901_1 = Arg5901[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5901_1, false, Arg5901_0]);})}, 2, [Arg5899_2], undefined], Shen.call(Shen.fns["reverse"], [Arg5899_3])])),
  (R1 = ",\x0a  "),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.str-join"], [R0, R1]), (",\x0a  " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5899_0[1], Arg5899_1, Arg5899_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.is_type(Arg5899_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5899_0[2], Arg5899_1, Arg5899_2, [Shen.type_cons, Arg5899_0[1], Arg5899_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-do"]]);})))}, 4, [], "js.emit-do"];





Shen.fns["js.std-op"] = [Shen.type_func, function shen_user_lambda5928(Arg5927) {
  if (Arg5927.length < 4) return [Shen.type_func, shen_user_lambda5928, 4, Arg5927];
  var Arg5927_0 = Arg5927[0], Arg5927_1 = Arg5927[1], Arg5927_2 = Arg5927[2], Arg5927_3 = Arg5927[3];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda5930(Arg5929) {
  if (Arg5929.length < 4) return [Shen.type_func, shen_user_lambda5930, 4, Arg5929];
  var Arg5929_0 = Arg5929[0], Arg5929_1 = Arg5929[1], Arg5929_2 = Arg5929[2], Arg5929_3 = Arg5929[3];
  var R0, R1, R2, R3, R4;
  return ((R4 = Shen.call(Shen.fns["js.math-op"], [Arg5929_0, Arg5929_1, Arg5929_2, Arg5929_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = [Shen.type_func, function shen_user_lambda5932(Arg5931) {
  if (Arg5931.length < 4) return [Shen.type_func, shen_user_lambda5932, 4, Arg5931];
  var Arg5931_0 = Arg5931[0], Arg5931_1 = Arg5931[1], Arg5931_2 = Arg5931[2], Arg5931_3 = Arg5931[3];
  var R0, R1, R2, R3, R4;
  return ((R4 = Shen.call(Shen.fns["js.logic-op"], [Arg5931_0, Arg5931_1, Arg5931_2, Arg5931_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.order-op"], [Arg5931_0, Arg5931_1, Arg5931_2, Arg5931_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.basic-op"], [Arg5931_0, Arg5931_1, Arg5931_2, Arg5931_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = [Shen.type_func, function shen_user_lambda5934(Arg5933) {
  if (Arg5933.length < 4) return [Shen.type_func, shen_user_lambda5934, 4, Arg5933];
  var Arg5933_0 = Arg5933[0], Arg5933_1 = Arg5933[1], Arg5933_2 = Arg5933[2], Arg5933_3 = Arg5933[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.trap-error"], Arg5933_0)) && (Shen.is_type(Arg5933_1, Shen.type_cons) && (Shen.is_type(Arg5933_1[2], Shen.type_cons) && Shen.empty$question$(Arg5933_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-trap-error"], [Arg5933_1[1], Arg5933_1[2][1], Arg5933_2, Arg5933_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg5933_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5933_1, Arg5933_2, Arg5933_3, []]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5933_0)) && Shen.empty$question$(Arg5933_1)))
  ? "Shen.fail_obj"
  : Shen.fail_obj)))}, 4, [Arg5931_0, Arg5931_1, Arg5931_2, Arg5931_3], undefined]),
  ((Shen.is_type(Arg5931_0, Shen.type_symbol))
  ? ((R3 = Shen.call(Shen.fns["js.internal-op"], [Arg5931_0, Arg5931_1, Arg5931_2, Arg5931_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4))
  : R4))
  : R4))}, 4, [Arg5929_0, Arg5929_1, Arg5929_2, Arg5929_3], undefined]),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg5929_0)))
  ? ((R3 = Shen.call(Shen.fns["js.equality-op"], [Arg5929_1, Arg5929_2, Arg5929_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4))}, 4, [Arg5927_0, Arg5927_1, Arg5927_2, Arg5927_3], undefined]),
  (((Shen.is_type(Arg5927_1, Shen.type_cons) && Shen.empty$question$(Arg5927_1[2])))
  ? ((R1 = Shen.call(Shen.fns["js.predicate-op"], [Arg5927_0, Arg5927_1[1], Arg5927_2, Arg5927_3])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))}, 4, [], "js.std-op"];





Shen.fns["js.mk-regs-aux"] = [Shen.type_func, function shen_user_lambda5946(Arg5945) {
  if (Arg5945.length < 5) return [Shen.type_func, shen_user_lambda5946, 5, Arg5945];
  var Arg5945_0 = Arg5945[0], Arg5945_1 = Arg5945[1], Arg5945_2 = Arg5945[2], Arg5945_3 = Arg5945[3], Arg5945_4 = Arg5945[4];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5945_1, Arg5945_0)))
  ? Arg5945_4
  : ((R0 = Shen.call(Shen.fns["@s"], [Arg5945_4, Shen.call(Shen.fns["@s"], [Arg5945_3, Shen.call(Shen.fns["@s"], [Shen.str(Shen.call(Shen.fns["js.context-varname"], [Arg5945_2])), Shen.str(Arg5945_0)])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [(Arg5945_0 + 1), Arg5945_1, Arg5945_2, ", ", R0]);})))}, 5, [], "js.mk-regs-aux"];





Shen.fns["js.mk-regs"] = [Shen.type_func, function shen_user_lambda5949(Arg5948) {
  if (Arg5948.length < 1) return [Shen.type_func, shen_user_lambda5949, 1, Arg5948];
  var Arg5948_0 = Arg5948[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [0, Shen.call(Shen.fns["js.context-nregs"], [Arg5948_0]), Arg5948_0, "var ", ""]);})}, 1, [], "js.mk-regs"];





Shen.fns["js.mk-regs-str"] = [Shen.type_func, function shen_user_lambda5952(Arg5951) {
  if (Arg5951.length < 1) return [Shen.type_func, shen_user_lambda5952, 1, Arg5951];
  var Arg5951_0 = Arg5951[0];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["js.context-nregs"], [Arg5951_0]), 0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-regs"], [Arg5951_0]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 1, [], "js.mk-regs-str"];





Shen.fns["js.mk-args-str-aux"] = [Shen.type_func, function shen_user_lambda5964(Arg5963) {
  if (Arg5963.length < 5) return [Shen.type_func, shen_user_lambda5964, 5, Arg5963];
  var Arg5963_0 = Arg5963[0], Arg5963_1 = Arg5963[1], Arg5963_2 = Arg5963[2], Arg5963_3 = Arg5963[3], Arg5963_4 = Arg5963[4];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5963_1, Arg5963_0)))
  ? Arg5963_4
  : ((R0 = "~A~A~A = ~A[~A]"),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5963_2])),
  (R2 = Shen.call(Shen.fns["js.arg-name"], [Arg5963_1, Arg5963_2])),
  (R2 = Shen.call(Shen.fns["shen.insert"], [Arg5963_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [Arg5963_3, Shen.call(Shen.fns["shen.insert"], [Arg5963_4, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-args-str-aux"], [Arg5963_0, (Arg5963_1 + 1), Arg5963_2, ", ", R2]);})))}, 5, [], "js.mk-args-str-aux"];





Shen.fns["js.mk-args-str"] = [Shen.type_func, function shen_user_lambda5970(Arg5969) {
  if (Arg5969.length < 2) return [Shen.type_func, shen_user_lambda5970, 2, Arg5969];
  var Arg5969_0 = Arg5969[0], Arg5969_1 = Arg5969[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5969_0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-args-str-aux"], [Arg5969_0, 0, Arg5969_1, "var ", ""]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 2, [], "js.mk-args-str"];





Shen.fns["js.emit-func-obj"] = [Shen.type_func, function shen_user_lambda5976(Arg5975) {
  if (Arg5975.length < 4) return [Shen.type_func, shen_user_lambda5976, 4, Arg5975];
  var Arg5975_0 = Arg5975[0], Arg5975_1 = Arg5975[1], Arg5975_2 = Arg5975[2], Arg5975_3 = Arg5975[3];
  var R0, R1;
  return ((((Shen.unwind_tail(Shen.$eq$(Arg5975_3, "")) || Shen.empty$question$(Arg5975_3)))
  ? (R0 = "undefined")
  : (R0 = Arg5975_3)),
  (R1 = Shen.call(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [Arg5975_2, ", "]), "]"])])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], ["S", Shen.call(Shen.fns["@s"], ["h", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], [".", Shen.call(Shen.fns["@s"], ["t", Shen.call(Shen.fns["@s"], ["y", Shen.call(Shen.fns["@s"], ["p", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["_", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["c", Shen.call(Shen.fns["@s"], [",", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [[Shen.type_cons, Arg5975_1, [Shen.type_cons, Shen.str(Arg5975_0), [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]], ", "]), "]"])])])])])])])])])])])])])])])])])]);}))}, 4, [], "js.emit-func-obj"];





Shen.fns["js.emit-func-closure"] = [Shen.type_func, function shen_user_lambda5981(Arg5980) {
  if (Arg5980.length < 3) return [Shen.type_func, shen_user_lambda5981, 3, Arg5980];
  var Arg5980_0 = Arg5980[0], Arg5980_1 = Arg5980[1], Arg5980_2 = Arg5980[2];
  var R0, R1;
  return ((R0 = "[~A, ~A, ~A, ~A]"),
  (R1 = "Shen.type_func"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [Arg5980_2, Shen.call(Shen.fns["shen.insert"], [Arg5980_0, Shen.call(Shen.fns["shen.insert"], [Arg5980_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])]);}))}, 3, [], "js.emit-func-closure"];





Shen.fns["js.emit-func-body"] = [Shen.type_func, function shen_user_lambda5987(Arg5986) {
  if (Arg5986.length < 4) return [Shen.type_func, shen_user_lambda5987, 4, Arg5986];
  var Arg5986_0 = Arg5986[0], Arg5986_1 = Arg5986[1], Arg5986_2 = Arg5986[2], Arg5986_3 = Arg5986[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.func-name"], [Arg5986_0])),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5986_3])),
  (R2 = Shen.call(Shen.fns["js.emit-func-closure"], [Arg5986_1, R0, R1])),
  (R2 = ("if (" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg5986_3]), (".length < " + Shen.call(Shen.fns["shen.app"], [Arg5986_1, (") return " + Shen.call(Shen.fns["shen.app"], [R2, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))),
  (R3 = "function ~A(~A) {~%  ~A;~%  ~A~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5986_2, true, Arg5986_3])),
  (R5 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5986_3])),
  (R6 = Shen.call(Shen.fns["js.mk-args-str"], [Arg5986_1, Arg5986_3])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R5, Shen.call(Shen.fns["shen.insert"], [R6, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.proc-nl"], [R3])])])])])])]);}))}, 4, [], "js.emit-func-body"];





Shen.fns["js.emit-mk-func"] = [Shen.type_func, function shen_user_lambda5993(Arg5992) {
  if (Arg5992.length < 4) return [Shen.type_func, shen_user_lambda5993, 4, Arg5992];
  var Arg5992_0 = Arg5992[0], Arg5992_1 = Arg5992[1], Arg5992_2 = Arg5992[2], Arg5992_3 = Arg5992[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5992_0)])),
  Shen.call(Shen.fns["js.func-name"], [Arg5992_0]),
  (R1 = Shen.call(Shen.fns["length"], [Arg5992_1])),
  (R2 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R2 = Shen.call(Shen.fns["js.emit-func-body"], [R2, R1, Arg5992_2, Arg5992_3])),
  (R2 = Shen.call(Shen.fns["js.emit-func-obj"], [R1, R2, [], R0])),
  ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [R2, ";\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))}, 4, [], "js.emit-mk-func"];





Shen.fns["js.emit-mk-closure"] = [Shen.type_func, function shen_user_lambda5999(Arg5998) {
  if (Arg5998.length < 4) return [Shen.type_func, shen_user_lambda5999, 4, Arg5998];
  var Arg5998_0 = Arg5998[0], Arg5998_1 = Arg5998[1], Arg5998_2 = Arg5998[2], Arg5998_3 = Arg5998[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5998_3])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R2 = (Shen.call(Shen.fns["length"], [Arg5998_1]) + Shen.call(Shen.fns["length"], [Arg5998_0]))),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  (R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [R0, R2, Arg5998_2, R1])),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5998_3, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6001(Arg6000) {
  if (Arg6000.length < 2) return [Shen.type_func, shen_user_lambda6001, 2, Arg6000];
  var Arg6000_0 = Arg6000[0], Arg6000_1 = Arg6000[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg6000_1, false, Arg6000_0]);})}, 2, [Arg5998_3], undefined], Arg5998_1])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [R2, R0, R1, []]);}))}, 4, [], "js.emit-mk-closure"];





Shen.fns["js.emit-mk-toplevel"] = [Shen.type_func, function shen_user_lambda6005(Arg6004) {
  if (Arg6004.length < 2) return [Shen.type_func, shen_user_lambda6005, 2, Arg6004];
  var Arg6004_0 = Arg6004[0], Arg6004_1 = Arg6004[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "js.shen-js-toplevel"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [R0, 0, Arg6004_0, Arg6004_1])),
  ("Shen.call_toplevel(" + (R0 + ");")))}, 2, [], "js.emit-mk-toplevel"];





Shen.fns["js.emit-thaw"] = [Shen.type_func, function shen_user_lambda6010(Arg6009) {
  if (Arg6009.length < 3) return [Shen.type_func, shen_user_lambda6010, 3, Arg6009];
  var Arg6009_0 = Arg6009[0], Arg6009_1 = Arg6009[1], Arg6009_2 = Arg6009[2];
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg6009_1)))
  ? ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-thaw"], [Arg6009_0, true, Arg6009_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg6009_1)))
  ? ("Shen.thaw(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg6009_0, false, Arg6009_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-thaw"]]);})))}, 3, [], "js.emit-thaw"];





Shen.fns["js.emit-freeze"] = [Shen.type_func, function shen_user_lambda6015(Arg6014) {
  if (Arg6014.length < 3) return [Shen.type_func, shen_user_lambda6015, 3, Arg6014];
  var Arg6014_0 = Arg6014[0], Arg6014_1 = Arg6014[1], Arg6014_2 = Arg6014[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-closure"], [[], Arg6014_0, Arg6014_1, Arg6014_2]);})}, 3, [], "js.emit-freeze"];





Shen.fns["js.emit-get-arg"] = [Shen.type_func, function shen_user_lambda6019(Arg6018) {
  if (Arg6018.length < 2) return [Shen.type_func, shen_user_lambda6019, 2, Arg6018];
  var Arg6018_0 = Arg6018[0], Arg6018_1 = Arg6018[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.arg-name"], [Arg6018_0, Arg6018_1]);})}, 2, [], "js.emit-get-arg"];





Shen.fns["js.emit-set-reg"] = [Shen.type_func, function shen_user_lambda6024(Arg6023) {
  if (Arg6023.length < 3) return [Shen.type_func, shen_user_lambda6024, 3, Arg6023];
  var Arg6023_0 = Arg6023[0], Arg6023_1 = Arg6023[1], Arg6023_2 = Arg6023[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg6023_1, false, Arg6023_2])),
  Shen.call(Shen.fns["js.context-nregs->"], [Arg6023_2, Shen.call(Shen.fns["js.max"], [(Arg6023_0 + 1), Shen.call(Shen.fns["js.context-nregs"], [Arg6023_2])])]),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg6023_2]), Shen.call(Shen.fns["shen.app"], [Arg6023_0, (" = " + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])))}, 3, [], "js.emit-set-reg"];





Shen.fns["js.emit-get-reg"] = [Shen.type_func, function shen_user_lambda6028(Arg6027) {
  if (Arg6027.length < 2) return [Shen.type_func, shen_user_lambda6028, 2, Arg6027];
  var Arg6027_0 = Arg6027[0], Arg6027_1 = Arg6027[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg6027_1]), Shen.call(Shen.fns["shen.app"], [Arg6027_0, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.emit-get-reg"];





Shen.fns["js.func-arg"] = [Shen.type_func, function shen_user_lambda6032(Arg6031) {
  if (Arg6031.length < 2) return [Shen.type_func, shen_user_lambda6032, 2, Arg6031];
  var Arg6031_0 = Arg6031[0], Arg6031_1 = Arg6031[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg6031_1, false, Arg6031_0]);})}, 2, [], "js.func-arg"];





Shen.fns["js.emit-funcall*"] = [Shen.type_func, function shen_user_lambda6038(Arg6037) {
  if (Arg6037.length < 4) return [Shen.type_func, shen_user_lambda6038, 4, Arg6037];
  var Arg6037_0 = Arg6037[0], Arg6037_1 = Arg6037[1], Arg6037_2 = Arg6037[2], Arg6037_3 = Arg6037[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg6037_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6040(Arg6039) {
  if (Arg6039.length < 2) return [Shen.type_func, shen_user_lambda6040, 2, Arg6039];
  var Arg6039_0 = Arg6039[0], Arg6039_1 = Arg6039[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg6039_1, false, Arg6039_0]);})}, 2, [Arg6037_3], undefined], Arg6037_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R1 = "Shen.call_tail"),
  (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["shen.app"], [R1, ("(" + Shen.call(Shen.fns["shen.app"], [Arg6037_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])]);}))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg6037_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6042(Arg6041) {
  if (Arg6041.length < 2) return [Shen.type_func, shen_user_lambda6042, 2, Arg6041];
  var Arg6041_0 = Arg6041[0], Arg6041_1 = Arg6041[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg6041_1, false, Arg6041_0]);})}, 2, [Arg6037_3], undefined], Arg6037_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  ("Shen.call(" + Shen.call(Shen.fns["shen.app"], [Arg6037_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-funcall*"]]);})))}, 4, [], "js.emit-funcall*"];





Shen.fns["js.emit-funcall"] = [Shen.type_func, function shen_user_lambda6048(Arg6047) {
  if (Arg6047.length < 4) return [Shen.type_func, shen_user_lambda6048, 4, Arg6047];
  var Arg6047_0 = Arg6047[0], Arg6047_1 = Arg6047[1], Arg6047_2 = Arg6047[2], Arg6047_3 = Arg6047[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg6047_0)])),
  (R0 = ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, "]", [Shen.type_symbol, "shen.a"]]))),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R0, Arg6047_1, Arg6047_2, Arg6047_3]);}))}, 4, [], "js.emit-funcall"];





Shen.fns["js.js-from-kl-expr"] = [Shen.type_func, function shen_user_lambda6053(Arg6052) {
  if (Arg6052.length < 3) return [Shen.type_func, shen_user_lambda6053, 3, Arg6052];
  var Arg6052_0 = Arg6052[0], Arg6052_1 = Arg6052[1], Arg6052_2 = Arg6052[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr*"], [Arg6052_0, Arg6052_1, Arg6052_2])),
  (((typeof(R0) == 'string'))
  ? R0
  : (function() {
  return Shen.simple_error(("ERROR: expr " + Shen.call(Shen.fns["shen.app"], [Arg6052_0, (" => " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]])));})))}, 3, [], "js.js-from-kl-expr"];





Shen.fns["js.js-from-kl-expr*"] = [Shen.type_func, function shen_user_lambda6120(Arg6119) {
  if (Arg6119.length < 3) return [Shen.type_func, shen_user_lambda6120, 3, Arg6119];
  var Arg6119_0 = Arg6119[0], Arg6119_1 = Arg6119[1], Arg6119_2 = Arg6119[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6119_0))
  ? "[]"
  : (((typeof(Arg6119_0) == 'number'))
  ? (function() {
  return Shen.str(Arg6119_0);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg6119_0, Shen.fail_obj)))
  ? "shen_fail_obj"
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg6119_0)))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg6119_0)))
  ? "false"
  : ((Shen.is_type(Arg6119_0, Shen.type_symbol))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.str(Arg6119_0), "]", [Shen.type_symbol, "shen.s"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bar!"], Arg6119_0)))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], ["|", "]", [Shen.type_symbol, "shen.s"]]))
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2][2]))))))
  ? ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg6119_0[2][1], false, Arg6119_2]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg6119_0[2][2][1], false, Arg6119_2]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg6119_0[2][1], Arg6119_1, Arg6119_2]);})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg6119_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [Arg6119_0[2], Arg6119_1, Arg6119_2]);})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [[Shen.type_cons, [Shen.type_cons, Arg6119_0[2][1], [Shen.type_cons, Arg6119_0[2][2][1], []]], [Shen.type_cons, [Shen.type_cons, true, Arg6119_0[2][2][2]], []]], Arg6119_1, Arg6119_2]);})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2])))))
  ? (function() {
  return Shen.simple_error("Wrong freeze code!");})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.freeze"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-freeze"], [Arg6119_0[2][2][1], Arg6119_0[2][2][2][1], Arg6119_2]);})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.arg"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-arg"], [Arg6119_0[2][1], Arg6119_2]);})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-reg"], [Arg6119_0[2][1], Arg6119_2]);})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg->"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set-reg"], [Arg6119_0[2][1], Arg6119_0[2][2][1], Arg6119_2]);})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.func"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-func"], [Arg6119_0[2][1], Arg6119_0[2][2][1], Arg6119_0[2][2][2][2][1], Arg6119_2]);})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.closure"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-closure"], [Arg6119_0[2][1], Arg6119_0[2][2][2][1], Arg6119_0[2][2][2][2][1], Arg6119_2]);})
  : (((Shen.is_type(Arg6119_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.toplevel"], Arg6119_0[1])) && (Shen.is_type(Arg6119_0[2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6119_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6119_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-toplevel"], [Arg6119_0[2][2][2][2][1], Arg6119_2]);})
  : ((R0 = [Shen.type_func, function shen_user_lambda6122(Arg6121) {
  if (Arg6121.length < 3) return [Shen.type_func, shen_user_lambda6122, 3, Arg6121];
  var Arg6121_0 = Arg6121[0], Arg6121_1 = Arg6121[1], Arg6121_2 = Arg6121[2];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg6121_0, Shen.type_cons) && Shen.is_type(Arg6121_0[1], Shen.type_cons)))
  ? ((R3 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg6121_0[1], false, Arg6121_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R3, Arg6121_0[2], Arg6121_1, Arg6121_2]);}))
  : ((Shen.is_type(Arg6121_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall"], [Arg6121_0[1], Arg6121_0[2], Arg6121_1, Arg6121_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.esc-obj"], [Arg6121_0]);})))}, 3, [Arg6119_0, Arg6119_1, Arg6119_2], undefined]),
  ((Shen.is_type(Arg6119_0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["js.std-op"], [Arg6119_0[1], Arg6119_0[2], Arg6119_1, Arg6119_2])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))))))))))))))))))))}, 3, [], "js.js-from-kl-expr*"];





Shen.fns["js.js-from-kl-toplevel-expr"] = [Shen.type_func, function shen_user_lambda6126(Arg6125) {
  if (Arg6125.length < 2) return [Shen.type_func, shen_user_lambda6126, 2, Arg6125];
  var Arg6125_0 = Arg6125[0], Arg6125_1 = Arg6125[1];
  var R0, R1;
  return (((typeof(Arg6125_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg6125_0, false, Arg6125_1]), ";\x0a", [Shen.type_symbol, "shen.a"]]);})
  : ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg6125_0, false, Arg6125_1])),
  (R1 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg6125_1])),
  (((Shen.call(Shen.fns["js.context-nregs"], [Arg6125_1]) > 0))
  ? ("((function() {\x0a  " + Shen.call(Shen.fns["shen.app"], [R1, ("return " + Shen.call(Shen.fns["shen.app"], [R0, "})());\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [R0, ";", [Shen.type_symbol, "shen.a"]]);}))))}, 2, [], "js.js-from-kl-toplevel-expr"];





Shen.fns["js.js-from-kl-toplevel"] = [Shen.type_func, function shen_user_lambda6146(Arg6145) {
  if (Arg6145.length < 3) return [Shen.type_func, shen_user_lambda6146, 3, Arg6145];
  var Arg6145_0 = Arg6145[0], Arg6145_1 = Arg6145[1], Arg6145_2 = Arg6145[2];
  return (((Shen.is_type(Arg6145_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg6145_0[1])) && (Shen.is_type(Arg6145_0[2], Shen.type_cons) && (Shen.is_type(Arg6145_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6145_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.emit-set"], [Arg6145_0[2][1], Arg6145_0[2][2][1], Arg6145_2]), ";\x0a"]);})
  : (((Shen.is_type(Arg6145_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.func"], Arg6145_0[1])) && (Shen.is_type(Arg6145_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6145_1)) && Shen.call(Shen.fns["js.int-func?"], [Arg6145_0[2][1]]))))))
  ? ""
  : (((Shen.is_type(Arg6145_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.func"], Arg6145_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg6145_0, true, Arg6145_2]);})
  : (((Shen.is_type(Arg6145_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.toplevel"], Arg6145_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg6145_0, true, Arg6145_2]);})
  : (((Shen.is_type(Arg6145_0, Shen.type_cons) && (Shen.empty$question$(Arg6145_0[2]) && Shen.is_type(Arg6145_0[1], Shen.type_symbol))))
  ? ("Shen.call_toplevel(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg6145_0[1])]), ")\x0a", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg6145_0, Shen.type_cons) && Shen.empty$question$(Arg6145_0[2])))
  ? (function() {
  return Shen.simple_error(("Unexpected toplevel expression: " + Shen.call(Shen.fns["shen.app"], [Arg6145_0[1], "\x0a", [Shen.type_symbol, "shen.r"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-expr"], [Arg6145_0, Arg6145_2]);})))))))}, 3, [], "js.js-from-kl-toplevel"];





Shen.fns["js.js-from-kl-toplevel-forms"] = [Shen.type_func, function shen_user_lambda6154(Arg6153) {
  if (Arg6153.length < 4) return [Shen.type_func, shen_user_lambda6154, 4, Arg6153];
  var Arg6153_0 = Arg6153[0], Arg6153_1 = Arg6153[1], Arg6153_2 = Arg6153[2], Arg6153_3 = Arg6153[3];
  var R0;
  return ((Shen.empty$question$(Arg6153_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [Arg6153_2]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [Arg6153_3, "\x0a"])])]);})
  : ((Shen.is_type(Arg6153_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-toplevel"], [Arg6153_0[1], Arg6153_1, Arg6153_2])),
  (R0 = (Arg6153_3 + (R0 + "\x0a"))),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-forms"], [Arg6153_0[2], Arg6153_1, Arg6153_2, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.js-from-kl-toplevel-forms"]]);})))}, 4, [], "js.js-from-kl-toplevel-forms"];





Shen.fns["js.js-from-kl*"] = [Shen.type_func, function shen_user_lambda6159(Arg6158) {
  if (Arg6158.length < 3) return [Shen.type_func, shen_user_lambda6159, 3, Arg6158];
  var Arg6158_0 = Arg6158[0], Arg6158_1 = Arg6158[1], Arg6158_2 = Arg6158[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel"], [Arg6158_0, Arg6158_1, Arg6158_2]);})}, 3, [], "js.js-from-kl*"];





Shen.fns["js-from-kl"] = [Shen.type_func, function shen_user_lambda6162(Arg6161) {
  if (Arg6161.length < 1) return [Shen.type_func, shen_user_lambda6162, 1, Arg6161];
  var Arg6161_0 = Arg6161[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (R1 = Shen.call(Shen.fns["regkl.walk"], [[Shen.type_cons, Arg6161_0, []], false])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-toplevel-forms"], [R1, (Shen.globals["js.skip-internals"]), R0, ""])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [R0]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [R1, "\x0a"])])]);}))}, 1, [], "js-from-kl"];





Shen.fns["js.js-from-kl-all"] = [Shen.type_func, function shen_user_lambda6165(Arg6164) {
  if (Arg6164.length < 1) return [Shen.type_func, shen_user_lambda6165, 1, Arg6164];
  var Arg6164_0 = Arg6164[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["regkl.walk"], [Arg6164_0, false])),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-all"], [R0, (Shen.globals["js.skip-internals"]), R1, ""]);}))}, 1, [], "js.js-from-kl-all"];





Shen.call_toplevel(function js$dot$shen_js_toplevel6168(Arg6166) {
  if (Arg6166.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6168, 0, Arg6166];
  return (Shen.globals["js.skip-internals"] = true)});




Shen.fns["js.dump-exprs-to-file"] = [Shen.type_func, function shen_user_lambda6174(Arg6173) {
  if (Arg6173.length < 2) return [Shen.type_func, shen_user_lambda6174, 2, Arg6173];
  var Arg6173_0 = Arg6173[0], Arg6173_1 = Arg6173[1];
  var R0;
  return ((Shen.empty$question$(Arg6173_0))
  ? true
  : ((Shen.is_type(Arg6173_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.kl-from-shen"], [Arg6173_0[1]])),
  (R0 = Shen.call(Shen.fns["js-from-kl"], [R0])),
  (((typeof(R0) == 'string'))
  ? [Shen.type_symbol, "_"]
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a string", [Shen.type_symbol, "shen.a"]]))),
  Shen.call(Shen.fns["pr"], [R0, Arg6173_1]),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-exprs-to-file"], [Arg6173_0[2], Arg6173_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.dump-exprs-to-file"]]);})))}, 2, [], "js.dump-exprs-to-file"];





Shen.fns["js.dump-to-file"] = [Shen.type_func, function shen_user_lambda6178(Arg6177) {
  if (Arg6177.length < 2) return [Shen.type_func, shen_user_lambda6178, 2, Arg6177];
  var Arg6177_0 = Arg6177[0], Arg6177_1 = Arg6177[1];
  var R0;
  return ((R0 = Shen.open(Arg6177_1, [Shen.type_symbol, "out"])),
  Shen.call(Shen.fns["js.dump-exprs-to-file"], [Arg6177_0, R0]),
  Shen.close(R0),
  true)}, 2, [], "js.dump-to-file"];





Shen.fns["js.kl-from-shen"] = [Shen.type_func, function shen_user_lambda6181(Arg6180) {
  if (Arg6180.length < 1) return [Shen.type_func, shen_user_lambda6181, 1, Arg6180];
  var Arg6180_0 = Arg6180[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda6183(Arg6182) {
  if (Arg6182.length < 1) return [Shen.type_func, shen_user_lambda6183, 1, Arg6182];
  var Arg6182_0 = Arg6182[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg6182_0]);})}, 1, [], undefined], Arg6180_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["js.package-contents"], [R0]))
  : (R0 = R0)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.elim-def"], [Shen.call(Shen.fns["shen.proc-input+"], [R0])]);}))}, 1, [], "js.kl-from-shen"];





Shen.fns["js-from-shen"] = [Shen.type_func, function shen_user_lambda6186(Arg6185) {
  if (Arg6185.length < 1) return [Shen.type_func, shen_user_lambda6186, 1, Arg6185];
  var Arg6185_0 = Arg6185[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js-from-kl"], [Shen.call(Shen.fns["js.kl-from-shen"], [Arg6185_0])]);})}, 1, [], "js-from-shen"];





Shen.call_toplevel(function js$dot$shen_js_toplevel6189(Arg6187) {
  if (Arg6187.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6189, 0, Arg6187];
  return (Shen.globals["js.*silence*"] = false)});




Shen.fns["js.dump"] = [Shen.type_func, function shen_user_lambda6194(Arg6193) {
  if (Arg6193.length < 3) return [Shen.type_func, shen_user_lambda6194, 3, Arg6193];
  var Arg6193_0 = Arg6193[0], Arg6193_1 = Arg6193[1], Arg6193_2 = Arg6193[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.app"], [Arg6193_2, Shen.call(Shen.fns["shen.app"], [Arg6193_1, ".js", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R1 = Shen.call(Shen.fns["shen.app"], [Arg6193_0, Shen.call(Shen.fns["shen.app"], [Arg6193_1, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R2 = Shen.call(Shen.fns["read-file"], [R1])),
  (((Shen.globals["js.*silence*"]))
  ? [Shen.type_symbol, "_"]
  : Shen.call(Shen.fns["shen.prhush"], [("== " + Shen.call(Shen.fns["shen.app"], [R1, (" -> " + Shen.call(Shen.fns["shen.app"], [R0, "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-to-file"], [R2, R0]);}))}, 3, [], "js.dump"];





Shen.call_toplevel(function js$dot$shen_js_toplevel6197(Arg6195) {
  if (Arg6195.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6197, 0, Arg6195];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "js.dump"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel6202(Arg6198) {
  if (Arg6198.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6202, 0, Arg6198];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda6204(Arg6203) {
  if (Arg6203.length < 0) return [Shen.type_func, shen_user_lambda6204, 0, Arg6203];
  return (function() {
  return Shen.call_tail(Shen.fns["register-dumper"], [[Shen.type_symbol, "javascript"], [Shen.type_symbol, "all"], [Shen.type_symbol, "js.dump"]]);})}, 0, [], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6206(Arg6205) {
  if (Arg6205.length < 1) return [Shen.type_func, shen_user_lambda6206, 1, Arg6205];
  var Arg6205_0 = Arg6205[0];
  return [Shen.type_symbol, "_"]}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))});




Shen.fns["shenjs.repl-split-input-aux"] = [Shen.type_func, function shen_user_lambda6211(Arg6210) {
  if (Arg6210.length < 3) return [Shen.type_func, shen_user_lambda6211, 3, Arg6210];
  var Arg6210_0 = Arg6210[0], Arg6210_1 = Arg6210[1], Arg6210_2 = Arg6210[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6210_0))
  ? Arg6210_2
  : ((Shen.is_type(Arg6210_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg6210_0[1], Arg6210_1]),
  (R1 = Shen.call(Shen.fns["reverse"], [R0])),
  (R2 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R1, [Shen.type_func, function shen_user_lambda6213(Arg6212) {
  if (Arg6212.length < 1) return [Shen.type_func, shen_user_lambda6213, 1, Arg6212];
  var Arg6212_0 = Arg6212[0];
  return Shen.fail_obj}, 1, [], undefined]])),
  (function() {
  return Shen.call_tail(Shen.fns["shenjs.repl-split-input-aux"], [Arg6210_0[2], R0, (((Shen.unwind_tail(Shen.$eq$(R2, Shen.fail_obj)) || Shen.empty$question$(R2)))
  ? Arg6210_2
  : [Shen.fns['shen.tuple'], R1, Arg6210_0[2]])]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shenjs.repl-split-input-aux"]]);})))}, 3, [], "shenjs.repl-split-input-aux"];





Shen.fns["shenjs.repl-split-input"] = [Shen.type_func, function shen_user_lambda6216(Arg6215) {
  if (Arg6215.length < 1) return [Shen.type_func, shen_user_lambda6216, 1, Arg6215];
  var Arg6215_0 = Arg6215[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shenjs.repl-split-input-aux"], [Arg6215_0, [], []]);})}, 1, [], "shenjs.repl-split-input"];










Shen.fns["shen.shen->kl"] = [Shen.type_func, function shen_user_lambda6791(Arg6790) {
  if (Arg6790.length < 2) return [Shen.type_func, shen_user_lambda6791, 2, Arg6790];
  var Arg6790_0 = Arg6790[0], Arg6790_1 = Arg6790[1];
  return (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6793(Arg6792) {
  if (Arg6792.length < 1) return [Shen.type_func, shen_user_lambda6793, 1, Arg6792];
  var Arg6792_0 = Arg6792[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<define>"], [Arg6792_0]);})}, 1, [], undefined], [Shen.type_cons, Arg6790_0, Arg6790_1], [Shen.type_func, function shen_user_lambda6795(Arg6794) {
  if (Arg6794.length < 2) return [Shen.type_func, shen_user_lambda6795, 2, Arg6794];
  var Arg6794_0 = Arg6794[0], Arg6794_1 = Arg6794[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.shen-syntax-error"], [Arg6794_0, Arg6794_1]);})}, 2, [Arg6790_0], undefined]]);})}, 2, [], "shen.shen->kl"];





Shen.fns["shen.shen-syntax-error"] = [Shen.type_func, function shen_user_lambda6797(Arg6796) {
  if (Arg6796.length < 2) return [Shen.type_func, shen_user_lambda6797, 2, Arg6796];
  var Arg6796_0 = Arg6796[0], Arg6796_1 = Arg6796[1];
  return (function() {
  return Shen.simple_error(("syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6796_0, (" here:\x0d\x0a\x0d\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6796_1]), "\x0d\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})}, 2, [], "shen.shen-syntax-error"];





Shen.fns["shen.<define>"] = [Shen.type_func, function shen_user_lambda6799(Arg6798) {
  if (Arg6798.length < 1) return [Shen.type_func, shen_user_lambda6799, 1, Arg6798];
  var Arg6798_0 = Arg6798[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6798_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<signature>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6798_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<define>"];





Shen.fns["shen.<name>"] = [Shen.type_func, function shen_user_lambda6801(Arg6800) {
  if (Arg6800.length < 1) return [Shen.type_func, shen_user_lambda6801, 1, Arg6800];
  var Arg6800_0 = Arg6800[0];
  var R0;
  return (((Shen.is_type(Arg6800_0[1], Shen.type_cons))
  ? ((R0 = Arg6800_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6800_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6800_0])])[1], (((Shen.is_type(R0, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.sysfunc?"], [R0]))))
  ? R0
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a legitimate function name.\x0d\x0a", [Shen.type_symbol, "shen.a"]])))])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<name>"];





Shen.fns["shen.sysfunc?"] = [Shen.type_func, function shen_user_lambda6803(Arg6802) {
  if (Arg6802.length < 1) return [Shen.type_func, shen_user_lambda6803, 1, Arg6802];
  var Arg6802_0 = Arg6802[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6802_0, Shen.call(Shen.fns["get"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])]);})}, 1, [], "shen.sysfunc?"];





Shen.fns["shen.<signature>"] = [Shen.type_func, function shen_user_lambda6805(Arg6804) {
  if (Arg6804.length < 1) return [Shen.type_func, shen_user_lambda6805, 1, Arg6804];
  var Arg6804_0 = Arg6804[0];
  var R0;
  return ((((Shen.is_type(Arg6804_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg6804_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6804_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6804_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])[1], Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])])]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<signature>"];





Shen.fns["shen.curry-type"] = [Shen.type_func, function shen_user_lambda6807(Arg6806) {
  if (Arg6806.length < 1) return [Shen.type_func, shen_user_lambda6807, 1, Arg6806];
  var Arg6806_0 = Arg6806[0];
  return (((Shen.is_type(Arg6806_0, Shen.type_cons) && (Shen.is_type(Arg6806_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6806_0[2][1])) && (Shen.is_type(Arg6806_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6806_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6806_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6806_0[1], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg6806_0[2][2], []]]]]);})
  : (((Shen.is_type(Arg6806_0, Shen.type_cons) && (Shen.is_type(Arg6806_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6806_0[2][1])) && (Shen.is_type(Arg6806_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6806_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6806_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6806_0[1], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, Arg6806_0[2][2], []]]]]);})
  : ((Shen.is_type(Arg6806_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6809(Arg6808) {
  if (Arg6808.length < 1) return [Shen.type_func, shen_user_lambda6809, 1, Arg6808];
  var Arg6808_0 = Arg6808[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [Arg6808_0]);})}, 1, [], undefined], Arg6806_0]);})
  : Arg6806_0)))}, 1, [], "shen.curry-type"];





Shen.fns["shen.<signature-help>"] = [Shen.type_func, function shen_user_lambda6811(Arg6810) {
  if (Arg6810.length < 1) return [Shen.type_func, shen_user_lambda6811, 1, Arg6810];
  var Arg6810_0 = Arg6810[0];
  var R0, R1;
  return (((Shen.is_type(Arg6810_0[1], Shen.type_cons))
  ? ((R0 = Arg6810_0[1][1]),
  (R1 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6810_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6810_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "}"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, R0, Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6810_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<signature-help>"];





Shen.fns["shen.<rules>"] = [Shen.type_func, function shen_user_lambda6813(Arg6812) {
  if (Arg6812.length < 1) return [Shen.type_func, shen_user_lambda6813, 1, Arg6812];
  var Arg6812_0 = Arg6812[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6812_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6812_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<rules>"];





Shen.fns["shen.<rule>"] = [Shen.type_func, function shen_user_lambda6815(Arg6814) {
  if (Arg6814.length < 1) return [Shen.type_func, shen_user_lambda6815, 1, Arg6814];
  var Arg6814_0 = Arg6814[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6814_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6814_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6814_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6814_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<rule>"];





Shen.fns["shen.fail_if"] = [Shen.type_func, function shen_user_lambda6817(Arg6816) {
  if (Arg6816.length < 2) return [Shen.type_func, shen_user_lambda6817, 2, Arg6816];
  var Arg6816_0 = Arg6816[0], Arg6816_1 = Arg6816[1];
  return ((Shen.call(Arg6816_0, [Arg6816_1]))
  ? Shen.fail_obj
  : Arg6816_1)}, 2, [], "shen.fail_if"];





Shen.fns["shen.succeeds?"] = [Shen.type_func, function shen_user_lambda6819(Arg6818) {
  if (Arg6818.length < 1) return [Shen.type_func, shen_user_lambda6819, 1, Arg6818];
  var Arg6818_0 = Arg6818[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6818_0, Shen.fail_obj)))
  ? false
  : true)}, 1, [], "shen.succeeds?"];





Shen.fns["shen.<patterns>"] = [Shen.type_func, function shen_user_lambda6821(Arg6820) {
  if (Arg6820.length < 1) return [Shen.type_func, shen_user_lambda6821, 1, Arg6820];
  var Arg6820_0 = Arg6820[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6820_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<patterns>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6820_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<patterns>"];





Shen.fns["shen.<pattern>"] = [Shen.type_func, function shen_user_lambda6823(Arg6822) {
  if (Arg6822.length < 1) return [Shen.type_func, shen_user_lambda6823, 1, Arg6822];
  var Arg6822_0 = Arg6822[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6822_0[1], Shen.type_cons) && Shen.is_type(Arg6822_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6822_0[1], Shen.type_cons) && Shen.is_type(Arg6822_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6822_0[1], Shen.type_cons) && Shen.is_type(Arg6822_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6822_0[1], Shen.type_cons) && Shen.is_type(Arg6822_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6822_0[1], Shen.type_cons) && Shen.is_type(Arg6822_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][1]))))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(0, Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])])])[1][1]))))
  ? Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])])])])])[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]])])
  : Shen.fail_obj)
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6822_0[1], Shen.type_cons))
  ? ((R0 = Arg6822_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], Shen.call(Shen.fns["shen.constructor-error"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<simple_pattern>"], [Arg6822_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<pattern>"];





Shen.fns["shen.constructor-error"] = [Shen.type_func, function shen_user_lambda6825(Arg6824) {
  if (Arg6824.length < 1) return [Shen.type_func, shen_user_lambda6825, 1, Arg6824];
  var Arg6824_0 = Arg6824[0];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6824_0, " is not a legitimate constructor\x0d\x0a", [Shen.type_symbol, "shen.a"]]));})}, 1, [], "shen.constructor-error"];





Shen.fns["shen.<simple_pattern>"] = [Shen.type_func, function shen_user_lambda6827(Arg6826) {
  if (Arg6826.length < 1) return [Shen.type_func, shen_user_lambda6827, 1, Arg6826];
  var Arg6826_0 = Arg6826[0];
  var R0;
  return (((Shen.is_type(Arg6826_0[1], Shen.type_cons))
  ? ((R0 = Arg6826_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "_"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6826_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6826_0])])[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Parse_Y"]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6826_0[1], Shen.type_cons))
  ? ((R0 = Arg6826_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<-"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6826_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6826_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<simple_pattern>"];





Shen.fns["shen.<pattern1>"] = [Shen.type_func, function shen_user_lambda6829(Arg6828) {
  if (Arg6828.length < 1) return [Shen.type_func, shen_user_lambda6829, 1, Arg6828];
  var Arg6828_0 = Arg6828[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6828_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern1>"];





Shen.fns["shen.<pattern2>"] = [Shen.type_func, function shen_user_lambda6831(Arg6830) {
  if (Arg6830.length < 1) return [Shen.type_func, shen_user_lambda6831, 1, Arg6830];
  var Arg6830_0 = Arg6830[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6830_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern2>"];





Shen.fns["shen.<action>"] = [Shen.type_func, function shen_user_lambda6833(Arg6832) {
  if (Arg6832.length < 1) return [Shen.type_func, shen_user_lambda6833, 1, Arg6832];
  var Arg6832_0 = Arg6832[0];
  var R0;
  return (((Shen.is_type(Arg6832_0[1], Shen.type_cons))
  ? ((R0 = Arg6832_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6832_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6832_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<action>"];





Shen.fns["shen.<guard>"] = [Shen.type_func, function shen_user_lambda6835(Arg6834) {
  if (Arg6834.length < 1) return [Shen.type_func, shen_user_lambda6835, 1, Arg6834];
  var Arg6834_0 = Arg6834[0];
  var R0;
  return (((Shen.is_type(Arg6834_0[1], Shen.type_cons))
  ? ((R0 = Arg6834_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6834_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6834_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<guard>"];





Shen.fns["shen.compile_to_machine_code"] = [Shen.type_func, function shen_user_lambda6837(Arg6836) {
  if (Arg6836.length < 2) return [Shen.type_func, shen_user_lambda6837, 2, Arg6836];
  var Arg6836_0 = Arg6836[0], Arg6836_1 = Arg6836[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compile_to_lambda+"], [Arg6836_0, Arg6836_1])),
  (R0 = Shen.call(Shen.fns["shen.compile_to_kl"], [Arg6836_0, R0])),
  Shen.call(Shen.fns["shen.record-source"], [Arg6836_0, R0]),
  R0)}, 2, [], "shen.compile_to_machine_code"];





Shen.fns["shen.record-source"] = [Shen.type_func, function shen_user_lambda6839(Arg6838) {
  if (Arg6838.length < 2) return [Shen.type_func, shen_user_lambda6839, 2, Arg6838];
  var Arg6838_0 = Arg6838[0], Arg6838_1 = Arg6838[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6838_0, [Shen.type_symbol, "shen.source"], Arg6838_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-source"];





Shen.fns["shen.compile_to_lambda+"] = [Shen.type_func, function shen_user_lambda6841(Arg6840) {
  if (Arg6840.length < 2) return [Shen.type_func, shen_user_lambda6841, 2, Arg6840];
  var Arg6840_0 = Arg6840[0], Arg6840_1 = Arg6840[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.aritycheck"], [Arg6840_0, Arg6840_1])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6843(Arg6842) {
  if (Arg6842.length < 2) return [Shen.type_func, shen_user_lambda6843, 2, Arg6842];
  var Arg6842_0 = Arg6842[0], Arg6842_1 = Arg6842[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_check"], [Arg6842_0, Arg6842_1]);})}, 2, [Arg6840_0], undefined], Arg6840_1]),
  (R0 = Shen.call(Shen.fns["shen.parameters"], [R0])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6845(Arg6844) {
  if (Arg6844.length < 1) return [Shen.type_func, shen_user_lambda6845, 1, Arg6844];
  var Arg6844_0 = Arg6844[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.strip-protect"], [Arg6844_0]);})}, 1, [], undefined], Arg6840_1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6847(Arg6846) {
  if (Arg6846.length < 1) return [Shen.type_func, shen_user_lambda6847, 1, Arg6846];
  var Arg6846_0 = Arg6846[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.abstract_rule"], [Arg6846_0]);})}, 1, [], undefined], R1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6849(Arg6848) {
  if (Arg6848.length < 2) return [Shen.type_func, shen_user_lambda6849, 2, Arg6848];
  var Arg6848_0 = Arg6848[0], Arg6848_1 = Arg6848[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6848_0, Arg6848_1]);})}, 2, [R0], undefined], R1])),
  [Shen.type_cons, R0, [Shen.type_cons, R1, []]])}, 2, [], "shen.compile_to_lambda+"];





Shen.fns["shen.free_variable_check"] = [Shen.type_func, function shen_user_lambda6851(Arg6850) {
  if (Arg6850.length < 2) return [Shen.type_func, shen_user_lambda6851, 2, Arg6850];
  var Arg6850_0 = Arg6850[0], Arg6850_1 = Arg6850[1];
  var R0;
  return (((Shen.is_type(Arg6850_1, Shen.type_cons) && (Shen.is_type(Arg6850_1[2], Shen.type_cons) && Shen.empty$question$(Arg6850_1[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6850_1[1]])),
  (R0 = Shen.call(Shen.fns["shen.extract_free_vars"], [R0, Arg6850_1[2][1]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_warnings"], [Arg6850_0, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.free_variable_check"]]);}))}, 2, [], "shen.free_variable_check"];





Shen.fns["shen.extract_vars"] = [Shen.type_func, function shen_user_lambda6853(Arg6852) {
  if (Arg6852.length < 1) return [Shen.type_func, shen_user_lambda6853, 1, Arg6852];
  var Arg6852_0 = Arg6852[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6852_0]))
  ? [Shen.type_cons, Arg6852_0, []]
  : ((Shen.is_type(Arg6852_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_vars"], [Arg6852_0[1]]), Shen.call(Shen.fns["shen.extract_vars"], [Arg6852_0[2]])]);})
  : []))}, 1, [], "shen.extract_vars"];





Shen.fns["shen.extract_free_vars"] = [Shen.type_func, function shen_user_lambda6855(Arg6854) {
  if (Arg6854.length < 2) return [Shen.type_func, shen_user_lambda6855, 2, Arg6854];
  var Arg6854_0 = Arg6854[0], Arg6854_1 = Arg6854[1];
  return (((Shen.is_type(Arg6854_1, Shen.type_cons) && (Shen.is_type(Arg6854_1[2], Shen.type_cons) && (Shen.empty$question$(Arg6854_1[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6854_1[1], [Shen.type_symbol, "protect"]))))))
  ? []
  : (((Shen.call(Shen.fns["variable?"], [Arg6854_1]) && (!Shen.call(Shen.fns["element?"], [Arg6854_1, Arg6854_0]))))
  ? [Shen.type_cons, Arg6854_1, []]
  : (((Shen.is_type(Arg6854_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg6854_1[1])) && (Shen.is_type(Arg6854_1[2], Shen.type_cons) && (Shen.is_type(Arg6854_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg6854_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6854_1[2][1], Arg6854_0], Arg6854_1[2][2][1]]);})
  : (((Shen.is_type(Arg6854_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6854_1[1])) && (Shen.is_type(Arg6854_1[2], Shen.type_cons) && (Shen.is_type(Arg6854_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6854_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6854_1[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6854_0, Arg6854_1[2][2][1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6854_1[2][1], Arg6854_0], Arg6854_1[2][2][2][1]])]);})
  : ((Shen.is_type(Arg6854_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6854_0, Arg6854_1[1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6854_0, Arg6854_1[2]])]);})
  : [])))))}, 2, [], "shen.extract_free_vars"];





Shen.fns["shen.free_variable_warnings"] = [Shen.type_func, function shen_user_lambda6857(Arg6856) {
  if (Arg6856.length < 2) return [Shen.type_func, shen_user_lambda6857, 2, Arg6856];
  var Arg6856_0 = Arg6856[0], Arg6856_1 = Arg6856[1];
  return ((Shen.empty$question$(Arg6856_1))
  ? [Shen.type_symbol, "_"]
  : (function() {
  return Shen.simple_error(("error: the following variables are free in " + Shen.call(Shen.fns["shen.app"], [Arg6856_0, (": " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.list_variables"], [Arg6856_1]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.free_variable_warnings"];





Shen.fns["shen.list_variables"] = [Shen.type_func, function shen_user_lambda6859(Arg6858) {
  if (Arg6858.length < 1) return [Shen.type_func, shen_user_lambda6859, 1, Arg6858];
  var Arg6858_0 = Arg6858[0];
  return (((Shen.is_type(Arg6858_0, Shen.type_cons) && Shen.empty$question$(Arg6858_0[2])))
  ? (Shen.str(Arg6858_0[1]) + ".")
  : ((Shen.is_type(Arg6858_0, Shen.type_cons))
  ? (Shen.str(Arg6858_0[1]) + (", " + Shen.call(Shen.fns["shen.list_variables"], [Arg6858_0[2]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.list_variables"]]);})))}, 1, [], "shen.list_variables"];





Shen.fns["shen.strip-protect"] = [Shen.type_func, function shen_user_lambda6861(Arg6860) {
  if (Arg6860.length < 1) return [Shen.type_func, shen_user_lambda6861, 1, Arg6860];
  var Arg6860_0 = Arg6860[0];
  return (((Shen.is_type(Arg6860_0, Shen.type_cons) && (Shen.is_type(Arg6860_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6860_0[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6860_0[1], [Shen.type_symbol, "protect"]))))))
  ? Arg6860_0[2][1]
  : ((Shen.is_type(Arg6860_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.strip-protect"], [Arg6860_0[1]]), Shen.call(Shen.fns["shen.strip-protect"], [Arg6860_0[2]])]
  : Arg6860_0))}, 1, [], "shen.strip-protect"];





Shen.fns["shen.linearise"] = [Shen.type_func, function shen_user_lambda6863(Arg6862) {
  if (Arg6862.length < 1) return [Shen.type_func, shen_user_lambda6863, 1, Arg6862];
  var Arg6862_0 = Arg6862[0];
  return (((Shen.is_type(Arg6862_0, Shen.type_cons) && (Shen.is_type(Arg6862_0[2], Shen.type_cons) && Shen.empty$question$(Arg6862_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Shen.call(Shen.fns["shen.flatten"], [Arg6862_0[1]]), Arg6862_0[1], Arg6862_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise"]]);}))}, 1, [], "shen.linearise"];





Shen.fns["shen.flatten"] = [Shen.type_func, function shen_user_lambda6865(Arg6864) {
  if (Arg6864.length < 1) return [Shen.type_func, shen_user_lambda6865, 1, Arg6864];
  var Arg6864_0 = Arg6864[0];
  return ((Shen.empty$question$(Arg6864_0))
  ? []
  : ((Shen.is_type(Arg6864_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.flatten"], [Arg6864_0[1]]), Shen.call(Shen.fns["shen.flatten"], [Arg6864_0[2]])]);})
  : [Shen.type_cons, Arg6864_0, []]))}, 1, [], "shen.flatten"];





Shen.fns["shen.linearise_help"] = [Shen.type_func, function shen_user_lambda6867(Arg6866) {
  if (Arg6866.length < 3) return [Shen.type_func, shen_user_lambda6867, 3, Arg6866];
  var Arg6866_0 = Arg6866[0], Arg6866_1 = Arg6866[1], Arg6866_2 = Arg6866[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6866_0))
  ? [Shen.type_cons, Arg6866_1, [Shen.type_cons, Arg6866_2, []]]
  : ((Shen.is_type(Arg6866_0, Shen.type_cons))
  ? (((Shen.call(Shen.fns["variable?"], [Arg6866_0[1]]) && Shen.call(Shen.fns["element?"], [Arg6866_0[1], Arg6866_0[2]])))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [Arg6866_0[1]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6866_0[1], [Shen.type_cons, R0, []]]], [Shen.type_cons, Arg6866_2, []]]]),
  (R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6866_0[1], R0, Arg6866_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6866_0[2], R0, R1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6866_0[2], Arg6866_1, Arg6866_2]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise_help"]]);})))}, 3, [], "shen.linearise_help"];





Shen.fns["shen.linearise_X"] = [Shen.type_func, function shen_user_lambda6869(Arg6868) {
  if (Arg6868.length < 3) return [Shen.type_func, shen_user_lambda6869, 3, Arg6868];
  var Arg6868_0 = Arg6868[0], Arg6868_1 = Arg6868[1], Arg6868_2 = Arg6868[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6868_2, Arg6868_0)))
  ? Arg6868_1
  : ((Shen.is_type(Arg6868_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6868_0, Arg6868_1, Arg6868_2[1]])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Arg6868_2[1])))
  ? [Shen.type_cons, Arg6868_2[1], Shen.call(Shen.fns["shen.linearise_X"], [Arg6868_0, Arg6868_1, Arg6868_2[2]])]
  : [Shen.type_cons, R0, Arg6868_2[2]]))
  : Arg6868_2))}, 3, [], "shen.linearise_X"];





Shen.fns["shen.aritycheck"] = [Shen.type_func, function shen_user_lambda6871(Arg6870) {
  if (Arg6870.length < 2) return [Shen.type_func, shen_user_lambda6871, 2, Arg6870];
  var Arg6870_0 = Arg6870[0], Arg6870_1 = Arg6870[1];
  return (((Shen.is_type(Arg6870_1, Shen.type_cons) && (Shen.is_type(Arg6870_1[1], Shen.type_cons) && (Shen.is_type(Arg6870_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6870_1[1][2][2]) && Shen.empty$question$(Arg6870_1[2]))))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6870_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck-name"], [Arg6870_0, Shen.call(Shen.fns["arity"], [Arg6870_0]), Shen.call(Shen.fns["length"], [Arg6870_1[1][1]])]);}))
  : (((Shen.is_type(Arg6870_1, Shen.type_cons) && (Shen.is_type(Arg6870_1[1], Shen.type_cons) && (Shen.is_type(Arg6870_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6870_1[1][2][2]) && (Shen.is_type(Arg6870_1[2], Shen.type_cons) && (Shen.is_type(Arg6870_1[2][1], Shen.type_cons) && (Shen.is_type(Arg6870_1[2][1][2], Shen.type_cons) && Shen.empty$question$(Arg6870_1[2][1][2][2])))))))))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6870_1[1][1]]), Shen.call(Shen.fns["length"], [Arg6870_1[2][1][1]]))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6870_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck"], [Arg6870_0, Arg6870_1[2]]);}))
  : (function() {
  return Shen.simple_error(("arity error in " + Shen.call(Shen.fns["shen.app"], [Arg6870_0, "\x0d\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aritycheck"]]);})))}, 2, [], "shen.aritycheck"];





Shen.fns["shen.aritycheck-name"] = [Shen.type_func, function shen_user_lambda6873(Arg6872) {
  if (Arg6872.length < 3) return [Shen.type_func, shen_user_lambda6873, 3, Arg6872];
  var Arg6872_0 = Arg6872[0], Arg6872_1 = Arg6872[1], Arg6872_2 = Arg6872[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6872_1)))
  ? Arg6872_2
  : ((Shen.unwind_tail(Shen.$eq$(Arg6872_2, Arg6872_1)))
  ? Arg6872_2
  : (Shen.call(Shen.fns["shen.prhush"], [("\x0d\x0awarning: changing the arity of " + Shen.call(Shen.fns["shen.app"], [Arg6872_0, " can cause errors.\x0d\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  Arg6872_2)))}, 3, [], "shen.aritycheck-name"];





Shen.fns["shen.aritycheck-action"] = [Shen.type_func, function shen_user_lambda6875(Arg6874) {
  if (Arg6874.length < 1) return [Shen.type_func, shen_user_lambda6875, 1, Arg6874];
  var Arg6874_0 = Arg6874[0];
  return ((Shen.is_type(Arg6874_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.aah"], [Arg6874_0[1], Arg6874_0[2]]),
  (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6877(Arg6876) {
  if (Arg6876.length < 1) return [Shen.type_func, shen_user_lambda6877, 1, Arg6876];
  var Arg6876_0 = Arg6876[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck-action"], [Arg6876_0]);})}, 1, [], undefined], Arg6874_0]);}))
  : [Shen.type_symbol, "shen.skip"])}, 1, [], "shen.aritycheck-action"];





Shen.fns["shen.aah"] = [Shen.type_func, function shen_user_lambda6879(Arg6878) {
  if (Arg6878.length < 2) return [Shen.type_func, shen_user_lambda6879, 2, Arg6878];
  var Arg6878_0 = Arg6878[0], Arg6878_1 = Arg6878[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["arity"], [Arg6878_0])),
  (R1 = Shen.call(Shen.fns["length"], [Arg6878_1])),
  ((((R0 > -1) && (R1 > R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("warning: " + Shen.call(Shen.fns["shen.app"], [Arg6878_0, (" might not like " + Shen.call(Shen.fns["shen.app"], [R1, (" argument" + Shen.call(Shen.fns["shen.app"], [(((R1 > 1))
  ? "s"
  : ""), ".\x0d\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})
  : [Shen.type_symbol, "shen.skip"]))}, 2, [], "shen.aah"];





Shen.fns["shen.abstract_rule"] = [Shen.type_func, function shen_user_lambda6881(Arg6880) {
  if (Arg6880.length < 1) return [Shen.type_func, shen_user_lambda6881, 1, Arg6880];
  var Arg6880_0 = Arg6880[0];
  return (((Shen.is_type(Arg6880_0, Shen.type_cons) && (Shen.is_type(Arg6880_0[2], Shen.type_cons) && Shen.empty$question$(Arg6880_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.abstraction_build"], [Arg6880_0[1], Arg6880_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstract_rule"]]);}))}, 1, [], "shen.abstract_rule"];





Shen.fns["shen.abstraction_build"] = [Shen.type_func, function shen_user_lambda6883(Arg6882) {
  if (Arg6882.length < 2) return [Shen.type_func, shen_user_lambda6883, 2, Arg6882];
  var Arg6882_0 = Arg6882[0], Arg6882_1 = Arg6882[1];
  return ((Shen.empty$question$(Arg6882_0))
  ? Arg6882_1
  : ((Shen.is_type(Arg6882_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6882_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.abstraction_build"], [Arg6882_0[2], Arg6882_1]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstraction_build"]]);})))}, 2, [], "shen.abstraction_build"];





Shen.fns["shen.parameters"] = [Shen.type_func, function shen_user_lambda6885(Arg6884) {
  if (Arg6884.length < 1) return [Shen.type_func, shen_user_lambda6885, 1, Arg6884];
  var Arg6884_0 = Arg6884[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6884_0)))
  ? []
  : [Shen.type_cons, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]), Shen.call(Shen.fns["shen.parameters"], [(Arg6884_0 - 1)])])}, 1, [], "shen.parameters"];





Shen.fns["shen.application_build"] = [Shen.type_func, function shen_user_lambda6887(Arg6886) {
  if (Arg6886.length < 2) return [Shen.type_func, shen_user_lambda6887, 2, Arg6886];
  var Arg6886_0 = Arg6886[0], Arg6886_1 = Arg6886[1];
  return ((Shen.empty$question$(Arg6886_0))
  ? Arg6886_1
  : ((Shen.is_type(Arg6886_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6886_0[2], [Shen.type_cons, Arg6886_1, [Shen.type_cons, Arg6886_0[1], []]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.application_build"]]);})))}, 2, [], "shen.application_build"];





Shen.fns["shen.compile_to_kl"] = [Shen.type_func, function shen_user_lambda6889(Arg6888) {
  if (Arg6888.length < 2) return [Shen.type_func, shen_user_lambda6889, 2, Arg6888];
  var Arg6888_0 = Arg6888[0], Arg6888_1 = Arg6888[1];
  var R0, R1;
  return (((Shen.is_type(Arg6888_1, Shen.type_cons) && (Shen.is_type(Arg6888_1[2], Shen.type_cons) && Shen.empty$question$(Arg6888_1[2][2]))))
  ? (Shen.call(Shen.fns["shen.store-arity"], [Arg6888_0, Shen.call(Shen.fns["length"], [Arg6888_1[1]])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6891(Arg6890) {
  if (Arg6890.length < 1) return [Shen.type_func, shen_user_lambda6891, 1, Arg6890];
  var Arg6890_0 = Arg6890[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.reduce"], [Arg6890_0]);})}, 1, [], undefined], Arg6888_1[2][1]])),
  (R0 = Shen.call(Shen.fns["shen.cond-expression"], [Arg6888_0, Arg6888_1[1], R0])),
  (((Shen.globals["shen.*optimise*"]))
  ? (R1 = Shen.call(Shen.fns["shen.typextable"], [Shen.call(Shen.fns["shen.get-type"], [Arg6888_0]), Arg6888_1[1]]))
  : (R1 = [Shen.type_symbol, "shen.skip"])),
  (((Shen.globals["shen.*optimise*"]))
  ? (R1 = Shen.call(Shen.fns["shen.assign-types"], [Arg6888_1[1], R1, R0]))
  : (R1 = R0)),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg6888_0, [Shen.type_cons, Arg6888_1[1], [Shen.type_cons, R1, []]]]]),
  R1)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compile_to_kl"]]);}))}, 2, [], "shen.compile_to_kl"];





Shen.fns["shen.get-type"] = [Shen.type_func, function shen_user_lambda6893(Arg6892) {
  if (Arg6892.length < 1) return [Shen.type_func, shen_user_lambda6893, 1, Arg6892];
  var Arg6892_0 = Arg6892[0];
  var R0;
  return ((Shen.is_type(Arg6892_0, Shen.type_cons))
  ? [Shen.type_symbol, "shen.skip"]
  : ((R0 = Shen.call(Shen.fns["assoc"], [Arg6892_0, (Shen.globals["shen.*signedfuncs*"])])),
  ((Shen.empty$question$(R0))
  ? [Shen.type_symbol, "shen.skip"]
  : R0[2])))}, 1, [], "shen.get-type"];





Shen.fns["shen.typextable"] = [Shen.type_func, function shen_user_lambda6895(Arg6894) {
  if (Arg6894.length < 2) return [Shen.type_func, shen_user_lambda6895, 2, Arg6894];
  var Arg6894_0 = Arg6894[0], Arg6894_1 = Arg6894[1];
  return (((Shen.is_type(Arg6894_0, Shen.type_cons) && (Shen.is_type(Arg6894_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6894_0[2][1])) && (Shen.is_type(Arg6894_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6894_0[2][2][2]) && Shen.is_type(Arg6894_1, Shen.type_cons)))))))
  ? ((Shen.call(Shen.fns["variable?"], [Arg6894_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typextable"], [Arg6894_0[2][2][1], Arg6894_1[2]]);})
  : [Shen.type_cons, [Shen.type_cons, Arg6894_1[1], Arg6894_0[1]], Shen.call(Shen.fns["shen.typextable"], [Arg6894_0[2][2][1], Arg6894_1[2]])])
  : [])}, 2, [], "shen.typextable"];





Shen.fns["shen.assign-types"] = [Shen.type_func, function shen_user_lambda6897(Arg6896) {
  if (Arg6896.length < 3) return [Shen.type_func, shen_user_lambda6897, 3, Arg6896];
  var Arg6896_0 = Arg6896[0], Arg6896_1 = Arg6896[1], Arg6896_2 = Arg6896[2];
  var R0;
  return (((Shen.is_type(Arg6896_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6896_2[1])) && (Shen.is_type(Arg6896_2[2], Shen.type_cons) && (Shen.is_type(Arg6896_2[2][2], Shen.type_cons) && (Shen.is_type(Arg6896_2[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6896_2[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6896_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [Arg6896_0, Arg6896_1, Arg6896_2[2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [[Shen.type_cons, Arg6896_2[2][1], Arg6896_0], Arg6896_1, Arg6896_2[2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6896_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg6896_2[1])) && (Shen.is_type(Arg6896_2[2], Shen.type_cons) && (Shen.is_type(Arg6896_2[2][2], Shen.type_cons) && Shen.empty$question$(Arg6896_2[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg6896_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [[Shen.type_cons, Arg6896_2[2][1], Arg6896_0], Arg6896_1, Arg6896_2[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6896_2, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg6896_2[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "cond"], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6899(Arg6898) {
  if (Arg6898.length < 3) return [Shen.type_func, shen_user_lambda6899, 3, Arg6898];
  var Arg6898_0 = Arg6898[0], Arg6898_1 = Arg6898[1], Arg6898_2 = Arg6898[2];
  return [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [Arg6898_0, Arg6898_1, Arg6898_2[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [Arg6898_0, Arg6898_1, Arg6898_2[2][1]]), []]]}, 3, [Arg6896_0, Arg6896_1], undefined], Arg6896_2[2]])]
  : ((Shen.is_type(Arg6896_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.typextable"], [Shen.call(Shen.fns["shen.get-type"], [Arg6896_2[1]]), Arg6896_2[2]])),
  [Shen.type_cons, Arg6896_2[1], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6901(Arg6900) {
  if (Arg6900.length < 4) return [Shen.type_func, shen_user_lambda6901, 4, Arg6900];
  var Arg6900_0 = Arg6900[0], Arg6900_1 = Arg6900[1], Arg6900_2 = Arg6900[2], Arg6900_3 = Arg6900[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.assign-types"], [Arg6900_0, Shen.call(Shen.fns["append"], [Arg6900_1, Arg6900_2]), Arg6900_3]);})}, 4, [Arg6896_0, Arg6896_1, R0], undefined], Arg6896_2[2]])])
  : ((R0 = Shen.call(Shen.fns["assoc"], [Arg6896_2, Arg6896_1])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6896_2, [Shen.type_cons, R0[2], []]]]
  : ((Shen.call(Shen.fns["element?"], [Arg6896_2, Arg6896_0]))
  ? Arg6896_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.atom-type"], [Arg6896_2]);}))))))))}, 3, [], "shen.assign-types"];





Shen.fns["shen.atom-type"] = [Shen.type_func, function shen_user_lambda6903(Arg6902) {
  if (Arg6902.length < 1) return [Shen.type_func, shen_user_lambda6903, 1, Arg6902];
  var Arg6902_0 = Arg6902[0];
  return (((typeof(Arg6902_0) == 'string'))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6902_0, [Shen.type_cons, [Shen.type_symbol, "string"], []]]]
  : (((typeof(Arg6902_0) == 'number'))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6902_0, [Shen.type_cons, [Shen.type_symbol, "number"], []]]]
  : ((Shen.boolean$question$(Arg6902_0))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6902_0, [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]
  : ((Shen.is_type(Arg6902_0, Shen.type_symbol))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6902_0, [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]
  : Arg6902_0))))}, 1, [], "shen.atom-type"];





Shen.fns["shen.store-arity"] = [Shen.type_func, function shen_user_lambda6905(Arg6904) {
  if (Arg6904.length < 2) return [Shen.type_func, shen_user_lambda6905, 2, Arg6904];
  var Arg6904_0 = Arg6904[0], Arg6904_1 = Arg6904[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6904_0, [Shen.type_symbol, "arity"], Arg6904_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.store-arity"];





Shen.fns["shen.reduce"] = [Shen.type_func, function shen_user_lambda6907(Arg6906) {
  if (Arg6906.length < 1) return [Shen.type_func, shen_user_lambda6907, 1, Arg6906];
  var Arg6906_0 = Arg6906[0];
  var R0;
  return ((Shen.globals["shen.*teststack*"] = []),
  (R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6906_0])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "shen.tests"], Shen.call(Shen.fns["reverse"], [(Shen.globals["shen.*teststack*"])])]], [Shen.type_cons, R0, []]])}, 1, [], "shen.reduce"];





Shen.fns["shen.reduce_help"] = [Shen.type_func, function shen_user_lambda6909(Arg6908) {
  if (Arg6908.length < 1) return [Shen.type_func, shen_user_lambda6909, 1, Arg6908];
  var Arg6908_0 = Arg6908[0];
  var R0;
  return (((Shen.is_type(Arg6908_0, Shen.type_cons) && (Shen.is_type(Arg6908_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6908_0[1][1])) && (Shen.is_type(Arg6908_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6908_0[1][2][1][1])) && (Shen.is_type(Arg6908_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6908_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][2][2]) && (Shen.is_type(Arg6908_0[2], Shen.type_cons) && Shen.empty$question$(Arg6908_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "cons?"], Arg6908_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6908_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6908_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6908_0[2][1], Arg6908_0[1][2][1], Arg6908_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6908_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6908_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6908_0, Shen.type_cons) && (Shen.is_type(Arg6908_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6908_0[1][1])) && (Shen.is_type(Arg6908_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg6908_0[1][2][1][1])) && (Shen.is_type(Arg6908_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6908_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][2][2]) && (Shen.is_type(Arg6908_0[2], Shen.type_cons) && Shen.empty$question$(Arg6908_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "tuple?"], Arg6908_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6908_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6908_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6908_0[2][1], Arg6908_0[1][2][1], Arg6908_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], Arg6908_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], Arg6908_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6908_0, Shen.type_cons) && (Shen.is_type(Arg6908_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6908_0[1][1])) && (Shen.is_type(Arg6908_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Arg6908_0[1][2][1][1])) && (Shen.is_type(Arg6908_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6908_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][2][2]) && (Shen.is_type(Arg6908_0[2], Shen.type_cons) && Shen.empty$question$(Arg6908_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+vector?"], Arg6908_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6908_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6908_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6908_0[2][1], Arg6908_0[1][2][1], Arg6908_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hdv"], Arg6908_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlv"], Arg6908_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6908_0, Shen.type_cons) && (Shen.is_type(Arg6908_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6908_0[1][1])) && (Shen.is_type(Arg6908_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6908_0[1][2][1][1])) && (Shen.is_type(Arg6908_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6908_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][2][2]) && (Shen.is_type(Arg6908_0[2], Shen.type_cons) && Shen.empty$question$(Arg6908_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+string?"], Arg6908_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6908_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6908_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6908_0[2][1], Arg6908_0[1][2][1], Arg6908_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, Arg6908_0[2][1], [Shen.type_cons, 0, []]]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlstr"], Arg6908_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6908_0, Shen.type_cons) && (Shen.is_type(Arg6908_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6908_0[1][1])) && (Shen.is_type(Arg6908_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][2][2]) && (Shen.is_type(Arg6908_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[2][2]) && (!Shen.call(Shen.fns["variable?"], [Arg6908_0[1][2][1]])))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6908_0[1][2][1], Arg6908_0[2]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6908_0[1][2][2][1]]);}))
  : (((Shen.is_type(Arg6908_0, Shen.type_cons) && (Shen.is_type(Arg6908_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6908_0[1][1])) && (Shen.is_type(Arg6908_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6908_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6908_0[1][2][2][2]) && (Shen.is_type(Arg6908_0[2], Shen.type_cons) && Shen.empty$question$(Arg6908_0[2][2])))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Shen.call(Shen.fns["shen.ebr"], [Arg6908_0[2][1], Arg6908_0[1][2][1], Arg6908_0[1][2][2][1]])]);})
  : (((Shen.is_type(Arg6908_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6908_0[1])) && (Shen.is_type(Arg6908_0[2], Shen.type_cons) && (Shen.is_type(Arg6908_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6908_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [Arg6908_0[2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6908_0[2][2][1]]);}))
  : (((Shen.is_type(Arg6908_0, Shen.type_cons) && (Shen.is_type(Arg6908_0[2], Shen.type_cons) && Shen.empty$question$(Arg6908_0[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6908_0[1]])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6908_0[1], R0)))
  ? Arg6908_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [[Shen.type_cons, R0, Arg6908_0[2]]]);})))
  : Arg6908_0))))))))}, 1, [], "shen.reduce_help"];





Shen.fns["shen.+string?"] = [Shen.type_func, function shen_user_lambda6911(Arg6910) {
  if (Arg6910.length < 1) return [Shen.type_func, shen_user_lambda6911, 1, Arg6910];
  var Arg6910_0 = Arg6910[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6910_0)))
  ? false
  : (typeof(Arg6910_0) == 'string'))}, 1, [], "shen.+string?"];





Shen.fns["shen.+vector"] = [Shen.type_func, function shen_user_lambda6913(Arg6912) {
  if (Arg6912.length < 1) return [Shen.type_func, shen_user_lambda6913, 1, Arg6912];
  var Arg6912_0 = Arg6912[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6912_0, Shen.vector(0))))
  ? false
  : (function() {
  return Shen.vector$question$(Arg6912_0);}))}, 1, [], "shen.+vector"];





Shen.fns["shen.ebr"] = [Shen.type_func, function shen_user_lambda6915(Arg6914) {
  if (Arg6914.length < 3) return [Shen.type_func, shen_user_lambda6915, 3, Arg6914];
  var Arg6914_0 = Arg6914[0], Arg6914_1 = Arg6914[1], Arg6914_2 = Arg6914[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6914_2, Arg6914_1)))
  ? Arg6914_0
  : (((Shen.is_type(Arg6914_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6914_2[1])) && (Shen.is_type(Arg6914_2[2], Shen.type_cons) && (Shen.is_type(Arg6914_2[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6914_2[2][2][2]) && (Shen.call(Shen.fns["occurrences"], [Arg6914_1, Arg6914_2[2][1]]) > 0)))))))
  ? Arg6914_2
  : (((Shen.is_type(Arg6914_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6914_2[1])) && (Shen.is_type(Arg6914_2[2], Shen.type_cons) && (Shen.is_type(Arg6914_2[2][2], Shen.type_cons) && (Shen.is_type(Arg6914_2[2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6914_2[2][2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6914_2[2][1], Arg6914_1)))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6914_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6914_0, Arg6914_2[2][1], Arg6914_2[2][2][1]]), Arg6914_2[2][2][2]]]]
  : ((Shen.is_type(Arg6914_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6914_0, Arg6914_1, Arg6914_2[1]]), Shen.call(Shen.fns["shen.ebr"], [Arg6914_0, Arg6914_1, Arg6914_2[2]])]
  : Arg6914_2))))}, 3, [], "shen.ebr"];





Shen.fns["shen.add_test"] = [Shen.type_func, function shen_user_lambda6917(Arg6916) {
  if (Arg6916.length < 1) return [Shen.type_func, shen_user_lambda6917, 1, Arg6916];
  var Arg6916_0 = Arg6916[0];
  return (Shen.globals["shen.*teststack*"] = [Shen.type_cons, Arg6916_0, (Shen.globals["shen.*teststack*"])])}, 1, [], "shen.add_test"];





Shen.fns["shen.cond-expression"] = [Shen.type_func, function shen_user_lambda6919(Arg6918) {
  if (Arg6918.length < 3) return [Shen.type_func, shen_user_lambda6919, 3, Arg6918];
  var Arg6918_0 = Arg6918[0], Arg6918_1 = Arg6918[1], Arg6918_2 = Arg6918[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.err-condition"], [Arg6918_0])),
  (R0 = Shen.call(Shen.fns["shen.case-form"], [Arg6918_2, R0])),
  (R0 = Shen.call(Shen.fns["shen.encode-choices"], [R0, Arg6918_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cond-form"], [R0]);}))}, 3, [], "shen.cond-expression"];





Shen.fns["shen.cond-form"] = [Shen.type_func, function shen_user_lambda6921(Arg6920) {
  if (Arg6920.length < 1) return [Shen.type_func, shen_user_lambda6921, 1, Arg6920];
  var Arg6920_0 = Arg6920[0];
  return (((Shen.is_type(Arg6920_0, Shen.type_cons) && (Shen.is_type(Arg6920_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6920_0[1][1])) && (Shen.is_type(Arg6920_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6920_0[1][2][2]))))))
  ? Arg6920_0[1][2][1]
  : [Shen.type_cons, [Shen.type_symbol, "cond"], Arg6920_0])}, 1, [], "shen.cond-form"];





Shen.fns["shen.encode-choices"] = [Shen.type_func, function shen_user_lambda6923(Arg6922) {
  if (Arg6922.length < 2) return [Shen.type_func, shen_user_lambda6923, 2, Arg6922];
  var Arg6922_0 = Arg6922[0], Arg6922_1 = Arg6922[1];
  return ((Shen.empty$question$(Arg6922_0))
  ? []
  : (((Shen.is_type(Arg6922_0, Shen.type_cons) && (Shen.is_type(Arg6922_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6922_0[1][1])) && (Shen.is_type(Arg6922_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6922_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6922_0[1][2][1][1])) && (Shen.is_type(Arg6922_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6922_0[1][2][1][2][2]) && (Shen.empty$question$(Arg6922_0[1][2][2]) && Shen.empty$question$(Arg6922_0[2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6922_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.sys-error"], [Shen.type_cons, Arg6922_1, []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6922_1, []]]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6922_0, Shen.type_cons) && (Shen.is_type(Arg6922_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6922_0[1][1])) && (Shen.is_type(Arg6922_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6922_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6922_0[1][2][1][1])) && (Shen.is_type(Arg6922_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6922_0[1][2][1][2][2]) && Shen.empty$question$(Arg6922_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6922_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6922_0[2], Arg6922_1])]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6922_0, Shen.type_cons) && (Shen.is_type(Arg6922_0[1], Shen.type_cons) && (Shen.is_type(Arg6922_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6922_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6922_0[1][2][1][1])) && (Shen.is_type(Arg6922_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6922_0[1][2][1][2][2]) && Shen.empty$question$(Arg6922_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6922_0[2], Arg6922_1])]), []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6922_0[1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6922_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6922_0, Shen.type_cons) && (Shen.is_type(Arg6922_0[1], Shen.type_cons) && (Shen.is_type(Arg6922_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6922_0[1][2][2])))))
  ? [Shen.type_cons, Arg6922_0[1], Shen.call(Shen.fns["shen.encode-choices"], [Arg6922_0[2], Arg6922_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.encode-choices"]]);}))))))}, 2, [], "shen.encode-choices"];





Shen.fns["shen.case-form"] = [Shen.type_func, function shen_user_lambda6925(Arg6924) {
  if (Arg6924.length < 2) return [Shen.type_func, shen_user_lambda6925, 2, Arg6924];
  var Arg6924_0 = Arg6924[0], Arg6924_1 = Arg6924[1];
  return ((Shen.empty$question$(Arg6924_0))
  ? [Shen.type_cons, Arg6924_1, []]
  : (((Shen.is_type(Arg6924_0, Shen.type_cons) && (Shen.is_type(Arg6924_0[1], Shen.type_cons) && (Shen.is_type(Arg6924_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6924_0[1][1][1])) && (Shen.is_type(Arg6924_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6924_0[1][1][2][1])) && (Shen.empty$question$(Arg6924_0[1][1][2][2]) && (Shen.is_type(Arg6924_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6924_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6924_0[1][2][1][1])) && (Shen.is_type(Arg6924_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6924_0[1][2][1][2][2]) && Shen.empty$question$(Arg6924_0[1][2][2]))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6924_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6924_0[2], Arg6924_1])]
  : (((Shen.is_type(Arg6924_0, Shen.type_cons) && (Shen.is_type(Arg6924_0[1], Shen.type_cons) && (Shen.is_type(Arg6924_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6924_0[1][1][1])) && (Shen.is_type(Arg6924_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6924_0[1][1][2][1])) && (Shen.empty$question$(Arg6924_0[1][1][2][2]) && (Shen.is_type(Arg6924_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6924_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6924_0[1][2]], []]
  : (((Shen.is_type(Arg6924_0, Shen.type_cons) && (Shen.is_type(Arg6924_0[1], Shen.type_cons) && (Shen.is_type(Arg6924_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6924_0[1][1][1])) && (Shen.is_type(Arg6924_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6924_0[1][1][2][1])) && (Shen.is_type(Arg6924_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6924_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6924_0[1][1][2][2]]), Arg6924_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6924_0[2], Arg6924_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.case-form"]]);})))))}, 2, [], "shen.case-form"];





Shen.fns["shen.embed-and"] = [Shen.type_func, function shen_user_lambda6927(Arg6926) {
  if (Arg6926.length < 1) return [Shen.type_func, shen_user_lambda6927, 1, Arg6926];
  var Arg6926_0 = Arg6926[0];
  return (((Shen.is_type(Arg6926_0, Shen.type_cons) && Shen.empty$question$(Arg6926_0[2])))
  ? Arg6926_0[1]
  : ((Shen.is_type(Arg6926_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, Arg6926_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6926_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.embed-and"]]);})))}, 1, [], "shen.embed-and"];





Shen.fns["shen.err-condition"] = [Shen.type_func, function shen_user_lambda6929(Arg6928) {
  if (Arg6928.length < 1) return [Shen.type_func, shen_user_lambda6929, 1, Arg6928];
  var Arg6928_0 = Arg6928[0];
  return [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6928_0, []]], []]]}, 1, [], "shen.err-condition"];





Shen.fns["shen.sys-error"] = [Shen.type_func, function shen_user_lambda6931(Arg6930) {
  if (Arg6930.length < 1) return [Shen.type_func, shen_user_lambda6931, 1, Arg6930];
  var Arg6930_0 = Arg6930[0];
  return (function() {
  return Shen.simple_error(("system function " + Shen.call(Shen.fns["shen.app"], [Arg6930_0, ": unexpected argument\x0d\x0a", [Shen.type_symbol, "shen.a"]])));})}, 1, [], "shen.sys-error"];















Shen.fns["eval"] = [Shen.type_func, function shen_user_lambda7719(Arg7718) {
  if (Arg7718.length < 1) return [Shen.type_func, shen_user_lambda7719, 1, Arg7718];
  var Arg7718_0 = Arg7718[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda7721(Arg7720) {
  if (Arg7720.length < 1) return [Shen.type_func, shen_user_lambda7721, 1, Arg7720];
  var Arg7720_0 = Arg7720[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg7720_0]);})}, 1, [], undefined], Arg7718_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7723(Arg7722) {
  if (Arg7722.length < 1) return [Shen.type_func, shen_user_lambda7723, 1, Arg7722];
  var Arg7722_0 = Arg7722[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.eval-without-macros"], [Arg7722_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.package-contents"], [R0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.eval-without-macros"], [R0]);})))}, 1, [], "eval"];





Shen.fns["shen.eval-without-macros"] = [Shen.type_func, function shen_user_lambda7725(Arg7724) {
  if (Arg7724.length < 1) return [Shen.type_func, shen_user_lambda7725, 1, Arg7724];
  var Arg7724_0 = Arg7724[0];
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["shen.elim-def"], [Shen.call(Shen.fns["shen.proc-input+"], [Arg7724_0])]));})}, 1, [], "shen.eval-without-macros"];





Shen.fns["shen.proc-input+"] = [Shen.type_func, function shen_user_lambda7727(Arg7726) {
  if (Arg7726.length < 1) return [Shen.type_func, shen_user_lambda7727, 1, Arg7726];
  var Arg7726_0 = Arg7726[0];
  return (((Shen.is_type(Arg7726_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg7726_0[1])) && (Shen.is_type(Arg7726_0[2], Shen.type_cons) && (Shen.is_type(Arg7726_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7726_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7726_0[2][1]]), Arg7726_0[2][2]]]
  : (((Shen.is_type(Arg7726_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read+"], Arg7726_0[1])) && (Shen.is_type(Arg7726_0[2], Shen.type_cons) && (Shen.is_type(Arg7726_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7726_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "read+"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7726_0[2][1]]), Arg7726_0[2][2]]]
  : ((Shen.is_type(Arg7726_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7729(Arg7728) {
  if (Arg7728.length < 1) return [Shen.type_func, shen_user_lambda7729, 1, Arg7728];
  var Arg7728_0 = Arg7728[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.proc-input+"], [Arg7728_0]);})}, 1, [], undefined], Arg7726_0]);})
  : Arg7726_0)))}, 1, [], "shen.proc-input+"];





Shen.fns["shen.elim-def"] = [Shen.type_func, function shen_user_lambda7731(Arg7730) {
  if (Arg7730.length < 1) return [Shen.type_func, shen_user_lambda7731, 1, Arg7730];
  var Arg7730_0 = Arg7730[0];
  var R0;
  return (((Shen.is_type(Arg7730_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg7730_0[1])) && Shen.is_type(Arg7730_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.shen->kl"], [Arg7730_0[2][1], Arg7730_0[2][2]]);})
  : (((Shen.is_type(Arg7730_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], Arg7730_0[1])) && Shen.is_type(Arg7730_0[2], Shen.type_cons))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]),
  (R0 = Shen.call(Shen.fns["shen.elim-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7730_0[2][1], Shen.call(Shen.fns["append"], [Arg7730_0[2][2], R0])]]])),
  Shen.call(Shen.fns["shen.add-macro"], [Arg7730_0[2][1]]),
  R0)
  : (((Shen.is_type(Arg7730_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7730_0[1])) && Shen.is_type(Arg7730_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.elim-def"], [Shen.call(Shen.fns["shen.yacc"], [Arg7730_0])]);})
  : ((Shen.is_type(Arg7730_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7733(Arg7732) {
  if (Arg7732.length < 1) return [Shen.type_func, shen_user_lambda7733, 1, Arg7732];
  var Arg7732_0 = Arg7732[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.elim-def"], [Arg7732_0]);})}, 1, [], undefined], Arg7730_0]);})
  : Arg7730_0))))}, 1, [], "shen.elim-def"];





Shen.fns["shen.add-macro"] = [Shen.type_func, function shen_user_lambda7735(Arg7734) {
  if (Arg7734.length < 1) return [Shen.type_func, shen_user_lambda7735, 1, Arg7734];
  var Arg7734_0 = Arg7734[0];
  return (Shen.globals["*macros*"] = Shen.call(Shen.fns["adjoin"], [Arg7734_0, (Shen.globals["*macros*"])]))}, 1, [], "shen.add-macro"];





Shen.fns["shen.packaged?"] = [Shen.type_func, function shen_user_lambda7737(Arg7736) {
  if (Arg7736.length < 1) return [Shen.type_func, shen_user_lambda7737, 1, Arg7736];
  var Arg7736_0 = Arg7736[0];
  return (((Shen.is_type(Arg7736_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7736_0[1])) && (Shen.is_type(Arg7736_0[2], Shen.type_cons) && Shen.is_type(Arg7736_0[2][2], Shen.type_cons)))))
  ? true
  : false)}, 1, [], "shen.packaged?"];





Shen.fns["external"] = [Shen.type_func, function shen_user_lambda7741(Arg7738) {
  if (Arg7738.length < 1) return [Shen.type_func, shen_user_lambda7741, 1, Arg7738];
  var Arg7738_0 = Arg7738[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda7743(Arg7742) {
  if (Arg7742.length < 1) return [Shen.type_func, shen_user_lambda7743, 1, Arg7742];
  var Arg7742_0 = Arg7742[0];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg7742_0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);})}, 1, [Arg7738_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7745(Arg7744) {
  if (Arg7744.length < 2) return [Shen.type_func, shen_user_lambda7745, 2, Arg7744];
  var Arg7744_0 = Arg7744[0], Arg7744_1 = Arg7744[1];
  return (function() {
  return Shen.simple_error(("package " + Shen.call(Shen.fns["shen.app"], [Arg7744_0, " has not been used.\x0d\x0a", [Shen.type_symbol, "shen.a"]])));})}, 2, [Arg7738_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "external"];





Shen.fns["shen.package-contents"] = [Shen.type_func, function shen_user_lambda7747(Arg7746) {
  if (Arg7746.length < 1) return [Shen.type_func, shen_user_lambda7747, 1, Arg7746];
  var Arg7746_0 = Arg7746[0];
  return (((Shen.is_type(Arg7746_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7746_0[1])) && (Shen.is_type(Arg7746_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg7746_0[2][1])) && Shen.is_type(Arg7746_0[2][2], Shen.type_cons))))))
  ? Arg7746_0[2][2][2]
  : (((Shen.is_type(Arg7746_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7746_0[1])) && (Shen.is_type(Arg7746_0[2], Shen.type_cons) && Shen.is_type(Arg7746_0[2][2], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.packageh"], [Arg7746_0[2][1], Arg7746_0[2][2][1], Arg7746_0[2][2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.package-contents"]]);})))}, 1, [], "shen.package-contents"];





Shen.fns["shen.walk"] = [Shen.type_func, function shen_user_lambda7749(Arg7748) {
  if (Arg7748.length < 2) return [Shen.type_func, shen_user_lambda7749, 2, Arg7748];
  var Arg7748_0 = Arg7748[0], Arg7748_1 = Arg7748[1];
  return ((Shen.is_type(Arg7748_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Arg7748_0, [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7751(Arg7750) {
  if (Arg7750.length < 2) return [Shen.type_func, shen_user_lambda7751, 2, Arg7750];
  var Arg7750_0 = Arg7750[0], Arg7750_1 = Arg7750[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [Arg7750_0, Arg7750_1]);})}, 2, [Arg7748_0], undefined], Arg7748_1])]);})
  : (function() {
  return Shen.call_tail(Arg7748_0, [Arg7748_1]);}))}, 2, [], "shen.walk"];





Shen.fns["compile"] = [Shen.type_func, function shen_user_lambda7753(Arg7752) {
  if (Arg7752.length < 3) return [Shen.type_func, shen_user_lambda7753, 3, Arg7752];
  var Arg7752_0 = Arg7752[0], Arg7752_1 = Arg7752[1], Arg7752_2 = Arg7752[2];
  var R0;
  return ((R0 = Shen.call(Arg7752_0, [[Shen.type_cons, Arg7752_1, [Shen.type_cons, [], []]]])),
  (((Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0)) || (!Shen.empty$question$(R0[1]))))
  ? (function() {
  return Shen.call_tail(Arg7752_2, [R0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.hdtl"], [R0]);})))}, 3, [], "compile"];





Shen.fns["fail-if"] = [Shen.type_func, function shen_user_lambda7755(Arg7754) {
  if (Arg7754.length < 2) return [Shen.type_func, shen_user_lambda7755, 2, Arg7754];
  var Arg7754_0 = Arg7754[0], Arg7754_1 = Arg7754[1];
  return ((Shen.call(Arg7754_0, [Arg7754_1]))
  ? Shen.fail_obj
  : Arg7754_1)}, 2, [], "fail-if"];





Shen.fns["@s"] = [Shen.type_func, function shen_user_lambda7757(Arg7756) {
  if (Arg7756.length < 2) return [Shen.type_func, shen_user_lambda7757, 2, Arg7756];
  var Arg7756_0 = Arg7756[0], Arg7756_1 = Arg7756[1];
  return (Arg7756_0 + Arg7756_1)}, 2, [], "@s"];





Shen.fns["tc?"] = [Shen.type_func, function shen_user_lambda7759(Arg7758) {
  if (Arg7758.length < 0) return [Shen.type_func, shen_user_lambda7759, 0, Arg7758];
  return (Shen.globals["shen.*tc*"])}, 0, [], "tc?"];





Shen.fns["ps"] = [Shen.type_func, function shen_user_lambda7763(Arg7760) {
  if (Arg7760.length < 1) return [Shen.type_func, shen_user_lambda7763, 1, Arg7760];
  var Arg7760_0 = Arg7760[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda7765(Arg7764) {
  if (Arg7764.length < 1) return [Shen.type_func, shen_user_lambda7765, 1, Arg7764];
  var Arg7764_0 = Arg7764[0];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg7764_0, [Shen.type_symbol, "shen.source"], (Shen.globals["*property-vector*"])]);})}, 1, [Arg7760_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7767(Arg7766) {
  if (Arg7766.length < 2) return [Shen.type_func, shen_user_lambda7767, 2, Arg7766];
  var Arg7766_0 = Arg7766[0], Arg7766_1 = Arg7766[1];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7766_0, " not found.\x0d\x0a", [Shen.type_symbol, "shen.a"]]));})}, 2, [Arg7760_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "ps"];





Shen.fns["stinput"] = [Shen.type_func, function shen_user_lambda7769(Arg7768) {
  if (Arg7768.length < 0) return [Shen.type_func, shen_user_lambda7769, 0, Arg7768];
  return (Shen.globals["*stinput*"])}, 0, [], "stinput"];





Shen.fns["shen.+vector?"] = [Shen.type_func, function shen_user_lambda7771(Arg7770) {
  if (Arg7770.length < 1) return [Shen.type_func, shen_user_lambda7771, 1, Arg7770];
  var Arg7770_0 = Arg7770[0];
  return (Shen.absvector$question$(Arg7770_0) && (Shen.absvector_ref(Arg7770_0, 0) > 0))}, 1, [], "shen.+vector?"];










Shen.fns["shen.fillvector"] = [Shen.type_func, function shen_user_lambda7774(Arg7773) {
  if (Arg7773.length < 4) return [Shen.type_func, shen_user_lambda7774, 4, Arg7773];
  var Arg7773_0 = Arg7773[0], Arg7773_1 = Arg7773[1], Arg7773_2 = Arg7773[2], Arg7773_3 = Arg7773[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7773_2, Arg7773_1)))
  ? Shen.absvector_set(Arg7773_0, Arg7773_2, Arg7773_3)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fillvector"], [Shen.absvector_set(Arg7773_0, Arg7773_1, Arg7773_3), (1 + Arg7773_1), Arg7773_2, Arg7773_3]);}))}, 4, [], "shen.fillvector"];










Shen.fns["vector->"] = [Shen.type_func, function shen_user_lambda7779(Arg7778) {
  if (Arg7778.length < 3) return [Shen.type_func, shen_user_lambda7779, 3, Arg7778];
  var Arg7778_0 = Arg7778[0], Arg7778_1 = Arg7778[1], Arg7778_2 = Arg7778[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7778_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0d\x0a");})
  : Shen.absvector_set(Arg7778_0, Arg7778_1, Arg7778_2))}, 3, [], "vector->"];





Shen.fns["<-vector"] = [Shen.type_func, function shen_user_lambda7781(Arg7780) {
  if (Arg7780.length < 2) return [Shen.type_func, shen_user_lambda7781, 2, Arg7780];
  var Arg7780_0 = Arg7780[0], Arg7780_1 = Arg7780[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7780_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0d\x0a");})
  : ((R0 = Shen.absvector_ref(Arg7780_0, Arg7780_1)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error("vector element not found\x0d\x0a");})
  : R0)))}, 2, [], "<-vector"];





Shen.fns["shen.posint?"] = [Shen.type_func, function shen_user_lambda7783(Arg7782) {
  if (Arg7782.length < 1) return [Shen.type_func, shen_user_lambda7783, 1, Arg7782];
  var Arg7782_0 = Arg7782[0];
  return (Shen.call(Shen.fns["integer?"], [Arg7782_0]) && (Arg7782_0 >= 0))}, 1, [], "shen.posint?"];





Shen.fns["limit"] = [Shen.type_func, function shen_user_lambda7785(Arg7784) {
  if (Arg7784.length < 1) return [Shen.type_func, shen_user_lambda7785, 1, Arg7784];
  var Arg7784_0 = Arg7784[0];
  return Shen.absvector_ref(Arg7784_0, 0)}, 1, [], "limit"];










Shen.fns["shen.analyse-symbol?"] = [Shen.type_func, function shen_user_lambda7790(Arg7789) {
  if (Arg7789.length < 1) return [Shen.type_func, shen_user_lambda7790, 1, Arg7789];
  var Arg7789_0 = Arg7789[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7789_0]))
  ? (Shen.call(Shen.fns["shen.alpha?"], [Arg7789_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7789_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-symbol?"]]);}))}, 1, [], "shen.analyse-symbol?"];





Shen.fns["shen.alpha?"] = [Shen.type_func, function shen_user_lambda7792(Arg7791) {
  if (Arg7791.length < 1) return [Shen.type_func, shen_user_lambda7792, 1, Arg7791];
  var Arg7791_0 = Arg7791[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7791_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", [Shen.type_cons, "a", [Shen.type_cons, "b", [Shen.type_cons, "c", [Shen.type_cons, "d", [Shen.type_cons, "e", [Shen.type_cons, "f", [Shen.type_cons, "g", [Shen.type_cons, "h", [Shen.type_cons, "i", [Shen.type_cons, "j", [Shen.type_cons, "k", [Shen.type_cons, "l", [Shen.type_cons, "m", [Shen.type_cons, "n", [Shen.type_cons, "o", [Shen.type_cons, "p", [Shen.type_cons, "q", [Shen.type_cons, "r", [Shen.type_cons, "s", [Shen.type_cons, "t", [Shen.type_cons, "u", [Shen.type_cons, "v", [Shen.type_cons, "w", [Shen.type_cons, "x", [Shen.type_cons, "y", [Shen.type_cons, "z", [Shen.type_cons, "=", [Shen.type_cons, "*", [Shen.type_cons, "/", [Shen.type_cons, "+", [Shen.type_cons, "-", [Shen.type_cons, "_", [Shen.type_cons, "?", [Shen.type_cons, "$", [Shen.type_cons, "!", [Shen.type_cons, "@", [Shen.type_cons, "~", [Shen.type_cons, ">", [Shen.type_cons, "<", [Shen.type_cons, "&", [Shen.type_cons, "%", [Shen.type_cons, "{", [Shen.type_cons, "}", [Shen.type_cons, ":", [Shen.type_cons, ";", [Shen.type_cons, "`", [Shen.type_cons, "#", [Shen.type_cons, "'", [Shen.type_cons, ".", []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.alpha?"];





Shen.fns["shen.alphanums?"] = [Shen.type_func, function shen_user_lambda7794(Arg7793) {
  if (Arg7793.length < 1) return [Shen.type_func, shen_user_lambda7794, 1, Arg7793];
  var Arg7793_0 = Arg7793[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7793_0)))
  ? true
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7793_0]))
  ? (Shen.call(Shen.fns["shen.alphanum?"], [Arg7793_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7793_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.alphanums?"]]);})))}, 1, [], "shen.alphanums?"];





Shen.fns["shen.alphanum?"] = [Shen.type_func, function shen_user_lambda7796(Arg7795) {
  if (Arg7795.length < 1) return [Shen.type_func, shen_user_lambda7796, 1, Arg7795];
  var Arg7795_0 = Arg7795[0];
  return (Shen.call(Shen.fns["shen.alpha?"], [Arg7795_0]) || Shen.call(Shen.fns["shen.digit?"], [Arg7795_0]))}, 1, [], "shen.alphanum?"];





Shen.fns["shen.digit?"] = [Shen.type_func, function shen_user_lambda7798(Arg7797) {
  if (Arg7797.length < 1) return [Shen.type_func, shen_user_lambda7798, 1, Arg7797];
  var Arg7797_0 = Arg7797[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7797_0, [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]);})}, 1, [], "shen.digit?"];





Shen.fns["variable?"] = [Shen.type_func, function shen_user_lambda7802(Arg7799) {
  if (Arg7799.length < 1) return [Shen.type_func, shen_user_lambda7802, 1, Arg7799];
  var Arg7799_0 = Arg7799[0];
  var R0, R1;
  return (((Shen.boolean$question$(Arg7799_0) || ((typeof(Arg7799_0) == 'number') || (typeof(Arg7799_0) == 'string'))))
  ? false
  : ((R0 = [Shen.type_func, function shen_user_lambda7804(Arg7803) {
  if (Arg7803.length < 1) return [Shen.type_func, shen_user_lambda7804, 1, Arg7803];
  var Arg7803_0 = Arg7803[0];
  var R0;
  return ((R0 = Shen.str(Arg7803_0)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.analyse-variable?"], [R0]);}))}, 1, [Arg7799_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7806(Arg7805) {
  if (Arg7805.length < 1) return [Shen.type_func, shen_user_lambda7806, 1, Arg7805];
  var Arg7805_0 = Arg7805[0];
  return false}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);})))}, 1, [], "variable?"];





Shen.fns["shen.analyse-variable?"] = [Shen.type_func, function shen_user_lambda7808(Arg7807) {
  if (Arg7807.length < 1) return [Shen.type_func, shen_user_lambda7808, 1, Arg7807];
  var Arg7807_0 = Arg7807[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7807_0]))
  ? (Shen.call(Shen.fns["shen.uppercase?"], [Arg7807_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7807_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-variable?"]]);}))}, 1, [], "shen.analyse-variable?"];





Shen.fns["shen.uppercase?"] = [Shen.type_func, function shen_user_lambda7810(Arg7809) {
  if (Arg7809.length < 1) return [Shen.type_func, shen_user_lambda7810, 1, Arg7809];
  var Arg7809_0 = Arg7809[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7809_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", []]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.uppercase?"];





Shen.fns["gensym"] = [Shen.type_func, function shen_user_lambda7812(Arg7811) {
  if (Arg7811.length < 1) return [Shen.type_func, shen_user_lambda7812, 1, Arg7811];
  var Arg7811_0 = Arg7811[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg7811_0, (Shen.globals["shen.*gensym*"] = (1 + (Shen.globals["shen.*gensym*"])))]);})}, 1, [], "gensym"];





Shen.fns["concat"] = [Shen.type_func, function shen_user_lambda7814(Arg7813) {
  if (Arg7813.length < 2) return [Shen.type_func, shen_user_lambda7814, 2, Arg7813];
  var Arg7813_0 = Arg7813[0], Arg7813_1 = Arg7813[1];
  return (function() {
  return Shen.intern((Shen.str(Arg7813_0) + Shen.str(Arg7813_1)));})}, 2, [], "concat"];










Shen.fns["fst"] = [Shen.type_func, function shen_user_lambda7817(Arg7816) {
  if (Arg7816.length < 1) return [Shen.type_func, shen_user_lambda7817, 1, Arg7816];
  var Arg7816_0 = Arg7816[0];
  return Shen.absvector_ref(Arg7816_0, 1)}, 1, [], "fst"];





Shen.fns["snd"] = [Shen.type_func, function shen_user_lambda7819(Arg7818) {
  if (Arg7818.length < 1) return [Shen.type_func, shen_user_lambda7819, 1, Arg7818];
  var Arg7818_0 = Arg7818[0];
  return Shen.absvector_ref(Arg7818_0, 2)}, 1, [], "snd"];





Shen.fns["tuple?"] = [Shen.type_func, function shen_user_lambda7823(Arg7820) {
  if (Arg7820.length < 1) return [Shen.type_func, shen_user_lambda7823, 1, Arg7820];
  var Arg7820_0 = Arg7820[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda7825(Arg7824) {
  if (Arg7824.length < 1) return [Shen.type_func, shen_user_lambda7825, 1, Arg7824];
  var Arg7824_0 = Arg7824[0];
  return (Shen.absvector$question$(Arg7824_0) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tuple"], Shen.absvector_ref(Arg7824_0, 0))))}, 1, [Arg7820_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7827(Arg7826) {
  if (Arg7826.length < 1) return [Shen.type_func, shen_user_lambda7827, 1, Arg7826];
  var Arg7826_0 = Arg7826[0];
  return false}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "tuple?"];





Shen.fns["append"] = [Shen.type_func, function shen_user_lambda7829(Arg7828) {
  if (Arg7828.length < 2) return [Shen.type_func, shen_user_lambda7829, 2, Arg7828];
  var Arg7828_0 = Arg7828[0], Arg7828_1 = Arg7828[1];
  return ((Shen.empty$question$(Arg7828_0))
  ? Arg7828_1
  : ((Shen.is_type(Arg7828_0, Shen.type_cons))
  ? [Shen.type_cons, Arg7828_0[1], Shen.call(Shen.fns["append"], [Arg7828_0[2], Arg7828_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "append"]]);})))}, 2, [], "append"];





Shen.fns["@v"] = [Shen.type_func, function shen_user_lambda7831(Arg7830) {
  if (Arg7830.length < 2) return [Shen.type_func, shen_user_lambda7831, 2, Arg7830];
  var Arg7830_0 = Arg7830[0], Arg7830_1 = Arg7830[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7830_1])),
  (R1 = Shen.vector((R0 + 1))),
  (R1 = Shen.call(Shen.fns["vector->"], [R1, 1, Arg7830_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? R1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7830_1, 1, R0, R1]);})))}, 2, [], "@v"];





Shen.fns["shen.@v-help"] = [Shen.type_func, function shen_user_lambda7833(Arg7832) {
  if (Arg7832.length < 4) return [Shen.type_func, shen_user_lambda7833, 4, Arg7832];
  var Arg7832_0 = Arg7832[0], Arg7832_1 = Arg7832[1], Arg7832_2 = Arg7832[2], Arg7832_3 = Arg7832[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7832_2, Arg7832_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7832_0, Arg7832_3, Arg7832_2, (Arg7832_2 + 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7832_0, (Arg7832_1 + 1), Arg7832_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7832_0, Arg7832_3, Arg7832_1, (Arg7832_1 + 1)])]);}))}, 4, [], "shen.@v-help"];





Shen.fns["shen.copyfromvector"] = [Shen.type_func, function shen_user_lambda7837(Arg7834) {
  if (Arg7834.length < 4) return [Shen.type_func, shen_user_lambda7837, 4, Arg7834];
  var Arg7834_0 = Arg7834[0], Arg7834_1 = Arg7834[1], Arg7834_2 = Arg7834[2], Arg7834_3 = Arg7834[3];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda7839(Arg7838) {
  if (Arg7838.length < 4) return [Shen.type_func, shen_user_lambda7839, 4, Arg7838];
  var Arg7838_0 = Arg7838[0], Arg7838_1 = Arg7838[1], Arg7838_2 = Arg7838[2], Arg7838_3 = Arg7838[3];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg7838_3, Arg7838_0, Shen.call(Shen.fns["<-vector"], [Arg7838_1, Arg7838_2])]);})}, 4, [Arg7834_3, Arg7834_0, Arg7834_2, Arg7834_1], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7841(Arg7840) {
  if (Arg7840.length < 2) return [Shen.type_func, shen_user_lambda7841, 2, Arg7840];
  var Arg7840_0 = Arg7840[0], Arg7840_1 = Arg7840[1];
  return Arg7840_0}, 2, [Arg7834_1], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 4, [], "shen.copyfromvector"];





Shen.fns["hdv"] = [Shen.type_func, function shen_user_lambda7845(Arg7842) {
  if (Arg7842.length < 1) return [Shen.type_func, shen_user_lambda7845, 1, Arg7842];
  var Arg7842_0 = Arg7842[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda7847(Arg7846) {
  if (Arg7846.length < 1) return [Shen.type_func, shen_user_lambda7847, 1, Arg7846];
  var Arg7846_0 = Arg7846[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg7846_0, 1]);})}, 1, [Arg7842_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7849(Arg7848) {
  if (Arg7848.length < 2) return [Shen.type_func, shen_user_lambda7849, 2, Arg7848];
  var Arg7848_0 = Arg7848[0], Arg7848_1 = Arg7848[1];
  return (function() {
  return Shen.simple_error(("hdv needs a non-empty vector as an argument; not " + Shen.call(Shen.fns["shen.app"], [Arg7848_0, "\x0d\x0a", [Shen.type_symbol, "shen.s"]])));})}, 2, [Arg7842_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "hdv"];





Shen.fns["tlv"] = [Shen.type_func, function shen_user_lambda7851(Arg7850) {
  if (Arg7850.length < 1) return [Shen.type_func, shen_user_lambda7851, 1, Arg7850];
  var Arg7850_0 = Arg7850[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7850_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? (function() {
  return Shen.simple_error("cannot take the tail of the empty vector\x0d\x0a");})
  : ((Shen.unwind_tail(Shen.$eq$(R0, 1)))
  ? (function() {
  return Shen.vector(0);})
  : (Shen.vector((R0 - 1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7850_0, 2, R0, Shen.vector((R0 - 1))]);})))))}, 1, [], "tlv"];





Shen.fns["shen.tlv-help"] = [Shen.type_func, function shen_user_lambda7853(Arg7852) {
  if (Arg7852.length < 4) return [Shen.type_func, shen_user_lambda7853, 4, Arg7852];
  var Arg7852_0 = Arg7852[0], Arg7852_1 = Arg7852[1], Arg7852_2 = Arg7852[2], Arg7852_3 = Arg7852[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7852_2, Arg7852_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7852_0, Arg7852_3, Arg7852_2, (Arg7852_2 - 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7852_0, (Arg7852_1 + 1), Arg7852_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7852_0, Arg7852_3, Arg7852_1, (Arg7852_1 - 1)])]);}))}, 4, [], "shen.tlv-help"];





Shen.fns["assoc"] = [Shen.type_func, function shen_user_lambda7855(Arg7854) {
  if (Arg7854.length < 2) return [Shen.type_func, shen_user_lambda7855, 2, Arg7854];
  var Arg7854_0 = Arg7854[0], Arg7854_1 = Arg7854[1];
  return ((Shen.empty$question$(Arg7854_1))
  ? []
  : (((Shen.is_type(Arg7854_1, Shen.type_cons) && (Shen.is_type(Arg7854_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7854_1[1][1], Arg7854_0)))))
  ? Arg7854_1[1]
  : ((Shen.is_type(Arg7854_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["assoc"], [Arg7854_0, Arg7854_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "assoc"]]);}))))}, 2, [], "assoc"];





Shen.fns["boolean?"] = [Shen.type_func, function shen_user_lambda7857(Arg7856) {
  if (Arg7856.length < 1) return [Shen.type_func, shen_user_lambda7857, 1, Arg7856];
  var Arg7856_0 = Arg7856[0];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg7856_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg7856_0)))
  ? true
  : false))}, 1, [], "boolean?"];





Shen.fns["nl"] = [Shen.type_func, function shen_user_lambda7859(Arg7858) {
  if (Arg7858.length < 1) return [Shen.type_func, shen_user_lambda7859, 1, Arg7858];
  var Arg7858_0 = Arg7858[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7858_0)))
  ? 0
  : (Shen.call(Shen.fns["shen.prhush"], ["\x0d\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [(Arg7858_0 - 1)]);})))}, 1, [], "nl"];





Shen.fns["difference"] = [Shen.type_func, function shen_user_lambda7861(Arg7860) {
  if (Arg7860.length < 2) return [Shen.type_func, shen_user_lambda7861, 2, Arg7860];
  var Arg7860_0 = Arg7860[0], Arg7860_1 = Arg7860[1];
  return ((Shen.empty$question$(Arg7860_0))
  ? []
  : ((Shen.is_type(Arg7860_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7860_0[1], Arg7860_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["difference"], [Arg7860_0[2], Arg7860_1]);})
  : [Shen.type_cons, Arg7860_0[1], Shen.call(Shen.fns["difference"], [Arg7860_0[2], Arg7860_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "difference"]]);})))}, 2, [], "difference"];





Shen.fns["do"] = [Shen.type_func, function shen_user_lambda7863(Arg7862) {
  if (Arg7862.length < 2) return [Shen.type_func, shen_user_lambda7863, 2, Arg7862];
  var Arg7862_0 = Arg7862[0], Arg7862_1 = Arg7862[1];
  return Arg7862_1}, 2, [], "do"];





Shen.fns["element?"] = [Shen.type_func, function shen_user_lambda7865(Arg7864) {
  if (Arg7864.length < 2) return [Shen.type_func, shen_user_lambda7865, 2, Arg7864];
  var Arg7864_0 = Arg7864[0], Arg7864_1 = Arg7864[1];
  return ((Shen.empty$question$(Arg7864_1))
  ? false
  : (((Shen.is_type(Arg7864_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7864_1[1], Arg7864_0))))
  ? true
  : ((Shen.is_type(Arg7864_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7864_0, Arg7864_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "element?"]]);}))))}, 2, [], "element?"];










Shen.fns["fix"] = [Shen.type_func, function shen_user_lambda7868(Arg7867) {
  if (Arg7867.length < 2) return [Shen.type_func, shen_user_lambda7868, 2, Arg7867];
  var Arg7867_0 = Arg7867[0], Arg7867_1 = Arg7867[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7867_0, Arg7867_1, Shen.call(Arg7867_0, [Arg7867_1])]);})}, 2, [], "fix"];





Shen.fns["shen.fix-help"] = [Shen.type_func, function shen_user_lambda7870(Arg7869) {
  if (Arg7869.length < 3) return [Shen.type_func, shen_user_lambda7870, 3, Arg7869];
  var Arg7869_0 = Arg7869[0], Arg7869_1 = Arg7869[1], Arg7869_2 = Arg7869[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7869_2, Arg7869_1)))
  ? Arg7869_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7869_0, Arg7869_2, Shen.call(Arg7869_0, [Arg7869_2])]);}))}, 3, [], "shen.fix-help"];





Shen.fns["put"] = [Shen.type_func, function shen_user_lambda7874(Arg7871) {
  if (Arg7871.length < 4) return [Shen.type_func, shen_user_lambda7874, 4, Arg7871];
  var Arg7871_0 = Arg7871[0], Arg7871_1 = Arg7871[1], Arg7871_2 = Arg7871[2], Arg7871_3 = Arg7871[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7871_0, Shen.call(Shen.fns["limit"], [Arg7871_3])])),
  ((R1 = [Shen.type_func, function shen_user_lambda7876(Arg7875) {
  if (Arg7875.length < 5) return [Shen.type_func, shen_user_lambda7876, 5, Arg7875];
  var Arg7875_0 = Arg7875[0], Arg7875_1 = Arg7875[1], Arg7875_2 = Arg7875[2], Arg7875_3 = Arg7875[3], Arg7875_4 = Arg7875[4];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg7875_0, Arg7875_1]);})}, 5, [Arg7871_3, R0, Arg7871_0, Arg7871_1, Arg7871_2], undefined]),
  (R2 = [Shen.type_func, function shen_user_lambda7878(Arg7877) {
  if (Arg7877.length < 1) return [Shen.type_func, shen_user_lambda7878, 1, Arg7877];
  var Arg7877_0 = Arg7877[0];
  return []}, 1, [], undefined]),
  (R1 = Shen.trap_error(R1, R2))),
  Shen.call(Shen.fns["vector->"], [Arg7871_3, R0, Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7871_0, Arg7871_1, Arg7871_2, R1])]),
  Arg7871_2)}, 4, [], "put"];





Shen.fns["shen.change-pointer-value"] = [Shen.type_func, function shen_user_lambda7880(Arg7879) {
  if (Arg7879.length < 4) return [Shen.type_func, shen_user_lambda7880, 4, Arg7879];
  var Arg7879_0 = Arg7879[0], Arg7879_1 = Arg7879[1], Arg7879_2 = Arg7879[2], Arg7879_3 = Arg7879[3];
  return ((Shen.empty$question$(Arg7879_3))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg7879_0, [Shen.type_cons, Arg7879_1, []]], Arg7879_2], []]
  : (((Shen.is_type(Arg7879_3, Shen.type_cons) && (Shen.is_type(Arg7879_3[1], Shen.type_cons) && (Shen.is_type(Arg7879_3[1][1], Shen.type_cons) && (Shen.is_type(Arg7879_3[1][1][2], Shen.type_cons) && (Shen.empty$question$(Arg7879_3[1][1][2][2]) && (Shen.unwind_tail(Shen.$eq$(Arg7879_3[1][1][2][1], Arg7879_1)) && Shen.unwind_tail(Shen.$eq$(Arg7879_3[1][1][1], Arg7879_0)))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg7879_3[1][1], Arg7879_2], Arg7879_3[2]]
  : ((Shen.is_type(Arg7879_3, Shen.type_cons))
  ? [Shen.type_cons, Arg7879_3[1], Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7879_0, Arg7879_1, Arg7879_2, Arg7879_3[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.change-pointer-value"]]);}))))}, 4, [], "shen.change-pointer-value"];





Shen.fns["get"] = [Shen.type_func, function shen_user_lambda7884(Arg7881) {
  if (Arg7881.length < 3) return [Shen.type_func, shen_user_lambda7884, 3, Arg7881];
  var Arg7881_0 = Arg7881[0], Arg7881_1 = Arg7881[1], Arg7881_2 = Arg7881[2];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7881_0, Shen.call(Shen.fns["limit"], [Arg7881_2])])),
  ((R0 = [Shen.type_func, function shen_user_lambda7886(Arg7885) {
  if (Arg7885.length < 4) return [Shen.type_func, shen_user_lambda7886, 4, Arg7885];
  var Arg7885_0 = Arg7885[0], Arg7885_1 = Arg7885[1], Arg7885_2 = Arg7885[2], Arg7885_3 = Arg7885[3];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg7885_0, Arg7885_1]);})}, 4, [Arg7881_2, R0, Arg7881_0, Arg7881_1], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7888(Arg7887) {
  if (Arg7887.length < 1) return [Shen.type_func, shen_user_lambda7888, 1, Arg7887];
  var Arg7887_0 = Arg7887[0];
  return (function() {
  return Shen.simple_error("pointer not found\x0d\x0a");})}, 1, [], undefined]),
  (R0 = Shen.trap_error(R0, R1))),
  (R0 = Shen.call(Shen.fns["assoc"], [[Shen.type_cons, Arg7881_0, [Shen.type_cons, Arg7881_1, []]], R0])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("value not found\x0d\x0a");})
  : R0[2]))}, 3, [], "get"];





Shen.fns["hash"] = [Shen.type_func, function shen_user_lambda7890(Arg7889) {
  if (Arg7889.length < 2) return [Shen.type_func, shen_user_lambda7890, 2, Arg7889];
  var Arg7889_0 = Arg7889[0], Arg7889_1 = Arg7889[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.mod"], [Shen.call(Shen.fns["sum"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7892(Arg7891) {
  if (Arg7891.length < 1) return [Shen.type_func, shen_user_lambda7892, 1, Arg7891];
  var Arg7891_0 = Arg7891[0];
  return (function() {
  return Shen.string_$gt$n(Arg7891_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg7889_0])])]), Arg7889_1])),
  ((Shen.unwind_tail(Shen.$eq$(0, R0)))
  ? 1
  : R0))}, 2, [], "hash"];





Shen.fns["shen.mod"] = [Shen.type_func, function shen_user_lambda7894(Arg7893) {
  if (Arg7893.length < 2) return [Shen.type_func, shen_user_lambda7894, 2, Arg7893];
  var Arg7893_0 = Arg7893[0], Arg7893_1 = Arg7893[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7893_0, Shen.call(Shen.fns["shen.multiples"], [Arg7893_0, [Shen.type_cons, Arg7893_1, []]])]);})}, 2, [], "shen.mod"];





Shen.fns["shen.multiples"] = [Shen.type_func, function shen_user_lambda7896(Arg7895) {
  if (Arg7895.length < 2) return [Shen.type_func, shen_user_lambda7896, 2, Arg7895];
  var Arg7895_0 = Arg7895[0], Arg7895_1 = Arg7895[1];
  return (((Shen.is_type(Arg7895_1, Shen.type_cons) && (Arg7895_1[1] > Arg7895_0)))
  ? Arg7895_1[2]
  : ((Shen.is_type(Arg7895_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.multiples"], [Arg7895_0, [Shen.type_cons, (2 * Arg7895_1[1]), Arg7895_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiples"]]);})))}, 2, [], "shen.multiples"];





Shen.fns["shen.modh"] = [Shen.type_func, function shen_user_lambda7898(Arg7897) {
  if (Arg7897.length < 2) return [Shen.type_func, shen_user_lambda7898, 2, Arg7897];
  var Arg7897_0 = Arg7897[0], Arg7897_1 = Arg7897[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7897_0)))
  ? 0
  : ((Shen.empty$question$(Arg7897_1))
  ? Arg7897_0
  : (((Shen.is_type(Arg7897_1, Shen.type_cons) && (Arg7897_1[1] > Arg7897_0)))
  ? ((Shen.empty$question$(Arg7897_1[2]))
  ? Arg7897_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7897_0, Arg7897_1[2]]);}))
  : ((Shen.is_type(Arg7897_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [(Arg7897_0 - Arg7897_1[1]), Arg7897_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.modh"]]);})))))}, 2, [], "shen.modh"];





Shen.fns["sum"] = [Shen.type_func, function shen_user_lambda7900(Arg7899) {
  if (Arg7899.length < 1) return [Shen.type_func, shen_user_lambda7900, 1, Arg7899];
  var Arg7899_0 = Arg7899[0];
  return ((Shen.empty$question$(Arg7899_0))
  ? 0
  : ((Shen.is_type(Arg7899_0, Shen.type_cons))
  ? (Arg7899_0[1] + Shen.call(Shen.fns["sum"], [Arg7899_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "sum"]]);})))}, 1, [], "sum"];





Shen.fns["head"] = [Shen.type_func, function shen_user_lambda7902(Arg7901) {
  if (Arg7901.length < 1) return [Shen.type_func, shen_user_lambda7902, 1, Arg7901];
  var Arg7901_0 = Arg7901[0];
  return ((Shen.is_type(Arg7901_0, Shen.type_cons))
  ? Arg7901_0[1]
  : (function() {
  return Shen.simple_error("head expects a non-empty list");}))}, 1, [], "head"];





Shen.fns["tail"] = [Shen.type_func, function shen_user_lambda7904(Arg7903) {
  if (Arg7903.length < 1) return [Shen.type_func, shen_user_lambda7904, 1, Arg7903];
  var Arg7903_0 = Arg7903[0];
  return ((Shen.is_type(Arg7903_0, Shen.type_cons))
  ? Arg7903_0[2]
  : (function() {
  return Shen.simple_error("tail expects a non-empty list");}))}, 1, [], "tail"];





Shen.fns["hdstr"] = [Shen.type_func, function shen_user_lambda7906(Arg7905) {
  if (Arg7905.length < 1) return [Shen.type_func, shen_user_lambda7906, 1, Arg7905];
  var Arg7905_0 = Arg7905[0];
  return Arg7905_0[0]}, 1, [], "hdstr"];





Shen.fns["intersection"] = [Shen.type_func, function shen_user_lambda7908(Arg7907) {
  if (Arg7907.length < 2) return [Shen.type_func, shen_user_lambda7908, 2, Arg7907];
  var Arg7907_0 = Arg7907[0], Arg7907_1 = Arg7907[1];
  return ((Shen.empty$question$(Arg7907_0))
  ? []
  : ((Shen.is_type(Arg7907_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7907_0[1], Arg7907_1]))
  ? [Shen.type_cons, Arg7907_0[1], Shen.call(Shen.fns["intersection"], [Arg7907_0[2], Arg7907_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["intersection"], [Arg7907_0[2], Arg7907_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "intersection"]]);})))}, 2, [], "intersection"];





Shen.fns["reverse"] = [Shen.type_func, function shen_user_lambda7910(Arg7909) {
  if (Arg7909.length < 1) return [Shen.type_func, shen_user_lambda7910, 1, Arg7909];
  var Arg7909_0 = Arg7909[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7909_0, []]);})}, 1, [], "reverse"];





Shen.fns["shen.reverse_help"] = [Shen.type_func, function shen_user_lambda7912(Arg7911) {
  if (Arg7911.length < 2) return [Shen.type_func, shen_user_lambda7912, 2, Arg7911];
  var Arg7911_0 = Arg7911[0], Arg7911_1 = Arg7911[1];
  return ((Shen.empty$question$(Arg7911_0))
  ? Arg7911_1
  : ((Shen.is_type(Arg7911_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7911_0[2], [Shen.type_cons, Arg7911_0[1], Arg7911_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.reverse_help"]]);})))}, 2, [], "shen.reverse_help"];





Shen.fns["union"] = [Shen.type_func, function shen_user_lambda7914(Arg7913) {
  if (Arg7913.length < 2) return [Shen.type_func, shen_user_lambda7914, 2, Arg7913];
  var Arg7913_0 = Arg7913[0], Arg7913_1 = Arg7913[1];
  return ((Shen.empty$question$(Arg7913_0))
  ? Arg7913_1
  : ((Shen.is_type(Arg7913_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7913_0[1], Arg7913_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Arg7913_0[2], Arg7913_1]);})
  : [Shen.type_cons, Arg7913_0[1], Shen.call(Shen.fns["union"], [Arg7913_0[2], Arg7913_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "union"]]);})))}, 2, [], "union"];





Shen.fns["y-or-n?"] = [Shen.type_func, function shen_user_lambda7916(Arg7915) {
  if (Arg7915.length < 1) return [Shen.type_func, shen_user_lambda7916, 1, Arg7915];
  var Arg7915_0 = Arg7915[0];
  var R0;
  return (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg7915_0]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [" (y/n) ", Shen.call(Shen.fns["stoutput"], [])]),
  (R0 = Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["read"], [Shen.call(Shen.fns["stinput"], [])]), "", [Shen.type_symbol, "shen.s"]])),
  ((Shen.unwind_tail(Shen.$eq$("y", R0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$("n", R0)))
  ? false
  : (Shen.call(Shen.fns["shen.prhush"], ["please answer y or n\x0d\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["y-or-n?"], [Arg7915_0]);})))))}, 1, [], "y-or-n?"];










Shen.fns["subst"] = [Shen.type_func, function shen_user_lambda7919(Arg7918) {
  if (Arg7918.length < 3) return [Shen.type_func, shen_user_lambda7919, 3, Arg7918];
  var Arg7918_0 = Arg7918[0], Arg7918_1 = Arg7918[1], Arg7918_2 = Arg7918[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7918_2, Arg7918_1)))
  ? Arg7918_0
  : ((Shen.is_type(Arg7918_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["subst"], [Arg7918_0, Arg7918_1, Arg7918_2[1]]), Shen.call(Shen.fns["subst"], [Arg7918_0, Arg7918_1, Arg7918_2[2]])]
  : Arg7918_2))}, 3, [], "subst"];





Shen.fns["explode"] = [Shen.type_func, function shen_user_lambda7921(Arg7920) {
  if (Arg7920.length < 1) return [Shen.type_func, shen_user_lambda7921, 1, Arg7920];
  var Arg7920_0 = Arg7920[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.explode-h"], [Shen.call(Shen.fns["shen.app"], [Arg7920_0, "", [Shen.type_symbol, "shen.a"]])]);})}, 1, [], "explode"];





Shen.fns["shen.explode-h"] = [Shen.type_func, function shen_user_lambda7923(Arg7922) {
  if (Arg7922.length < 1) return [Shen.type_func, shen_user_lambda7923, 1, Arg7922];
  var Arg7922_0 = Arg7922[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7922_0)))
  ? []
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7922_0]))
  ? [Shen.type_cons, Arg7922_0[0], Shen.call(Shen.fns["shen.explode-h"], [Shen.tlstr(Arg7922_0)])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explode-h"]]);})))}, 1, [], "shen.explode-h"];





Shen.fns["cd"] = [Shen.type_func, function shen_user_lambda7925(Arg7924) {
  if (Arg7924.length < 1) return [Shen.type_func, shen_user_lambda7925, 1, Arg7924];
  var Arg7924_0 = Arg7924[0];
  return (Shen.globals["*home-directory*"] = ((Shen.unwind_tail(Shen.$eq$(Arg7924_0, "")))
  ? ""
  : Shen.call(Shen.fns["shen.app"], [Arg7924_0, "/", [Shen.type_symbol, "shen.a"]])))}, 1, [], "cd"];





Shen.fns["map"] = [Shen.type_func, function shen_user_lambda7927(Arg7926) {
  if (Arg7926.length < 2) return [Shen.type_func, shen_user_lambda7927, 2, Arg7926];
  var Arg7926_0 = Arg7926[0], Arg7926_1 = Arg7926[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7926_0, Arg7926_1, []]);})}, 2, [], "map"];





Shen.fns["shen.map-h"] = [Shen.type_func, function shen_user_lambda7929(Arg7928) {
  if (Arg7928.length < 3) return [Shen.type_func, shen_user_lambda7929, 3, Arg7928];
  var Arg7928_0 = Arg7928[0], Arg7928_1 = Arg7928[1], Arg7928_2 = Arg7928[2];
  return ((Shen.empty$question$(Arg7928_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg7928_2]);})
  : ((Shen.is_type(Arg7928_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7928_0, Arg7928_1[2], [Shen.type_cons, Shen.call(Arg7928_0, [Arg7928_1[1]]), Arg7928_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.map-h"]]);})))}, 3, [], "shen.map-h"];





Shen.fns["length"] = [Shen.type_func, function shen_user_lambda7931(Arg7930) {
  if (Arg7930.length < 1) return [Shen.type_func, shen_user_lambda7931, 1, Arg7930];
  var Arg7930_0 = Arg7930[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7930_0, 0]);})}, 1, [], "length"];





Shen.fns["shen.length-h"] = [Shen.type_func, function shen_user_lambda7933(Arg7932) {
  if (Arg7932.length < 2) return [Shen.type_func, shen_user_lambda7933, 2, Arg7932];
  var Arg7932_0 = Arg7932[0], Arg7932_1 = Arg7932[1];
  return ((Shen.empty$question$(Arg7932_0))
  ? Arg7932_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7932_0[2], (Arg7932_1 + 1)]);}))}, 2, [], "shen.length-h"];





Shen.fns["occurrences"] = [Shen.type_func, function shen_user_lambda7935(Arg7934) {
  if (Arg7934.length < 2) return [Shen.type_func, shen_user_lambda7935, 2, Arg7934];
  var Arg7934_0 = Arg7934[0], Arg7934_1 = Arg7934[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7934_1, Arg7934_0)))
  ? 1
  : ((Shen.is_type(Arg7934_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["occurrences"], [Arg7934_0, Arg7934_1[1]]) + Shen.call(Shen.fns["occurrences"], [Arg7934_0, Arg7934_1[2]]))
  : 0))}, 2, [], "occurrences"];





Shen.fns["nth"] = [Shen.type_func, function shen_user_lambda7937(Arg7936) {
  if (Arg7936.length < 2) return [Shen.type_func, shen_user_lambda7937, 2, Arg7936];
  var Arg7936_0 = Arg7936[0], Arg7936_1 = Arg7936[1];
  return (((Shen.unwind_tail(Shen.$eq$(1, Arg7936_0)) && Shen.is_type(Arg7936_1, Shen.type_cons)))
  ? Arg7936_1[1]
  : ((Shen.is_type(Arg7936_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["nth"], [(Arg7936_0 - 1), Arg7936_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "nth"]]);})))}, 2, [], "nth"];





Shen.fns["integer?"] = [Shen.type_func, function shen_user_lambda7939(Arg7938) {
  if (Arg7938.length < 1) return [Shen.type_func, shen_user_lambda7939, 1, Arg7938];
  var Arg7938_0 = Arg7938[0];
  var R0;
  return ((typeof(Arg7938_0) == 'number') && ((R0 = Shen.call(Shen.fns["shen.abs"], [Arg7938_0])),
  Shen.call(Shen.fns["shen.integer-test?"], [R0, Shen.call(Shen.fns["shen.magless"], [R0, 1])])))}, 1, [], "integer?"];





Shen.fns["shen.abs"] = [Shen.type_func, function shen_user_lambda7941(Arg7940) {
  if (Arg7940.length < 1) return [Shen.type_func, shen_user_lambda7941, 1, Arg7940];
  var Arg7940_0 = Arg7940[0];
  return (((Arg7940_0 > 0))
  ? Arg7940_0
  : (0 - Arg7940_0))}, 1, [], "shen.abs"];





Shen.fns["shen.magless"] = [Shen.type_func, function shen_user_lambda7943(Arg7942) {
  if (Arg7942.length < 2) return [Shen.type_func, shen_user_lambda7943, 2, Arg7942];
  var Arg7942_0 = Arg7942[0], Arg7942_1 = Arg7942[1];
  var R0;
  return ((R0 = (Arg7942_1 * 2)),
  (((R0 > Arg7942_0))
  ? Arg7942_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.magless"], [Arg7942_0, R0]);})))}, 2, [], "shen.magless"];





Shen.fns["shen.integer-test?"] = [Shen.type_func, function shen_user_lambda7945(Arg7944) {
  if (Arg7944.length < 2) return [Shen.type_func, shen_user_lambda7945, 2, Arg7944];
  var Arg7944_0 = Arg7944[0], Arg7944_1 = Arg7944[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7944_0)))
  ? true
  : (((1 > Arg7944_0))
  ? false
  : ((R0 = (Arg7944_0 - Arg7944_1)),
  (((0 > R0))
  ? (function() {
  return Shen.call_tail(Shen.fns["integer?"], [Arg7944_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.integer-test?"], [R0, Arg7944_1]);})))))}, 2, [], "shen.integer-test?"];





Shen.fns["mapcan"] = [Shen.type_func, function shen_user_lambda7947(Arg7946) {
  if (Arg7946.length < 2) return [Shen.type_func, shen_user_lambda7947, 2, Arg7946];
  var Arg7946_0 = Arg7946[0], Arg7946_1 = Arg7946[1];
  return ((Shen.empty$question$(Arg7946_1))
  ? []
  : ((Shen.is_type(Arg7946_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Arg7946_0, [Arg7946_1[1]]), Shen.call(Shen.fns["mapcan"], [Arg7946_0, Arg7946_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "mapcan"]]);})))}, 2, [], "mapcan"];





Shen.fns["=="] = [Shen.type_func, function shen_user_lambda7949(Arg7948) {
  if (Arg7948.length < 2) return [Shen.type_func, shen_user_lambda7949, 2, Arg7948];
  var Arg7948_0 = Arg7948[0], Arg7948_1 = Arg7948[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7948_1, Arg7948_0)))
  ? true
  : false)}, 2, [], "=="];





Shen.fns["abort"] = [Shen.type_func, function shen_user_lambda7951(Arg7950) {
  if (Arg7950.length < 0) return [Shen.type_func, shen_user_lambda7951, 0, Arg7950];
  return (function() {
  return Shen.simple_error("");})}, 0, [], "abort"];





Shen.fns["bound?"] = [Shen.type_func, function shen_user_lambda7955(Arg7952) {
  if (Arg7952.length < 1) return [Shen.type_func, shen_user_lambda7955, 1, Arg7952];
  var Arg7952_0 = Arg7952[0];
  var R0, R1;
  return (Shen.is_type(Arg7952_0, Shen.type_symbol) && (((R0 = [Shen.type_func, function shen_user_lambda7957(Arg7956) {
  if (Arg7956.length < 1) return [Shen.type_func, shen_user_lambda7957, 1, Arg7956];
  var Arg7956_0 = Arg7956[0];
  return (Shen.globals[Arg7956_0[1]])}, 1, [Arg7952_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7959(Arg7958) {
  if (Arg7958.length < 1) return [Shen.type_func, shen_user_lambda7959, 1, Arg7958];
  var Arg7958_0 = Arg7958[0];
  return [Shen.type_symbol, "shen.this-symbol-is-unbound"]}, 1, [], undefined]),
  (R0 = Shen.trap_error(R0, R1))),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.this-symbol-is-unbound"])))
  ? false
  : true)))}, 1, [], "bound?"];





Shen.fns["shen.string->bytes"] = [Shen.type_func, function shen_user_lambda7961(Arg7960) {
  if (Arg7960.length < 1) return [Shen.type_func, shen_user_lambda7961, 1, Arg7960];
  var Arg7960_0 = Arg7960[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7960_0)))
  ? []
  : [Shen.type_cons, Shen.string_$gt$n(Arg7960_0[0]), Shen.call(Shen.fns["shen.string->bytes"], [Shen.tlstr(Arg7960_0)])])}, 1, [], "shen.string->bytes"];





Shen.fns["maxinferences"] = [Shen.type_func, function shen_user_lambda7963(Arg7962) {
  if (Arg7962.length < 1) return [Shen.type_func, shen_user_lambda7963, 1, Arg7962];
  var Arg7962_0 = Arg7962[0];
  return (Shen.globals["shen.*maxinferences*"] = Arg7962_0)}, 1, [], "maxinferences"];





Shen.fns["inferences"] = [Shen.type_func, function shen_user_lambda7965(Arg7964) {
  if (Arg7964.length < 0) return [Shen.type_func, shen_user_lambda7965, 0, Arg7964];
  return (Shen.globals["shen.*infs*"])}, 0, [], "inferences"];





Shen.fns["protect"] = [Shen.type_func, function shen_user_lambda7967(Arg7966) {
  if (Arg7966.length < 1) return [Shen.type_func, shen_user_lambda7967, 1, Arg7966];
  var Arg7966_0 = Arg7966[0];
  return Arg7966_0}, 1, [], "protect"];





Shen.fns["stoutput"] = [Shen.type_func, function shen_user_lambda7969(Arg7968) {
  if (Arg7968.length < 0) return [Shen.type_func, shen_user_lambda7969, 0, Arg7968];
  return (Shen.globals["*stoutput*"])}, 0, [], "stoutput"];





Shen.fns["string->symbol"] = [Shen.type_func, function shen_user_lambda7971(Arg7970) {
  if (Arg7970.length < 1) return [Shen.type_func, shen_user_lambda7971, 1, Arg7970];
  var Arg7970_0 = Arg7970[0];
  var R0;
  return ((R0 = Shen.intern(Arg7970_0)),
  ((Shen.is_type(R0, Shen.type_symbol))
  ? R0
  : (function() {
  return Shen.simple_error(("cannot intern " + Shen.call(Shen.fns["shen.app"], [Arg7970_0, " to a symbol", [Shen.type_symbol, "shen.s"]])));})))}, 1, [], "string->symbol"];





Shen.fns["shen.optimise"] = [Shen.type_func, function shen_user_lambda7973(Arg7972) {
  if (Arg7972.length < 1) return [Shen.type_func, shen_user_lambda7973, 1, Arg7972];
  var Arg7972_0 = Arg7972[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7972_0)))
  ? (Shen.globals["shen.*optimise*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7972_0)))
  ? (Shen.globals["shen.*optimise*"] = false)
  : (function() {
  return Shen.simple_error("optimise expects a + or a -.\x0d\x0a");})))}, 1, [], "shen.optimise"];





Shen.fns["os"] = [Shen.type_func, function shen_user_lambda7975(Arg7974) {
  if (Arg7974.length < 0) return [Shen.type_func, shen_user_lambda7975, 0, Arg7974];
  return (Shen.globals["*os*"])}, 0, [], "os"];





Shen.fns["language"] = [Shen.type_func, function shen_user_lambda7977(Arg7976) {
  if (Arg7976.length < 0) return [Shen.type_func, shen_user_lambda7977, 0, Arg7976];
  return (Shen.globals["*language*"])}, 0, [], "language"];





Shen.fns["version"] = [Shen.type_func, function shen_user_lambda7979(Arg7978) {
  if (Arg7978.length < 0) return [Shen.type_func, shen_user_lambda7979, 0, Arg7978];
  return (Shen.globals["*version*"])}, 0, [], "version"];





Shen.fns["port"] = [Shen.type_func, function shen_user_lambda7981(Arg7980) {
  if (Arg7980.length < 0) return [Shen.type_func, shen_user_lambda7981, 0, Arg7980];
  return (Shen.globals["*port*"])}, 0, [], "port"];





Shen.fns["porters"] = [Shen.type_func, function shen_user_lambda7983(Arg7982) {
  if (Arg7982.length < 0) return [Shen.type_func, shen_user_lambda7983, 0, Arg7982];
  return (Shen.globals["*porters*"])}, 0, [], "porters"];





Shen.fns["implementation"] = [Shen.type_func, function shen_user_lambda7985(Arg7984) {
  if (Arg7984.length < 0) return [Shen.type_func, shen_user_lambda7985, 0, Arg7984];
  return (Shen.globals["*implementation*"])}, 0, [], "implementation"];





Shen.fns["release"] = [Shen.type_func, function shen_user_lambda7987(Arg7986) {
  if (Arg7986.length < 0) return [Shen.type_func, shen_user_lambda7987, 0, Arg7986];
  return (Shen.globals["*release*"])}, 0, [], "release"];










Shen.fns["shen.datatype-error"] = [Shen.type_func, function shen_user_lambda7589(Arg7588) {
  if (Arg7588.length < 1) return [Shen.type_func, shen_user_lambda7589, 1, Arg7588];
  var Arg7588_0 = Arg7588[0];
  return (((Shen.is_type(Arg7588_0, Shen.type_cons) && (Shen.is_type(Arg7588_0[2], Shen.type_cons) && Shen.empty$question$(Arg7588_0[2][2]))))
  ? (function() {
  return Shen.simple_error(("datatype syntax error here:\x0d\x0a\x0d\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg7588_0[1]]), "\x0d\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.datatype-error"]]);}))}, 1, [], "shen.datatype-error"];





Shen.fns["shen.<datatype-rules>"] = [Shen.type_func, function shen_user_lambda7591(Arg7590) {
  if (Arg7590.length < 1) return [Shen.type_func, shen_user_lambda7591, 1, Arg7590];
  var Arg7590_0 = Arg7590[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<datatype-rule>"], [Arg7590_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<datatype-rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7590_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rules>"];





Shen.fns["shen.<datatype-rule>"] = [Shen.type_func, function shen_user_lambda7593(Arg7592) {
  if (Arg7592.length < 1) return [Shen.type_func, shen_user_lambda7593, 1, Arg7592];
  var Arg7592_0 = Arg7592[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg7592_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<singleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.single"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg7592_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<doubleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.double"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rule>"];





Shen.fns["shen.<side-conditions>"] = [Shen.type_func, function shen_user_lambda7595(Arg7594) {
  if (Arg7594.length < 1) return [Shen.type_func, shen_user_lambda7595, 1, Arg7594];
  var Arg7594_0 = Arg7594[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<side-condition>"], [Arg7594_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<side-conditions>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7594_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-conditions>"];





Shen.fns["shen.<side-condition>"] = [Shen.type_func, function shen_user_lambda7597(Arg7596) {
  if (Arg7596.length < 1) return [Shen.type_func, shen_user_lambda7597, 1, Arg7596];
  var Arg7596_0 = Arg7596[0];
  var R0, R1;
  return ((((Shen.is_type(Arg7596_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg7596_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<expr>"], [Shen.call(Shen.fns["shen.pair"], [Arg7596_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7596_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg7596_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg7596_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<variable?>"], [Shen.call(Shen.fns["shen.pair"], [Arg7596_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7596_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<expr>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-condition>"];





Shen.fns["shen.<variable?>"] = [Shen.type_func, function shen_user_lambda7599(Arg7598) {
  if (Arg7598.length < 1) return [Shen.type_func, shen_user_lambda7599, 1, Arg7598];
  var Arg7598_0 = Arg7598[0];
  var R0;
  return (((Shen.is_type(Arg7598_0[1], Shen.type_cons))
  ? ((R0 = Arg7598_0[1][1]),
  ((Shen.call(Shen.fns["variable?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7598_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7598_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<variable?>"];





Shen.fns["shen.<expr>"] = [Shen.type_func, function shen_user_lambda7601(Arg7600) {
  if (Arg7600.length < 1) return [Shen.type_func, shen_user_lambda7601, 1, Arg7600];
  var Arg7600_0 = Arg7600[0];
  var R0;
  return (((Shen.is_type(Arg7600_0[1], Shen.type_cons))
  ? ((R0 = Arg7600_0[1][1]),
  (((!(Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]) || (Shen.call(Shen.fns["shen.singleunderline?"], [R0]) || Shen.call(Shen.fns["shen.doubleunderline?"], [R0])))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7600_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7600_0])])[1], Shen.call(Shen.fns["shen.remove-bar"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<expr>"];





Shen.fns["shen.remove-bar"] = [Shen.type_func, function shen_user_lambda7603(Arg7602) {
  if (Arg7602.length < 1) return [Shen.type_func, shen_user_lambda7603, 1, Arg7602];
  var Arg7602_0 = Arg7602[0];
  return (((Shen.is_type(Arg7602_0, Shen.type_cons) && (Shen.is_type(Arg7602_0[2], Shen.type_cons) && (Shen.is_type(Arg7602_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7602_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg7602_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, Arg7602_0[1], Arg7602_0[2][2][1]]
  : ((Shen.is_type(Arg7602_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove-bar"], [Arg7602_0[1]]), Shen.call(Shen.fns["shen.remove-bar"], [Arg7602_0[2]])]
  : Arg7602_0))}, 1, [], "shen.remove-bar"];





Shen.fns["shen.<premises>"] = [Shen.type_func, function shen_user_lambda7605(Arg7604) {
  if (Arg7604.length < 1) return [Shen.type_func, shen_user_lambda7605, 1, Arg7604];
  var Arg7604_0 = Arg7604[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<premise>"], [Arg7604_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7604_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<premises>"];





Shen.fns["shen.<semicolon-symbol>"] = [Shen.type_func, function shen_user_lambda7607(Arg7606) {
  if (Arg7606.length < 1) return [Shen.type_func, shen_user_lambda7607, 1, Arg7606];
  var Arg7606_0 = Arg7606[0];
  var R0;
  return (((Shen.is_type(Arg7606_0[1], Shen.type_cons))
  ? ((R0 = Arg7606_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7606_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7606_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon-symbol>"];





Shen.fns["shen.<premise>"] = [Shen.type_func, function shen_user_lambda7609(Arg7608) {
  if (Arg7608.length < 1) return [Shen.type_func, shen_user_lambda7609, 1, Arg7608];
  var Arg7608_0 = Arg7608[0];
  var R0, R1;
  return ((((Shen.is_type(Arg7608_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg7608_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7608_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7608_0])])[1], [Shen.type_symbol, "!"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg7608_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg7608_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<premise>"];





Shen.fns["shen.<conclusion>"] = [Shen.type_func, function shen_user_lambda7611(Arg7610) {
  if (Arg7610.length < 1) return [Shen.type_func, shen_user_lambda7611, 1, Arg7610];
  var Arg7610_0 = Arg7610[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg7610_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg7610_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<conclusion>"];





Shen.fns["shen.sequent"] = [Shen.type_func, function shen_user_lambda7613(Arg7612) {
  if (Arg7612.length < 2) return [Shen.type_func, shen_user_lambda7613, 2, Arg7612];
  var Arg7612_0 = Arg7612[0], Arg7612_1 = Arg7612[1];
  return [Shen.fns['shen.tuple'], Arg7612_0, Arg7612_1]}, 2, [], "shen.sequent"];





Shen.fns["shen.<formulae>"] = [Shen.type_func, function shen_user_lambda7615(Arg7614) {
  if (Arg7614.length < 1) return [Shen.type_func, shen_user_lambda7615, 1, Arg7614];
  var Arg7614_0 = Arg7614[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg7614_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<comma-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formulae>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg7614_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7614_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<formulae>"];





Shen.fns["shen.<comma-symbol>"] = [Shen.type_func, function shen_user_lambda7617(Arg7616) {
  if (Arg7616.length < 1) return [Shen.type_func, shen_user_lambda7617, 1, Arg7616];
  var Arg7616_0 = Arg7616[0];
  var R0;
  return (((Shen.is_type(Arg7616_0[1], Shen.type_cons))
  ? ((R0 = Arg7616_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ","])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7616_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7616_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma-symbol>"];





Shen.fns["shen.<formula>"] = [Shen.type_func, function shen_user_lambda7619(Arg7618) {
  if (Arg7618.length < 1) return [Shen.type_func, shen_user_lambda7619, 1, Arg7618];
  var Arg7618_0 = Arg7618[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg7618_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<type>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.hdtl"], [R1])]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg7618_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<formula>"];





Shen.fns["shen.<type>"] = [Shen.type_func, function shen_user_lambda7621(Arg7620) {
  if (Arg7620.length < 1) return [Shen.type_func, shen_user_lambda7621, 1, Arg7620];
  var Arg7620_0 = Arg7620[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg7620_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<type>"];





Shen.fns["shen.<doubleunderline>"] = [Shen.type_func, function shen_user_lambda7623(Arg7622) {
  if (Arg7622.length < 1) return [Shen.type_func, shen_user_lambda7623, 1, Arg7622];
  var Arg7622_0 = Arg7622[0];
  var R0;
  return (((Shen.is_type(Arg7622_0[1], Shen.type_cons))
  ? ((R0 = Arg7622_0[1][1]),
  ((Shen.call(Shen.fns["shen.doubleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7622_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7622_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<doubleunderline>"];





Shen.fns["shen.<singleunderline>"] = [Shen.type_func, function shen_user_lambda7625(Arg7624) {
  if (Arg7624.length < 1) return [Shen.type_func, shen_user_lambda7625, 1, Arg7624];
  var Arg7624_0 = Arg7624[0];
  var R0;
  return (((Shen.is_type(Arg7624_0[1], Shen.type_cons))
  ? ((R0 = Arg7624_0[1][1]),
  ((Shen.call(Shen.fns["shen.singleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7624_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7624_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<singleunderline>"];





Shen.fns["shen.singleunderline?"] = [Shen.type_func, function shen_user_lambda7627(Arg7626) {
  if (Arg7626.length < 1) return [Shen.type_func, shen_user_lambda7627, 1, Arg7626];
  var Arg7626_0 = Arg7626[0];
  return (Shen.is_type(Arg7626_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.sh?"], [Shen.str(Arg7626_0)]))}, 1, [], "shen.singleunderline?"];





Shen.fns["shen.sh?"] = [Shen.type_func, function shen_user_lambda7629(Arg7628) {
  if (Arg7628.length < 1) return [Shen.type_func, shen_user_lambda7629, 1, Arg7628];
  var Arg7628_0 = Arg7628[0];
  return ((Shen.unwind_tail(Shen.$eq$("_", Arg7628_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg7628_0[0], "_")) && Shen.call(Shen.fns["shen.sh?"], [Shen.tlstr(Arg7628_0)])))}, 1, [], "shen.sh?"];





Shen.fns["shen.doubleunderline?"] = [Shen.type_func, function shen_user_lambda7631(Arg7630) {
  if (Arg7630.length < 1) return [Shen.type_func, shen_user_lambda7631, 1, Arg7630];
  var Arg7630_0 = Arg7630[0];
  return (Shen.is_type(Arg7630_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.dh?"], [Shen.str(Arg7630_0)]))}, 1, [], "shen.doubleunderline?"];





Shen.fns["shen.dh?"] = [Shen.type_func, function shen_user_lambda7633(Arg7632) {
  if (Arg7632.length < 1) return [Shen.type_func, shen_user_lambda7633, 1, Arg7632];
  var Arg7632_0 = Arg7632[0];
  return ((Shen.unwind_tail(Shen.$eq$("=", Arg7632_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg7632_0[0], "=")) && Shen.call(Shen.fns["shen.dh?"], [Shen.tlstr(Arg7632_0)])))}, 1, [], "shen.dh?"];





Shen.fns["shen.process-datatype"] = [Shen.type_func, function shen_user_lambda7635(Arg7634) {
  if (Arg7634.length < 2) return [Shen.type_func, shen_user_lambda7635, 2, Arg7634];
  var Arg7634_0 = Arg7634[0], Arg7634_1 = Arg7634[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember-datatype"], [Shen.call(Shen.fns["shen.s-prolog"], [Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg7634_0, Arg7634_1])])]);})}, 2, [], "shen.process-datatype"];





Shen.fns["shen.remember-datatype"] = [Shen.type_func, function shen_user_lambda7637(Arg7636) {
  if (Arg7636.length < 1) return [Shen.type_func, shen_user_lambda7637, 1, Arg7636];
  var Arg7636_0 = Arg7636[0];
  return ((Shen.is_type(Arg7636_0, Shen.type_cons))
  ? ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg7636_0[1], (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*alldatatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg7636_0[1], (Shen.globals["shen.*alldatatypes*"])])),
  Arg7636_0[1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remember-datatype"]]);}))}, 1, [], "shen.remember-datatype"];





Shen.fns["shen.rules->horn-clauses"] = [Shen.type_func, function shen_user_lambda7639(Arg7638) {
  if (Arg7638.length < 2) return [Shen.type_func, shen_user_lambda7639, 2, Arg7638];
  var Arg7638_0 = Arg7638[0], Arg7638_1 = Arg7638[1];
  return ((Shen.empty$question$(Arg7638_1))
  ? []
  : (((Shen.is_type(Arg7638_1, Shen.type_cons) && (Shen.is_type(Arg7638_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.single"], Shen.call(Shen.fns["fst"], [Arg7638_1[1]]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause"], [Arg7638_0, Shen.call(Shen.fns["snd"], [Arg7638_1[1]])]), Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg7638_0, Arg7638_1[2]])]
  : (((Shen.is_type(Arg7638_1, Shen.type_cons) && (Shen.is_type(Arg7638_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.double"], Shen.call(Shen.fns["fst"], [Arg7638_1[1]]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.rules->horn-clauses"], [Arg7638_0, Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.double->singles"], [Shen.call(Shen.fns["snd"], [Arg7638_1[1]])]), Arg7638_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rules->horn-clauses"]]);}))))}, 2, [], "shen.rules->horn-clauses"];





Shen.fns["shen.double->singles"] = [Shen.type_func, function shen_user_lambda7641(Arg7640) {
  if (Arg7640.length < 1) return [Shen.type_func, shen_user_lambda7641, 1, Arg7640];
  var Arg7640_0 = Arg7640[0];
  return [Shen.type_cons, Shen.call(Shen.fns["shen.right-rule"], [Arg7640_0]), [Shen.type_cons, Shen.call(Shen.fns["shen.left-rule"], [Arg7640_0]), []]]}, 1, [], "shen.double->singles"];





Shen.fns["shen.right-rule"] = [Shen.type_func, function shen_user_lambda7643(Arg7642) {
  if (Arg7642.length < 1) return [Shen.type_func, shen_user_lambda7643, 1, Arg7642];
  var Arg7642_0 = Arg7642[0];
  return [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], Arg7642_0]}, 1, [], "shen.right-rule"];





Shen.fns["shen.left-rule"] = [Shen.type_func, function shen_user_lambda7645(Arg7644) {
  if (Arg7644.length < 1) return [Shen.type_func, shen_user_lambda7645, 1, Arg7644];
  var Arg7644_0 = Arg7644[0];
  var R0, R1;
  return (((Shen.is_type(Arg7644_0, Shen.type_cons) && (Shen.is_type(Arg7644_0[2], Shen.type_cons) && (Shen.is_type(Arg7644_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7644_0[2][2][1], Shen.fns['shen.tuple']) && (Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg7644_0[2][2][1]])) && Shen.empty$question$(Arg7644_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Qv"]])),
  (R1 = [Shen.fns['shen.tuple'], [Shen.type_cons, Shen.call(Shen.fns["snd"], [Arg7644_0[2][2][1]]), []], R0]),
  (R0 = [Shen.type_cons, [Shen.fns['shen.tuple'], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7647(Arg7646) {
  if (Arg7646.length < 1) return [Shen.type_func, shen_user_lambda7647, 1, Arg7646];
  var Arg7646_0 = Arg7646[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.right->left"], [Arg7646_0]);})}, 1, [], undefined], Arg7644_0[2][1]]), R0], []]),
  [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], [Shen.type_cons, Arg7644_0[1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.left-rule"]]);}))}, 1, [], "shen.left-rule"];





Shen.fns["shen.right->left"] = [Shen.type_func, function shen_user_lambda7649(Arg7648) {
  if (Arg7648.length < 1) return [Shen.type_func, shen_user_lambda7649, 1, Arg7648];
  var Arg7648_0 = Arg7648[0];
  return (((Shen.is_type(Arg7648_0, Shen.fns['shen.tuple']) && Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg7648_0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["snd"], [Arg7648_0]);})
  : (function() {
  return Shen.simple_error("syntax error with ==========\x0d\x0a");}))}, 1, [], "shen.right->left"];





Shen.fns["shen.rule->horn-clause"] = [Shen.type_func, function shen_user_lambda7651(Arg7650) {
  if (Arg7650.length < 2) return [Shen.type_func, shen_user_lambda7651, 2, Arg7650];
  var Arg7650_0 = Arg7650[0], Arg7650_1 = Arg7650[1];
  return (((Shen.is_type(Arg7650_1, Shen.type_cons) && (Shen.is_type(Arg7650_1[2], Shen.type_cons) && (Shen.is_type(Arg7650_1[2][2], Shen.type_cons) && (Shen.is_type(Arg7650_1[2][2][1], Shen.fns['shen.tuple']) && Shen.empty$question$(Arg7650_1[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-head"], [Arg7650_0, Shen.call(Shen.fns["snd"], [Arg7650_1[2][2][1]])]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-body"], [Arg7650_1[1], Arg7650_1[2][1], Shen.call(Shen.fns["fst"], [Arg7650_1[2][2][1]])]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rule->horn-clause"]]);}))}, 2, [], "shen.rule->horn-clause"];





Shen.fns["shen.rule->horn-clause-head"] = [Shen.type_func, function shen_user_lambda7653(Arg7652) {
  if (Arg7652.length < 2) return [Shen.type_func, shen_user_lambda7653, 2, Arg7652];
  var Arg7652_0 = Arg7652[0], Arg7652_1 = Arg7652[1];
  return [Shen.type_cons, Arg7652_0, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg7652_1]), [Shen.type_cons, [Shen.type_symbol, "Context_1957"], []]]]}, 2, [], "shen.rule->horn-clause-head"];





Shen.fns["shen.mode-ify"] = [Shen.type_func, function shen_user_lambda7655(Arg7654) {
  if (Arg7654.length < 1) return [Shen.type_func, shen_user_lambda7655, 1, Arg7654];
  var Arg7654_0 = Arg7654[0];
  return (((Shen.is_type(Arg7654_0, Shen.type_cons) && (Shen.is_type(Arg7654_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg7654_0[2][1])) && (Shen.is_type(Arg7654_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7654_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_cons, Arg7654_0[1], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg7654_0[2][2][1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "-"], []]]]
  : Arg7654_0)}, 1, [], "shen.mode-ify"];





Shen.fns["shen.rule->horn-clause-body"] = [Shen.type_func, function shen_user_lambda7657(Arg7656) {
  if (Arg7656.length < 3) return [Shen.type_func, shen_user_lambda7657, 3, Arg7656];
  var Arg7656_0 = Arg7656[0], Arg7656_1 = Arg7656[1], Arg7656_2 = Arg7656[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7659(Arg7658) {
  if (Arg7658.length < 1) return [Shen.type_func, shen_user_lambda7659, 1, Arg7658];
  var Arg7658_0 = Arg7658[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.extract_vars"], [Arg7658_0]);})}, 1, [], undefined], Arg7656_2])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7661(Arg7660) {
  if (Arg7660.length < 1) return [Shen.type_func, shen_user_lambda7661, 1, Arg7660];
  var Arg7660_0 = Arg7660[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "shen.cl"]]);})}, 1, [], undefined], Arg7656_2])),
  (R2 = Shen.call(Shen.fns["shen.construct-search-literals"], [R1, R0, [Shen.type_symbol, "Context_1957"], [Shen.type_symbol, "Context1_1957"]])),
  Shen.call(Shen.fns["shen.construct-search-clauses"], [R1, Arg7656_2, R0]),
  (R1 = Shen.call(Shen.fns["shen.construct-side-literals"], [Arg7656_0])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7663(Arg7662) {
  if (Arg7662.length < 2) return [Shen.type_func, shen_user_lambda7663, 2, Arg7662];
  var Arg7662_0 = Arg7662[0], Arg7662_1 = Arg7662[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.construct-premiss-literal"], [Arg7662_1, Shen.empty$question$(Arg7662_0)]);})}, 2, [Arg7656_2], undefined], Arg7656_1])),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [R1, R0])]);}))}, 3, [], "shen.rule->horn-clause-body"];





Shen.fns["shen.construct-search-literals"] = [Shen.type_func, function shen_user_lambda7665(Arg7664) {
  if (Arg7664.length < 4) return [Shen.type_func, shen_user_lambda7665, 4, Arg7664];
  var Arg7664_0 = Arg7664[0], Arg7664_1 = Arg7664[1], Arg7664_2 = Arg7664[2], Arg7664_3 = Arg7664[3];
  return (((Shen.empty$question$(Arg7664_0) && Shen.empty$question$(Arg7664_1)))
  ? []
  : (function() {
  return Shen.call_tail(Shen.fns["shen.csl-help"], [Arg7664_0, Arg7664_1, Arg7664_2, Arg7664_3]);}))}, 4, [], "shen.construct-search-literals"];





Shen.fns["shen.csl-help"] = [Shen.type_func, function shen_user_lambda7667(Arg7666) {
  if (Arg7666.length < 4) return [Shen.type_func, shen_user_lambda7667, 4, Arg7666];
  var Arg7666_0 = Arg7666[0], Arg7666_1 = Arg7666[1], Arg7666_2 = Arg7666[2], Arg7666_3 = Arg7666[3];
  return (((Shen.empty$question$(Arg7666_0) && Shen.empty$question$(Arg7666_1)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "ContextOut_1957"], [Shen.type_cons, Arg7666_2, []]]], []]
  : (((Shen.is_type(Arg7666_0, Shen.type_cons) && Shen.is_type(Arg7666_1, Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_cons, Arg7666_0[1], [Shen.type_cons, Arg7666_2, [Shen.type_cons, Arg7666_3, Arg7666_1[1]]]], Shen.call(Shen.fns["shen.csl-help"], [Arg7666_0[2], Arg7666_1[2], Arg7666_3, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Context"]])])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.csl-help"]]);})))}, 4, [], "shen.csl-help"];





Shen.fns["shen.construct-search-clauses"] = [Shen.type_func, function shen_user_lambda7669(Arg7668) {
  if (Arg7668.length < 3) return [Shen.type_func, shen_user_lambda7669, 3, Arg7668];
  var Arg7668_0 = Arg7668[0], Arg7668_1 = Arg7668[1], Arg7668_2 = Arg7668[2];
  return (((Shen.empty$question$(Arg7668_0) && (Shen.empty$question$(Arg7668_1) && Shen.empty$question$(Arg7668_2))))
  ? [Shen.type_symbol, "shen.skip"]
  : (((Shen.is_type(Arg7668_0, Shen.type_cons) && (Shen.is_type(Arg7668_1, Shen.type_cons) && Shen.is_type(Arg7668_2, Shen.type_cons))))
  ? (Shen.call(Shen.fns["shen.construct-search-clause"], [Arg7668_0[1], Arg7668_1[1], Arg7668_2[1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.construct-search-clauses"], [Arg7668_0[2], Arg7668_1[2], Arg7668_2[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-search-clauses"]]);})))}, 3, [], "shen.construct-search-clauses"];





Shen.fns["shen.construct-search-clause"] = [Shen.type_func, function shen_user_lambda7671(Arg7670) {
  if (Arg7670.length < 3) return [Shen.type_func, shen_user_lambda7671, 3, Arg7670];
  var Arg7670_0 = Arg7670[0], Arg7670_1 = Arg7670[1], Arg7670_2 = Arg7670[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog"], [[Shen.type_cons, Shen.call(Shen.fns["shen.construct-base-search-clause"], [Arg7670_0, Arg7670_1, Arg7670_2]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-recursive-search-clause"], [Arg7670_0, Arg7670_1, Arg7670_2]), []]]]);})}, 3, [], "shen.construct-search-clause"];





Shen.fns["shen.construct-base-search-clause"] = [Shen.type_func, function shen_user_lambda7673(Arg7672) {
  if (Arg7672.length < 3) return [Shen.type_func, shen_user_lambda7673, 3, Arg7672];
  var Arg7672_0 = Arg7672[0], Arg7672_1 = Arg7672[1], Arg7672_2 = Arg7672[2];
  return [Shen.type_cons, [Shen.type_cons, Arg7672_0, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg7672_1]), [Shen.type_symbol, "In_1957"]], [Shen.type_cons, [Shen.type_symbol, "In_1957"], Arg7672_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [], []]]]}, 3, [], "shen.construct-base-search-clause"];





Shen.fns["shen.construct-recursive-search-clause"] = [Shen.type_func, function shen_user_lambda7675(Arg7674) {
  if (Arg7674.length < 3) return [Shen.type_func, shen_user_lambda7675, 3, Arg7674];
  var Arg7674_0 = Arg7674[0], Arg7674_1 = Arg7674[1], Arg7674_2 = Arg7674[2];
  return [Shen.type_cons, [Shen.type_cons, Arg7674_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Assumptions_1957"]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Out_1957"]], Arg7674_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg7674_0, [Shen.type_cons, [Shen.type_symbol, "Assumptions_1957"], [Shen.type_cons, [Shen.type_symbol, "Out_1957"], Arg7674_2]]], []], []]]]}, 3, [], "shen.construct-recursive-search-clause"];





Shen.fns["shen.construct-side-literals"] = [Shen.type_func, function shen_user_lambda7677(Arg7676) {
  if (Arg7676.length < 1) return [Shen.type_func, shen_user_lambda7677, 1, Arg7676];
  var Arg7676_0 = Arg7676[0];
  return ((Shen.empty$question$(Arg7676_0))
  ? []
  : (((Shen.is_type(Arg7676_0, Shen.type_cons) && (Shen.is_type(Arg7676_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg7676_0[1][1])) && (Shen.is_type(Arg7676_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg7676_0[1][2][2]))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "when"], Arg7676_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg7676_0[2]])]
  : (((Shen.is_type(Arg7676_0, Shen.type_cons) && (Shen.is_type(Arg7676_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg7676_0[1][1])) && (Shen.is_type(Arg7676_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7676_0[1][2][2], Shen.type_cons) && Shen.empty$question$(Arg7676_0[1][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "is"], Arg7676_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg7676_0[2]])]
  : ((Shen.is_type(Arg7676_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.construct-side-literals"], [Arg7676_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-side-literals"]]);})))))}, 1, [], "shen.construct-side-literals"];





Shen.fns["shen.construct-premiss-literal"] = [Shen.type_func, function shen_user_lambda7679(Arg7678) {
  if (Arg7678.length < 2) return [Shen.type_func, shen_user_lambda7679, 2, Arg7678];
  var Arg7678_0 = Arg7678[0], Arg7678_1 = Arg7678[1];
  return ((Shen.is_type(Arg7678_0, Shen.fns['shen.tuple']))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.t*"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Shen.call(Shen.fns["snd"], [Arg7678_0])]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg7678_1, Shen.call(Shen.fns["fst"], [Arg7678_0])]), []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg7678_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-premiss-literal"]]);})))}, 2, [], "shen.construct-premiss-literal"];





Shen.fns["shen.construct-context"] = [Shen.type_func, function shen_user_lambda7681(Arg7680) {
  if (Arg7680.length < 2) return [Shen.type_func, shen_user_lambda7681, 2, Arg7680];
  var Arg7680_0 = Arg7680[0], Arg7680_1 = Arg7680[1];
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg7680_0)) && Shen.empty$question$(Arg7680_1)))
  ? [Shen.type_symbol, "Context_1957"]
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg7680_0)) && Shen.empty$question$(Arg7680_1)))
  ? [Shen.type_symbol, "ContextOut_1957"]
  : ((Shen.is_type(Arg7680_1, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg7680_1[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg7680_0, Arg7680_1[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-context"]]);}))))}, 2, [], "shen.construct-context"];





Shen.fns["shen.recursive_cons_form"] = [Shen.type_func, function shen_user_lambda7683(Arg7682) {
  if (Arg7682.length < 1) return [Shen.type_func, shen_user_lambda7683, 1, Arg7682];
  var Arg7682_0 = Arg7682[0];
  return ((Shen.is_type(Arg7682_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg7682_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg7682_0[2]]), []]]]
  : Arg7682_0)}, 1, [], "shen.recursive_cons_form"];





Shen.fns["preclude"] = [Shen.type_func, function shen_user_lambda7685(Arg7684) {
  if (Arg7684.length < 1) return [Shen.type_func, shen_user_lambda7685, 1, Arg7684];
  var Arg7684_0 = Arg7684[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.preclude-h"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7687(Arg7686) {
  if (Arg7686.length < 1) return [Shen.type_func, shen_user_lambda7687, 1, Arg7686];
  var Arg7686_0 = Arg7686[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.intern-type"], [Arg7686_0]);})}, 1, [], undefined], Arg7684_0])]);})}, 1, [], "preclude"];





Shen.fns["shen.preclude-h"] = [Shen.type_func, function shen_user_lambda7689(Arg7688) {
  if (Arg7688.length < 1) return [Shen.type_func, shen_user_lambda7689, 1, Arg7688];
  var Arg7688_0 = Arg7688[0];
  return ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*datatypes*"]), Arg7688_0])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "shen.preclude-h"];





Shen.fns["include"] = [Shen.type_func, function shen_user_lambda7691(Arg7690) {
  if (Arg7690.length < 1) return [Shen.type_func, shen_user_lambda7691, 1, Arg7690];
  var Arg7690_0 = Arg7690[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.include-h"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7693(Arg7692) {
  if (Arg7692.length < 1) return [Shen.type_func, shen_user_lambda7693, 1, Arg7692];
  var Arg7692_0 = Arg7692[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.intern-type"], [Arg7692_0]);})}, 1, [], undefined], Arg7690_0])]);})}, 1, [], "include"];





Shen.fns["shen.include-h"] = [Shen.type_func, function shen_user_lambda7695(Arg7694) {
  if (Arg7694.length < 1) return [Shen.type_func, shen_user_lambda7695, 1, Arg7694];
  var Arg7694_0 = Arg7694[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["intersection"], [Arg7694_0, (Shen.globals["shen.*alldatatypes*"])])),
  (Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["union"], [R0, (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "shen.include-h"];





Shen.fns["preclude-all-but"] = [Shen.type_func, function shen_user_lambda7697(Arg7696) {
  if (Arg7696.length < 1) return [Shen.type_func, shen_user_lambda7697, 1, Arg7696];
  var Arg7696_0 = Arg7696[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.preclude-h"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7699(Arg7698) {
  if (Arg7698.length < 1) return [Shen.type_func, shen_user_lambda7699, 1, Arg7698];
  var Arg7698_0 = Arg7698[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.intern-type"], [Arg7698_0]);})}, 1, [], undefined], Arg7696_0])])]);})}, 1, [], "preclude-all-but"];





Shen.fns["include-all-but"] = [Shen.type_func, function shen_user_lambda7701(Arg7700) {
  if (Arg7700.length < 1) return [Shen.type_func, shen_user_lambda7701, 1, Arg7700];
  var Arg7700_0 = Arg7700[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.include-h"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7703(Arg7702) {
  if (Arg7702.length < 1) return [Shen.type_func, shen_user_lambda7703, 1, Arg7702];
  var Arg7702_0 = Arg7702[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.intern-type"], [Arg7702_0]);})}, 1, [], undefined], Arg7700_0])])]);})}, 1, [], "include-all-but"];





Shen.fns["shen.synonyms-help"] = [Shen.type_func, function shen_user_lambda7705(Arg7704) {
  if (Arg7704.length < 1) return [Shen.type_func, shen_user_lambda7705, 1, Arg7704];
  var Arg7704_0 = Arg7704[0];
  return ((Shen.empty$question$(Arg7704_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.demodulation-function"], [(Shen.globals["shen.*tc*"]), Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda7707(Arg7706) {
  if (Arg7706.length < 1) return [Shen.type_func, shen_user_lambda7707, 1, Arg7706];
  var Arg7706_0 = Arg7706[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.demod-rule"], [Arg7706_0]);})}, 1, [], undefined], (Shen.globals["shen.*synonyms*"])])]);})
  : (((Shen.is_type(Arg7704_0, Shen.type_cons) && Shen.is_type(Arg7704_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.pushnew"], [[Shen.type_cons, Arg7704_0[1], [Shen.type_cons, Arg7704_0[2][1], []]], [Shen.type_symbol, "shen.*synonyms*"]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.synonyms-help"], [Arg7704_0[2][2]]);}))
  : (function() {
  return Shen.simple_error("odd number of synonyms\x0d\x0a");})))}, 1, [], "shen.synonyms-help"];





Shen.fns["shen.pushnew"] = [Shen.type_func, function shen_user_lambda7709(Arg7708) {
  if (Arg7708.length < 2) return [Shen.type_func, shen_user_lambda7709, 2, Arg7708];
  var Arg7708_0 = Arg7708[0], Arg7708_1 = Arg7708[1];
  return ((Shen.call(Shen.fns["element?"], [Arg7708_0, (Shen.globals[Arg7708_1[1]])]))
  ? (Shen.globals[Arg7708_1[1]])
  : (Shen.globals[Arg7708_1[1]] = [Shen.type_cons, Arg7708_0, (Shen.globals[Arg7708_1[1]])]))}, 2, [], "shen.pushnew"];





Shen.fns["shen.demod-rule"] = [Shen.type_func, function shen_user_lambda7711(Arg7710) {
  if (Arg7710.length < 1) return [Shen.type_func, shen_user_lambda7711, 1, Arg7710];
  var Arg7710_0 = Arg7710[0];
  return (((Shen.is_type(Arg7710_0, Shen.type_cons) && (Shen.is_type(Arg7710_0[2], Shen.type_cons) && Shen.empty$question$(Arg7710_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7710_0[1]]), [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7710_0[2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.demod-rule"]]);}))}, 1, [], "shen.demod-rule"];





Shen.fns["shen.demodulation-function"] = [Shen.type_func, function shen_user_lambda7713(Arg7712) {
  if (Arg7712.length < 2) return [Shen.type_func, shen_user_lambda7713, 2, Arg7712];
  var Arg7712_0 = Arg7712[0], Arg7712_1 = Arg7712[1];
  return (Shen.call(Shen.fns["tc"], [[Shen.type_symbol, "-"]]),
  Shen.call(Shen.fns["eval"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "shen.demod"], Shen.call(Shen.fns["append"], [Arg7712_1, Shen.call(Shen.fns["shen.default-rule"], [])])]]]),
  ((Arg7712_0)
  ? Shen.call(Shen.fns["tc"], [[Shen.type_symbol, "+"]])
  : [Shen.type_symbol, "shen.skip"]),
  [Shen.type_symbol, "synonyms"])}, 2, [], "shen.demodulation-function"];





Shen.fns["shen.default-rule"] = [Shen.type_func, function shen_user_lambda7715(Arg7714) {
  if (Arg7714.length < 0) return [Shen.type_func, shen_user_lambda7715, 0, Arg7714];
  return [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]}, 0, [], "shen.default-rule"];










Shen.fns["shen.yacc"] = [Shen.type_func, function shen_user_lambda8628(Arg8627) {
  if (Arg8627.length < 1) return [Shen.type_func, shen_user_lambda8628, 1, Arg8627];
  var Arg8627_0 = Arg8627[0];
  return (((Shen.is_type(Arg8627_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg8627_0[1])) && (Shen.is_type(Arg8627_0[2], Shen.type_cons) && (Shen.is_type(Arg8627_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg8627_0[2][2][1])) && (Shen.is_type(Arg8627_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg8627_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg8627_0[2][2][2][2][1])) && (Shen.is_type(Arg8627_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg8627_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg8627_0[2][2][2][2][2][2][1])))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg8627_0[2][1], Arg8627_0[2][2][2][2][2][2][2]]]]);})
  : (((Shen.is_type(Arg8627_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg8627_0[1])) && Shen.is_type(Arg8627_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc->shen"], [Arg8627_0[2][1], Arg8627_0[2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.yacc"]]);})))}, 1, [], "shen.yacc"];





Shen.fns["shen.yacc->shen"] = [Shen.type_func, function shen_user_lambda8630(Arg8629) {
  if (Arg8629.length < 2) return [Shen.type_func, shen_user_lambda8630, 2, Arg8629];
  var Arg8629_0 = Arg8629[0], Arg8629_1 = Arg8629[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.split_cc_rules"], [true, Arg8629_1, []])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda8632(Arg8631) {
  if (Arg8631.length < 1) return [Shen.type_func, shen_user_lambda8632, 1, Arg8631];
  var Arg8631_0 = Arg8631[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.cc_body"], [Arg8631_0]);})}, 1, [], undefined], R0])),
  (R0 = Shen.call(Shen.fns["shen.yacc_cases"], [R0])),
  [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg8629_0, [Shen.type_cons, [Shen.type_symbol, "Stream"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, Shen.call(Shen.fns["shen.kill-code"], [R0]), []]]]]])}, 2, [], "shen.yacc->shen"];





Shen.fns["shen.kill-code"] = [Shen.type_func, function shen_user_lambda8634(Arg8633) {
  if (Arg8633.length < 1) return [Shen.type_func, shen_user_lambda8634, 1, Arg8633];
  var Arg8633_0 = Arg8633[0];
  return (((Shen.call(Shen.fns["occurrences"], [[Shen.type_symbol, "kill"], Arg8633_0]) > 0))
  ? [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, Arg8633_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.analyse-kill"], [Shen.type_cons, [Shen.type_symbol, "E"], []]], []]]], []]]]
  : Arg8633_0)}, 1, [], "shen.kill-code"];





Shen.fns["kill"] = [Shen.type_func, function shen_user_lambda8636(Arg8635) {
  if (Arg8635.length < 0) return [Shen.type_func, shen_user_lambda8636, 0, Arg8635];
  return (function() {
  return Shen.simple_error("yacc kill");})}, 0, [], "kill"];





Shen.fns["shen.analyse-kill"] = [Shen.type_func, function shen_user_lambda8638(Arg8637) {
  if (Arg8637.length < 1) return [Shen.type_func, shen_user_lambda8638, 1, Arg8637];
  var Arg8637_0 = Arg8637[0];
  var R0;
  return ((R0 = Shen.error_to_string(Arg8637_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, "yacc kill")))
  ? Shen.fail_obj
  : Arg8637_0))}, 1, [], "shen.analyse-kill"];





Shen.fns["shen.split_cc_rules"] = [Shen.type_func, function shen_user_lambda8640(Arg8639) {
  if (Arg8639.length < 3) return [Shen.type_func, shen_user_lambda8640, 3, Arg8639];
  var Arg8639_0 = Arg8639[0], Arg8639_1 = Arg8639[1], Arg8639_2 = Arg8639[2];
  return (((Shen.empty$question$(Arg8639_1) && Shen.empty$question$(Arg8639_2)))
  ? []
  : ((Shen.empty$question$(Arg8639_1))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Arg8639_0, Shen.call(Shen.fns["reverse"], [Arg8639_2]), []]), []]
  : (((Shen.is_type(Arg8639_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], Arg8639_1[1]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Arg8639_0, Shen.call(Shen.fns["reverse"], [Arg8639_2]), []]), Shen.call(Shen.fns["shen.split_cc_rules"], [Arg8639_0, Arg8639_1[2], []])]
  : ((Shen.is_type(Arg8639_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rules"], [Arg8639_0, Arg8639_1[2], [Shen.type_cons, Arg8639_1[1], Arg8639_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rules"]]);})))))}, 3, [], "shen.split_cc_rules"];





Shen.fns["shen.split_cc_rule"] = [Shen.type_func, function shen_user_lambda8642(Arg8641) {
  if (Arg8641.length < 3) return [Shen.type_func, shen_user_lambda8642, 3, Arg8641];
  var Arg8641_0 = Arg8641[0], Arg8641_1 = Arg8641[1], Arg8641_2 = Arg8641[2];
  return (((Shen.is_type(Arg8641_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg8641_1[1])) && (Shen.is_type(Arg8641_1[2], Shen.type_cons) && Shen.empty$question$(Arg8641_1[2][2])))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg8641_2]), Arg8641_1[2]]
  : (((Shen.is_type(Arg8641_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg8641_1[1])) && (Shen.is_type(Arg8641_1[2], Shen.type_cons) && (Shen.is_type(Arg8641_1[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg8641_1[2][2][1])) && (Shen.is_type(Arg8641_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg8641_1[2][2][2][2]))))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg8641_2]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Arg8641_1[2][2][2][1], [Shen.type_cons, Arg8641_1[2][1], []]]], []]]
  : ((Shen.empty$question$(Arg8641_1))
  ? (Shen.call(Shen.fns["shen.semantic-completion-warning"], [Arg8641_0, Arg8641_2]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [Arg8641_0, [Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Shen.call(Shen.fns["reverse"], [Arg8641_2])]), []]], Arg8641_2]);}))
  : ((Shen.is_type(Arg8641_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [Arg8641_0, Arg8641_1[2], [Shen.type_cons, Arg8641_1[1], Arg8641_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rule"]]);})))))}, 3, [], "shen.split_cc_rule"];





Shen.fns["shen.semantic-completion-warning"] = [Shen.type_func, function shen_user_lambda8644(Arg8643) {
  if (Arg8643.length < 2) return [Shen.type_func, shen_user_lambda8644, 2, Arg8643];
  var Arg8643_0 = Arg8643[0], Arg8643_1 = Arg8643[1];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg8643_0)))
  ? (Shen.call(Shen.fns["shen.prhush"], ["warning: ", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda8646(Arg8645) {
  if (Arg8645.length < 1) return [Shen.type_func, shen_user_lambda8646, 1, Arg8645];
  var Arg8645_0 = Arg8645[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg8645_0, " ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg8643_1])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], ["has no semantics.\x0d\x0a", Shen.call(Shen.fns["stoutput"], [])]);}))
  : [Shen.type_symbol, "shen.skip"])}, 2, [], "shen.semantic-completion-warning"];





Shen.fns["shen.default_semantics"] = [Shen.type_func, function shen_user_lambda8648(Arg8647) {
  if (Arg8647.length < 1) return [Shen.type_func, shen_user_lambda8648, 1, Arg8647];
  var Arg8647_0 = Arg8647[0];
  return ((Shen.empty$question$(Arg8647_0))
  ? []
  : (((Shen.is_type(Arg8647_0, Shen.type_cons) && (Shen.empty$question$(Arg8647_0[2]) && Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg8647_0[1]]))))
  ? Arg8647_0[1]
  : (((Shen.is_type(Arg8647_0, Shen.type_cons) && Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg8647_0[1]])))
  ? [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, Arg8647_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg8647_0[2]]), []]]]
  : ((Shen.is_type(Arg8647_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg8647_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg8647_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.default_semantics"]]);})))))}, 1, [], "shen.default_semantics"];





Shen.fns["shen.grammar_symbol?"] = [Shen.type_func, function shen_user_lambda8650(Arg8649) {
  if (Arg8649.length < 1) return [Shen.type_func, shen_user_lambda8650, 1, Arg8649];
  var Arg8649_0 = Arg8649[0];
  var R0;
  return (Shen.is_type(Arg8649_0, Shen.type_symbol) && ((R0 = Shen.call(Shen.fns["shen.strip-pathname"], [Shen.call(Shen.fns["explode"], [Arg8649_0])])),
  (Shen.unwind_tail(Shen.$eq$(R0[1], "<")) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["reverse"], [R0])[1], ">")))))}, 1, [], "shen.grammar_symbol?"];





Shen.fns["shen.yacc_cases"] = [Shen.type_func, function shen_user_lambda8652(Arg8651) {
  if (Arg8651.length < 1) return [Shen.type_func, shen_user_lambda8652, 1, Arg8651];
  var Arg8651_0 = Arg8651[0];
  var R0;
  return (((Shen.is_type(Arg8651_0, Shen.type_cons) && Shen.empty$question$(Arg8651_0[2])))
  ? Arg8651_0[1]
  : ((Shen.is_type(Arg8651_0, Shen.type_cons))
  ? ((R0 = [Shen.type_symbol, "YaccParse"]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, Arg8651_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen.yacc_cases"], [Arg8651_0[2]]), [Shen.type_cons, R0, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.yacc_cases"]]);})))}, 1, [], "shen.yacc_cases"];





Shen.fns["shen.cc_body"] = [Shen.type_func, function shen_user_lambda8654(Arg8653) {
  if (Arg8653.length < 1) return [Shen.type_func, shen_user_lambda8654, 1, Arg8653];
  var Arg8653_0 = Arg8653[0];
  return (((Shen.is_type(Arg8653_0, Shen.type_cons) && (Shen.is_type(Arg8653_0[2], Shen.type_cons) && Shen.empty$question$(Arg8653_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.syntax"], [Arg8653_0[1], [Shen.type_symbol, "Stream"], Arg8653_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cc_body"]]);}))}, 1, [], "shen.cc_body"];





Shen.fns["shen.syntax"] = [Shen.type_func, function shen_user_lambda8656(Arg8655) {
  if (Arg8655.length < 3) return [Shen.type_func, shen_user_lambda8656, 3, Arg8655];
  var Arg8655_0 = Arg8655[0], Arg8655_1 = Arg8655[1], Arg8655_2 = Arg8655[2];
  return (((Shen.empty$question$(Arg8655_0) && (Shen.is_type(Arg8655_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg8655_2[1])) && (Shen.is_type(Arg8655_2[2], Shen.type_cons) && (Shen.is_type(Arg8655_2[2][2], Shen.type_cons) && Shen.empty$question$(Arg8655_2[2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg8655_2[2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8655_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg8655_2[2][2][1]]), []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]
  : ((Shen.empty$question$(Arg8655_0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8655_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg8655_2]), []]]]
  : ((Shen.is_type(Arg8655_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg8655_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.recursive_descent"], [Arg8655_0, Arg8655_1, Arg8655_2]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg8655_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variable-match"], [Arg8655_0, Arg8655_1, Arg8655_2]);})
  : ((Shen.call(Shen.fns["shen.jump_stream?"], [Arg8655_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.jump_stream"], [Arg8655_0, Arg8655_1, Arg8655_2]);})
  : ((Shen.call(Shen.fns["shen.terminal?"], [Arg8655_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check_stream"], [Arg8655_0, Arg8655_1, Arg8655_2]);})
  : ((Shen.is_type(Arg8655_0[1], Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list-stream"], [Shen.call(Shen.fns["shen.decons"], [Arg8655_0[1]]), Arg8655_0[2], Arg8655_1, Arg8655_2]);})
  : (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg8655_0[1], " is not legal syntax\x0d\x0a", [Shen.type_symbol, "shen.a"]]));}))))))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.syntax"]]);}))))}, 3, [], "shen.syntax"];





Shen.fns["shen.list-stream"] = [Shen.type_func, function shen_user_lambda8658(Arg8657) {
  if (Arg8657.length < 4) return [Shen.type_func, shen_user_lambda8658, 4, Arg8657];
  var Arg8657_0 = Arg8657[0], Arg8657_1 = Arg8657[1], Arg8657_2 = Arg8657[2], Arg8657_3 = Arg8657[3];
  var R0, R1, R2;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8657_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8657_2, []]], []]], []]], []]]]),
  (R1 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.place"]])),
  (R2 = Shen.call(Shen.fns["shen.syntax"], [Arg8657_1, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8657_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, Arg8657_2, []]], []]], []]]], Arg8657_3])),
  (R2 = Shen.call(Shen.fns["shen.insert-runon"], [R2, R1, Shen.call(Shen.fns["shen.syntax"], [Arg8657_0, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8657_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, Arg8657_2, []]], []]], []]]], R1])])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]])}, 4, [], "shen.list-stream"];





Shen.fns["shen.decons"] = [Shen.type_func, function shen_user_lambda8660(Arg8659) {
  if (Arg8659.length < 1) return [Shen.type_func, shen_user_lambda8660, 1, Arg8659];
  var Arg8659_0 = Arg8659[0];
  return (((Shen.is_type(Arg8659_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg8659_0[1])) && (Shen.is_type(Arg8659_0[2], Shen.type_cons) && (Shen.is_type(Arg8659_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg8659_0[2][2][1]) && Shen.empty$question$(Arg8659_0[2][2][2])))))))
  ? [Shen.type_cons, Arg8659_0[2][1], []]
  : (((Shen.is_type(Arg8659_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg8659_0[1])) && (Shen.is_type(Arg8659_0[2], Shen.type_cons) && (Shen.is_type(Arg8659_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg8659_0[2][2][2]))))))
  ? [Shen.type_cons, Arg8659_0[2][1], Shen.call(Shen.fns["shen.decons"], [Arg8659_0[2][2][1]])]
  : Arg8659_0))}, 1, [], "shen.decons"];





Shen.fns["shen.insert-runon"] = [Shen.type_func, function shen_user_lambda8662(Arg8661) {
  if (Arg8661.length < 3) return [Shen.type_func, shen_user_lambda8662, 3, Arg8661];
  var Arg8661_0 = Arg8661[0], Arg8661_1 = Arg8661[1], Arg8661_2 = Arg8661[2];
  return (((Shen.is_type(Arg8661_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.pair"], Arg8661_2[1])) && (Shen.is_type(Arg8661_2[2], Shen.type_cons) && (Shen.is_type(Arg8661_2[2][2], Shen.type_cons) && (Shen.empty$question$(Arg8661_2[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg8661_2[2][2][1], Arg8661_1))))))))
  ? Arg8661_0
  : ((Shen.is_type(Arg8661_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda8664(Arg8663) {
  if (Arg8663.length < 3) return [Shen.type_func, shen_user_lambda8664, 3, Arg8663];
  var Arg8663_0 = Arg8663[0], Arg8663_1 = Arg8663[1], Arg8663_2 = Arg8663[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-runon"], [Arg8663_0, Arg8663_1, Arg8663_2]);})}, 3, [Arg8661_0, Arg8661_1], undefined], Arg8661_2]);})
  : Arg8661_2))}, 3, [], "shen.insert-runon"];





Shen.fns["shen.strip-pathname"] = [Shen.type_func, function shen_user_lambda8666(Arg8665) {
  if (Arg8665.length < 1) return [Shen.type_func, shen_user_lambda8666, 1, Arg8665];
  var Arg8665_0 = Arg8665[0];
  return (((!Shen.call(Shen.fns["element?"], [".", Arg8665_0])))
  ? Arg8665_0
  : ((Shen.is_type(Arg8665_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.strip-pathname"], [Arg8665_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.strip-pathname"]]);})))}, 1, [], "shen.strip-pathname"];





Shen.fns["shen.recursive_descent"] = [Shen.type_func, function shen_user_lambda8668(Arg8667) {
  if (Arg8667.length < 3) return [Shen.type_func, shen_user_lambda8668, 3, Arg8667];
  var Arg8667_0 = Arg8667[0], Arg8667_1 = Arg8667[1], Arg8667_2 = Arg8667[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg8667_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg8667_0[1], [Shen.type_cons, Arg8667_1, []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg8667_0[2], Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg8667_0[1]]), Arg8667_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg8667_0[1]]), [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg8667_0[1]]), []]]], []]], [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursive_descent"]]);}))}, 3, [], "shen.recursive_descent"];





Shen.fns["shen.variable-match"] = [Shen.type_func, function shen_user_lambda8670(Arg8669) {
  if (Arg8669.length < 3) return [Shen.type_func, shen_user_lambda8670, 3, Arg8669];
  var Arg8669_0 = Arg8669[0], Arg8669_1 = Arg8669[1], Arg8669_2 = Arg8669[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg8669_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8669_1, []]], []]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg8669_0[1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8669_1, []]], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg8669_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8669_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg8669_1, []]], []]]], Arg8669_2]), []]]]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.variable-match"]]);}))}, 3, [], "shen.variable-match"];





Shen.fns["shen.terminal?"] = [Shen.type_func, function shen_user_lambda8672(Arg8671) {
  if (Arg8671.length < 1) return [Shen.type_func, shen_user_lambda8672, 1, Arg8671];
  var Arg8671_0 = Arg8671[0];
  return ((Shen.is_type(Arg8671_0, Shen.type_cons))
  ? false
  : ((Shen.call(Shen.fns["variable?"], [Arg8671_0]))
  ? false
  : true))}, 1, [], "shen.terminal?"];





Shen.fns["shen.jump_stream?"] = [Shen.type_func, function shen_user_lambda8674(Arg8673) {
  if (Arg8673.length < 1) return [Shen.type_func, shen_user_lambda8674, 1, Arg8673];
  var Arg8673_0 = Arg8673[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg8673_0, [Shen.type_symbol, "_"])))
  ? true
  : false)}, 1, [], "shen.jump_stream?"];





Shen.fns["shen.check_stream"] = [Shen.type_func, function shen_user_lambda8676(Arg8675) {
  if (Arg8675.length < 3) return [Shen.type_func, shen_user_lambda8676, 3, Arg8675];
  var Arg8675_0 = Arg8675[0], Arg8675_1 = Arg8675[1], Arg8675_2 = Arg8675[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg8675_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8675_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg8675_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8675_1, []]], []]], []]]], []]]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg8675_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8675_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg8675_1, []]], []]]], Arg8675_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.check_stream"]]);}))}, 3, [], "shen.check_stream"];





Shen.fns["shen.jump_stream"] = [Shen.type_func, function shen_user_lambda8678(Arg8677) {
  if (Arg8677.length < 3) return [Shen.type_func, shen_user_lambda8678, 3, Arg8677];
  var Arg8677_0 = Arg8677[0], Arg8677_1 = Arg8677[1], Arg8677_2 = Arg8677[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg8677_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8677_1, []]], []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg8677_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg8677_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg8677_1, []]], []]]], Arg8677_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.jump_stream"]]);}))}, 3, [], "shen.jump_stream"];





Shen.fns["shen.semantics"] = [Shen.type_func, function shen_user_lambda8680(Arg8679) {
  if (Arg8679.length < 1) return [Shen.type_func, shen_user_lambda8680, 1, Arg8679];
  var Arg8679_0 = Arg8679[0];
  return ((Shen.empty$question$(Arg8679_0))
  ? []
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg8679_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg8679_0]), []]]
  : ((Shen.call(Shen.fns["variable?"], [Arg8679_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg8679_0]);})
  : ((Shen.is_type(Arg8679_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda8682(Arg8681) {
  if (Arg8681.length < 1) return [Shen.type_func, shen_user_lambda8682, 1, Arg8681];
  var Arg8681_0 = Arg8681[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.semantics"], [Arg8681_0]);})}, 1, [], undefined], Arg8679_0]);})
  : Arg8679_0))))}, 1, [], "shen.semantics"];





Shen.fns["shen.snd-or-fail"] = [Shen.type_func, function shen_user_lambda8684(Arg8683) {
  if (Arg8683.length < 1) return [Shen.type_func, shen_user_lambda8684, 1, Arg8683];
  var Arg8683_0 = Arg8683[0];
  return (((Shen.is_type(Arg8683_0, Shen.type_cons) && (Shen.is_type(Arg8683_0[2], Shen.type_cons) && Shen.empty$question$(Arg8683_0[2][2]))))
  ? Arg8683_0[2][1]
  : Shen.fail_obj)}, 1, [], "shen.snd-or-fail"];









Shen.fns["shen.pair"] = [Shen.type_func, function shen_user_lambda8687(Arg8686) {
  if (Arg8686.length < 2) return [Shen.type_func, shen_user_lambda8687, 2, Arg8686];
  var Arg8686_0 = Arg8686[0], Arg8686_1 = Arg8686[1];
  return [Shen.type_cons, Arg8686_0, [Shen.type_cons, Arg8686_1, []]]}, 2, [], "shen.pair"];





Shen.fns["shen.hdtl"] = [Shen.type_func, function shen_user_lambda8689(Arg8688) {
  if (Arg8688.length < 1) return [Shen.type_func, shen_user_lambda8689, 1, Arg8688];
  var Arg8688_0 = Arg8688[0];
  return Arg8688_0[2][1]}, 1, [], "shen.hdtl"];





Shen.fns["<!>"] = [Shen.type_func, function shen_user_lambda8691(Arg8690) {
  if (Arg8690.length < 1) return [Shen.type_func, shen_user_lambda8691, 1, Arg8690];
  var Arg8690_0 = Arg8690[0];
  return (((Shen.is_type(Arg8690_0, Shen.type_cons) && (Shen.is_type(Arg8690_0[2], Shen.type_cons) && Shen.empty$question$(Arg8690_0[2][2]))))
  ? [Shen.type_cons, [], [Shen.type_cons, Arg8690_0[1], []]]
  : Shen.fail_obj)}, 1, [], "<!>"];





Shen.fns["<e>"] = [Shen.type_func, function shen_user_lambda8693(Arg8692) {
  if (Arg8692.length < 1) return [Shen.type_func, shen_user_lambda8693, 1, Arg8692];
  var Arg8692_0 = Arg8692[0];
  return (((Shen.is_type(Arg8692_0, Shen.type_cons) && (Shen.is_type(Arg8692_0[2], Shen.type_cons) && Shen.empty$question$(Arg8692_0[2][2]))))
  ? [Shen.type_cons, Arg8692_0[1], [Shen.type_cons, [], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "<e>"]]);}))}, 1, [], "<e>"];










Shen.fns["pr"] = [Shen.type_func, function shen_user_lambda8545(Arg8542) {
  if (Arg8542.length < 2) return [Shen.type_func, shen_user_lambda8545, 2, Arg8542];
  var Arg8542_0 = Arg8542[0], Arg8542_1 = Arg8542[1];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda8547(Arg8546) {
  if (Arg8546.length < 2) return [Shen.type_func, shen_user_lambda8547, 2, Arg8546];
  var Arg8546_0 = Arg8546[0], Arg8546_1 = Arg8546[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prh"], [Arg8546_1, Arg8546_0, 0]);})}, 2, [Arg8542_1, Arg8542_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda8549(Arg8548) {
  if (Arg8548.length < 2) return [Shen.type_func, shen_user_lambda8549, 2, Arg8548];
  var Arg8548_0 = Arg8548[0], Arg8548_1 = Arg8548[1];
  return Arg8548_0}, 2, [Arg8542_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 2, [], "pr"];





Shen.fns["shen.prh"] = [Shen.type_func, function shen_user_lambda8551(Arg8550) {
  if (Arg8550.length < 3) return [Shen.type_func, shen_user_lambda8551, 3, Arg8550];
  var Arg8550_0 = Arg8550[0], Arg8550_1 = Arg8550[1], Arg8550_2 = Arg8550[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prh"], [Arg8550_0, Arg8550_1, Shen.call(Shen.fns["shen.write-char-and-inc"], [Arg8550_0, Arg8550_1, Arg8550_2])]);})}, 3, [], "shen.prh"];





Shen.fns["shen.write-char-and-inc"] = [Shen.type_func, function shen_user_lambda8553(Arg8552) {
  if (Arg8552.length < 3) return [Shen.type_func, shen_user_lambda8553, 3, Arg8552];
  var Arg8552_0 = Arg8552[0], Arg8552_1 = Arg8552[1], Arg8552_2 = Arg8552[2];
  return (Shen.write_byte(Shen.string_$gt$n(Arg8552_0[Arg8552_2]), Arg8552_1),
  (Arg8552_2 + 1))}, 3, [], "shen.write-char-and-inc"];





Shen.fns["print"] = [Shen.type_func, function shen_user_lambda8555(Arg8554) {
  if (Arg8554.length < 1) return [Shen.type_func, shen_user_lambda8555, 1, Arg8554];
  var Arg8554_0 = Arg8554[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.insert"], [Arg8554_0, "~S"])),
  Shen.call(Shen.fns["shen.prhush"], [R0, Shen.call(Shen.fns["stoutput"], [])]),
  Arg8554_0)}, 1, [], "print"];





Shen.fns["shen.prhush"] = [Shen.type_func, function shen_user_lambda8557(Arg8556) {
  if (Arg8556.length < 2) return [Shen.type_func, shen_user_lambda8557, 2, Arg8556];
  var Arg8556_0 = Arg8556[0], Arg8556_1 = Arg8556[1];
  return (((Shen.globals["*hush*"]))
  ? Arg8556_0
  : (function() {
  return Shen.call_tail(Shen.fns["pr"], [Arg8556_0, Arg8556_1]);}))}, 2, [], "shen.prhush"];





Shen.fns["shen.mkstr"] = [Shen.type_func, function shen_user_lambda8559(Arg8558) {
  if (Arg8558.length < 2) return [Shen.type_func, shen_user_lambda8559, 2, Arg8558];
  var Arg8558_0 = Arg8558[0], Arg8558_1 = Arg8558[1];
  return (((typeof(Arg8558_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg8558_0]), Arg8558_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, Arg8558_0, []]], Arg8558_1]);}))}, 2, [], "shen.mkstr"];





Shen.fns["shen.mkstr-l"] = [Shen.type_func, function shen_user_lambda8561(Arg8560) {
  if (Arg8560.length < 2) return [Shen.type_func, shen_user_lambda8561, 2, Arg8560];
  var Arg8560_0 = Arg8560[0], Arg8560_1 = Arg8560[1];
  return ((Shen.empty$question$(Arg8560_1))
  ? Arg8560_0
  : ((Shen.is_type(Arg8560_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.insert-l"], [Arg8560_1[1], Arg8560_0]), Arg8560_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-l"]]);})))}, 2, [], "shen.mkstr-l"];





Shen.fns["shen.insert-l"] = [Shen.type_func, function shen_user_lambda8563(Arg8562) {
  if (Arg8562.length < 2) return [Shen.type_func, shen_user_lambda8563, 2, Arg8562];
  var Arg8562_0 = Arg8562[0], Arg8562_1 = Arg8562[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg8562_1)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg8562_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg8562_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg8562_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg8562_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg8562_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg8562_1)), [Shen.type_cons, [Shen.type_symbol, "shen.a"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg8562_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg8562_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg8562_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg8562_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg8562_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg8562_1)), [Shen.type_cons, [Shen.type_symbol, "shen.r"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg8562_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg8562_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg8562_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg8562_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg8562_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg8562_1)), [Shen.type_cons, [Shen.type_symbol, "shen.s"], []]]]]
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg8562_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.factor-cn"], [[Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg8562_1[0], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg8562_0, Shen.tlstr(Arg8562_1)]), []]]]]);})
  : (((Shen.is_type(Arg8562_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg8562_1[1])) && (Shen.is_type(Arg8562_1[2], Shen.type_cons) && (Shen.is_type(Arg8562_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg8562_1[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg8562_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg8562_0, Arg8562_1[2][2][1]]), []]]]
  : (((Shen.is_type(Arg8562_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.app"], Arg8562_1[1])) && (Shen.is_type(Arg8562_1[2], Shen.type_cons) && (Shen.is_type(Arg8562_1[2][2], Shen.type_cons) && (Shen.is_type(Arg8562_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg8562_1[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg8562_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg8562_0, Arg8562_1[2][2][1]]), Arg8562_1[2][2][2]]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-l"]]);}))))))))}, 2, [], "shen.insert-l"];





Shen.fns["shen.factor-cn"] = [Shen.type_func, function shen_user_lambda8565(Arg8564) {
  if (Arg8564.length < 1) return [Shen.type_func, shen_user_lambda8565, 1, Arg8564];
  var Arg8564_0 = Arg8564[0];
  return (((Shen.is_type(Arg8564_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg8564_0[1])) && (Shen.is_type(Arg8564_0[2], Shen.type_cons) && (Shen.is_type(Arg8564_0[2][2], Shen.type_cons) && (Shen.is_type(Arg8564_0[2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg8564_0[2][2][1][1])) && (Shen.is_type(Arg8564_0[2][2][1][2], Shen.type_cons) && (Shen.is_type(Arg8564_0[2][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg8564_0[2][2][1][2][2][2]) && (Shen.empty$question$(Arg8564_0[2][2][2]) && ((typeof(Arg8564_0[2][1]) == 'string') && (typeof(Arg8564_0[2][2][1][2][1]) == 'string')))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, (Arg8564_0[2][1] + Arg8564_0[2][2][1][2][1]), Arg8564_0[2][2][1][2][2]]]
  : Arg8564_0)}, 1, [], "shen.factor-cn"];





Shen.fns["shen.proc-nl"] = [Shen.type_func, function shen_user_lambda8567(Arg8566) {
  if (Arg8566.length < 1) return [Shen.type_func, shen_user_lambda8567, 1, Arg8566];
  var Arg8566_0 = Arg8566[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg8566_0)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg8566_0]) && (Shen.unwind_tail(Shen.$eq$("~", Arg8566_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg8566_0)]) && Shen.unwind_tail(Shen.$eq$("%", Shen.tlstr(Arg8566_0)[0]))))))
  ? (Shen.n_$gt$string(10) + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Shen.tlstr(Arg8566_0))]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg8566_0]))
  ? (Arg8566_0[0] + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Arg8566_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.proc-nl"]]);}))))}, 1, [], "shen.proc-nl"];





Shen.fns["shen.mkstr-r"] = [Shen.type_func, function shen_user_lambda8569(Arg8568) {
  if (Arg8568.length < 2) return [Shen.type_func, shen_user_lambda8569, 2, Arg8568];
  var Arg8568_0 = Arg8568[0], Arg8568_1 = Arg8568[1];
  return ((Shen.empty$question$(Arg8568_1))
  ? Arg8568_0
  : ((Shen.is_type(Arg8568_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.insert"], [Shen.type_cons, Arg8568_1[1], [Shen.type_cons, Arg8568_0, []]]], Arg8568_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-r"]]);})))}, 2, [], "shen.mkstr-r"];





Shen.fns["shen.insert"] = [Shen.type_func, function shen_user_lambda8571(Arg8570) {
  if (Arg8570.length < 2) return [Shen.type_func, shen_user_lambda8571, 2, Arg8570];
  var Arg8570_0 = Arg8570[0], Arg8570_1 = Arg8570[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-h"], [Arg8570_0, Arg8570_1, ""]);})}, 2, [], "shen.insert"];





Shen.fns["shen.insert-h"] = [Shen.type_func, function shen_user_lambda8573(Arg8572) {
  if (Arg8572.length < 3) return [Shen.type_func, shen_user_lambda8573, 3, Arg8572];
  var Arg8572_0 = Arg8572[0], Arg8572_1 = Arg8572[1], Arg8572_2 = Arg8572[2];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg8572_1)))
  ? Arg8572_2
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg8572_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg8572_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg8572_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg8572_1)[0]))))))
  ? (Arg8572_2 + Shen.call(Shen.fns["shen.app"], [Arg8572_0, Shen.tlstr(Shen.tlstr(Arg8572_1)), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg8572_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg8572_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg8572_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg8572_1)[0]))))))
  ? (Arg8572_2 + Shen.call(Shen.fns["shen.app"], [Arg8572_0, Shen.tlstr(Shen.tlstr(Arg8572_1)), [Shen.type_symbol, "shen.r"]]))
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg8572_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg8572_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg8572_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg8572_1)[0]))))))
  ? (Arg8572_2 + Shen.call(Shen.fns["shen.app"], [Arg8572_0, Shen.tlstr(Shen.tlstr(Arg8572_1)), [Shen.type_symbol, "shen.s"]]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg8572_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-h"], [Arg8572_0, Shen.tlstr(Arg8572_1), (Arg8572_2 + Arg8572_1[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-h"]]);}))))))}, 3, [], "shen.insert-h"];





Shen.fns["shen.app"] = [Shen.type_func, function shen_user_lambda8575(Arg8574) {
  if (Arg8574.length < 3) return [Shen.type_func, shen_user_lambda8575, 3, Arg8574];
  var Arg8574_0 = Arg8574[0], Arg8574_1 = Arg8574[1], Arg8574_2 = Arg8574[2];
  return (Shen.call(Shen.fns["shen.arg->str"], [Arg8574_0, Arg8574_2]) + Arg8574_1)}, 3, [], "shen.app"];





Shen.fns["shen.arg->str"] = [Shen.type_func, function shen_user_lambda8577(Arg8576) {
  if (Arg8576.length < 2) return [Shen.type_func, shen_user_lambda8577, 2, Arg8576];
  var Arg8576_0 = Arg8576[0], Arg8576_1 = Arg8576[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg8576_0, Shen.fail_obj)))
  ? "..."
  : ((Shen.call(Shen.fns["shen.list?"], [Arg8576_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list->str"], [Arg8576_0, Arg8576_1]);})
  : (((typeof(Arg8576_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.str->str"], [Arg8576_0, Arg8576_1]);})
  : ((Shen.absvector$question$(Arg8576_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.vector->str"], [Arg8576_0, Arg8576_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.atom->str"], [Arg8576_0]);})))))}, 2, [], "shen.arg->str"];





Shen.fns["shen.list->str"] = [Shen.type_func, function shen_user_lambda8579(Arg8578) {
  if (Arg8578.length < 2) return [Shen.type_func, shen_user_lambda8579, 2, Arg8578];
  var Arg8578_0 = Arg8578[0], Arg8578_1 = Arg8578[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.r"], Arg8578_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["(", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg8578_0, [Shen.type_symbol, "shen.r"], Shen.call(Shen.fns["shen.maxseq"], [])]), ")"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg8578_0, Arg8578_1, Shen.call(Shen.fns["shen.maxseq"], [])]), "]"])]);}))}, 2, [], "shen.list->str"];





Shen.fns["shen.maxseq"] = [Shen.type_func, function shen_user_lambda8581(Arg8580) {
  if (Arg8580.length < 0) return [Shen.type_func, shen_user_lambda8581, 0, Arg8580];
  return (Shen.globals["*maximum-print-sequence-size*"])}, 0, [], "shen.maxseq"];





Shen.fns["shen.iter-list"] = [Shen.type_func, function shen_user_lambda8583(Arg8582) {
  if (Arg8582.length < 3) return [Shen.type_func, shen_user_lambda8583, 3, Arg8582];
  var Arg8582_0 = Arg8582[0], Arg8582_1 = Arg8582[1], Arg8582_2 = Arg8582[2];
  return ((Shen.empty$question$(Arg8582_0))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg8582_2)))
  ? "... etc"
  : (((Shen.is_type(Arg8582_0, Shen.type_cons) && Shen.empty$question$(Arg8582_0[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [Arg8582_0[1], Arg8582_1]);})
  : ((Shen.is_type(Arg8582_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Arg8582_0[1], Arg8582_1]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-list"], [Arg8582_0[2], Arg8582_1, (Arg8582_2 - 1)])])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["|", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.arg->str"], [Arg8582_0, Arg8582_1])])]);})))))}, 3, [], "shen.iter-list"];





Shen.fns["shen.str->str"] = [Shen.type_func, function shen_user_lambda8585(Arg8584) {
  if (Arg8584.length < 2) return [Shen.type_func, shen_user_lambda8585, 2, Arg8584];
  var Arg8584_0 = Arg8584[0], Arg8584_1 = Arg8584[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg8584_1)))
  ? Arg8584_0
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(34), Shen.call(Shen.fns["@s"], [Arg8584_0, Shen.n_$gt$string(34)])]);}))}, 2, [], "shen.str->str"];





Shen.fns["shen.vector->str"] = [Shen.type_func, function shen_user_lambda8587(Arg8586) {
  if (Arg8586.length < 2) return [Shen.type_func, shen_user_lambda8587, 2, Arg8586];
  var Arg8586_0 = Arg8586[0], Arg8586_1 = Arg8586[1];
  return ((Shen.call(Shen.fns["shen.print-vector?"], [Arg8586_0]))
  ? (function() {
  return Shen.call_tail(Shen.absvector_ref(Arg8586_0, 0), [Arg8586_0]);})
  : ((Shen.vector$question$(Arg8586_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg8586_0, 1, Arg8586_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg8586_0, 0, Arg8586_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">>"])])]);})))}, 2, [], "shen.vector->str"];





Shen.fns["shen.print-vector?"] = [Shen.type_func, function shen_user_lambda8589(Arg8588) {
  if (Arg8588.length < 1) return [Shen.type_func, shen_user_lambda8589, 1, Arg8588];
  var Arg8588_0 = Arg8588[0];
  var R0;
  return ((R0 = Shen.absvector_ref(Arg8588_0, 0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.tuple"])))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.pvar"])))
  ? true
  : (((!(typeof(R0) == 'number')))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.fbound?"], [R0]);})
  : false))))}, 1, [], "shen.print-vector?"];





Shen.fns["shen.fbound?"] = [Shen.type_func, function shen_user_lambda8593(Arg8590) {
  if (Arg8590.length < 1) return [Shen.type_func, shen_user_lambda8593, 1, Arg8590];
  var Arg8590_0 = Arg8590[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda8595(Arg8594) {
  if (Arg8594.length < 1) return [Shen.type_func, shen_user_lambda8595, 1, Arg8594];
  var Arg8594_0 = Arg8594[0];
  return (Shen.call(Shen.fns["ps"], [Arg8594_0]),
  true)}, 1, [Arg8590_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda8597(Arg8596) {
  if (Arg8596.length < 1) return [Shen.type_func, shen_user_lambda8597, 1, Arg8596];
  var Arg8596_0 = Arg8596[0];
  return false}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "shen.fbound?"];





Shen.fns["shen.tuple"] = [Shen.type_func, function shen_user_lambda8599(Arg8598) {
  if (Arg8598.length < 1) return [Shen.type_func, shen_user_lambda8599, 1, Arg8598];
  var Arg8598_0 = Arg8598[0];
  return ("(@p " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg8598_0, 1), (" " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg8598_0, 2), ")", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.s"]]))}, 1, [], "shen.tuple"];





Shen.fns["shen.iter-vector"] = [Shen.type_func, function shen_user_lambda8605(Arg8600) {
  if (Arg8600.length < 4) return [Shen.type_func, shen_user_lambda8605, 4, Arg8600];
  var Arg8600_0 = Arg8600[0], Arg8600_1 = Arg8600[1], Arg8600_2 = Arg8600[2], Arg8600_3 = Arg8600[3];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg8600_3)))
  ? "... etc"
  : ((R0 = [Shen.type_func, function shen_user_lambda8607(Arg8606) {
  if (Arg8606.length < 4) return [Shen.type_func, shen_user_lambda8607, 4, Arg8606];
  var Arg8606_0 = Arg8606[0], Arg8606_1 = Arg8606[1], Arg8606_2 = Arg8606[2], Arg8606_3 = Arg8606[3];
  return Shen.absvector_ref(Arg8606_0, Arg8606_1)}, 4, [Arg8600_0, Arg8600_1, Arg8600_2, Arg8600_3], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda8609(Arg8608) {
  if (Arg8608.length < 1) return [Shen.type_func, shen_user_lambda8609, 1, Arg8608];
  var Arg8608_0 = Arg8608[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined]),
  (R0 = Shen.trap_error(R0, R1)),
  (R1 = [Shen.type_func, function shen_user_lambda8611(Arg8610) {
  if (Arg8610.length < 5) return [Shen.type_func, shen_user_lambda8611, 5, Arg8610];
  var Arg8610_0 = Arg8610[0], Arg8610_1 = Arg8610[1], Arg8610_2 = Arg8610[2], Arg8610_3 = Arg8610[3], Arg8610_4 = Arg8610[4];
  return Shen.absvector_ref(Arg8610_1, (Arg8610_2 + 1))}, 5, [R0, Arg8600_0, Arg8600_1, Arg8600_2, Arg8600_3], undefined]),
  (R2 = [Shen.type_func, function shen_user_lambda8613(Arg8612) {
  if (Arg8612.length < 1) return [Shen.type_func, shen_user_lambda8613, 1, Arg8612];
  var Arg8612_0 = Arg8612[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined]),
  (R1 = Shen.trap_error(R1, R2)),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [R0, Arg8600_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [R0, Arg8600_2]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-vector"], [Arg8600_0, (Arg8600_1 + 1), Arg8600_2, (Arg8600_3 - 1)])])]);})))))}, 4, [], "shen.iter-vector"];





Shen.fns["shen.atom->str"] = [Shen.type_func, function shen_user_lambda8617(Arg8614) {
  if (Arg8614.length < 1) return [Shen.type_func, shen_user_lambda8617, 1, Arg8614];
  var Arg8614_0 = Arg8614[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda8619(Arg8618) {
  if (Arg8618.length < 1) return [Shen.type_func, shen_user_lambda8619, 1, Arg8618];
  var Arg8618_0 = Arg8618[0];
  return (function() {
  return Shen.str(Arg8618_0);})}, 1, [Arg8614_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda8621(Arg8620) {
  if (Arg8620.length < 1) return [Shen.type_func, shen_user_lambda8621, 1, Arg8620];
  var Arg8620_0 = Arg8620[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.funexstring"], []);})}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "shen.atom->str"];





Shen.fns["shen.funexstring"] = [Shen.type_func, function shen_user_lambda8623(Arg8622) {
  if (Arg8622.length < 0) return [Shen.type_func, shen_user_lambda8623, 0, Arg8622];
  return (function() {
  return Shen.call_tail(Shen.fns["@s"], ["", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "x"]]), [Shen.type_symbol, "shen.a"]]), ""])])])])])]);})}, 0, [], "shen.funexstring"];





Shen.fns["shen.list?"] = [Shen.type_func, function shen_user_lambda8625(Arg8624) {
  if (Arg8624.length < 1) return [Shen.type_func, shen_user_lambda8625, 1, Arg8624];
  var Arg8624_0 = Arg8624[0];
  return (Shen.empty$question$(Arg8624_0) || Shen.is_type(Arg8624_0, Shen.type_cons))}, 1, [], "shen.list?"];










Shen.fns["read-file-as-bytelist"] = [Shen.type_func, function shen_user_lambda7400(Arg7399) {
  if (Arg7399.length < 1) return [Shen.type_func, shen_user_lambda7400, 1, Arg7399];
  var Arg7399_0 = Arg7399[0];
  var R0, R1;
  return ((R0 = Shen.open(Arg7399_0, [Shen.type_symbol, "in"])),
  (R1 = Shen.read_byte(R0)),
  (R1 = Shen.call(Shen.fns["shen.read-file-as-bytelist-help"], [R0, R1, []])),
  Shen.close(R0),
  (function() {
  return Shen.call_tail(Shen.fns["reverse"], [R1]);}))}, 1, [], "read-file-as-bytelist"];





Shen.fns["shen.read-file-as-bytelist-help"] = [Shen.type_func, function shen_user_lambda7402(Arg7401) {
  if (Arg7401.length < 3) return [Shen.type_func, shen_user_lambda7402, 3, Arg7401];
  var Arg7401_0 = Arg7401[0], Arg7401_1 = Arg7401[1], Arg7401_2 = Arg7401[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7401_1)))
  ? Arg7401_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.read-file-as-bytelist-help"], [Arg7401_0, Shen.read_byte(Arg7401_0), [Shen.type_cons, Arg7401_1, Arg7401_2]]);}))}, 3, [], "shen.read-file-as-bytelist-help"];





Shen.fns["read-file-as-string"] = [Shen.type_func, function shen_user_lambda7404(Arg7403) {
  if (Arg7403.length < 1) return [Shen.type_func, shen_user_lambda7404, 1, Arg7403];
  var Arg7403_0 = Arg7403[0];
  var R0;
  return ((R0 = Shen.open(Arg7403_0, [Shen.type_symbol, "in"])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [R0, Shen.read_byte(R0), ""]);}))}, 1, [], "read-file-as-string"];





Shen.fns["shen.rfas-h"] = [Shen.type_func, function shen_user_lambda7406(Arg7405) {
  if (Arg7405.length < 3) return [Shen.type_func, shen_user_lambda7406, 3, Arg7405];
  var Arg7405_0 = Arg7405[0], Arg7405_1 = Arg7405[1], Arg7405_2 = Arg7405[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7405_1)))
  ? (Shen.close(Arg7405_0),
  Arg7405_2)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [Arg7405_0, Shen.read_byte(Arg7405_0), (Arg7405_2 + Shen.n_$gt$string(Arg7405_1))]);}))}, 3, [], "shen.rfas-h"];





Shen.fns["input"] = [Shen.type_func, function shen_user_lambda7408(Arg7407) {
  if (Arg7407.length < 1) return [Shen.type_func, shen_user_lambda7408, 1, Arg7407];
  var Arg7407_0 = Arg7407[0];
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["read"], [Arg7407_0]));})}, 1, [], "input"];





Shen.fns["input+"] = [Shen.type_func, function shen_user_lambda7410(Arg7409) {
  if (Arg7409.length < 2) return [Shen.type_func, shen_user_lambda7410, 2, Arg7409];
  var Arg7409_0 = Arg7409[0], Arg7409_1 = Arg7409[1];
  var R0;
  return (Shen.call(Shen.fns["shen.monotype"], [Arg7409_0]),
  (R0 = Shen.call(Shen.fns["read"], [Arg7409_1])),
  ((Shen.unwind_tail(Shen.$eq$(false, Shen.call(Shen.fns["shen.typecheck"], [R0, Arg7409_0]))))
  ? (function() {
  return Shen.simple_error(("type error: " + Shen.call(Shen.fns["shen.app"], [R0, (" is not of type " + Shen.call(Shen.fns["shen.app"], [Arg7409_0, "\x0d\x0a", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]])));})
  : (function() {
  return Shen.eval_kl(R0);})))}, 2, [], "input+"];





Shen.fns["shen.monotype"] = [Shen.type_func, function shen_user_lambda7412(Arg7411) {
  if (Arg7411.length < 1) return [Shen.type_func, shen_user_lambda7412, 1, Arg7411];
  var Arg7411_0 = Arg7411[0];
  return ((Shen.is_type(Arg7411_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7414(Arg7413) {
  if (Arg7413.length < 1) return [Shen.type_func, shen_user_lambda7414, 1, Arg7413];
  var Arg7413_0 = Arg7413[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.monotype"], [Arg7413_0]);})}, 1, [], undefined], Arg7411_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg7411_0]))
  ? (function() {
  return Shen.simple_error(("input+ expects a monotype: not " + Shen.call(Shen.fns["shen.app"], [Arg7411_0, "\x0d\x0a", [Shen.type_symbol, "shen.a"]])));})
  : Arg7411_0))}, 1, [], "shen.monotype"];





Shen.fns["read"] = [Shen.type_func, function shen_user_lambda7416(Arg7415) {
  if (Arg7415.length < 1) return [Shen.type_func, shen_user_lambda7416, 1, Arg7415];
  var Arg7415_0 = Arg7415[0];
  return Shen.call(Shen.fns["shen.read-loop"], [Arg7415_0, Shen.read_byte(Arg7415_0), []])[1]}, 1, [], "read"];





Shen.fns["shen.read-loop"] = [Shen.type_func, function shen_user_lambda7418(Arg7417) {
  if (Arg7417.length < 3) return [Shen.type_func, shen_user_lambda7418, 3, Arg7417];
  var Arg7417_0 = Arg7417[0], Arg7417_1 = Arg7417[1], Arg7417_2 = Arg7417[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7417_1)))
  ? ((Shen.empty$question$(Arg7417_2))
  ? (function() {
  return Shen.simple_error("error: empty stream");})
  : (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda7420(Arg7419) {
  if (Arg7419.length < 1) return [Shen.type_func, shen_user_lambda7420, 1, Arg7419];
  var Arg7419_0 = Arg7419[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg7419_0]);})}, 1, [], undefined], Arg7417_2, [Shen.type_func, function shen_user_lambda7422(Arg7421) {
  if (Arg7421.length < 1) return [Shen.type_func, shen_user_lambda7422, 1, Arg7421];
  var Arg7421_0 = Arg7421[0];
  return Arg7421_0}, 1, [], undefined]]);}))
  : ((Shen.call(Shen.fns["shen.terminator?"], [Arg7417_1]))
  ? ((R0 = Shen.call(Shen.fns["append"], [Arg7417_2, [Shen.type_cons, Arg7417_1, []]])),
  (R1 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda7424(Arg7423) {
  if (Arg7423.length < 1) return [Shen.type_func, shen_user_lambda7424, 1, Arg7423];
  var Arg7423_0 = Arg7423[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg7423_0]);})}, 1, [], undefined], R0, [Shen.type_func, function shen_user_lambda7426(Arg7425) {
  if (Arg7425.length < 1) return [Shen.type_func, shen_user_lambda7426, 1, Arg7425];
  var Arg7425_0 = Arg7425[0];
  return [Shen.type_symbol, "shen.nextbyte"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen.nextbyte"])) || Shen.empty$question$(R1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-loop"], [Arg7417_0, Shen.read_byte(Arg7417_0), R0]);})
  : R1))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.read-loop"], [Arg7417_0, Shen.read_byte(Arg7417_0), Shen.call(Shen.fns["append"], [Arg7417_2, [Shen.type_cons, Arg7417_1, []]])]);})))}, 3, [], "shen.read-loop"];





Shen.fns["shen.terminator?"] = [Shen.type_func, function shen_user_lambda7428(Arg7427) {
  if (Arg7427.length < 1) return [Shen.type_func, shen_user_lambda7428, 1, Arg7427];
  var Arg7427_0 = Arg7427[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7427_0, [Shen.type_cons, 9, [Shen.type_cons, 10, [Shen.type_cons, 13, [Shen.type_cons, 32, [Shen.type_cons, 34, [Shen.type_cons, 41, [Shen.type_cons, 93, []]]]]]]]]);})}, 1, [], "shen.terminator?"];





Shen.fns["lineread"] = [Shen.type_func, function shen_user_lambda7430(Arg7429) {
  if (Arg7429.length < 1) return [Shen.type_func, shen_user_lambda7430, 1, Arg7429];
  var Arg7429_0 = Arg7429[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Arg7429_0), [], Arg7429_0]);})}, 1, [], "lineread"];





Shen.fns["shen.lineread-loop"] = [Shen.type_func, function shen_user_lambda7432(Arg7431) {
  if (Arg7431.length < 3) return [Shen.type_func, shen_user_lambda7432, 3, Arg7431];
  var Arg7431_0 = Arg7431[0], Arg7431_1 = Arg7431[1], Arg7431_2 = Arg7431[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7431_0)))
  ? ((Shen.empty$question$(Arg7431_1))
  ? (function() {
  return Shen.simple_error("empty stream");})
  : (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda7434(Arg7433) {
  if (Arg7433.length < 1) return [Shen.type_func, shen_user_lambda7434, 1, Arg7433];
  var Arg7433_0 = Arg7433[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg7433_0]);})}, 1, [], undefined], Arg7431_1, [Shen.type_func, function shen_user_lambda7436(Arg7435) {
  if (Arg7435.length < 1) return [Shen.type_func, shen_user_lambda7436, 1, Arg7435];
  var Arg7435_0 = Arg7435[0];
  return Arg7435_0}, 1, [], undefined]]);}))
  : ((Shen.unwind_tail(Shen.$eq$(Arg7431_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg7431_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda7438(Arg7437) {
  if (Arg7437.length < 1) return [Shen.type_func, shen_user_lambda7438, 1, Arg7437];
  var Arg7437_0 = Arg7437[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg7437_0]);})}, 1, [], undefined], Arg7431_1, [Shen.type_func, function shen_user_lambda7440(Arg7439) {
  if (Arg7439.length < 1) return [Shen.type_func, shen_user_lambda7440, 1, Arg7439];
  var Arg7439_0 = Arg7439[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Arg7431_2), Shen.call(Shen.fns["append"], [Arg7431_1, [Shen.type_cons, Arg7431_0, []]]), Arg7431_2]);})
  : R0))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Arg7431_2), Shen.call(Shen.fns["append"], [Arg7431_1, [Shen.type_cons, Arg7431_0, []]]), Arg7431_2]);}))))}, 3, [], "shen.lineread-loop"];





Shen.fns["read-file"] = [Shen.type_func, function shen_user_lambda7442(Arg7441) {
  if (Arg7441.length < 1) return [Shen.type_func, shen_user_lambda7442, 1, Arg7441];
  var Arg7441_0 = Arg7441[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["read-file-as-bytelist"], [Arg7441_0])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda7444(Arg7443) {
  if (Arg7443.length < 1) return [Shen.type_func, shen_user_lambda7444, 1, Arg7443];
  var Arg7443_0 = Arg7443[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg7443_0]);})}, 1, [], undefined], R0, [Shen.type_func, function shen_user_lambda7446(Arg7445) {
  if (Arg7445.length < 1) return [Shen.type_func, shen_user_lambda7446, 1, Arg7445];
  var Arg7445_0 = Arg7445[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.read-error"], [Arg7445_0]);})}, 1, [], undefined]]);}))}, 1, [], "read-file"];





Shen.fns["read-from-string"] = [Shen.type_func, function shen_user_lambda7448(Arg7447) {
  if (Arg7447.length < 1) return [Shen.type_func, shen_user_lambda7448, 1, Arg7447];
  var Arg7447_0 = Arg7447[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7450(Arg7449) {
  if (Arg7449.length < 1) return [Shen.type_func, shen_user_lambda7450, 1, Arg7449];
  var Arg7449_0 = Arg7449[0];
  return (function() {
  return Shen.string_$gt$n(Arg7449_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg7447_0])])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda7452(Arg7451) {
  if (Arg7451.length < 1) return [Shen.type_func, shen_user_lambda7452, 1, Arg7451];
  var Arg7451_0 = Arg7451[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg7451_0]);})}, 1, [], undefined], R0, [Shen.type_func, function shen_user_lambda7454(Arg7453) {
  if (Arg7453.length < 1) return [Shen.type_func, shen_user_lambda7454, 1, Arg7453];
  var Arg7453_0 = Arg7453[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.read-error"], [Arg7453_0]);})}, 1, [], undefined]]);}))}, 1, [], "read-from-string"];





Shen.fns["shen.read-error"] = [Shen.type_func, function shen_user_lambda7456(Arg7455) {
  if (Arg7455.length < 1) return [Shen.type_func, shen_user_lambda7456, 1, Arg7455];
  var Arg7455_0 = Arg7455[0];
  return (((Shen.is_type(Arg7455_0, Shen.type_cons) && (Shen.is_type(Arg7455_0[1], Shen.type_cons) && (Shen.is_type(Arg7455_0[2], Shen.type_cons) && Shen.empty$question$(Arg7455_0[2][2])))))
  ? (function() {
  return Shen.simple_error(("read error here:\x0d\x0a\x0d\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.compress-50"], [50, Arg7455_0[1]]), "\x0d\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error("read error\x0d\x0a");}))}, 1, [], "shen.read-error"];





Shen.fns["shen.compress-50"] = [Shen.type_func, function shen_user_lambda7458(Arg7457) {
  if (Arg7457.length < 2) return [Shen.type_func, shen_user_lambda7458, 2, Arg7457];
  var Arg7457_0 = Arg7457[0], Arg7457_1 = Arg7457[1];
  return ((Shen.empty$question$(Arg7457_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg7457_0)))
  ? ""
  : ((Shen.is_type(Arg7457_1, Shen.type_cons))
  ? (Shen.n_$gt$string(Arg7457_1[1]) + Shen.call(Shen.fns["shen.compress-50"], [(Arg7457_0 - 1), Arg7457_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compress-50"]]);}))))}, 2, [], "shen.compress-50"];





Shen.fns["shen.<st_input>"] = [Shen.type_func, function shen_user_lambda7460(Arg7459) {
  if (Arg7459.length < 1) return [Shen.type_func, shen_user_lambda7460, 1, Arg7459];
  var Arg7459_0 = Arg7459[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<lsb>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rsb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lrb>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rrb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.package-macro"], [Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lcurly>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "{"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rcurly>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "}"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<bar>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "bar!"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<semicolon>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ";"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<equal>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":="], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<minus>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comma>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ","], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<atom>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7459_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<st_input>"];





Shen.fns["shen.<lsb>"] = [Shen.type_func, function shen_user_lambda7462(Arg7461) {
  if (Arg7461.length < 1) return [Shen.type_func, shen_user_lambda7462, 1, Arg7461];
  var Arg7461_0 = Arg7461[0];
  var R0;
  return ((((Shen.is_type(Arg7461_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(91, Arg7461_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7461_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7461_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lsb>"];





Shen.fns["shen.<rsb>"] = [Shen.type_func, function shen_user_lambda7464(Arg7463) {
  if (Arg7463.length < 1) return [Shen.type_func, shen_user_lambda7464, 1, Arg7463];
  var Arg7463_0 = Arg7463[0];
  var R0;
  return ((((Shen.is_type(Arg7463_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(93, Arg7463_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7463_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7463_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rsb>"];





Shen.fns["shen.<lcurly>"] = [Shen.type_func, function shen_user_lambda7466(Arg7465) {
  if (Arg7465.length < 1) return [Shen.type_func, shen_user_lambda7466, 1, Arg7465];
  var Arg7465_0 = Arg7465[0];
  var R0;
  return ((((Shen.is_type(Arg7465_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(123, Arg7465_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7465_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7465_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lcurly>"];





Shen.fns["shen.<rcurly>"] = [Shen.type_func, function shen_user_lambda7468(Arg7467) {
  if (Arg7467.length < 1) return [Shen.type_func, shen_user_lambda7468, 1, Arg7467];
  var Arg7467_0 = Arg7467[0];
  var R0;
  return ((((Shen.is_type(Arg7467_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(125, Arg7467_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7467_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7467_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rcurly>"];





Shen.fns["shen.<bar>"] = [Shen.type_func, function shen_user_lambda7470(Arg7469) {
  if (Arg7469.length < 1) return [Shen.type_func, shen_user_lambda7470, 1, Arg7469];
  var Arg7469_0 = Arg7469[0];
  var R0;
  return ((((Shen.is_type(Arg7469_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(124, Arg7469_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7469_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7469_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<bar>"];





Shen.fns["shen.<semicolon>"] = [Shen.type_func, function shen_user_lambda7472(Arg7471) {
  if (Arg7471.length < 1) return [Shen.type_func, shen_user_lambda7472, 1, Arg7471];
  var Arg7471_0 = Arg7471[0];
  var R0;
  return ((((Shen.is_type(Arg7471_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(59, Arg7471_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7471_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7471_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon>"];





Shen.fns["shen.<colon>"] = [Shen.type_func, function shen_user_lambda7474(Arg7473) {
  if (Arg7473.length < 1) return [Shen.type_func, shen_user_lambda7474, 1, Arg7473];
  var Arg7473_0 = Arg7473[0];
  var R0;
  return ((((Shen.is_type(Arg7473_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(58, Arg7473_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7473_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7473_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<colon>"];





Shen.fns["shen.<comma>"] = [Shen.type_func, function shen_user_lambda7476(Arg7475) {
  if (Arg7475.length < 1) return [Shen.type_func, shen_user_lambda7476, 1, Arg7475];
  var Arg7475_0 = Arg7475[0];
  var R0;
  return ((((Shen.is_type(Arg7475_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(44, Arg7475_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7475_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7475_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma>"];





Shen.fns["shen.<equal>"] = [Shen.type_func, function shen_user_lambda7478(Arg7477) {
  if (Arg7477.length < 1) return [Shen.type_func, shen_user_lambda7478, 1, Arg7477];
  var Arg7477_0 = Arg7477[0];
  var R0;
  return ((((Shen.is_type(Arg7477_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(61, Arg7477_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7477_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7477_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<equal>"];





Shen.fns["shen.<minus>"] = [Shen.type_func, function shen_user_lambda7480(Arg7479) {
  if (Arg7479.length < 1) return [Shen.type_func, shen_user_lambda7480, 1, Arg7479];
  var Arg7479_0 = Arg7479[0];
  var R0;
  return ((((Shen.is_type(Arg7479_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(45, Arg7479_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7479_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7479_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<minus>"];





Shen.fns["shen.<lrb>"] = [Shen.type_func, function shen_user_lambda7482(Arg7481) {
  if (Arg7481.length < 1) return [Shen.type_func, shen_user_lambda7482, 1, Arg7481];
  var Arg7481_0 = Arg7481[0];
  var R0;
  return ((((Shen.is_type(Arg7481_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(40, Arg7481_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7481_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7481_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lrb>"];





Shen.fns["shen.<rrb>"] = [Shen.type_func, function shen_user_lambda7484(Arg7483) {
  if (Arg7483.length < 1) return [Shen.type_func, shen_user_lambda7484, 1, Arg7483];
  var Arg7483_0 = Arg7483[0];
  var R0;
  return ((((Shen.is_type(Arg7483_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(41, Arg7483_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7483_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7483_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rrb>"];





Shen.fns["shen.<atom>"] = [Shen.type_func, function shen_user_lambda7486(Arg7485) {
  if (Arg7485.length < 1) return [Shen.type_func, shen_user_lambda7486, 1, Arg7485];
  var Arg7485_0 = Arg7485[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<str>"], [Arg7485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.control-chars"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<number>"], [Arg7485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<sym>"], [Arg7485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["shen.hdtl"], [R0]), "<>")))
  ? [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]
  : Shen.intern(Shen.call(Shen.fns["shen.hdtl"], [R0])))]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<atom>"];





Shen.fns["shen.control-chars"] = [Shen.type_func, function shen_user_lambda7488(Arg7487) {
  if (Arg7487.length < 1) return [Shen.type_func, shen_user_lambda7488, 1, Arg7487];
  var Arg7487_0 = Arg7487[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg7487_0))
  ? ""
  : (((Shen.is_type(Arg7487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("c", Arg7487_0[1])) && (Shen.is_type(Arg7487_0[2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("#", Arg7487_0[2][1]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.code-point"], [Arg7487_0[2][2]])),
  (R1 = Shen.call(Shen.fns["shen.after-codepoint"], [Arg7487_0[2][2]])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(Shen.call(Shen.fns["shen.decimalise"], [R0])), Shen.call(Shen.fns["shen.control-chars"], [R1])]);}))
  : ((Shen.is_type(Arg7487_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Arg7487_0[1], Shen.call(Shen.fns["shen.control-chars"], [Arg7487_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.control-chars"]]);}))))}, 1, [], "shen.control-chars"];





Shen.fns["shen.code-point"] = [Shen.type_func, function shen_user_lambda7490(Arg7489) {
  if (Arg7489.length < 1) return [Shen.type_func, shen_user_lambda7490, 1, Arg7489];
  var Arg7489_0 = Arg7489[0];
  return (((Shen.is_type(Arg7489_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg7489_0[1]))))
  ? ""
  : (((Shen.is_type(Arg7489_0, Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg7489_0[1], [Shen.type_cons, "0", [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]])))
  ? [Shen.type_cons, Arg7489_0[1], Shen.call(Shen.fns["shen.code-point"], [Arg7489_0[2]])]
  : (function() {
  return Shen.simple_error(("code point parse error " + Shen.call(Shen.fns["shen.app"], [Arg7489_0, "\x0d\x0a", [Shen.type_symbol, "shen.a"]])));})))}, 1, [], "shen.code-point"];





Shen.fns["shen.after-codepoint"] = [Shen.type_func, function shen_user_lambda7492(Arg7491) {
  if (Arg7491.length < 1) return [Shen.type_func, shen_user_lambda7492, 1, Arg7491];
  var Arg7491_0 = Arg7491[0];
  return ((Shen.empty$question$(Arg7491_0))
  ? []
  : (((Shen.is_type(Arg7491_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg7491_0[1]))))
  ? Arg7491_0[2]
  : ((Shen.is_type(Arg7491_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.after-codepoint"], [Arg7491_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.after-codepoint"]]);}))))}, 1, [], "shen.after-codepoint"];





Shen.fns["shen.decimalise"] = [Shen.type_func, function shen_user_lambda7494(Arg7493) {
  if (Arg7493.length < 1) return [Shen.type_func, shen_user_lambda7494, 1, Arg7493];
  var Arg7493_0 = Arg7493[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.digits->integers"], [Arg7493_0])]), 0]);})}, 1, [], "shen.decimalise"];





Shen.fns["shen.digits->integers"] = [Shen.type_func, function shen_user_lambda7496(Arg7495) {
  if (Arg7495.length < 1) return [Shen.type_func, shen_user_lambda7496, 1, Arg7495];
  var Arg7495_0 = Arg7495[0];
  return (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("0", Arg7495_0[1]))))
  ? [Shen.type_cons, 0, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("1", Arg7495_0[1]))))
  ? [Shen.type_cons, 1, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("2", Arg7495_0[1]))))
  ? [Shen.type_cons, 2, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("3", Arg7495_0[1]))))
  ? [Shen.type_cons, 3, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("4", Arg7495_0[1]))))
  ? [Shen.type_cons, 4, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("5", Arg7495_0[1]))))
  ? [Shen.type_cons, 5, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("6", Arg7495_0[1]))))
  ? [Shen.type_cons, 6, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("7", Arg7495_0[1]))))
  ? [Shen.type_cons, 7, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("8", Arg7495_0[1]))))
  ? [Shen.type_cons, 8, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : (((Shen.is_type(Arg7495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("9", Arg7495_0[1]))))
  ? [Shen.type_cons, 9, Shen.call(Shen.fns["shen.digits->integers"], [Arg7495_0[2]])]
  : []))))))))))}, 1, [], "shen.digits->integers"];





Shen.fns["shen.<sym>"] = [Shen.type_func, function shen_user_lambda7498(Arg7497) {
  if (Arg7497.length < 1) return [Shen.type_func, shen_user_lambda7498, 1, Arg7497];
  var Arg7497_0 = Arg7497[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg7497_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sym>"];





Shen.fns["shen.<alphanums>"] = [Shen.type_func, function shen_user_lambda7500(Arg7499) {
  if (Arg7499.length < 1) return [Shen.type_func, shen_user_lambda7500, 1, Arg7499];
  var Arg7499_0 = Arg7499[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alphanum>"], [Arg7499_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7499_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ""]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanums>"];





Shen.fns["shen.<alphanum>"] = [Shen.type_func, function shen_user_lambda7502(Arg7501) {
  if (Arg7501.length < 1) return [Shen.type_func, shen_user_lambda7502, 1, Arg7501];
  var Arg7501_0 = Arg7501[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg7501_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<num>"], [Arg7501_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanum>"];





Shen.fns["shen.<num>"] = [Shen.type_func, function shen_user_lambda7504(Arg7503) {
  if (Arg7503.length < 1) return [Shen.type_func, shen_user_lambda7504, 1, Arg7503];
  var Arg7503_0 = Arg7503[0];
  var R0;
  return (((Shen.is_type(Arg7503_0[1], Shen.type_cons))
  ? ((R0 = Arg7503_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7503_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7503_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<num>"];





Shen.fns["shen.numbyte?"] = [Shen.type_func, function shen_user_lambda7506(Arg7505) {
  if (Arg7505.length < 1) return [Shen.type_func, shen_user_lambda7506, 1, Arg7505];
  var Arg7505_0 = Arg7505[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg7505_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg7505_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg7505_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg7505_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg7505_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg7505_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg7505_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg7505_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg7505_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg7505_0)))
  ? true
  : false))))))))))}, 1, [], "shen.numbyte?"];





Shen.fns["shen.<alpha>"] = [Shen.type_func, function shen_user_lambda7508(Arg7507) {
  if (Arg7507.length < 1) return [Shen.type_func, shen_user_lambda7508, 1, Arg7507];
  var Arg7507_0 = Arg7507[0];
  var R0;
  return (((Shen.is_type(Arg7507_0[1], Shen.type_cons))
  ? ((R0 = Arg7507_0[1][1]),
  ((Shen.call(Shen.fns["shen.symbol-code?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7507_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7507_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<alpha>"];





Shen.fns["shen.symbol-code?"] = [Shen.type_func, function shen_user_lambda7510(Arg7509) {
  if (Arg7509.length < 1) return [Shen.type_func, shen_user_lambda7510, 1, Arg7509];
  var Arg7509_0 = Arg7509[0];
  return (Shen.unwind_tail(Shen.$eq$(Arg7509_0, 126)) || (((Arg7509_0 > 94) && (Arg7509_0 < 123)) || (((Arg7509_0 > 59) && (Arg7509_0 < 91)) || (((Arg7509_0 > 41) && ((Arg7509_0 < 58) && (!Shen.unwind_tail(Shen.$eq$(Arg7509_0, 44))))) || (((Arg7509_0 > 34) && (Arg7509_0 < 40)) || Shen.unwind_tail(Shen.$eq$(Arg7509_0, 33)))))))}, 1, [], "shen.symbol-code?"];





Shen.fns["shen.<str>"] = [Shen.type_func, function shen_user_lambda7512(Arg7511) {
  if (Arg7511.length < 1) return [Shen.type_func, shen_user_lambda7512, 1, Arg7511];
  var Arg7511_0 = Arg7511[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<dbq>"], [Arg7511_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<dbq>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<str>"];





Shen.fns["shen.<dbq>"] = [Shen.type_func, function shen_user_lambda7514(Arg7513) {
  if (Arg7513.length < 1) return [Shen.type_func, shen_user_lambda7514, 1, Arg7513];
  var Arg7513_0 = Arg7513[0];
  var R0;
  return (((Shen.is_type(Arg7513_0[1], Shen.type_cons))
  ? ((R0 = Arg7513_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 34)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7513_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7513_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<dbq>"];





Shen.fns["shen.<strcontents>"] = [Shen.type_func, function shen_user_lambda7516(Arg7515) {
  if (Arg7515.length < 1) return [Shen.type_func, shen_user_lambda7516, 1, Arg7515];
  var Arg7515_0 = Arg7515[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<strc>"], [Arg7515_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7515_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<strcontents>"];





Shen.fns["shen.<byte>"] = [Shen.type_func, function shen_user_lambda7518(Arg7517) {
  if (Arg7517.length < 1) return [Shen.type_func, shen_user_lambda7518, 1, Arg7517];
  var Arg7517_0 = Arg7517[0];
  var R0;
  return (((Shen.is_type(Arg7517_0[1], Shen.type_cons))
  ? ((R0 = Arg7517_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7517_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7517_0])])[1], Shen.n_$gt$string(R0)])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<byte>"];





Shen.fns["shen.<strc>"] = [Shen.type_func, function shen_user_lambda7520(Arg7519) {
  if (Arg7519.length < 1) return [Shen.type_func, shen_user_lambda7520, 1, Arg7519];
  var Arg7519_0 = Arg7519[0];
  var R0;
  return (((Shen.is_type(Arg7519_0[1], Shen.type_cons))
  ? ((R0 = Arg7519_0[1][1]),
  (((!Shen.unwind_tail(Shen.$eq$(R0, 34))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7519_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7519_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<strc>"];





Shen.fns["shen.<number>"] = [Shen.type_func, function shen_user_lambda7522(Arg7521) {
  if (Arg7521.length < 1) return [Shen.type_func, shen_user_lambda7522, 1, Arg7521];
  var Arg7521_0 = Arg7521[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg7521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.hdtl"], [R0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<plus>"], [Arg7521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg7521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<E>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<log10>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R2])]) * (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1])))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg7521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<E>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<log10>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R1])]) * Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg7521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg7521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<number>"];





Shen.fns["shen.<E>"] = [Shen.type_func, function shen_user_lambda7524(Arg7523) {
  if (Arg7523.length < 1) return [Shen.type_func, shen_user_lambda7524, 1, Arg7523];
  var Arg7523_0 = Arg7523[0];
  var R0;
  return ((((Shen.is_type(Arg7523_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(101, Arg7523_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7523_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7523_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<E>"];





Shen.fns["shen.<log10>"] = [Shen.type_func, function shen_user_lambda7526(Arg7525) {
  if (Arg7525.length < 1) return [Shen.type_func, shen_user_lambda7526, 1, Arg7525];
  var Arg7525_0 = Arg7525[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg7525_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg7525_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<log10>"];





Shen.fns["shen.<plus>"] = [Shen.type_func, function shen_user_lambda7528(Arg7527) {
  if (Arg7527.length < 1) return [Shen.type_func, shen_user_lambda7528, 1, Arg7527];
  var Arg7527_0 = Arg7527[0];
  var R0;
  return (((Shen.is_type(Arg7527_0[1], Shen.type_cons))
  ? ((R0 = Arg7527_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 43)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7527_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7527_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<plus>"];





Shen.fns["shen.<stop>"] = [Shen.type_func, function shen_user_lambda7530(Arg7529) {
  if (Arg7529.length < 1) return [Shen.type_func, shen_user_lambda7530, 1, Arg7529];
  var Arg7529_0 = Arg7529[0];
  var R0;
  return (((Shen.is_type(Arg7529_0[1], Shen.type_cons))
  ? ((R0 = Arg7529_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 46)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7529_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7529_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<stop>"];





Shen.fns["shen.<predigits>"] = [Shen.type_func, function shen_user_lambda7532(Arg7531) {
  if (Arg7531.length < 1) return [Shen.type_func, shen_user_lambda7532, 1, Arg7531];
  var Arg7531_0 = Arg7531[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg7531_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7531_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<predigits>"];





Shen.fns["shen.<postdigits>"] = [Shen.type_func, function shen_user_lambda7534(Arg7533) {
  if (Arg7533.length < 1) return [Shen.type_func, shen_user_lambda7534, 1, Arg7533];
  var Arg7533_0 = Arg7533[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg7533_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<postdigits>"];





Shen.fns["shen.<digits>"] = [Shen.type_func, function shen_user_lambda7536(Arg7535) {
  if (Arg7535.length < 1) return [Shen.type_func, shen_user_lambda7536, 1, Arg7535];
  var Arg7535_0 = Arg7535[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg7535_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg7535_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<digits>"];





Shen.fns["shen.<digit>"] = [Shen.type_func, function shen_user_lambda7538(Arg7537) {
  if (Arg7537.length < 1) return [Shen.type_func, shen_user_lambda7538, 1, Arg7537];
  var Arg7537_0 = Arg7537[0];
  var R0;
  return (((Shen.is_type(Arg7537_0[1], Shen.type_cons))
  ? ((R0 = Arg7537_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7537_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7537_0])])[1], Shen.call(Shen.fns["shen.byte->digit"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<digit>"];





Shen.fns["shen.byte->digit"] = [Shen.type_func, function shen_user_lambda7540(Arg7539) {
  if (Arg7539.length < 1) return [Shen.type_func, shen_user_lambda7540, 1, Arg7539];
  var Arg7539_0 = Arg7539[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg7539_0)))
  ? 0
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg7539_0)))
  ? 1
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg7539_0)))
  ? 2
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg7539_0)))
  ? 3
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg7539_0)))
  ? 4
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg7539_0)))
  ? 5
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg7539_0)))
  ? 6
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg7539_0)))
  ? 7
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg7539_0)))
  ? 8
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg7539_0)))
  ? 9
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.byte->digit"]]);})))))))))))}, 1, [], "shen.byte->digit"];





Shen.fns["shen.pre"] = [Shen.type_func, function shen_user_lambda7542(Arg7541) {
  if (Arg7541.length < 2) return [Shen.type_func, shen_user_lambda7542, 2, Arg7541];
  var Arg7541_0 = Arg7541[0], Arg7541_1 = Arg7541[1];
  return ((Shen.empty$question$(Arg7541_0))
  ? 0
  : ((Shen.is_type(Arg7541_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, Arg7541_1]) * Arg7541_0[1]) + Shen.call(Shen.fns["shen.pre"], [Arg7541_0[2], (Arg7541_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.pre"]]);})))}, 2, [], "shen.pre"];





Shen.fns["shen.post"] = [Shen.type_func, function shen_user_lambda7544(Arg7543) {
  if (Arg7543.length < 2) return [Shen.type_func, shen_user_lambda7544, 2, Arg7543];
  var Arg7543_0 = Arg7543[0], Arg7543_1 = Arg7543[1];
  return ((Shen.empty$question$(Arg7543_0))
  ? 0
  : ((Shen.is_type(Arg7543_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, (0 - Arg7543_1)]) * Arg7543_0[1]) + Shen.call(Shen.fns["shen.post"], [Arg7543_0[2], (Arg7543_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.post"]]);})))}, 2, [], "shen.post"];





Shen.fns["shen.expt"] = [Shen.type_func, function shen_user_lambda7546(Arg7545) {
  if (Arg7545.length < 2) return [Shen.type_func, shen_user_lambda7546, 2, Arg7545];
  var Arg7545_0 = Arg7545[0], Arg7545_1 = Arg7545[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7545_1)))
  ? 1
  : (((Arg7545_1 > 0))
  ? (Arg7545_0 * Shen.call(Shen.fns["shen.expt"], [Arg7545_0, (Arg7545_1 - 1)]))
  : (1 * (Shen.call(Shen.fns["shen.expt"], [Arg7545_0, (Arg7545_1 + 1)]) / Arg7545_0))))}, 2, [], "shen.expt"];





Shen.fns["shen.<st_input1>"] = [Shen.type_func, function shen_user_lambda7548(Arg7547) {
  if (Arg7547.length < 1) return [Shen.type_func, shen_user_lambda7548, 1, Arg7547];
  var Arg7547_0 = Arg7547[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg7547_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input1>"];





Shen.fns["shen.<st_input2>"] = [Shen.type_func, function shen_user_lambda7550(Arg7549) {
  if (Arg7549.length < 1) return [Shen.type_func, shen_user_lambda7550, 1, Arg7549];
  var Arg7549_0 = Arg7549[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg7549_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input2>"];





Shen.fns["shen.<comment>"] = [Shen.type_func, function shen_user_lambda7552(Arg7551) {
  if (Arg7551.length < 1) return [Shen.type_func, shen_user_lambda7552, 1, Arg7551];
  var Arg7551_0 = Arg7551[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<singleline>"], [Arg7551_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<multiline>"], [Arg7551_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<comment>"];





Shen.fns["shen.<singleline>"] = [Shen.type_func, function shen_user_lambda7554(Arg7553) {
  if (Arg7553.length < 1) return [Shen.type_func, shen_user_lambda7554, 1, Arg7553];
  var Arg7553_0 = Arg7553[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg7553_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anysingle>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<return>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<singleline>"];





Shen.fns["shen.<backslash>"] = [Shen.type_func, function shen_user_lambda7556(Arg7555) {
  if (Arg7555.length < 1) return [Shen.type_func, shen_user_lambda7556, 1, Arg7555];
  var Arg7555_0 = Arg7555[0];
  var R0;
  return ((((Shen.is_type(Arg7555_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(92, Arg7555_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7555_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7555_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<backslash>"];





Shen.fns["shen.<anysingle>"] = [Shen.type_func, function shen_user_lambda7558(Arg7557) {
  if (Arg7557.length < 1) return [Shen.type_func, shen_user_lambda7558, 1, Arg7557];
  var Arg7557_0 = Arg7557[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<non-return>"], [Arg7557_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anysingle>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7557_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<anysingle>"];





Shen.fns["shen.<non-return>"] = [Shen.type_func, function shen_user_lambda7560(Arg7559) {
  if (Arg7559.length < 1) return [Shen.type_func, shen_user_lambda7560, 1, Arg7559];
  var Arg7559_0 = Arg7559[0];
  var R0;
  return (((Shen.is_type(Arg7559_0[1], Shen.type_cons))
  ? ((R0 = Arg7559_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, 10, [Shen.type_cons, 13, []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7559_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7559_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<non-return>"];





Shen.fns["shen.<return>"] = [Shen.type_func, function shen_user_lambda7562(Arg7561) {
  if (Arg7561.length < 1) return [Shen.type_func, shen_user_lambda7562, 1, Arg7561];
  var Arg7561_0 = Arg7561[0];
  var R0;
  return (((Shen.is_type(Arg7561_0[1], Shen.type_cons))
  ? ((R0 = Arg7561_0[1][1]),
  ((Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, 10, [Shen.type_cons, 13, []]]]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7561_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7561_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<return>"];





Shen.fns["shen.<multiline>"] = [Shen.type_func, function shen_user_lambda7564(Arg7563) {
  if (Arg7563.length < 1) return [Shen.type_func, shen_user_lambda7564, 1, Arg7563];
  var Arg7563_0 = Arg7563[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg7563_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anymulti>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<multiline>"];





Shen.fns["shen.<times>"] = [Shen.type_func, function shen_user_lambda7566(Arg7565) {
  if (Arg7565.length < 1) return [Shen.type_func, shen_user_lambda7566, 1, Arg7565];
  var Arg7565_0 = Arg7565[0];
  var R0;
  return ((((Shen.is_type(Arg7565_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(42, Arg7565_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7565_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7565_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<times>"];





Shen.fns["shen.<anymulti>"] = [Shen.type_func, function shen_user_lambda7568(Arg7567) {
  if (Arg7567.length < 1) return [Shen.type_func, shen_user_lambda7568, 1, Arg7567];
  var Arg7567_0 = Arg7567[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg7567_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anymulti>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<times>"], [Arg7567_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg7567_0[1], Shen.type_cons))
  ? (Arg7567_0[1][1],
  (R0 = Shen.call(Shen.fns["shen.<anymulti>"], [Shen.call(Shen.fns["shen.pair"], [Arg7567_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7567_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<anymulti>"];





Shen.fns["shen.<whitespaces>"] = [Shen.type_func, function shen_user_lambda7570(Arg7569) {
  if (Arg7569.length < 1) return [Shen.type_func, shen_user_lambda7570, 1, Arg7569];
  var Arg7569_0 = Arg7569[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg7569_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg7569_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<whitespaces>"];





Shen.fns["shen.<whitespace>"] = [Shen.type_func, function shen_user_lambda7572(Arg7571) {
  if (Arg7571.length < 1) return [Shen.type_func, shen_user_lambda7572, 1, Arg7571];
  var Arg7571_0 = Arg7571[0];
  var R0;
  return (((Shen.is_type(Arg7571_0[1], Shen.type_cons))
  ? ((R0 = Arg7571_0[1][1]),
  ((((R0 = R0),
  (Shen.unwind_tail(Shen.$eq$(R0, 32)) || (Shen.unwind_tail(Shen.$eq$(R0, 13)) || (Shen.unwind_tail(Shen.$eq$(R0, 10)) || Shen.unwind_tail(Shen.$eq$(R0, 9)))))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7571_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7571_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<whitespace>"];





Shen.fns["shen.cons_form"] = [Shen.type_func, function shen_user_lambda7574(Arg7573) {
  if (Arg7573.length < 1) return [Shen.type_func, shen_user_lambda7574, 1, Arg7573];
  var Arg7573_0 = Arg7573[0];
  return ((Shen.empty$question$(Arg7573_0))
  ? []
  : (((Shen.is_type(Arg7573_0, Shen.type_cons) && (Shen.is_type(Arg7573_0[2], Shen.type_cons) && (Shen.is_type(Arg7573_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7573_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg7573_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg7573_0[1], Arg7573_0[2][2]]]
  : ((Shen.is_type(Arg7573_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg7573_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg7573_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cons_form"]]);}))))}, 1, [], "shen.cons_form"];





Shen.fns["shen.package-macro"] = [Shen.type_func, function shen_user_lambda7576(Arg7575) {
  if (Arg7575.length < 2) return [Shen.type_func, shen_user_lambda7576, 2, Arg7575];
  var Arg7575_0 = Arg7575[0], Arg7575_1 = Arg7575[1];
  var R0, R1;
  return (((Shen.is_type(Arg7575_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "$"], Arg7575_0[1])) && (Shen.is_type(Arg7575_0[2], Shen.type_cons) && Shen.empty$question$(Arg7575_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["explode"], [Arg7575_0[2][1]]), Arg7575_1]);})
  : (((Shen.is_type(Arg7575_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7575_0[1])) && (Shen.is_type(Arg7575_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg7575_0[2][1])) && Shen.is_type(Arg7575_0[2][2], Shen.type_cons))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Arg7575_0[2][2][2], Arg7575_1]);})
  : (((Shen.is_type(Arg7575_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7575_0[1])) && (Shen.is_type(Arg7575_0[2], Shen.type_cons) && Shen.is_type(Arg7575_0[2][2], Shen.type_cons)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7575_0[2][2][1]])),
  Shen.call(Shen.fns["shen.record-exceptions"], [R0, Arg7575_0[2][1]]),
  (R1 = Shen.intern((Shen.str(Arg7575_0[2][1]) + "."))),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.packageh"], [R1, R0, Arg7575_0[2][2][2]]), Arg7575_1]);}))
  : [Shen.type_cons, Arg7575_0, Arg7575_1])))}, 2, [], "shen.package-macro"];





Shen.fns["shen.record-exceptions"] = [Shen.type_func, function shen_user_lambda7580(Arg7577) {
  if (Arg7577.length < 2) return [Shen.type_func, shen_user_lambda7580, 2, Arg7577];
  var Arg7577_0 = Arg7577[0], Arg7577_1 = Arg7577[1];
  var R0, R1;
  return (((R0 = [Shen.type_func, function shen_user_lambda7582(Arg7581) {
  if (Arg7581.length < 2) return [Shen.type_func, shen_user_lambda7582, 2, Arg7581];
  var Arg7581_0 = Arg7581[0], Arg7581_1 = Arg7581[1];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg7581_1, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);})}, 2, [Arg7577_0, Arg7577_1], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7584(Arg7583) {
  if (Arg7583.length < 1) return [Shen.type_func, shen_user_lambda7584, 1, Arg7583];
  var Arg7583_0 = Arg7583[0];
  return []}, 1, [], undefined]),
  (R0 = Shen.trap_error(R0, R1))),
  (R0 = Shen.call(Shen.fns["union"], [Arg7577_0, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg7577_1, [Shen.type_symbol, "shen.external-symbols"], R0, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-exceptions"];





Shen.fns["shen.packageh"] = [Shen.type_func, function shen_user_lambda7586(Arg7585) {
  if (Arg7585.length < 3) return [Shen.type_func, shen_user_lambda7586, 3, Arg7585];
  var Arg7585_0 = Arg7585[0], Arg7585_1 = Arg7585[1], Arg7585_2 = Arg7585[2];
  return ((Shen.is_type(Arg7585_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.packageh"], [Arg7585_0, Arg7585_1, Arg7585_2[1]]), Shen.call(Shen.fns["shen.packageh"], [Arg7585_0, Arg7585_1, Arg7585_2[2]])]
  : (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg7585_2]) || (Shen.call(Shen.fns["variable?"], [Arg7585_2]) || (Shen.call(Shen.fns["element?"], [Arg7585_2, Arg7585_1]) || (Shen.call(Shen.fns["shen.doubleunderline?"], [Arg7585_2]) || Shen.call(Shen.fns["shen.singleunderline?"], [Arg7585_2]))))))
  ? Arg7585_2
  : (((Shen.is_type(Arg7585_2, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.prefix?"], [[Shen.type_cons, "s", [Shen.type_cons, "h", [Shen.type_cons, "e", [Shen.type_cons, "n", [Shen.type_cons, ".", []]]]]], Shen.call(Shen.fns["explode"], [Arg7585_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg7585_0, Arg7585_2]);})
  : Arg7585_2)))}, 3, [], "shen.packageh"];










Shen.fns["shen.<defprolog>"] = [Shen.type_func, function shen_user_lambda7165(Arg7164) {
  if (Arg7164.length < 1) return [Shen.type_func, shen_user_lambda7165, 1, Arg7164];
  var Arg7164_0 = Arg7164[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<predicate*>"], [Arg7164_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.prolog->shen"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7167(Arg7166) {
  if (Arg7166.length < 2) return [Shen.type_func, shen_user_lambda7167, 2, Arg7166];
  var Arg7166_0 = Arg7166[0], Arg7166_1 = Arg7166[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-predicate"], [Shen.call(Shen.fns["shen.hdtl"], [Arg7166_0]), Arg7166_1]);})}, 2, [R0], undefined], Shen.call(Shen.fns["shen.hdtl"], [R1])])])[1]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<defprolog>"];





Shen.fns["shen.prolog-error"] = [Shen.type_func, function shen_user_lambda7169(Arg7168) {
  if (Arg7168.length < 2) return [Shen.type_func, shen_user_lambda7169, 2, Arg7168];
  var Arg7168_0 = Arg7168[0], Arg7168_1 = Arg7168[1];
  return (((Shen.is_type(Arg7168_1, Shen.type_cons) && (Shen.is_type(Arg7168_1[2], Shen.type_cons) && Shen.empty$question$(Arg7168_1[2][2]))))
  ? (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg7168_0, (" here:\x0d\x0a\x0d\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg7168_1[1]]), "\x0d\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg7168_0, "\x0d\x0a", [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.prolog-error"];





Shen.fns["shen.next-50"] = [Shen.type_func, function shen_user_lambda7171(Arg7170) {
  if (Arg7170.length < 2) return [Shen.type_func, shen_user_lambda7171, 2, Arg7170];
  var Arg7170_0 = Arg7170[0], Arg7170_1 = Arg7170[1];
  return ((Shen.empty$question$(Arg7170_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg7170_0)))
  ? ""
  : ((Shen.is_type(Arg7170_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.decons-string"], [Arg7170_1[1]]) + Shen.call(Shen.fns["shen.next-50"], [(Arg7170_0 - 1), Arg7170_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.next-50"]]);}))))}, 2, [], "shen.next-50"];





Shen.fns["shen.decons-string"] = [Shen.type_func, function shen_user_lambda7173(Arg7172) {
  if (Arg7172.length < 1) return [Shen.type_func, shen_user_lambda7173, 1, Arg7172];
  var Arg7172_0 = Arg7172[0];
  return (((Shen.is_type(Arg7172_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg7172_0[1])) && (Shen.is_type(Arg7172_0[2], Shen.type_cons) && (Shen.is_type(Arg7172_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7172_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-cons"], [Arg7172_0]), " ", [Shen.type_symbol, "shen.s"]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg7172_0, " ", [Shen.type_symbol, "shen.r"]]);}))}, 1, [], "shen.decons-string"];





Shen.fns["shen.insert-predicate"] = [Shen.type_func, function shen_user_lambda7175(Arg7174) {
  if (Arg7174.length < 2) return [Shen.type_func, shen_user_lambda7175, 2, Arg7174];
  var Arg7174_0 = Arg7174[0], Arg7174_1 = Arg7174[1];
  return (((Shen.is_type(Arg7174_1, Shen.type_cons) && (Shen.is_type(Arg7174_1[2], Shen.type_cons) && Shen.empty$question$(Arg7174_1[2][2]))))
  ? [Shen.type_cons, [Shen.type_cons, Arg7174_0, Arg7174_1[1]], [Shen.type_cons, [Shen.type_symbol, ":-"], Arg7174_1[2]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-predicate"]]);}))}, 2, [], "shen.insert-predicate"];





Shen.fns["shen.<predicate*>"] = [Shen.type_func, function shen_user_lambda7177(Arg7176) {
  if (Arg7176.length < 1) return [Shen.type_func, shen_user_lambda7177, 1, Arg7176];
  var Arg7176_0 = Arg7176[0];
  var R0;
  return (((Shen.is_type(Arg7176_0[1], Shen.type_cons))
  ? ((R0 = Arg7176_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7176_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7176_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<predicate*>"];





Shen.fns["shen.<clauses*>"] = [Shen.type_func, function shen_user_lambda7179(Arg7178) {
  if (Arg7178.length < 1) return [Shen.type_func, shen_user_lambda7179, 1, Arg7178];
  var Arg7178_0 = Arg7178[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<clause*>"], [Arg7178_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7178_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<clauses*>"];





Shen.fns["shen.<clause*>"] = [Shen.type_func, function shen_user_lambda7181(Arg7180) {
  if (Arg7180.length < 1) return [Shen.type_func, shen_user_lambda7181, 1, Arg7180];
  var Arg7180_0 = Arg7180[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<head*>"], [Arg7180_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<end*>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<clause*>"];





Shen.fns["shen.<head*>"] = [Shen.type_func, function shen_user_lambda7183(Arg7182) {
  if (Arg7182.length < 1) return [Shen.type_func, shen_user_lambda7183, 1, Arg7182];
  var Arg7182_0 = Arg7182[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<term*>"], [Arg7182_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<head*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7182_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<head*>"];





Shen.fns["shen.<term*>"] = [Shen.type_func, function shen_user_lambda7185(Arg7184) {
  if (Arg7184.length < 1) return [Shen.type_func, shen_user_lambda7185, 1, Arg7184];
  var Arg7184_0 = Arg7184[0];
  var R0;
  return (((Shen.is_type(Arg7184_0[1], Shen.type_cons))
  ? ((R0 = Arg7184_0[1][1]),
  ((((!Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0))) && Shen.call(Shen.fns["shen.legitimate-term?"], [R0])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7184_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7184_0])])[1], Shen.call(Shen.fns["shen.eval-cons"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<term*>"];





Shen.fns["shen.legitimate-term?"] = [Shen.type_func, function shen_user_lambda7187(Arg7186) {
  if (Arg7186.length < 1) return [Shen.type_func, shen_user_lambda7187, 1, Arg7186];
  var Arg7186_0 = Arg7186[0];
  return (((Shen.is_type(Arg7186_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg7186_0[1])) && (Shen.is_type(Arg7186_0[2], Shen.type_cons) && (Shen.is_type(Arg7186_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7186_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.legitimate-term?"], [Arg7186_0[2][1]]) && Shen.call(Shen.fns["shen.legitimate-term?"], [Arg7186_0[2][2][1]]))
  : (((Shen.is_type(Arg7186_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7186_0[1])) && (Shen.is_type(Arg7186_0[2], Shen.type_cons) && (Shen.is_type(Arg7186_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7186_0[2][2][1])) && Shen.empty$question$(Arg7186_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg7186_0[2][1]]);})
  : (((Shen.is_type(Arg7186_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7186_0[1])) && (Shen.is_type(Arg7186_0[2], Shen.type_cons) && (Shen.is_type(Arg7186_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7186_0[2][2][1])) && Shen.empty$question$(Arg7186_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg7186_0[2][1]]);})
  : ((Shen.is_type(Arg7186_0, Shen.type_cons))
  ? false
  : true))))}, 1, [], "shen.legitimate-term?"];





Shen.fns["shen.eval-cons"] = [Shen.type_func, function shen_user_lambda7189(Arg7188) {
  if (Arg7188.length < 1) return [Shen.type_func, shen_user_lambda7189, 1, Arg7188];
  var Arg7188_0 = Arg7188[0];
  return (((Shen.is_type(Arg7188_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg7188_0[1])) && (Shen.is_type(Arg7188_0[2], Shen.type_cons) && (Shen.is_type(Arg7188_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7188_0[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg7188_0[2][1]]), Shen.call(Shen.fns["shen.eval-cons"], [Arg7188_0[2][2][1]])]
  : (((Shen.is_type(Arg7188_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7188_0[1])) && (Shen.is_type(Arg7188_0[2], Shen.type_cons) && (Shen.is_type(Arg7188_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7188_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg7188_0[2][1]]), Arg7188_0[2][2]]]
  : Arg7188_0))}, 1, [], "shen.eval-cons"];





Shen.fns["shen.<body*>"] = [Shen.type_func, function shen_user_lambda7191(Arg7190) {
  if (Arg7190.length < 1) return [Shen.type_func, shen_user_lambda7191, 1, Arg7190];
  var Arg7190_0 = Arg7190[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<literal*>"], [Arg7190_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7190_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<body*>"];





Shen.fns["shen.<literal*>"] = [Shen.type_func, function shen_user_lambda7193(Arg7192) {
  if (Arg7192.length < 1) return [Shen.type_func, shen_user_lambda7193, 1, Arg7192];
  var Arg7192_0 = Arg7192[0];
  var R0;
  return ((((Shen.is_type(Arg7192_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg7192_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7192_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7192_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg7192_0[1], Shen.type_cons))
  ? ((R0 = Arg7192_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7192_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7192_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<literal*>"];





Shen.fns["shen.<end*>"] = [Shen.type_func, function shen_user_lambda7195(Arg7194) {
  if (Arg7194.length < 1) return [Shen.type_func, shen_user_lambda7195, 1, Arg7194];
  var Arg7194_0 = Arg7194[0];
  var R0;
  return (((Shen.is_type(Arg7194_0[1], Shen.type_cons))
  ? ((R0 = Arg7194_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg7194_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg7194_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<end*>"];





Shen.fns["cut"] = [Shen.type_func, function shen_user_lambda7197(Arg7196) {
  if (Arg7196.length < 3) return [Shen.type_func, shen_user_lambda7197, 3, Arg7196];
  var Arg7196_0 = Arg7196[0], Arg7196_1 = Arg7196[1], Arg7196_2 = Arg7196[2];
  var R0;
  return ((R0 = Shen.unwind_tail(Shen.thaw(Arg7196_2))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? Arg7196_0
  : R0))}, 3, [], "cut"];





Shen.fns["shen.insert_modes"] = [Shen.type_func, function shen_user_lambda7199(Arg7198) {
  if (Arg7198.length < 1) return [Shen.type_func, shen_user_lambda7199, 1, Arg7198];
  var Arg7198_0 = Arg7198[0];
  return (((Shen.is_type(Arg7198_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7198_0[1])) && (Shen.is_type(Arg7198_0[2], Shen.type_cons) && (Shen.is_type(Arg7198_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7198_0[2][2][2]))))))
  ? Arg7198_0
  : ((Shen.empty$question$(Arg7198_0))
  ? []
  : ((Shen.is_type(Arg7198_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg7198_0[1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_modes"], [Arg7198_0[2]]), [Shen.type_cons, [Shen.type_symbol, "-"], []]]]]
  : Arg7198_0)))}, 1, [], "shen.insert_modes"];





Shen.fns["shen.s-prolog"] = [Shen.type_func, function shen_user_lambda7201(Arg7200) {
  if (Arg7200.length < 1) return [Shen.type_func, shen_user_lambda7201, 1, Arg7200];
  var Arg7200_0 = Arg7200[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7203(Arg7202) {
  if (Arg7202.length < 1) return [Shen.type_func, shen_user_lambda7203, 1, Arg7202];
  var Arg7202_0 = Arg7202[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Arg7202_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.prolog->shen"], [Arg7200_0])]);})}, 1, [], "shen.s-prolog"];





Shen.fns["shen.prolog->shen"] = [Shen.type_func, function shen_user_lambda7205(Arg7204) {
  if (Arg7204.length < 1) return [Shen.type_func, shen_user_lambda7205, 1, Arg7204];
  var Arg7204_0 = Arg7204[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7207(Arg7206) {
  if (Arg7206.length < 1) return [Shen.type_func, shen_user_lambda7207, 1, Arg7206];
  var Arg7206_0 = Arg7206[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.compile_prolog_procedure"], [Arg7206_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.group_clauses"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7209(Arg7208) {
  if (Arg7208.length < 1) return [Shen.type_func, shen_user_lambda7209, 1, Arg7208];
  var Arg7208_0 = Arg7208[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog_clause"], [Arg7208_0]);})}, 1, [], undefined], Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda7211(Arg7210) {
  if (Arg7210.length < 1) return [Shen.type_func, shen_user_lambda7211, 1, Arg7210];
  var Arg7210_0 = Arg7210[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.head_abstraction"], [Arg7210_0]);})}, 1, [], undefined], Arg7204_0])])])]);})}, 1, [], "shen.prolog->shen"];





Shen.fns["shen.s-prolog_clause"] = [Shen.type_func, function shen_user_lambda7213(Arg7212) {
  if (Arg7212.length < 1) return [Shen.type_func, shen_user_lambda7213, 1, Arg7212];
  var Arg7212_0 = Arg7212[0];
  return (((Shen.is_type(Arg7212_0, Shen.type_cons) && (Shen.is_type(Arg7212_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg7212_0[2][1])) && (Shen.is_type(Arg7212_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7212_0[2][2][2]))))))
  ? [Shen.type_cons, Arg7212_0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7215(Arg7214) {
  if (Arg7214.length < 1) return [Shen.type_func, shen_user_lambda7215, 1, Arg7214];
  var Arg7214_0 = Arg7214[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog_literal"], [Arg7214_0]);})}, 1, [], undefined], Arg7212_0[2][2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_clause"]]);}))}, 1, [], "shen.s-prolog_clause"];





Shen.fns["shen.head_abstraction"] = [Shen.type_func, function shen_user_lambda7217(Arg7216) {
  if (Arg7216.length < 1) return [Shen.type_func, shen_user_lambda7217, 1, Arg7216];
  var Arg7216_0 = Arg7216[0];
  var R0, R1;
  return (((Shen.is_type(Arg7216_0, Shen.type_cons) && (Shen.is_type(Arg7216_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg7216_0[2][1])) && (Shen.is_type(Arg7216_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7216_0[2][2][2]) && (Shen.call(Shen.fns["shen.complexity_head"], [Arg7216_0[1]]) < (Shen.globals["shen.*maxcomplexity*"]))))))))
  ? [Shen.type_cons, Arg7216_0, []]
  : (((Shen.is_type(Arg7216_0, Shen.type_cons) && (Shen.is_type(Arg7216_0[1], Shen.type_cons) && (Shen.is_type(Arg7216_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg7216_0[2][1])) && (Shen.is_type(Arg7216_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7216_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7219(Arg7218) {
  if (Arg7218.length < 1) return [Shen.type_func, shen_user_lambda7219, 1, Arg7218];
  var Arg7218_0 = Arg7218[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]);})}, 1, [], undefined], Arg7216_0[1][2]])),
  (R1 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg7216_0[1][2]])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [R0]), [Shen.type_cons, R1, []]]]),
  (R1 = [Shen.type_cons, [Shen.type_cons, Arg7216_0[1][1], R0], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, R1, Arg7216_0[2][2][1]], []]]]),
  [Shen.type_cons, R1, []])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.head_abstraction"]]);})))}, 1, [], "shen.head_abstraction"];





Shen.fns["shen.complexity_head"] = [Shen.type_func, function shen_user_lambda7221(Arg7220) {
  if (Arg7220.length < 1) return [Shen.type_func, shen_user_lambda7221, 1, Arg7220];
  var Arg7220_0 = Arg7220[0];
  return ((Shen.is_type(Arg7220_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.product"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7223(Arg7222) {
  if (Arg7222.length < 1) return [Shen.type_func, shen_user_lambda7223, 1, Arg7222];
  var Arg7222_0 = Arg7222[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [Arg7222_0]);})}, 1, [], undefined], Arg7220_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.complexity_head"]]);}))}, 1, [], "shen.complexity_head"];





Shen.fns["shen.complexity"] = [Shen.type_func, function shen_user_lambda7225(Arg7224) {
  if (Arg7224.length < 1) return [Shen.type_func, shen_user_lambda7225, 1, Arg7224];
  var Arg7224_0 = Arg7224[0];
  return (((Shen.is_type(Arg7224_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7224_0[1])) && (Shen.is_type(Arg7224_0[2], Shen.type_cons) && (Shen.is_type(Arg7224_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7224_0[2][1][1])) && (Shen.is_type(Arg7224_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg7224_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7224_0[2][1][2][2][2]) && (Shen.is_type(Arg7224_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7224_0[2][2][2])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [Arg7224_0[2][1]]);})
  : (((Shen.is_type(Arg7224_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7224_0[1])) && (Shen.is_type(Arg7224_0[2], Shen.type_cons) && (Shen.is_type(Arg7224_0[2][1], Shen.type_cons) && (Shen.is_type(Arg7224_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7224_0[2][2][1])) && Shen.empty$question$(Arg7224_0[2][2][2]))))))))
  ? (2 * (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg7224_0[2][1][1], Arg7224_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg7224_0[2][1][2], Arg7224_0[2][2]]]])))
  : (((Shen.is_type(Arg7224_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7224_0[1])) && (Shen.is_type(Arg7224_0[2], Shen.type_cons) && (Shen.is_type(Arg7224_0[2][1], Shen.type_cons) && (Shen.is_type(Arg7224_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7224_0[2][2][1])) && Shen.empty$question$(Arg7224_0[2][2][2]))))))))
  ? (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg7224_0[2][1][1], Arg7224_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg7224_0[2][1][2], Arg7224_0[2][2]]]]))
  : (((Shen.is_type(Arg7224_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7224_0[1])) && (Shen.is_type(Arg7224_0[2], Shen.type_cons) && (Shen.is_type(Arg7224_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7224_0[2][2][2]) && Shen.call(Shen.fns["variable?"], [Arg7224_0[2][1]])))))))
  ? 1
  : (((Shen.is_type(Arg7224_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7224_0[1])) && (Shen.is_type(Arg7224_0[2], Shen.type_cons) && (Shen.is_type(Arg7224_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7224_0[2][2][1])) && Shen.empty$question$(Arg7224_0[2][2][2])))))))
  ? 2
  : (((Shen.is_type(Arg7224_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7224_0[1])) && (Shen.is_type(Arg7224_0[2], Shen.type_cons) && (Shen.is_type(Arg7224_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7224_0[2][2][1])) && Shen.empty$question$(Arg7224_0[2][2][2])))))))
  ? 1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg7224_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]]]);})))))))}, 1, [], "shen.complexity"];





Shen.fns["shen.product"] = [Shen.type_func, function shen_user_lambda7227(Arg7226) {
  if (Arg7226.length < 1) return [Shen.type_func, shen_user_lambda7227, 1, Arg7226];
  var Arg7226_0 = Arg7226[0];
  return ((Shen.empty$question$(Arg7226_0))
  ? 1
  : ((Shen.is_type(Arg7226_0, Shen.type_cons))
  ? (Arg7226_0[1] * Shen.call(Shen.fns["shen.product"], [Arg7226_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.product"]]);})))}, 1, [], "shen.product"];





Shen.fns["shen.s-prolog_literal"] = [Shen.type_func, function shen_user_lambda7229(Arg7228) {
  if (Arg7228.length < 1) return [Shen.type_func, shen_user_lambda7229, 1, Arg7228];
  var Arg7228_0 = Arg7228[0];
  return (((Shen.is_type(Arg7228_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg7228_0[1])) && (Shen.is_type(Arg7228_0[2], Shen.type_cons) && (Shen.is_type(Arg7228_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7228_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg7228_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg7228_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg7228_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "when"], Arg7228_0[1])) && (Shen.is_type(Arg7228_0[2], Shen.type_cons) && Shen.empty$question$(Arg7228_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg7228_0[2][1]]), []]]
  : (((Shen.is_type(Arg7228_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg7228_0[1])) && (Shen.is_type(Arg7228_0[2], Shen.type_cons) && (Shen.is_type(Arg7228_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7228_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg7228_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg7228_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg7228_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fwhen"], Arg7228_0[1])) && (Shen.is_type(Arg7228_0[2], Shen.type_cons) && Shen.empty$question$(Arg7228_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg7228_0[2][1]]), []]]
  : ((Shen.is_type(Arg7228_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Arg7228_0[1]]), Arg7228_0[2]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_literal"]]);}))))))}, 1, [], "shen.s-prolog_literal"];





Shen.fns["shen.insert_deref"] = [Shen.type_func, function shen_user_lambda7231(Arg7230) {
  if (Arg7230.length < 1) return [Shen.type_func, shen_user_lambda7231, 1, Arg7230];
  var Arg7230_0 = Arg7230[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg7230_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.deref"], [Shen.type_cons, Arg7230_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg7230_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg7230_0[1]]), Shen.call(Shen.fns["shen.insert_deref"], [Arg7230_0[2]])]
  : Arg7230_0))}, 1, [], "shen.insert_deref"];





Shen.fns["shen.insert_lazyderef"] = [Shen.type_func, function shen_user_lambda7233(Arg7232) {
  if (Arg7232.length < 1) return [Shen.type_func, shen_user_lambda7233, 1, Arg7232];
  var Arg7232_0 = Arg7232[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg7232_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Arg7232_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg7232_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg7232_0[1]]), Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg7232_0[2]])]
  : Arg7232_0))}, 1, [], "shen.insert_lazyderef"];





Shen.fns["shen.m_prolog_to_s-prolog_predicate"] = [Shen.type_func, function shen_user_lambda7235(Arg7234) {
  if (Arg7234.length < 1) return [Shen.type_func, shen_user_lambda7235, 1, Arg7234];
  var Arg7234_0 = Arg7234[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg7234_0)))
  ? [Shen.type_symbol, "unify"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=!"], Arg7234_0)))
  ? [Shen.type_symbol, "unify!"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=="], Arg7234_0)))
  ? [Shen.type_symbol, "identical"]
  : Arg7234_0)))}, 1, [], "shen.m_prolog_to_s-prolog_predicate"];





Shen.fns["shen.group_clauses"] = [Shen.type_func, function shen_user_lambda7237(Arg7236) {
  if (Arg7236.length < 1) return [Shen.type_func, shen_user_lambda7237, 1, Arg7236];
  var Arg7236_0 = Arg7236[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg7236_0))
  ? []
  : ((Shen.is_type(Arg7236_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.collect"], [[Shen.type_func, function shen_user_lambda7239(Arg7238) {
  if (Arg7238.length < 2) return [Shen.type_func, shen_user_lambda7239, 2, Arg7238];
  var Arg7238_0 = Arg7238[0], Arg7238_1 = Arg7238[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.same_predicate?"], [Arg7238_0[1], Arg7238_1]);})}, 2, [Arg7236_0], undefined], Arg7236_0])),
  (R1 = Shen.call(Shen.fns["difference"], [Arg7236_0, R0])),
  [Shen.type_cons, R0, Shen.call(Shen.fns["shen.group_clauses"], [R1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.group_clauses"]]);})))}, 1, [], "shen.group_clauses"];





Shen.fns["shen.collect"] = [Shen.type_func, function shen_user_lambda7241(Arg7240) {
  if (Arg7240.length < 2) return [Shen.type_func, shen_user_lambda7241, 2, Arg7240];
  var Arg7240_0 = Arg7240[0], Arg7240_1 = Arg7240[1];
  return ((Shen.empty$question$(Arg7240_1))
  ? []
  : ((Shen.is_type(Arg7240_1, Shen.type_cons))
  ? ((Shen.call(Arg7240_0, [Arg7240_1[1]]))
  ? [Shen.type_cons, Arg7240_1[1], Shen.call(Shen.fns["shen.collect"], [Arg7240_0, Arg7240_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.collect"], [Arg7240_0, Arg7240_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.collect"]]);})))}, 2, [], "shen.collect"];





Shen.fns["shen.same_predicate?"] = [Shen.type_func, function shen_user_lambda7243(Arg7242) {
  if (Arg7242.length < 2) return [Shen.type_func, shen_user_lambda7243, 2, Arg7242];
  var Arg7242_0 = Arg7242[0], Arg7242_1 = Arg7242[1];
  return (((Shen.is_type(Arg7242_0, Shen.type_cons) && (Shen.is_type(Arg7242_0[1], Shen.type_cons) && (Shen.is_type(Arg7242_1, Shen.type_cons) && Shen.is_type(Arg7242_1[1], Shen.type_cons)))))
  ? Shen.$eq$(Arg7242_0[1][1], Arg7242_1[1][1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.same_predicate?"]]);}))}, 2, [], "shen.same_predicate?"];





Shen.fns["shen.compile_prolog_procedure"] = [Shen.type_func, function shen_user_lambda7245(Arg7244) {
  if (Arg7244.length < 1) return [Shen.type_func, shen_user_lambda7245, 1, Arg7244];
  var Arg7244_0 = Arg7244[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.procedure_name"], [Arg7244_0])),
  (R0 = Shen.call(Shen.fns["shen.clauses-to-shen"], [R0, Arg7244_0])),
  R0)}, 1, [], "shen.compile_prolog_procedure"];





Shen.fns["shen.procedure_name"] = [Shen.type_func, function shen_user_lambda7247(Arg7246) {
  if (Arg7246.length < 1) return [Shen.type_func, shen_user_lambda7247, 1, Arg7246];
  var Arg7246_0 = Arg7246[0];
  return (((Shen.is_type(Arg7246_0, Shen.type_cons) && (Shen.is_type(Arg7246_0[1], Shen.type_cons) && Shen.is_type(Arg7246_0[1][1], Shen.type_cons))))
  ? Arg7246_0[1][1][1]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.procedure_name"]]);}))}, 1, [], "shen.procedure_name"];





Shen.fns["shen.clauses-to-shen"] = [Shen.type_func, function shen_user_lambda7249(Arg7248) {
  if (Arg7248.length < 2) return [Shen.type_func, shen_user_lambda7249, 2, Arg7248];
  var Arg7248_0 = Arg7248[0], Arg7248_1 = Arg7248[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7251(Arg7250) {
  if (Arg7250.length < 1) return [Shen.type_func, shen_user_lambda7251, 1, Arg7250];
  var Arg7250_0 = Arg7250[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.linearise-clause"], [Arg7250_0]);})}, 1, [], undefined], Arg7248_1])),
  (R1 = Shen.call(Shen.fns["shen.prolog-aritycheck"], [Arg7248_0, Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7253(Arg7252) {
  if (Arg7252.length < 1) return [Shen.type_func, shen_user_lambda7253, 1, Arg7252];
  var Arg7252_0 = Arg7252[0];
  return (function() {
  return Shen.call_tail(Shen.fns["head"], [Arg7252_0]);})}, 1, [], undefined], Arg7248_1])])),
  (R1 = Shen.call(Shen.fns["shen.parameters"], [R1])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7255(Arg7254) {
  if (Arg7254.length < 2) return [Shen.type_func, shen_user_lambda7255, 2, Arg7254];
  var Arg7254_0 = Arg7254[0], Arg7254_1 = Arg7254[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aum"], [Arg7254_1, Arg7254_0]);})}, 2, [R1], undefined], R0])),
  (R0 = Shen.call(Shen.fns["shen.catch-cut"], [Shen.call(Shen.fns["shen.nest-disjunct"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7257(Arg7256) {
  if (Arg7256.length < 1) return [Shen.type_func, shen_user_lambda7257, 1, Arg7256];
  var Arg7256_0 = Arg7256[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aum_to_shen"], [Arg7256_0]);})}, 1, [], undefined], R0])])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7248_0, Shen.call(Shen.fns["append"], [R1, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  R1)}, 2, [], "shen.clauses-to-shen"];





Shen.fns["shen.catch-cut"] = [Shen.type_func, function shen_user_lambda7259(Arg7258) {
  if (Arg7258.length < 1) return [Shen.type_func, shen_user_lambda7259, 1, Arg7258];
  var Arg7258_0 = Arg7258[0];
  return (((!Shen.call(Shen.fns["shen.occurs?"], [[Shen.type_symbol, "cut"], Arg7258_0])))
  ? Arg7258_0
  : [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.catchpoint"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.cutpoint"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, Arg7258_0, []]]], []]]]])}, 1, [], "shen.catch-cut"];





Shen.fns["shen.catchpoint"] = [Shen.type_func, function shen_user_lambda7261(Arg7260) {
  if (Arg7260.length < 0) return [Shen.type_func, shen_user_lambda7261, 0, Arg7260];
  return (Shen.globals["shen.*catch*"] = (1 + (Shen.globals["shen.*catch*"])))}, 0, [], "shen.catchpoint"];





Shen.fns["shen.cutpoint"] = [Shen.type_func, function shen_user_lambda7263(Arg7262) {
  if (Arg7262.length < 2) return [Shen.type_func, shen_user_lambda7263, 2, Arg7262];
  var Arg7262_0 = Arg7262[0], Arg7262_1 = Arg7262[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7262_1, Arg7262_0)))
  ? false
  : Arg7262_1)}, 2, [], "shen.cutpoint"];





Shen.fns["shen.nest-disjunct"] = [Shen.type_func, function shen_user_lambda7265(Arg7264) {
  if (Arg7264.length < 1) return [Shen.type_func, shen_user_lambda7265, 1, Arg7264];
  var Arg7264_0 = Arg7264[0];
  return (((Shen.is_type(Arg7264_0, Shen.type_cons) && Shen.empty$question$(Arg7264_0[2])))
  ? Arg7264_0[1]
  : ((Shen.is_type(Arg7264_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lisp-or"], [Arg7264_0[1], Shen.call(Shen.fns["shen.nest-disjunct"], [Arg7264_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.nest-disjunct"]]);})))}, 1, [], "shen.nest-disjunct"];





Shen.fns["shen.lisp-or"] = [Shen.type_func, function shen_user_lambda7267(Arg7266) {
  if (Arg7266.length < 2) return [Shen.type_func, shen_user_lambda7267, 2, Arg7266];
  var Arg7266_0 = Arg7266[0], Arg7266_1 = Arg7266[1];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, Arg7266_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, false, []]]], [Shen.type_cons, Arg7266_1, [Shen.type_cons, [Shen.type_symbol, "Case"], []]]]], []]]]]}, 2, [], "shen.lisp-or"];





Shen.fns["shen.prolog-aritycheck"] = [Shen.type_func, function shen_user_lambda7269(Arg7268) {
  if (Arg7268.length < 2) return [Shen.type_func, shen_user_lambda7269, 2, Arg7268];
  var Arg7268_0 = Arg7268[0], Arg7268_1 = Arg7268[1];
  return (((Shen.is_type(Arg7268_1, Shen.type_cons) && Shen.empty$question$(Arg7268_1[2])))
  ? (Shen.call(Shen.fns["length"], [Arg7268_1[1]]) - 1)
  : (((Shen.is_type(Arg7268_1, Shen.type_cons) && Shen.is_type(Arg7268_1[2], Shen.type_cons)))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg7268_1[1]]), Shen.call(Shen.fns["length"], [Arg7268_1[2][1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-aritycheck"], [Arg7268_0, Arg7268_1[2]]);})
  : (function() {
  return Shen.simple_error(("arity error in prolog procedure " + Shen.call(Shen.fns["shen.app"], [[Shen.type_cons, Arg7268_0, []], "\x0d\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.prolog-aritycheck"]]);})))}, 2, [], "shen.prolog-aritycheck"];





Shen.fns["shen.linearise-clause"] = [Shen.type_func, function shen_user_lambda7271(Arg7270) {
  if (Arg7270.length < 1) return [Shen.type_func, shen_user_lambda7271, 1, Arg7270];
  var Arg7270_0 = Arg7270[0];
  var R0;
  return (((Shen.is_type(Arg7270_0, Shen.type_cons) && (Shen.is_type(Arg7270_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg7270_0[2][1])) && (Shen.is_type(Arg7270_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7270_0[2][2][2]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise"], [[Shen.type_cons, Arg7270_0[1], Arg7270_0[2][2]]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.clause_form"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise-clause"]]);}))}, 1, [], "shen.linearise-clause"];





Shen.fns["shen.clause_form"] = [Shen.type_func, function shen_user_lambda7273(Arg7272) {
  if (Arg7272.length < 1) return [Shen.type_func, shen_user_lambda7273, 1, Arg7272];
  var Arg7272_0 = Arg7272[0];
  return (((Shen.is_type(Arg7272_0, Shen.type_cons) && (Shen.is_type(Arg7272_0[2], Shen.type_cons) && Shen.empty$question$(Arg7272_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.explicit_modes"], [Arg7272_0[1]]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.cf_help"], [Arg7272_0[2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.clause_form"]]);}))}, 1, [], "shen.clause_form"];





Shen.fns["shen.explicit_modes"] = [Shen.type_func, function shen_user_lambda7275(Arg7274) {
  if (Arg7274.length < 1) return [Shen.type_func, shen_user_lambda7275, 1, Arg7274];
  var Arg7274_0 = Arg7274[0];
  return ((Shen.is_type(Arg7274_0, Shen.type_cons))
  ? [Shen.type_cons, Arg7274_0[1], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7277(Arg7276) {
  if (Arg7276.length < 1) return [Shen.type_func, shen_user_lambda7277, 1, Arg7276];
  var Arg7276_0 = Arg7276[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.em_help"], [Arg7276_0]);})}, 1, [], undefined], Arg7274_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explicit_modes"]]);}))}, 1, [], "shen.explicit_modes"];





Shen.fns["shen.em_help"] = [Shen.type_func, function shen_user_lambda7279(Arg7278) {
  if (Arg7278.length < 1) return [Shen.type_func, shen_user_lambda7279, 1, Arg7278];
  var Arg7278_0 = Arg7278[0];
  return (((Shen.is_type(Arg7278_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7278_0[1])) && (Shen.is_type(Arg7278_0[2], Shen.type_cons) && (Shen.is_type(Arg7278_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7278_0[2][2][2]))))))
  ? Arg7278_0
  : [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg7278_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]])}, 1, [], "shen.em_help"];





Shen.fns["shen.cf_help"] = [Shen.type_func, function shen_user_lambda7281(Arg7280) {
  if (Arg7280.length < 1) return [Shen.type_func, shen_user_lambda7281, 1, Arg7280];
  var Arg7280_0 = Arg7280[0];
  return (((Shen.is_type(Arg7280_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg7280_0[1])) && (Shen.is_type(Arg7280_0[2], Shen.type_cons) && (Shen.is_type(Arg7280_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg7280_0[2][1][1])) && (Shen.is_type(Arg7280_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg7280_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7280_0[2][1][2][2][2]) && (Shen.is_type(Arg7280_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7280_0[2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, (((Shen.globals["shen.*occurs*"]))
  ? [Shen.type_symbol, "unify!"]
  : [Shen.type_symbol, "unify"]), Arg7280_0[2][1][2]], Shen.call(Shen.fns["shen.cf_help"], [Arg7280_0[2][2][1]])]
  : Arg7280_0)}, 1, [], "shen.cf_help"];





Shen.fns["occurs-check"] = [Shen.type_func, function shen_user_lambda7283(Arg7282) {
  if (Arg7282.length < 1) return [Shen.type_func, shen_user_lambda7283, 1, Arg7282];
  var Arg7282_0 = Arg7282[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7282_0)))
  ? (Shen.globals["shen.*occurs*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7282_0)))
  ? (Shen.globals["shen.*occurs*"] = false)
  : (function() {
  return Shen.simple_error("occurs-check expects + or -\x0d\x0a");})))}, 1, [], "occurs-check"];





Shen.fns["shen.aum"] = [Shen.type_func, function shen_user_lambda7285(Arg7284) {
  if (Arg7284.length < 2) return [Shen.type_func, shen_user_lambda7285, 2, Arg7284];
  var Arg7284_0 = Arg7284[0], Arg7284_1 = Arg7284[1];
  var R0;
  return (((Shen.is_type(Arg7284_0, Shen.type_cons) && (Shen.is_type(Arg7284_0[1], Shen.type_cons) && (Shen.is_type(Arg7284_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg7284_0[2][1])) && (Shen.is_type(Arg7284_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7284_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg7284_0[1][2], [Shen.type_cons, Shen.call(Shen.fns["shen.continuation_call"], [Arg7284_0[1][2], Arg7284_0[2][2][1]]), []]]], Arg7284_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [R0, [Shen.type_symbol, "+"]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aum"]]);}))}, 2, [], "shen.aum"];





Shen.fns["shen.continuation_call"] = [Shen.type_func, function shen_user_lambda7287(Arg7286) {
  if (Arg7286.length < 2) return [Shen.type_func, shen_user_lambda7287, 2, Arg7286];
  var Arg7286_0 = Arg7286[0], Arg7286_1 = Arg7286[1];
  var R0, R1;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "ProcessN"], Shen.call(Shen.fns["shen.extract_vars"], [Arg7286_0])]),
  (R1 = Shen.call(Shen.fns["shen.extract_vars"], [Arg7286_1])),
  (R1 = Shen.call(Shen.fns["remove"], [[Shen.type_symbol, "Throwcontrol"], Shen.call(Shen.fns["difference"], [R1, R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cc_help"], [R1, Arg7286_1]);}))}, 2, [], "shen.continuation_call"];





Shen.fns["remove"] = [Shen.type_func, function shen_user_lambda7289(Arg7288) {
  if (Arg7288.length < 2) return [Shen.type_func, shen_user_lambda7289, 2, Arg7288];
  var Arg7288_0 = Arg7288[0], Arg7288_1 = Arg7288[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg7288_0, Arg7288_1, []]);})}, 2, [], "remove"];





Shen.fns["shen.remove-h"] = [Shen.type_func, function shen_user_lambda7291(Arg7290) {
  if (Arg7290.length < 3) return [Shen.type_func, shen_user_lambda7291, 3, Arg7290];
  var Arg7290_0 = Arg7290[0], Arg7290_1 = Arg7290[1], Arg7290_2 = Arg7290[2];
  return ((Shen.empty$question$(Arg7290_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg7290_2]);})
  : (((Shen.is_type(Arg7290_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7290_1[1], Arg7290_0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg7290_1[1], Arg7290_1[2], Arg7290_2]);})
  : ((Shen.is_type(Arg7290_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg7290_0, Arg7290_1[2], [Shen.type_cons, Arg7290_1[1], Arg7290_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remove-h"]]);}))))}, 3, [], "shen.remove-h"];





Shen.fns["shen.cc_help"] = [Shen.type_func, function shen_user_lambda7293(Arg7292) {
  if (Arg7292.length < 2) return [Shen.type_func, shen_user_lambda7293, 2, Arg7292];
  var Arg7292_0 = Arg7292[0], Arg7292_1 = Arg7292[1];
  return (((Shen.empty$question$(Arg7292_0) && Shen.empty$question$(Arg7292_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]]
  : ((Shen.empty$question$(Arg7292_1))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg7292_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]], []]]]]]]]]
  : ((Shen.empty$question$(Arg7292_0))
  ? [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg7292_1, []]]]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg7292_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg7292_1, []]]]], []]]]]]]]])))}, 2, [], "shen.cc_help"];





Shen.fns["shen.make_mu_application"] = [Shen.type_func, function shen_user_lambda7295(Arg7294) {
  if (Arg7294.length < 2) return [Shen.type_func, shen_user_lambda7295, 2, Arg7294];
  var Arg7294_0 = Arg7294[0], Arg7294_1 = Arg7294[1];
  return (((Shen.is_type(Arg7294_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7294_0[1])) && (Shen.is_type(Arg7294_0[2], Shen.type_cons) && (Shen.empty$question$(Arg7294_0[2][1]) && (Shen.is_type(Arg7294_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7294_0[2][2][2]) && Shen.empty$question$(Arg7294_1))))))))
  ? Arg7294_0[2][2][1]
  : (((Shen.is_type(Arg7294_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7294_0[1])) && (Shen.is_type(Arg7294_0[2], Shen.type_cons) && (Shen.is_type(Arg7294_0[2][1], Shen.type_cons) && (Shen.is_type(Arg7294_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7294_0[2][2][2]) && Shen.is_type(Arg7294_1, Shen.type_cons))))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg7294_0[2][1][1], [Shen.type_cons, Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg7294_0[2][1][2], Arg7294_0[2][2]]], Arg7294_1[2]]), []]]], [Shen.type_cons, Arg7294_1[1], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.make_mu_application"]]);})))}, 2, [], "shen.make_mu_application"];





Shen.fns["shen.mu_reduction"] = [Shen.type_func, function shen_user_lambda7297(Arg7296) {
  if (Arg7296.length < 2) return [Shen.type_func, shen_user_lambda7297, 2, Arg7296];
  var Arg7296_0 = Arg7296[0], Arg7296_1 = Arg7296[1];
  var R0;
  return (((Shen.is_type(Arg7296_0, Shen.type_cons) && (Shen.is_type(Arg7296_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7296_0[1][1])) && (Shen.is_type(Arg7296_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7296_0[1][2][1][1])) && (Shen.is_type(Arg7296_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[1][2][1][2][2][2]) && (Shen.is_type(Arg7296_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[1][2][2][2]) && (Shen.is_type(Arg7296_0[2], Shen.type_cons) && Shen.empty$question$(Arg7296_0[2][2]))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg7296_0[1][2][1][2][1], Arg7296_0[1][2][2]]], Arg7296_0[2]], Arg7296_0[1][2][1][2][2][1]]);})
  : (((Shen.is_type(Arg7296_0, Shen.type_cons) && (Shen.is_type(Arg7296_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7296_0[1][1])) && (Shen.is_type(Arg7296_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[1][2][2][2]) && (Shen.is_type(Arg7296_0[2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "_"], Arg7296_0[1][2][1])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [Arg7296_0[1][2][2][1], Arg7296_1]);})
  : (((Shen.is_type(Arg7296_0, Shen.type_cons) && (Shen.is_type(Arg7296_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7296_0[1][1])) && (Shen.is_type(Arg7296_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[1][2][2][2]) && (Shen.is_type(Arg7296_0[2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[2][2]) && Shen.call(Shen.fns["shen.ephemeral_variable?"], [Arg7296_0[1][2][1], Arg7296_0[2][1]]))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["subst"], [Arg7296_0[2][1], Arg7296_0[1][2][1], Shen.call(Shen.fns["shen.mu_reduction"], [Arg7296_0[1][2][2][1], Arg7296_1])]);})
  : (((Shen.is_type(Arg7296_0, Shen.type_cons) && (Shen.is_type(Arg7296_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7296_0[1][1])) && (Shen.is_type(Arg7296_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[1][2][2][2]) && (Shen.is_type(Arg7296_0[2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[2][2]) && Shen.call(Shen.fns["variable?"], [Arg7296_0[1][2][1]]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg7296_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, Arg7296_0[2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg7296_0[1][2][2][1], Arg7296_1]), []]]]]]]
  : (((Shen.is_type(Arg7296_0, Shen.type_cons) && (Shen.is_type(Arg7296_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7296_0[1][1])) && (Shen.is_type(Arg7296_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[1][2][2][2]) && (Shen.is_type(Arg7296_0[2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7296_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg7296_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg7296_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg7296_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg7296_0[1][2][2][1], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg7296_0, Shen.type_cons) && (Shen.is_type(Arg7296_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7296_0[1][1])) && (Shen.is_type(Arg7296_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[1][2][2][2]) && (Shen.is_type(Arg7296_0[2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7296_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg7296_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg7296_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg7296_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg7296_0[1][2][2][1], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg7296_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg7296_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg7296_0, Shen.type_cons) && (Shen.is_type(Arg7296_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7296_0[1][1])) && (Shen.is_type(Arg7296_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[1][2][2][2]) && (Shen.is_type(Arg7296_0[2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7296_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg7296_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg7296_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg7296_0[1][2][1][2], Arg7296_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg7296_0, Shen.type_cons) && (Shen.is_type(Arg7296_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg7296_0[1][1])) && (Shen.is_type(Arg7296_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg7296_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[1][2][2][2]) && (Shen.is_type(Arg7296_0[2], Shen.type_cons) && (Shen.empty$question$(Arg7296_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7296_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg7296_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg7296_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg7296_0[1][2][1][2], Arg7296_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.extract_vars"], [Arg7296_0[1][2][1]]), [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg7296_0[1][2][1]])]), [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg7296_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], []]]]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : Arg7296_0))))))))}, 2, [], "shen.mu_reduction"];





Shen.fns["shen.rcons_form"] = [Shen.type_func, function shen_user_lambda7299(Arg7298) {
  if (Arg7298.length < 1) return [Shen.type_func, shen_user_lambda7299, 1, Arg7298];
  var Arg7298_0 = Arg7298[0];
  return ((Shen.is_type(Arg7298_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7298_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7298_0[2]]), []]]]
  : Arg7298_0)}, 1, [], "shen.rcons_form"];





Shen.fns["shen.remove_modes"] = [Shen.type_func, function shen_user_lambda7301(Arg7300) {
  if (Arg7300.length < 1) return [Shen.type_func, shen_user_lambda7301, 1, Arg7300];
  var Arg7300_0 = Arg7300[0];
  return (((Shen.is_type(Arg7300_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7300_0[1])) && (Shen.is_type(Arg7300_0[2], Shen.type_cons) && (Shen.is_type(Arg7300_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7300_0[2][2][1])) && Shen.empty$question$(Arg7300_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg7300_0[2][1]]);})
  : (((Shen.is_type(Arg7300_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg7300_0[1])) && (Shen.is_type(Arg7300_0[2], Shen.type_cons) && (Shen.is_type(Arg7300_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7300_0[2][2][1])) && Shen.empty$question$(Arg7300_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg7300_0[2][1]]);})
  : ((Shen.is_type(Arg7300_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove_modes"], [Arg7300_0[1]]), Shen.call(Shen.fns["shen.remove_modes"], [Arg7300_0[2]])]
  : Arg7300_0)))}, 1, [], "shen.remove_modes"];





Shen.fns["shen.ephemeral_variable?"] = [Shen.type_func, function shen_user_lambda7303(Arg7302) {
  if (Arg7302.length < 2) return [Shen.type_func, shen_user_lambda7303, 2, Arg7302];
  var Arg7302_0 = Arg7302[0], Arg7302_1 = Arg7302[1];
  return (Shen.call(Shen.fns["variable?"], [Arg7302_0]) && Shen.call(Shen.fns["variable?"], [Arg7302_1]))}, 2, [], "shen.ephemeral_variable?"];





Shen.fns["shen.prolog_constant?"] = [Shen.type_func, function shen_user_lambda7305(Arg7304) {
  if (Arg7304.length < 1) return [Shen.type_func, shen_user_lambda7305, 1, Arg7304];
  var Arg7304_0 = Arg7304[0];
  return ((Shen.is_type(Arg7304_0, Shen.type_cons))
  ? false
  : true)}, 1, [], "shen.prolog_constant?"];





Shen.fns["shen.aum_to_shen"] = [Shen.type_func, function shen_user_lambda7307(Arg7306) {
  if (Arg7306.length < 1) return [Shen.type_func, shen_user_lambda7307, 1, Arg7306];
  var Arg7306_0 = Arg7306[0];
  return (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.be"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg7306_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg7306_0[2][2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg7306_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg7306_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg7306_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.result"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.dereferencing"], Arg7306_0[2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg7306_0[2][2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg7306_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.else"], Arg7306_0[2][2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg7306_0[2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg7306_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg7306_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variable"], Arg7306_0[2][2][2][1])) && Shen.empty$question$(Arg7306_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pvar?"], [Shen.type_cons, Arg7306_0[1], []]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.non-empty"], Arg7306_0[2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg7306_0[2][2][2][2][1])) && Shen.empty$question$(Arg7306_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, Arg7306_0[1], []]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg7306_0[2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7306_0[2][2][2][2][1]) && (Shen.is_type(Arg7306_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg7306_0[2][2][2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg7306_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.aum_to_shen"], [Arg7306_0[2][2][2][2][2][2][2][1]]);})
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg7306_0[2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg7306_0[2][2][2][2][1], Shen.type_cons) && (Shen.is_type(Arg7306_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg7306_0[2][2][2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg7306_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg7306_0[2][2][2][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [[Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg7306_0[2][2][2][2][1][2], Arg7306_0[2][2][2][2][2]]]]]]]), []]]]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg7306_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg7306_0[2][2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.bindv"], [Shen.type_cons, Arg7306_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.chwild"], [Arg7306_0[2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg7306_0[2][2][2][2][2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.unbindv"], [Shen.type_cons, Arg7306_0[2][1], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]]], []]]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "identical"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg7306_0[2][2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg7306_0[2][2][2][2][1], [Shen.type_cons, Arg7306_0[1], []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.failed!"], Arg7306_0)))
  ? false
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "head"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "hd"], Arg7306_0[2][2][2]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tail"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "tl"], Arg7306_0[2][2][2]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.pop"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.stack"], Arg7306_0[2][2][1])) && Shen.empty$question$(Arg7306_0[2][2][2]))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], []]]]
  : (((Shen.is_type(Arg7306_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "call"], Arg7306_0[1])) && (Shen.is_type(Arg7306_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg7306_0[2][1])) && (Shen.is_type(Arg7306_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.continuation"], Arg7306_0[2][2][1])) && (Shen.is_type(Arg7306_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7306_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, Shen.call(Shen.fns["shen.call_the_continuation"], [Shen.call(Shen.fns["shen.chwild"], [Arg7306_0[2][2][2][1]]), [Shen.type_symbol, "ProcessN"], [Shen.type_symbol, "Continuation"]]), []]]]
  : Arg7306_0))))))))))))))}, 1, [], "shen.aum_to_shen"];





Shen.fns["shen.chwild"] = [Shen.type_func, function shen_user_lambda7309(Arg7308) {
  if (Arg7308.length < 1) return [Shen.type_func, shen_user_lambda7309, 1, Arg7308];
  var Arg7308_0 = Arg7308[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7308_0, [Shen.type_symbol, "_"])))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]
  : ((Shen.is_type(Arg7308_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7311(Arg7310) {
  if (Arg7310.length < 1) return [Shen.type_func, shen_user_lambda7311, 1, Arg7310];
  var Arg7310_0 = Arg7310[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.chwild"], [Arg7310_0]);})}, 1, [], undefined], Arg7308_0]);})
  : Arg7308_0))}, 1, [], "shen.chwild"];





Shen.fns["shen.newpv"] = [Shen.type_func, function shen_user_lambda7313(Arg7312) {
  if (Arg7312.length < 1) return [Shen.type_func, shen_user_lambda7313, 1, Arg7312];
  var Arg7312_0 = Arg7312[0];
  var R0, R1;
  return ((R0 = (Shen.absvector_ref((Shen.globals["shen.*varcounter*"]), Arg7312_0) + 1)),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg7312_0, R0),
  (R1 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg7312_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.call(Shen.fns["limit"], [R1]))))
  ? Shen.call(Shen.fns["shen.resizeprocessvector"], [Arg7312_0, R0])
  : [Shen.type_symbol, "shen.skip"]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mk-pvar"], [R0]);}))}, 1, [], "shen.newpv"];





Shen.fns["shen.resizeprocessvector"] = [Shen.type_func, function shen_user_lambda7315(Arg7314) {
  if (Arg7314.length < 2) return [Shen.type_func, shen_user_lambda7315, 2, Arg7314];
  var Arg7314_0 = Arg7314[0], Arg7314_1 = Arg7314[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg7314_0)),
  (R0 = Shen.call(Shen.fns["shen.resize-vector"], [R0, (Arg7314_1 + Arg7314_1), [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg7314_0, R0))}, 2, [], "shen.resizeprocessvector"];





Shen.fns["shen.resize-vector"] = [Shen.type_func, function shen_user_lambda7317(Arg7316) {
  if (Arg7316.length < 3) return [Shen.type_func, shen_user_lambda7317, 3, Arg7316];
  var Arg7316_0 = Arg7316[0], Arg7316_1 = Arg7316[1], Arg7316_2 = Arg7316[2];
  var R0;
  return ((R0 = Shen.absvector_set(Shen.absvector((1 + Arg7316_1)), 0, Arg7316_1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector"], [Arg7316_0, R0, Shen.call(Shen.fns["limit"], [Arg7316_0]), Arg7316_1, Arg7316_2]);}))}, 3, [], "shen.resize-vector"];





Shen.fns["shen.copy-vector"] = [Shen.type_func, function shen_user_lambda7319(Arg7318) {
  if (Arg7318.length < 5) return [Shen.type_func, shen_user_lambda7319, 5, Arg7318];
  var Arg7318_0 = Arg7318[0], Arg7318_1 = Arg7318[1], Arg7318_2 = Arg7318[2], Arg7318_3 = Arg7318[3], Arg7318_4 = Arg7318[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(1 + Arg7318_2), (Arg7318_3 + 1), Arg7318_4, Shen.call(Shen.fns["shen.copy-vector-stage-1"], [1, Arg7318_0, Arg7318_1, (1 + Arg7318_2)])]);})}, 5, [], "shen.copy-vector"];





Shen.fns["shen.copy-vector-stage-1"] = [Shen.type_func, function shen_user_lambda7321(Arg7320) {
  if (Arg7320.length < 4) return [Shen.type_func, shen_user_lambda7321, 4, Arg7320];
  var Arg7320_0 = Arg7320[0], Arg7320_1 = Arg7320[1], Arg7320_2 = Arg7320[2], Arg7320_3 = Arg7320[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7320_3, Arg7320_0)))
  ? Arg7320_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-1"], [(1 + Arg7320_0), Arg7320_1, Shen.absvector_set(Arg7320_2, Arg7320_0, Shen.absvector_ref(Arg7320_1, Arg7320_0)), Arg7320_3]);}))}, 4, [], "shen.copy-vector-stage-1"];





Shen.fns["shen.copy-vector-stage-2"] = [Shen.type_func, function shen_user_lambda7323(Arg7322) {
  if (Arg7322.length < 4) return [Shen.type_func, shen_user_lambda7323, 4, Arg7322];
  var Arg7322_0 = Arg7322[0], Arg7322_1 = Arg7322[1], Arg7322_2 = Arg7322[2], Arg7322_3 = Arg7322[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7322_1, Arg7322_0)))
  ? Arg7322_3
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(Arg7322_0 + 1), Arg7322_1, Arg7322_2, Shen.absvector_set(Arg7322_3, Arg7322_0, Arg7322_2)]);}))}, 4, [], "shen.copy-vector-stage-2"];





Shen.fns["shen.mk-pvar"] = [Shen.type_func, function shen_user_lambda7325(Arg7324) {
  if (Arg7324.length < 1) return [Shen.type_func, shen_user_lambda7325, 1, Arg7324];
  var Arg7324_0 = Arg7324[0];
  return Shen.absvector_set(Shen.absvector_set(Shen.absvector(2), 0, [Shen.type_symbol, "shen.pvar"]), 1, Arg7324_0)}, 1, [], "shen.mk-pvar"];





Shen.fns["shen.pvar?"] = [Shen.type_func, function shen_user_lambda7327(Arg7326) {
  if (Arg7326.length < 1) return [Shen.type_func, shen_user_lambda7327, 1, Arg7326];
  var Arg7326_0 = Arg7326[0];
  return (Shen.absvector$question$(Arg7326_0) && Shen.unwind_tail(Shen.$eq$(Shen.absvector_ref(Arg7326_0, 0), [Shen.type_symbol, "shen.pvar"])))}, 1, [], "shen.pvar?"];





Shen.fns["shen.bindv"] = [Shen.type_func, function shen_user_lambda7329(Arg7328) {
  if (Arg7328.length < 3) return [Shen.type_func, shen_user_lambda7329, 3, Arg7328];
  var Arg7328_0 = Arg7328[0], Arg7328_1 = Arg7328[1], Arg7328_2 = Arg7328[2];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg7328_2)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg7328_0, 1), Arg7328_1))}, 3, [], "shen.bindv"];





Shen.fns["shen.unbindv"] = [Shen.type_func, function shen_user_lambda7331(Arg7330) {
  if (Arg7330.length < 2) return [Shen.type_func, shen_user_lambda7331, 2, Arg7330];
  var Arg7330_0 = Arg7330[0], Arg7330_1 = Arg7330[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg7330_1)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg7330_0, 1), [Shen.type_symbol, "shen.-null-"]))}, 2, [], "shen.unbindv"];





Shen.fns["shen.incinfs"] = [Shen.type_func, function shen_user_lambda7333(Arg7332) {
  if (Arg7332.length < 0) return [Shen.type_func, shen_user_lambda7333, 0, Arg7332];
  return (Shen.globals["shen.*infs*"] = (1 + (Shen.globals["shen.*infs*"])))}, 0, [], "shen.incinfs"];





Shen.fns["shen.call_the_continuation"] = [Shen.type_func, function shen_user_lambda7335(Arg7334) {
  if (Arg7334.length < 3) return [Shen.type_func, shen_user_lambda7335, 3, Arg7334];
  var Arg7334_0 = Arg7334[0], Arg7334_1 = Arg7334[1], Arg7334_2 = Arg7334[2];
  var R0;
  return (((Shen.is_type(Arg7334_0, Shen.type_cons) && (Shen.is_type(Arg7334_0[1], Shen.type_cons) && Shen.empty$question$(Arg7334_0[2]))))
  ? [Shen.type_cons, Arg7334_0[1][1], Shen.call(Shen.fns["append"], [Arg7334_0[1][2], [Shen.type_cons, Arg7334_1, [Shen.type_cons, Arg7334_2, []]]])]
  : (((Shen.is_type(Arg7334_0, Shen.type_cons) && Shen.is_type(Arg7334_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.newcontinuation"], [Arg7334_0[2], Arg7334_1, Arg7334_2])),
  [Shen.type_cons, Arg7334_0[1][1], Shen.call(Shen.fns["append"], [Arg7334_0[1][2], [Shen.type_cons, Arg7334_1, [Shen.type_cons, R0, []]]])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call_the_continuation"]]);})))}, 3, [], "shen.call_the_continuation"];





Shen.fns["shen.newcontinuation"] = [Shen.type_func, function shen_user_lambda7337(Arg7336) {
  if (Arg7336.length < 3) return [Shen.type_func, shen_user_lambda7337, 3, Arg7336];
  var Arg7336_0 = Arg7336[0], Arg7336_1 = Arg7336[1], Arg7336_2 = Arg7336[2];
  return ((Shen.empty$question$(Arg7336_0))
  ? Arg7336_2
  : (((Shen.is_type(Arg7336_0, Shen.type_cons) && Shen.is_type(Arg7336_0[1], Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_cons, Arg7336_0[1][1], Shen.call(Shen.fns["append"], [Arg7336_0[1][2], [Shen.type_cons, Arg7336_1, [Shen.type_cons, Shen.call(Shen.fns["shen.newcontinuation"], [Arg7336_0[2], Arg7336_1, Arg7336_2]), []]]])], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.newcontinuation"]]);})))}, 3, [], "shen.newcontinuation"];





Shen.fns["return"] = [Shen.type_func, function shen_user_lambda7339(Arg7338) {
  if (Arg7338.length < 3) return [Shen.type_func, shen_user_lambda7339, 3, Arg7338];
  var Arg7338_0 = Arg7338[0], Arg7338_1 = Arg7338[1], Arg7338_2 = Arg7338[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg7338_0, Arg7338_1]);})}, 3, [], "return"];





Shen.fns["shen.measure&return"] = [Shen.type_func, function shen_user_lambda7341(Arg7340) {
  if (Arg7340.length < 3) return [Shen.type_func, shen_user_lambda7341, 3, Arg7340];
  var Arg7340_0 = Arg7340[0], Arg7340_1 = Arg7340[1], Arg7340_2 = Arg7340[2];
  return (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [(Shen.globals["shen.*infs*"]), " inferences\x0d\x0a", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg7340_0, Arg7340_1]);}))}, 3, [], "shen.measure&return"];





Shen.fns["unify"] = [Shen.type_func, function shen_user_lambda7343(Arg7342) {
  if (Arg7342.length < 4) return [Shen.type_func, shen_user_lambda7343, 4, Arg7342];
  var Arg7342_0 = Arg7342[0], Arg7342_1 = Arg7342[1], Arg7342_2 = Arg7342[2], Arg7342_3 = Arg7342[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg7342_0, Arg7342_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg7342_1, Arg7342_2]), Arg7342_2, Arg7342_3]);})}, 4, [], "unify"];





Shen.fns["shen.lzy="] = [Shen.type_func, function shen_user_lambda7345(Arg7344) {
  if (Arg7344.length < 4) return [Shen.type_func, shen_user_lambda7345, 4, Arg7344];
  var Arg7344_0 = Arg7344[0], Arg7344_1 = Arg7344[1], Arg7344_2 = Arg7344[2], Arg7344_3 = Arg7344[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7344_1, Arg7344_0)))
  ? Shen.thaw(Arg7344_3)
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg7344_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7344_0, Arg7344_1, Arg7344_2, Arg7344_3]);})
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg7344_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7344_1, Arg7344_0, Arg7344_2, Arg7344_3]);})
  : (((Shen.is_type(Arg7344_0, Shen.type_cons) && Shen.is_type(Arg7344_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg7344_0[1], Arg7344_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg7344_1[1], Arg7344_2]), Arg7344_2, [Shen.type_func, function shen_user_lambda7347(Arg7346) {
  if (Arg7346.length < 4) return [Shen.type_func, shen_user_lambda7347, 4, Arg7346];
  var Arg7346_0 = Arg7346[0], Arg7346_1 = Arg7346[1], Arg7346_2 = Arg7346[2], Arg7346_3 = Arg7346[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg7346_0[2], Arg7346_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg7346_1[2], Arg7346_2]), Arg7346_2, Arg7346_3]);})}, 4, [Arg7344_0, Arg7344_1, Arg7344_2, Arg7344_3], undefined]]);})
  : false))))}, 4, [], "shen.lzy="];





Shen.fns["shen.deref"] = [Shen.type_func, function shen_user_lambda7349(Arg7348) {
  if (Arg7348.length < 2) return [Shen.type_func, shen_user_lambda7349, 2, Arg7348];
  var Arg7348_0 = Arg7348[0], Arg7348_1 = Arg7348[1];
  var R0;
  return ((Shen.is_type(Arg7348_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg7348_0[1], Arg7348_1]), Shen.call(Shen.fns["shen.deref"], [Arg7348_0[2], Arg7348_1])]
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg7348_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg7348_0, Arg7348_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg7348_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [R0, Arg7348_1]);})))
  : Arg7348_0))}, 2, [], "shen.deref"];





Shen.fns["shen.lazyderef"] = [Shen.type_func, function shen_user_lambda7351(Arg7350) {
  if (Arg7350.length < 2) return [Shen.type_func, shen_user_lambda7351, 2, Arg7350];
  var Arg7350_0 = Arg7350[0], Arg7350_1 = Arg7350[1];
  var R0;
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg7350_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg7350_0, Arg7350_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg7350_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lazyderef"], [R0, Arg7350_1]);})))
  : Arg7350_0)}, 2, [], "shen.lazyderef"];





Shen.fns["shen.valvector"] = [Shen.type_func, function shen_user_lambda7353(Arg7352) {
  if (Arg7352.length < 2) return [Shen.type_func, shen_user_lambda7353, 2, Arg7352];
  var Arg7352_0 = Arg7352[0], Arg7352_1 = Arg7352[1];
  return Shen.absvector_ref(Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg7352_1), Shen.absvector_ref(Arg7352_0, 1))}, 2, [], "shen.valvector"];





Shen.fns["unify!"] = [Shen.type_func, function shen_user_lambda7355(Arg7354) {
  if (Arg7354.length < 4) return [Shen.type_func, shen_user_lambda7355, 4, Arg7354];
  var Arg7354_0 = Arg7354[0], Arg7354_1 = Arg7354[1], Arg7354_2 = Arg7354[2], Arg7354_3 = Arg7354[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg7354_0, Arg7354_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg7354_1, Arg7354_2]), Arg7354_2, Arg7354_3]);})}, 4, [], "unify!"];





Shen.fns["shen.lzy=!"] = [Shen.type_func, function shen_user_lambda7357(Arg7356) {
  if (Arg7356.length < 4) return [Shen.type_func, shen_user_lambda7357, 4, Arg7356];
  var Arg7356_0 = Arg7356[0], Arg7356_1 = Arg7356[1], Arg7356_2 = Arg7356[2], Arg7356_3 = Arg7356[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7356_1, Arg7356_0)))
  ? Shen.thaw(Arg7356_3)
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg7356_0]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg7356_0, Shen.call(Shen.fns["shen.deref"], [Arg7356_1, Arg7356_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7356_0, Arg7356_1, Arg7356_2, Arg7356_3]);})
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg7356_1]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg7356_1, Shen.call(Shen.fns["shen.deref"], [Arg7356_0, Arg7356_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7356_1, Arg7356_0, Arg7356_2, Arg7356_3]);})
  : (((Shen.is_type(Arg7356_0, Shen.type_cons) && Shen.is_type(Arg7356_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg7356_0[1], Arg7356_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg7356_1[1], Arg7356_2]), Arg7356_2, [Shen.type_func, function shen_user_lambda7359(Arg7358) {
  if (Arg7358.length < 4) return [Shen.type_func, shen_user_lambda7359, 4, Arg7358];
  var Arg7358_0 = Arg7358[0], Arg7358_1 = Arg7358[1], Arg7358_2 = Arg7358[2], Arg7358_3 = Arg7358[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg7358_0[2], Arg7358_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg7358_1[2], Arg7358_2]), Arg7358_2, Arg7358_3]);})}, 4, [Arg7356_0, Arg7356_1, Arg7356_2, Arg7356_3], undefined]]);})
  : false))))}, 4, [], "shen.lzy=!"];





Shen.fns["shen.occurs?"] = [Shen.type_func, function shen_user_lambda7361(Arg7360) {
  if (Arg7360.length < 2) return [Shen.type_func, shen_user_lambda7361, 2, Arg7360];
  var Arg7360_0 = Arg7360[0], Arg7360_1 = Arg7360[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7360_1, Arg7360_0)))
  ? true
  : ((Shen.is_type(Arg7360_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.occurs?"], [Arg7360_0, Arg7360_1[1]]) || Shen.call(Shen.fns["shen.occurs?"], [Arg7360_0, Arg7360_1[2]]))
  : false))}, 2, [], "shen.occurs?"];





Shen.fns["identical"] = [Shen.type_func, function shen_user_lambda7363(Arg7362) {
  if (Arg7362.length < 4) return [Shen.type_func, shen_user_lambda7363, 4, Arg7362];
  var Arg7362_0 = Arg7362[0], Arg7362_1 = Arg7362[1], Arg7362_2 = Arg7362[2], Arg7362_3 = Arg7362[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg7362_0, Arg7362_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg7362_1, Arg7362_2]), Arg7362_2, Arg7362_3]);})}, 4, [], "identical"];





Shen.fns["shen.lzy=="] = [Shen.type_func, function shen_user_lambda7365(Arg7364) {
  if (Arg7364.length < 4) return [Shen.type_func, shen_user_lambda7365, 4, Arg7364];
  var Arg7364_0 = Arg7364[0], Arg7364_1 = Arg7364[1], Arg7364_2 = Arg7364[2], Arg7364_3 = Arg7364[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7364_1, Arg7364_0)))
  ? Shen.thaw(Arg7364_3)
  : (((Shen.is_type(Arg7364_0, Shen.type_cons) && Shen.is_type(Arg7364_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg7364_0[1], Arg7364_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg7364_1[1], Arg7364_2]), Arg7364_2, [Shen.type_func, function shen_user_lambda7367(Arg7366) {
  if (Arg7366.length < 4) return [Shen.type_func, shen_user_lambda7367, 4, Arg7366];
  var Arg7366_0 = Arg7366[0], Arg7366_1 = Arg7366[1], Arg7366_2 = Arg7366[2], Arg7366_3 = Arg7366[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Arg7366_0[2], Arg7366_1[2], Arg7366_2, Arg7366_3]);})}, 4, [Arg7364_0, Arg7364_1, Arg7364_2, Arg7364_3], undefined]]);})
  : false))}, 4, [], "shen.lzy=="];





Shen.fns["shen.pvar"] = [Shen.type_func, function shen_user_lambda7369(Arg7368) {
  if (Arg7368.length < 1) return [Shen.type_func, shen_user_lambda7369, 1, Arg7368];
  var Arg7368_0 = Arg7368[0];
  return ("Var" + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg7368_0, 1), "", [Shen.type_symbol, "shen.a"]]))}, 1, [], "shen.pvar"];





Shen.fns["bind"] = [Shen.type_func, function shen_user_lambda7371(Arg7370) {
  if (Arg7370.length < 4) return [Shen.type_func, shen_user_lambda7371, 4, Arg7370];
  var Arg7370_0 = Arg7370[0], Arg7370_1 = Arg7370[1], Arg7370_2 = Arg7370[2], Arg7370_3 = Arg7370[3];
  var R0;
  return (Shen.call(Shen.fns["shen.bindv"], [Arg7370_0, Arg7370_1, Arg7370_2]),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg7370_3))),
  Shen.call(Shen.fns["shen.unbindv"], [Arg7370_0, Arg7370_2]),
  R0)}, 4, [], "bind"];





Shen.fns["fwhen"] = [Shen.type_func, function shen_user_lambda7373(Arg7372) {
  if (Arg7372.length < 3) return [Shen.type_func, shen_user_lambda7373, 3, Arg7372];
  var Arg7372_0 = Arg7372[0], Arg7372_1 = Arg7372[1], Arg7372_2 = Arg7372[2];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg7372_0)))
  ? Shen.thaw(Arg7372_2)
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg7372_0)))
  ? false
  : (function() {
  return Shen.simple_error(("fwhen expects a boolean: not " + Shen.call(Shen.fns["shen.app"], [Arg7372_0, "%", [Shen.type_symbol, "shen.s"]])));})))}, 3, [], "fwhen"];





Shen.fns["call"] = [Shen.type_func, function shen_user_lambda7375(Arg7374) {
  if (Arg7374.length < 3) return [Shen.type_func, shen_user_lambda7375, 3, Arg7374];
  var Arg7374_0 = Arg7374[0], Arg7374_1 = Arg7374[1], Arg7374_2 = Arg7374[2];
  return ((Shen.is_type(Arg7374_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg7374_0[1], Arg7374_1])]), Arg7374_0[2], Arg7374_1, Arg7374_2]);})
  : false)}, 3, [], "call"];





Shen.fns["shen.call-help"] = [Shen.type_func, function shen_user_lambda7377(Arg7376) {
  if (Arg7376.length < 4) return [Shen.type_func, shen_user_lambda7377, 4, Arg7376];
  var Arg7376_0 = Arg7376[0], Arg7376_1 = Arg7376[1], Arg7376_2 = Arg7376[2], Arg7376_3 = Arg7376[3];
  return ((Shen.empty$question$(Arg7376_1))
  ? (function() {
  return Shen.call_tail(Arg7376_0, [Arg7376_2, Arg7376_3]);})
  : ((Shen.is_type(Arg7376_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Arg7376_0, [Arg7376_1[1]]), Arg7376_1[2], Arg7376_2, Arg7376_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-help"]]);})))}, 4, [], "shen.call-help"];





Shen.fns["shen.intprolog"] = [Shen.type_func, function shen_user_lambda7379(Arg7378) {
  if (Arg7378.length < 1) return [Shen.type_func, shen_user_lambda7379, 1, Arg7378];
  var Arg7378_0 = Arg7378[0];
  var R0;
  return (((Shen.is_type(Arg7378_0, Shen.type_cons) && Shen.is_type(Arg7378_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help"], [Arg7378_0[1][1], Shen.call(Shen.fns["shen.insert-prolog-variables"], [[Shen.type_cons, Arg7378_0[1][2], [Shen.type_cons, Arg7378_0[2], []]], R0]), R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog"]]);}))}, 1, [], "shen.intprolog"];





Shen.fns["shen.intprolog-help"] = [Shen.type_func, function shen_user_lambda7381(Arg7380) {
  if (Arg7380.length < 3) return [Shen.type_func, shen_user_lambda7381, 3, Arg7380];
  var Arg7380_0 = Arg7380[0], Arg7380_1 = Arg7380[1], Arg7380_2 = Arg7380[2];
  return (((Shen.is_type(Arg7380_1, Shen.type_cons) && (Shen.is_type(Arg7380_1[2], Shen.type_cons) && Shen.empty$question$(Arg7380_1[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Arg7380_0, Arg7380_1[1], Arg7380_1[2][1], Arg7380_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help"]]);}))}, 3, [], "shen.intprolog-help"];





Shen.fns["shen.intprolog-help-help"] = [Shen.type_func, function shen_user_lambda7383(Arg7382) {
  if (Arg7382.length < 4) return [Shen.type_func, shen_user_lambda7383, 4, Arg7382];
  var Arg7382_0 = Arg7382[0], Arg7382_1 = Arg7382[1], Arg7382_2 = Arg7382[2], Arg7382_3 = Arg7382[3];
  return ((Shen.empty$question$(Arg7382_1))
  ? (function() {
  return Shen.call_tail(Arg7382_0, [Arg7382_3, [Shen.type_func, function shen_user_lambda7385(Arg7384) {
  if (Arg7384.length < 4) return [Shen.type_func, shen_user_lambda7385, 4, Arg7384];
  var Arg7384_0 = Arg7384[0], Arg7384_1 = Arg7384[1], Arg7384_2 = Arg7384[2], Arg7384_3 = Arg7384[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg7384_2, Arg7384_3]);})}, 4, [Arg7382_0, Arg7382_1, Arg7382_2, Arg7382_3], undefined]]);})
  : ((Shen.is_type(Arg7382_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Shen.call(Arg7382_0, [Arg7382_1[1]]), Arg7382_1[2], Arg7382_2, Arg7382_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help-help"]]);})))}, 4, [], "shen.intprolog-help-help"];





Shen.fns["shen.call-rest"] = [Shen.type_func, function shen_user_lambda7387(Arg7386) {
  if (Arg7386.length < 2) return [Shen.type_func, shen_user_lambda7387, 2, Arg7386];
  var Arg7386_0 = Arg7386[0], Arg7386_1 = Arg7386[1];
  return ((Shen.empty$question$(Arg7386_0))
  ? true
  : (((Shen.is_type(Arg7386_0, Shen.type_cons) && (Shen.is_type(Arg7386_0[1], Shen.type_cons) && Shen.is_type(Arg7386_0[1][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [[Shen.type_cons, [Shen.type_cons, Shen.call(Arg7386_0[1][1], [Arg7386_0[1][2][1]]), Arg7386_0[1][2][2]], Arg7386_0[2]], Arg7386_1]);})
  : (((Shen.is_type(Arg7386_0, Shen.type_cons) && (Shen.is_type(Arg7386_0[1], Shen.type_cons) && Shen.empty$question$(Arg7386_0[1][2]))))
  ? (function() {
  return Shen.call_tail(Arg7386_0[1][1], [Arg7386_1, [Shen.type_func, function shen_user_lambda7389(Arg7388) {
  if (Arg7388.length < 2) return [Shen.type_func, shen_user_lambda7389, 2, Arg7388];
  var Arg7388_0 = Arg7388[0], Arg7388_1 = Arg7388[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg7388_0[2], Arg7388_1]);})}, 2, [Arg7386_0, Arg7386_1], undefined]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-rest"]]);}))))}, 2, [], "shen.call-rest"];





Shen.fns["shen.start-new-prolog-process"] = [Shen.type_func, function shen_user_lambda7391(Arg7390) {
  if (Arg7390.length < 0) return [Shen.type_func, shen_user_lambda7391, 0, Arg7390];
  var R0;
  return ((R0 = (Shen.globals["shen.*process-counter*"] = (1 + (Shen.globals["shen.*process-counter*"])))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise-prolog"], [R0]);}))}, 0, [], "shen.start-new-prolog-process"];





Shen.fns["shen.insert-prolog-variables"] = [Shen.type_func, function shen_user_lambda7393(Arg7392) {
  if (Arg7392.length < 2) return [Shen.type_func, shen_user_lambda7393, 2, Arg7392];
  var Arg7392_0 = Arg7392[0], Arg7392_1 = Arg7392[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg7392_0, Shen.call(Shen.fns["shen.flatten"], [Arg7392_0]), Arg7392_1]);})}, 2, [], "shen.insert-prolog-variables"];





Shen.fns["shen.insert-prolog-variables-help"] = [Shen.type_func, function shen_user_lambda7395(Arg7394) {
  if (Arg7394.length < 3) return [Shen.type_func, shen_user_lambda7395, 3, Arg7394];
  var Arg7394_0 = Arg7394[0], Arg7394_1 = Arg7394[1], Arg7394_2 = Arg7394[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg7394_1))
  ? Arg7394_0
  : (((Shen.is_type(Arg7394_1, Shen.type_cons) && Shen.call(Shen.fns["variable?"], [Arg7394_1[1]])))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg7394_2])),
  (R0 = Shen.call(Shen.fns["subst"], [R0, Arg7394_1[1], Arg7394_0])),
  (R1 = Shen.call(Shen.fns["remove"], [Arg7394_1[1], Arg7394_1[2]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [R0, R1, Arg7394_2]);}))
  : ((Shen.is_type(Arg7394_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg7394_0, Arg7394_1[2], Arg7394_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-prolog-variables-help"]]);}))))}, 3, [], "shen.insert-prolog-variables-help"];





Shen.fns["shen.initialise-prolog"] = [Shen.type_func, function shen_user_lambda7397(Arg7396) {
  if (Arg7396.length < 1) return [Shen.type_func, shen_user_lambda7397, 1, Arg7396];
  var Arg7396_0 = Arg7396[0];
  return (Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg7396_0, Shen.call(Shen.fns["shen.fillvector"], [Shen.vector(10), 1, 10, [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg7396_0, 1),
  Arg7396_0)}, 1, [], "shen.initialise-prolog"];










Shen.fns["shen.f_error"] = [Shen.type_func, function shen_user_lambda8084(Arg8083) {
  if (Arg8083.length < 1) return [Shen.type_func, shen_user_lambda8084, 1, Arg8083];
  var Arg8083_0 = Arg8083[0];
  return (Shen.call(Shen.fns["shen.prhush"], [("partial function " + Shen.call(Shen.fns["shen.app"], [Arg8083_0, ";\x0d\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  ((((!Shen.call(Shen.fns["shen.tracked?"], [Arg8083_0])) && Shen.call(Shen.fns["y-or-n?"], [("track " + Shen.call(Shen.fns["shen.app"], [Arg8083_0, "? ", [Shen.type_symbol, "shen.a"]]))])))
  ? Shen.call(Shen.fns["shen.track-function"], [Shen.call(Shen.fns["ps"], [Arg8083_0])])
  : [Shen.type_symbol, "shen.ok"]),
  (function() {
  return Shen.simple_error("aborted");}))}, 1, [], "shen.f_error"];





Shen.fns["shen.tracked?"] = [Shen.type_func, function shen_user_lambda8086(Arg8085) {
  if (Arg8085.length < 1) return [Shen.type_func, shen_user_lambda8086, 1, Arg8085];
  var Arg8085_0 = Arg8085[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg8085_0, (Shen.globals["shen.*tracking*"])]);})}, 1, [], "shen.tracked?"];





Shen.fns["track"] = [Shen.type_func, function shen_user_lambda8088(Arg8087) {
  if (Arg8087.length < 1) return [Shen.type_func, shen_user_lambda8088, 1, Arg8087];
  var Arg8087_0 = Arg8087[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["ps"], [Arg8087_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.track-function"], [R0]);}))}, 1, [], "track"];





Shen.fns["shen.track-function"] = [Shen.type_func, function shen_user_lambda8090(Arg8089) {
  if (Arg8089.length < 1) return [Shen.type_func, shen_user_lambda8090, 1, Arg8089];
  var Arg8089_0 = Arg8089[0];
  var R0;
  return (((Shen.is_type(Arg8089_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg8089_0[1])) && (Shen.is_type(Arg8089_0[2], Shen.type_cons) && (Shen.is_type(Arg8089_0[2][2], Shen.type_cons) && (Shen.is_type(Arg8089_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg8089_0[2][2][2][2])))))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg8089_0[2][1], [Shen.type_cons, Arg8089_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-tracking-code"], [Arg8089_0[2][1], Arg8089_0[2][2][1], Arg8089_0[2][2][2][1]]), []]]]]),
  (R0 = Shen.call(Shen.fns["eval"], [R0])),
  (Shen.globals["shen.*tracking*"] = [Shen.type_cons, R0, (Shen.globals["shen.*tracking*"])]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.track-function"]]);}))}, 1, [], "shen.track-function"];





Shen.fns["shen.insert-tracking-code"] = [Shen.type_func, function shen_user_lambda8092(Arg8091) {
  if (Arg8091.length < 3) return [Shen.type_func, shen_user_lambda8092, 3, Arg8091];
  var Arg8091_0 = Arg8091[0], Arg8091_1 = Arg8091[1], Arg8091_2 = Arg8091[2];
  return [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.input-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg8091_0, [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg8091_1]), []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg8091_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.output-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg8091_0, [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]], []]]], []]]]], []]]], []]]], []]]]}, 3, [], "shen.insert-tracking-code"];





Shen.call_toplevel(function js$dot$shen_js_toplevel8095(Arg8093) {
  if (Arg8093.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8095, 0, Arg8093];
  return (Shen.globals["shen.*step*"] = false)});




Shen.fns["step"] = [Shen.type_func, function shen_user_lambda8097(Arg8096) {
  if (Arg8096.length < 1) return [Shen.type_func, shen_user_lambda8097, 1, Arg8096];
  var Arg8096_0 = Arg8096[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg8096_0)))
  ? (Shen.globals["shen.*step*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg8096_0)))
  ? (Shen.globals["shen.*step*"] = false)
  : (function() {
  return Shen.simple_error("step expects a + or a -.\x0d\x0a");})))}, 1, [], "step"];





Shen.fns["spy"] = [Shen.type_func, function shen_user_lambda8099(Arg8098) {
  if (Arg8098.length < 1) return [Shen.type_func, shen_user_lambda8099, 1, Arg8098];
  var Arg8098_0 = Arg8098[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg8098_0)))
  ? (Shen.globals["shen.*spy*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg8098_0)))
  ? (Shen.globals["shen.*spy*"] = false)
  : (function() {
  return Shen.simple_error("spy expects a + or a -.\x0d\x0a");})))}, 1, [], "spy"];





Shen.fns["shen.terpri-or-read-char"] = [Shen.type_func, function shen_user_lambda8101(Arg8100) {
  if (Arg8100.length < 0) return [Shen.type_func, shen_user_lambda8101, 0, Arg8100];
  return (((Shen.globals["shen.*step*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check-byte"], [Shen.read_byte((Shen.globals["*stinput*"]))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 0, [], "shen.terpri-or-read-char"];





Shen.fns["shen.check-byte"] = [Shen.type_func, function shen_user_lambda8103(Arg8102) {
  if (Arg8102.length < 1) return [Shen.type_func, shen_user_lambda8103, 1, Arg8102];
  var Arg8102_0 = Arg8102[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg8102_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("aborted");})
  : true)}, 1, [], "shen.check-byte"];





Shen.fns["shen.input-track"] = [Shen.type_func, function shen_user_lambda8105(Arg8104) {
  if (Arg8104.length < 3) return [Shen.type_func, shen_user_lambda8105, 3, Arg8104];
  var Arg8104_0 = Arg8104[0], Arg8104_1 = Arg8104[1], Arg8104_2 = Arg8104[2];
  return (Shen.call(Shen.fns["shen.prhush"], [("\x0d\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg8104_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg8104_0, ("> Inputs to " + Shen.call(Shen.fns["shen.app"], [Arg8104_1, (" \x0d\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg8104_0]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg8104_2]);}))}, 3, [], "shen.input-track"];





Shen.fns["shen.recursively-print"] = [Shen.type_func, function shen_user_lambda8107(Arg8106) {
  if (Arg8106.length < 1) return [Shen.type_func, shen_user_lambda8107, 1, Arg8106];
  var Arg8106_0 = Arg8106[0];
  return ((Shen.empty$question$(Arg8106_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [" ==>", Shen.call(Shen.fns["stoutput"], [])]);})
  : ((Shen.is_type(Arg8106_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["print"], [Arg8106_0[1]]),
  Shen.call(Shen.fns["shen.prhush"], [", ", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg8106_0[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursively-print"]]);})))}, 1, [], "shen.recursively-print"];





Shen.fns["shen.spaces"] = [Shen.type_func, function shen_user_lambda8109(Arg8108) {
  if (Arg8108.length < 1) return [Shen.type_func, shen_user_lambda8109, 1, Arg8108];
  var Arg8108_0 = Arg8108[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg8108_0)))
  ? ""
  : (" " + Shen.call(Shen.fns["shen.spaces"], [(Arg8108_0 - 1)])))}, 1, [], "shen.spaces"];





Shen.fns["shen.output-track"] = [Shen.type_func, function shen_user_lambda8111(Arg8110) {
  if (Arg8110.length < 3) return [Shen.type_func, shen_user_lambda8111, 3, Arg8110];
  var Arg8110_0 = Arg8110[0], Arg8110_1 = Arg8110[1], Arg8110_2 = Arg8110[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0d\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg8110_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg8110_0, ("> Output from " + Shen.call(Shen.fns["shen.app"], [Arg8110_1, (" \x0d\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg8110_0]), ("==> " + Shen.call(Shen.fns["shen.app"], [Arg8110_2, "", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})}, 3, [], "shen.output-track"];





Shen.fns["untrack"] = [Shen.type_func, function shen_user_lambda8113(Arg8112) {
  if (Arg8112.length < 1) return [Shen.type_func, shen_user_lambda8113, 1, Arg8112];
  var Arg8112_0 = Arg8112[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["ps"], [Arg8112_0])]);})}, 1, [], "untrack"];





Shen.fns["profile"] = [Shen.type_func, function shen_user_lambda8115(Arg8114) {
  if (Arg8114.length < 1) return [Shen.type_func, shen_user_lambda8115, 1, Arg8114];
  var Arg8114_0 = Arg8114[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.profile-help"], [Shen.call(Shen.fns["ps"], [Arg8114_0])]);})}, 1, [], "profile"];





Shen.fns["shen.profile-help"] = [Shen.type_func, function shen_user_lambda8117(Arg8116) {
  if (Arg8116.length < 1) return [Shen.type_func, shen_user_lambda8117, 1, Arg8116];
  var Arg8116_0 = Arg8116[0];
  var R0, R1;
  return (((Shen.is_type(Arg8116_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg8116_0[1])) && (Shen.is_type(Arg8116_0[2], Shen.type_cons) && (Shen.is_type(Arg8116_0[2][2], Shen.type_cons) && (Shen.is_type(Arg8116_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg8116_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.f"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg8116_0[2][1], [Shen.type_cons, Arg8116_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.profile-func"], [Arg8116_0[2][1], Arg8116_0[2][2][1], [Shen.type_cons, R0, Arg8116_0[2][2][1]]]), []]]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, Arg8116_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["subst"], [R0, Arg8116_0[2][1], Arg8116_0[2][2][2][1]]), []]]]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R1]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R0]),
  Arg8116_0[2][1])
  : (function() {
  return Shen.simple_error("Cannot profile.\x0d\x0a");}))}, 1, [], "shen.profile-help"];





Shen.fns["unprofile"] = [Shen.type_func, function shen_user_lambda8119(Arg8118) {
  if (Arg8118.length < 1) return [Shen.type_func, shen_user_lambda8119, 1, Arg8118];
  var Arg8118_0 = Arg8118[0];
  return (function() {
  return Shen.call_tail(Shen.fns["untrack"], [Arg8118_0]);})}, 1, [], "unprofile"];





Shen.fns["shen.profile-func"] = [Shen.type_func, function shen_user_lambda8121(Arg8120) {
  if (Arg8120.length < 3) return [Shen.type_func, shen_user_lambda8121, 3, Arg8120];
  var Arg8120_0 = Arg8120[0], Arg8120_1 = Arg8120[1], Arg8120_2 = Arg8120[2];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg8120_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Record"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.put-profile"], [Shen.type_cons, Arg8120_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.get-profile"], [Shen.type_cons, Arg8120_0, []]], [Shen.type_cons, [Shen.type_symbol, "Finish"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]]]], []]]]]}, 3, [], "shen.profile-func"];





Shen.fns["profile-results"] = [Shen.type_func, function shen_user_lambda8123(Arg8122) {
  if (Arg8122.length < 1) return [Shen.type_func, shen_user_lambda8123, 1, Arg8122];
  var Arg8122_0 = Arg8122[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.get-profile"], [Arg8122_0])),
  Shen.call(Shen.fns["shen.put-profile"], [Arg8122_0, 0]),
  [Shen.fns['shen.tuple'], Arg8122_0, R0])}, 1, [], "profile-results"];





Shen.fns["shen.get-profile"] = [Shen.type_func, function shen_user_lambda8127(Arg8124) {
  if (Arg8124.length < 1) return [Shen.type_func, shen_user_lambda8127, 1, Arg8124];
  var Arg8124_0 = Arg8124[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda8129(Arg8128) {
  if (Arg8128.length < 1) return [Shen.type_func, shen_user_lambda8129, 1, Arg8128];
  var Arg8128_0 = Arg8128[0];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg8128_0, [Shen.type_symbol, "profile"], (Shen.globals["*property-vector*"])]);})}, 1, [Arg8124_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda8131(Arg8130) {
  if (Arg8130.length < 1) return [Shen.type_func, shen_user_lambda8131, 1, Arg8130];
  var Arg8130_0 = Arg8130[0];
  return 0}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "shen.get-profile"];





Shen.fns["shen.put-profile"] = [Shen.type_func, function shen_user_lambda8133(Arg8132) {
  if (Arg8132.length < 2) return [Shen.type_func, shen_user_lambda8133, 2, Arg8132];
  var Arg8132_0 = Arg8132[0], Arg8132_1 = Arg8132[1];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg8132_0, [Shen.type_symbol, "profile"], Arg8132_1, (Shen.globals["*property-vector*"])]);})}, 2, [], "shen.put-profile"];










Shen.call_toplevel(function js$dot$shen_js_toplevel6935(Arg6933) {
  if (Arg6933.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6935, 0, Arg6933];
  return (Shen.globals["shen.*installing-kl*"] = false)});




Shen.call_toplevel(function js$dot$shen_js_toplevel6938(Arg6936) {
  if (Arg6936.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6938, 0, Arg6936];
  return (Shen.globals["shen.*history*"] = [])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6941(Arg6939) {
  if (Arg6939.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6941, 0, Arg6939];
  return (Shen.globals["shen.*tc*"] = false)});




Shen.call_toplevel(function js$dot$shen_js_toplevel6944(Arg6942) {
  if (Arg6942.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6944, 0, Arg6942];
  return (Shen.globals["*property-vector*"] = Shen.vector(20000))});




Shen.call_toplevel(function js$dot$shen_js_toplevel6947(Arg6945) {
  if (Arg6945.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6947, 0, Arg6945];
  return (Shen.globals["shen.*process-counter*"] = 0)});




Shen.call_toplevel(function js$dot$shen_js_toplevel6950(Arg6948) {
  if (Arg6948.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6950, 0, Arg6948];
  return (Shen.globals["shen.*varcounter*"] = Shen.vector(1000))});




Shen.call_toplevel(function js$dot$shen_js_toplevel6953(Arg6951) {
  if (Arg6951.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6953, 0, Arg6951];
  return (Shen.globals["shen.*prologvectors*"] = Shen.vector(1000))});




Shen.call_toplevel(function js$dot$shen_js_toplevel6956(Arg6954) {
  if (Arg6954.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6956, 0, Arg6954];
  return (Shen.globals["shen.*reader-macros*"] = [])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6959(Arg6957) {
  if (Arg6957.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6959, 0, Arg6957];
  return (Shen.globals["*home-directory*"] = [])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6962(Arg6960) {
  if (Arg6960.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6962, 0, Arg6960];
  return (Shen.globals["shen.*gensym*"] = 0)});




Shen.call_toplevel(function js$dot$shen_js_toplevel6965(Arg6963) {
  if (Arg6963.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6965, 0, Arg6963];
  return (Shen.globals["shen.*tracking*"] = [])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6968(Arg6966) {
  if (Arg6966.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6968, 0, Arg6966];
  return (Shen.globals["*home-directory*"] = "")});




Shen.call_toplevel(function js$dot$shen_js_toplevel6971(Arg6969) {
  if (Arg6969.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6971, 0, Arg6969];
  return (Shen.globals["shen.*alphabet*"] = [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "C"], [Shen.type_cons, [Shen.type_symbol, "D"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_symbol, "F"], [Shen.type_cons, [Shen.type_symbol, "G"], [Shen.type_cons, [Shen.type_symbol, "H"], [Shen.type_cons, [Shen.type_symbol, "I"], [Shen.type_cons, [Shen.type_symbol, "J"], [Shen.type_cons, [Shen.type_symbol, "K"], [Shen.type_cons, [Shen.type_symbol, "L"], [Shen.type_cons, [Shen.type_symbol, "M"], [Shen.type_cons, [Shen.type_symbol, "N"], [Shen.type_cons, [Shen.type_symbol, "O"], [Shen.type_cons, [Shen.type_symbol, "P"], [Shen.type_cons, [Shen.type_symbol, "Q"], [Shen.type_cons, [Shen.type_symbol, "R"], [Shen.type_cons, [Shen.type_symbol, "S"], [Shen.type_cons, [Shen.type_symbol, "T"], [Shen.type_cons, [Shen.type_symbol, "U"], [Shen.type_cons, [Shen.type_symbol, "V"], [Shen.type_cons, [Shen.type_symbol, "W"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]]]]]]]]]]]]]]]]]]]]]]]]])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6974(Arg6972) {
  if (Arg6972.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6974, 0, Arg6972];
  return (Shen.globals["shen.*special*"] = [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]]]]]]]])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6977(Arg6975) {
  if (Arg6975.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6977, 0, Arg6975];
  return (Shen.globals["shen.*extraspecial*"] = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "read+"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], []]]]]]])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6980(Arg6978) {
  if (Arg6978.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6980, 0, Arg6978];
  return (Shen.globals["shen.*spy*"] = false)});




Shen.call_toplevel(function js$dot$shen_js_toplevel6983(Arg6981) {
  if (Arg6981.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6983, 0, Arg6981];
  return (Shen.globals["shen.*datatypes*"] = [])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6986(Arg6984) {
  if (Arg6984.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6986, 0, Arg6984];
  return (Shen.globals["shen.*alldatatypes*"] = [])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6989(Arg6987) {
  if (Arg6987.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6989, 0, Arg6987];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)});




Shen.call_toplevel(function js$dot$shen_js_toplevel6992(Arg6990) {
  if (Arg6990.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6992, 0, Arg6990];
  return (Shen.globals["shen.*synonyms*"] = [])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6995(Arg6993) {
  if (Arg6993.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6995, 0, Arg6993];
  return (Shen.globals["shen.*system*"] = [])});




Shen.call_toplevel(function js$dot$shen_js_toplevel6998(Arg6996) {
  if (Arg6996.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6998, 0, Arg6996];
  return (Shen.globals["shen.*signedfuncs*"] = [])});




Shen.call_toplevel(function js$dot$shen_js_toplevel7001(Arg6999) {
  if (Arg6999.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7001, 0, Arg6999];
  return (Shen.globals["shen.*maxcomplexity*"] = 128)});




Shen.call_toplevel(function js$dot$shen_js_toplevel7004(Arg7002) {
  if (Arg7002.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7004, 0, Arg7002];
  return (Shen.globals["shen.*occurs*"] = true)});




Shen.call_toplevel(function js$dot$shen_js_toplevel7007(Arg7005) {
  if (Arg7005.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7007, 0, Arg7005];
  return (Shen.globals["shen.*maxinferences*"] = 1000000)});




Shen.call_toplevel(function js$dot$shen_js_toplevel7010(Arg7008) {
  if (Arg7008.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7010, 0, Arg7008];
  return (Shen.globals["*maximum-print-sequence-size*"] = 20)});




Shen.call_toplevel(function js$dot$shen_js_toplevel7013(Arg7011) {
  if (Arg7011.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7013, 0, Arg7011];
  return (Shen.globals["shen.*catch*"] = 0)});




Shen.call_toplevel(function js$dot$shen_js_toplevel7016(Arg7014) {
  if (Arg7014.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7016, 0, Arg7014];
  return (Shen.globals["shen.*call*"] = 0)});




Shen.call_toplevel(function js$dot$shen_js_toplevel7019(Arg7017) {
  if (Arg7017.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7019, 0, Arg7017];
  return (Shen.globals["shen.*infs*"] = 0)});




Shen.call_toplevel(function js$dot$shen_js_toplevel7022(Arg7020) {
  if (Arg7020.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7022, 0, Arg7020];
  return (Shen.globals["*hush*"] = false)});




Shen.call_toplevel(function js$dot$shen_js_toplevel7025(Arg7023) {
  if (Arg7023.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7025, 0, Arg7023];
  return (Shen.globals["shen.*optimise*"] = false)});




Shen.call_toplevel(function js$dot$shen_js_toplevel7028(Arg7026) {
  if (Arg7026.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7028, 0, Arg7026];
  return (Shen.globals["*version*"] = "version 15")});




Shen.fns["shen.initialise_arity_table"] = [Shen.type_func, function shen_user_lambda7030(Arg7029) {
  if (Arg7029.length < 1) return [Shen.type_func, shen_user_lambda7030, 1, Arg7029];
  var Arg7029_0 = Arg7029[0];
  return ((Shen.empty$question$(Arg7029_0))
  ? []
  : (((Shen.is_type(Arg7029_0, Shen.type_cons) && Shen.is_type(Arg7029_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["put"], [Arg7029_0[1], [Shen.type_symbol, "arity"], Arg7029_0[2][1], (Shen.globals["*property-vector*"])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [Arg7029_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.initialise_arity_table"]]);})))}, 1, [], "shen.initialise_arity_table"];





Shen.fns["arity"] = [Shen.type_func, function shen_user_lambda7034(Arg7031) {
  if (Arg7031.length < 1) return [Shen.type_func, shen_user_lambda7034, 1, Arg7031];
  var Arg7031_0 = Arg7031[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda7036(Arg7035) {
  if (Arg7035.length < 1) return [Shen.type_func, shen_user_lambda7036, 1, Arg7035];
  var Arg7035_0 = Arg7035[0];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg7035_0, [Shen.type_symbol, "arity"], (Shen.globals["*property-vector*"])]);})}, 1, [Arg7031_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7038(Arg7037) {
  if (Arg7037.length < 1) return [Shen.type_func, shen_user_lambda7038, 1, Arg7037];
  var Arg7037_0 = Arg7037[0];
  return -1}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "arity"];





Shen.call_toplevel(function js$dot$shen_js_toplevel7041(Arg7039) {
  if (Arg7039.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7041, 0, Arg7039];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [[Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "interror"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, 5, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "implementation"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "kill"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "language"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "optimise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "os"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "port"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "porters"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "shen.reassemble"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "release"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "shen.strong-warning"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "sum"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "write-byte"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, 2, []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})});




Shen.fns["systemf"] = [Shen.type_func, function shen_user_lambda7043(Arg7042) {
  if (Arg7042.length < 1) return [Shen.type_func, shen_user_lambda7043, 1, Arg7042];
  var Arg7042_0 = Arg7042[0];
  var R0, R1;
  return ((R0 = [Shen.type_symbol, "shen"]),
  (R1 = Shen.call(Shen.fns["get"], [R0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [R0, [Shen.type_symbol, "shen.external-symbols"], Shen.call(Shen.fns["adjoin"], [Arg7042_0, R1]), (Shen.globals["*property-vector*"])]);}))}, 1, [], "systemf"];





Shen.fns["adjoin"] = [Shen.type_func, function shen_user_lambda7045(Arg7044) {
  if (Arg7044.length < 2) return [Shen.type_func, shen_user_lambda7045, 2, Arg7044];
  var Arg7044_0 = Arg7044[0], Arg7044_1 = Arg7044[1];
  return ((Shen.call(Shen.fns["element?"], [Arg7044_0, Arg7044_1]))
  ? Arg7044_1
  : [Shen.type_cons, Arg7044_0, Arg7044_1])}, 2, [], "adjoin"];





Shen.call_toplevel(function js$dot$shen_js_toplevel7048(Arg7046) {
  if (Arg7046.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7048, 0, Arg7046];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], [Shen.type_cons, [Shen.type_symbol, "!"], [Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "<--"], [Shen.type_cons, [Shen.type_symbol, "&&"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "*language*"], [Shen.type_cons, [Shen.type_symbol, "*implementation*"], [Shen.type_cons, [Shen.type_symbol, "*stinput*"], [Shen.type_cons, [Shen.type_symbol, "*home-directory*"], [Shen.type_cons, [Shen.type_symbol, "*version*"], [Shen.type_cons, [Shen.type_symbol, "*maximum-print-sequence-size*"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_symbol, "*os*"], [Shen.type_cons, [Shen.type_symbol, "*release*"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "*port*"], [Shen.type_cons, [Shen.type_symbol, "*porters*"], [Shen.type_cons, [Shen.type_symbol, "*hush*"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, [Shen.type_symbol, "=!"], [Shen.type_cons, [Shen.type_symbol, "$"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, Shen.vector(0), [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "write-byte"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "when"], [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "verified"], [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "unit"], [Shen.type_cons, [Shen.type_symbol, "shen.unix"], [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, true, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "time"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "synonyms"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "save"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "run"], [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "release"], [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_symbol, "read+"], [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "quit"], [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "prolog?"], [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "porters"], [Shen.type_cons, [Shen.type_symbol, "port"], [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "output"], [Shen.type_cons, [Shen.type_symbol, "out"], [Shen.type_cons, [Shen.type_symbol, "os"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_symbol, "macro"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_symbol, "make-string"], [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "loaded"], [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "language"], [Shen.type_cons, [Shen.type_symbol, "kill"], [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_symbol, "implementation"], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_symbol, "file"], [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, false, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "defprolog"], [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, [Shen.type_symbol, "datatype"], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "cond"], [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "cases"], [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "bar!"], [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "abort"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], (Shen.globals["*property-vector*"])]);})});




Shen.fns["specialise"] = [Shen.type_func, function shen_user_lambda7050(Arg7049) {
  if (Arg7049.length < 1) return [Shen.type_func, shen_user_lambda7050, 1, Arg7049];
  var Arg7049_0 = Arg7049[0];
  return ((Shen.globals["shen.*special*"] = [Shen.type_cons, Arg7049_0, (Shen.globals["shen.*special*"])]),
  Arg7049_0)}, 1, [], "specialise"];





Shen.fns["unspecialise"] = [Shen.type_func, function shen_user_lambda7052(Arg7051) {
  if (Arg7051.length < 1) return [Shen.type_func, shen_user_lambda7052, 1, Arg7051];
  var Arg7051_0 = Arg7051[0];
  return ((Shen.globals["shen.*special*"] = Shen.call(Shen.fns["remove"], [Arg7051_0, (Shen.globals["shen.*special*"])])),
  Arg7051_0)}, 1, [], "unspecialise"];










Shen.fns["load"] = [Shen.type_func, function shen_user_lambda7055(Arg7054) {
  if (Arg7054.length < 1) return [Shen.type_func, shen_user_lambda7055, 1, Arg7054];
  var Arg7054_0 = Arg7054[0];
  var R0, R1, R2;
  return (((R0 = Shen.get_time([Shen.type_symbol, "run"])),
  (R1 = Shen.call(Shen.fns["shen.load-help"], [(Shen.globals["shen.*tc*"]), Shen.call(Shen.fns["read-file"], [Arg7054_0])])),
  (R2 = Shen.get_time([Shen.type_symbol, "run"])),
  (R2 = (R2 - R0)),
  Shen.call(Shen.fns["shen.prhush"], [("\x0d\x0arun time: " + (Shen.str(R2) + " secs\x0d\x0a")), Shen.call(Shen.fns["stoutput"], [])]),
  R1),
  (((Shen.globals["shen.*tc*"]))
  ? Shen.call(Shen.fns["shen.prhush"], [("\x0d\x0atypechecked in " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["inferences"], []), " inferences\x0d\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])])
  : [Shen.type_symbol, "shen.skip"]),
  [Shen.type_symbol, "loaded"])}, 1, [], "load"];





Shen.fns["shen.load-help"] = [Shen.type_func, function shen_user_lambda7059(Arg7056) {
  if (Arg7056.length < 2) return [Shen.type_func, shen_user_lambda7059, 2, Arg7056];
  var Arg7056_0 = Arg7056[0], Arg7056_1 = Arg7056[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg7056_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7061(Arg7060) {
  if (Arg7060.length < 1) return [Shen.type_func, shen_user_lambda7061, 1, Arg7060];
  var Arg7060_0 = Arg7060[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7060_0]), "\x0d\x0a", [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Arg7056_1]);})
  : ((R0 = Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda7063(Arg7062) {
  if (Arg7062.length < 1) return [Shen.type_func, shen_user_lambda7063, 1, Arg7062];
  var Arg7062_0 = Arg7062[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remove-synonyms"], [Arg7062_0]);})}, 1, [], undefined], Arg7056_1])),
  (R1 = Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda7065(Arg7064) {
  if (Arg7064.length < 1) return [Shen.type_func, shen_user_lambda7065, 1, Arg7064];
  var Arg7064_0 = Arg7064[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.typetable"], [Arg7064_0]);})}, 1, [], undefined], R0])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7067(Arg7066) {
  if (Arg7066.length < 1) return [Shen.type_func, shen_user_lambda7067, 1, Arg7066];
  var Arg7066_0 = Arg7066[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.assumetype"], [Arg7066_0]);})}, 1, [], undefined], R1]),
  (R0 = [Shen.type_func, function shen_user_lambda7069(Arg7068) {
  if (Arg7068.length < 2) return [Shen.type_func, shen_user_lambda7069, 2, Arg7068];
  var Arg7068_0 = Arg7068[0], Arg7068_1 = Arg7068[1];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7071(Arg7070) {
  if (Arg7070.length < 1) return [Shen.type_func, shen_user_lambda7071, 1, Arg7070];
  var Arg7070_0 = Arg7070[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-load"], [Arg7070_0]);})}, 1, [], undefined], Arg7068_0]);})}, 2, [R0, R1], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7073(Arg7072) {
  if (Arg7072.length < 2) return [Shen.type_func, shen_user_lambda7073, 2, Arg7072];
  var Arg7072_0 = Arg7072[0], Arg7072_1 = Arg7072[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg7072_1, Arg7072_0]);})}, 2, [R1], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);})))}, 2, [], "shen.load-help"];





Shen.fns["shen.remove-synonyms"] = [Shen.type_func, function shen_user_lambda7075(Arg7074) {
  if (Arg7074.length < 1) return [Shen.type_func, shen_user_lambda7075, 1, Arg7074];
  var Arg7074_0 = Arg7074[0];
  return (((Shen.is_type(Arg7074_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], Arg7074_0[1]))))
  ? (Shen.call(Shen.fns["eval"], [Arg7074_0]),
  [])
  : [Shen.type_cons, Arg7074_0, []])}, 1, [], "shen.remove-synonyms"];





Shen.fns["shen.typecheck-and-load"] = [Shen.type_func, function shen_user_lambda7077(Arg7076) {
  if (Arg7076.length < 1) return [Shen.type_func, shen_user_lambda7077, 1, Arg7076];
  var Arg7076_0 = Arg7076[0];
  return (Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg7076_0, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);}))}, 1, [], "shen.typecheck-and-load"];





Shen.fns["shen.typetable"] = [Shen.type_func, function shen_user_lambda7079(Arg7078) {
  if (Arg7078.length < 1) return [Shen.type_func, shen_user_lambda7079, 1, Arg7078];
  var Arg7078_0 = Arg7078[0];
  var R0;
  return (((Shen.is_type(Arg7078_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg7078_0[1])) && Shen.is_type(Arg7078_0[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda7081(Arg7080) {
  if (Arg7080.length < 1) return [Shen.type_func, shen_user_lambda7081, 1, Arg7080];
  var Arg7080_0 = Arg7080[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<sig+rest>"], [Arg7080_0]);})}, 1, [], undefined], Arg7078_0[2][2], []])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7078_0[2][1], " lacks a proper signature.\x0d\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [Shen.type_cons, [Shen.type_cons, Arg7078_0[2][1], R0], []]))
  : (((Shen.is_type(Arg7078_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7078_0[1])) && (Shen.is_type(Arg7078_0[2], Shen.type_cons) && (Shen.is_type(Arg7078_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg7078_0[2][2][1])) && (Shen.is_type(Arg7078_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg7078_0[2][2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg7078_0[2][2][2][1][1])) && (Shen.is_type(Arg7078_0[2][2][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg7078_0[2][2][2][1][2][2]) && (Shen.is_type(Arg7078_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg7078_0[2][2][2][2][1])) && (Shen.is_type(Arg7078_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg7078_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg7078_0[2][2][2][2][2][2][1])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg7078_0[2][1], [Shen.type_cons, Arg7078_0[2][2][2][1], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg7078_0[2][2][2][2][2][1], []]]]], []]
  : (((Shen.is_type(Arg7078_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7078_0[1])) && Shen.is_type(Arg7078_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7078_0[2][1], " lacks a proper signature.\x0d\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [])))}, 1, [], "shen.typetable"];





Shen.fns["shen.assumetype"] = [Shen.type_func, function shen_user_lambda7083(Arg7082) {
  if (Arg7082.length < 1) return [Shen.type_func, shen_user_lambda7083, 1, Arg7082];
  var Arg7082_0 = Arg7082[0];
  return ((Shen.is_type(Arg7082_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg7082_0[1], Arg7082_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.assumetype"]]);}))}, 1, [], "shen.assumetype"];





Shen.fns["shen.unwind-types"] = [Shen.type_func, function shen_user_lambda7085(Arg7084) {
  if (Arg7084.length < 2) return [Shen.type_func, shen_user_lambda7085, 2, Arg7084];
  var Arg7084_0 = Arg7084[0], Arg7084_1 = Arg7084[1];
  return ((Shen.empty$question$(Arg7084_1))
  ? (function() {
  return Shen.simple_error(Shen.error_to_string(Arg7084_0));})
  : (((Shen.is_type(Arg7084_1, Shen.type_cons) && Shen.is_type(Arg7084_1[1], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.remtype"], [Arg7084_1[1][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg7084_0, Arg7084_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.unwind-types"]]);})))}, 2, [], "shen.unwind-types"];





Shen.fns["shen.remtype"] = [Shen.type_func, function shen_user_lambda7087(Arg7086) {
  if (Arg7086.length < 1) return [Shen.type_func, shen_user_lambda7087, 1, Arg7086];
  var Arg7086_0 = Arg7086[0];
  return (Shen.globals["shen.*signedfuncs*"] = Shen.call(Shen.fns["shen.removetype"], [Arg7086_0, (Shen.globals["shen.*signedfuncs*"])]))}, 1, [], "shen.remtype"];





Shen.fns["shen.removetype"] = [Shen.type_func, function shen_user_lambda7089(Arg7088) {
  if (Arg7088.length < 2) return [Shen.type_func, shen_user_lambda7089, 2, Arg7088];
  var Arg7088_0 = Arg7088[0], Arg7088_1 = Arg7088[1];
  return ((Shen.empty$question$(Arg7088_1))
  ? []
  : (((Shen.is_type(Arg7088_1, Shen.type_cons) && (Shen.is_type(Arg7088_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7088_1[1][1], Arg7088_0)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.removetype"], [Arg7088_1[1][1], Arg7088_1[2]]);})
  : ((Shen.is_type(Arg7088_1, Shen.type_cons))
  ? [Shen.type_cons, Arg7088_1[1], Shen.call(Shen.fns["shen.removetype"], [Arg7088_0, Arg7088_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.removetype"]]);}))))}, 2, [], "shen.removetype"];





Shen.fns["shen.<sig+rest>"] = [Shen.type_func, function shen_user_lambda7091(Arg7090) {
  if (Arg7090.length < 1) return [Shen.type_func, shen_user_lambda7091, 1, Arg7090];
  var Arg7090_0 = Arg7090[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg7090_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["<!>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rest>"];





Shen.fns["write-to-file"] = [Shen.type_func, function shen_user_lambda7093(Arg7092) {
  if (Arg7092.length < 2) return [Shen.type_func, shen_user_lambda7093, 2, Arg7092];
  var Arg7092_0 = Arg7092[0], Arg7092_1 = Arg7092[1];
  var R0, R1;
  return ((R0 = Shen.open(Arg7092_0, [Shen.type_symbol, "out"])),
  (((typeof(Arg7092_1) == 'string'))
  ? (R1 = Shen.call(Shen.fns["shen.app"], [Arg7092_1, "\x0d\x0a\x0d\x0a", [Shen.type_symbol, "shen.a"]]))
  : (R1 = Shen.call(Shen.fns["shen.app"], [Arg7092_1, "\x0d\x0a\x0d\x0a", [Shen.type_symbol, "shen.s"]]))),
  Shen.call(Shen.fns["pr"], [R1, R0]),
  Shen.close(R0),
  Arg7092_1)}, 2, [], "write-to-file"];










Shen.fns["macroexpand"] = [Shen.type_func, function shen_user_lambda7096(Arg7095) {
  if (Arg7095.length < 1) return [Shen.type_func, shen_user_lambda7096, 1, Arg7095];
  var Arg7095_0 = Arg7095[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compose"], [(Shen.globals["*macros*"]), Arg7095_0])),
  ((Shen.unwind_tail(Shen.$eq$(Arg7095_0, R0)))
  ? Arg7095_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda7098(Arg7097) {
  if (Arg7097.length < 1) return [Shen.type_func, shen_user_lambda7098, 1, Arg7097];
  var Arg7097_0 = Arg7097[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg7097_0]);})}, 1, [], undefined], R0]);})))}, 1, [], "macroexpand"];





Shen.call_toplevel(function js$dot$shen_js_toplevel7101(Arg7099) {
  if (Arg7099.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7101, 0, Arg7099];
  return (Shen.globals["*macros*"] = [Shen.type_cons, [Shen.type_symbol, "shen.timer-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.cases-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.abs-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.put/get-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.compile-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.let-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.assoc-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.make-string-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.output-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.input-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.error-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.prolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.nl-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.@s-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.defprolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.function-macro"], []]]]]]]]]]]]]]]]]]])});




Shen.fns["shen.error-macro"] = [Shen.type_func, function shen_user_lambda7103(Arg7102) {
  if (Arg7102.length < 1) return [Shen.type_func, shen_user_lambda7103, 1, Arg7102];
  var Arg7102_0 = Arg7102[0];
  return (((Shen.is_type(Arg7102_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "error"], Arg7102_0[1])) && Shen.is_type(Arg7102_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg7102_0[2][1], Arg7102_0[2][2]]), []]]
  : Arg7102_0)}, 1, [], "shen.error-macro"];





Shen.fns["shen.output-macro"] = [Shen.type_func, function shen_user_lambda7105(Arg7104) {
  if (Arg7104.length < 1) return [Shen.type_func, shen_user_lambda7105, 1, Arg7104];
  var Arg7104_0 = Arg7104[0];
  return (((Shen.is_type(Arg7104_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "output"], Arg7104_0[1])) && Shen.is_type(Arg7104_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.prhush"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg7104_0[2][1], Arg7104_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]]
  : (((Shen.is_type(Arg7104_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pr"], Arg7104_0[1])) && (Shen.is_type(Arg7104_0[2], Shen.type_cons) && Shen.empty$question$(Arg7104_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, Arg7104_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]]
  : Arg7104_0))}, 1, [], "shen.output-macro"];





Shen.fns["shen.make-string-macro"] = [Shen.type_func, function shen_user_lambda7107(Arg7106) {
  if (Arg7106.length < 1) return [Shen.type_func, shen_user_lambda7107, 1, Arg7106];
  var Arg7106_0 = Arg7106[0];
  return (((Shen.is_type(Arg7106_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "make-string"], Arg7106_0[1])) && Shen.is_type(Arg7106_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr"], [Arg7106_0[2][1], Arg7106_0[2][2]]);})
  : Arg7106_0)}, 1, [], "shen.make-string-macro"];





Shen.fns["shen.input-macro"] = [Shen.type_func, function shen_user_lambda7109(Arg7108) {
  if (Arg7108.length < 1) return [Shen.type_func, shen_user_lambda7109, 1, Arg7108];
  var Arg7108_0 = Arg7108[0];
  return (((Shen.is_type(Arg7108_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lineread"], Arg7108_0[1])) && Shen.empty$question$(Arg7108_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : (((Shen.is_type(Arg7108_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input"], Arg7108_0[1])) && Shen.empty$question$(Arg7108_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : (((Shen.is_type(Arg7108_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read"], Arg7108_0[1])) && Shen.empty$question$(Arg7108_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : (((Shen.is_type(Arg7108_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg7108_0[1])) && (Shen.is_type(Arg7108_0[2], Shen.type_cons) && Shen.empty$question$(Arg7108_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Arg7108_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]]
  : (((Shen.is_type(Arg7108_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read-byte"], Arg7108_0[1])) && Shen.empty$question$(Arg7108_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : Arg7108_0)))))}, 1, [], "shen.input-macro"];





Shen.fns["shen.compose"] = [Shen.type_func, function shen_user_lambda7111(Arg7110) {
  if (Arg7110.length < 2) return [Shen.type_func, shen_user_lambda7111, 2, Arg7110];
  var Arg7110_0 = Arg7110[0], Arg7110_1 = Arg7110[1];
  return ((Shen.empty$question$(Arg7110_0))
  ? Arg7110_1
  : ((Shen.is_type(Arg7110_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.compose"], [Arg7110_0[2], Shen.call(Arg7110_0[1], [Arg7110_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compose"]]);})))}, 2, [], "shen.compose"];





Shen.fns["shen.compile-macro"] = [Shen.type_func, function shen_user_lambda7113(Arg7112) {
  if (Arg7112.length < 1) return [Shen.type_func, shen_user_lambda7113, 1, Arg7112];
  var Arg7112_0 = Arg7112[0];
  return (((Shen.is_type(Arg7112_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "compile"], Arg7112_0[1])) && (Shen.is_type(Arg7112_0[2], Shen.type_cons) && (Shen.is_type(Arg7112_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7112_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, Arg7112_0[2][1], [Shen.type_cons, Arg7112_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "E"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error here: ~S~%", [Shen.type_cons, [Shen.type_symbol, "E"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error~%", []]], []]]]], []]]], []]]]]
  : Arg7112_0)}, 1, [], "shen.compile-macro"];





Shen.fns["shen.prolog-macro"] = [Shen.type_func, function shen_user_lambda7115(Arg7114) {
  if (Arg7114.length < 1) return [Shen.type_func, shen_user_lambda7115, 1, Arg7114];
  var Arg7114_0 = Arg7114[0];
  var R0, R1;
  return (((Shen.is_type(Arg7114_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "prolog?"], Arg7114_0[1]))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.f"]])),
  (R1 = Shen.call(Shen.fns["shen.receive-terms"], [Arg7114_0[2]])),
  Shen.call(Shen.fns["eval"], [Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "defprolog"], [Shen.type_cons, R0, []]], Shen.call(Shen.fns["append"], [R1, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "<--"], []], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.pass-literals"], [Arg7114_0[2]]), [Shen.type_cons, [Shen.type_symbol, ";"], []]])])])])]),
  (R1 = [Shen.type_cons, R0, Shen.call(Shen.fns["append"], [R1, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.start-new-prolog-process"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, true, []]], []]]])]),
  R1)
  : Arg7114_0)}, 1, [], "shen.prolog-macro"];





Shen.fns["shen.receive-terms"] = [Shen.type_func, function shen_user_lambda7117(Arg7116) {
  if (Arg7116.length < 1) return [Shen.type_func, shen_user_lambda7117, 1, Arg7116];
  var Arg7116_0 = Arg7116[0];
  return ((Shen.empty$question$(Arg7116_0))
  ? []
  : (((Shen.is_type(Arg7116_0, Shen.type_cons) && (Shen.is_type(Arg7116_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "receive"], Arg7116_0[1][1])) && (Shen.is_type(Arg7116_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg7116_0[1][2][2]))))))
  ? [Shen.type_cons, Arg7116_0[1][2][1], Shen.call(Shen.fns["shen.receive-terms"], [Arg7116_0[2]])]
  : ((Shen.is_type(Arg7116_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.receive-terms"], [Arg7116_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.receive-terms"]]);}))))}, 1, [], "shen.receive-terms"];





Shen.fns["shen.pass-literals"] = [Shen.type_func, function shen_user_lambda7119(Arg7118) {
  if (Arg7118.length < 1) return [Shen.type_func, shen_user_lambda7119, 1, Arg7118];
  var Arg7118_0 = Arg7118[0];
  return ((Shen.empty$question$(Arg7118_0))
  ? []
  : (((Shen.is_type(Arg7118_0, Shen.type_cons) && (Shen.is_type(Arg7118_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "receive"], Arg7118_0[1][1])) && (Shen.is_type(Arg7118_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg7118_0[1][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pass-literals"], [Arg7118_0[2]]);})
  : ((Shen.is_type(Arg7118_0, Shen.type_cons))
  ? [Shen.type_cons, Arg7118_0[1], Shen.call(Shen.fns["shen.pass-literals"], [Arg7118_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.pass-literals"]]);}))))}, 1, [], "shen.pass-literals"];





Shen.fns["shen.defprolog-macro"] = [Shen.type_func, function shen_user_lambda7121(Arg7120) {
  if (Arg7120.length < 1) return [Shen.type_func, shen_user_lambda7121, 1, Arg7120];
  var Arg7120_0 = Arg7120[0];
  return (((Shen.is_type(Arg7120_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defprolog"], Arg7120_0[1])) && Shen.is_type(Arg7120_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda7123(Arg7122) {
  if (Arg7122.length < 1) return [Shen.type_func, shen_user_lambda7123, 1, Arg7122];
  var Arg7122_0 = Arg7122[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<defprolog>"], [Arg7122_0]);})}, 1, [], undefined], Arg7120_0[2], [Shen.type_func, function shen_user_lambda7125(Arg7124) {
  if (Arg7124.length < 2) return [Shen.type_func, shen_user_lambda7125, 2, Arg7124];
  var Arg7124_0 = Arg7124[0], Arg7124_1 = Arg7124[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-error"], [Arg7124_0[2][1], Arg7124_1]);})}, 2, [Arg7120_0], undefined]]);})
  : Arg7120_0)}, 1, [], "shen.defprolog-macro"];





Shen.fns["shen.datatype-macro"] = [Shen.type_func, function shen_user_lambda7127(Arg7126) {
  if (Arg7126.length < 1) return [Shen.type_func, shen_user_lambda7127, 1, Arg7126];
  var Arg7126_0 = Arg7126[0];
  return (((Shen.is_type(Arg7126_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "datatype"], Arg7126_0[1])) && Shen.is_type(Arg7126_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, Shen.call(Shen.fns["shen.intern-type"], [Arg7126_0[2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.<datatype-rules>"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7126_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-error"], []]], []]]]], []]]]
  : Arg7126_0)}, 1, [], "shen.datatype-macro"];





Shen.fns["shen.intern-type"] = [Shen.type_func, function shen_user_lambda7129(Arg7128) {
  if (Arg7128.length < 1) return [Shen.type_func, shen_user_lambda7129, 1, Arg7128];
  var Arg7128_0 = Arg7128[0];
  return (function() {
  return Shen.intern(("type#" + Shen.str(Arg7128_0)));})}, 1, [], "shen.intern-type"];










Shen.fns["shen.@s-macro"] = [Shen.type_func, function shen_user_lambda7132(Arg7131) {
  if (Arg7131.length < 1) return [Shen.type_func, shen_user_lambda7132, 1, Arg7131];
  var Arg7131_0 = Arg7131[0];
  var R0;
  return (((Shen.is_type(Arg7131_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg7131_0[1])) && (Shen.is_type(Arg7131_0[2], Shen.type_cons) && (Shen.is_type(Arg7131_0[2][2], Shen.type_cons) && Shen.is_type(Arg7131_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Arg7131_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Arg7131_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg7131_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg7131_0[1])) && (Shen.is_type(Arg7131_0[2], Shen.type_cons) && (Shen.is_type(Arg7131_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7131_0[2][2][2]) && (typeof(Arg7131_0[2][1]) == 'string')))))))
  ? ((R0 = Shen.call(Shen.fns["explode"], [Arg7131_0[2][1]])),
  (((Shen.call(Shen.fns["length"], [R0]) > 1))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Shen.call(Shen.fns["append"], [R0, Arg7131_0[2][2]])]]);})
  : Arg7131_0))
  : Arg7131_0))}, 1, [], "shen.@s-macro"];





Shen.fns["shen.synonyms-macro"] = [Shen.type_func, function shen_user_lambda7134(Arg7133) {
  if (Arg7133.length < 1) return [Shen.type_func, shen_user_lambda7134, 1, Arg7133];
  var Arg7133_0 = Arg7133[0];
  return (((Shen.is_type(Arg7133_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "synonyms"], Arg7133_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-help"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.curry-synonyms"], [Arg7133_0[2]])]), []]]
  : Arg7133_0)}, 1, [], "shen.synonyms-macro"];





Shen.fns["shen.curry-synonyms"] = [Shen.type_func, function shen_user_lambda7136(Arg7135) {
  if (Arg7135.length < 1) return [Shen.type_func, shen_user_lambda7136, 1, Arg7135];
  var Arg7135_0 = Arg7135[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7138(Arg7137) {
  if (Arg7137.length < 1) return [Shen.type_func, shen_user_lambda7138, 1, Arg7137];
  var Arg7137_0 = Arg7137[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [Arg7137_0]);})}, 1, [], undefined], Arg7135_0]);})}, 1, [], "shen.curry-synonyms"];





Shen.fns["shen.nl-macro"] = [Shen.type_func, function shen_user_lambda7140(Arg7139) {
  if (Arg7139.length < 1) return [Shen.type_func, shen_user_lambda7140, 1, Arg7139];
  var Arg7139_0 = Arg7139[0];
  return (((Shen.is_type(Arg7139_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "nl"], Arg7139_0[1])) && Shen.empty$question$(Arg7139_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, 1, []]]
  : Arg7139_0)}, 1, [], "shen.nl-macro"];





Shen.fns["shen.assoc-macro"] = [Shen.type_func, function shen_user_lambda7142(Arg7141) {
  if (Arg7141.length < 1) return [Shen.type_func, shen_user_lambda7142, 1, Arg7141];
  var Arg7141_0 = Arg7141[0];
  return (((Shen.is_type(Arg7141_0, Shen.type_cons) && (Shen.is_type(Arg7141_0[2], Shen.type_cons) && (Shen.is_type(Arg7141_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7141_0[2][2][2], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg7141_0[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "do"], []]]]]]]]]]))))))
  ? [Shen.type_cons, Arg7141_0[1], [Shen.type_cons, Arg7141_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assoc-macro"], [[Shen.type_cons, Arg7141_0[1], Arg7141_0[2][2]]]), []]]]
  : Arg7141_0)}, 1, [], "shen.assoc-macro"];





Shen.fns["shen.let-macro"] = [Shen.type_func, function shen_user_lambda7144(Arg7143) {
  if (Arg7143.length < 1) return [Shen.type_func, shen_user_lambda7144, 1, Arg7143];
  var Arg7143_0 = Arg7143[0];
  return (((Shen.is_type(Arg7143_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg7143_0[1])) && (Shen.is_type(Arg7143_0[2], Shen.type_cons) && (Shen.is_type(Arg7143_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7143_0[2][2][2], Shen.type_cons) && Shen.is_type(Arg7143_0[2][2][2][2], Shen.type_cons)))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg7143_0[2][1], [Shen.type_cons, Arg7143_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], Arg7143_0[2][2][2]]]), []]]]]
  : Arg7143_0)}, 1, [], "shen.let-macro"];





Shen.fns["shen.abs-macro"] = [Shen.type_func, function shen_user_lambda7146(Arg7145) {
  if (Arg7145.length < 1) return [Shen.type_func, shen_user_lambda7146, 1, Arg7145];
  var Arg7145_0 = Arg7145[0];
  return (((Shen.is_type(Arg7145_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg7145_0[1])) && (Shen.is_type(Arg7145_0[2], Shen.type_cons) && (Shen.is_type(Arg7145_0[2][2], Shen.type_cons) && Shen.is_type(Arg7145_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg7145_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.abs-macro"], [[Shen.type_cons, [Shen.type_symbol, "/."], Arg7145_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg7145_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg7145_0[1])) && (Shen.is_type(Arg7145_0[2], Shen.type_cons) && (Shen.is_type(Arg7145_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7145_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], Arg7145_0[2]]
  : Arg7145_0))}, 1, [], "shen.abs-macro"];





Shen.fns["shen.cases-macro"] = [Shen.type_func, function shen_user_lambda7148(Arg7147) {
  if (Arg7147.length < 1) return [Shen.type_func, shen_user_lambda7148, 1, Arg7147];
  var Arg7147_0 = Arg7147[0];
  return (((Shen.is_type(Arg7147_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg7147_0[1])) && (Shen.is_type(Arg7147_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg7147_0[2][1])) && Shen.is_type(Arg7147_0[2][2], Shen.type_cons))))))
  ? Arg7147_0[2][2][1]
  : (((Shen.is_type(Arg7147_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg7147_0[1])) && (Shen.is_type(Arg7147_0[2], Shen.type_cons) && (Shen.is_type(Arg7147_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7147_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg7147_0[2][1], [Shen.type_cons, Arg7147_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, "error: cases exhausted", []]], []]]]]
  : (((Shen.is_type(Arg7147_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg7147_0[1])) && (Shen.is_type(Arg7147_0[2], Shen.type_cons) && Shen.is_type(Arg7147_0[2][2], Shen.type_cons)))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg7147_0[2][1], [Shen.type_cons, Arg7147_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.cases-macro"], [[Shen.type_cons, [Shen.type_symbol, "cases"], Arg7147_0[2][2][2]]]), []]]]]
  : (((Shen.is_type(Arg7147_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg7147_0[1])) && (Shen.is_type(Arg7147_0[2], Shen.type_cons) && Shen.empty$question$(Arg7147_0[2][2])))))
  ? (function() {
  return Shen.simple_error("error: odd number of case elements\x0d\x0a");})
  : Arg7147_0))))}, 1, [], "shen.cases-macro"];





Shen.fns["shen.timer-macro"] = [Shen.type_func, function shen_user_lambda7150(Arg7149) {
  if (Arg7149.length < 1) return [Shen.type_func, shen_user_lambda7150, 1, Arg7149];
  var Arg7149_0 = Arg7149[0];
  return (((Shen.is_type(Arg7149_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "time"], Arg7149_0[1])) && (Shen.is_type(Arg7149_0[2], Shen.type_cons) && Shen.empty$question$(Arg7149_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7149_0[2][1], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Time"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_symbol, "Message"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.prhush"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, "\x0d\x0arun time: ", [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "Time"], []]], [Shen.type_cons, " secs\x0d\x0a", []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]]]]]]]]]]]);})
  : Arg7149_0)}, 1, [], "shen.timer-macro"];





Shen.fns["shen.tuple-up"] = [Shen.type_func, function shen_user_lambda7152(Arg7151) {
  if (Arg7151.length < 1) return [Shen.type_func, shen_user_lambda7152, 1, Arg7151];
  var Arg7151_0 = Arg7151[0];
  return ((Shen.is_type(Arg7151_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Arg7151_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.tuple-up"], [Arg7151_0[2]]), []]]]
  : Arg7151_0)}, 1, [], "shen.tuple-up"];





Shen.fns["shen.put/get-macro"] = [Shen.type_func, function shen_user_lambda7154(Arg7153) {
  if (Arg7153.length < 1) return [Shen.type_func, shen_user_lambda7154, 1, Arg7153];
  var Arg7153_0 = Arg7153[0];
  return (((Shen.is_type(Arg7153_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "put"], Arg7153_0[1])) && (Shen.is_type(Arg7153_0[2], Shen.type_cons) && (Shen.is_type(Arg7153_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7153_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7153_0[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, Arg7153_0[2][1], [Shen.type_cons, Arg7153_0[2][2][1], [Shen.type_cons, Arg7153_0[2][2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]]
  : (((Shen.is_type(Arg7153_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "get"], Arg7153_0[1])) && (Shen.is_type(Arg7153_0[2], Shen.type_cons) && (Shen.is_type(Arg7153_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7153_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, Arg7153_0[2][1], [Shen.type_cons, Arg7153_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]
  : Arg7153_0))}, 1, [], "shen.put/get-macro"];





Shen.fns["shen.function-macro"] = [Shen.type_func, function shen_user_lambda7156(Arg7155) {
  if (Arg7155.length < 1) return [Shen.type_func, shen_user_lambda7156, 1, Arg7155];
  var Arg7155_0 = Arg7155[0];
  return (((Shen.is_type(Arg7155_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg7155_0[1])) && (Shen.is_type(Arg7155_0[2], Shen.type_cons) && Shen.empty$question$(Arg7155_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction"], [Arg7155_0[2][1], Shen.call(Shen.fns["arity"], [Arg7155_0[2][1]])]);})
  : Arg7155_0)}, 1, [], "shen.function-macro"];





Shen.fns["shen.function-abstraction"] = [Shen.type_func, function shen_user_lambda7158(Arg7157) {
  if (Arg7157.length < 2) return [Shen.type_func, shen_user_lambda7158, 2, Arg7157];
  var Arg7157_0 = Arg7157[0], Arg7157_1 = Arg7157[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7157_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Arg7157_0, []]]
  : ((Shen.unwind_tail(Shen.$eq$(-1, Arg7157_1)))
  ? Arg7157_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction-help"], [Arg7157_0, Arg7157_1, []]);})))}, 2, [], "shen.function-abstraction"];





Shen.fns["shen.function-abstraction-help"] = [Shen.type_func, function shen_user_lambda7160(Arg7159) {
  if (Arg7159.length < 3) return [Shen.type_func, shen_user_lambda7160, 3, Arg7159];
  var Arg7159_0 = Arg7159[0], Arg7159_1 = Arg7159[1], Arg7159_2 = Arg7159[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7159_1)))
  ? [Shen.type_cons, Arg7159_0, Arg7159_2]
  : ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["shen.function-abstraction-help"], [Arg7159_0, (Arg7159_1 - 1), Shen.call(Shen.fns["append"], [Arg7159_2, [Shen.type_cons, R0, []]])]), []]]]))}, 3, [], "shen.function-abstraction-help"];





Shen.fns["undefmacro"] = [Shen.type_func, function shen_user_lambda7162(Arg7161) {
  if (Arg7161.length < 1) return [Shen.type_func, shen_user_lambda7162, 1, Arg7161];
  var Arg7161_0 = Arg7161[0];
  return ((Shen.globals["*macros*"] = Shen.call(Shen.fns["remove"], [Arg7161_0, (Shen.globals["*macros*"])])),
  Arg7161_0)}, 1, [], "undefmacro"];










Shen.fns["declare"] = [Shen.type_func, function shen_user_lambda8138(Arg8135) {
  if (Arg8135.length < 2) return [Shen.type_func, shen_user_lambda8138, 2, Arg8135];
  var Arg8135_0 = Arg8135[0], Arg8135_1 = Arg8135[1];
  var R0, R1, R2;
  return ((Shen.globals["shen.*signedfuncs*"] = [Shen.type_cons, [Shen.type_cons, Arg8135_0, Arg8135_1], (Shen.globals["shen.*signedfuncs*"])]),
  ((R0 = [Shen.type_func, function shen_user_lambda8140(Arg8139) {
  if (Arg8139.length < 2) return [Shen.type_func, shen_user_lambda8140, 2, Arg8139];
  var Arg8139_0 = Arg8139[0], Arg8139_1 = Arg8139[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.variancy-test"], [Arg8139_1, Arg8139_0]);})}, 2, [Arg8135_1, Arg8135_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda8142(Arg8141) {
  if (Arg8141.length < 1) return [Shen.type_func, shen_user_lambda8142, 1, Arg8141];
  var Arg8141_0 = Arg8141[0];
  return [Shen.type_symbol, "shen.skip"]}, 1, [], undefined]),
  Shen.trap_error(R0, R1)),
  (R0 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.demodulate"], [Arg8135_1])])),
  (R1 = Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg8135_0])),
  (R2 = Shen.call(Shen.fns["shen.parameters"], [1])),
  (R0 = [Shen.type_cons, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "X"], []]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, R0, []]]], []], []]]]),
  (R0 = Shen.call(Shen.fns["shen.aum"], [R0, R2])),
  (R0 = Shen.call(Shen.fns["shen.aum_to_shen"], [R0])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, R1, Shen.call(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R2]),
  Arg8135_0)}, 2, [], "declare"];





Shen.fns["shen.demodulate"] = [Shen.type_func, function shen_user_lambda8146(Arg8143) {
  if (Arg8143.length < 1) return [Shen.type_func, shen_user_lambda8146, 1, Arg8143];
  var Arg8143_0 = Arg8143[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda8148(Arg8147) {
  if (Arg8147.length < 1) return [Shen.type_func, shen_user_lambda8148, 1, Arg8147];
  var Arg8147_0 = Arg8147[0];
  var R0, R1;
  return ((R1 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda8150(Arg8149) {
  if (Arg8149.length < 1) return [Shen.type_func, shen_user_lambda8150, 1, Arg8149];
  var Arg8149_0 = Arg8149[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.demod"], [Arg8149_0]);})}, 1, [], undefined], Arg8147_0])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Arg8147_0)))
  ? Arg8147_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.demodulate"], [R1]);})))}, 1, [Arg8143_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda8152(Arg8151) {
  if (Arg8151.length < 2) return [Shen.type_func, shen_user_lambda8152, 2, Arg8151];
  var Arg8151_0 = Arg8151[0], Arg8151_1 = Arg8151[1];
  return Arg8151_0}, 2, [Arg8143_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "shen.demodulate"];





Shen.fns["shen.variancy-test"] = [Shen.type_func, function shen_user_lambda8154(Arg8153) {
  if (Arg8153.length < 2) return [Shen.type_func, shen_user_lambda8154, 2, Arg8153];
  var Arg8153_0 = Arg8153[0], Arg8153_1 = Arg8153[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg8153_0, [Shen.type_symbol, "B"]])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.call(Shen.fns["shen.variant?"], [R0, Arg8153_1]))
  ? [Shen.type_symbol, "shen.skip"]
  : Shen.call(Shen.fns["shen.prhush"], [("warning: changing the type of " + Shen.call(Shen.fns["shen.app"], [Arg8153_0, " may create errors\x0d\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]))),
  [Shen.type_symbol, "shen.skip"])}, 2, [], "shen.variancy-test"];





Shen.fns["shen.variant?"] = [Shen.type_func, function shen_user_lambda8156(Arg8155) {
  if (Arg8155.length < 2) return [Shen.type_func, shen_user_lambda8156, 2, Arg8155];
  var Arg8155_0 = Arg8155[0], Arg8155_1 = Arg8155[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg8155_1, Arg8155_0)))
  ? true
  : (((Shen.is_type(Arg8155_0, Shen.type_cons) && (Shen.is_type(Arg8155_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg8155_1[1], Arg8155_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Arg8155_0[2], Arg8155_1[2]]);})
  : (((Shen.is_type(Arg8155_0, Shen.type_cons) && (Shen.is_type(Arg8155_1, Shen.type_cons) && (Shen.call(Shen.fns["shen.pvar?"], [Arg8155_0[1]]) && Shen.call(Shen.fns["variable?"], [Arg8155_1[1]])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg8155_0[1], Arg8155_0[2]]), Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg8155_1[1], Arg8155_1[2]])]);})
  : (((Shen.is_type(Arg8155_0, Shen.type_cons) && (Shen.is_type(Arg8155_0[1], Shen.type_cons) && (Shen.is_type(Arg8155_1, Shen.type_cons) && Shen.is_type(Arg8155_1[1], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["append"], [Arg8155_0[1], Arg8155_0[2]]), Shen.call(Shen.fns["append"], [Arg8155_1[1], Arg8155_1[2]])]);})
  : false))))}, 2, [], "shen.variant?"];





Shen.call_toplevel(function js$dot$shen_js_toplevel8159(Arg8157) {
  if (Arg8157.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8159, 0, Arg8157];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8162(Arg8160) {
  if (Arg8160.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8162, 0, Arg8160];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8165(Arg8163) {
  if (Arg8163.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8165, 0, Arg8163];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8168(Arg8166) {
  if (Arg8166.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8168, 0, Arg8166];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.app"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8171(Arg8169) {
  if (Arg8169.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8171, 0, Arg8169];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8174(Arg8172) {
  if (Arg8172.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8174, 0, Arg8172];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8177(Arg8175) {
  if (Arg8175.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8177, 0, Arg8175];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8180(Arg8178) {
  if (Arg8178.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8180, 0, Arg8178];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8183(Arg8181) {
  if (Arg8181.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8183, 0, Arg8181];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8186(Arg8184) {
  if (Arg8184.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8186, 0, Arg8184];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8189(Arg8187) {
  if (Arg8187.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8189, 0, Arg8187];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8192(Arg8190) {
  if (Arg8190.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8192, 0, Arg8190];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8195(Arg8193) {
  if (Arg8193.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8195, 0, Arg8193];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8198(Arg8196) {
  if (Arg8196.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8198, 0, Arg8196];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8201(Arg8199) {
  if (Arg8199.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8201, 0, Arg8199];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8204(Arg8202) {
  if (Arg8202.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8204, 0, Arg8202];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8207(Arg8205) {
  if (Arg8205.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8207, 0, Arg8205];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8210(Arg8208) {
  if (Arg8208.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8210, 0, Arg8208];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8213(Arg8211) {
  if (Arg8211.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8213, 0, Arg8211];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<!>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8216(Arg8214) {
  if (Arg8214.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8216, 0, Arg8214];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8219(Arg8217) {
  if (Arg8217.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8219, 0, Arg8217];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8222(Arg8220) {
  if (Arg8220.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8222, 0, Arg8220];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8225(Arg8223) {
  if (Arg8223.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8225, 0, Arg8223];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8228(Arg8226) {
  if (Arg8226.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8228, 0, Arg8226];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8231(Arg8229) {
  if (Arg8229.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8231, 0, Arg8229];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "string"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8234(Arg8232) {
  if (Arg8232.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8234, 0, Arg8232];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8237(Arg8235) {
  if (Arg8235.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8237, 0, Arg8235];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8240(Arg8238) {
  if (Arg8238.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8240, 0, Arg8238];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8243(Arg8241) {
  if (Arg8241.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8243, 0, Arg8241];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8246(Arg8244) {
  if (Arg8244.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8246, 0, Arg8244];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8249(Arg8247) {
  if (Arg8247.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8249, 0, Arg8247];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8252(Arg8250) {
  if (Arg8250.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8252, 0, Arg8250];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8255(Arg8253) {
  if (Arg8253.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8255, 0, Arg8253];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8258(Arg8256) {
  if (Arg8256.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8258, 0, Arg8256];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8261(Arg8259) {
  if (Arg8259.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8261, 0, Arg8259];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8264(Arg8262) {
  if (Arg8262.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8264, 0, Arg8262];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8267(Arg8265) {
  if (Arg8265.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8267, 0, Arg8265];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8270(Arg8268) {
  if (Arg8268.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8270, 0, Arg8268];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8273(Arg8271) {
  if (Arg8271.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8273, 0, Arg8271];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8276(Arg8274) {
  if (Arg8274.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8276, 0, Arg8274];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "implementation"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8279(Arg8277) {
  if (Arg8277.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8279, 0, Arg8277];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8282(Arg8280) {
  if (Arg8280.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8282, 0, Arg8280];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8285(Arg8283) {
  if (Arg8283.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8285, 0, Arg8283];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8288(Arg8286) {
  if (Arg8286.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8288, 0, Arg8286];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.insert"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8291(Arg8289) {
  if (Arg8289.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8291, 0, Arg8289];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8294(Arg8292) {
  if (Arg8292.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8294, 0, Arg8292];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8297(Arg8295) {
  if (Arg8295.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8297, 0, Arg8295];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "language"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8300(Arg8298) {
  if (Arg8298.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8300, 0, Arg8298];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8303(Arg8301) {
  if (Arg8301.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8303, 0, Arg8301];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8306(Arg8304) {
  if (Arg8304.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8306, 0, Arg8304];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8309(Arg8307) {
  if (Arg8307.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8309, 0, Arg8307];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8312(Arg8310) {
  if (Arg8310.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8312, 0, Arg8310];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8315(Arg8313) {
  if (Arg8313.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8315, 0, Arg8313];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8318(Arg8316) {
  if (Arg8316.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8318, 0, Arg8316];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8321(Arg8319) {
  if (Arg8319.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8321, 0, Arg8319];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8324(Arg8322) {
  if (Arg8322.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8324, 0, Arg8322];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8327(Arg8325) {
  if (Arg8325.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8327, 0, Arg8325];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8330(Arg8328) {
  if (Arg8328.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8330, 0, Arg8328];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8333(Arg8331) {
  if (Arg8331.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8333, 0, Arg8331];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8336(Arg8334) {
  if (Arg8334.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8336, 0, Arg8334];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8339(Arg8337) {
  if (Arg8337.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8339, 0, Arg8337];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "optimise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8342(Arg8340) {
  if (Arg8340.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8342, 0, Arg8340];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8345(Arg8343) {
  if (Arg8343.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8345, 0, Arg8343];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "os"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8348(Arg8346) {
  if (Arg8346.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8348, 0, Arg8346];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "port"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8351(Arg8349) {
  if (Arg8349.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8351, 0, Arg8349];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "porters"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8354(Arg8352) {
  if (Arg8352.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8354, 0, Arg8352];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8357(Arg8355) {
  if (Arg8355.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8357, 0, Arg8355];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8360(Arg8358) {
  if (Arg8358.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8360, 0, Arg8358];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8363(Arg8361) {
  if (Arg8361.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8363, 0, Arg8361];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8366(Arg8364) {
  if (Arg8364.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8366, 0, Arg8364];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8369(Arg8367) {
  if (Arg8367.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8369, 0, Arg8367];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8372(Arg8370) {
  if (Arg8370.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8372, 0, Arg8370];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8375(Arg8373) {
  if (Arg8373.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8375, 0, Arg8373];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8378(Arg8376) {
  if (Arg8376.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8378, 0, Arg8376];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8381(Arg8379) {
  if (Arg8379.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8381, 0, Arg8379];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.prhush"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8384(Arg8382) {
  if (Arg8382.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8384, 0, Arg8382];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8387(Arg8385) {
  if (Arg8385.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8387, 0, Arg8385];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8390(Arg8388) {
  if (Arg8388.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8390, 0, Arg8388];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8393(Arg8391) {
  if (Arg8391.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8393, 0, Arg8391];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8396(Arg8394) {
  if (Arg8394.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8396, 0, Arg8394];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8399(Arg8397) {
  if (Arg8397.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8399, 0, Arg8397];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8402(Arg8400) {
  if (Arg8400.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8402, 0, Arg8400];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "release"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8405(Arg8403) {
  if (Arg8403.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8405, 0, Arg8403];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8408(Arg8406) {
  if (Arg8406.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8408, 0, Arg8406];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8411(Arg8409) {
  if (Arg8409.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8411, 0, Arg8409];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8414(Arg8412) {
  if (Arg8412.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8414, 0, Arg8412];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8417(Arg8415) {
  if (Arg8415.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8417, 0, Arg8415];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8420(Arg8418) {
  if (Arg8418.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8420, 0, Arg8418];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8423(Arg8421) {
  if (Arg8421.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8423, 0, Arg8421];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8426(Arg8424) {
  if (Arg8424.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8426, 0, Arg8424];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8429(Arg8427) {
  if (Arg8427.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8429, 0, Arg8427];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8432(Arg8430) {
  if (Arg8430.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8432, 0, Arg8430];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8435(Arg8433) {
  if (Arg8433.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8435, 0, Arg8433];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8438(Arg8436) {
  if (Arg8436.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8438, 0, Arg8436];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8441(Arg8439) {
  if (Arg8439.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8441, 0, Arg8439];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8444(Arg8442) {
  if (Arg8442.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8444, 0, Arg8442];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "sum"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8447(Arg8445) {
  if (Arg8445.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8447, 0, Arg8445];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8450(Arg8448) {
  if (Arg8448.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8450, 0, Arg8448];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8453(Arg8451) {
  if (Arg8451.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8453, 0, Arg8451];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8456(Arg8454) {
  if (Arg8454.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8456, 0, Arg8454];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8459(Arg8457) {
  if (Arg8457.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8459, 0, Arg8457];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8462(Arg8460) {
  if (Arg8460.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8462, 0, Arg8460];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8465(Arg8463) {
  if (Arg8463.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8465, 0, Arg8463];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8468(Arg8466) {
  if (Arg8466.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8468, 0, Arg8466];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8471(Arg8469) {
  if (Arg8469.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8471, 0, Arg8469];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8474(Arg8472) {
  if (Arg8472.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8474, 0, Arg8472];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8477(Arg8475) {
  if (Arg8475.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8477, 0, Arg8475];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tuple?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8480(Arg8478) {
  if (Arg8478.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8480, 0, Arg8478];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8483(Arg8481) {
  if (Arg8481.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8483, 0, Arg8481];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8486(Arg8484) {
  if (Arg8484.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8486, 0, Arg8484];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8489(Arg8487) {
  if (Arg8487.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8489, 0, Arg8487];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8492(Arg8490) {
  if (Arg8490.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8492, 0, Arg8490];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8495(Arg8493) {
  if (Arg8493.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8495, 0, Arg8493];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8498(Arg8496) {
  if (Arg8496.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8498, 0, Arg8496];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8501(Arg8499) {
  if (Arg8499.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8501, 0, Arg8499];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8504(Arg8502) {
  if (Arg8502.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8504, 0, Arg8502];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8507(Arg8505) {
  if (Arg8505.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8507, 0, Arg8505];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "write-byte"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8510(Arg8508) {
  if (Arg8508.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8510, 0, Arg8508];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8513(Arg8511) {
  if (Arg8511.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8513, 0, Arg8511];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8516(Arg8514) {
  if (Arg8514.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8516, 0, Arg8514];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8519(Arg8517) {
  if (Arg8517.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8519, 0, Arg8517];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8522(Arg8520) {
  if (Arg8520.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8522, 0, Arg8520];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8525(Arg8523) {
  if (Arg8523.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8525, 0, Arg8523];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8528(Arg8526) {
  if (Arg8526.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8528, 0, Arg8526];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8531(Arg8529) {
  if (Arg8529.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8531, 0, Arg8529];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8534(Arg8532) {
  if (Arg8532.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8534, 0, Arg8532];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8537(Arg8535) {
  if (Arg8535.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8537, 0, Arg8535];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function js$dot$shen_js_toplevel8540(Arg8538) {
  if (Arg8538.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8540, 0, Arg8538];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});









Shen.fns["shen.typecheck"] = [Shen.type_func, function shen_user_lambda6313(Arg6312) {
  if (Arg6312.length < 2) return [Shen.type_func, shen_user_lambda6313, 2, Arg6312];
  var Arg6312_0 = Arg6312[0], Arg6312_1 = Arg6312[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.curry"], [Arg6312_0])),
  (R1 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (R2 = Shen.call(Shen.fns["shen.insert-prolog-variables"], [Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Arg6312_1])]), R1])),
  (R3 = [Shen.type_func, function shen_user_lambda6315(Arg6314) {
  if (Arg6314.length < 3) return [Shen.type_func, shen_user_lambda6315, 3, Arg6314];
  var Arg6314_0 = Arg6314[0], Arg6314_1 = Arg6314[1], Arg6314_2 = Arg6314[2];
  return (function() {
  return Shen.call_tail(Shen.fns["return"], [Arg6314_1, Arg6314_2, [Shen.type_symbol, "shen.void"]]);})}, 3, [R0, R2, R1], undefined]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R2, []]]], [], R1, R3]);}))}, 2, [], "shen.typecheck"];





Shen.fns["shen.curry"] = [Shen.type_func, function shen_user_lambda6317(Arg6316) {
  if (Arg6316.length < 1) return [Shen.type_func, shen_user_lambda6317, 1, Arg6316];
  var Arg6316_0 = Arg6316[0];
  return (((Shen.is_type(Arg6316_0, Shen.type_cons) && Shen.call(Shen.fns["shen.special?"], [Arg6316_0[1]])))
  ? [Shen.type_cons, Arg6316_0[1], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6319(Arg6318) {
  if (Arg6318.length < 1) return [Shen.type_func, shen_user_lambda6319, 1, Arg6318];
  var Arg6318_0 = Arg6318[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.curry"], [Arg6318_0]);})}, 1, [], undefined], Arg6316_0[2]])]
  : (((Shen.is_type(Arg6316_0, Shen.type_cons) && (Shen.is_type(Arg6316_0[2], Shen.type_cons) && Shen.call(Shen.fns["shen.extraspecial?"], [Arg6316_0[1]]))))
  ? Arg6316_0
  : (((Shen.is_type(Arg6316_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg6316_0[1])) && (Shen.is_type(Arg6316_0[2], Shen.type_cons) && (Shen.is_type(Arg6316_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6316_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg6316_0[2][1]]), Arg6316_0[2][2]]]
  : (((Shen.is_type(Arg6316_0, Shen.type_cons) && (Shen.is_type(Arg6316_0[2], Shen.type_cons) && Shen.is_type(Arg6316_0[2][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry"], [[Shen.type_cons, [Shen.type_cons, Arg6316_0[1], [Shen.type_cons, Arg6316_0[2][1], []]], Arg6316_0[2][2]]]);})
  : (((Shen.is_type(Arg6316_0, Shen.type_cons) && (Shen.is_type(Arg6316_0[2], Shen.type_cons) && Shen.empty$question$(Arg6316_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg6316_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg6316_0[2][1]]), []]]
  : Arg6316_0)))))}, 1, [], "shen.curry"];





Shen.fns["shen.special?"] = [Shen.type_func, function shen_user_lambda6321(Arg6320) {
  if (Arg6320.length < 1) return [Shen.type_func, shen_user_lambda6321, 1, Arg6320];
  var Arg6320_0 = Arg6320[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6320_0, (Shen.globals["shen.*special*"])]);})}, 1, [], "shen.special?"];





Shen.fns["shen.extraspecial?"] = [Shen.type_func, function shen_user_lambda6323(Arg6322) {
  if (Arg6322.length < 1) return [Shen.type_func, shen_user_lambda6323, 1, Arg6322];
  var Arg6322_0 = Arg6322[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6322_0, (Shen.globals["shen.*extraspecial*"])]);})}, 1, [], "shen.extraspecial?"];





Shen.fns["shen.t*"] = [Shen.type_func, function shen_user_lambda6325(Arg6324) {
  if (Arg6324.length < 4) return [Shen.type_func, shen_user_lambda6325, 4, Arg6324];
  var Arg6324_0 = Arg6324[0], Arg6324_1 = Arg6324[1], Arg6324_2 = Arg6324[2], Arg6324_3 = Arg6324[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6324_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.maxinfexceeded?"], []), Arg6324_2, [Shen.type_func, function shen_user_lambda6327(Arg6326) {
  if (Arg6326.length < 8) return [Shen.type_func, shen_user_lambda6327, 8, Arg6326];
  var Arg6326_0 = Arg6326[0], Arg6326_1 = Arg6326[1], Arg6326_2 = Arg6326[2], Arg6326_3 = Arg6326[3], Arg6326_4 = Arg6326[4], Arg6326_5 = Arg6326[5], Arg6326_6 = Arg6326[6], Arg6326_7 = Arg6326[7];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6326_0, Shen.call(Shen.fns["shen.errormaxinfs"], []), Arg6326_1, Arg6326_2]);})}, 8, [R1, Arg6324_2, Arg6324_3, R0, Arg6324_0, Arg6324_1, Arg6324_2, Arg6324_3], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6324_0, Arg6324_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6324_2, [Shen.type_func, function shen_user_lambda6329(Arg6328) {
  if (Arg6328.length < 5) return [Shen.type_func, shen_user_lambda6329, 5, Arg6328];
  var Arg6328_0 = Arg6328[0], Arg6328_1 = Arg6328[1], Arg6328_2 = Arg6328[2], Arg6328_3 = Arg6328[3], Arg6328_4 = Arg6328[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-failure"], [Arg6328_3, Arg6328_4]);})}, 5, [R0, Arg6324_0, Arg6324_1, Arg6324_2, Arg6324_3], undefined]])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6324_0, Arg6324_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6324_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6324_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6324_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6324_2])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.type-theory-enabled?"], []), Arg6324_2, [Shen.type_func, function shen_user_lambda6331(Arg6330) {
  if (Arg6330.length < 7) return [Shen.type_func, shen_user_lambda6331, 7, Arg6330];
  var Arg6330_0 = Arg6330[0], Arg6330_1 = Arg6330[1], Arg6330_2 = Arg6330[2], Arg6330_3 = Arg6330[3], Arg6330_4 = Arg6330[4], Arg6330_5 = Arg6330[5], Arg6330_6 = Arg6330[6];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6330_0, Arg6330_5, [Shen.type_func, function shen_user_lambda6333(Arg6332) {
  if (Arg6332.length < 6) return [Shen.type_func, shen_user_lambda6333, 6, Arg6332];
  var Arg6332_0 = Arg6332[0], Arg6332_1 = Arg6332[1], Arg6332_2 = Arg6332[2], Arg6332_3 = Arg6332[3], Arg6332_4 = Arg6332[4], Arg6332_5 = Arg6332[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6332_1, Arg6332_2, Arg6332_3, Arg6332_4, Arg6332_5]);})}, 6, [Arg6330_0, Arg6330_1, Arg6330_2, Arg6330_4, Arg6330_5, Arg6330_6], undefined]]);})}, 7, [R0, R2, R1, Arg6324_0, Arg6324_1, Arg6324_2, Arg6324_3], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6324_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.show"], [Arg6324_0, Arg6324_1, Arg6324_2, [Shen.type_func, function shen_user_lambda6335(Arg6334) {
  if (Arg6334.length < 5) return [Shen.type_func, shen_user_lambda6335, 5, Arg6334];
  var Arg6334_0 = Arg6334[0], Arg6334_1 = Arg6334[1], Arg6334_2 = Arg6334[2], Arg6334_3 = Arg6334[3], Arg6334_4 = Arg6334[4];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6334_2, (Shen.globals["shen.*datatypes*"]), Arg6334_3, [Shen.type_func, function shen_user_lambda6337(Arg6336) {
  if (Arg6336.length < 5) return [Shen.type_func, shen_user_lambda6337, 5, Arg6336];
  var Arg6336_0 = Arg6336[0], Arg6336_1 = Arg6336[1], Arg6336_2 = Arg6336[2], Arg6336_3 = Arg6336[3], Arg6336_4 = Arg6336[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg6336_0, Arg6336_1, Arg6336_2, Arg6336_3, Arg6336_4]);})}, 5, [Arg6334_0, Arg6334_1, Arg6334_2, Arg6334_3, Arg6334_4], undefined]]);})}, 5, [Arg6324_0, Arg6324_1, R1, Arg6324_2, Arg6324_3], undefined]]))
  : R1))
  : R1))
  : R1))]);}))}, 4, [], "shen.t*"];





Shen.fns["shen.type-theory-enabled?"] = [Shen.type_func, function shen_user_lambda6339(Arg6338) {
  if (Arg6338.length < 0) return [Shen.type_func, shen_user_lambda6339, 0, Arg6338];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"])}, 0, [], "shen.type-theory-enabled?"];





Shen.fns["enable-type-theory"] = [Shen.type_func, function shen_user_lambda6341(Arg6340) {
  if (Arg6340.length < 1) return [Shen.type_func, shen_user_lambda6341, 1, Arg6340];
  var Arg6340_0 = Arg6340[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6340_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6340_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = false)
  : (function() {
  return Shen.simple_error("enable-type-theory expects a + or a -\x0d\x0a");})))}, 1, [], "enable-type-theory"];





Shen.fns["shen.prolog-failure"] = [Shen.type_func, function shen_user_lambda6343(Arg6342) {
  if (Arg6342.length < 2) return [Shen.type_func, shen_user_lambda6343, 2, Arg6342];
  var Arg6342_0 = Arg6342[0], Arg6342_1 = Arg6342[1];
  return false}, 2, [], "shen.prolog-failure"];





Shen.fns["shen.maxinfexceeded?"] = [Shen.type_func, function shen_user_lambda6345(Arg6344) {
  if (Arg6344.length < 0) return [Shen.type_func, shen_user_lambda6345, 0, Arg6344];
  return (Shen.call(Shen.fns["inferences"], []) > (Shen.globals["shen.*maxinferences*"]))}, 0, [], "shen.maxinfexceeded?"];





Shen.fns["shen.errormaxinfs"] = [Shen.type_func, function shen_user_lambda6347(Arg6346) {
  if (Arg6346.length < 0) return [Shen.type_func, shen_user_lambda6347, 0, Arg6346];
  return (function() {
  return Shen.simple_error("maximum inferences exceeded~%");})}, 0, [], "shen.errormaxinfs"];





Shen.fns["shen.udefs*"] = [Shen.type_func, function shen_user_lambda6349(Arg6348) {
  if (Arg6348.length < 5) return [Shen.type_func, shen_user_lambda6349, 5, Arg6348];
  var Arg6348_0 = Arg6348[0], Arg6348_1 = Arg6348[1], Arg6348_2 = Arg6348[2], Arg6348_3 = Arg6348[3], Arg6348_4 = Arg6348[4];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6348_2, Arg6348_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[1]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [[Shen.type_cons, R0, [Shen.type_cons, Arg6348_0, [Shen.type_cons, Arg6348_1, []]]], Arg6348_3, Arg6348_4])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6348_2, Arg6348_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg6348_0, Arg6348_1, R0, Arg6348_3, Arg6348_4]);}))
  : false))
  : R0))}, 5, [], "shen.udefs*"];





Shen.fns["shen.th*"] = [Shen.type_func, function shen_user_lambda6351(Arg6350) {
  if (Arg6350.length < 5) return [Shen.type_func, shen_user_lambda6351, 5, Arg6350];
  var Arg6350_0 = Arg6350[0], Arg6350_1 = Arg6350[1], Arg6350_2 = Arg6350[2], Arg6350_3 = Arg6350[3], Arg6350_4 = Arg6350[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.show"], [[Shen.type_cons, Arg6350_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6350_1, []]]], Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6353(Arg6352) {
  if (Arg6352.length < 6) return [Shen.type_func, shen_user_lambda6353, 6, Arg6352];
  var Arg6352_0 = Arg6352[0], Arg6352_1 = Arg6352[1], Arg6352_2 = Arg6352[2], Arg6352_3 = Arg6352[3], Arg6352_4 = Arg6352[4], Arg6352_5 = Arg6352[5];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg6352_4, Arg6352_5]);})}, 6, [R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.typedf?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])]), Arg6350_3, [Shen.type_func, function shen_user_lambda6355(Arg6354) {
  if (Arg6354.length < 11) return [Shen.type_func, shen_user_lambda6355, 11, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3], Arg6354_4 = Arg6354[4], Arg6354_5 = Arg6354[5], Arg6354_6 = Arg6354[6], Arg6354_7 = Arg6354[7], Arg6354_8 = Arg6354[8], Arg6354_9 = Arg6354[9], Arg6354_10 = Arg6354[10];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6354_1, Shen.call(Shen.fns["shen.sigf"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_0, Arg6354_3])]), Arg6354_3, [Shen.type_func, function shen_user_lambda6357(Arg6356) {
  if (Arg6356.length < 5) return [Shen.type_func, shen_user_lambda6357, 5, Arg6356];
  var Arg6356_0 = Arg6356[0], Arg6356_1 = Arg6356[1], Arg6356_2 = Arg6356[2], Arg6356_3 = Arg6356[3], Arg6356_4 = Arg6356[4];
  return (function() {
  return Shen.call_tail(Shen.fns["call"], [[Shen.type_cons, Arg6356_1, [Shen.type_cons, Arg6356_2, []]], Arg6356_3, Arg6356_4]);})}, 5, [Arg6354_0, Arg6354_1, Arg6354_2, Arg6354_3, Arg6354_4], undefined]]);})}, 11, [Arg6350_0, R1, Arg6350_1, Arg6350_3, Arg6350_4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.base"], [Arg6350_0, Arg6350_1, Arg6350_3, Arg6350_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.by_hypothesis"], [Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg6350_1, []]], Arg6350_2, Arg6350_3, Arg6350_4])))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg6350_1, []]]], Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6359(Arg6358) {
  if (Arg6358.length < 13) return [Shen.type_func, shen_user_lambda6359, 13, Arg6358];
  var Arg6358_0 = Arg6358[0], Arg6358_1 = Arg6358[1], Arg6358_2 = Arg6358[2], Arg6358_3 = Arg6358[3], Arg6358_4 = Arg6358[4], Arg6358_5 = Arg6358[5], Arg6358_6 = Arg6358[6], Arg6358_7 = Arg6358[7], Arg6358_8 = Arg6358[8], Arg6358_9 = Arg6358[9], Arg6358_10 = Arg6358[10], Arg6358_11 = Arg6358[11], Arg6358_12 = Arg6358[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6358_2, Arg6358_3, Arg6358_4, Arg6358_5, Arg6358_6]);})}, 13, [R2, Arg6350_1, R3, R1, Arg6350_2, Arg6350_3, Arg6350_4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6350_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6361(Arg6360) {
  if (Arg6360.length < 9) return [Shen.type_func, shen_user_lambda6361, 9, Arg6360];
  var Arg6360_0 = Arg6360[0], Arg6360_1 = Arg6360[1], Arg6360_2 = Arg6360[2], Arg6360_3 = Arg6360[3], Arg6360_4 = Arg6360[4], Arg6360_5 = Arg6360[5], Arg6360_6 = Arg6360[6], Arg6360_7 = Arg6360[7], Arg6360_8 = Arg6360[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6360_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6360_2, []]], Arg6360_6, Arg6360_7, Arg6360_8]);})}, 9, [R1, R3, R2, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6363(Arg6362) {
  if (Arg6362.length < 10) return [Shen.type_func, shen_user_lambda6363, 10, Arg6362];
  var Arg6362_0 = Arg6362[0], Arg6362_1 = Arg6362[1], Arg6362_2 = Arg6362[2], Arg6362_3 = Arg6362[3], Arg6362_4 = Arg6362[4], Arg6362_5 = Arg6362[5], Arg6362_6 = Arg6362[6], Arg6362_7 = Arg6362[7], Arg6362_8 = Arg6362[8], Arg6362_9 = Arg6362[9];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6362_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6362_2, []]], Arg6362_7, Arg6362_8, Arg6362_9]);})}, 10, [R1, R3, R2, R4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6365(Arg6364) {
  if (Arg6364.length < 13) return [Shen.type_func, shen_user_lambda6365, 13, Arg6364];
  var Arg6364_0 = Arg6364[0], Arg6364_1 = Arg6364[1], Arg6364_2 = Arg6364[2], Arg6364_3 = Arg6364[3], Arg6364_4 = Arg6364[4], Arg6364_5 = Arg6364[5], Arg6364_6 = Arg6364[6], Arg6364_7 = Arg6364[7], Arg6364_8 = Arg6364[8], Arg6364_9 = Arg6364[9], Arg6364_10 = Arg6364[10], Arg6364_11 = Arg6364[11], Arg6364_12 = Arg6364[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6364_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6364_2, []]], Arg6364_3, Arg6364_6, Arg6364_4]);})}, 13, [R1, R3, R2, Arg6350_2, Arg6350_4, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "list"], Arg6350_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6367(Arg6366) {
  if (Arg6366.length < 11) return [Shen.type_func, shen_user_lambda6367, 11, Arg6366];
  var Arg6366_0 = Arg6366[0], Arg6366_1 = Arg6366[1], Arg6366_2 = Arg6366[2], Arg6366_3 = Arg6366[3], Arg6366_4 = Arg6366[4], Arg6366_5 = Arg6366[5], Arg6366_6 = Arg6366[6], Arg6366_7 = Arg6366[7], Arg6366_8 = Arg6366[8], Arg6366_9 = Arg6366[9], Arg6366_10 = Arg6366[10];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6366_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6366_2, []]], Arg6366_8, Arg6366_4, Arg6366_9]);})}, 11, [R1, R3, R5, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6369(Arg6368) {
  if (Arg6368.length < 12) return [Shen.type_func, shen_user_lambda6369, 12, Arg6368];
  var Arg6368_0 = Arg6368[0], Arg6368_1 = Arg6368[1], Arg6368_2 = Arg6368[2], Arg6368_3 = Arg6368[3], Arg6368_4 = Arg6368[4], Arg6368_5 = Arg6368[5], Arg6368_6 = Arg6368[6], Arg6368_7 = Arg6368[7], Arg6368_8 = Arg6368[8], Arg6368_9 = Arg6368[9], Arg6368_10 = Arg6368[10], Arg6368_11 = Arg6368[11];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6368_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6368_2, []]], Arg6368_9, Arg6368_5, Arg6368_10]);})}, 12, [R1, R3, R5, R2, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6371(Arg6370) {
  if (Arg6370.length < 15) return [Shen.type_func, shen_user_lambda6371, 15, Arg6370];
  var Arg6370_0 = Arg6370[0], Arg6370_1 = Arg6370[1], Arg6370_2 = Arg6370[2], Arg6370_3 = Arg6370[3], Arg6370_4 = Arg6370[4], Arg6370_5 = Arg6370[5], Arg6370_6 = Arg6370[6], Arg6370_7 = Arg6370[7], Arg6370_8 = Arg6370[8], Arg6370_9 = Arg6370[9], Arg6370_10 = Arg6370[10], Arg6370_11 = Arg6370[11], Arg6370_12 = Arg6370[12], Arg6370_13 = Arg6370[13], Arg6370_14 = Arg6370[14];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6370_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6370_2, []]], Arg6370_3, Arg6370_6, Arg6370_4]);})}, 15, [R1, R3, R5, Arg6350_2, Arg6350_4, R2, Arg6350_3, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R4, []]], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6373(Arg6372) {
  if (Arg6372.length < 13) return [Shen.type_func, shen_user_lambda6373, 13, Arg6372];
  var Arg6372_0 = Arg6372[0], Arg6372_1 = Arg6372[1], Arg6372_2 = Arg6372[2], Arg6372_3 = Arg6372[3], Arg6372_4 = Arg6372[4], Arg6372_5 = Arg6372[5], Arg6372_6 = Arg6372[6], Arg6372_7 = Arg6372[7], Arg6372_8 = Arg6372[8], Arg6372_9 = Arg6372[9], Arg6372_10 = Arg6372[10], Arg6372_11 = Arg6372[11], Arg6372_12 = Arg6372[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6372_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6372_2, []]], Arg6372_3, Arg6372_6, Arg6372_4]);})}, 13, [R1, R3, R4, Arg6350_2, Arg6350_4, R2, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6350_3])),
  ((Shen.empty$question$(R5))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6375(Arg6374) {
  if (Arg6374.length < 10) return [Shen.type_func, shen_user_lambda6375, 10, Arg6374];
  var Arg6374_0 = Arg6374[0], Arg6374_1 = Arg6374[1], Arg6374_2 = Arg6374[2], Arg6374_3 = Arg6374[3], Arg6374_4 = Arg6374[4], Arg6374_5 = Arg6374[5], Arg6374_6 = Arg6374[6], Arg6374_7 = Arg6374[7], Arg6374_8 = Arg6374[8], Arg6374_9 = Arg6374[9];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6374_2, Arg6374_3, Arg6374_7, Arg6374_8, Arg6374_9]);})}, 10, [R1, R4, R3, R2, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6377(Arg6376) {
  if (Arg6376.length < 11) return [Shen.type_func, shen_user_lambda6377, 11, Arg6376];
  var Arg6376_0 = Arg6376[0], Arg6376_1 = Arg6376[1], Arg6376_2 = Arg6376[2], Arg6376_3 = Arg6376[3], Arg6376_4 = Arg6376[4], Arg6376_5 = Arg6376[5], Arg6376_6 = Arg6376[6], Arg6376_7 = Arg6376[7], Arg6376_8 = Arg6376[8], Arg6376_9 = Arg6376[9], Arg6376_10 = Arg6376[10];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6376_2, Arg6376_3, Arg6376_8, Arg6376_9, Arg6376_10]);})}, 11, [R1, R4, R3, R2, R5, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6350_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6379(Arg6378) {
  if (Arg6378.length < 14) return [Shen.type_func, shen_user_lambda6379, 14, Arg6378];
  var Arg6378_0 = Arg6378[0], Arg6378_1 = Arg6378[1], Arg6378_2 = Arg6378[2], Arg6378_3 = Arg6378[3], Arg6378_4 = Arg6378[4], Arg6378_5 = Arg6378[5], Arg6378_6 = Arg6378[6], Arg6378_7 = Arg6378[7], Arg6378_8 = Arg6378[8], Arg6378_9 = Arg6378[9], Arg6378_10 = Arg6378[10], Arg6378_11 = Arg6378[11], Arg6378_12 = Arg6378[12], Arg6378_13 = Arg6378[13];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6378_2, Arg6378_3, Arg6378_4, Arg6378_7, Arg6378_5]);})}, 14, [R1, R4, R3, R2, Arg6350_2, Arg6350_4, R5, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6350_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "*"], Arg6350_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6381(Arg6380) {
  if (Arg6380.length < 12) return [Shen.type_func, shen_user_lambda6381, 12, Arg6380];
  var Arg6380_0 = Arg6380[0], Arg6380_1 = Arg6380[1], Arg6380_2 = Arg6380[2], Arg6380_3 = Arg6380[3], Arg6380_4 = Arg6380[4], Arg6380_5 = Arg6380[5], Arg6380_6 = Arg6380[6], Arg6380_7 = Arg6380[7], Arg6380_8 = Arg6380[8], Arg6380_9 = Arg6380[9], Arg6380_10 = Arg6380[10], Arg6380_11 = Arg6380[11];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6380_2, Arg6380_3, Arg6380_9, Arg6380_5, Arg6380_10]);})}, 12, [R1, R4, R3, R6, R5, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6383(Arg6382) {
  if (Arg6382.length < 13) return [Shen.type_func, shen_user_lambda6383, 13, Arg6382];
  var Arg6382_0 = Arg6382[0], Arg6382_1 = Arg6382[1], Arg6382_2 = Arg6382[2], Arg6382_3 = Arg6382[3], Arg6382_4 = Arg6382[4], Arg6382_5 = Arg6382[5], Arg6382_6 = Arg6382[6], Arg6382_7 = Arg6382[7], Arg6382_8 = Arg6382[8], Arg6382_9 = Arg6382[9], Arg6382_10 = Arg6382[10], Arg6382_11 = Arg6382[11], Arg6382_12 = Arg6382[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6382_2, Arg6382_3, Arg6382_10, Arg6382_6, Arg6382_11]);})}, 13, [R1, R4, R3, R6, R2, R5, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6385(Arg6384) {
  if (Arg6384.length < 16) return [Shen.type_func, shen_user_lambda6385, 16, Arg6384];
  var Arg6384_0 = Arg6384[0], Arg6384_1 = Arg6384[1], Arg6384_2 = Arg6384[2], Arg6384_3 = Arg6384[3], Arg6384_4 = Arg6384[4], Arg6384_5 = Arg6384[5], Arg6384_6 = Arg6384[6], Arg6384_7 = Arg6384[7], Arg6384_8 = Arg6384[8], Arg6384_9 = Arg6384[9], Arg6384_10 = Arg6384[10], Arg6384_11 = Arg6384[11], Arg6384_12 = Arg6384[12], Arg6384_13 = Arg6384[13], Arg6384_14 = Arg6384[14], Arg6384_15 = Arg6384[15];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6384_2, Arg6384_3, Arg6384_4, Arg6384_7, Arg6384_5]);})}, 16, [R1, R4, R3, R6, Arg6350_2, Arg6350_4, R2, Arg6350_3, R5, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6350_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6387(Arg6386) {
  if (Arg6386.length < 14) return [Shen.type_func, shen_user_lambda6387, 14, Arg6386];
  var Arg6386_0 = Arg6386[0], Arg6386_1 = Arg6386[1], Arg6386_2 = Arg6386[2], Arg6386_3 = Arg6386[3], Arg6386_4 = Arg6386[4], Arg6386_5 = Arg6386[5], Arg6386_6 = Arg6386[6], Arg6386_7 = Arg6386[7], Arg6386_8 = Arg6386[8], Arg6386_9 = Arg6386[9], Arg6386_10 = Arg6386[10], Arg6386_11 = Arg6386[11], Arg6386_12 = Arg6386[12], Arg6386_13 = Arg6386[13];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6386_2, Arg6386_3, Arg6386_4, Arg6386_7, Arg6386_5]);})}, 14, [R1, R4, R3, R5, Arg6350_2, Arg6350_4, R2, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]]], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6389(Arg6388) {
  if (Arg6388.length < 14) return [Shen.type_func, shen_user_lambda6389, 14, Arg6388];
  var Arg6388_0 = Arg6388[0], Arg6388_1 = Arg6388[1], Arg6388_2 = Arg6388[2], Arg6388_3 = Arg6388[3], Arg6388_4 = Arg6388[4], Arg6388_5 = Arg6388[5], Arg6388_6 = Arg6388[6], Arg6388_7 = Arg6388[7], Arg6388_8 = Arg6388[8], Arg6388_9 = Arg6388[9], Arg6388_10 = Arg6388[10], Arg6388_11 = Arg6388[11], Arg6388_12 = Arg6388[12], Arg6388_13 = Arg6388[13];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6388_2, Arg6388_3, Arg6388_4, Arg6388_7, Arg6388_5]);})}, 14, [R1, R4, R3, R5, Arg6350_2, Arg6350_4, R2, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6350_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6391(Arg6390) {
  if (Arg6390.length < 9) return [Shen.type_func, shen_user_lambda6391, 9, Arg6390];
  var Arg6390_0 = Arg6390[0], Arg6390_1 = Arg6390[1], Arg6390_2 = Arg6390[2], Arg6390_3 = Arg6390[3], Arg6390_4 = Arg6390[4], Arg6390_5 = Arg6390[5], Arg6390_6 = Arg6390[6], Arg6390_7 = Arg6390[7], Arg6390_8 = Arg6390[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6390_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6390_2, []]], Arg6390_6, Arg6390_7, Arg6390_8]);})}, 9, [R1, R3, R2, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6393(Arg6392) {
  if (Arg6392.length < 10) return [Shen.type_func, shen_user_lambda6393, 10, Arg6392];
  var Arg6392_0 = Arg6392[0], Arg6392_1 = Arg6392[1], Arg6392_2 = Arg6392[2], Arg6392_3 = Arg6392[3], Arg6392_4 = Arg6392[4], Arg6392_5 = Arg6392[5], Arg6392_6 = Arg6392[6], Arg6392_7 = Arg6392[7], Arg6392_8 = Arg6392[8], Arg6392_9 = Arg6392[9];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6392_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6392_2, []]], Arg6392_7, Arg6392_8, Arg6392_9]);})}, 10, [R1, R3, R2, R4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6395(Arg6394) {
  if (Arg6394.length < 13) return [Shen.type_func, shen_user_lambda6395, 13, Arg6394];
  var Arg6394_0 = Arg6394[0], Arg6394_1 = Arg6394[1], Arg6394_2 = Arg6394[2], Arg6394_3 = Arg6394[3], Arg6394_4 = Arg6394[4], Arg6394_5 = Arg6394[5], Arg6394_6 = Arg6394[6], Arg6394_7 = Arg6394[7], Arg6394_8 = Arg6394[8], Arg6394_9 = Arg6394[9], Arg6394_10 = Arg6394[10], Arg6394_11 = Arg6394[11], Arg6394_12 = Arg6394[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6394_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6394_2, []]], Arg6394_3, Arg6394_6, Arg6394_4]);})}, 13, [R1, R3, R2, Arg6350_2, Arg6350_4, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "vector"], Arg6350_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6397(Arg6396) {
  if (Arg6396.length < 11) return [Shen.type_func, shen_user_lambda6397, 11, Arg6396];
  var Arg6396_0 = Arg6396[0], Arg6396_1 = Arg6396[1], Arg6396_2 = Arg6396[2], Arg6396_3 = Arg6396[3], Arg6396_4 = Arg6396[4], Arg6396_5 = Arg6396[5], Arg6396_6 = Arg6396[6], Arg6396_7 = Arg6396[7], Arg6396_8 = Arg6396[8], Arg6396_9 = Arg6396[9], Arg6396_10 = Arg6396[10];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6396_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6396_2, []]], Arg6396_8, Arg6396_4, Arg6396_9]);})}, 11, [R1, R3, R5, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6399(Arg6398) {
  if (Arg6398.length < 12) return [Shen.type_func, shen_user_lambda6399, 12, Arg6398];
  var Arg6398_0 = Arg6398[0], Arg6398_1 = Arg6398[1], Arg6398_2 = Arg6398[2], Arg6398_3 = Arg6398[3], Arg6398_4 = Arg6398[4], Arg6398_5 = Arg6398[5], Arg6398_6 = Arg6398[6], Arg6398_7 = Arg6398[7], Arg6398_8 = Arg6398[8], Arg6398_9 = Arg6398[9], Arg6398_10 = Arg6398[10], Arg6398_11 = Arg6398[11];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6398_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6398_2, []]], Arg6398_9, Arg6398_5, Arg6398_10]);})}, 12, [R1, R3, R5, R2, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6401(Arg6400) {
  if (Arg6400.length < 15) return [Shen.type_func, shen_user_lambda6401, 15, Arg6400];
  var Arg6400_0 = Arg6400[0], Arg6400_1 = Arg6400[1], Arg6400_2 = Arg6400[2], Arg6400_3 = Arg6400[3], Arg6400_4 = Arg6400[4], Arg6400_5 = Arg6400[5], Arg6400_6 = Arg6400[6], Arg6400_7 = Arg6400[7], Arg6400_8 = Arg6400[8], Arg6400_9 = Arg6400[9], Arg6400_10 = Arg6400[10], Arg6400_11 = Arg6400[11], Arg6400_12 = Arg6400[12], Arg6400_13 = Arg6400[13], Arg6400_14 = Arg6400[14];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6400_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6400_2, []]], Arg6400_3, Arg6400_6, Arg6400_4]);})}, 15, [R1, R3, R5, Arg6350_2, Arg6350_4, R2, Arg6350_3, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R4, []]], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6403(Arg6402) {
  if (Arg6402.length < 13) return [Shen.type_func, shen_user_lambda6403, 13, Arg6402];
  var Arg6402_0 = Arg6402[0], Arg6402_1 = Arg6402[1], Arg6402_2 = Arg6402[2], Arg6402_3 = Arg6402[3], Arg6402_4 = Arg6402[4], Arg6402_5 = Arg6402[5], Arg6402_6 = Arg6402[6], Arg6402_7 = Arg6402[7], Arg6402_8 = Arg6402[8], Arg6402_9 = Arg6402[9], Arg6402_10 = Arg6402[10], Arg6402_11 = Arg6402[11], Arg6402_12 = Arg6402[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6402_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6402_2, []]], Arg6402_3, Arg6402_6, Arg6402_4]);})}, 13, [R1, R3, R4, Arg6350_2, Arg6350_4, R2, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6405(Arg6404) {
  if (Arg6404.length < 8) return [Shen.type_func, shen_user_lambda6405, 8, Arg6404];
  var Arg6404_0 = Arg6404[0], Arg6404_1 = Arg6404[1], Arg6404_2 = Arg6404[2], Arg6404_3 = Arg6404[3], Arg6404_4 = Arg6404[4], Arg6404_5 = Arg6404[5], Arg6404_6 = Arg6404[6], Arg6404_7 = Arg6404[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6404_1, [Shen.type_symbol, "string"], Arg6404_5, Arg6404_6, Arg6404_7]);})}, 8, [R1, R3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "string"], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6407(Arg6406) {
  if (Arg6406.length < 9) return [Shen.type_func, shen_user_lambda6407, 9, Arg6406];
  var Arg6406_0 = Arg6406[0], Arg6406_1 = Arg6406[1], Arg6406_2 = Arg6406[2], Arg6406_3 = Arg6406[3], Arg6406_4 = Arg6406[4], Arg6406_5 = Arg6406[5], Arg6406_6 = Arg6406[6], Arg6406_7 = Arg6406[7], Arg6406_8 = Arg6406[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6406_1, [Shen.type_symbol, "string"], Arg6406_6, Arg6406_7, Arg6406_8]);})}, 9, [R1, R3, R2, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6350_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6409(Arg6408) {
  if (Arg6408.length < 16) return [Shen.type_func, shen_user_lambda6409, 16, Arg6408];
  var Arg6408_0 = Arg6408[0], Arg6408_1 = Arg6408[1], Arg6408_2 = Arg6408[2], Arg6408_3 = Arg6408[3], Arg6408_4 = Arg6408[4], Arg6408_5 = Arg6408[5], Arg6408_6 = Arg6408[6], Arg6408_7 = Arg6408[7], Arg6408_8 = Arg6408[8], Arg6408_9 = Arg6408[9], Arg6408_10 = Arg6408[10], Arg6408_11 = Arg6408[11], Arg6408_12 = Arg6408[12], Arg6408_13 = Arg6408[13], Arg6408_14 = Arg6408[14], Arg6408_15 = Arg6408[15];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6408_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6408_8, [Shen.type_func, function shen_user_lambda6411(Arg6410) {
  if (Arg6410.length < 9) return [Shen.type_func, shen_user_lambda6411, 9, Arg6410];
  var Arg6410_0 = Arg6410[0], Arg6410_1 = Arg6410[1], Arg6410_2 = Arg6410[2], Arg6410_3 = Arg6410[3], Arg6410_4 = Arg6410[4], Arg6410_5 = Arg6410[5], Arg6410_6 = Arg6410[6], Arg6410_7 = Arg6410[7], Arg6410_8 = Arg6410[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6410_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6410_4, Arg6410_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6410_0, Arg6410_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6410_1, Arg6410_7])]), Arg6410_7, [Shen.type_func, function shen_user_lambda6413(Arg6412) {
  if (Arg6412.length < 9) return [Shen.type_func, shen_user_lambda6413, 9, Arg6412];
  var Arg6412_0 = Arg6412[0], Arg6412_1 = Arg6412[1], Arg6412_2 = Arg6412[2], Arg6412_3 = Arg6412[3], Arg6412_4 = Arg6412[4], Arg6412_5 = Arg6412[5], Arg6412_6 = Arg6412[6], Arg6412_7 = Arg6412[7], Arg6412_8 = Arg6412[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6412_2, Arg6412_3, [Shen.type_cons, [Shen.type_cons, Arg6412_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6412_5, []]]], Arg6412_6], Arg6412_7, Arg6412_8]);})}, 9, [Arg6410_0, Arg6410_1, Arg6410_2, Arg6410_3, Arg6410_4, Arg6410_5, Arg6410_6, Arg6410_7, Arg6410_8], undefined]]);})}, 9, [Arg6408_1, Arg6408_2, Arg6408_3, Arg6408_4, Arg6408_5, Arg6408_6, Arg6408_7, Arg6408_8, Arg6408_9], undefined]]);})}, 16, [R0, R1, R3, R5, R2, R6, R4, Arg6350_2, Arg6350_3, Arg6350_4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6350_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6415(Arg6414) {
  if (Arg6414.length < 18) return [Shen.type_func, shen_user_lambda6415, 18, Arg6414];
  var Arg6414_0 = Arg6414[0], Arg6414_1 = Arg6414[1], Arg6414_2 = Arg6414[2], Arg6414_3 = Arg6414[3], Arg6414_4 = Arg6414[4], Arg6414_5 = Arg6414[5], Arg6414_6 = Arg6414[6], Arg6414_7 = Arg6414[7], Arg6414_8 = Arg6414[8], Arg6414_9 = Arg6414[9], Arg6414_10 = Arg6414[10], Arg6414_11 = Arg6414[11], Arg6414_12 = Arg6414[12], Arg6414_13 = Arg6414[13], Arg6414_14 = Arg6414[14], Arg6414_15 = Arg6414[15], Arg6414_16 = Arg6414[16], Arg6414_17 = Arg6414[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6414_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6414_8, [Shen.type_func, function shen_user_lambda6417(Arg6416) {
  if (Arg6416.length < 9) return [Shen.type_func, shen_user_lambda6417, 9, Arg6416];
  var Arg6416_0 = Arg6416[0], Arg6416_1 = Arg6416[1], Arg6416_2 = Arg6416[2], Arg6416_3 = Arg6416[3], Arg6416_4 = Arg6416[4], Arg6416_5 = Arg6416[5], Arg6416_6 = Arg6416[6], Arg6416_7 = Arg6416[7], Arg6416_8 = Arg6416[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6416_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6416_4, Arg6416_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6416_0, Arg6416_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6416_1, Arg6416_7])]), Arg6416_7, [Shen.type_func, function shen_user_lambda6419(Arg6418) {
  if (Arg6418.length < 9) return [Shen.type_func, shen_user_lambda6419, 9, Arg6418];
  var Arg6418_0 = Arg6418[0], Arg6418_1 = Arg6418[1], Arg6418_2 = Arg6418[2], Arg6418_3 = Arg6418[3], Arg6418_4 = Arg6418[4], Arg6418_5 = Arg6418[5], Arg6418_6 = Arg6418[6], Arg6418_7 = Arg6418[7], Arg6418_8 = Arg6418[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6418_2, Arg6418_3, [Shen.type_cons, [Shen.type_cons, Arg6418_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6418_5, []]]], Arg6418_6], Arg6418_7, Arg6418_8]);})}, 9, [Arg6416_0, Arg6416_1, Arg6416_2, Arg6416_3, Arg6416_4, Arg6416_5, Arg6416_6, Arg6416_7, Arg6416_8], undefined]]);})}, 9, [Arg6414_1, Arg6414_2, Arg6414_3, Arg6414_4, Arg6414_5, Arg6414_6, Arg6414_7, Arg6414_8, Arg6414_9], undefined]]);})}, 18, [R0, R1, R3, R6, R2, R7, R4, Arg6350_2, Arg6350_3, Arg6350_4, R5, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6350_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg6350_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6421(Arg6420) {
  if (Arg6420.length < 18) return [Shen.type_func, shen_user_lambda6421, 18, Arg6420];
  var Arg6420_0 = Arg6420[0], Arg6420_1 = Arg6420[1], Arg6420_2 = Arg6420[2], Arg6420_3 = Arg6420[3], Arg6420_4 = Arg6420[4], Arg6420_5 = Arg6420[5], Arg6420_6 = Arg6420[6], Arg6420_7 = Arg6420[7], Arg6420_8 = Arg6420[8], Arg6420_9 = Arg6420[9], Arg6420_10 = Arg6420[10], Arg6420_11 = Arg6420[11], Arg6420_12 = Arg6420[12], Arg6420_13 = Arg6420[13], Arg6420_14 = Arg6420[14], Arg6420_15 = Arg6420[15], Arg6420_16 = Arg6420[16], Arg6420_17 = Arg6420[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6420_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6420_8, [Shen.type_func, function shen_user_lambda6423(Arg6422) {
  if (Arg6422.length < 9) return [Shen.type_func, shen_user_lambda6423, 9, Arg6422];
  var Arg6422_0 = Arg6422[0], Arg6422_1 = Arg6422[1], Arg6422_2 = Arg6422[2], Arg6422_3 = Arg6422[3], Arg6422_4 = Arg6422[4], Arg6422_5 = Arg6422[5], Arg6422_6 = Arg6422[6], Arg6422_7 = Arg6422[7], Arg6422_8 = Arg6422[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6422_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6422_4, Arg6422_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6422_0, Arg6422_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6422_1, Arg6422_7])]), Arg6422_7, [Shen.type_func, function shen_user_lambda6425(Arg6424) {
  if (Arg6424.length < 9) return [Shen.type_func, shen_user_lambda6425, 9, Arg6424];
  var Arg6424_0 = Arg6424[0], Arg6424_1 = Arg6424[1], Arg6424_2 = Arg6424[2], Arg6424_3 = Arg6424[3], Arg6424_4 = Arg6424[4], Arg6424_5 = Arg6424[5], Arg6424_6 = Arg6424[6], Arg6424_7 = Arg6424[7], Arg6424_8 = Arg6424[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6424_2, Arg6424_3, [Shen.type_cons, [Shen.type_cons, Arg6424_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6424_5, []]]], Arg6424_6], Arg6424_7, Arg6424_8]);})}, 9, [Arg6422_0, Arg6422_1, Arg6422_2, Arg6422_3, Arg6422_4, Arg6422_5, Arg6422_6, Arg6422_7, Arg6422_8], undefined]]);})}, 9, [Arg6420_1, Arg6420_2, Arg6420_3, Arg6420_4, Arg6420_5, Arg6420_6, Arg6420_7, Arg6420_8, Arg6420_9], undefined]]);})}, 18, [R0, R1, R3, R6, R2, R7, R4, Arg6350_2, Arg6350_3, Arg6350_4, R5, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6350_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "-->"], Arg6350_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6427(Arg6426) {
  if (Arg6426.length < 18) return [Shen.type_func, shen_user_lambda6427, 18, Arg6426];
  var Arg6426_0 = Arg6426[0], Arg6426_1 = Arg6426[1], Arg6426_2 = Arg6426[2], Arg6426_3 = Arg6426[3], Arg6426_4 = Arg6426[4], Arg6426_5 = Arg6426[5], Arg6426_6 = Arg6426[6], Arg6426_7 = Arg6426[7], Arg6426_8 = Arg6426[8], Arg6426_9 = Arg6426[9], Arg6426_10 = Arg6426[10], Arg6426_11 = Arg6426[11], Arg6426_12 = Arg6426[12], Arg6426_13 = Arg6426[13], Arg6426_14 = Arg6426[14], Arg6426_15 = Arg6426[15], Arg6426_16 = Arg6426[16], Arg6426_17 = Arg6426[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6426_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6426_8, [Shen.type_func, function shen_user_lambda6429(Arg6428) {
  if (Arg6428.length < 9) return [Shen.type_func, shen_user_lambda6429, 9, Arg6428];
  var Arg6428_0 = Arg6428[0], Arg6428_1 = Arg6428[1], Arg6428_2 = Arg6428[2], Arg6428_3 = Arg6428[3], Arg6428_4 = Arg6428[4], Arg6428_5 = Arg6428[5], Arg6428_6 = Arg6428[6], Arg6428_7 = Arg6428[7], Arg6428_8 = Arg6428[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6428_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6428_4, Arg6428_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6428_0, Arg6428_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6428_1, Arg6428_7])]), Arg6428_7, [Shen.type_func, function shen_user_lambda6431(Arg6430) {
  if (Arg6430.length < 9) return [Shen.type_func, shen_user_lambda6431, 9, Arg6430];
  var Arg6430_0 = Arg6430[0], Arg6430_1 = Arg6430[1], Arg6430_2 = Arg6430[2], Arg6430_3 = Arg6430[3], Arg6430_4 = Arg6430[4], Arg6430_5 = Arg6430[5], Arg6430_6 = Arg6430[6], Arg6430_7 = Arg6430[7], Arg6430_8 = Arg6430[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6430_2, Arg6430_3, [Shen.type_cons, [Shen.type_cons, Arg6430_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6430_5, []]]], Arg6430_6], Arg6430_7, Arg6430_8]);})}, 9, [Arg6428_0, Arg6428_1, Arg6428_2, Arg6428_3, Arg6428_4, Arg6428_5, Arg6428_6, Arg6428_7, Arg6428_8], undefined]]);})}, 9, [Arg6426_1, Arg6426_2, Arg6426_3, Arg6426_4, Arg6426_5, Arg6426_6, Arg6426_7, Arg6426_8, Arg6426_9], undefined]]);})}, 18, [R0, R1, R3, R2, R6, R7, R4, Arg6350_2, Arg6350_3, Arg6350_4, R5, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6350_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6433(Arg6432) {
  if (Arg6432.length < 20) return [Shen.type_func, shen_user_lambda6433, 20, Arg6432];
  var Arg6432_0 = Arg6432[0], Arg6432_1 = Arg6432[1], Arg6432_2 = Arg6432[2], Arg6432_3 = Arg6432[3], Arg6432_4 = Arg6432[4], Arg6432_5 = Arg6432[5], Arg6432_6 = Arg6432[6], Arg6432_7 = Arg6432[7], Arg6432_8 = Arg6432[8], Arg6432_9 = Arg6432[9], Arg6432_10 = Arg6432[10], Arg6432_11 = Arg6432[11], Arg6432_12 = Arg6432[12], Arg6432_13 = Arg6432[13], Arg6432_14 = Arg6432[14], Arg6432_15 = Arg6432[15], Arg6432_16 = Arg6432[16], Arg6432_17 = Arg6432[17], Arg6432_18 = Arg6432[18], Arg6432_19 = Arg6432[19];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6432_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6432_8, [Shen.type_func, function shen_user_lambda6435(Arg6434) {
  if (Arg6434.length < 9) return [Shen.type_func, shen_user_lambda6435, 9, Arg6434];
  var Arg6434_0 = Arg6434[0], Arg6434_1 = Arg6434[1], Arg6434_2 = Arg6434[2], Arg6434_3 = Arg6434[3], Arg6434_4 = Arg6434[4], Arg6434_5 = Arg6434[5], Arg6434_6 = Arg6434[6], Arg6434_7 = Arg6434[7], Arg6434_8 = Arg6434[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6434_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6434_4, Arg6434_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6434_0, Arg6434_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6434_1, Arg6434_7])]), Arg6434_7, [Shen.type_func, function shen_user_lambda6437(Arg6436) {
  if (Arg6436.length < 9) return [Shen.type_func, shen_user_lambda6437, 9, Arg6436];
  var Arg6436_0 = Arg6436[0], Arg6436_1 = Arg6436[1], Arg6436_2 = Arg6436[2], Arg6436_3 = Arg6436[3], Arg6436_4 = Arg6436[4], Arg6436_5 = Arg6436[5], Arg6436_6 = Arg6436[6], Arg6436_7 = Arg6436[7], Arg6436_8 = Arg6436[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6436_2, Arg6436_3, [Shen.type_cons, [Shen.type_cons, Arg6436_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6436_5, []]]], Arg6436_6], Arg6436_7, Arg6436_8]);})}, 9, [Arg6434_0, Arg6434_1, Arg6434_2, Arg6434_3, Arg6434_4, Arg6434_5, Arg6434_6, Arg6434_7, Arg6434_8], undefined]]);})}, 9, [Arg6432_1, Arg6432_2, Arg6432_3, Arg6432_4, Arg6432_5, Arg6432_6, Arg6432_7, Arg6432_8, Arg6432_9], undefined]]);})}, 20, [R0, R1, R3, R7, R6, R8, R4, Arg6350_2, Arg6350_3, Arg6350_4, R2, Arg6350_3, R5, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg6350_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6439(Arg6438) {
  if (Arg6438.length < 20) return [Shen.type_func, shen_user_lambda6439, 20, Arg6438];
  var Arg6438_0 = Arg6438[0], Arg6438_1 = Arg6438[1], Arg6438_2 = Arg6438[2], Arg6438_3 = Arg6438[3], Arg6438_4 = Arg6438[4], Arg6438_5 = Arg6438[5], Arg6438_6 = Arg6438[6], Arg6438_7 = Arg6438[7], Arg6438_8 = Arg6438[8], Arg6438_9 = Arg6438[9], Arg6438_10 = Arg6438[10], Arg6438_11 = Arg6438[11], Arg6438_12 = Arg6438[12], Arg6438_13 = Arg6438[13], Arg6438_14 = Arg6438[14], Arg6438_15 = Arg6438[15], Arg6438_16 = Arg6438[16], Arg6438_17 = Arg6438[17], Arg6438_18 = Arg6438[18], Arg6438_19 = Arg6438[19];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6438_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6438_8, [Shen.type_func, function shen_user_lambda6441(Arg6440) {
  if (Arg6440.length < 9) return [Shen.type_func, shen_user_lambda6441, 9, Arg6440];
  var Arg6440_0 = Arg6440[0], Arg6440_1 = Arg6440[1], Arg6440_2 = Arg6440[2], Arg6440_3 = Arg6440[3], Arg6440_4 = Arg6440[4], Arg6440_5 = Arg6440[5], Arg6440_6 = Arg6440[6], Arg6440_7 = Arg6440[7], Arg6440_8 = Arg6440[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6440_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6440_4, Arg6440_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6440_0, Arg6440_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6440_1, Arg6440_7])]), Arg6440_7, [Shen.type_func, function shen_user_lambda6443(Arg6442) {
  if (Arg6442.length < 9) return [Shen.type_func, shen_user_lambda6443, 9, Arg6442];
  var Arg6442_0 = Arg6442[0], Arg6442_1 = Arg6442[1], Arg6442_2 = Arg6442[2], Arg6442_3 = Arg6442[3], Arg6442_4 = Arg6442[4], Arg6442_5 = Arg6442[5], Arg6442_6 = Arg6442[6], Arg6442_7 = Arg6442[7], Arg6442_8 = Arg6442[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6442_2, Arg6442_3, [Shen.type_cons, [Shen.type_cons, Arg6442_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6442_5, []]]], Arg6442_6], Arg6442_7, Arg6442_8]);})}, 9, [Arg6440_0, Arg6440_1, Arg6440_2, Arg6440_3, Arg6440_4, Arg6440_5, Arg6440_6, Arg6440_7, Arg6440_8], undefined]]);})}, 9, [Arg6438_1, Arg6438_2, Arg6438_3, Arg6438_4, Arg6438_5, Arg6438_6, Arg6438_7, Arg6438_8, Arg6438_9], undefined]]);})}, 20, [R0, R1, R3, R7, R6, R8, R4, Arg6350_2, Arg6350_3, Arg6350_4, R2, Arg6350_3, R5, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6350_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]], Arg6350_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6445(Arg6444) {
  if (Arg6444.length < 18) return [Shen.type_func, shen_user_lambda6445, 18, Arg6444];
  var Arg6444_0 = Arg6444[0], Arg6444_1 = Arg6444[1], Arg6444_2 = Arg6444[2], Arg6444_3 = Arg6444[3], Arg6444_4 = Arg6444[4], Arg6444_5 = Arg6444[5], Arg6444_6 = Arg6444[6], Arg6444_7 = Arg6444[7], Arg6444_8 = Arg6444[8], Arg6444_9 = Arg6444[9], Arg6444_10 = Arg6444[10], Arg6444_11 = Arg6444[11], Arg6444_12 = Arg6444[12], Arg6444_13 = Arg6444[13], Arg6444_14 = Arg6444[14], Arg6444_15 = Arg6444[15], Arg6444_16 = Arg6444[16], Arg6444_17 = Arg6444[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6444_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6444_8, [Shen.type_func, function shen_user_lambda6447(Arg6446) {
  if (Arg6446.length < 9) return [Shen.type_func, shen_user_lambda6447, 9, Arg6446];
  var Arg6446_0 = Arg6446[0], Arg6446_1 = Arg6446[1], Arg6446_2 = Arg6446[2], Arg6446_3 = Arg6446[3], Arg6446_4 = Arg6446[4], Arg6446_5 = Arg6446[5], Arg6446_6 = Arg6446[6], Arg6446_7 = Arg6446[7], Arg6446_8 = Arg6446[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6446_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6446_4, Arg6446_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6446_0, Arg6446_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6446_1, Arg6446_7])]), Arg6446_7, [Shen.type_func, function shen_user_lambda6449(Arg6448) {
  if (Arg6448.length < 9) return [Shen.type_func, shen_user_lambda6449, 9, Arg6448];
  var Arg6448_0 = Arg6448[0], Arg6448_1 = Arg6448[1], Arg6448_2 = Arg6448[2], Arg6448_3 = Arg6448[3], Arg6448_4 = Arg6448[4], Arg6448_5 = Arg6448[5], Arg6448_6 = Arg6448[6], Arg6448_7 = Arg6448[7], Arg6448_8 = Arg6448[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6448_2, Arg6448_3, [Shen.type_cons, [Shen.type_cons, Arg6448_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6448_5, []]]], Arg6448_6], Arg6448_7, Arg6448_8]);})}, 9, [Arg6446_0, Arg6446_1, Arg6446_2, Arg6446_3, Arg6446_4, Arg6446_5, Arg6446_6, Arg6446_7, Arg6446_8], undefined]]);})}, 9, [Arg6444_1, Arg6444_2, Arg6444_3, Arg6444_4, Arg6444_5, Arg6444_6, Arg6444_7, Arg6444_8, Arg6444_9], undefined]]);})}, 18, [R0, R1, R3, R6, R5, R7, R4, Arg6350_2, Arg6350_3, Arg6350_4, R2, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]]], Arg6350_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6451(Arg6450) {
  if (Arg6450.length < 18) return [Shen.type_func, shen_user_lambda6451, 18, Arg6450];
  var Arg6450_0 = Arg6450[0], Arg6450_1 = Arg6450[1], Arg6450_2 = Arg6450[2], Arg6450_3 = Arg6450[3], Arg6450_4 = Arg6450[4], Arg6450_5 = Arg6450[5], Arg6450_6 = Arg6450[6], Arg6450_7 = Arg6450[7], Arg6450_8 = Arg6450[8], Arg6450_9 = Arg6450[9], Arg6450_10 = Arg6450[10], Arg6450_11 = Arg6450[11], Arg6450_12 = Arg6450[12], Arg6450_13 = Arg6450[13], Arg6450_14 = Arg6450[14], Arg6450_15 = Arg6450[15], Arg6450_16 = Arg6450[16], Arg6450_17 = Arg6450[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6450_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6450_8, [Shen.type_func, function shen_user_lambda6453(Arg6452) {
  if (Arg6452.length < 9) return [Shen.type_func, shen_user_lambda6453, 9, Arg6452];
  var Arg6452_0 = Arg6452[0], Arg6452_1 = Arg6452[1], Arg6452_2 = Arg6452[2], Arg6452_3 = Arg6452[3], Arg6452_4 = Arg6452[4], Arg6452_5 = Arg6452[5], Arg6452_6 = Arg6452[6], Arg6452_7 = Arg6452[7], Arg6452_8 = Arg6452[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6452_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6452_4, Arg6452_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6452_0, Arg6452_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6452_1, Arg6452_7])]), Arg6452_7, [Shen.type_func, function shen_user_lambda6455(Arg6454) {
  if (Arg6454.length < 9) return [Shen.type_func, shen_user_lambda6455, 9, Arg6454];
  var Arg6454_0 = Arg6454[0], Arg6454_1 = Arg6454[1], Arg6454_2 = Arg6454[2], Arg6454_3 = Arg6454[3], Arg6454_4 = Arg6454[4], Arg6454_5 = Arg6454[5], Arg6454_6 = Arg6454[6], Arg6454_7 = Arg6454[7], Arg6454_8 = Arg6454[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6454_2, Arg6454_3, [Shen.type_cons, [Shen.type_cons, Arg6454_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6454_5, []]]], Arg6454_6], Arg6454_7, Arg6454_8]);})}, 9, [Arg6452_0, Arg6452_1, Arg6452_2, Arg6452_3, Arg6452_4, Arg6452_5, Arg6452_6, Arg6452_7, Arg6452_8], undefined]]);})}, 9, [Arg6450_1, Arg6450_2, Arg6450_3, Arg6450_4, Arg6450_5, Arg6450_6, Arg6450_7, Arg6450_8, Arg6450_9], undefined]]);})}, 18, [R0, R1, R3, R6, R5, R7, R4, Arg6350_2, Arg6350_3, Arg6350_4, R2, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R3, R6, Arg6350_2, Arg6350_3, [Shen.type_func, function shen_user_lambda6457(Arg6456) {
  if (Arg6456.length < 16) return [Shen.type_func, shen_user_lambda6457, 16, Arg6456];
  var Arg6456_0 = Arg6456[0], Arg6456_1 = Arg6456[1], Arg6456_2 = Arg6456[2], Arg6456_3 = Arg6456[3], Arg6456_4 = Arg6456[4], Arg6456_5 = Arg6456[5], Arg6456_6 = Arg6456[6], Arg6456_7 = Arg6456[7], Arg6456_8 = Arg6456[8], Arg6456_9 = Arg6456[9], Arg6456_10 = Arg6456[10], Arg6456_11 = Arg6456[11], Arg6456_12 = Arg6456[12], Arg6456_13 = Arg6456[13], Arg6456_14 = Arg6456[14], Arg6456_15 = Arg6456[15];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6456_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6456_8, [Shen.type_func, function shen_user_lambda6459(Arg6458) {
  if (Arg6458.length < 9) return [Shen.type_func, shen_user_lambda6459, 9, Arg6458];
  var Arg6458_0 = Arg6458[0], Arg6458_1 = Arg6458[1], Arg6458_2 = Arg6458[2], Arg6458_3 = Arg6458[3], Arg6458_4 = Arg6458[4], Arg6458_5 = Arg6458[5], Arg6458_6 = Arg6458[6], Arg6458_7 = Arg6458[7], Arg6458_8 = Arg6458[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6458_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6458_4, Arg6458_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6458_0, Arg6458_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6458_1, Arg6458_7])]), Arg6458_7, [Shen.type_func, function shen_user_lambda6461(Arg6460) {
  if (Arg6460.length < 9) return [Shen.type_func, shen_user_lambda6461, 9, Arg6460];
  var Arg6460_0 = Arg6460[0], Arg6460_1 = Arg6460[1], Arg6460_2 = Arg6460[2], Arg6460_3 = Arg6460[3], Arg6460_4 = Arg6460[4], Arg6460_5 = Arg6460[5], Arg6460_6 = Arg6460[6], Arg6460_7 = Arg6460[7], Arg6460_8 = Arg6460[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6460_2, Arg6460_3, [Shen.type_cons, [Shen.type_cons, Arg6460_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6460_5, []]]], Arg6460_6], Arg6460_7, Arg6460_8]);})}, 9, [Arg6458_0, Arg6458_1, Arg6458_2, Arg6458_3, Arg6458_4, Arg6458_5, Arg6458_6, Arg6458_7, Arg6458_8], undefined]]);})}, 9, [Arg6456_1, Arg6456_2, Arg6456_3, Arg6456_4, Arg6456_5, Arg6456_6, Arg6456_7, Arg6456_8, Arg6456_9], undefined]]);})}, 16, [R3, R1, R4, R2, Arg6350_1, R5, R6, Arg6350_2, Arg6350_3, Arg6350_4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "open"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "stream"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6350_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg6350_3, [Shen.type_func, function shen_user_lambda6463(Arg6462) {
  if (Arg6462.length < 9) return [Shen.type_func, shen_user_lambda6463, 9, Arg6462];
  var Arg6462_0 = Arg6462[0], Arg6462_1 = Arg6462[1], Arg6462_2 = Arg6462[2], Arg6462_3 = Arg6462[3], Arg6462_4 = Arg6462[4], Arg6462_5 = Arg6462[5], Arg6462_6 = Arg6462[6], Arg6462_7 = Arg6462[7], Arg6462_8 = Arg6462[8];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6462_3, Arg6462_7, [Shen.type_func, function shen_user_lambda6465(Arg6464) {
  if (Arg6464.length < 5) return [Shen.type_func, shen_user_lambda6465, 5, Arg6464];
  var Arg6464_0 = Arg6464[0], Arg6464_1 = Arg6464[1], Arg6464_2 = Arg6464[2], Arg6464_3 = Arg6464[3], Arg6464_4 = Arg6464[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6464_1, [Shen.type_symbol, "string"], Arg6464_2, Arg6464_3, Arg6464_4]);})}, 5, [Arg6462_3, Arg6462_2, Arg6462_6, Arg6462_7, Arg6462_8], undefined]]);})}, 9, [R2, R3, R1, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg6350_3, [Shen.type_func, function shen_user_lambda6467(Arg6466) {
  if (Arg6466.length < 10) return [Shen.type_func, shen_user_lambda6467, 10, Arg6466];
  var Arg6466_0 = Arg6466[0], Arg6466_1 = Arg6466[1], Arg6466_2 = Arg6466[2], Arg6466_3 = Arg6466[3], Arg6466_4 = Arg6466[4], Arg6466_5 = Arg6466[5], Arg6466_6 = Arg6466[6], Arg6466_7 = Arg6466[7], Arg6466_8 = Arg6466[8], Arg6466_9 = Arg6466[9];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6466_4, Arg6466_8, [Shen.type_func, function shen_user_lambda6469(Arg6468) {
  if (Arg6468.length < 5) return [Shen.type_func, shen_user_lambda6469, 5, Arg6468];
  var Arg6468_0 = Arg6468[0], Arg6468_1 = Arg6468[1], Arg6468_2 = Arg6468[2], Arg6468_3 = Arg6468[3], Arg6468_4 = Arg6468[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6468_1, [Shen.type_symbol, "string"], Arg6468_2, Arg6468_3, Arg6468_4]);})}, 5, [Arg6466_4, Arg6466_2, Arg6466_7, Arg6466_8, Arg6466_9], undefined]]);})}, 10, [R2, R3, R1, R4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg6350_3, [Shen.type_func, function shen_user_lambda6471(Arg6470) {
  if (Arg6470.length < 14) return [Shen.type_func, shen_user_lambda6471, 14, Arg6470];
  var Arg6470_0 = Arg6470[0], Arg6470_1 = Arg6470[1], Arg6470_2 = Arg6470[2], Arg6470_3 = Arg6470[3], Arg6470_4 = Arg6470[4], Arg6470_5 = Arg6470[5], Arg6470_6 = Arg6470[6], Arg6470_7 = Arg6470[7], Arg6470_8 = Arg6470[8], Arg6470_9 = Arg6470[9], Arg6470_10 = Arg6470[10], Arg6470_11 = Arg6470[11], Arg6470_12 = Arg6470[12], Arg6470_13 = Arg6470[13];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6470_2, Arg6470_7, [Shen.type_func, function shen_user_lambda6473(Arg6472) {
  if (Arg6472.length < 5) return [Shen.type_func, shen_user_lambda6473, 5, Arg6472];
  var Arg6472_0 = Arg6472[0], Arg6472_1 = Arg6472[1], Arg6472_2 = Arg6472[2], Arg6472_3 = Arg6472[3], Arg6472_4 = Arg6472[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6472_1, [Shen.type_symbol, "string"], Arg6472_2, Arg6472_3, Arg6472_4]);})}, 5, [Arg6470_2, Arg6470_3, Arg6470_4, Arg6470_7, Arg6470_5], undefined]]);})}, 14, [R2, R3, R0, R1, Arg6350_2, Arg6350_4, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "stream"], Arg6350_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg6350_3, [Shen.type_func, function shen_user_lambda6475(Arg6474) {
  if (Arg6474.length < 11) return [Shen.type_func, shen_user_lambda6475, 11, Arg6474];
  var Arg6474_0 = Arg6474[0], Arg6474_1 = Arg6474[1], Arg6474_2 = Arg6474[2], Arg6474_3 = Arg6474[3], Arg6474_4 = Arg6474[4], Arg6474_5 = Arg6474[5], Arg6474_6 = Arg6474[6], Arg6474_7 = Arg6474[7], Arg6474_8 = Arg6474[8], Arg6474_9 = Arg6474[9], Arg6474_10 = Arg6474[10];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6474_5, Arg6474_4, [Shen.type_func, function shen_user_lambda6477(Arg6476) {
  if (Arg6476.length < 5) return [Shen.type_func, shen_user_lambda6477, 5, Arg6476];
  var Arg6476_0 = Arg6476[0], Arg6476_1 = Arg6476[1], Arg6476_2 = Arg6476[2], Arg6476_3 = Arg6476[3], Arg6476_4 = Arg6476[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6476_1, [Shen.type_symbol, "string"], Arg6476_2, Arg6476_3, Arg6476_4]);})}, 5, [Arg6474_5, Arg6474_2, Arg6474_8, Arg6474_4, Arg6474_9], undefined]]);})}, 11, [R5, R3, R1, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg6350_3, [Shen.type_func, function shen_user_lambda6479(Arg6478) {
  if (Arg6478.length < 12) return [Shen.type_func, shen_user_lambda6479, 12, Arg6478];
  var Arg6478_0 = Arg6478[0], Arg6478_1 = Arg6478[1], Arg6478_2 = Arg6478[2], Arg6478_3 = Arg6478[3], Arg6478_4 = Arg6478[4], Arg6478_5 = Arg6478[5], Arg6478_6 = Arg6478[6], Arg6478_7 = Arg6478[7], Arg6478_8 = Arg6478[8], Arg6478_9 = Arg6478[9], Arg6478_10 = Arg6478[10], Arg6478_11 = Arg6478[11];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6478_6, Arg6478_5, [Shen.type_func, function shen_user_lambda6481(Arg6480) {
  if (Arg6480.length < 5) return [Shen.type_func, shen_user_lambda6481, 5, Arg6480];
  var Arg6480_0 = Arg6480[0], Arg6480_1 = Arg6480[1], Arg6480_2 = Arg6480[2], Arg6480_3 = Arg6480[3], Arg6480_4 = Arg6480[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6480_1, [Shen.type_symbol, "string"], Arg6480_2, Arg6480_3, Arg6480_4]);})}, 5, [Arg6478_6, Arg6478_2, Arg6478_9, Arg6478_5, Arg6478_10], undefined]]);})}, 12, [R5, R3, R1, R2, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg6350_3, [Shen.type_func, function shen_user_lambda6483(Arg6482) {
  if (Arg6482.length < 16) return [Shen.type_func, shen_user_lambda6483, 16, Arg6482];
  var Arg6482_0 = Arg6482[0], Arg6482_1 = Arg6482[1], Arg6482_2 = Arg6482[2], Arg6482_3 = Arg6482[3], Arg6482_4 = Arg6482[4], Arg6482_5 = Arg6482[5], Arg6482_6 = Arg6482[6], Arg6482_7 = Arg6482[7], Arg6482_8 = Arg6482[8], Arg6482_9 = Arg6482[9], Arg6482_10 = Arg6482[10], Arg6482_11 = Arg6482[11], Arg6482_12 = Arg6482[12], Arg6482_13 = Arg6482[13], Arg6482_14 = Arg6482[14], Arg6482_15 = Arg6482[15];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6482_2, Arg6482_7, [Shen.type_func, function shen_user_lambda6485(Arg6484) {
  if (Arg6484.length < 5) return [Shen.type_func, shen_user_lambda6485, 5, Arg6484];
  var Arg6484_0 = Arg6484[0], Arg6484_1 = Arg6484[1], Arg6484_2 = Arg6484[2], Arg6484_3 = Arg6484[3], Arg6484_4 = Arg6484[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6484_1, [Shen.type_symbol, "string"], Arg6484_2, Arg6484_3, Arg6484_4]);})}, 5, [Arg6482_2, Arg6482_3, Arg6482_4, Arg6482_7, Arg6482_5], undefined]]);})}, 16, [R5, R3, R0, R1, Arg6350_2, Arg6350_4, R2, Arg6350_3, R4, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6350_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, R4, []]], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R3, Arg6350_3, [Shen.type_func, function shen_user_lambda6487(Arg6486) {
  if (Arg6486.length < 14) return [Shen.type_func, shen_user_lambda6487, 14, Arg6486];
  var Arg6486_0 = Arg6486[0], Arg6486_1 = Arg6486[1], Arg6486_2 = Arg6486[2], Arg6486_3 = Arg6486[3], Arg6486_4 = Arg6486[4], Arg6486_5 = Arg6486[5], Arg6486_6 = Arg6486[6], Arg6486_7 = Arg6486[7], Arg6486_8 = Arg6486[8], Arg6486_9 = Arg6486[9], Arg6486_10 = Arg6486[10], Arg6486_11 = Arg6486[11], Arg6486_12 = Arg6486[12], Arg6486_13 = Arg6486[13];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6486_2, Arg6486_7, [Shen.type_func, function shen_user_lambda6489(Arg6488) {
  if (Arg6488.length < 5) return [Shen.type_func, shen_user_lambda6489, 5, Arg6488];
  var Arg6488_0 = Arg6488[0], Arg6488_1 = Arg6488[1], Arg6488_2 = Arg6488[2], Arg6488_3 = Arg6488[3], Arg6488_4 = Arg6488[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6488_1, [Shen.type_symbol, "string"], Arg6488_2, Arg6488_3, Arg6488_4]);})}, 5, [Arg6486_2, Arg6486_3, Arg6486_4, Arg6486_7, Arg6486_5], undefined]]);})}, 14, [R4, R3, R0, R1, Arg6350_2, Arg6350_4, R2, Arg6350_3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6491(Arg6490) {
  if (Arg6490.length < 8) return [Shen.type_func, shen_user_lambda6491, 8, Arg6490];
  var Arg6490_0 = Arg6490[0], Arg6490_1 = Arg6490[1], Arg6490_2 = Arg6490[2], Arg6490_3 = Arg6490[3], Arg6490_4 = Arg6490[4], Arg6490_5 = Arg6490[5], Arg6490_6 = Arg6490[6], Arg6490_7 = Arg6490[7];
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg6490_1, Arg6490_4, Arg6490_6, [Shen.type_func, function shen_user_lambda6493(Arg6492) {
  if (Arg6492.length < 6) return [Shen.type_func, shen_user_lambda6493, 6, Arg6492];
  var Arg6492_0 = Arg6492[0], Arg6492_1 = Arg6492[1], Arg6492_2 = Arg6492[2], Arg6492_3 = Arg6492[3], Arg6492_4 = Arg6492[4], Arg6492_5 = Arg6492[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6492_1, Arg6492_2, Arg6492_3, Arg6492_4, Arg6492_5]);})}, 6, [Arg6490_4, Arg6490_0, Arg6490_1, Arg6490_5, Arg6490_6, Arg6490_7], undefined]]);})}, 8, [R1, R3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["bind"], [R2, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6350_3])]), Arg6350_3, [Shen.type_func, function shen_user_lambda6495(Arg6494) {
  if (Arg6494.length < 13) return [Shen.type_func, shen_user_lambda6495, 13, Arg6494];
  var Arg6494_0 = Arg6494[0], Arg6494_1 = Arg6494[1], Arg6494_2 = Arg6494[2], Arg6494_3 = Arg6494[3], Arg6494_4 = Arg6494[4], Arg6494_5 = Arg6494[5], Arg6494_6 = Arg6494[6], Arg6494_7 = Arg6494[7], Arg6494_8 = Arg6494[8], Arg6494_9 = Arg6494[9], Arg6494_10 = Arg6494[10], Arg6494_11 = Arg6494[11], Arg6494_12 = Arg6494[12];
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg6494_1, Arg6494_2, Arg6494_5, [Shen.type_func, function shen_user_lambda6497(Arg6496) {
  if (Arg6496.length < 6) return [Shen.type_func, shen_user_lambda6497, 6, Arg6496];
  var Arg6496_0 = Arg6496[0], Arg6496_1 = Arg6496[1], Arg6496_2 = Arg6496[2], Arg6496_3 = Arg6496[3], Arg6496_4 = Arg6496[4], Arg6496_5 = Arg6496[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6496_2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], Arg6496_3, Arg6496_4, Arg6496_5]);})}, 6, [Arg6494_1, Arg6494_2, Arg6494_3, Arg6494_4, Arg6494_5, Arg6494_6], undefined]]);})}, 13, [R1, Arg6350_1, R2, R3, Arg6350_2, Arg6350_3, Arg6350_4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6499(Arg6498) {
  if (Arg6498.length < 8) return [Shen.type_func, shen_user_lambda6499, 8, Arg6498];
  var Arg6498_0 = Arg6498[0], Arg6498_1 = Arg6498[1], Arg6498_2 = Arg6498[2], Arg6498_3 = Arg6498[3], Arg6498_4 = Arg6498[4], Arg6498_5 = Arg6498[5], Arg6498_6 = Arg6498[6], Arg6498_7 = Arg6498[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6498_0, [Shen.type_symbol, "symbol"], Arg6498_5, Arg6498_6, [Shen.type_func, function shen_user_lambda6501(Arg6500) {
  if (Arg6500.length < 7) return [Shen.type_func, shen_user_lambda6501, 7, Arg6500];
  var Arg6500_0 = Arg6500[0], Arg6500_1 = Arg6500[1], Arg6500_2 = Arg6500[2], Arg6500_3 = Arg6500[3], Arg6500_4 = Arg6500[4], Arg6500_5 = Arg6500[5], Arg6500_6 = Arg6500[6];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6500_0, Arg6500_5, [Shen.type_func, function shen_user_lambda6503(Arg6502) {
  if (Arg6502.length < 7) return [Shen.type_func, shen_user_lambda6503, 7, Arg6502];
  var Arg6502_0 = Arg6502[0], Arg6502_1 = Arg6502[1], Arg6502_2 = Arg6502[2], Arg6502_3 = Arg6502[3], Arg6502_4 = Arg6502[4], Arg6502_5 = Arg6502[5], Arg6502_6 = Arg6502[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [[Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, Arg6502_1, []]], Arg6502_3, Arg6502_4, Arg6502_5, [Shen.type_func, function shen_user_lambda6505(Arg6504) {
  if (Arg6504.length < 6) return [Shen.type_func, shen_user_lambda6505, 6, Arg6504];
  var Arg6504_0 = Arg6504[0], Arg6504_1 = Arg6504[1], Arg6504_2 = Arg6504[2], Arg6504_3 = Arg6504[3], Arg6504_4 = Arg6504[4], Arg6504_5 = Arg6504[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6504_1, Arg6504_2, Arg6504_3, Arg6504_4, Arg6504_5]);})}, 6, [Arg6502_1, Arg6502_2, Arg6502_3, Arg6502_4, Arg6502_5, Arg6502_6], undefined]]);})}, 7, [Arg6500_0, Arg6500_1, Arg6500_2, Arg6500_3, Arg6500_4, Arg6500_5, Arg6500_6], undefined]]);})}, 7, [Arg6498_2, Arg6498_0, Arg6498_1, Arg6498_4, Arg6498_5, Arg6498_6, Arg6498_7], undefined]]);})}, 8, [R1, R3, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.<-sem"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6507(Arg6506) {
  if (Arg6506.length < 15) return [Shen.type_func, shen_user_lambda6507, 15, Arg6506];
  var Arg6506_0 = Arg6506[0], Arg6506_1 = Arg6506[1], Arg6506_2 = Arg6506[2], Arg6506_3 = Arg6506[3], Arg6506_4 = Arg6506[4], Arg6506_5 = Arg6506[5], Arg6506_6 = Arg6506[6], Arg6506_7 = Arg6506[7], Arg6506_8 = Arg6506[8], Arg6506_9 = Arg6506[9], Arg6506_10 = Arg6506[10], Arg6506_11 = Arg6506[11], Arg6506_12 = Arg6506[12], Arg6506_13 = Arg6506[13], Arg6506_14 = Arg6506[14];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6506_1, [Shen.type_cons, Arg6506_0, [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6506_5, []]]], Arg6506_6, Arg6506_7, [Shen.type_func, function shen_user_lambda6509(Arg6508) {
  if (Arg6508.length < 9) return [Shen.type_func, shen_user_lambda6509, 9, Arg6508];
  var Arg6508_0 = Arg6508[0], Arg6508_1 = Arg6508[1], Arg6508_2 = Arg6508[2], Arg6508_3 = Arg6508[3], Arg6508_4 = Arg6508[4], Arg6508_5 = Arg6508[5], Arg6508_6 = Arg6508[6], Arg6508_7 = Arg6508[7], Arg6508_8 = Arg6508[8];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6508_2, Arg6508_7, [Shen.type_func, function shen_user_lambda6511(Arg6510) {
  if (Arg6510.length < 8) return [Shen.type_func, shen_user_lambda6511, 8, Arg6510];
  var Arg6510_0 = Arg6510[0], Arg6510_1 = Arg6510[1], Arg6510_2 = Arg6510[2], Arg6510_3 = Arg6510[3], Arg6510_4 = Arg6510[4], Arg6510_5 = Arg6510[5], Arg6510_6 = Arg6510[6], Arg6510_7 = Arg6510[7];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6510_3, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Shen.call(Shen.fns["shen.lazyderef"], [Arg6510_0, Arg6510_6])]), Arg6510_6, [Shen.type_func, function shen_user_lambda6513(Arg6512) {
  if (Arg6512.length < 8) return [Shen.type_func, shen_user_lambda6513, 8, Arg6512];
  var Arg6512_0 = Arg6512[0], Arg6512_1 = Arg6512[1], Arg6512_2 = Arg6512[2], Arg6512_3 = Arg6512[3], Arg6512_4 = Arg6512[4], Arg6512_5 = Arg6512[5], Arg6512_6 = Arg6512[6], Arg6512_7 = Arg6512[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6512_1, Arg6512_6, [Shen.type_func, function shen_user_lambda6515(Arg6514) {
  if (Arg6514.length < 7) return [Shen.type_func, shen_user_lambda6515, 7, Arg6514];
  var Arg6514_0 = Arg6514[0], Arg6514_1 = Arg6514[1], Arg6514_2 = Arg6514[2], Arg6514_3 = Arg6514[3], Arg6514_4 = Arg6514[4], Arg6514_5 = Arg6514[5], Arg6514_6 = Arg6514[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6514_2, Arg6514_1, [Shen.type_cons, [Shen.type_cons, Arg6514_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6514_3, []]]], Arg6514_4], Arg6514_5, Arg6514_6]);})}, 7, [Arg6512_1, Arg6512_2, Arg6512_3, Arg6512_4, Arg6512_5, Arg6512_6, Arg6512_7], undefined]]);})}, 8, [Arg6510_0, Arg6510_1, Arg6510_2, Arg6510_3, Arg6510_4, Arg6510_5, Arg6510_6, Arg6510_7], undefined]]);})}, 8, [Arg6508_1, Arg6508_2, Arg6508_3, Arg6508_4, Arg6508_5, Arg6508_6, Arg6508_7, Arg6508_8], undefined]]);})}, 9, [Arg6506_0, Arg6506_1, Arg6506_2, Arg6506_3, Arg6506_4, Arg6506_5, Arg6506_6, Arg6506_7, Arg6506_8], undefined]]);})}, 15, [R2, R1, R0, Arg6350_1, R3, R4, Arg6350_2, Arg6350_3, Arg6350_4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6350_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "symbol"], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6350_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6350_3]),
  (R1 = R1))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-hyps"], [Arg6350_2, R1, Arg6350_3, [Shen.type_func, function shen_user_lambda6517(Arg6516) {
  if (Arg6516.length < 12) return [Shen.type_func, shen_user_lambda6517, 12, Arg6516];
  var Arg6516_0 = Arg6516[0], Arg6516_1 = Arg6516[1], Arg6516_2 = Arg6516[2], Arg6516_3 = Arg6516[3], Arg6516_4 = Arg6516[4], Arg6516_5 = Arg6516[5], Arg6516_6 = Arg6516[6], Arg6516_7 = Arg6516[7], Arg6516_8 = Arg6516[8], Arg6516_9 = Arg6516[9], Arg6516_10 = Arg6516[10], Arg6516_11 = Arg6516[11];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6516_1, Arg6516_2, Arg6516_3, Arg6516_4, Arg6516_5]);})}, 12, [Arg6350_2, Arg6350_0, Arg6350_1, R1, Arg6350_3, Arg6350_4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6519(Arg6518) {
  if (Arg6518.length < 13) return [Shen.type_func, shen_user_lambda6519, 13, Arg6518];
  var Arg6518_0 = Arg6518[0], Arg6518_1 = Arg6518[1], Arg6518_2 = Arg6518[2], Arg6518_3 = Arg6518[3], Arg6518_4 = Arg6518[4], Arg6518_5 = Arg6518[5], Arg6518_6 = Arg6518[6], Arg6518_7 = Arg6518[7], Arg6518_8 = Arg6518[8], Arg6518_9 = Arg6518[9], Arg6518_10 = Arg6518[10], Arg6518_11 = Arg6518[11], Arg6518_12 = Arg6518[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6518_1, Arg6518_2]], Arg6518_3, Arg6518_4, Arg6518_5, Arg6518_6]);})}, 13, [R0, R1, R2, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6350_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, [Shen.type_func, function shen_user_lambda6521(Arg6520) {
  if (Arg6520.length < 13) return [Shen.type_func, shen_user_lambda6521, 13, Arg6520];
  var Arg6520_0 = Arg6520[0], Arg6520_1 = Arg6520[1], Arg6520_2 = Arg6520[2], Arg6520_3 = Arg6520[3], Arg6520_4 = Arg6520[4], Arg6520_5 = Arg6520[5], Arg6520_6 = Arg6520[6], Arg6520_7 = Arg6520[7], Arg6520_8 = Arg6520[8], Arg6520_9 = Arg6520[9], Arg6520_10 = Arg6520[10], Arg6520_11 = Arg6520[11], Arg6520_12 = Arg6520[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defcc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg6520_1, Arg6520_2]], Arg6520_3, Arg6520_4, Arg6520_5, Arg6520_6]);})}, 13, [R0, R1, R2, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4, R0, Arg6350_0, Arg6350_1, Arg6350_2, Arg6350_3, Arg6350_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "unit"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, Arg6350_4])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "unit"], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["cut"], [R0, Arg6350_3, Arg6350_4]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6350_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.process-datatype"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6350_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6350_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6350_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_0, Arg6350_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6350_1, Arg6350_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6350_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg6350_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6350_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6350_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6350_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, (Shen.globals["shen.*datatypes*"]), Arg6350_3, [Shen.type_func, function shen_user_lambda6523(Arg6522) {
  if (Arg6522.length < 6) return [Shen.type_func, shen_user_lambda6523, 6, Arg6522];
  var Arg6522_0 = Arg6522[0], Arg6522_1 = Arg6522[1], Arg6522_2 = Arg6522[2], Arg6522_3 = Arg6522[3], Arg6522_4 = Arg6522[4], Arg6522_5 = Arg6522[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [[Shen.type_cons, Arg6522_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6522_1, []]]], Arg6522_2, Arg6522_3, Arg6522_4, Arg6522_5]);})}, 6, [Arg6350_0, Arg6350_1, Arg6350_2, R1, Arg6350_3, Arg6350_4], undefined]]))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.th*"];





Shen.fns["shen.t*-hyps"] = [Shen.type_func, function shen_user_lambda6525(Arg6524) {
  if (Arg6524.length < 4) return [Shen.type_func, shen_user_lambda6525, 4, Arg6524];
  var Arg6524_0 = Arg6524[0], Arg6524_1 = Arg6524[1], Arg6524_2 = Arg6524[2], Arg6524_3 = Arg6524[3];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6524_0, Arg6524_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6524_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6524_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6524_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "list"], Arg6524_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R5, []]], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6524_0, Arg6524_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6524_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg6524_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg6524_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6524_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6524_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R1, []], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6524_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, "*"], Arg6524_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R7 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R7, []], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6524_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R0 = R6))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]]], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R0 = R6))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6524_0, Arg6524_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6524_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6524_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6524_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "vector"], Arg6524_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R5, []]], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6524_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6524_0, Arg6524_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6524_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6524_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6524_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "string"], Arg6524_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6524_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6524_2])]], Arg6524_2, Arg6524_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6524_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6524_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6524_2])]], Arg6524_2, Arg6524_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6524_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6524_2]),
  (R0 = R4))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6524_0, Arg6524_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6524_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6524_1, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6524_2]), Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6524_2])], Arg6524_2, [Shen.type_func, function shen_user_lambda6527(Arg6526) {
  if (Arg6526.length < 6) return [Shen.type_func, shen_user_lambda6527, 6, Arg6526];
  var Arg6526_0 = Arg6526[0], Arg6526_1 = Arg6526[1], Arg6526_2 = Arg6526[2], Arg6526_3 = Arg6526[3], Arg6526_4 = Arg6526[4], Arg6526_5 = Arg6526[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-hyps"], [Arg6526_2, Arg6526_3, Arg6526_4, Arg6526_5]);})}, 6, [Arg6524_1, R1, R0, R2, Arg6524_2, Arg6524_3], undefined]]);}))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.t*-hyps"];





Shen.fns["shen.show"] = [Shen.type_func, function shen_user_lambda6529(Arg6528) {
  if (Arg6528.length < 4) return [Shen.type_func, shen_user_lambda6529, 4, Arg6528];
  var Arg6528_0 = Arg6528[0], Arg6528_1 = Arg6528[1], Arg6528_2 = Arg6528[2], Arg6528_3 = Arg6528[3];
  return (((Shen.globals["shen.*spy*"]))
  ? (Shen.call(Shen.fns["shen.line"], []),
  Shen.call(Shen.fns["shen.show-p"], [Shen.call(Shen.fns["shen.deref"], [Arg6528_0, Arg6528_2])]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["shen.show-assumptions"], [Shen.call(Shen.fns["shen.deref"], [Arg6528_1, Arg6528_2]), 1]),
  Shen.call(Shen.fns["shen.prhush"], ["\x0d\x0a> ", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.pause-for-user"], []),
  Shen.thaw(Arg6528_3))
  : Shen.thaw(Arg6528_3))}, 4, [], "shen.show"];





Shen.fns["shen.line"] = [Shen.type_func, function shen_user_lambda6531(Arg6530) {
  if (Arg6530.length < 0) return [Shen.type_func, shen_user_lambda6531, 0, Arg6530];
  var R0;
  return ((R0 = Shen.call(Shen.fns["inferences"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("____________________________________________________________ " + Shen.call(Shen.fns["shen.app"], [R0, (" inference" + Shen.call(Shen.fns["shen.app"], [((Shen.unwind_tail(Shen.$eq$(1, R0)))
  ? ""
  : "s"), " \x0d\x0a?- ", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.line"];





Shen.fns["shen.show-p"] = [Shen.type_func, function shen_user_lambda6533(Arg6532) {
  if (Arg6532.length < 1) return [Shen.type_func, shen_user_lambda6533, 1, Arg6532];
  var Arg6532_0 = Arg6532[0];
  return (((Shen.is_type(Arg6532_0, Shen.type_cons) && (Shen.is_type(Arg6532_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6532_0[2][1])) && (Shen.is_type(Arg6532_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6532_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg6532_0[1], (" : " + Shen.call(Shen.fns["shen.app"], [Arg6532_0[2][2][1], "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], [])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg6532_0, "", [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], [])]);}))}, 1, [], "shen.show-p"];





Shen.fns["shen.show-assumptions"] = [Shen.type_func, function shen_user_lambda6535(Arg6534) {
  if (Arg6534.length < 2) return [Shen.type_func, shen_user_lambda6535, 2, Arg6534];
  var Arg6534_0 = Arg6534[0], Arg6534_1 = Arg6534[1];
  return ((Shen.empty$question$(Arg6534_0))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.is_type(Arg6534_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg6534_1, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.show-p"], [Arg6534_0[1]]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.show-assumptions"], [Arg6534_0[2], (Arg6534_1 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.show-assumptions"]]);})))}, 2, [], "shen.show-assumptions"];





Shen.fns["shen.pause-for-user"] = [Shen.type_func, function shen_user_lambda6537(Arg6536) {
  if (Arg6536.length < 0) return [Shen.type_func, shen_user_lambda6537, 0, Arg6536];
  var R0;
  return ((R0 = Shen.read_byte(Shen.call(Shen.fns["stinput"], []))),
  ((Shen.unwind_tail(Shen.$eq$(R0, 94)))
  ? (function() {
  return Shen.simple_error("input aborted\x0d\x0a");})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);})))}, 0, [], "shen.pause-for-user"];





Shen.fns["shen.typedf?"] = [Shen.type_func, function shen_user_lambda6539(Arg6538) {
  if (Arg6538.length < 1) return [Shen.type_func, shen_user_lambda6539, 1, Arg6538];
  var Arg6538_0 = Arg6538[0];
  return Shen.is_type(Shen.call(Shen.fns["assoc"], [Arg6538_0, (Shen.globals["shen.*signedfuncs*"])]), Shen.type_cons)}, 1, [], "shen.typedf?"];





Shen.fns["shen.sigf"] = [Shen.type_func, function shen_user_lambda6541(Arg6540) {
  if (Arg6540.length < 1) return [Shen.type_func, shen_user_lambda6541, 1, Arg6540];
  var Arg6540_0 = Arg6540[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg6540_0]);})}, 1, [], "shen.sigf"];





Shen.fns["shen.placeholder"] = [Shen.type_func, function shen_user_lambda6543(Arg6542) {
  if (Arg6542.length < 0) return [Shen.type_func, shen_user_lambda6543, 0, Arg6542];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "&&"]]);})}, 0, [], "shen.placeholder"];





Shen.fns["shen.base"] = [Shen.type_func, function shen_user_lambda6545(Arg6544) {
  if (Arg6544.length < 4) return [Shen.type_func, shen_user_lambda6545, 4, Arg6544];
  var Arg6544_0 = Arg6544[0], Arg6544_1 = Arg6544[1], Arg6544_2 = Arg6544[2], Arg6544_3 = Arg6544[3];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_1, Arg6544_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_0, Arg6544_2])) == 'number'), Arg6544_2, Arg6544_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "number"], Arg6544_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_0, Arg6544_2])) == 'number'), Arg6544_2, Arg6544_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6544_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_1, Arg6544_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_0, Arg6544_2])), Arg6544_2, Arg6544_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "boolean"], Arg6544_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_0, Arg6544_2])), Arg6544_2, Arg6544_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6544_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_1, Arg6544_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_0, Arg6544_2])) == 'string'), Arg6544_2, Arg6544_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "string"], Arg6544_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_0, Arg6544_2])) == 'string'), Arg6544_2, Arg6544_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6544_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_1, Arg6544_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_0, Arg6544_2]), Shen.type_symbol), Arg6544_2, [Shen.type_func, function shen_user_lambda6547(Arg6546) {
  if (Arg6546.length < 4) return [Shen.type_func, shen_user_lambda6547, 4, Arg6546];
  var Arg6546_0 = Arg6546[0], Arg6546_1 = Arg6546[1], Arg6546_2 = Arg6546[2], Arg6546_3 = Arg6546[3];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6546_0, Arg6546_3])])), Arg6546_3, Arg6546_2]);})}, 4, [Arg6544_0, Arg6544_1, Arg6544_3, Arg6544_2], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "symbol"], Arg6544_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_0, Arg6544_2]), Shen.type_symbol), Arg6544_2, [Shen.type_func, function shen_user_lambda6549(Arg6548) {
  if (Arg6548.length < 5) return [Shen.type_func, shen_user_lambda6549, 5, Arg6548];
  var Arg6548_0 = Arg6548[0], Arg6548_1 = Arg6548[1], Arg6548_2 = Arg6548[2], Arg6548_3 = Arg6548[3], Arg6548_4 = Arg6548[4];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6548_1, Arg6548_4])])), Arg6548_4, Arg6548_3]);})}, 5, [R0, Arg6544_0, Arg6544_1, Arg6544_3, Arg6544_2], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6544_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_0, Arg6544_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6544_1, Arg6544_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6544_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6544_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? (R1[1],
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6544_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.thaw(Arg6544_3))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6544_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6544_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6544_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6544_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, []], Arg6544_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6544_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6544_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "list"], Arg6544_2]),
  ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6544_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0[1],
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6544_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6544_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg6544_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg6544_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6544_2]),
  (R0 = R2))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6544_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, R2, []], Arg6544_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg6544_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6544_2]),
  (R0 = R2))
  : (R0 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6544_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6544_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R1, []]], Arg6544_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6544_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6544_2]),
  R1)
  : false)))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.base"];





Shen.fns["shen.by_hypothesis"] = [Shen.type_func, function shen_user_lambda6551(Arg6550) {
  if (Arg6550.length < 5) return [Shen.type_func, shen_user_lambda6551, 5, Arg6550];
  var Arg6550_0 = Arg6550[0], Arg6550_1 = Arg6550[1], Arg6550_2 = Arg6550[2], Arg6550_3 = Arg6550[3], Arg6550_4 = Arg6550[4];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6550_2, Arg6550_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6550_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6550_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6550_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6550_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R0 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6550_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["identical"], [Arg6550_0, R1, Arg6550_3, [Shen.type_func, function shen_user_lambda6553(Arg6552) {
  if (Arg6552.length < 7) return [Shen.type_func, shen_user_lambda6553, 7, Arg6552];
  var Arg6552_0 = Arg6552[0], Arg6552_1 = Arg6552[1], Arg6552_2 = Arg6552[2], Arg6552_3 = Arg6552[3], Arg6552_4 = Arg6552[4], Arg6552_5 = Arg6552[5], Arg6552_6 = Arg6552[6];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6552_4, Arg6552_1, Arg6552_5, Arg6552_6]);})}, 7, [R1, R0, Arg6550_2, Arg6550_0, Arg6550_1, Arg6550_3, Arg6550_4], undefined]])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6550_2, Arg6550_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.by_hypothesis"], [Arg6550_0, Arg6550_1, R0, Arg6550_3, Arg6550_4]);}))
  : false))
  : R0))}, 5, [], "shen.by_hypothesis"];





Shen.fns["shen.t*-def"] = [Shen.type_func, function shen_user_lambda6555(Arg6554) {
  if (Arg6554.length < 5) return [Shen.type_func, shen_user_lambda6555, 5, Arg6554];
  var Arg6554_0 = Arg6554[0], Arg6554_1 = Arg6554[1], Arg6554_2 = Arg6554[2], Arg6554_3 = Arg6554[3], Arg6554_4 = Arg6554[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6554_0, Arg6554_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6554_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6554_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.newpv"], [Arg6554_3]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defh"], [Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6557(Arg6556) {
  if (Arg6556.length < 1) return [Shen.type_func, shen_user_lambda6557, 1, Arg6556];
  var Arg6556_0 = Arg6556[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<sig+rules>"], [Arg6556_0]);})}, 1, [], undefined], R1, [Shen.type_func, function shen_user_lambda6559(Arg6558) {
  if (Arg6558.length < 1) return [Shen.type_func, shen_user_lambda6559, 1, Arg6558];
  var Arg6558_0 = Arg6558[0];
  return ((Shen.is_type(Arg6558_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg6558_0, "\x0d\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0d\x0a");}))}, 1, [], undefined]]), R0, Arg6554_1, Arg6554_2, Arg6554_3, Arg6554_4]);}))
  : false))
  : false))
  : false))}, 5, [], "shen.t*-def"];





Shen.fns["shen.t*-defh"] = [Shen.type_func, function shen_user_lambda6561(Arg6560) {
  if (Arg6560.length < 6) return [Shen.type_func, shen_user_lambda6561, 6, Arg6560];
  var Arg6560_0 = Arg6560[0], Arg6560_1 = Arg6560[1], Arg6560_2 = Arg6560[2], Arg6560_3 = Arg6560[3], Arg6560_4 = Arg6560[4], Arg6560_5 = Arg6560[5];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6560_0, Arg6560_4])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defhh"], [R1, Shen.call(Shen.fns["shen.ue-sig"], [R1]), Arg6560_1, Arg6560_2, Arg6560_3, R0, Arg6560_4, Arg6560_5]);}))
  : false))}, 6, [], "shen.t*-defh"];





Shen.fns["shen.t*-defhh"] = [Shen.type_func, function shen_user_lambda6563(Arg6562) {
  if (Arg6562.length < 8) return [Shen.type_func, shen_user_lambda6563, 8, Arg6562];
  var Arg6562_0 = Arg6562[0], Arg6562_1 = Arg6562[1], Arg6562_2 = Arg6562[2], Arg6562_3 = Arg6562[3], Arg6562_4 = Arg6562[4], Arg6562_5 = Arg6562[5], Arg6562_6 = Arg6562[6], Arg6562_7 = Arg6562[7];
  return (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg6562_5, Arg6562_1, 1, Arg6562_2, [Shen.type_cons, [Shen.type_cons, Arg6562_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6562_1, []]]], Arg6562_4], Arg6562_6, [Shen.type_func, function shen_user_lambda6565(Arg6564) {
  if (Arg6564.length < 8) return [Shen.type_func, shen_user_lambda6565, 8, Arg6564];
  var Arg6564_0 = Arg6564[0], Arg6564_1 = Arg6564[1], Arg6564_2 = Arg6564[2], Arg6564_3 = Arg6564[3], Arg6564_4 = Arg6564[4], Arg6564_5 = Arg6564[5], Arg6564_6 = Arg6564[6], Arg6564_7 = Arg6564[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.memo"], [Arg6564_3, Arg6564_4, Arg6564_5, Arg6564_6, Arg6564_7]);})}, 8, [Arg6562_5, Arg6562_1, Arg6562_4, Arg6562_2, Arg6562_0, Arg6562_3, Arg6562_6, Arg6562_7], undefined]]);}))}, 8, [], "shen.t*-defhh"];





Shen.fns["shen.memo"] = [Shen.type_func, function shen_user_lambda6567(Arg6566) {
  if (Arg6566.length < 5) return [Shen.type_func, shen_user_lambda6567, 5, Arg6566];
  var Arg6566_0 = Arg6566[0], Arg6566_1 = Arg6566[1], Arg6566_2 = Arg6566[2], Arg6566_3 = Arg6566[3], Arg6566_4 = Arg6566[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6566_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6566_2, Arg6566_1, Arg6566_3, [Shen.type_func, function shen_user_lambda6569(Arg6568) {
  if (Arg6568.length < 6) return [Shen.type_func, shen_user_lambda6569, 6, Arg6568];
  var Arg6568_0 = Arg6568[0], Arg6568_1 = Arg6568[1], Arg6568_2 = Arg6568[2], Arg6568_3 = Arg6568[3], Arg6568_4 = Arg6568[4], Arg6568_5 = Arg6568[5];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6568_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6568_2, Arg6568_4]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6568_3, Arg6568_4])]), Arg6568_4, Arg6568_5]);})}, 6, [Arg6566_1, R0, Arg6566_0, Arg6566_2, Arg6566_3, Arg6566_4], undefined]]);}))}, 5, [], "shen.memo"];





Shen.fns["shen.<sig+rules>"] = [Shen.type_func, function shen_user_lambda6571(Arg6570) {
  if (Arg6570.length < 1) return [Shen.type_func, shen_user_lambda6571, 1, Arg6570];
  var Arg6570_0 = Arg6570[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg6570_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rules>"];





Shen.fns["shen.ue"] = [Shen.type_func, function shen_user_lambda6573(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6573, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  return (((Shen.is_type(Arg6572_0, Shen.type_cons) && (Shen.is_type(Arg6572_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6572_0[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6572_0[1], [Shen.type_symbol, "protect"]))))))
  ? Arg6572_0
  : ((Shen.is_type(Arg6572_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6575(Arg6574) {
  if (Arg6574.length < 1) return [Shen.type_func, shen_user_lambda6575, 1, Arg6574];
  var Arg6574_0 = Arg6574[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.ue"], [Arg6574_0]);})}, 1, [], undefined], Arg6572_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg6572_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Arg6572_0]);})
  : Arg6572_0)))}, 1, [], "shen.ue"];





Shen.fns["shen.ue-sig"] = [Shen.type_func, function shen_user_lambda6577(Arg6576) {
  if (Arg6576.length < 1) return [Shen.type_func, shen_user_lambda6577, 1, Arg6576];
  var Arg6576_0 = Arg6576[0];
  return ((Shen.is_type(Arg6576_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6579(Arg6578) {
  if (Arg6578.length < 1) return [Shen.type_func, shen_user_lambda6579, 1, Arg6578];
  var Arg6578_0 = Arg6578[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.ue-sig"], [Arg6578_0]);})}, 1, [], undefined], Arg6576_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg6576_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "&&&"], Arg6576_0]);})
  : Arg6576_0))}, 1, [], "shen.ue-sig"];





Shen.fns["shen.ues"] = [Shen.type_func, function shen_user_lambda6581(Arg6580) {
  if (Arg6580.length < 1) return [Shen.type_func, shen_user_lambda6581, 1, Arg6580];
  var Arg6580_0 = Arg6580[0];
  return ((Shen.call(Shen.fns["shen.ue?"], [Arg6580_0]))
  ? [Shen.type_cons, Arg6580_0, []]
  : ((Shen.is_type(Arg6580_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.ues"], [Arg6580_0[1]]), Shen.call(Shen.fns["shen.ues"], [Arg6580_0[2]])]);})
  : []))}, 1, [], "shen.ues"];





Shen.fns["shen.ue?"] = [Shen.type_func, function shen_user_lambda6583(Arg6582) {
  if (Arg6582.length < 1) return [Shen.type_func, shen_user_lambda6583, 1, Arg6582];
  var Arg6582_0 = Arg6582[0];
  return (Shen.is_type(Arg6582_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.ue-h?"], [Shen.str(Arg6582_0)]))}, 1, [], "shen.ue?"];





Shen.fns["shen.ue-h?"] = [Shen.type_func, function shen_user_lambda6585(Arg6584) {
  if (Arg6584.length < 1) return [Shen.type_func, shen_user_lambda6585, 1, Arg6584];
  var Arg6584_0 = Arg6584[0];
  return (((Shen.call(Shen.fns["shen.+string?"], [Arg6584_0]) && (Shen.unwind_tail(Shen.$eq$("&", Arg6584_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg6584_0)]) && Shen.unwind_tail(Shen.$eq$("&", Shen.tlstr(Arg6584_0)[0]))))))
  ? true
  : false)}, 1, [], "shen.ue-h?"];





Shen.fns["shen.t*-rules"] = [Shen.type_func, function shen_user_lambda6587(Arg6586) {
  if (Arg6586.length < 7) return [Shen.type_func, shen_user_lambda6587, 7, Arg6586];
  var Arg6586_0 = Arg6586[0], Arg6586_1 = Arg6586[1], Arg6586_2 = Arg6586[2], Arg6586_3 = Arg6586[3], Arg6586_4 = Arg6586[4], Arg6586_5 = Arg6586[5], Arg6586_6 = Arg6586[6];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6586_0, Arg6586_5])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6586_6))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6586_0, Arg6586_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6586_5])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6586_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6586_5])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6586_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R1[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6586_1, Arg6586_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6586_5])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6586_5])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6586_5])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [[Shen.type_cons, [], [Shen.type_cons, Shen.call(Shen.fns["shen.ue"], [R2]), []]], R1, Arg6586_4, Arg6586_5, [Shen.type_func, function shen_user_lambda6589(Arg6588) {
  if (Arg6588.length < 11) return [Shen.type_func, shen_user_lambda6589, 11, Arg6588];
  var Arg6588_0 = Arg6588[0], Arg6588_1 = Arg6588[1], Arg6588_2 = Arg6588[2], Arg6588_3 = Arg6588[3], Arg6588_4 = Arg6588[4], Arg6588_5 = Arg6588[5], Arg6588_6 = Arg6588[6], Arg6588_7 = Arg6588[7], Arg6588_8 = Arg6588[8], Arg6588_9 = Arg6588[9], Arg6588_10 = Arg6588[10];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6588_4, Arg6588_9, [Shen.type_func, function shen_user_lambda6591(Arg6590) {
  if (Arg6590.length < 8) return [Shen.type_func, shen_user_lambda6591, 8, Arg6590];
  var Arg6590_0 = Arg6590[0], Arg6590_1 = Arg6590[1], Arg6590_2 = Arg6590[2], Arg6590_3 = Arg6590[3], Arg6590_4 = Arg6590[4], Arg6590_5 = Arg6590[5], Arg6590_6 = Arg6590[6], Arg6590_7 = Arg6590[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg6590_1, Arg6590_2, (Arg6590_3 + 1), Arg6590_4, Arg6590_5, Arg6590_6, Arg6590_7]);})}, 8, [Arg6588_4, Arg6588_1, Arg6588_2, Arg6588_7, Arg6588_8, Arg6588_6, Arg6588_9, Arg6588_10], undefined]]);})}, 11, [R2, R3, R1, Arg6586_0, R0, Arg6586_1, Arg6586_4, Arg6586_2, Arg6586_3, Arg6586_5, Arg6586_6], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6586_0, Arg6586_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [Shen.call(Shen.fns["shen.ue"], [R2]), Arg6586_1, Arg6586_4, Arg6586_5, [Shen.type_func, function shen_user_lambda6593(Arg6592) {
  if (Arg6592.length < 13) return [Shen.type_func, shen_user_lambda6593, 13, Arg6592];
  var Arg6592_0 = Arg6592[0], Arg6592_1 = Arg6592[1], Arg6592_2 = Arg6592[2], Arg6592_3 = Arg6592[3], Arg6592_4 = Arg6592[4], Arg6592_5 = Arg6592[5], Arg6592_6 = Arg6592[6], Arg6592_7 = Arg6592[7], Arg6592_8 = Arg6592[8], Arg6592_9 = Arg6592[9], Arg6592_10 = Arg6592[10], Arg6592_11 = Arg6592[11], Arg6592_12 = Arg6592[12];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6592_1, Arg6592_7, [Shen.type_func, function shen_user_lambda6595(Arg6594) {
  if (Arg6594.length < 8) return [Shen.type_func, shen_user_lambda6595, 8, Arg6594];
  var Arg6594_0 = Arg6594[0], Arg6594_1 = Arg6594[1], Arg6594_2 = Arg6594[2], Arg6594_3 = Arg6594[3], Arg6594_4 = Arg6594[4], Arg6594_5 = Arg6594[5], Arg6594_6 = Arg6594[6], Arg6594_7 = Arg6594[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg6594_1, Arg6594_2, (Arg6594_3 + 1), Arg6594_4, Arg6594_5, Arg6594_6, Arg6594_7]);})}, 8, [Arg6592_1, Arg6592_2, Arg6592_3, Arg6592_4, Arg6592_5, Arg6592_6, Arg6592_7, Arg6592_8], undefined]]);})}, 13, [R2, R0, R1, Arg6586_1, Arg6586_2, Arg6586_3, Arg6586_4, Arg6586_5, Arg6586_6, Arg6586_2, Arg6586_3, Arg6586_5, Arg6586_6], undefined]])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6586_5])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6586_2, Arg6586_5]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6586_3, Arg6586_5]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg6586_5, Arg6586_6]))
  : R1))
  : R1))
  : R1))]);}))}, 7, [], "shen.t*-rules"];





Shen.fns["shen.t*-rule"] = [Shen.type_func, function shen_user_lambda6597(Arg6596) {
  if (Arg6596.length < 5) return [Shen.type_func, shen_user_lambda6597, 5, Arg6596];
  var Arg6596_0 = Arg6596[0], Arg6596_1 = Arg6596[1], Arg6596_2 = Arg6596[2], Arg6596_3 = Arg6596[3], Arg6596_4 = Arg6596[4];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6596_0, Arg6596_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6596_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6596_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6596_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6596_3, [Shen.type_func, function shen_user_lambda6599(Arg6598) {
  if (Arg6598.length < 7) return [Shen.type_func, shen_user_lambda6599, 7, Arg6598];
  var Arg6598_0 = Arg6598[0], Arg6598_1 = Arg6598[1], Arg6598_2 = Arg6598[2], Arg6598_3 = Arg6598[3], Arg6598_4 = Arg6598[4], Arg6598_5 = Arg6598[5], Arg6598_6 = Arg6598[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Shen.call(Shen.fns["shen.curry"], [Arg6598_0]), Arg6598_2, Arg6598_4, Arg6598_5, Arg6598_6]);})}, 7, [R1, Arg6596_0, Arg6596_1, R0, Arg6596_2, Arg6596_3, Arg6596_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6596_0, Arg6596_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6596_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6596_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6596_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6596_1, Arg6596_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6596_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6596_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6596_3])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg6596_3])),
  ((Shen.empty$question$(R6))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*-pattern"], [R3, R5, Arg6596_3, [Shen.type_func, function shen_user_lambda6601(Arg6600) {
  if (Arg6600.length < 9) return [Shen.type_func, shen_user_lambda6601, 9, Arg6600];
  var Arg6600_0 = Arg6600[0], Arg6600_1 = Arg6600[1], Arg6600_2 = Arg6600[2], Arg6600_3 = Arg6600[3], Arg6600_4 = Arg6600[4], Arg6600_5 = Arg6600[5], Arg6600_6 = Arg6600[6], Arg6600_7 = Arg6600[7], Arg6600_8 = Arg6600[8];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6600_0, Arg6600_7, [Shen.type_func, function shen_user_lambda6603(Arg6602) {
  if (Arg6602.length < 9) return [Shen.type_func, shen_user_lambda6603, 9, Arg6602];
  var Arg6602_0 = Arg6602[0], Arg6602_1 = Arg6602[1], Arg6602_2 = Arg6602[2], Arg6602_3 = Arg6602[3], Arg6602_4 = Arg6602[4], Arg6602_5 = Arg6602[5], Arg6602_6 = Arg6602[6], Arg6602_7 = Arg6602[7], Arg6602_8 = Arg6602[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rule"], [[Shen.type_cons, Arg6602_1, [Shen.type_cons, Arg6602_2, []]], Arg6602_3, [Shen.type_cons, [Shen.type_cons, Arg6602_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6602_5, []]]], Arg6602_6], Arg6602_7, Arg6602_8]);})}, 9, [Arg6600_0, Arg6600_1, Arg6600_2, Arg6600_3, Arg6600_4, Arg6600_5, Arg6600_6, Arg6600_7, Arg6600_8], undefined]]);})}, 9, [R0, R2, R4, R1, R3, R5, Arg6596_2, Arg6596_3, Arg6596_4], undefined]]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 5, [], "shen.t*-rule"];





Shen.fns["shen.t*-action"] = [Shen.type_func, function shen_user_lambda6605(Arg6604) {
  if (Arg6604.length < 5) return [Shen.type_func, shen_user_lambda6605, 5, Arg6604];
  var Arg6604_0 = Arg6604[0], Arg6604_1 = Arg6604[1], Arg6604_2 = Arg6604[2], Arg6604_3 = Arg6604[3], Arg6604_4 = Arg6604[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6604_0, Arg6604_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6604_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6604_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6604_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6604_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6604_3, [Shen.type_func, function shen_user_lambda6607(Arg6606) {
  if (Arg6606.length < 8) return [Shen.type_func, shen_user_lambda6607, 8, Arg6606];
  var Arg6606_0 = Arg6606[0], Arg6606_1 = Arg6606[1], Arg6606_2 = Arg6606[2], Arg6606_3 = Arg6606[3], Arg6606_4 = Arg6606[4], Arg6606_5 = Arg6606[5], Arg6606_6 = Arg6606[6], Arg6606_7 = Arg6606[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6606_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], Arg6606_5, Arg6606_6, [Shen.type_func, function shen_user_lambda6609(Arg6608) {
  if (Arg6608.length < 7) return [Shen.type_func, shen_user_lambda6609, 7, Arg6608];
  var Arg6608_0 = Arg6608[0], Arg6608_1 = Arg6608[1], Arg6608_2 = Arg6608[2], Arg6608_3 = Arg6608[3], Arg6608_4 = Arg6608[4], Arg6608_5 = Arg6608[5], Arg6608_6 = Arg6608[6];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6608_0, Arg6608_5, [Shen.type_func, function shen_user_lambda6611(Arg6610) {
  if (Arg6610.length < 7) return [Shen.type_func, shen_user_lambda6611, 7, Arg6610];
  var Arg6610_0 = Arg6610[0], Arg6610_1 = Arg6610[1], Arg6610_2 = Arg6610[2], Arg6610_3 = Arg6610[3], Arg6610_4 = Arg6610[4], Arg6610_5 = Arg6610[5], Arg6610_6 = Arg6610[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Arg6610_1, Arg6610_2, [Shen.type_cons, [Shen.type_cons, Arg6610_3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "verified"], []]]], Arg6610_4], Arg6610_5, Arg6610_6]);})}, 7, [Arg6608_0, Arg6608_1, Arg6608_2, Arg6608_3, Arg6608_4, Arg6608_5, Arg6608_6], undefined]]);})}, 7, [Arg6606_2, Arg6606_0, Arg6606_4, Arg6606_1, Arg6606_5, Arg6606_6, Arg6606_7], undefined]]);})}, 8, [R3, R1, R0, Arg6604_0, Arg6604_1, Arg6604_2, Arg6604_3, Arg6604_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6604_0, Arg6604_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6604_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6604_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6604_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6604_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6604_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail-if"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6604_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6604_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6604_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6604_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6604_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6604_3, [Shen.type_func, function shen_user_lambda6613(Arg6612) {
  if (Arg6612.length < 8) return [Shen.type_func, shen_user_lambda6613, 8, Arg6612];
  var Arg6612_0 = Arg6612[0], Arg6612_1 = Arg6612[1], Arg6612_2 = Arg6612[2], Arg6612_3 = Arg6612[3], Arg6612_4 = Arg6612[4], Arg6612_5 = Arg6612[5], Arg6612_6 = Arg6612[6], Arg6612_7 = Arg6612[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, Arg6612_0, [Shen.type_cons, Arg6612_1, []]], []]], [Shen.type_cons, Arg6612_1, []]]], Arg6612_4, Arg6612_5, Arg6612_6, Arg6612_7]);})}, 8, [R3, R1, R0, Arg6604_0, Arg6604_1, Arg6604_2, Arg6604_3, Arg6604_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6604_0, Arg6604_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6604_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6604_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6604_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6604_3, [Shen.type_func, function shen_user_lambda6615(Arg6614) {
  if (Arg6614.length < 7) return [Shen.type_func, shen_user_lambda6615, 7, Arg6614];
  var Arg6614_0 = Arg6614[0], Arg6614_1 = Arg6614[1], Arg6614_2 = Arg6614[2], Arg6614_3 = Arg6614[3], Arg6614_4 = Arg6614[4], Arg6614_5 = Arg6614[5], Arg6614_6 = Arg6614[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6614_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]], []]], [Shen.type_cons, Arg6614_1, []]]], Arg6614_3, Arg6614_4, Arg6614_5, Arg6614_6]);})}, 7, [R0, R1, Arg6604_0, Arg6604_1, Arg6604_2, Arg6604_3, Arg6604_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6604_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6604_1, []]]], Arg6604_2, Arg6604_3, Arg6604_4]))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.t*-action"];





Shen.fns["shen.t*-pattern"] = [Shen.type_func, function shen_user_lambda6617(Arg6616) {
  if (Arg6616.length < 4) return [Shen.type_func, shen_user_lambda6617, 4, Arg6616];
  var Arg6616_0 = Arg6616[0], Arg6616_1 = Arg6616[1], Arg6616_2 = Arg6616[2], Arg6616_3 = Arg6616[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6616_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tms->hyp"], [Shen.call(Shen.fns["shen.ues"], [Arg6616_0]), R1, Arg6616_2, [Shen.type_func, function shen_user_lambda6619(Arg6618) {
  if (Arg6618.length < 6) return [Shen.type_func, shen_user_lambda6619, 6, Arg6618];
  var Arg6618_0 = Arg6618[0], Arg6618_1 = Arg6618[1], Arg6618_2 = Arg6618[2], Arg6618_3 = Arg6618[3], Arg6618_4 = Arg6618[4], Arg6618_5 = Arg6618[5];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6618_0, Arg6618_4, [Shen.type_func, function shen_user_lambda6621(Arg6620) {
  if (Arg6620.length < 6) return [Shen.type_func, shen_user_lambda6621, 6, Arg6620];
  var Arg6620_0 = Arg6620[0], Arg6620_1 = Arg6620[1], Arg6620_2 = Arg6620[2], Arg6620_3 = Arg6620[3], Arg6620_4 = Arg6620[4], Arg6620_5 = Arg6620[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6620_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6620_2, []]]], Arg6620_3, Arg6620_4, Arg6620_5]);})}, 6, [Arg6618_0, Arg6618_1, Arg6618_2, Arg6618_3, Arg6618_4, Arg6618_5], undefined]]);})}, 6, [R0, Arg6616_0, Arg6616_1, R1, Arg6616_2, Arg6616_3], undefined]]))]);}))}, 4, [], "shen.t*-pattern"];





Shen.fns["shen.tms->hyp"] = [Shen.type_func, function shen_user_lambda6623(Arg6622) {
  if (Arg6622.length < 4) return [Shen.type_func, shen_user_lambda6623, 4, Arg6622];
  var Arg6622_0 = Arg6622[0], Arg6622_1 = Arg6622[1], Arg6622_2 = Arg6622[2], Arg6622_3 = Arg6622[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6622_0, Arg6622_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6622_1, Arg6622_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6622_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg6622_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6622_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6622_2]),
  (R0 = R1))
  : (R0 = false))))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6622_0, Arg6622_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6622_1, Arg6622_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6622_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6622_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6622_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6622_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? (R5[1],
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6622_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [R4, R1, Arg6622_2, [Shen.type_func, function shen_user_lambda6625(Arg6624) {
  if (Arg6624.length < 6) return [Shen.type_func, shen_user_lambda6625, 6, Arg6624];
  var Arg6624_0 = Arg6624[0], Arg6624_1 = Arg6624[1], Arg6624_2 = Arg6624[2], Arg6624_3 = Arg6624[3], Arg6624_4 = Arg6624[4], Arg6624_5 = Arg6624[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6624_2, Arg6624_3, Arg6624_4, Arg6624_5]);})}, 6, [R4, R1, R0, R5, Arg6622_2, Arg6622_3], undefined]]);}))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6622_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6622_2, [Shen.type_func, function shen_user_lambda6627(Arg6626) {
  if (Arg6626.length < 8) return [Shen.type_func, shen_user_lambda6627, 8, Arg6626];
  var Arg6626_0 = Arg6626[0], Arg6626_1 = Arg6626[1], Arg6626_2 = Arg6626[2], Arg6626_3 = Arg6626[3], Arg6626_4 = Arg6626[4], Arg6626_5 = Arg6626[5], Arg6626_6 = Arg6626[6], Arg6626_7 = Arg6626[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6626_2, Arg6626_3, Arg6626_4, Arg6626_5]);})}, 8, [R4, R1, R0, R3, Arg6622_2, Arg6622_3, R5, Arg6622_2], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6622_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6622_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R3, []], Arg6622_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6622_2, [Shen.type_func, function shen_user_lambda6629(Arg6628) {
  if (Arg6628.length < 8) return [Shen.type_func, shen_user_lambda6629, 8, Arg6628];
  var Arg6628_0 = Arg6628[0], Arg6628_1 = Arg6628[1], Arg6628_2 = Arg6628[2], Arg6628_3 = Arg6628[3], Arg6628_4 = Arg6628[4], Arg6628_5 = Arg6628[5], Arg6628_6 = Arg6628[6], Arg6628_7 = Arg6628[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6628_2, Arg6628_3, Arg6628_4, Arg6628_5]);})}, 8, [R4, R1, R0, R3, Arg6622_2, Arg6622_3, R5, Arg6622_2], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6622_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, ":"], Arg6622_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6622_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? (R3[1],
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6622_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6622_2, [Shen.type_func, function shen_user_lambda6631(Arg6630) {
  if (Arg6630.length < 8) return [Shen.type_func, shen_user_lambda6631, 8, Arg6630];
  var Arg6630_0 = Arg6630[0], Arg6630_1 = Arg6630[1], Arg6630_2 = Arg6630[2], Arg6630_3 = Arg6630[3], Arg6630_4 = Arg6630[4], Arg6630_5 = Arg6630[5], Arg6630_6 = Arg6630[6], Arg6630_7 = Arg6630[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6630_2, Arg6630_3, Arg6630_4, Arg6630_5]);})}, 8, [R4, R1, R0, R3, Arg6622_2, Arg6622_3, R5, Arg6622_2], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6622_2]),
  ((R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6622_2, [Shen.type_func, function shen_user_lambda6633(Arg6632) {
  if (Arg6632.length < 10) return [Shen.type_func, shen_user_lambda6633, 10, Arg6632];
  var Arg6632_0 = Arg6632[0], Arg6632_1 = Arg6632[1], Arg6632_2 = Arg6632[2], Arg6632_3 = Arg6632[3], Arg6632_4 = Arg6632[4], Arg6632_5 = Arg6632[5], Arg6632_6 = Arg6632[6], Arg6632_7 = Arg6632[7], Arg6632_8 = Arg6632[8], Arg6632_9 = Arg6632[9];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6632_2, Arg6632_3, Arg6632_4, Arg6632_5]);})}, 10, [R4, R1, R0, R2, Arg6622_2, Arg6622_3, R3, Arg6622_2, R5, Arg6622_2], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6622_2]),
  (R4 = R4))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6622_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R6, []], Arg6622_2]),
  ((R6 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6622_2, [Shen.type_func, function shen_user_lambda6635(Arg6634) {
  if (Arg6634.length < 10) return [Shen.type_func, shen_user_lambda6635, 10, Arg6634];
  var Arg6634_0 = Arg6634[0], Arg6634_1 = Arg6634[1], Arg6634_2 = Arg6634[2], Arg6634_3 = Arg6634[3], Arg6634_4 = Arg6634[4], Arg6634_5 = Arg6634[5], Arg6634_6 = Arg6634[6], Arg6634_7 = Arg6634[7], Arg6634_8 = Arg6634[8], Arg6634_9 = Arg6634[9];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6634_2, Arg6634_3, Arg6634_4, Arg6634_5]);})}, 10, [R4, R1, R0, R6, Arg6622_2, Arg6622_3, R3, Arg6622_2, R5, Arg6622_2], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6622_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6622_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6622_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]], Arg6622_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6622_2, [Shen.type_func, function shen_user_lambda6637(Arg6636) {
  if (Arg6636.length < 8) return [Shen.type_func, shen_user_lambda6637, 8, Arg6636];
  var Arg6636_0 = Arg6636[0], Arg6636_1 = Arg6636[1], Arg6636_2 = Arg6636[2], Arg6636_3 = Arg6636[3], Arg6636_4 = Arg6636[4], Arg6636_5 = Arg6636[5], Arg6636_6 = Arg6636[6], Arg6636_7 = Arg6636[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6636_2, Arg6636_3, Arg6636_4, Arg6636_5]);})}, 8, [R4, R1, R0, R5, Arg6622_2, Arg6622_3, R3, Arg6622_2], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6622_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6622_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6622_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], Arg6622_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6622_2, [Shen.type_func, function shen_user_lambda6639(Arg6638) {
  if (Arg6638.length < 8) return [Shen.type_func, shen_user_lambda6639, 8, Arg6638];
  var Arg6638_0 = Arg6638[0], Arg6638_1 = Arg6638[1], Arg6638_2 = Arg6638[2], Arg6638_3 = Arg6638[3], Arg6638_4 = Arg6638[4], Arg6638_5 = Arg6638[5], Arg6638_6 = Arg6638[6], Arg6638_7 = Arg6638[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6638_2, Arg6638_3, Arg6638_4, Arg6638_5]);})}, 8, [R4, R1, R0, R5, Arg6622_2, Arg6622_3, R3, Arg6622_2], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6622_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6622_2])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6622_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6622_2])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_cons, R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R4, []]]], R5], Arg6622_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg6622_2, [Shen.type_func, function shen_user_lambda6641(Arg6640) {
  if (Arg6640.length < 8) return [Shen.type_func, shen_user_lambda6641, 8, Arg6640];
  var Arg6640_0 = Arg6640[0], Arg6640_1 = Arg6640[1], Arg6640_2 = Arg6640[2], Arg6640_3 = Arg6640[3], Arg6640_4 = Arg6640[4], Arg6640_5 = Arg6640[5], Arg6640_6 = Arg6640[6], Arg6640_7 = Arg6640[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6640_3, Arg6640_4, Arg6640_7, Arg6640_5]);})}, 8, [R4, R3, R1, R0, R5, Arg6622_3, R2, Arg6622_2], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6622_2]),
  R5)
  : false)))
  : false))
  : R0))}, 4, [], "shen.tms->hyp"];





Shen.fns["findall"] = [Shen.type_func, function shen_user_lambda6643(Arg6642) {
  if (Arg6642.length < 5) return [Shen.type_func, shen_user_lambda6643, 5, Arg6642];
  var Arg6642_0 = Arg6642[0], Arg6642_1 = Arg6642[1], Arg6642_2 = Arg6642[2], Arg6642_3 = Arg6642[3], Arg6642_4 = Arg6642[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6642_3])),
  (R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6642_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R1, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.a"]]), Arg6642_3, [Shen.type_func, function shen_user_lambda6645(Arg6644) {
  if (Arg6644.length < 7) return [Shen.type_func, shen_user_lambda6645, 7, Arg6644];
  var Arg6644_0 = Arg6644[0], Arg6644_1 = Arg6644[1], Arg6644_2 = Arg6644[2], Arg6644_3 = Arg6644[3], Arg6644_4 = Arg6644[4], Arg6644_5 = Arg6644[5], Arg6644_6 = Arg6644[6];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6644_0, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6644_4, Arg6644_5])[1]] = []), Arg6644_5, [Shen.type_func, function shen_user_lambda6647(Arg6646) {
  if (Arg6646.length < 7) return [Shen.type_func, shen_user_lambda6647, 7, Arg6646];
  var Arg6646_0 = Arg6646[0], Arg6646_1 = Arg6646[1], Arg6646_2 = Arg6646[2], Arg6646_3 = Arg6646[3], Arg6646_4 = Arg6646[4], Arg6646_5 = Arg6646[5], Arg6646_6 = Arg6646[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.findallhelp"], [Arg6646_1, Arg6646_2, Arg6646_3, Arg6646_4, Arg6646_5, Arg6646_6]);})}, 7, [Arg6644_0, Arg6644_1, Arg6644_2, Arg6644_3, Arg6644_4, Arg6644_5, Arg6644_6], undefined]]);})}, 7, [R0, Arg6642_0, Arg6642_1, Arg6642_2, R1, Arg6642_3, Arg6642_4], undefined]]);}))}, 5, [], "findall"];





Shen.fns["shen.findallhelp"] = [Shen.type_func, function shen_user_lambda6649(Arg6648) {
  if (Arg6648.length < 6) return [Shen.type_func, shen_user_lambda6649, 6, Arg6648];
  var Arg6648_0 = Arg6648[0], Arg6648_1 = Arg6648[1], Arg6648_2 = Arg6648[2], Arg6648_3 = Arg6648[3], Arg6648_4 = Arg6648[4], Arg6648_5 = Arg6648[5];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [Arg6648_1, Arg6648_4, [Shen.type_func, function shen_user_lambda6651(Arg6650) {
  if (Arg6650.length < 6) return [Shen.type_func, shen_user_lambda6651, 6, Arg6650];
  var Arg6650_0 = Arg6650[0], Arg6650_1 = Arg6650[1], Arg6650_2 = Arg6650[2], Arg6650_3 = Arg6650[3], Arg6650_4 = Arg6650[4], Arg6650_5 = Arg6650[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember"], [Arg6650_3, Arg6650_1, Arg6650_4, [Shen.type_func, function shen_user_lambda6653(Arg6652) {
  if (Arg6652.length < 4) return [Shen.type_func, shen_user_lambda6653, 4, Arg6652];
  var Arg6652_0 = Arg6652[0], Arg6652_1 = Arg6652[1], Arg6652_2 = Arg6652[2], Arg6652_3 = Arg6652[3];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg6652_2, Arg6652_3]);})}, 4, [Arg6650_3, Arg6650_1, Arg6650_4, Arg6650_5], undefined]]);})}, 6, [Arg6648_1, Arg6648_0, Arg6648_2, Arg6648_3, Arg6648_4, Arg6648_5], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6648_2, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6648_3, Arg6648_4])[1]]), Arg6648_4, Arg6648_5]);}))
  : R0))}, 6, [], "shen.findallhelp"];





Shen.fns["shen.remember"] = [Shen.type_func, function shen_user_lambda6655(Arg6654) {
  if (Arg6654.length < 4) return [Shen.type_func, shen_user_lambda6655, 4, Arg6654];
  var Arg6654_0 = Arg6654[0], Arg6654_1 = Arg6654[1], Arg6654_2 = Arg6654[2], Arg6654_3 = Arg6654[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6654_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6654_0, Arg6654_2])[1]] = [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6654_1, Arg6654_2]), (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6654_0, Arg6654_2])[1]])]), Arg6654_2, Arg6654_3]);}))}, 4, [], "shen.remember"];





Shen.fns["shen.t*-defcc"] = [Shen.type_func, function shen_user_lambda6657(Arg6656) {
  if (Arg6656.length < 5) return [Shen.type_func, shen_user_lambda6657, 5, Arg6656];
  var Arg6656_0 = Arg6656[0], Arg6656_1 = Arg6656[1], Arg6656_2 = Arg6656[2], Arg6656_3 = Arg6656[3], Arg6656_4 = Arg6656[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6656_0, Arg6656_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6656_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6656_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6656_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6656_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6656_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6656_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6656_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6656_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6656_3])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6656_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6656_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], R2)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6656_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6656_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6656_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R4)))
  ? ((R4 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defcc-h"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["shen.ue"], [Shen.call(Shen.fns["shen.demodulate"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R1, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, R2, []]]]])]), Shen.call(Shen.fns["shen.ue"], [Shen.call(Shen.fns["shen.split_cc_rules"], [false, Shen.call(Shen.fns["shen.plug-wildcards"], [R4]), []])])]]], Arg6656_1, Arg6656_2, Arg6656_3, Arg6656_4]);}))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))}, 5, [], "shen.t*-defcc"];





Shen.fns["shen.plug-wildcards"] = [Shen.type_func, function shen_user_lambda6659(Arg6658) {
  if (Arg6658.length < 1) return [Shen.type_func, shen_user_lambda6659, 1, Arg6658];
  var Arg6658_0 = Arg6658[0];
  return ((Shen.is_type(Arg6658_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6661(Arg6660) {
  if (Arg6660.length < 1) return [Shen.type_func, shen_user_lambda6661, 1, Arg6660];
  var Arg6660_0 = Arg6660[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.plug-wildcards"], [Arg6660_0]);})}, 1, [], undefined], Arg6658_0]);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg6658_0, [Shen.type_symbol, "_"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "X"]]);})
  : Arg6658_0))}, 1, [], "shen.plug-wildcards"];





Shen.fns["shen.t*-defcc-h"] = [Shen.type_func, function shen_user_lambda6663(Arg6662) {
  if (Arg6662.length < 5) return [Shen.type_func, shen_user_lambda6663, 5, Arg6662];
  var Arg6662_0 = Arg6662[0], Arg6662_1 = Arg6662[1], Arg6662_2 = Arg6662[2], Arg6662_3 = Arg6662[3], Arg6662_4 = Arg6662[4];
  var R0, R1, R2, R3, R4, R5;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6662_0, Arg6662_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6662_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6662_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6662_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6662_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6662_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6662_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6662_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R4 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6662_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6662_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R5[1], Arg6662_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], R3)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6662_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R3 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6662_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R2[2]),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6662_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["cut"], [R0, Arg6662_3, [Shen.type_func, function shen_user_lambda6665(Arg6664) {
  if (Arg6664.length < 10) return [Shen.type_func, shen_user_lambda6665, 10, Arg6664];
  var Arg6664_0 = Arg6664[0], Arg6664_1 = Arg6664[1], Arg6664_2 = Arg6664[2], Arg6664_3 = Arg6664[3], Arg6664_4 = Arg6664[4], Arg6664_5 = Arg6664[5], Arg6664_6 = Arg6664[6], Arg6664_7 = Arg6664[7], Arg6664_8 = Arg6664[8], Arg6664_9 = Arg6664[9];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6664_5, Arg6664_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6664_6, []]], Arg6664_7, [Shen.type_cons, [Shen.type_cons, Arg6664_5, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6664_6, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6664_7, []]]], []]]], Arg6664_2], 1, Arg6664_8, [Shen.type_func, function shen_user_lambda6667(Arg6666) {
  if (Arg6666.length < 9) return [Shen.type_func, shen_user_lambda6667, 9, Arg6666];
  var Arg6666_0 = Arg6666[0], Arg6666_1 = Arg6666[1], Arg6666_2 = Arg6666[2], Arg6666_3 = Arg6666[3], Arg6666_4 = Arg6666[4], Arg6666_5 = Arg6666[5], Arg6666_6 = Arg6666[6], Arg6666_7 = Arg6666[7], Arg6666_8 = Arg6666[8];
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg6666_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6666_5, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6666_6, []]]], Arg6666_7, [Shen.type_func, function shen_user_lambda6669(Arg6668) {
  if (Arg6668.length < 7) return [Shen.type_func, shen_user_lambda6669, 7, Arg6668];
  var Arg6668_0 = Arg6668[0], Arg6668_1 = Arg6668[1], Arg6668_2 = Arg6668[2], Arg6668_3 = Arg6668[3], Arg6668_4 = Arg6668[4], Arg6668_5 = Arg6668[5], Arg6668_6 = Arg6668[6];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6668_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6668_2, Arg6668_5]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6668_3, Arg6668_5]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6668_4, Arg6668_5]), []]]]]), Arg6668_5, Arg6668_6]);})}, 7, [Arg6666_2, Arg6666_3, Arg6666_4, Arg6666_5, Arg6666_6, Arg6666_7, Arg6666_8], undefined]]);})}, 9, [Arg6664_1, Arg6664_2, Arg6664_3, Arg6664_4, Arg6664_5, Arg6664_6, Arg6664_7, Arg6664_8, Arg6664_9], undefined]]);})}, 10, [R0, R5, Arg6662_2, Arg6662_1, R2, R1, R4, R3, Arg6662_3, Arg6662_4], undefined]]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))]);}))}, 5, [], "shen.t*-defcc-h"];





Shen.fns["shen.tc-rules"] = [Shen.type_func, function shen_user_lambda6671(Arg6670) {
  if (Arg6670.length < 8) return [Shen.type_func, shen_user_lambda6671, 8, Arg6670];
  var Arg6670_0 = Arg6670[0], Arg6670_1 = Arg6670[1], Arg6670_2 = Arg6670[2], Arg6670_3 = Arg6670[3], Arg6670_4 = Arg6670[4], Arg6670_5 = Arg6670[5], Arg6670_6 = Arg6670[6], Arg6670_7 = Arg6670[7];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6670_1, Arg6670_6])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6670_7))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6670_1, Arg6670_6])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6670_2, Arg6670_6])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6670_6])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6670_6])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6670_6])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6670_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tc-rule"], [Arg6670_0, R2, R3, Arg6670_3, Arg6670_4, Arg6670_5, Arg6670_6, [Shen.type_func, function shen_user_lambda6673(Arg6672) {
  if (Arg6672.length < 11) return [Shen.type_func, shen_user_lambda6673, 11, Arg6672];
  var Arg6672_0 = Arg6672[0], Arg6672_1 = Arg6672[1], Arg6672_2 = Arg6672[2], Arg6672_3 = Arg6672[3], Arg6672_4 = Arg6672[4], Arg6672_5 = Arg6672[5], Arg6672_6 = Arg6672[6], Arg6672_7 = Arg6672[7], Arg6672_8 = Arg6672[8], Arg6672_9 = Arg6672[9], Arg6672_10 = Arg6672[10];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6672_8, (Shen.call(Shen.fns["shen.deref"], [Arg6672_1, Arg6672_9]) + 1), Arg6672_9, [Shen.type_func, function shen_user_lambda6675(Arg6674) {
  if (Arg6674.length < 10) return [Shen.type_func, shen_user_lambda6675, 10, Arg6674];
  var Arg6674_0 = Arg6674[0], Arg6674_1 = Arg6674[1], Arg6674_2 = Arg6674[2], Arg6674_3 = Arg6674[3], Arg6674_4 = Arg6674[4], Arg6674_5 = Arg6674[5], Arg6674_6 = Arg6674[6], Arg6674_7 = Arg6674[7], Arg6674_8 = Arg6674[8], Arg6674_9 = Arg6674[9];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6674_1, Arg6674_8, [Shen.type_func, function shen_user_lambda6677(Arg6676) {
  if (Arg6676.length < 9) return [Shen.type_func, shen_user_lambda6677, 9, Arg6676];
  var Arg6676_0 = Arg6676[0], Arg6676_1 = Arg6676[1], Arg6676_2 = Arg6676[2], Arg6676_3 = Arg6676[3], Arg6676_4 = Arg6676[4], Arg6676_5 = Arg6676[5], Arg6676_6 = Arg6676[6], Arg6676_7 = Arg6676[7], Arg6676_8 = Arg6676[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6676_1, Arg6676_2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6676_3, []]], Arg6676_4, Arg6676_5, Arg6676_6, Arg6676_7, Arg6676_8]);})}, 9, [Arg6674_1, Arg6674_2, Arg6674_3, Arg6674_4, Arg6674_5, Arg6674_6, Arg6674_7, Arg6674_8, Arg6674_9], undefined]]);})}, 10, [Arg6672_1, Arg6672_2, Arg6672_3, Arg6672_4, Arg6672_5, Arg6672_6, Arg6672_7, Arg6672_8, Arg6672_9, Arg6672_10], undefined]]);})}, 11, [R2, Arg6670_5, R0, Arg6670_0, R1, R3, Arg6670_3, Arg6670_4, R4, Arg6670_6, Arg6670_7], undefined]]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 8, [], "shen.tc-rules"];





Shen.fns["shen.tc-rule"] = [Shen.type_func, function shen_user_lambda6679(Arg6678) {
  if (Arg6678.length < 8) return [Shen.type_func, shen_user_lambda6679, 8, Arg6678];
  var Arg6678_0 = Arg6678[0], Arg6678_1 = Arg6678[1], Arg6678_2 = Arg6678[2], Arg6678_3 = Arg6678[3], Arg6678_4 = Arg6678[4], Arg6678_5 = Arg6678[5], Arg6678_6 = Arg6678[6], Arg6678_7 = Arg6678[7];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["shen.check-defcc-rule"], [Arg6678_1, Arg6678_2, Arg6678_3, Arg6678_4, Arg6678_6, Arg6678_7]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6678_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6678_5, Arg6678_6]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6678_0, Arg6678_6]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg6678_6, Arg6678_7]);}))
  : R0))}, 8, [], "shen.tc-rule"];





Shen.fns["shen.check-defcc-rule"] = [Shen.type_func, function shen_user_lambda6681(Arg6680) {
  if (Arg6680.length < 6) return [Shen.type_func, shen_user_lambda6681, 6, Arg6680];
  var Arg6680_0 = Arg6680[0], Arg6680_1 = Arg6680[1], Arg6680_2 = Arg6680[2], Arg6680_3 = Arg6680[3], Arg6680_4 = Arg6680[4], Arg6680_5 = Arg6680[5];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6680_0, Arg6680_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6680_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6680_4])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6680_4])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.syntax-hyps"], [R2, Arg6680_3, R1, Arg6680_1, Arg6680_4, [Shen.type_func, function shen_user_lambda6683(Arg6682) {
  if (Arg6682.length < 9) return [Shen.type_func, shen_user_lambda6683, 9, Arg6682];
  var Arg6682_0 = Arg6682[0], Arg6682_1 = Arg6682[1], Arg6682_2 = Arg6682[2], Arg6682_3 = Arg6682[3], Arg6682_4 = Arg6682[4], Arg6682_5 = Arg6682[5], Arg6682_6 = Arg6682[6], Arg6682_7 = Arg6682[7], Arg6682_8 = Arg6682[8];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6682_3, Arg6682_7, [Shen.type_func, function shen_user_lambda6685(Arg6684) {
  if (Arg6684.length < 8) return [Shen.type_func, shen_user_lambda6685, 8, Arg6684];
  var Arg6684_0 = Arg6684[0], Arg6684_1 = Arg6684[1], Arg6684_2 = Arg6684[2], Arg6684_3 = Arg6684[3], Arg6684_4 = Arg6684[4], Arg6684_5 = Arg6684[5], Arg6684_6 = Arg6684[6], Arg6684_7 = Arg6684[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6684_0, Arg6684_1, Arg6684_5, Arg6684_6, [Shen.type_func, function shen_user_lambda6687(Arg6686) {
  if (Arg6686.length < 8) return [Shen.type_func, shen_user_lambda6687, 8, Arg6686];
  var Arg6686_0 = Arg6686[0], Arg6686_1 = Arg6686[1], Arg6686_2 = Arg6686[2], Arg6686_3 = Arg6686[3], Arg6686_4 = Arg6686[4], Arg6686_5 = Arg6686[5], Arg6686_6 = Arg6686[6], Arg6686_7 = Arg6686[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6686_2, Arg6686_6, [Shen.type_func, function shen_user_lambda6689(Arg6688) {
  if (Arg6688.length < 6) return [Shen.type_func, shen_user_lambda6689, 6, Arg6688];
  var Arg6688_0 = Arg6688[0], Arg6688_1 = Arg6688[1], Arg6688_2 = Arg6688[2], Arg6688_3 = Arg6688[3], Arg6688_4 = Arg6688[4], Arg6688_5 = Arg6688[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.semantics-check"], [Arg6688_1, Arg6688_2, Arg6688_3, Arg6688_4, Arg6688_5]);})}, 6, [Arg6686_2, Arg6686_3, Arg6686_4, Arg6686_5, Arg6686_6, Arg6686_7], undefined]]);})}, 8, [Arg6684_0, Arg6684_1, Arg6684_2, Arg6684_3, Arg6684_4, Arg6684_5, Arg6684_6, Arg6684_7], undefined]]);})}, 8, [Arg6682_1, Arg6682_2, Arg6682_3, Arg6682_4, Arg6682_5, Arg6682_6, Arg6682_7, Arg6682_8], undefined]]);})}, 9, [Arg6680_3, R2, Arg6680_1, R0, R3, Arg6680_2, R1, Arg6680_4, Arg6680_5], undefined]]))
  : false))
  : false))
  : false))]);}))}, 6, [], "shen.check-defcc-rule"];





Shen.fns["shen.syntax-hyps"] = [Shen.type_func, function shen_user_lambda6691(Arg6690) {
  if (Arg6690.length < 6) return [Shen.type_func, shen_user_lambda6691, 6, Arg6690];
  var Arg6690_0 = Arg6690[0], Arg6690_1 = Arg6690[1], Arg6690_2 = Arg6690[2], Arg6690_3 = Arg6690[3], Arg6690_4 = Arg6690[4], Arg6690_5 = Arg6690[5];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6690_0, Arg6690_4])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6690_2, Arg6690_1, Arg6690_4, Arg6690_5])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6690_0, Arg6690_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6690_2, Arg6690_4])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6690_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6690_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6690_4])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6690_4])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R4 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg6690_4])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6690_3, R4, Arg6690_4, [Shen.type_func, function shen_user_lambda6693(Arg6692) {
  if (Arg6692.length < 16) return [Shen.type_func, shen_user_lambda6693, 16, Arg6692];
  var Arg6692_0 = Arg6692[0], Arg6692_1 = Arg6692[1], Arg6692_2 = Arg6692[2], Arg6692_3 = Arg6692[3], Arg6692_4 = Arg6692[4], Arg6692_5 = Arg6692[5], Arg6692_6 = Arg6692[6], Arg6692_7 = Arg6692[7], Arg6692_8 = Arg6692[8], Arg6692_9 = Arg6692[9], Arg6692_10 = Arg6692[10], Arg6692_11 = Arg6692[11], Arg6692_12 = Arg6692[12], Arg6692_13 = Arg6692[13], Arg6692_14 = Arg6692[14], Arg6692_15 = Arg6692[15];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6692_2, Arg6692_1, Arg6692_8, [Shen.type_func, function shen_user_lambda6695(Arg6694) {
  if (Arg6694.length < 9) return [Shen.type_func, shen_user_lambda6695, 9, Arg6694];
  var Arg6694_0 = Arg6694[0], Arg6694_1 = Arg6694[1], Arg6694_2 = Arg6694[2], Arg6694_3 = Arg6694[3], Arg6694_4 = Arg6694[4], Arg6694_5 = Arg6694[5], Arg6694_6 = Arg6694[6], Arg6694_7 = Arg6694[7], Arg6694_8 = Arg6694[8];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6694_1, Arg6694_7])]), Arg6694_7, [Shen.type_func, function shen_user_lambda6697(Arg6696) {
  if (Arg6696.length < 8) return [Shen.type_func, shen_user_lambda6697, 8, Arg6696];
  var Arg6696_0 = Arg6696[0], Arg6696_1 = Arg6696[1], Arg6696_2 = Arg6696[2], Arg6696_3 = Arg6696[3], Arg6696_4 = Arg6696[4], Arg6696_5 = Arg6696[5], Arg6696_6 = Arg6696[6], Arg6696_7 = Arg6696[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6696_1, Arg6696_6, [Shen.type_func, function shen_user_lambda6699(Arg6698) {
  if (Arg6698.length < 7) return [Shen.type_func, shen_user_lambda6699, 7, Arg6698];
  var Arg6698_0 = Arg6698[0], Arg6698_1 = Arg6698[1], Arg6698_2 = Arg6698[2], Arg6698_3 = Arg6698[3], Arg6698_4 = Arg6698[4], Arg6698_5 = Arg6698[5], Arg6698_6 = Arg6698[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6698_1, Arg6698_2, Arg6698_3, Arg6698_4, Arg6698_5, Arg6698_6]);})}, 7, [Arg6696_1, Arg6696_2, Arg6696_3, Arg6696_4, Arg6696_5, Arg6696_6, Arg6696_7], undefined]]);})}, 8, [Arg6694_1, Arg6694_2, Arg6694_3, Arg6694_4, Arg6694_5, Arg6694_6, Arg6694_7, Arg6694_8], undefined]]);})}, 9, [Arg6692_1, Arg6692_2, Arg6692_3, Arg6692_4, Arg6692_5, Arg6692_6, Arg6692_7, Arg6692_8, Arg6692_9], undefined]]);})}, 16, [R4, R2, R5, R0, R1, Arg6690_1, R6, Arg6690_3, Arg6690_4, Arg6690_5, Arg6690_0, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg6690_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6690_3, R4, Arg6690_4, [Shen.type_func, function shen_user_lambda6701(Arg6700) {
  if (Arg6700.length < 18) return [Shen.type_func, shen_user_lambda6701, 18, Arg6700];
  var Arg6700_0 = Arg6700[0], Arg6700_1 = Arg6700[1], Arg6700_2 = Arg6700[2], Arg6700_3 = Arg6700[3], Arg6700_4 = Arg6700[4], Arg6700_5 = Arg6700[5], Arg6700_6 = Arg6700[6], Arg6700_7 = Arg6700[7], Arg6700_8 = Arg6700[8], Arg6700_9 = Arg6700[9], Arg6700_10 = Arg6700[10], Arg6700_11 = Arg6700[11], Arg6700_12 = Arg6700[12], Arg6700_13 = Arg6700[13], Arg6700_14 = Arg6700[14], Arg6700_15 = Arg6700[15], Arg6700_16 = Arg6700[16], Arg6700_17 = Arg6700[17];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6700_2, Arg6700_1, Arg6700_8, [Shen.type_func, function shen_user_lambda6703(Arg6702) {
  if (Arg6702.length < 9) return [Shen.type_func, shen_user_lambda6703, 9, Arg6702];
  var Arg6702_0 = Arg6702[0], Arg6702_1 = Arg6702[1], Arg6702_2 = Arg6702[2], Arg6702_3 = Arg6702[3], Arg6702_4 = Arg6702[4], Arg6702_5 = Arg6702[5], Arg6702_6 = Arg6702[6], Arg6702_7 = Arg6702[7], Arg6702_8 = Arg6702[8];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6702_1, Arg6702_7])]), Arg6702_7, [Shen.type_func, function shen_user_lambda6705(Arg6704) {
  if (Arg6704.length < 8) return [Shen.type_func, shen_user_lambda6705, 8, Arg6704];
  var Arg6704_0 = Arg6704[0], Arg6704_1 = Arg6704[1], Arg6704_2 = Arg6704[2], Arg6704_3 = Arg6704[3], Arg6704_4 = Arg6704[4], Arg6704_5 = Arg6704[5], Arg6704_6 = Arg6704[6], Arg6704_7 = Arg6704[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6704_1, Arg6704_6, [Shen.type_func, function shen_user_lambda6707(Arg6706) {
  if (Arg6706.length < 7) return [Shen.type_func, shen_user_lambda6707, 7, Arg6706];
  var Arg6706_0 = Arg6706[0], Arg6706_1 = Arg6706[1], Arg6706_2 = Arg6706[2], Arg6706_3 = Arg6706[3], Arg6706_4 = Arg6706[4], Arg6706_5 = Arg6706[5], Arg6706_6 = Arg6706[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6706_1, Arg6706_2, Arg6706_3, Arg6706_4, Arg6706_5, Arg6706_6]);})}, 7, [Arg6704_1, Arg6704_2, Arg6704_3, Arg6704_4, Arg6704_5, Arg6704_6, Arg6704_7], undefined]]);})}, 8, [Arg6702_1, Arg6702_2, Arg6702_3, Arg6702_4, Arg6702_5, Arg6702_6, Arg6702_7, Arg6702_8], undefined]]);})}, 9, [Arg6700_1, Arg6700_2, Arg6700_3, Arg6700_4, Arg6700_5, Arg6700_6, Arg6700_7, Arg6700_8, Arg6700_9], undefined]]);})}, 18, [R4, R2, R5, R0, R1, Arg6690_1, R3, Arg6690_3, Arg6690_4, Arg6690_5, R6, Arg6690_4, Arg6690_0, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6690_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6690_4])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R4, []], Arg6690_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6690_3, R4, Arg6690_4, [Shen.type_func, function shen_user_lambda6709(Arg6708) {
  if (Arg6708.length < 18) return [Shen.type_func, shen_user_lambda6709, 18, Arg6708];
  var Arg6708_0 = Arg6708[0], Arg6708_1 = Arg6708[1], Arg6708_2 = Arg6708[2], Arg6708_3 = Arg6708[3], Arg6708_4 = Arg6708[4], Arg6708_5 = Arg6708[5], Arg6708_6 = Arg6708[6], Arg6708_7 = Arg6708[7], Arg6708_8 = Arg6708[8], Arg6708_9 = Arg6708[9], Arg6708_10 = Arg6708[10], Arg6708_11 = Arg6708[11], Arg6708_12 = Arg6708[12], Arg6708_13 = Arg6708[13], Arg6708_14 = Arg6708[14], Arg6708_15 = Arg6708[15], Arg6708_16 = Arg6708[16], Arg6708_17 = Arg6708[17];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6708_2, Arg6708_1, Arg6708_8, [Shen.type_func, function shen_user_lambda6711(Arg6710) {
  if (Arg6710.length < 9) return [Shen.type_func, shen_user_lambda6711, 9, Arg6710];
  var Arg6710_0 = Arg6710[0], Arg6710_1 = Arg6710[1], Arg6710_2 = Arg6710[2], Arg6710_3 = Arg6710[3], Arg6710_4 = Arg6710[4], Arg6710_5 = Arg6710[5], Arg6710_6 = Arg6710[6], Arg6710_7 = Arg6710[7], Arg6710_8 = Arg6710[8];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6710_1, Arg6710_7])]), Arg6710_7, [Shen.type_func, function shen_user_lambda6713(Arg6712) {
  if (Arg6712.length < 8) return [Shen.type_func, shen_user_lambda6713, 8, Arg6712];
  var Arg6712_0 = Arg6712[0], Arg6712_1 = Arg6712[1], Arg6712_2 = Arg6712[2], Arg6712_3 = Arg6712[3], Arg6712_4 = Arg6712[4], Arg6712_5 = Arg6712[5], Arg6712_6 = Arg6712[6], Arg6712_7 = Arg6712[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6712_1, Arg6712_6, [Shen.type_func, function shen_user_lambda6715(Arg6714) {
  if (Arg6714.length < 7) return [Shen.type_func, shen_user_lambda6715, 7, Arg6714];
  var Arg6714_0 = Arg6714[0], Arg6714_1 = Arg6714[1], Arg6714_2 = Arg6714[2], Arg6714_3 = Arg6714[3], Arg6714_4 = Arg6714[4], Arg6714_5 = Arg6714[5], Arg6714_6 = Arg6714[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6714_1, Arg6714_2, Arg6714_3, Arg6714_4, Arg6714_5, Arg6714_6]);})}, 7, [Arg6712_1, Arg6712_2, Arg6712_3, Arg6712_4, Arg6712_5, Arg6712_6, Arg6712_7], undefined]]);})}, 8, [Arg6710_1, Arg6710_2, Arg6710_3, Arg6710_4, Arg6710_5, Arg6710_6, Arg6710_7, Arg6710_8], undefined]]);})}, 9, [Arg6708_1, Arg6708_2, Arg6708_3, Arg6708_4, Arg6708_5, Arg6708_6, Arg6708_7, Arg6708_8, Arg6708_9], undefined]]);})}, 18, [R4, R2, R5, R0, R1, Arg6690_1, R3, Arg6690_3, Arg6690_4, Arg6690_5, R6, Arg6690_4, Arg6690_0, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6690_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, ":"], Arg6690_4]),
  ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6690_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R7 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6690_4])),
  ((Shen.empty$question$(R4))
  ? ((R4 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6690_3, R7, Arg6690_4, [Shen.type_func, function shen_user_lambda6717(Arg6716) {
  if (Arg6716.length < 18) return [Shen.type_func, shen_user_lambda6717, 18, Arg6716];
  var Arg6716_0 = Arg6716[0], Arg6716_1 = Arg6716[1], Arg6716_2 = Arg6716[2], Arg6716_3 = Arg6716[3], Arg6716_4 = Arg6716[4], Arg6716_5 = Arg6716[5], Arg6716_6 = Arg6716[6], Arg6716_7 = Arg6716[7], Arg6716_8 = Arg6716[8], Arg6716_9 = Arg6716[9], Arg6716_10 = Arg6716[10], Arg6716_11 = Arg6716[11], Arg6716_12 = Arg6716[12], Arg6716_13 = Arg6716[13], Arg6716_14 = Arg6716[14], Arg6716_15 = Arg6716[15], Arg6716_16 = Arg6716[16], Arg6716_17 = Arg6716[17];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6716_2, Arg6716_1, Arg6716_8, [Shen.type_func, function shen_user_lambda6719(Arg6718) {
  if (Arg6718.length < 9) return [Shen.type_func, shen_user_lambda6719, 9, Arg6718];
  var Arg6718_0 = Arg6718[0], Arg6718_1 = Arg6718[1], Arg6718_2 = Arg6718[2], Arg6718_3 = Arg6718[3], Arg6718_4 = Arg6718[4], Arg6718_5 = Arg6718[5], Arg6718_6 = Arg6718[6], Arg6718_7 = Arg6718[7], Arg6718_8 = Arg6718[8];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6718_1, Arg6718_7])]), Arg6718_7, [Shen.type_func, function shen_user_lambda6721(Arg6720) {
  if (Arg6720.length < 8) return [Shen.type_func, shen_user_lambda6721, 8, Arg6720];
  var Arg6720_0 = Arg6720[0], Arg6720_1 = Arg6720[1], Arg6720_2 = Arg6720[2], Arg6720_3 = Arg6720[3], Arg6720_4 = Arg6720[4], Arg6720_5 = Arg6720[5], Arg6720_6 = Arg6720[6], Arg6720_7 = Arg6720[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6720_1, Arg6720_6, [Shen.type_func, function shen_user_lambda6723(Arg6722) {
  if (Arg6722.length < 7) return [Shen.type_func, shen_user_lambda6723, 7, Arg6722];
  var Arg6722_0 = Arg6722[0], Arg6722_1 = Arg6722[1], Arg6722_2 = Arg6722[2], Arg6722_3 = Arg6722[3], Arg6722_4 = Arg6722[4], Arg6722_5 = Arg6722[5], Arg6722_6 = Arg6722[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6722_1, Arg6722_2, Arg6722_3, Arg6722_4, Arg6722_5, Arg6722_6]);})}, 7, [Arg6720_1, Arg6720_2, Arg6720_3, Arg6720_4, Arg6720_5, Arg6720_6, Arg6720_7], undefined]]);})}, 8, [Arg6718_1, Arg6718_2, Arg6718_3, Arg6718_4, Arg6718_5, Arg6718_6, Arg6718_7, Arg6718_8], undefined]]);})}, 9, [Arg6716_1, Arg6716_2, Arg6716_3, Arg6716_4, Arg6716_5, Arg6716_6, Arg6716_7, Arg6716_8, Arg6716_9], undefined]]);})}, 18, [R7, R2, R5, R0, R1, Arg6690_1, R4, Arg6690_3, Arg6690_4, Arg6690_5, R6, Arg6690_4, Arg6690_0, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6690_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6690_3, R7, Arg6690_4, [Shen.type_func, function shen_user_lambda6725(Arg6724) {
  if (Arg6724.length < 20) return [Shen.type_func, shen_user_lambda6725, 20, Arg6724];
  var Arg6724_0 = Arg6724[0], Arg6724_1 = Arg6724[1], Arg6724_2 = Arg6724[2], Arg6724_3 = Arg6724[3], Arg6724_4 = Arg6724[4], Arg6724_5 = Arg6724[5], Arg6724_6 = Arg6724[6], Arg6724_7 = Arg6724[7], Arg6724_8 = Arg6724[8], Arg6724_9 = Arg6724[9], Arg6724_10 = Arg6724[10], Arg6724_11 = Arg6724[11], Arg6724_12 = Arg6724[12], Arg6724_13 = Arg6724[13], Arg6724_14 = Arg6724[14], Arg6724_15 = Arg6724[15], Arg6724_16 = Arg6724[16], Arg6724_17 = Arg6724[17], Arg6724_18 = Arg6724[18], Arg6724_19 = Arg6724[19];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6724_2, Arg6724_1, Arg6724_8, [Shen.type_func, function shen_user_lambda6727(Arg6726) {
  if (Arg6726.length < 9) return [Shen.type_func, shen_user_lambda6727, 9, Arg6726];
  var Arg6726_0 = Arg6726[0], Arg6726_1 = Arg6726[1], Arg6726_2 = Arg6726[2], Arg6726_3 = Arg6726[3], Arg6726_4 = Arg6726[4], Arg6726_5 = Arg6726[5], Arg6726_6 = Arg6726[6], Arg6726_7 = Arg6726[7], Arg6726_8 = Arg6726[8];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6726_1, Arg6726_7])]), Arg6726_7, [Shen.type_func, function shen_user_lambda6729(Arg6728) {
  if (Arg6728.length < 8) return [Shen.type_func, shen_user_lambda6729, 8, Arg6728];
  var Arg6728_0 = Arg6728[0], Arg6728_1 = Arg6728[1], Arg6728_2 = Arg6728[2], Arg6728_3 = Arg6728[3], Arg6728_4 = Arg6728[4], Arg6728_5 = Arg6728[5], Arg6728_6 = Arg6728[6], Arg6728_7 = Arg6728[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6728_1, Arg6728_6, [Shen.type_func, function shen_user_lambda6731(Arg6730) {
  if (Arg6730.length < 7) return [Shen.type_func, shen_user_lambda6731, 7, Arg6730];
  var Arg6730_0 = Arg6730[0], Arg6730_1 = Arg6730[1], Arg6730_2 = Arg6730[2], Arg6730_3 = Arg6730[3], Arg6730_4 = Arg6730[4], Arg6730_5 = Arg6730[5], Arg6730_6 = Arg6730[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6730_1, Arg6730_2, Arg6730_3, Arg6730_4, Arg6730_5, Arg6730_6]);})}, 7, [Arg6728_1, Arg6728_2, Arg6728_3, Arg6728_4, Arg6728_5, Arg6728_6, Arg6728_7], undefined]]);})}, 8, [Arg6726_1, Arg6726_2, Arg6726_3, Arg6726_4, Arg6726_5, Arg6726_6, Arg6726_7, Arg6726_8], undefined]]);})}, 9, [Arg6724_1, Arg6724_2, Arg6724_3, Arg6724_4, Arg6724_5, Arg6724_6, Arg6724_7, Arg6724_8, Arg6724_9], undefined]]);})}, 20, [R7, R2, R5, R0, R1, Arg6690_1, R3, Arg6690_3, Arg6690_4, Arg6690_5, R4, Arg6690_4, R6, Arg6690_4, Arg6690_0, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6690_4]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6690_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R7, []], Arg6690_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6690_3, R7, Arg6690_4, [Shen.type_func, function shen_user_lambda6733(Arg6732) {
  if (Arg6732.length < 20) return [Shen.type_func, shen_user_lambda6733, 20, Arg6732];
  var Arg6732_0 = Arg6732[0], Arg6732_1 = Arg6732[1], Arg6732_2 = Arg6732[2], Arg6732_3 = Arg6732[3], Arg6732_4 = Arg6732[4], Arg6732_5 = Arg6732[5], Arg6732_6 = Arg6732[6], Arg6732_7 = Arg6732[7], Arg6732_8 = Arg6732[8], Arg6732_9 = Arg6732[9], Arg6732_10 = Arg6732[10], Arg6732_11 = Arg6732[11], Arg6732_12 = Arg6732[12], Arg6732_13 = Arg6732[13], Arg6732_14 = Arg6732[14], Arg6732_15 = Arg6732[15], Arg6732_16 = Arg6732[16], Arg6732_17 = Arg6732[17], Arg6732_18 = Arg6732[18], Arg6732_19 = Arg6732[19];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6732_2, Arg6732_1, Arg6732_8, [Shen.type_func, function shen_user_lambda6735(Arg6734) {
  if (Arg6734.length < 9) return [Shen.type_func, shen_user_lambda6735, 9, Arg6734];
  var Arg6734_0 = Arg6734[0], Arg6734_1 = Arg6734[1], Arg6734_2 = Arg6734[2], Arg6734_3 = Arg6734[3], Arg6734_4 = Arg6734[4], Arg6734_5 = Arg6734[5], Arg6734_6 = Arg6734[6], Arg6734_7 = Arg6734[7], Arg6734_8 = Arg6734[8];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6734_1, Arg6734_7])]), Arg6734_7, [Shen.type_func, function shen_user_lambda6737(Arg6736) {
  if (Arg6736.length < 8) return [Shen.type_func, shen_user_lambda6737, 8, Arg6736];
  var Arg6736_0 = Arg6736[0], Arg6736_1 = Arg6736[1], Arg6736_2 = Arg6736[2], Arg6736_3 = Arg6736[3], Arg6736_4 = Arg6736[4], Arg6736_5 = Arg6736[5], Arg6736_6 = Arg6736[6], Arg6736_7 = Arg6736[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6736_1, Arg6736_6, [Shen.type_func, function shen_user_lambda6739(Arg6738) {
  if (Arg6738.length < 7) return [Shen.type_func, shen_user_lambda6739, 7, Arg6738];
  var Arg6738_0 = Arg6738[0], Arg6738_1 = Arg6738[1], Arg6738_2 = Arg6738[2], Arg6738_3 = Arg6738[3], Arg6738_4 = Arg6738[4], Arg6738_5 = Arg6738[5], Arg6738_6 = Arg6738[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6738_1, Arg6738_2, Arg6738_3, Arg6738_4, Arg6738_5, Arg6738_6]);})}, 7, [Arg6736_1, Arg6736_2, Arg6736_3, Arg6736_4, Arg6736_5, Arg6736_6, Arg6736_7], undefined]]);})}, 8, [Arg6734_1, Arg6734_2, Arg6734_3, Arg6734_4, Arg6734_5, Arg6734_6, Arg6734_7, Arg6734_8], undefined]]);})}, 9, [Arg6732_1, Arg6732_2, Arg6732_3, Arg6732_4, Arg6732_5, Arg6732_6, Arg6732_7, Arg6732_8, Arg6732_9], undefined]]);})}, 20, [R7, R2, R5, R0, R1, Arg6690_1, R3, Arg6690_3, Arg6690_4, Arg6690_5, R4, Arg6690_4, R6, Arg6690_4, Arg6690_0, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6690_4]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6690_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6690_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]], Arg6690_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6690_3, R6, Arg6690_4, [Shen.type_func, function shen_user_lambda6741(Arg6740) {
  if (Arg6740.length < 18) return [Shen.type_func, shen_user_lambda6741, 18, Arg6740];
  var Arg6740_0 = Arg6740[0], Arg6740_1 = Arg6740[1], Arg6740_2 = Arg6740[2], Arg6740_3 = Arg6740[3], Arg6740_4 = Arg6740[4], Arg6740_5 = Arg6740[5], Arg6740_6 = Arg6740[6], Arg6740_7 = Arg6740[7], Arg6740_8 = Arg6740[8], Arg6740_9 = Arg6740[9], Arg6740_10 = Arg6740[10], Arg6740_11 = Arg6740[11], Arg6740_12 = Arg6740[12], Arg6740_13 = Arg6740[13], Arg6740_14 = Arg6740[14], Arg6740_15 = Arg6740[15], Arg6740_16 = Arg6740[16], Arg6740_17 = Arg6740[17];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6740_2, Arg6740_1, Arg6740_8, [Shen.type_func, function shen_user_lambda6743(Arg6742) {
  if (Arg6742.length < 9) return [Shen.type_func, shen_user_lambda6743, 9, Arg6742];
  var Arg6742_0 = Arg6742[0], Arg6742_1 = Arg6742[1], Arg6742_2 = Arg6742[2], Arg6742_3 = Arg6742[3], Arg6742_4 = Arg6742[4], Arg6742_5 = Arg6742[5], Arg6742_6 = Arg6742[6], Arg6742_7 = Arg6742[7], Arg6742_8 = Arg6742[8];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6742_1, Arg6742_7])]), Arg6742_7, [Shen.type_func, function shen_user_lambda6745(Arg6744) {
  if (Arg6744.length < 8) return [Shen.type_func, shen_user_lambda6745, 8, Arg6744];
  var Arg6744_0 = Arg6744[0], Arg6744_1 = Arg6744[1], Arg6744_2 = Arg6744[2], Arg6744_3 = Arg6744[3], Arg6744_4 = Arg6744[4], Arg6744_5 = Arg6744[5], Arg6744_6 = Arg6744[6], Arg6744_7 = Arg6744[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6744_1, Arg6744_6, [Shen.type_func, function shen_user_lambda6747(Arg6746) {
  if (Arg6746.length < 7) return [Shen.type_func, shen_user_lambda6747, 7, Arg6746];
  var Arg6746_0 = Arg6746[0], Arg6746_1 = Arg6746[1], Arg6746_2 = Arg6746[2], Arg6746_3 = Arg6746[3], Arg6746_4 = Arg6746[4], Arg6746_5 = Arg6746[5], Arg6746_6 = Arg6746[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6746_1, Arg6746_2, Arg6746_3, Arg6746_4, Arg6746_5, Arg6746_6]);})}, 7, [Arg6744_1, Arg6744_2, Arg6744_3, Arg6744_4, Arg6744_5, Arg6744_6, Arg6744_7], undefined]]);})}, 8, [Arg6742_1, Arg6742_2, Arg6742_3, Arg6742_4, Arg6742_5, Arg6742_6, Arg6742_7, Arg6742_8], undefined]]);})}, 9, [Arg6740_1, Arg6740_2, Arg6740_3, Arg6740_4, Arg6740_5, Arg6740_6, Arg6740_7, Arg6740_8, Arg6740_9], undefined]]);})}, 18, [R6, R2, R5, R0, R1, Arg6690_1, R3, Arg6690_3, Arg6690_4, Arg6690_5, R4, Arg6690_4, Arg6690_0, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6690_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6690_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6690_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]]], Arg6690_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6690_3, R6, Arg6690_4, [Shen.type_func, function shen_user_lambda6749(Arg6748) {
  if (Arg6748.length < 18) return [Shen.type_func, shen_user_lambda6749, 18, Arg6748];
  var Arg6748_0 = Arg6748[0], Arg6748_1 = Arg6748[1], Arg6748_2 = Arg6748[2], Arg6748_3 = Arg6748[3], Arg6748_4 = Arg6748[4], Arg6748_5 = Arg6748[5], Arg6748_6 = Arg6748[6], Arg6748_7 = Arg6748[7], Arg6748_8 = Arg6748[8], Arg6748_9 = Arg6748[9], Arg6748_10 = Arg6748[10], Arg6748_11 = Arg6748[11], Arg6748_12 = Arg6748[12], Arg6748_13 = Arg6748[13], Arg6748_14 = Arg6748[14], Arg6748_15 = Arg6748[15], Arg6748_16 = Arg6748[16], Arg6748_17 = Arg6748[17];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6748_2, Arg6748_1, Arg6748_8, [Shen.type_func, function shen_user_lambda6751(Arg6750) {
  if (Arg6750.length < 9) return [Shen.type_func, shen_user_lambda6751, 9, Arg6750];
  var Arg6750_0 = Arg6750[0], Arg6750_1 = Arg6750[1], Arg6750_2 = Arg6750[2], Arg6750_3 = Arg6750[3], Arg6750_4 = Arg6750[4], Arg6750_5 = Arg6750[5], Arg6750_6 = Arg6750[6], Arg6750_7 = Arg6750[7], Arg6750_8 = Arg6750[8];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6750_1, Arg6750_7])]), Arg6750_7, [Shen.type_func, function shen_user_lambda6753(Arg6752) {
  if (Arg6752.length < 8) return [Shen.type_func, shen_user_lambda6753, 8, Arg6752];
  var Arg6752_0 = Arg6752[0], Arg6752_1 = Arg6752[1], Arg6752_2 = Arg6752[2], Arg6752_3 = Arg6752[3], Arg6752_4 = Arg6752[4], Arg6752_5 = Arg6752[5], Arg6752_6 = Arg6752[6], Arg6752_7 = Arg6752[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6752_1, Arg6752_6, [Shen.type_func, function shen_user_lambda6755(Arg6754) {
  if (Arg6754.length < 7) return [Shen.type_func, shen_user_lambda6755, 7, Arg6754];
  var Arg6754_0 = Arg6754[0], Arg6754_1 = Arg6754[1], Arg6754_2 = Arg6754[2], Arg6754_3 = Arg6754[3], Arg6754_4 = Arg6754[4], Arg6754_5 = Arg6754[5], Arg6754_6 = Arg6754[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6754_1, Arg6754_2, Arg6754_3, Arg6754_4, Arg6754_5, Arg6754_6]);})}, 7, [Arg6752_1, Arg6752_2, Arg6752_3, Arg6752_4, Arg6752_5, Arg6752_6, Arg6752_7], undefined]]);})}, 8, [Arg6750_1, Arg6750_2, Arg6750_3, Arg6750_4, Arg6750_5, Arg6750_6, Arg6750_7, Arg6750_8], undefined]]);})}, 9, [Arg6748_1, Arg6748_2, Arg6748_3, Arg6748_4, Arg6748_5, Arg6748_6, Arg6748_7, Arg6748_8, Arg6748_9], undefined]]);})}, 18, [R6, R2, R5, R0, R1, Arg6690_1, R3, Arg6690_3, Arg6690_4, Arg6690_5, R4, Arg6690_4, Arg6690_0, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6690_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6690_4])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6690_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6690_4])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], R6], Arg6690_4]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6690_3, R5, Arg6690_4, [Shen.type_func, function shen_user_lambda6757(Arg6756) {
  if (Arg6756.length < 17) return [Shen.type_func, shen_user_lambda6757, 17, Arg6756];
  var Arg6756_0 = Arg6756[0], Arg6756_1 = Arg6756[1], Arg6756_2 = Arg6756[2], Arg6756_3 = Arg6756[3], Arg6756_4 = Arg6756[4], Arg6756_5 = Arg6756[5], Arg6756_6 = Arg6756[6], Arg6756_7 = Arg6756[7], Arg6756_8 = Arg6756[8], Arg6756_9 = Arg6756[9], Arg6756_10 = Arg6756[10], Arg6756_11 = Arg6756[11], Arg6756_12 = Arg6756[12], Arg6756_13 = Arg6756[13], Arg6756_14 = Arg6756[14], Arg6756_15 = Arg6756[15], Arg6756_16 = Arg6756[16];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6756_2, Arg6756_1, Arg6756_10, [Shen.type_func, function shen_user_lambda6759(Arg6758) {
  if (Arg6758.length < 9) return [Shen.type_func, shen_user_lambda6759, 9, Arg6758];
  var Arg6758_0 = Arg6758[0], Arg6758_1 = Arg6758[1], Arg6758_2 = Arg6758[2], Arg6758_3 = Arg6758[3], Arg6758_4 = Arg6758[4], Arg6758_5 = Arg6758[5], Arg6758_6 = Arg6758[6], Arg6758_7 = Arg6758[7], Arg6758_8 = Arg6758[8];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6758_1, Arg6758_7])]), Arg6758_7, [Shen.type_func, function shen_user_lambda6761(Arg6760) {
  if (Arg6760.length < 8) return [Shen.type_func, shen_user_lambda6761, 8, Arg6760];
  var Arg6760_0 = Arg6760[0], Arg6760_1 = Arg6760[1], Arg6760_2 = Arg6760[2], Arg6760_3 = Arg6760[3], Arg6760_4 = Arg6760[4], Arg6760_5 = Arg6760[5], Arg6760_6 = Arg6760[6], Arg6760_7 = Arg6760[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6760_1, Arg6760_6, [Shen.type_func, function shen_user_lambda6763(Arg6762) {
  if (Arg6762.length < 7) return [Shen.type_func, shen_user_lambda6763, 7, Arg6762];
  var Arg6762_0 = Arg6762[0], Arg6762_1 = Arg6762[1], Arg6762_2 = Arg6762[2], Arg6762_3 = Arg6762[3], Arg6762_4 = Arg6762[4], Arg6762_5 = Arg6762[5], Arg6762_6 = Arg6762[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6762_1, Arg6762_2, Arg6762_3, Arg6762_4, Arg6762_5, Arg6762_6]);})}, 7, [Arg6760_1, Arg6760_2, Arg6760_3, Arg6760_4, Arg6760_5, Arg6760_6, Arg6760_7], undefined]]);})}, 8, [Arg6758_1, Arg6758_2, Arg6758_3, Arg6758_4, Arg6758_5, Arg6758_6, Arg6758_7, Arg6758_8], undefined]]);})}, 9, [Arg6756_1, Arg6756_2, Arg6756_3, Arg6756_4, Arg6756_5, Arg6756_6, Arg6756_7, Arg6756_10, Arg6756_8], undefined]]);})}, 17, [R5, R2, R4, R0, R1, Arg6690_1, R6, Arg6690_3, Arg6690_5, R3, Arg6690_4, Arg6690_0, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6690_4]),
  (R1 = R6))
  : (R1 = false))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6690_0, Arg6690_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.syntax-hyps"], [R1, Arg6690_1, Arg6690_2, Arg6690_3, Arg6690_4, Arg6690_5]))
  : false))
  : R1))
  : R1))]);}))}, 6, [], "shen.syntax-hyps"];





Shen.fns["shen.syntax-check"] = [Shen.type_func, function shen_user_lambda6765(Arg6764) {
  if (Arg6764.length < 5) return [Shen.type_func, shen_user_lambda6765, 5, Arg6764];
  var Arg6764_0 = Arg6764[0], Arg6764_1 = Arg6764[1], Arg6764_2 = Arg6764[2], Arg6764_3 = Arg6764[3], Arg6764_4 = Arg6764[4];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6764_0, Arg6764_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6764_4))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6764_0, Arg6764_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6764_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.grammar_symbol?"], [Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6764_3])]), Arg6764_3, [Shen.type_func, function shen_user_lambda6767(Arg6766) {
  if (Arg6766.length < 14) return [Shen.type_func, shen_user_lambda6767, 14, Arg6766];
  var Arg6766_0 = Arg6766[0], Arg6766_1 = Arg6766[1], Arg6766_2 = Arg6766[2], Arg6766_3 = Arg6766[3], Arg6766_4 = Arg6766[4], Arg6766_5 = Arg6766[5], Arg6766_6 = Arg6766[6], Arg6766_7 = Arg6766[7], Arg6766_8 = Arg6766[8], Arg6766_9 = Arg6766[9], Arg6766_10 = Arg6766[10], Arg6766_11 = Arg6766[11], Arg6766_12 = Arg6766[12], Arg6766_13 = Arg6766[13];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6766_2, Arg6766_6, [Shen.type_func, function shen_user_lambda6769(Arg6768) {
  if (Arg6768.length < 8) return [Shen.type_func, shen_user_lambda6769, 8, Arg6768];
  var Arg6768_0 = Arg6768[0], Arg6768_1 = Arg6768[1], Arg6768_2 = Arg6768[2], Arg6768_3 = Arg6768[3], Arg6768_4 = Arg6768[4], Arg6768_5 = Arg6768[5], Arg6768_6 = Arg6768[6], Arg6768_7 = Arg6768[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6768_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6768_4, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6768_1, []]]], []]]], Arg6768_5, Arg6768_6, [Shen.type_func, function shen_user_lambda6771(Arg6770) {
  if (Arg6770.length < 8) return [Shen.type_func, shen_user_lambda6771, 8, Arg6770];
  var Arg6770_0 = Arg6770[0], Arg6770_1 = Arg6770[1], Arg6770_2 = Arg6770[2], Arg6770_3 = Arg6770[3], Arg6770_4 = Arg6770[4], Arg6770_5 = Arg6770[5], Arg6770_6 = Arg6770[6], Arg6770_7 = Arg6770[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6770_2, Arg6770_6, [Shen.type_func, function shen_user_lambda6773(Arg6772) {
  if (Arg6772.length < 6) return [Shen.type_func, shen_user_lambda6773, 6, Arg6772];
  var Arg6772_0 = Arg6772[0], Arg6772_1 = Arg6772[1], Arg6772_2 = Arg6772[2], Arg6772_3 = Arg6772[3], Arg6772_4 = Arg6772[4], Arg6772_5 = Arg6772[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6772_1, Arg6772_2, Arg6772_3, Arg6772_4, Arg6772_5]);})}, 6, [Arg6770_2, Arg6770_3, Arg6770_4, Arg6770_5, Arg6770_6, Arg6770_7], undefined]]);})}, 8, [Arg6768_0, Arg6768_1, Arg6768_2, Arg6768_3, Arg6768_4, Arg6768_5, Arg6768_6, Arg6768_7], undefined]]);})}, 8, [Arg6766_0, Arg6766_1, Arg6766_2, Arg6766_3, Arg6766_4, Arg6766_5, Arg6766_6, Arg6766_7], undefined]]);})}, 14, [R2, R3, R0, R1, Arg6764_1, Arg6764_2, Arg6764_3, Arg6764_4, Arg6764_0, R0, Arg6764_1, Arg6764_2, Arg6764_3, Arg6764_4], undefined]])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6764_0, Arg6764_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, R2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6764_1, []]]], Arg6764_2, Arg6764_3, [Shen.type_func, function shen_user_lambda6775(Arg6774) {
  if (Arg6774.length < 7) return [Shen.type_func, shen_user_lambda6775, 7, Arg6774];
  var Arg6774_0 = Arg6774[0], Arg6774_1 = Arg6774[1], Arg6774_2 = Arg6774[2], Arg6774_3 = Arg6774[3], Arg6774_4 = Arg6774[4], Arg6774_5 = Arg6774[5], Arg6774_6 = Arg6774[6];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6774_1, Arg6774_5, [Shen.type_func, function shen_user_lambda6777(Arg6776) {
  if (Arg6776.length < 6) return [Shen.type_func, shen_user_lambda6777, 6, Arg6776];
  var Arg6776_0 = Arg6776[0], Arg6776_1 = Arg6776[1], Arg6776_2 = Arg6776[2], Arg6776_3 = Arg6776[3], Arg6776_4 = Arg6776[4], Arg6776_5 = Arg6776[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6776_1, Arg6776_2, Arg6776_3, Arg6776_4, Arg6776_5]);})}, 6, [Arg6774_1, Arg6774_2, Arg6774_3, Arg6774_4, Arg6774_5, Arg6774_6], undefined]]);})}, 7, [R2, R0, R1, Arg6764_1, Arg6764_2, Arg6764_3, Arg6764_4], undefined]]))
  : false))
  : R1))
  : R1))]);}))}, 5, [], "shen.syntax-check"];





Shen.fns["shen.semantics-check"] = [Shen.type_func, function shen_user_lambda6779(Arg6778) {
  if (Arg6778.length < 5) return [Shen.type_func, shen_user_lambda6779, 5, Arg6778];
  var Arg6778_0 = Arg6778[0], Arg6778_1 = Arg6778[1], Arg6778_2 = Arg6778[2], Arg6778_3 = Arg6778[3], Arg6778_4 = Arg6778[4];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6778_0, Arg6778_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6778_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6778_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6778_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6778_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["cut"], [R0, Arg6778_3, [Shen.type_func, function shen_user_lambda6781(Arg6780) {
  if (Arg6780.length < 8) return [Shen.type_func, shen_user_lambda6781, 8, Arg6780];
  var Arg6780_0 = Arg6780[0], Arg6780_1 = Arg6780[1], Arg6780_2 = Arg6780[2], Arg6780_3 = Arg6780[3], Arg6780_4 = Arg6780[4], Arg6780_5 = Arg6780[5], Arg6780_6 = Arg6780[6], Arg6780_7 = Arg6780[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg6780_1]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], Arg6780_5, Arg6780_6, [Shen.type_func, function shen_user_lambda6783(Arg6782) {
  if (Arg6782.length < 6) return [Shen.type_func, shen_user_lambda6783, 6, Arg6782];
  var Arg6782_0 = Arg6782[0], Arg6782_1 = Arg6782[1], Arg6782_2 = Arg6782[2], Arg6782_3 = Arg6782[3], Arg6782_4 = Arg6782[4], Arg6782_5 = Arg6782[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg6782_1]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6782_2, []]]], Arg6782_3, Arg6782_4, Arg6782_5]);})}, 6, [Arg6780_1, Arg6780_2, Arg6780_4, Arg6780_5, Arg6780_6, Arg6780_7], undefined]]);})}, 8, [R0, R1, R3, Arg6778_0, Arg6778_1, Arg6778_2, Arg6778_3, Arg6778_4], undefined]])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6778_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R0, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.rename-semantics"], [Shen.call(Shen.fns["shen.deref"], [Arg6778_0, Arg6778_3])])]), Arg6778_3, [Shen.type_func, function shen_user_lambda6785(Arg6784) {
  if (Arg6784.length < 6) return [Shen.type_func, shen_user_lambda6785, 6, Arg6784];
  var Arg6784_0 = Arg6784[0], Arg6784_1 = Arg6784[1], Arg6784_2 = Arg6784[2], Arg6784_3 = Arg6784[3], Arg6784_4 = Arg6784[4], Arg6784_5 = Arg6784[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6784_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6784_2, []]]], Arg6784_3, Arg6784_4, Arg6784_5]);})}, 6, [Arg6778_0, R0, Arg6778_1, Arg6778_2, Arg6778_3, Arg6778_4], undefined]]))
  : R0))]);}))}, 5, [], "shen.semantics-check"];





Shen.fns["shen.rename-semantics"] = [Shen.type_func, function shen_user_lambda6787(Arg6786) {
  if (Arg6786.length < 1) return [Shen.type_func, shen_user_lambda6787, 1, Arg6786];
  var Arg6786_0 = Arg6786[0];
  return ((Shen.is_type(Arg6786_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rename-semantics"], [Arg6786_0[1]]), Shen.call(Shen.fns["shen.rename-semantics"], [Arg6786_0[2]])]
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg6786_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.<-sem"], [Shen.type_cons, Arg6786_0, []]]
  : Arg6786_0))}, 1, [], "shen.rename-semantics"];















Shen.fns["shen.shen"] = [Shen.type_func, function shen_user_lambda7990(Arg7989) {
  if (Arg7989.length < 0) return [Shen.type_func, shen_user_lambda7990, 0, Arg7989];
  return (Shen.call(Shen.fns["shen.credits"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.shen"];





Shen.fns["shen.loop"] = [Shen.type_func, function shen_user_lambda7994(Arg7991) {
  if (Arg7991.length < 0) return [Shen.type_func, shen_user_lambda7994, 0, Arg7991];
  var R0, R1;
  return (Shen.call(Shen.fns["shen.initialise_environment"], []),
  Shen.call(Shen.fns["shen.prompt"], []),
  (R0 = [Shen.type_func, function shen_user_lambda7996(Arg7995) {
  if (Arg7995.length < 0) return [Shen.type_func, shen_user_lambda7996, 0, Arg7995];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.read-evaluate-print"], []);})}, 0, [], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda7998(Arg7997) {
  if (Arg7997.length < 1) return [Shen.type_func, shen_user_lambda7998, 1, Arg7997];
  var Arg7997_0 = Arg7997[0];
  return (function() {
  return Shen.call_tail(Shen.fns["pr"], [Shen.error_to_string(Arg7997_0), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined]),
  Shen.trap_error(R0, R1),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.loop"];





Shen.fns["shen.credits"] = [Shen.type_func, function shen_user_lambda8000(Arg7999) {
  if (Arg7999.length < 0) return [Shen.type_func, shen_user_lambda8000, 0, Arg7999];
  return (Shen.call(Shen.fns["shen.prhush"], ["\x0d\x0aShen 2010, copyright (C) 2010 Mark Tarver\x0d\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], ["released under the Shen license\x0d\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [("www.shenlanguage.org, " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*version*"]), "\x0d\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [("running under " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*language*"]), (", implementation: " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*implementation*"]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0d\x0aport " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*port*"]), (" ported by " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*porters*"]), "\x0d\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.credits"];





Shen.fns["shen.initialise_environment"] = [Shen.type_func, function shen_user_lambda8002(Arg8001) {
  if (Arg8001.length < 0) return [Shen.type_func, shen_user_lambda8002, 0, Arg8001];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [[Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*infs*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*process-counter*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*catch*"], [Shen.type_cons, 0, []]]]]]]]]]);})}, 0, [], "shen.initialise_environment"];





Shen.fns["shen.multiple-set"] = [Shen.type_func, function shen_user_lambda8004(Arg8003) {
  if (Arg8003.length < 1) return [Shen.type_func, shen_user_lambda8004, 1, Arg8003];
  var Arg8003_0 = Arg8003[0];
  return ((Shen.empty$question$(Arg8003_0))
  ? []
  : (((Shen.is_type(Arg8003_0, Shen.type_cons) && Shen.is_type(Arg8003_0[2], Shen.type_cons)))
  ? ((Shen.globals[Arg8003_0[1][1]] = Arg8003_0[2][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [Arg8003_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiple-set"]]);})))}, 1, [], "shen.multiple-set"];





Shen.fns["destroy"] = [Shen.type_func, function shen_user_lambda8006(Arg8005) {
  if (Arg8005.length < 1) return [Shen.type_func, shen_user_lambda8006, 1, Arg8005];
  var Arg8005_0 = Arg8005[0];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg8005_0, [Shen.type_symbol, "symbol"]]);})}, 1, [], "destroy"];





Shen.call_toplevel(function js$dot$shen_js_toplevel8009(Arg8007) {
  if (Arg8007.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel8009, 0, Arg8007];
  return (Shen.globals["shen.*history*"] = [])});




Shen.fns["shen.read-evaluate-print"] = [Shen.type_func, function shen_user_lambda8011(Arg8010) {
  if (Arg8010.length < 0) return [Shen.type_func, shen_user_lambda8011, 0, Arg8010];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.toplineread"], [])),
  (R1 = (Shen.globals["shen.*history*"])),
  (R0 = Shen.call(Shen.fns["shen.retrieve-from-history-if-needed"], [R0, R1])),
  Shen.call(Shen.fns["shen.update_history"], [R0, R1]),
  (R1 = Shen.call(Shen.fns["fst"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel"], [R1]);}))}, 0, [], "shen.read-evaluate-print"];





Shen.fns["shen.retrieve-from-history-if-needed"] = [Shen.type_func, function shen_user_lambda8013(Arg8012) {
  if (Arg8012.length < 2) return [Shen.type_func, shen_user_lambda8013, 2, Arg8012];
  var Arg8012_0 = Arg8012[0], Arg8012_1 = Arg8012[1];
  var R0;
  return (((Shen.is_type(Arg8012_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg8012_0]), Shen.type_cons) && Shen.call(Shen.fns["element?"], [Shen.call(Shen.fns["snd"], [Arg8012_0])[1], [Shen.type_cons, Shen.call(Shen.fns["shen.space"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), []]]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.retrieve-from-history-if-needed"], [[Shen.fns['shen.tuple'], Shen.call(Shen.fns["fst"], [Arg8012_0]), Shen.call(Shen.fns["snd"], [Arg8012_0])[2]], Arg8012_1]);})
  : (((Shen.is_type(Arg8012_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg8012_0]), Shen.type_cons) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg8012_0])[2], Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg8012_0])[2][2]) && (Shen.is_type(Arg8012_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg8012_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg8012_0])[2][1], Shen.call(Shen.fns["shen.exclamation"], []))))))))))
  ? (Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg8012_1[1]])]),
  Arg8012_1[1])
  : (((Shen.is_type(Arg8012_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg8012_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg8012_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg8012_0])[2], Arg8012_1])),
  (R0 = Shen.call(Shen.fns["head"], [Shen.call(Shen.fns["shen.find-past-inputs"], [R0, Arg8012_1])])),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [R0])]),
  R0)
  : (((Shen.is_type(Arg8012_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg8012_0]), Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg8012_0])[2]) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg8012_0])[1], Shen.call(Shen.fns["shen.percent"], [])))))))
  ? (Shen.call(Shen.fns["shen.print-past-inputs"], [[Shen.type_func, function shen_user_lambda8015(Arg8014) {
  if (Arg8014.length < 1) return [Shen.type_func, shen_user_lambda8015, 1, Arg8014];
  var Arg8014_0 = Arg8014[0];
  return true}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg8012_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : (((Shen.is_type(Arg8012_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg8012_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg8012_0])[1], Shen.call(Shen.fns["shen.percent"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg8012_0])[2], Arg8012_1])),
  Shen.call(Shen.fns["shen.print-past-inputs"], [R0, Shen.call(Shen.fns["reverse"], [Arg8012_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : Arg8012_0)))))}, 2, [], "shen.retrieve-from-history-if-needed"];





Shen.fns["shen.percent"] = [Shen.type_func, function shen_user_lambda8017(Arg8016) {
  if (Arg8016.length < 0) return [Shen.type_func, shen_user_lambda8017, 0, Arg8016];
  return 37}, 0, [], "shen.percent"];





Shen.fns["shen.exclamation"] = [Shen.type_func, function shen_user_lambda8019(Arg8018) {
  if (Arg8018.length < 0) return [Shen.type_func, shen_user_lambda8019, 0, Arg8018];
  return 33}, 0, [], "shen.exclamation"];





Shen.fns["shen.prbytes"] = [Shen.type_func, function shen_user_lambda8021(Arg8020) {
  if (Arg8020.length < 1) return [Shen.type_func, shen_user_lambda8021, 1, Arg8020];
  var Arg8020_0 = Arg8020[0];
  return (Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda8023(Arg8022) {
  if (Arg8022.length < 1) return [Shen.type_func, shen_user_lambda8023, 1, Arg8022];
  var Arg8022_0 = Arg8022[0];
  return (function() {
  return Shen.call_tail(Shen.fns["pr"], [Shen.n_$gt$string(Arg8022_0), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Arg8020_0]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 1, [], "shen.prbytes"];





Shen.fns["shen.update_history"] = [Shen.type_func, function shen_user_lambda8025(Arg8024) {
  if (Arg8024.length < 2) return [Shen.type_func, shen_user_lambda8025, 2, Arg8024];
  var Arg8024_0 = Arg8024[0], Arg8024_1 = Arg8024[1];
  return (Shen.globals["shen.*history*"] = [Shen.type_cons, Arg8024_0, Arg8024_1])}, 2, [], "shen.update_history"];





Shen.fns["shen.toplineread"] = [Shen.type_func, function shen_user_lambda8027(Arg8026) {
  if (Arg8026.length < 0) return [Shen.type_func, shen_user_lambda8027, 0, Arg8026];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), []]);})}, 0, [], "shen.toplineread"];





Shen.fns["shen.toplineread_loop"] = [Shen.type_func, function shen_user_lambda8029(Arg8028) {
  if (Arg8028.length < 2) return [Shen.type_func, shen_user_lambda8029, 2, Arg8028];
  var Arg8028_0 = Arg8028[0], Arg8028_1 = Arg8028[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg8028_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg8028_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda8031(Arg8030) {
  if (Arg8030.length < 1) return [Shen.type_func, shen_user_lambda8031, 1, Arg8030];
  var Arg8030_0 = Arg8030[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg8030_0]);})}, 1, [], undefined], Arg8028_1, [Shen.type_func, function shen_user_lambda8033(Arg8032) {
  if (Arg8032.length < 1) return [Shen.type_func, shen_user_lambda8033, 1, Arg8032];
  var Arg8032_0 = Arg8032[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg8028_1, [Shen.type_cons, Arg8028_0, []]])]);})
  : [Shen.fns['shen.tuple'], R0, Arg8028_1]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg8028_1, [Shen.type_cons, Arg8028_0, []]])]);})))}, 2, [], "shen.toplineread_loop"];





Shen.fns["shen.hat"] = [Shen.type_func, function shen_user_lambda8035(Arg8034) {
  if (Arg8034.length < 0) return [Shen.type_func, shen_user_lambda8035, 0, Arg8034];
  return 94}, 0, [], "shen.hat"];





Shen.fns["shen.newline"] = [Shen.type_func, function shen_user_lambda8037(Arg8036) {
  if (Arg8036.length < 0) return [Shen.type_func, shen_user_lambda8037, 0, Arg8036];
  return 10}, 0, [], "shen.newline"];





Shen.fns["shen.carriage-return"] = [Shen.type_func, function shen_user_lambda8039(Arg8038) {
  if (Arg8038.length < 0) return [Shen.type_func, shen_user_lambda8039, 0, Arg8038];
  return 13}, 0, [], "shen.carriage-return"];





Shen.fns["tc"] = [Shen.type_func, function shen_user_lambda8041(Arg8040) {
  if (Arg8040.length < 1) return [Shen.type_func, shen_user_lambda8041, 1, Arg8040];
  var Arg8040_0 = Arg8040[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg8040_0)))
  ? (Shen.globals["shen.*tc*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg8040_0)))
  ? (Shen.globals["shen.*tc*"] = false)
  : (function() {
  return Shen.simple_error("tc expects a + or -");})))}, 1, [], "tc"];





Shen.fns["shen.prompt"] = [Shen.type_func, function shen_user_lambda8043(Arg8042) {
  if (Arg8042.length < 0) return [Shen.type_func, shen_user_lambda8043, 0, Arg8042];
  return (((Shen.globals["shen.*tc*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0d\x0a\x0d\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "+) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0d\x0a\x0d\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "-) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.prompt"];





Shen.fns["shen.toplevel"] = [Shen.type_func, function shen_user_lambda8045(Arg8044) {
  if (Arg8044.length < 1) return [Shen.type_func, shen_user_lambda8045, 1, Arg8044];
  var Arg8044_0 = Arg8044[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg8044_0, (Shen.globals["shen.*tc*"])]);})}, 1, [], "shen.toplevel"];





Shen.fns["shen.find-past-inputs"] = [Shen.type_func, function shen_user_lambda8047(Arg8046) {
  if (Arg8046.length < 2) return [Shen.type_func, shen_user_lambda8047, 2, Arg8046];
  var Arg8046_0 = Arg8046[0], Arg8046_1 = Arg8046[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.find"], [Arg8046_0, Arg8046_1])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("input not found\x0d\x0a");})
  : R0))}, 2, [], "shen.find-past-inputs"];





Shen.fns["shen.make-key"] = [Shen.type_func, function shen_user_lambda8049(Arg8048) {
  if (Arg8048.length < 2) return [Shen.type_func, shen_user_lambda8049, 2, Arg8048];
  var Arg8048_0 = Arg8048[0], Arg8048_1 = Arg8048[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda8051(Arg8050) {
  if (Arg8050.length < 1) return [Shen.type_func, shen_user_lambda8051, 1, Arg8050];
  var Arg8050_0 = Arg8050[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg8050_0]);})}, 1, [], undefined], Arg8048_0, [Shen.type_func, function shen_user_lambda8053(Arg8052) {
  if (Arg8052.length < 1) return [Shen.type_func, shen_user_lambda8053, 1, Arg8052];
  var Arg8052_0 = Arg8052[0];
  return ((Shen.is_type(Arg8052_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg8052_0, "\x0d\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0d\x0a");}))}, 1, [], undefined]])[1]),
  ((Shen.call(Shen.fns["integer?"], [R0]))
  ? [Shen.type_func, function shen_user_lambda8055(Arg8054) {
  if (Arg8054.length < 3) return [Shen.type_func, shen_user_lambda8055, 3, Arg8054];
  var Arg8054_0 = Arg8054[0], Arg8054_1 = Arg8054[1], Arg8054_2 = Arg8054[2];
  return Shen.$eq$(Arg8054_2, Shen.call(Shen.fns["nth"], [(Arg8054_0 + 1), Shen.call(Shen.fns["reverse"], [Arg8054_1])]))}, 3, [R0, Arg8048_1], undefined]
  : [Shen.type_func, function shen_user_lambda8057(Arg8056) {
  if (Arg8056.length < 2) return [Shen.type_func, shen_user_lambda8057, 2, Arg8056];
  var Arg8056_0 = Arg8056[0], Arg8056_1 = Arg8056[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg8056_0, Shen.call(Shen.fns["shen.trim-gubbins"], [Shen.call(Shen.fns["snd"], [Arg8056_1])])]);})}, 2, [Arg8048_0], undefined]))}, 2, [], "shen.make-key"];





Shen.fns["shen.trim-gubbins"] = [Shen.type_func, function shen_user_lambda8059(Arg8058) {
  if (Arg8058.length < 1) return [Shen.type_func, shen_user_lambda8059, 1, Arg8058];
  var Arg8058_0 = Arg8058[0];
  return (((Shen.is_type(Arg8058_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg8058_0[1], Shen.call(Shen.fns["shen.space"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg8058_0[2]]);})
  : (((Shen.is_type(Arg8058_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg8058_0[1], Shen.call(Shen.fns["shen.newline"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg8058_0[2]]);})
  : (((Shen.is_type(Arg8058_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg8058_0[1], Shen.call(Shen.fns["shen.carriage-return"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg8058_0[2]]);})
  : (((Shen.is_type(Arg8058_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg8058_0[1], Shen.call(Shen.fns["shen.tab"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg8058_0[2]]);})
  : (((Shen.is_type(Arg8058_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg8058_0[1], Shen.call(Shen.fns["shen.left-round"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg8058_0[2]]);})
  : Arg8058_0)))))}, 1, [], "shen.trim-gubbins"];





Shen.fns["shen.space"] = [Shen.type_func, function shen_user_lambda8061(Arg8060) {
  if (Arg8060.length < 0) return [Shen.type_func, shen_user_lambda8061, 0, Arg8060];
  return 32}, 0, [], "shen.space"];





Shen.fns["shen.tab"] = [Shen.type_func, function shen_user_lambda8063(Arg8062) {
  if (Arg8062.length < 0) return [Shen.type_func, shen_user_lambda8063, 0, Arg8062];
  return 9}, 0, [], "shen.tab"];





Shen.fns["shen.left-round"] = [Shen.type_func, function shen_user_lambda8065(Arg8064) {
  if (Arg8064.length < 0) return [Shen.type_func, shen_user_lambda8065, 0, Arg8064];
  return 40}, 0, [], "shen.left-round"];





Shen.fns["shen.find"] = [Shen.type_func, function shen_user_lambda8067(Arg8066) {
  if (Arg8066.length < 2) return [Shen.type_func, shen_user_lambda8067, 2, Arg8066];
  var Arg8066_0 = Arg8066[0], Arg8066_1 = Arg8066[1];
  return ((Shen.empty$question$(Arg8066_1))
  ? []
  : (((Shen.is_type(Arg8066_1, Shen.type_cons) && Shen.call(Arg8066_0, [Arg8066_1[1]])))
  ? [Shen.type_cons, Arg8066_1[1], Shen.call(Shen.fns["shen.find"], [Arg8066_0, Arg8066_1[2]])]
  : ((Shen.is_type(Arg8066_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.find"], [Arg8066_0, Arg8066_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.find"]]);}))))}, 2, [], "shen.find"];





Shen.fns["shen.prefix?"] = [Shen.type_func, function shen_user_lambda8069(Arg8068) {
  if (Arg8068.length < 2) return [Shen.type_func, shen_user_lambda8069, 2, Arg8068];
  var Arg8068_0 = Arg8068[0], Arg8068_1 = Arg8068[1];
  return ((Shen.empty$question$(Arg8068_0))
  ? true
  : (((Shen.is_type(Arg8068_0, Shen.type_cons) && (Shen.is_type(Arg8068_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg8068_1[1], Arg8068_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg8068_0[2], Arg8068_1[2]]);})
  : false))}, 2, [], "shen.prefix?"];





Shen.fns["shen.print-past-inputs"] = [Shen.type_func, function shen_user_lambda8071(Arg8070) {
  if (Arg8070.length < 3) return [Shen.type_func, shen_user_lambda8071, 3, Arg8070];
  var Arg8070_0 = Arg8070[0], Arg8070_1 = Arg8070[1], Arg8070_2 = Arg8070[2];
  return ((Shen.empty$question$(Arg8070_1))
  ? [Shen.type_symbol, "_"]
  : (((Shen.is_type(Arg8070_1, Shen.type_cons) && (!Shen.call(Arg8070_0, [Arg8070_1[1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg8070_0, Arg8070_1[2], (Arg8070_2 + 1)]);})
  : (((Shen.is_type(Arg8070_1, Shen.type_cons) && Shen.is_type(Arg8070_1[1], Shen.fns['shen.tuple'])))
  ? (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg8070_2, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg8070_1[1]])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg8070_0, Arg8070_1[2], (Arg8070_2 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.print-past-inputs"]]);}))))}, 3, [], "shen.print-past-inputs"];





Shen.fns["shen.toplevel_evaluate"] = [Shen.type_func, function shen_user_lambda8073(Arg8072) {
  if (Arg8072.length < 2) return [Shen.type_func, shen_user_lambda8073, 2, Arg8072];
  var Arg8072_0 = Arg8072[0], Arg8072_1 = Arg8072[1];
  var R0;
  return (((Shen.is_type(Arg8072_0, Shen.type_cons) && (Shen.is_type(Arg8072_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg8072_0[2][1])) && (Shen.is_type(Arg8072_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg8072_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg8072_1))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg8072_0[1], Arg8072_0[2][2][1]]);})
  : (((Shen.is_type(Arg8072_0, Shen.type_cons) && Shen.is_type(Arg8072_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.toplevel_evaluate"], [[Shen.type_cons, Arg8072_0[1], []], Arg8072_1]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg8072_0[2], Arg8072_1]);}))
  : (((Shen.is_type(Arg8072_0, Shen.type_cons) && (Shen.empty$question$(Arg8072_0[2]) && Shen.unwind_tail(Shen.$eq$(true, Arg8072_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg8072_0[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);})
  : (((Shen.is_type(Arg8072_0, Shen.type_cons) && (Shen.empty$question$(Arg8072_0[2]) && Shen.unwind_tail(Shen.$eq$(false, Arg8072_1)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg8072_0[1]])),
  (function() {
  return Shen.call_tail(Shen.fns["print"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.toplevel_evaluate"]]);})))))}, 2, [], "shen.toplevel_evaluate"];





Shen.fns["shen.typecheck-and-evaluate"] = [Shen.type_func, function shen_user_lambda8075(Arg8074) {
  if (Arg8074.length < 2) return [Shen.type_func, shen_user_lambda8075, 2, Arg8074];
  var Arg8074_0 = Arg8074[0], Arg8074_1 = Arg8074[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg8074_0, Arg8074_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (function() {
  return Shen.simple_error("type error\x0d\x0a");})
  : ((R1 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg8074_0])),
  (R0 = Shen.call(Shen.fns["shen.pretty-type"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [R1, (" : " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], [])]);}))))}, 2, [], "shen.typecheck-and-evaluate"];





Shen.fns["shen.pretty-type"] = [Shen.type_func, function shen_user_lambda8077(Arg8076) {
  if (Arg8076.length < 1) return [Shen.type_func, shen_user_lambda8077, 1, Arg8076];
  var Arg8076_0 = Arg8076[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [(Shen.globals["shen.*alphabet*"]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg8076_0]), Arg8076_0]);})}, 1, [], "shen.pretty-type"];





Shen.fns["shen.extract-pvars"] = [Shen.type_func, function shen_user_lambda8079(Arg8078) {
  if (Arg8078.length < 1) return [Shen.type_func, shen_user_lambda8079, 1, Arg8078];
  var Arg8078_0 = Arg8078[0];
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg8078_0]))
  ? [Shen.type_cons, Arg8078_0, []]
  : ((Shen.is_type(Arg8078_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract-pvars"], [Arg8078_0[1]]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg8078_0[2]])]);})
  : []))}, 1, [], "shen.extract-pvars"];





Shen.fns["shen.mult_subst"] = [Shen.type_func, function shen_user_lambda8081(Arg8080) {
  if (Arg8080.length < 3) return [Shen.type_func, shen_user_lambda8081, 3, Arg8080];
  var Arg8080_0 = Arg8080[0], Arg8080_1 = Arg8080[1], Arg8080_2 = Arg8080[2];
  return ((Shen.empty$question$(Arg8080_0))
  ? Arg8080_2
  : ((Shen.empty$question$(Arg8080_1))
  ? Arg8080_2
  : (((Shen.is_type(Arg8080_0, Shen.type_cons) && Shen.is_type(Arg8080_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [Arg8080_0[2], Arg8080_1[2], Shen.call(Shen.fns["subst"], [Arg8080_0[1], Arg8080_1[1], Arg8080_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mult_subst"]]);}))))}, 3, [], "shen.mult_subst"];



