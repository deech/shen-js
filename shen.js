/*
The License
-----------
The user is free to produce commercial applications with the software, to
distribute these applications in source or binary form, and to charge monies
for them as he sees fit and in concordance with the laws of the land subject
to the following license.
 
1. The license applies to all the software and all derived software and must
   appear on such.

2. It is illegal to distribute the software without this license attached to
	 it and use of the software implies agreement with the license as such. It
	 is illegal for anyone who is not the copyright holder to tamper with or
	 change the license.

3. Neither the names of Lambda Associates or the copyright holder may be used
	 to endorse or promote products built using the software without specific
	 prior written permission from the copyright holder.

4. That possession of this license does not confer on the copyright holder any
	 special contractual obligation towards the user. That in no event shall the
	 copyright holder be liable for any direct, indirect, incidental, special,
	 exemplary or consequential damages (including but not limited to
	 procurement of substitute goods or services, loss of use, data, or profits;
	 or business interruption), however caused and on any theory of liability,
	 whether in contract, strict liability or tort (including negligence)
	 arising in any way out of the use of the software, even if advised of the
	 possibility of such damage.

5. It is permitted for the user to change the software, for the purpose of
	 improving performance, correcting an error, or porting to a new platform,
	 and distribute the modified version of Shen (hereafter the modified
	 version) provided the resulting program conforms in all respects to the
	 Shen standard and is issued under that title. The user must make it clear
	 with his distribution that he/she is the author of the changes and what
	 these changes are and why.

6. Derived versions of this software in whatever form are subject to the same
	 restrictions. In particular it is not permitted to make derived copies of
	 this software which do not conform to the Shen standard or appear under a
	 different title.

7. It is permitted to distribute versions of Shen which incorporate libraries,
	 graphics or other facilities which are not part of the Shen standard.

For an explication of this license see
[http://www.lambdassociates.org/News/june11/license.htm] which explains this
license in full.
*/

Shen = {}
Shen.globals = {}

Shen.globals["*language*"] = "Javascript"
Shen.globals["*implementation*"] = "cli"
Shen.globals["*port*"] = Shen.version = "0.9.3"
Shen.globals["*porters*"] = Shen.author = "Ramil Farkhshatov"

Shen.Tag = function(name) {
  this.toString = function() {
    return "#<Shen.Tag " + name + ">"
  }
}

Shen.fail_obj = new Object
Shen.fns = {}

Shen.type_func = new Shen.Tag('func')
Shen.type_symbol = new Shen.Tag('sym')
Shen.type_cons = new Shen.Tag('cons')
Shen.type_stream_in = new Shen.Tag('stream_in')
Shen.type_stream_out = new Shen.Tag('stream_out')
Shen.type_stream_inout = new Shen.Tag('stream_inout')
Shen.type_error = new Shen.Tag('error')

Shen.true = true
Shen.false = false

Shen.Freeze = function(vars, fn) {
  this.vars = vars
  this.fn = fn
}

Shen.mkfunction = function(name, nargs, fn) {
  var x = [Shen.type_func, fn, nargs, [], name]
  Shen.fns[name] = x
  return x
}

Shen.call_tail = function(x, args) {
  var j = 0, nargs = args.length
  for (;;) {
    if (typeof(x) == "function") {
      x = x([args[j++]])
    } else if (x[0] == Shen.type_func) {
      var c = x[3], n = c.length, k = x[2], a
      if (!j && !n && nargs <= k) {
        a = args
        j += nargs
      } else {
        k = (k > n + nargs) ? n + nargs : k
        a = new Array(k)

        for (var i = 0; i < n; ++i)
          a[i] = c[i]
        for (;i < k && j < nargs; ++j, ++i)
          a[i] = args[j]
      }
      x = (x[1])(a)
    } else if (x[0] == Shen.type_symbol) {
      x = Shen.get_fn(x)
    } else
      return Shen.error("Shen.call: Wrong function: '" + x + "'")
    if (j >= nargs)
      return x
    while (typeof(x) == "function")
      x = x()
  }
  return x
}

Shen.call = function(x, args) {
  var x = Shen.call_tail(x, args)
  while (typeof(x) == "function")
    x = x()
  return x
}

Shen.call_by_name = function(x, args) {
  return Shen.call(Shen.fns[x], args)
}

Shen.call_toplevel = function(name) {
  var ret = Shen.call(Shen.fns[name], [])
  delete Shen.fns[name]
  return ret
}

Shen.unwind_tail = function(x) {
  while(typeof(x) == "function")
    x = x()
  return x
}

Shen.get_fn = function(x) {
  if (typeof(x) == "function")
    Shen.error("passed function into get_fn")
  switch (x[0]) {
  case Shen.type_func: return x
  case Shen.type_symbol:
    var v = Shen.fns[x[1]]
    if (v != undefined)
      return v
    Shen.error("Cannot find '" + x[1] + "'")
    return Shen.fail_obj
  }
  throw new Error("function " + x[1] + " not found")
}

Shen.thaw = function(f) {
  return f.fn(f.vars)
}

Shen.error = function(s) {
  if (Shen.is_true(Shen.globals['shen-*show-error-js*']))
    Shen.io.puts("# err: " + s + "\n")
  throw new Error(s);
  return Shen.fail_obj
}

Shen.error_to_string = function(s) {
  var stack = s.stack;
  var show = (stack !== undefined);
  show &= Shen.is_true(Shen.globals["shenjs-*show-error-stack*"]);
  return (show) ? ("" + s + " " + stack) : ("" + s);
}

Shen.get_time = function(x) {
  return (new Date()).getTime() / 1000.0
}

Shen.simple_error = Shen.error
Shen.log_eq = false

Shen.trap_error = function(fn, handler) {
  try {
    return fn()
  } catch (e) {
    return Shen.call(handler, [e])
  }
}

Shen.notrap_error = function(fn, handler) {
  return fn()
}

Shen.equal_boolean = function(b, x) {
  return ((x instanceof Array)
          && x[0] == Shen.type_symbol
          && ((x[1] == "true" && b === true)
              || (x[1] == "false" && b === false)))
}

Shen.equal_function = function(f, x) {
  return (x[0] == Shen.type_symbol && f[0] == Shen.type_func && x[1] == f[4])
}

Shen.$eq$ = function(x, y) {
  if (x === y)
    return true
  var tx = typeof(x), ty = typeof(y)
  if (tx != ty)
    return ((tx == "boolean" && Shen.equal_boolean(x, y))
            || (ty == "boolean" && Shen.equal_boolean(y, x)))
  switch (tx) {
  case "number":
  case "boolean":
  case "function":
  case "string":
    return x == y;

  case "object":
    if (x == y)
      return true

    if ((x instanceof Array) ^ (y instanceof Array))
      return false

    if (Shen.equal_function(x, y) || Shen.equal_function(y, x))
      return true
    if (x.length != y.length)
      return false
    if (x.length == 0)
      return true
    if (x == Shen.fail_obj && y == Shen.fail_obj)
      return true
    if (x[0] != y[0])
      return false
    switch (x[0]) {
    case Shen.type_func:
     if (x[1] != y[1] || x[2] != y[2])
        return false
      var n = x[3].length
      if (n != y[3].length)
        return false
      for (var i = 0; i < n; ++i)
        if (x[3][i] != y[3][i])
          return false
      return true
    case Shen.type_symbol: return x[1] == y[1];
    case Shen.type_cons:
      var r = Shen.$eq$(x[1], y[1])
      while (typeof(r) == "function")
        r = r()
      if (!r)
        return false
      return (function() {
        var r = Shen.$eq$(x[2], y[2])
        while (typeof(r) == "function")
          r = r()
        return r
      });
    case Shen.type_stream_out:
    case Shen.type_stream_in: return x[1] == y[1] && x[2] == y[2];
    default:
      for (var i = 1; i < x.length; ++i) {
        var r = Shen.$eq$(x[i], y[i])
        while (typeof(r) == "function")
          r = r()
        if (!r)
          return false;
      }
      return true;
    }
    break;
  default: return false;
  }
}

Shen.empty$question$ = function(x) {
  return ((x instanceof Array) && !x.length)
}

Shen.is_type = function(x, type) {
  if (type == Shen.type_symbol && (x === true || x === false))
    return true
  return ((x instanceof Array) && x[0] == type)
}

Shen.boolean$question$ = function(x) {
  return (typeof(x) == "boolean") || (Shen.is_type(x, Shen.type_symbol)
                                      && (x[1] == "true" || x[1] == "false"))
}

Shen.vector$question$ = function(x) {
  return ((x instanceof Array) && x[0] > 0)
}

Shen.absvector$question$ = function(x) {
  return ((x instanceof Array) && x.length > 0
          && (!(x[0] instanceof Shen.Tag)))
}

Shen.absvector = function(n) {
  var ret = new Array(n)
  for (var i = 0; i < n; ++i)
    ret[i] = Shen.fail_obj
  return ret
}

Shen.dbg_princ = function(s, x) {
  dbg_print(" " + s + x)
  return x
}

Shen.dbg_print = function(s) {
  if (Shen.is_true(Shen.globals['shen-*show-error-js*']))
    Shen.io.puts(s + "\n")
}

Shen.is_true = function(x) {
  return x != false || ((x instanceof Array)
                        && (x[0] == Shen.type_symbol)
                        && (x[1] != "false"))
}

Shen.absvector_ref = function(x, i) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  return x[i]
}

Shen.absvector_set = function(x, i, v) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  x[i] = v
  return x
}

Shen.value = function(x) {
  var y = Shen.globals[s[1]]
  if (y === undefined)
    Shen.error("The variable " + x + " is unbound.")
  else
    return y
}

Shen.vector = function(n) {
  var r = new Array(n + 1)
  r[0] = n
  for (var i = 1; i <= n; ++i)
    r[i] = Shen.fail_obj
  return r
}

Shen.esc = function(x) {
  var ret = ""
  for (var i = 0; i < x.length; ++i)
    switch (x[i]) {
      case '"': ret += '\\"'; break;
      default: ret += x[i]; break
    }
  return ret
}

Shen.str = function(x) {
  var err = " is not an atom in Shen; str cannot print it to a string."
  switch (typeof(x)) {
    case "string": return "\"" + Shen.esc(x) + "\""
    case "number":
    case "boolean": return "" + x
    case "function":
      return "#<function>"
    case "object":
      if (x == Shen.fail_obj)
        return "fail!"
      if (x instanceof Array) {
        if (x.length <= 0) {
          Shen.error("[]" + err)
          return Shen.fail_obj
        }
        switch (x[0]) {
          case Shen.type_symbol: return x[1]
          case Shen.type_func:
            if (!x[3].length && x[4] != undefined)
              return x[4]
            if (Shen.is_true(Shen.globals['shen-*show-func-js*']))
              Shen.io.puts("\n func: " + x + "\n\n")
            return (x[3].length == 0) ? "#<function>" : "#<closure>"
        }
      }
  }
  Shen.error([x + err])
  return Shen.fail_obj
}

Shen.intern = function(x) {
  switch (x) {
  case "true": return true
  case "false": return false
  default: return [Shen.type_symbol, x]
  }
}

Shen.tlstr = function(x) {
  if (x == "")
    return [Shen.type_symbol, "shen_eos"]
  return x.substring(1, x.length)
}

Shen.n_$gt$string = function(x) {
  return String.fromCharCode(x)
}

Shen.string_$gt$n = function(x) {
  return x.charCodeAt(0)
}

Shen.eval_in_global = function(x) {
  try {
    var g = window;
  } catch (e) {
    var g = this;
  }
  if (g.execScript) // eval in global scope for IE
    return g.execScript(x);
  else // other browsers
    return eval.call(null, x);
}

Shen.eval_kl = function(x) {
  var log = false
  if (Shen.is_true(Shen.globals['shen-*show-eval-js*']))
    log = true
  if (log) {
    Shen.io.puts("# eval-kl[KL]: " + "\n")
    Shen.io.puts(Shen.call_by_name("intmake-string",
                                   ["~R~%", [Shen.fns["shen_tuple"], x, []]]))
  }
  var js = Shen.call_by_name("js-from-kl", [x])
  if (log)
    Shen.io.puts("eval-kl[JS]:\n" + js + "\n\n")
  var ret = Shen.eval_in_global(js)
  if (log)
    Shen.io.puts("eval-kl => '" + ret + "'\n\n")
  if (ret === undefined)
    Shen.error("evaluated '" + js + "' to undefined")
  return ret
}

Shen.mkfunction("shenjs-load", 1, function self(x) {
  if (x.length < 1) return [Shen.type_func, self, 1, x]
  return (function() {
    load(x)
    return []
  })
})

Shen.file_instream_get = function(stream, s, pos) {
  if (s.length <= pos) {
    stream[1] = (function() {return -1})
    return -1
  }
  stream[1] = (function() {
    return Shen.file_instream_get(stream, s, pos + 1)
  })
  return s.charCodeAt(pos)
}

Shen.read_byte = function(stream) {
 switch (stream[0]) {
    case Shen.type_stream_in: return stream[1]()
    case Shen.type_stream_inout: return Shen.read_byte(stream[1])
    default:
      Shen.error("read-byte: Wrong stream type.")
      return -1;
  }
}

Shen.write_byte = function(byte, stream) {
 switch (stream[0]) {
    case Shen.type_stream_out: stream[1](byte); break;
    case Shen.type_stream_inout: Shen.write_byte(byte, stream[2]); break;
    default: Shen.error("write-byte: Wrong stream type.")
  }
  return []
}

Shen.close = function(stream) {
  switch (stream[0]) {
    case Shen.type_stream_in:
      stream[2]()
      stream[1] = (function() {return -1});
      break;
    case Shen.type_stream_out:
      stream[2]()
      stream[1] = (function(_) {return []});
      break;
    case Shen.type_stream_inout:
      Shen.close(stream[1])
      Shen.close(stream[2])
      break;
  }
  return []
}

Shen.repl_write_byte = function(byte) {
  Shen.io.puts(String.fromCharCode(byte))
}

Shen.repl_read_byte = function (stream, s, pos) {
  if (s == null) {
    stream[1] = (function() {return -1})
    quit()
    return -1
  } else if (pos >= s.length) {
    stream[1] = (function() {
      return Shen.repl_read_byte(stream, Shen.io.gets(), 0)
    })
    return Shen.call_by_name("shen-newline", [])
  } else {
    stream[1] = (function() {
      return Shen.repl_read_byte(stream, s, pos + 1)
    })
  }
  return s.charCodeAt(pos)
}

Shen.pr = function(s, stream) {
  for (i = 0; i < s.length; ++i)
    Shen.write_byte(s.charCodeAt(i), stream)
  return s
}

Shen.mkfunction("shenjs-exit", 1, function self(x) {quit()})
Shen.globals["js-skip-internals"] = true

Shen.globals["shen-*show-error-js*"] = false
Shen.globals["shenjs-*show-error-stack*"] = false
Shen.globals["shen-*show-eval-js*"] = false
Shen.globals["shen-*show-func-js*"] = false
Shen.globals["shen-*dbg-js*"] = false
Shen.globals["*home-directory*"] = ""

/* dummy functions to bypass defstruct's declarations */
Shen.mkfunction("shen-process-datatype", 2, function(_) {return []})
Shen.mkfunction("compile", 3, function(_) {return []})
Shen.mkfunction("declare", 2, function(_) {return []})

Shen.console_io = {
  open: function(type, name, dir) {
    if (type[1] != "file")
      return Shen.fail_obj
    var filename = Shen.globals["*home-directory*"] + name
    if (dir[1] == "in") {
      try {
        var s = read(filename)
      } catch(e) {
        Shen.error(e)
        return Shen.fail_obj
      }
      var stream = [Shen.type_stream_in, null, function(){}]
      stream[1] = (function() {
        return Shen.file_instream_get(stream, s, 0)
      })
      return stream
    } else if (dir[1] == "out") {
      Shen.error("Writing files is not supported in cli interpreter")
      return Shen.fail_obj
    }
    Shen.error("Unsupported open flags")
    return Shen.fail_obj
  },

  init: function() {
    try {
      this.puts = putstr;
    } catch (e) {
      this.puts = write;
    }
    this.gets = readline;
    var fout = [Shen.type_stream_out,
                function(byte) {return Shen.repl_write_byte(byte)},
                function() {}]
    Shen.globals["*stoutput*"] = fout
    
    var fin = [Shen.type_stream_in, null, quit]
    fin[1] = (function() {
      return Shen.repl_read_byte(fin, Shen.io.gets(), 0)
    })
    
    var finout = [Shen.type_stream_inout, fin, fout]
    Shen.globals["*stinput*"] = finout
  }
}

Shen.init = function(conf) {
  Shen.io = conf.io
  Shen.io.init()
  function assert_io(func) {
    if (Shen.io[func] === undefined)
      throw new Error("Shen: IO has no method " + func)
  }
  assert_io('gets')
  assert_io('puts')
  assert_io('open')
  if (conf.start_repl)
    Shen.call_by_name("shen-shen", [])
}

Shen.console_repl = function () {
  Shen.init({io: Shen.console_io, start_repl: true})
}

try {
  module.exports = Shen
} catch (e) {}


Shen.fns["hd"] = [Shen.type_func,
  function shen_user_lambda5539(Arg5538) {
  if (Arg5538.length < 1) return [Shen.type_func, shen_user_lambda5539, 1, Arg5538];
  var Arg5538_0 = Arg5538[0];
  return Arg5538_0[1]},
  1,
  [],
  "hd"];






Shen.fns["tl"] = [Shen.type_func,
  function shen_user_lambda5541(Arg5540) {
  if (Arg5540.length < 1) return [Shen.type_func, shen_user_lambda5541, 1, Arg5540];
  var Arg5540_0 = Arg5540[0];
  return Arg5540_0[2]},
  1,
  [],
  "tl"];






Shen.fns["not"] = [Shen.type_func,
  function shen_user_lambda5543(Arg5542) {
  if (Arg5542.length < 1) return [Shen.type_func, shen_user_lambda5543, 1, Arg5542];
  var Arg5542_0 = Arg5542[0];
  return (!Arg5542_0)},
  1,
  [],
  "not"];






Shen.fns["thaw"] = [Shen.type_func,
  function shen_user_lambda5545(Arg5544) {
  if (Arg5544.length < 1) return [Shen.type_func, shen_user_lambda5545, 1, Arg5544];
  var Arg5544_0 = Arg5544[0];
  return Shen.thaw(Arg5544_0)},
  1,
  [],
  "thaw"];






Shen.fns["string?"] = [Shen.type_func,
  function shen_user_lambda5547(Arg5546) {
  if (Arg5546.length < 1) return [Shen.type_func, shen_user_lambda5547, 1, Arg5546];
  var Arg5546_0 = Arg5546[0];
  return (typeof(Arg5546_0) == 'string')},
  1,
  [],
  "string?"];






Shen.fns["number?"] = [Shen.type_func,
  function shen_user_lambda5549(Arg5548) {
  if (Arg5548.length < 1) return [Shen.type_func, shen_user_lambda5549, 1, Arg5548];
  var Arg5548_0 = Arg5548[0];
  return (typeof(Arg5548_0) == 'number')},
  1,
  [],
  "number?"];






Shen.fns["symbol?"] = [Shen.type_func,
  function shen_user_lambda5551(Arg5550) {
  if (Arg5550.length < 1) return [Shen.type_func, shen_user_lambda5551, 1, Arg5550];
  var Arg5550_0 = Arg5550[0];
  return Shen.is_type(Arg5550_0, Shen.type_symbol)},
  1,
  [],
  "symbol?"];






Shen.fns["cons?"] = [Shen.type_func,
  function shen_user_lambda5553(Arg5552) {
  if (Arg5552.length < 1) return [Shen.type_func, shen_user_lambda5553, 1, Arg5552];
  var Arg5552_0 = Arg5552[0];
  return Shen.is_type(Arg5552_0, Shen.type_cons)},
  1,
  [],
  "cons?"];






Shen.fns["vector?"] = [Shen.type_func,
  function shen_user_lambda5555(Arg5554) {
  if (Arg5554.length < 1) return [Shen.type_func, shen_user_lambda5555, 1, Arg5554];
  var Arg5554_0 = Arg5554[0];
  return (function() {
  return Shen.vector$question$(Arg5554_0);})},
  1,
  [],
  "vector?"];






Shen.fns["absvector?"] = [Shen.type_func,
  function shen_user_lambda5557(Arg5556) {
  if (Arg5556.length < 1) return [Shen.type_func, shen_user_lambda5557, 1, Arg5556];
  var Arg5556_0 = Arg5556[0];
  return (function() {
  return Shen.absvector$question$(Arg5556_0);})},
  1,
  [],
  "absvector?"];






Shen.fns["value"] = [Shen.type_func,
  function shen_user_lambda5559(Arg5558) {
  if (Arg5558.length < 1) return [Shen.type_func, shen_user_lambda5559, 1, Arg5558];
  var Arg5558_0 = Arg5558[0];
  return (Shen.globals[Arg5558_0[1]])},
  1,
  [],
  "value"];






Shen.fns["intern"] = [Shen.type_func,
  function shen_user_lambda5561(Arg5560) {
  if (Arg5560.length < 1) return [Shen.type_func, shen_user_lambda5561, 1, Arg5560];
  var Arg5560_0 = Arg5560[0];
  return (function() {
  return Shen.intern(Arg5560_0);})},
  1,
  [],
  "intern"];






Shen.fns["vector"] = [Shen.type_func,
  function shen_user_lambda5563(Arg5562) {
  if (Arg5562.length < 1) return [Shen.type_func, shen_user_lambda5563, 1, Arg5562];
  var Arg5562_0 = Arg5562[0];
  return (function() {
  return Shen.vector(Arg5562_0);})},
  1,
  [],
  "vector"];






Shen.fns["read-byte"] = [Shen.type_func,
  function shen_user_lambda5565(Arg5564) {
  if (Arg5564.length < 1) return [Shen.type_func, shen_user_lambda5565, 1, Arg5564];
  var Arg5564_0 = Arg5564[0];
  return (function() {
  return Shen.read_byte(Arg5564_0);})},
  1,
  [],
  "read-byte"];






Shen.fns["close"] = [Shen.type_func,
  function shen_user_lambda5567(Arg5566) {
  if (Arg5566.length < 1) return [Shen.type_func, shen_user_lambda5567, 1, Arg5566];
  var Arg5566_0 = Arg5566[0];
  return (function() {
  return Shen.close(Arg5566_0);})},
  1,
  [],
  "close"];






Shen.fns["absvector"] = [Shen.type_func,
  function shen_user_lambda5569(Arg5568) {
  if (Arg5568.length < 1) return [Shen.type_func, shen_user_lambda5569, 1, Arg5568];
  var Arg5568_0 = Arg5568[0];
  return (function() {
  return Shen.absvector(Arg5568_0);})},
  1,
  [],
  "absvector"];






Shen.fns["str"] = [Shen.type_func,
  function shen_user_lambda5571(Arg5570) {
  if (Arg5570.length < 1) return [Shen.type_func, shen_user_lambda5571, 1, Arg5570];
  var Arg5570_0 = Arg5570[0];
  return (function() {
  return Shen.str(Arg5570_0);})},
  1,
  [],
  "str"];






Shen.fns["tlstr"] = [Shen.type_func,
  function shen_user_lambda5573(Arg5572) {
  if (Arg5572.length < 1) return [Shen.type_func, shen_user_lambda5573, 1, Arg5572];
  var Arg5572_0 = Arg5572[0];
  return (function() {
  return Shen.tlstr(Arg5572_0);})},
  1,
  [],
  "tlstr"];






Shen.fns["n->string"] = [Shen.type_func,
  function shen_user_lambda5575(Arg5574) {
  if (Arg5574.length < 1) return [Shen.type_func, shen_user_lambda5575, 1, Arg5574];
  var Arg5574_0 = Arg5574[0];
  return (function() {
  return Shen.n_$gt$string(Arg5574_0);})},
  1,
  [],
  "n->string"];






Shen.fns["string->n"] = [Shen.type_func,
  function shen_user_lambda5577(Arg5576) {
  if (Arg5576.length < 1) return [Shen.type_func, shen_user_lambda5577, 1, Arg5576];
  var Arg5576_0 = Arg5576[0];
  return (function() {
  return Shen.string_$gt$n(Arg5576_0);})},
  1,
  [],
  "string->n"];






Shen.fns["empty?"] = [Shen.type_func,
  function shen_user_lambda5579(Arg5578) {
  if (Arg5578.length < 1) return [Shen.type_func, shen_user_lambda5579, 1, Arg5578];
  var Arg5578_0 = Arg5578[0];
  return (function() {
  return Shen.empty$question$(Arg5578_0);})},
  1,
  [],
  "empty?"];






Shen.fns["get-time"] = [Shen.type_func,
  function shen_user_lambda5581(Arg5580) {
  if (Arg5580.length < 1) return [Shen.type_func, shen_user_lambda5581, 1, Arg5580];
  var Arg5580_0 = Arg5580[0];
  return (function() {
  return Shen.get_time(Arg5580_0);})},
  1,
  [],
  "get-time"];






Shen.fns["error"] = [Shen.type_func,
  function shen_user_lambda5583(Arg5582) {
  if (Arg5582.length < 1) return [Shen.type_func, shen_user_lambda5583, 1, Arg5582];
  var Arg5582_0 = Arg5582[0];
  return (function() {
  return Shen.error(Arg5582_0);})},
  1,
  [],
  "error"];






Shen.fns["simple-error"] = [Shen.type_func,
  function shen_user_lambda5585(Arg5584) {
  if (Arg5584.length < 1) return [Shen.type_func, shen_user_lambda5585, 1, Arg5584];
  var Arg5584_0 = Arg5584[0];
  return (function() {
  return Shen.simple_error(Arg5584_0);})},
  1,
  [],
  "simple-error"];






Shen.fns["eval-kl"] = [Shen.type_func,
  function shen_user_lambda5587(Arg5586) {
  if (Arg5586.length < 1) return [Shen.type_func, shen_user_lambda5587, 1, Arg5586];
  var Arg5586_0 = Arg5586[0];
  return (function() {
  return Shen.eval_kl(Arg5586_0);})},
  1,
  [],
  "eval-kl"];






Shen.fns["error-to-string"] = [Shen.type_func,
  function shen_user_lambda5589(Arg5588) {
  if (Arg5588.length < 1) return [Shen.type_func, shen_user_lambda5589, 1, Arg5588];
  var Arg5588_0 = Arg5588[0];
  return (function() {
  return Shen.error_to_string(Arg5588_0);})},
  1,
  [],
  "error-to-string"];






Shen.fns["js-call-js"] = [Shen.type_func,
  function shen_user_lambda5591(Arg5590) {
  if (Arg5590.length < 1) return [Shen.type_func, shen_user_lambda5591, 1, Arg5590];
  var Arg5590_0 = Arg5590[0];
  return (function() {
  return Shen.js_call_js(Arg5590_0);})},
  1,
  [],
  "js-call-js"];






Shen.fns["+"] = [Shen.type_func,
  function shen_user_lambda5593(Arg5592) {
  if (Arg5592.length < 2) return [Shen.type_func, shen_user_lambda5593, 2, Arg5592];
  var Arg5592_0 = Arg5592[0], Arg5592_1 = Arg5592[1];
  return (Arg5592_0 + Arg5592_1)},
  2,
  [],
  "+"];






Shen.fns["-"] = [Shen.type_func,
  function shen_user_lambda5595(Arg5594) {
  if (Arg5594.length < 2) return [Shen.type_func, shen_user_lambda5595, 2, Arg5594];
  var Arg5594_0 = Arg5594[0], Arg5594_1 = Arg5594[1];
  return (Arg5594_0 - Arg5594_1)},
  2,
  [],
  "-"];






Shen.fns["*"] = [Shen.type_func,
  function shen_user_lambda5597(Arg5596) {
  if (Arg5596.length < 2) return [Shen.type_func, shen_user_lambda5597, 2, Arg5596];
  var Arg5596_0 = Arg5596[0], Arg5596_1 = Arg5596[1];
  return (Arg5596_0 * Arg5596_1)},
  2,
  [],
  "*"];






Shen.fns["/"] = [Shen.type_func,
  function shen_user_lambda5599(Arg5598) {
  if (Arg5598.length < 2) return [Shen.type_func, shen_user_lambda5599, 2, Arg5598];
  var Arg5598_0 = Arg5598[0], Arg5598_1 = Arg5598[1];
  return (Arg5598_0 / Arg5598_1)},
  2,
  [],
  "/"];






Shen.fns["and"] = [Shen.type_func,
  function shen_user_lambda5601(Arg5600) {
  if (Arg5600.length < 2) return [Shen.type_func, shen_user_lambda5601, 2, Arg5600];
  var Arg5600_0 = Arg5600[0], Arg5600_1 = Arg5600[1];
  return (Arg5600_0 && Arg5600_1)},
  2,
  [],
  "and"];






Shen.fns["or"] = [Shen.type_func,
  function shen_user_lambda5603(Arg5602) {
  if (Arg5602.length < 2) return [Shen.type_func, shen_user_lambda5603, 2, Arg5602];
  var Arg5602_0 = Arg5602[0], Arg5602_1 = Arg5602[1];
  return (Arg5602_0 || Arg5602_1)},
  2,
  [],
  "or"];






Shen.fns["="] = [Shen.type_func,
  function shen_user_lambda5605(Arg5604) {
  if (Arg5604.length < 2) return [Shen.type_func, shen_user_lambda5605, 2, Arg5604];
  var Arg5604_0 = Arg5604[0], Arg5604_1 = Arg5604[1];
  return Shen.$eq$(Arg5604_0, Arg5604_1)},
  2,
  [],
  "="];






Shen.fns[">"] = [Shen.type_func,
  function shen_user_lambda5607(Arg5606) {
  if (Arg5606.length < 2) return [Shen.type_func, shen_user_lambda5607, 2, Arg5606];
  var Arg5606_0 = Arg5606[0], Arg5606_1 = Arg5606[1];
  return (Arg5606_0 > Arg5606_1)},
  2,
  [],
  ">"];






Shen.fns[">="] = [Shen.type_func,
  function shen_user_lambda5609(Arg5608) {
  if (Arg5608.length < 2) return [Shen.type_func, shen_user_lambda5609, 2, Arg5608];
  var Arg5608_0 = Arg5608[0], Arg5608_1 = Arg5608[1];
  return (Arg5608_0 >= Arg5608_1)},
  2,
  [],
  ">="];






Shen.fns["<"] = [Shen.type_func,
  function shen_user_lambda5611(Arg5610) {
  if (Arg5610.length < 2) return [Shen.type_func, shen_user_lambda5611, 2, Arg5610];
  var Arg5610_0 = Arg5610[0], Arg5610_1 = Arg5610[1];
  return (Arg5610_0 < Arg5610_1)},
  2,
  [],
  "<"];






Shen.fns["<="] = [Shen.type_func,
  function shen_user_lambda5613(Arg5612) {
  if (Arg5612.length < 2) return [Shen.type_func, shen_user_lambda5613, 2, Arg5612];
  var Arg5612_0 = Arg5612[0], Arg5612_1 = Arg5612[1];
  return (Arg5612_0 <= Arg5612_1)},
  2,
  [],
  "<="];






Shen.fns["cons"] = [Shen.type_func,
  function shen_user_lambda5615(Arg5614) {
  if (Arg5614.length < 2) return [Shen.type_func, shen_user_lambda5615, 2, Arg5614];
  var Arg5614_0 = Arg5614[0], Arg5614_1 = Arg5614[1];
  return [Shen.type_cons, Arg5614_0, Arg5614_1]},
  2,
  [],
  "cons"];






Shen.fns["set"] = [Shen.type_func,
  function shen_user_lambda5617(Arg5616) {
  if (Arg5616.length < 2) return [Shen.type_func, shen_user_lambda5617, 2, Arg5616];
  var Arg5616_0 = Arg5616[0], Arg5616_1 = Arg5616[1];
  return (Shen.globals[Arg5616_0[1]] = Arg5616_1)},
  2,
  [],
  "set"];






Shen.fns["<-address"] = [Shen.type_func,
  function shen_user_lambda5619(Arg5618) {
  if (Arg5618.length < 2) return [Shen.type_func, shen_user_lambda5619, 2, Arg5618];
  var Arg5618_0 = Arg5618[0], Arg5618_1 = Arg5618[1];
  return Shen.absvector_ref(Arg5618_0, Arg5618_1)},
  2,
  [],
  "<-address"];






Shen.fns["cn"] = [Shen.type_func,
  function shen_user_lambda5621(Arg5620) {
  if (Arg5620.length < 2) return [Shen.type_func, shen_user_lambda5621, 2, Arg5620];
  var Arg5620_0 = Arg5620[0], Arg5620_1 = Arg5620[1];
  return (Arg5620_0 + Arg5620_1)},
  2,
  [],
  "cn"];






Shen.fns["pos"] = [Shen.type_func,
  function shen_user_lambda5623(Arg5622) {
  if (Arg5622.length < 2) return [Shen.type_func, shen_user_lambda5623, 2, Arg5622];
  var Arg5622_0 = Arg5622[0], Arg5622_1 = Arg5622[1];
  return Arg5622_0[Arg5622_1]},
  2,
  [],
  "pos"];






Shen.fns["@p"] = [Shen.type_func,
  function shen_user_lambda5625(Arg5624) {
  if (Arg5624.length < 2) return [Shen.type_func, shen_user_lambda5625, 2, Arg5624];
  var Arg5624_0 = Arg5624[0], Arg5624_1 = Arg5624[1];
  return [Shen.fns['shen-tuple'], Arg5624_0, Arg5624_1]},
  2,
  [],
  "@p"];






Shen.fns["pr"] = [Shen.type_func,
  function shen_user_lambda5627(Arg5626) {
  if (Arg5626.length < 2) return [Shen.type_func, shen_user_lambda5627, 2, Arg5626];
  var Arg5626_0 = Arg5626[0], Arg5626_1 = Arg5626[1];
  return (function() {
  return Shen.pr(Arg5626_0, Arg5626_1);})},
  2,
  [],
  "pr"];






Shen.fns["address->"] = [Shen.type_func,
  function shen_user_lambda5629(Arg5628) {
  if (Arg5628.length < 3) return [Shen.type_func, shen_user_lambda5629, 3, Arg5628];
  var Arg5628_0 = Arg5628[0], Arg5628_1 = Arg5628[1], Arg5628_2 = Arg5628[2];
  return Shen.absvector_set(Arg5628_0, Arg5628_1, Arg5628_2)},
  3,
  [],
  "address->"];






Shen.fns["open"] = [Shen.type_func,
  function shen_user_lambda5631(Arg5630) {
  if (Arg5630.length < 3) return [Shen.type_func, shen_user_lambda5631, 3, Arg5630];
  var Arg5630_0 = Arg5630[0], Arg5630_1 = Arg5630[1], Arg5630_2 = Arg5630[2];
  return (function() {
  return Shen.open(Arg5630_0, Arg5630_1, Arg5630_2);})},
  3,
  [],
  "open"];






Shen.fns["shen-toplevel-4118"] = [Shen.type_func,
  function shen_user_lambda4119(Arg4117) {
  if (Arg4117.length < 0) return [Shen.type_func, shen_user_lambda4119, 0, Arg4117];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-process-datatype"], [[Shen.type_symbol, "reg-kl-context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen-<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl-context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen-datatype-error"]])]);})},
  0,
  [],
  "shen-toplevel-4118"];

Shen.call_toplevel("shen-toplevel-4118")






Shen.fns["reg-kl-mk-context"] = [Shen.type_func,
  function shen_user_lambda4121(Arg4120) {
  if (Arg4120.length < 2) return [Shen.type_func, shen_user_lambda4121, 2, Arg4120];
  var Arg4120_0 = Arg4120[0], Arg4120_1 = Arg4120[1];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg4120_0, Shen.call(Shen.fns["@v"], [Arg4120_1, Shen.vector(0)])]);})},
  2,
  [],
  "reg-kl-mk-context"];






Shen.fns["reg-kl-context-nregs->"] = [Shen.type_func,
  function shen_user_lambda4123(Arg4122) {
  if (Arg4122.length < 2) return [Shen.type_func, shen_user_lambda4123, 2, Arg4122];
  var Arg4122_0 = Arg4122[0], Arg4122_1 = Arg4122[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4122_0, 2, Arg4122_1]);})},
  2,
  [],
  "reg-kl-context-nregs->"];






Shen.fns["reg-kl-context-toplevel->"] = [Shen.type_func,
  function shen_user_lambda4125(Arg4124) {
  if (Arg4124.length < 2) return [Shen.type_func, shen_user_lambda4125, 2, Arg4124];
  var Arg4124_0 = Arg4124[0], Arg4124_1 = Arg4124[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4124_0, 1, Arg4124_1]);})},
  2,
  [],
  "reg-kl-context-toplevel->"];






Shen.fns["reg-kl-context-nregs"] = [Shen.type_func,
  function shen_user_lambda4127(Arg4126) {
  if (Arg4126.length < 1) return [Shen.type_func, shen_user_lambda4127, 1, Arg4126];
  var Arg4126_0 = Arg4126[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4126_0, 2]);})},
  1,
  [],
  "reg-kl-context-nregs"];






Shen.fns["reg-kl-context-toplevel"] = [Shen.type_func,
  function shen_user_lambda4129(Arg4128) {
  if (Arg4128.length < 1) return [Shen.type_func, shen_user_lambda4129, 1, Arg4128];
  var Arg4128_0 = Arg4128[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4128_0, 1]);})},
  1,
  [],
  "reg-kl-context-toplevel"];






Shen.fns["reg-kl-var-idx-aux"] = [Shen.type_func,
  function shen_user_lambda4131(Arg4130) {
  if (Arg4130.length < 3) return [Shen.type_func, shen_user_lambda4131, 3, Arg4130];
  var Arg4130_0 = Arg4130[0], Arg4130_1 = Arg4130[1], Arg4130_2 = Arg4130[2];
  return ((Shen.empty$question$(Arg4130_2))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["Unknown var: ~A~%", [Shen.fns['shen-tuple'], Arg4130_0, []]]);})
  : (((Shen.is_type(Arg4130_2, Shen.type_cons) && (Shen.is_type(Arg4130_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4130_2[1][1], Arg4130_0)))))
  ? Arg4130_2[1][2]
  : ((Shen.is_type(Arg4130_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-var-idx-aux"], [Arg4130_0, (Arg4130_1 + 1), Arg4130_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-var-idx-aux"]]);}))))},
  3,
  [],
  "reg-kl-var-idx-aux"];






Shen.fns["reg-kl-var-idx"] = [Shen.type_func,
  function shen_user_lambda4133(Arg4132) {
  if (Arg4132.length < 2) return [Shen.type_func, shen_user_lambda4133, 2, Arg4132];
  var Arg4132_0 = Arg4132[0], Arg4132_1 = Arg4132[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl-var-idx-aux"], [Arg4132_0, 0, Arg4132_1]);})},
  2,
  [],
  "reg-kl-var-idx"];






Shen.fns["reg-kl-new-var-idx-aux"] = [Shen.type_func,
  function shen_user_lambda4135(Arg4134) {
  if (Arg4134.length < 3) return [Shen.type_func, shen_user_lambda4135, 3, Arg4134];
  var Arg4134_0 = Arg4134[0], Arg4134_1 = Arg4134[1], Arg4134_2 = Arg4134[2];
  return ((Shen.empty$question$(Arg4134_2))
  ? Arg4134_1
  : (((Shen.is_type(Arg4134_2, Shen.type_cons) && (Shen.is_type(Arg4134_2[1], Shen.type_cons) && (Arg4134_2[1][2] < 0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-new-var-idx-aux"], [Arg4134_0, Arg4134_1, Arg4134_2[2]]);})
  : (((Shen.is_type(Arg4134_2, Shen.type_cons) && (Shen.is_type(Arg4134_2[1], Shen.type_cons) && (Arg4134_2[1][2] >= Arg4134_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-new-var-idx-aux"], [Arg4134_0, (Arg4134_2[1][2] + 1), Arg4134_2[2]]);})
  : ((Shen.is_type(Arg4134_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-new-var-idx-aux"], [Arg4134_0, Arg4134_1, Arg4134_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-new-var-idx-aux"]]);})))))},
  3,
  [],
  "reg-kl-new-var-idx-aux"];






Shen.fns["reg-kl-new-var-idx"] = [Shen.type_func,
  function shen_user_lambda4137(Arg4136) {
  if (Arg4136.length < 2) return [Shen.type_func, shen_user_lambda4137, 2, Arg4136];
  var Arg4136_0 = Arg4136[0], Arg4136_1 = Arg4136[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl-new-var-idx-aux"], [Arg4136_0, 0, Arg4136_1]);})},
  2,
  [],
  "reg-kl-new-var-idx"];






Shen.fns["reg-kl-var-defined?"] = [Shen.type_func,
  function shen_user_lambda4139(Arg4138) {
  if (Arg4138.length < 2) return [Shen.type_func, shen_user_lambda4139, 2, Arg4138];
  var Arg4138_0 = Arg4138[0], Arg4138_1 = Arg4138[1];
  return ((Shen.empty$question$(Arg4138_1))
  ? false
  : (((Shen.is_type(Arg4138_1, Shen.type_cons) && (Shen.is_type(Arg4138_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4138_1[1][1], Arg4138_0)))))
  ? true
  : (((Shen.is_type(Arg4138_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4138_1[1], Arg4138_0))))
  ? true
  : ((Shen.is_type(Arg4138_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-var-defined?"], [Arg4138_0, Arg4138_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-var-defined?"]]);})))))},
  2,
  [],
  "reg-kl-var-defined?"];






Shen.fns["reg-kl-used-vars-aux"] = [Shen.type_func,
  function shen_user_lambda4141(Arg4140) {
  if (Arg4140.length < 4) return [Shen.type_func, shen_user_lambda4141, 4, Arg4140];
  var Arg4140_0 = Arg4140[0], Arg4140_1 = Arg4140[1], Arg4140_2 = Arg4140[2], Arg4140_3 = Arg4140[3];
  var R0;
  return (((Shen.is_type(Arg4140_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4140_0[1])) && (Shen.is_type(Arg4140_0[2], Shen.type_cons) && (Shen.is_type(Arg4140_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4140_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4140_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-used-vars-aux"], [Arg4140_0[2][2][2][1], Arg4140_1, [Shen.type_cons, Arg4140_0[2][1], Arg4140_2], Arg4140_3])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-used-vars-aux"], [Arg4140_0[2][2][1], Arg4140_1, Arg4140_2, R0]);}))
  : (((Shen.is_type(Arg4140_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4140_0[1])) && (Shen.is_type(Arg4140_0[2], Shen.type_cons) && (Shen.is_type(Arg4140_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4140_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-used-vars-aux"], [Arg4140_0[2][2][1], Arg4140_1, [Shen.type_cons, Arg4140_0[2][1], Arg4140_2], Arg4140_3]);})
  : ((Shen.is_type(Arg4140_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-used-vars-aux"], [Arg4140_0[1], Arg4140_1, Arg4140_2, Shen.call(Shen.fns["reg-kl-used-vars-aux"], [Arg4140_0[2], Arg4140_1, Arg4140_2, Arg4140_3])]);})
  : (((Shen.is_type(Arg4140_0, Shen.type_symbol) && ((!Shen.call(Shen.fns["reg-kl-var-defined?"], [Arg4140_0, Arg4140_2])) && Shen.call(Shen.fns["reg-kl-var-defined?"], [Arg4140_0, Arg4140_1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["adjoin"], [Arg4140_0, Arg4140_3]);})
  : Arg4140_3))))},
  4,
  [],
  "reg-kl-used-vars-aux"];






Shen.fns["reg-kl-used-vars"] = [Shen.type_func,
  function shen_user_lambda4143(Arg4142) {
  if (Arg4142.length < 2) return [Shen.type_func, shen_user_lambda4143, 2, Arg4142];
  var Arg4142_0 = Arg4142[0], Arg4142_1 = Arg4142[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl-used-vars-aux"], [Arg4142_0, Arg4142_1, [], []]);})},
  2,
  [],
  "reg-kl-used-vars"];






Shen.fns["reg-kl-remove-do"] = [Shen.type_func,
  function shen_user_lambda4145(Arg4144) {
  if (Arg4144.length < 1) return [Shen.type_func, shen_user_lambda4145, 1, Arg4144];
  var Arg4144_0 = Arg4144[0];
  return (((Shen.is_type(Arg4144_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4144_0[1]))))
  ? Arg4144_0[2]
  : [Shen.type_cons, Arg4144_0, []])},
  1,
  [],
  "reg-kl-remove-do"];






Shen.fns["reg-kl-remove-duplicates-aux"] = [Shen.type_func,
  function shen_user_lambda4147(Arg4146) {
  if (Arg4146.length < 2) return [Shen.type_func, shen_user_lambda4147, 2, Arg4146];
  var Arg4146_0 = Arg4146[0], Arg4146_1 = Arg4146[1];
  return ((Shen.empty$question$(Arg4146_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4146_1]);})
  : ((Shen.is_type(Arg4146_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-remove-duplicates-aux"], [Arg4146_0[2], Shen.call(Shen.fns["adjoin"], [Arg4146_0[1], Arg4146_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-remove-duplicates-aux"]]);})))},
  2,
  [],
  "reg-kl-remove-duplicates-aux"];






Shen.fns["reg-kl-remove-duplicates"] = [Shen.type_func,
  function shen_user_lambda4149(Arg4148) {
  if (Arg4148.length < 1) return [Shen.type_func, shen_user_lambda4149, 1, Arg4148];
  var Arg4148_0 = Arg4148[0];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl-remove-duplicates-aux"], [Arg4148_0, []]);})},
  1,
  [],
  "reg-kl-remove-duplicates"];






Shen.fns["reg-kl-used-vars-cascade-aux"] = [Shen.type_func,
  function shen_user_lambda4151(Arg4150) {
  if (Arg4150.length < 4) return [Shen.type_func, shen_user_lambda4151, 4, Arg4150];
  var Arg4150_0 = Arg4150[0], Arg4150_1 = Arg4150[1], Arg4150_2 = Arg4150[2], Arg4150_3 = Arg4150[3];
  var R0;
  return ((Shen.empty$question$(Arg4150_0))
  ? Arg4150_3
  : ((Shen.is_type(Arg4150_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-used-vars-aux"], [Arg4150_0[1], Arg4150_1, [], Arg4150_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-used-vars-cascade-aux"], [Arg4150_0[2], Arg4150_1, R0, [Shen.type_cons, R0, Arg4150_3]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-used-vars-cascade-aux"]]);})))},
  4,
  [],
  "reg-kl-used-vars-cascade-aux"];






Shen.fns["reg-kl-used-vars-cascade"] = [Shen.type_func,
  function shen_user_lambda4153(Arg4152) {
  if (Arg4152.length < 3) return [Shen.type_func, shen_user_lambda4153, 3, Arg4152];
  var Arg4152_0 = Arg4152[0], Arg4152_1 = Arg4152[1], Arg4152_2 = Arg4152[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl-used-vars-cascade-aux"], [Shen.call(Shen.fns["reverse"], [Arg4152_0]), Arg4152_1, Arg4152_2, []]);})},
  3,
  [],
  "reg-kl-used-vars-cascade"];






Shen.fns["reg-kl-mk-shen-set-reg"] = [Shen.type_func,
  function shen_user_lambda4155(Arg4154) {
  if (Arg4154.length < 2) return [Shen.type_func, shen_user_lambda4155, 2, Arg4154];
  var Arg4154_0 = Arg4154[0], Arg4154_1 = Arg4154[1];
  return (((Arg4154_0 < 0))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["Cannot set function argument~%", []]);})
  : [Shen.type_cons, [Shen.type_symbol, "shen-set-reg!"], [Shen.type_cons, Arg4154_0, [Shen.type_cons, Arg4154_1, []]]])},
  2,
  [],
  "reg-kl-mk-shen-set-reg"];






Shen.fns["reg-kl-mk-shen-get-reg"] = [Shen.type_func,
  function shen_user_lambda4157(Arg4156) {
  if (Arg4156.length < 1) return [Shen.type_func, shen_user_lambda4157, 1, Arg4156];
  var Arg4156_0 = Arg4156[0];
  return (((Arg4156_0 < 0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-get-arg"], [Shen.type_cons, ((0 - Arg4156_0) - 1), []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen-get-reg"], [Shen.type_cons, Arg4156_0, []]])},
  1,
  [],
  "reg-kl-mk-shen-get-reg"];






Shen.fns["reg-kl-reuse-idx"] = [Shen.type_func,
  function shen_user_lambda4159(Arg4158) {
  if (Arg4158.length < 2) return [Shen.type_func, shen_user_lambda4159, 2, Arg4158];
  var Arg4158_0 = Arg4158[0], Arg4158_1 = Arg4158[1];
  return ((Shen.empty$question$(Arg4158_1))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg4158_1, Shen.type_cons) && (Shen.is_type(Arg4158_1[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Arg4158_1[1][1], Arg4158_0)) && (Arg4158_1[1][2] >= 0)))))
  ? Arg4158_1[1][2]
  : ((Shen.is_type(Arg4158_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-reuse-idx"], [Arg4158_0, Arg4158_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-reuse-idx"]]);}))))},
  2,
  [],
  "reg-kl-reuse-idx"];






Shen.fns["reg-kl-new-var-idx-or-reuse"] = [Shen.type_func,
  function shen_user_lambda4161(Arg4160) {
  if (Arg4160.length < 3) return [Shen.type_func, shen_user_lambda4161, 3, Arg4160];
  var Arg4160_0 = Arg4160[0], Arg4160_1 = Arg4160[1], Arg4160_2 = Arg4160[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg4160_2))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-new-var-idx"], [Arg4160_0, Arg4160_1]);})
  : ((R0 = (new Shen.Freeze([Arg4160_0, Arg4160_2, Arg4160_1], function(Arg4162) {
  var Arg4162_0 = Arg4162[0], Arg4162_1 = Arg4162[1], Arg4162_2 = Arg4162[2];
  return (function() {
  return ((Shen.is_type(Arg4162_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-new-var-idx-or-reuse"], [Arg4162_0, Arg4162_2, Arg4162_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-new-var-idx-or-reuse"]]);}));})}))),
  ((Shen.is_type(Arg4160_2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["reg-kl-reuse-idx"], [Arg4160_2[1], Arg4160_1])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))},
  3,
  [],
  "reg-kl-new-var-idx-or-reuse"];






Shen.fns["reg-kl-add-var-aux"] = [Shen.type_func,
  function shen_user_lambda4165(Arg4164) {
  if (Arg4164.length < 4) return [Shen.type_func, shen_user_lambda4165, 4, Arg4164];
  var Arg4164_0 = Arg4164[0], Arg4164_1 = Arg4164[1], Arg4164_2 = Arg4164[2], Arg4164_3 = Arg4164[3];
  return ((Shen.empty$question$(Arg4164_2))
  ? [Shen.type_cons, [Shen.type_cons, Arg4164_0, Arg4164_1], Shen.call(Shen.fns["reverse"], [Arg4164_3])]
  : (((Shen.is_type(Arg4164_2, Shen.type_cons) && (Shen.is_type(Arg4164_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4164_2[1][2], Arg4164_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["reverse"], [[Shen.type_cons, [Shen.type_cons, Arg4164_0, Arg4164_2[1][2]], Arg4164_3]]), Arg4164_2[2]]);})
  : ((Shen.is_type(Arg4164_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-add-var-aux"], [Arg4164_0, Arg4164_1, Arg4164_2[2], [Shen.type_cons, Arg4164_2[1], Arg4164_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-add-var-aux"]]);}))))},
  4,
  [],
  "reg-kl-add-var-aux"];






Shen.fns["reg-kl-add-var"] = [Shen.type_func,
  function shen_user_lambda4167(Arg4166) {
  if (Arg4166.length < 3) return [Shen.type_func, shen_user_lambda4167, 3, Arg4166];
  var Arg4166_0 = Arg4166[0], Arg4166_1 = Arg4166[1], Arg4166_2 = Arg4166[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl-add-var-aux"], [Arg4166_0, Arg4166_1, Arg4166_2, []]);})},
  3,
  [],
  "reg-kl-add-var"];






Shen.fns["reg-kl-max"] = [Shen.type_func,
  function shen_user_lambda4169(Arg4168) {
  if (Arg4168.length < 2) return [Shen.type_func, shen_user_lambda4169, 2, Arg4168];
  var Arg4168_0 = Arg4168[0], Arg4168_1 = Arg4168[1];
  return (((Arg4168_0 > Arg4168_1))
  ? Arg4168_0
  : Arg4168_1)},
  2,
  [],
  "reg-kl-max"];






Shen.fns["reg-kl-setreg-unexpr"] = [Shen.type_func,
  function shen_user_lambda4171(Arg4170) {
  if (Arg4170.length < 3) return [Shen.type_func, shen_user_lambda4171, 3, Arg4170];
  var Arg4170_0 = Arg4170[0], Arg4170_1 = Arg4170[1], Arg4170_2 = Arg4170[2];
  return (((Shen.is_type(Arg4170_1, Shen.type_cons) && Shen.empty$question$(Arg4170_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl-mk-shen-set-reg"], [Arg4170_0, Arg4170_1[1]]), Arg4170_2]]);})
  : ((Shen.is_type(Arg4170_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-setreg-unexpr"], [Arg4170_0, Arg4170_1[2], [Shen.type_cons, Arg4170_1[1], Arg4170_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl-mk-shen-set-reg"], [Arg4170_0, Arg4170_1]);})))},
  3,
  [],
  "reg-kl-setreg-unexpr"];






Shen.fns["reg-kl-setreg-do-expr"] = [Shen.type_func,
  function shen_user_lambda4173(Arg4172) {
  if (Arg4172.length < 3) return [Shen.type_func, shen_user_lambda4173, 3, Arg4172];
  var Arg4172_0 = Arg4172[0], Arg4172_1 = Arg4172[1], Arg4172_2 = Arg4172[2];
  return ((Shen.empty$question$(Arg4172_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["Broken `do` expression.", []]);})
  : (((Shen.is_type(Arg4172_1, Shen.type_cons) && Shen.empty$question$(Arg4172_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl-mk-shen-set-reg-unexpr"], [Arg4172_0, Arg4172_1[1]]), Arg4172_2]]);})
  : ((Shen.is_type(Arg4172_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-setreg-do-expr"], [Arg4172_0, Arg4172_1[2], [Shen.type_cons, Arg4172_1[1], Arg4172_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-setreg-do-expr"]]);}))))},
  3,
  [],
  "reg-kl-setreg-do-expr"];






Shen.fns["reg-kl-mk-shen-set-reg-unexpr"] = [Shen.type_func,
  function shen_user_lambda4175(Arg4174) {
  if (Arg4174.length < 2) return [Shen.type_func, shen_user_lambda4175, 2, Arg4174];
  var Arg4174_0 = Arg4174[0], Arg4174_1 = Arg4174[1];
  var R0, R1;
  return (((Shen.is_type(Arg4174_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4174_1[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["reg-kl-setreg-do-expr"], [Arg4174_0, Arg4174_1[2], []])]
  : (((Shen.is_type(Arg4174_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4174_1[1])) && (Shen.is_type(Arg4174_1[2], Shen.type_cons) && (Shen.is_type(Arg4174_1[2][2], Shen.type_cons) && (Shen.is_type(Arg4174_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4174_1[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-mk-shen-set-reg-unexpr"], [Arg4174_0, Arg4174_1[2][2][1]])),
  (R1 = Shen.call(Shen.fns["reg-kl-mk-shen-set-reg-unexpr"], [Arg4174_0, Arg4174_1[2][2][2][1]])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4174_1[2][1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl-mk-shen-set-reg"], [Arg4174_0, Arg4174_1]);})))},
  2,
  [],
  "reg-kl-mk-shen-set-reg-unexpr"];






Shen.fns["reg-kl-walk-let-expr"] = [Shen.type_func,
  function shen_user_lambda4177(Arg4176) {
  if (Arg4176.length < 8) return [Shen.type_func, shen_user_lambda4177, 8, Arg4176];
  var Arg4176_0 = Arg4176[0], Arg4176_1 = Arg4176[1], Arg4176_2 = Arg4176[2], Arg4176_3 = Arg4176[3], Arg4176_4 = Arg4176[4], Arg4176_5 = Arg4176[5], Arg4176_6 = Arg4176[6], Arg4176_7 = Arg4176[7];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4176_7)))
  ? ((R0 = Shen.call(Shen.fns["remove"], [Arg4176_0, Arg4176_3])),
  (R0 = Shen.call(Shen.fns["append"], [R0, Arg4176_5])),
  (R1 = Shen.call(Shen.fns["difference"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "head"], Arg4176_2]), R0])),
  (R1 = Shen.call(Shen.fns["reg-kl-new-var-idx-or-reuse"], [Arg4176_0, Arg4176_2, R1])),
  Shen.call(Shen.fns["reg-kl-context-nregs->"], [Arg4176_6, Shen.call(Shen.fns["reg-kl-max"], [(R1 + 1), Shen.call(Shen.fns["reg-kl-context-nregs"], [Arg4176_6])])]),
  (R2 = Shen.call(Shen.fns["reg-kl-add-var"], [Arg4176_0, R1, Arg4176_2])),
  (R0 = Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4176_1, Arg4176_2, Arg4176_4, R0, Arg4176_6])),
  [Shen.fns['shen-tuple'], Shen.call(Shen.fns["reg-kl-mk-shen-set-reg-unexpr"], [R1, R0]), R2])
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4176_7)))
  ? [Shen.fns['shen-tuple'], Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4176_1, Arg4176_2, Arg4176_4, Arg4176_5, Arg4176_6]), Arg4176_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-walk-let-expr"]]);})))},
  8,
  [],
  "reg-kl-walk-let-expr"];






Shen.fns["reg-kl-walk-let"] = [Shen.type_func,
  function shen_user_lambda4179(Arg4178) {
  if (Arg4178.length < 7) return [Shen.type_func, shen_user_lambda4179, 7, Arg4178];
  var Arg4178_0 = Arg4178[0], Arg4178_1 = Arg4178[1], Arg4178_2 = Arg4178[2], Arg4178_3 = Arg4178[3], Arg4178_4 = Arg4178[4], Arg4178_5 = Arg4178[5], Arg4178_6 = Arg4178[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl-used-vars"], [Arg4178_2, [Shen.type_cons, Arg4178_0, Arg4178_3]])),
  (R1 = Shen.call(Shen.fns["element?"], [Arg4178_0, R0])),
  (R1 = Shen.call(Shen.fns["reg-kl-walk-let-expr"], [Arg4178_0, Arg4178_1, Arg4178_3, R0, Arg4178_4, Arg4178_5, Arg4178_6, R1])),
  (R2 = Shen.call(Shen.fns["fst"], [R1])),
  (R1 = Shen.call(Shen.fns["snd"], [R1])),
  (R1 = Shen.call(Shen.fns["reg-kl-remove-do"], [Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4178_2, R1, Shen.call(Shen.fns["append"], [R0, Arg4178_5]), Arg4178_5, Arg4178_6])])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? (R2 = [Shen.type_cons, R2, R1])
  : (R2 = R1)),
  [Shen.type_cons, [Shen.type_symbol, "do"], R2])},
  7,
  [],
  "reg-kl-walk-let"];






Shen.fns["reg-kl-walk-do-aux"] = [Shen.type_func,
  function shen_user_lambda4181(Arg4180) {
  if (Arg4180.length < 6) return [Shen.type_func, shen_user_lambda4181, 6, Arg4180];
  var Arg4180_0 = Arg4180[0], Arg4180_1 = Arg4180[1], Arg4180_2 = Arg4180[2], Arg4180_3 = Arg4180[3], Arg4180_4 = Arg4180[4], Arg4180_5 = Arg4180[5];
  var R0, R1;
  return (((Shen.empty$question$(Arg4180_0) && Shen.empty$question$(Arg4180_2)))
  ? Arg4180_5
  : (((Shen.is_type(Arg4180_0, Shen.type_cons) && (Shen.empty$question$(Arg4180_0[2]) && (Shen.is_type(Arg4180_2, Shen.type_cons) && Shen.empty$question$(Arg4180_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4180_0[1], Arg4180_1, Arg4180_2[1], Arg4180_3, Arg4180_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4180_5, Shen.call(Shen.fns["reg-kl-remove-do"], [R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-do-aux"], [[], Arg4180_1, [], Arg4180_3, Arg4180_4, R0]);}))
  : (((Shen.is_type(Arg4180_0, Shen.type_cons) && (Shen.is_type(Arg4180_2, Shen.type_cons) && Shen.is_type(Arg4180_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4180_0[1], Arg4180_1, Arg4180_2[1], Arg4180_2[2][1], Arg4180_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4180_5, Shen.call(Shen.fns["reg-kl-remove-do"], [R0])])),
  (R1 = Arg4180_2[2]),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-do-aux"], [Arg4180_0[2], Arg4180_1, R1, Arg4180_3, Arg4180_4, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-walk-do-aux"]]);}))))},
  6,
  [],
  "reg-kl-walk-do-aux"];






Shen.fns["reg-kl-walk-do"] = [Shen.type_func,
  function shen_user_lambda4183(Arg4182) {
  if (Arg4182.length < 5) return [Shen.type_func, shen_user_lambda4183, 5, Arg4182];
  var Arg4182_0 = Arg4182[0], Arg4182_1 = Arg4182[1], Arg4182_2 = Arg4182[2], Arg4182_3 = Arg4182[3], Arg4182_4 = Arg4182[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl-used-vars-cascade"], [Arg4182_0, Arg4182_1, Arg4182_2])),
  (R0 = Shen.call(Shen.fns["reg-kl-walk-do-aux"], [Arg4182_0, Arg4182_1, R0, Arg4182_3, Arg4182_4, []])),
  [Shen.type_cons, [Shen.type_symbol, "do"], R0])},
  5,
  [],
  "reg-kl-walk-do"];






Shen.fns["reg-kl-walk-apply-aux"] = [Shen.type_func,
  function shen_user_lambda4185(Arg4184) {
  if (Arg4184.length < 6) return [Shen.type_func, shen_user_lambda4185, 6, Arg4184];
  var Arg4184_0 = Arg4184[0], Arg4184_1 = Arg4184[1], Arg4184_2 = Arg4184[2], Arg4184_3 = Arg4184[3], Arg4184_4 = Arg4184[4], Arg4184_5 = Arg4184[5];
  var R0;
  return (((Shen.empty$question$(Arg4184_0) && Shen.empty$question$(Arg4184_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4184_5]);})
  : (((Shen.is_type(Arg4184_0, Shen.type_cons) && (Shen.empty$question$(Arg4184_0[2]) && (Shen.is_type(Arg4184_2, Shen.type_cons) && Shen.empty$question$(Arg4184_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4184_0[1], Arg4184_1, Arg4184_2[1], Arg4184_3, Arg4184_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-apply-aux"], [[], Arg4184_1, [], Arg4184_3, Arg4184_4, [Shen.type_cons, R0, Arg4184_5]]);}))
  : (((Shen.is_type(Arg4184_0, Shen.type_cons) && (Shen.is_type(Arg4184_2, Shen.type_cons) && Shen.is_type(Arg4184_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4184_0[1], Arg4184_1, Arg4184_2[1], Arg4184_2[2][1], Arg4184_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-apply-aux"], [Arg4184_0[2], Arg4184_1, Arg4184_2[2], Arg4184_3, Arg4184_4, [Shen.type_cons, R0, Arg4184_5]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-walk-apply-aux"]]);}))))},
  6,
  [],
  "reg-kl-walk-apply-aux"];






Shen.fns["reg-kl-walk-apply"] = [Shen.type_func,
  function shen_user_lambda4187(Arg4186) {
  if (Arg4186.length < 5) return [Shen.type_func, shen_user_lambda4187, 5, Arg4186];
  var Arg4186_0 = Arg4186[0], Arg4186_1 = Arg4186[1], Arg4186_2 = Arg4186[2], Arg4186_3 = Arg4186[3], Arg4186_4 = Arg4186[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl-used-vars-cascade"], [Arg4186_0, Arg4186_1, Arg4186_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-apply-aux"], [Arg4186_0, Arg4186_1, R0, Arg4186_3, Arg4186_4, []]);}))},
  5,
  [],
  "reg-kl-walk-apply"];






Shen.fns["reg-kl-walk-if"] = [Shen.type_func,
  function shen_user_lambda4189(Arg4188) {
  if (Arg4188.length < 7) return [Shen.type_func, shen_user_lambda4189, 7, Arg4188];
  var Arg4188_0 = Arg4188[0], Arg4188_1 = Arg4188[1], Arg4188_2 = Arg4188[2], Arg4188_3 = Arg4188[3], Arg4188_4 = Arg4188[4], Arg4188_5 = Arg4188[5], Arg4188_6 = Arg4188[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl-used-vars-aux"], [Arg4188_1, Arg4188_3, [], Arg4188_5])),
  (R1 = Shen.call(Shen.fns["reg-kl-used-vars-aux"], [Arg4188_2, Arg4188_3, [], Arg4188_5])),
  (R2 = Shen.call(Shen.fns["append"], [R0, R1])),
  (R2 = Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4188_0, Arg4188_3, Arg4188_4, R2, Arg4188_6])),
  (R0 = Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4188_1, Arg4188_3, R0, Arg4188_5, Arg4188_6])),
  (R1 = Shen.call(Shen.fns["reg-kl-walk-expr"], [Arg4188_2, Arg4188_3, R1, Arg4188_5, Arg4188_6])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R2, [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])},
  7,
  [],
  "reg-kl-walk-if"];






Shen.fns["reg-kl-walk-cond"] = [Shen.type_func,
  function shen_user_lambda4191(Arg4190) {
  if (Arg4190.length < 5) return [Shen.type_func, shen_user_lambda4191, 5, Arg4190];
  var Arg4190_0 = Arg4190[0], Arg4190_1 = Arg4190[1], Arg4190_2 = Arg4190[2], Arg4190_3 = Arg4190[3], Arg4190_4 = Arg4190[4];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4190_0))
  ? [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "error: cond failure", []]]
  : (((Shen.is_type(Arg4190_0, Shen.type_cons) && (Shen.is_type(Arg4190_0[1], Shen.type_cons) && (Shen.is_type(Arg4190_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4190_0[1][2][2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-used-vars-aux"], [Arg4190_0[1][2][1], Arg4190_1, [], Arg4190_3])),
  (R1 = Shen.call(Shen.fns["reg-kl-used-vars-aux"], [Arg4190_0[2], Arg4190_1, [], Arg4190_3])),
  (R0 = Shen.call(Shen.fns["reg-kl-used-vars-aux"], [Arg4190_0[1][1], Arg4190_1, [], Shen.call(Shen.fns["append"], [R0, R1])])),
  (R2 = Shen.call(Shen.fns["reg-kl-walk-cond"], [Arg4190_0[2], Arg4190_1, Arg4190_2, Arg4190_3, Arg4190_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-if"], [Arg4190_0[1][1], Arg4190_0[1][2][1], R2, Arg4190_1, R0, R1, Arg4190_4]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-walk-cond"]]);})))},
  5,
  [],
  "reg-kl-walk-cond"];






Shen.fns["reg-kl-mk-closure-args-init"] = [Shen.type_func,
  function shen_user_lambda4193(Arg4192) {
  if (Arg4192.length < 3) return [Shen.type_func, shen_user_lambda4193, 3, Arg4192];
  var Arg4192_0 = Arg4192[0], Arg4192_1 = Arg4192[1], Arg4192_2 = Arg4192[2];
  var R0;
  return ((Shen.empty$question$(Arg4192_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4192_2]);})
  : ((Shen.is_type(Arg4192_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl-var-idx"], [Arg4192_0[1], Arg4192_1])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-mk-closure-args-init"], [Arg4192_0[2], Arg4192_1, [Shen.type_cons, R0, Arg4192_2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-mk-closure-args-init"]]);})))},
  3,
  [],
  "reg-kl-mk-closure-args-init"];






Shen.fns["reg-kl-mk-closure-env"] = [Shen.type_func,
  function shen_user_lambda4195(Arg4194) {
  if (Arg4194.length < 2) return [Shen.type_func, shen_user_lambda4195, 2, Arg4194];
  var Arg4194_0 = Arg4194[0], Arg4194_1 = Arg4194[1];
  return ((Shen.empty$question$(Arg4194_0))
  ? Arg4194_1
  : ((Shen.is_type(Arg4194_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-mk-closure-env"], [Arg4194_0[2], [Shen.type_cons, [Shen.type_cons, Arg4194_0[1], Shen.call(Shen.fns["reg-kl-new-var-idx"], [Arg4194_0[1], Arg4194_1])], Arg4194_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-mk-closure-env"]]);})))},
  2,
  [],
  "reg-kl-mk-closure-env"];






Shen.fns["reg-kl-mk-closure-list"] = [Shen.type_func,
  function shen_user_lambda4197(Arg4196) {
  if (Arg4196.length < 5) return [Shen.type_func, shen_user_lambda4197, 5, Arg4196];
  var Arg4196_0 = Arg4196[0], Arg4196_1 = Arg4196[1], Arg4196_2 = Arg4196[2], Arg4196_3 = Arg4196[3], Arg4196_4 = Arg4196[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl-mk-closure-env"], [Arg4196_3, []])),
  (R1 = Shen.call(Shen.fns["reg-kl-mk-closure-args-init"], [Arg4196_3, Arg4196_2, []])),
  (R0 = Shen.call(Shen.fns["reg-kl-mk-function-kl"], [Arg4196_0, Arg4196_1, R0, Arg4196_4])),
  [Shen.type_cons, R1, [Shen.type_cons, R0, []]])},
  5,
  [],
  "reg-kl-mk-closure-list"];






Shen.fns["reg-kl-walk-lambda-aux"] = [Shen.type_func,
  function shen_user_lambda4199(Arg4198) {
  if (Arg4198.length < 6) return [Shen.type_func, shen_user_lambda4199, 6, Arg4198];
  var Arg4198_0 = Arg4198[0], Arg4198_1 = Arg4198[1], Arg4198_2 = Arg4198[2], Arg4198_3 = Arg4198[3], Arg4198_4 = Arg4198[4], Arg4198_5 = Arg4198[5];
  var R0, R1;
  return (((Shen.is_type(Arg4198_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4198_1[1])) && (Shen.is_type(Arg4198_1[2], Shen.type_cons) && (Shen.is_type(Arg4198_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg4198_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-lambda-aux"], [Arg4198_1[2][1], Arg4198_1[2][2][1], [Shen.type_cons, Arg4198_0, Arg4198_2], Arg4198_3, Arg4198_4, Arg4198_5]);})
  : ((R0 = Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4198_0, Arg4198_2]])),
  (R1 = Shen.call(Shen.fns["append"], [Arg4198_4, Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4198_0, R0]])])),
  (R1 = Shen.call(Shen.fns["reg-kl-mk-closure-list"], [R1, Arg4198_1, Arg4198_3, Arg4198_4, Arg4198_5])),
  [Shen.type_cons, [Shen.type_symbol, "shen-mk-closure"], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["reg-kl-context-nregs"], [Arg4198_5]), R1]]]))},
  6,
  [],
  "reg-kl-walk-lambda-aux"];






Shen.fns["reg-kl-walk-lambda"] = [Shen.type_func,
  function shen_user_lambda4201(Arg4200) {
  if (Arg4200.length < 5) return [Shen.type_func, shen_user_lambda4201, 5, Arg4200];
  var Arg4200_0 = Arg4200[0], Arg4200_1 = Arg4200[1], Arg4200_2 = Arg4200[2], Arg4200_3 = Arg4200[3], Arg4200_4 = Arg4200[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl-used-vars"], [[Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg4200_0, [Shen.type_cons, Arg4200_1, []]]], Arg4200_3])),
  (R1 = Shen.call(Shen.fns["reg-kl-mk-context"], [Shen.call(Shen.fns["reg-kl-context-toplevel"], [Arg4200_4]), 0])),
  (R0 = Shen.call(Shen.fns["reg-kl-walk-lambda-aux"], [Arg4200_0, Arg4200_1, Arg4200_2, Arg4200_3, R0, R1])),
  Shen.call(Shen.fns["reg-kl-context-toplevel->"], [Arg4200_4, Shen.call(Shen.fns["reg-kl-context-toplevel"], [R1])]),
  R0)},
  5,
  [],
  "reg-kl-walk-lambda"];






Shen.fns["reg-kl-walk-freeze"] = [Shen.type_func,
  function shen_user_lambda4203(Arg4202) {
  if (Arg4202.length < 4) return [Shen.type_func, shen_user_lambda4203, 4, Arg4202];
  var Arg4202_0 = Arg4202[0], Arg4202_1 = Arg4202[1], Arg4202_2 = Arg4202[2], Arg4202_3 = Arg4202[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl-mk-context"], [Shen.call(Shen.fns["reg-kl-context-toplevel"], [Arg4202_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl-mk-closure-list"], [Arg4202_2, Arg4202_0, Arg4202_1, Arg4202_2, R0])),
  Shen.call(Shen.fns["reg-kl-context-toplevel->"], [Arg4202_3, Shen.call(Shen.fns["reg-kl-context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "shen-mk-freeze"], [Shen.type_cons, Shen.call(Shen.fns["reg-kl-context-nregs"], [R0]), R1]])},
  4,
  [],
  "reg-kl-walk-freeze"];






Shen.fns["reg-kl-lift-defun"] = [Shen.type_func,
  function shen_user_lambda4205(Arg4204) {
  if (Arg4204.length < 4) return [Shen.type_func, shen_user_lambda4205, 4, Arg4204];
  var Arg4204_0 = Arg4204[0], Arg4204_1 = Arg4204[1], Arg4204_2 = Arg4204[2], Arg4204_3 = Arg4204[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl-mk-context"], [Shen.call(Shen.fns["reg-kl-context-toplevel"], [Arg4204_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl-mk-defun-kl"], [Arg4204_0, Arg4204_1, Arg4204_2, [], R0])),
  Shen.call(Shen.fns["reg-kl-context-toplevel->"], [Arg4204_3, [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl-context-toplevel"], [R0])]]),
  [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, Arg4204_0, []]])},
  4,
  [],
  "reg-kl-lift-defun"];






Shen.fns["reg-kl-walk-expr"] = [Shen.type_func,
  function shen_user_lambda4207(Arg4206) {
  if (Arg4206.length < 5) return [Shen.type_func, shen_user_lambda4207, 5, Arg4206];
  var Arg4206_0 = Arg4206[0], Arg4206_1 = Arg4206[1], Arg4206_2 = Arg4206[2], Arg4206_3 = Arg4206[3], Arg4206_4 = Arg4206[4];
  return (((Shen.is_type(Arg4206_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4206_0[1])) && (Shen.is_type(Arg4206_0[2], Shen.type_cons) && (Shen.is_type(Arg4206_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4206_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4206_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-let"], [Arg4206_0[2][1], Arg4206_0[2][2][1], Arg4206_0[2][2][2][1], Arg4206_1, Arg4206_2, Arg4206_3, Arg4206_4]);})
  : (((Shen.is_type(Arg4206_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4206_0[1])) && (Shen.is_type(Arg4206_0[2], Shen.type_cons) && (Shen.is_type(Arg4206_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4206_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4206_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-if"], [Arg4206_0[2][1], Arg4206_0[2][2][1], Arg4206_0[2][2][2][1], Arg4206_1, Arg4206_2, Arg4206_3, Arg4206_4]);})
  : (((Shen.is_type(Arg4206_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg4206_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-cond"], [Arg4206_0[2], Arg4206_1, Arg4206_2, Arg4206_3, Arg4206_4]);})
  : (((Shen.is_type(Arg4206_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4206_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-do"], [Arg4206_0[2], Arg4206_1, Arg4206_2, Arg4206_3, Arg4206_4]);})
  : (((Shen.is_type(Arg4206_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4206_0[1])) && (Shen.is_type(Arg4206_0[2], Shen.type_cons) && (Shen.is_type(Arg4206_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4206_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-lambda"], [Arg4206_0[2][1], Arg4206_0[2][2][1], [], Arg4206_1, Arg4206_4]);})
  : (((Shen.is_type(Arg4206_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg4206_0[1])) && (Shen.is_type(Arg4206_0[2], Shen.type_cons) && Shen.empty$question$(Arg4206_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-freeze"], [Arg4206_0[2][1], Arg4206_1, Arg4206_2, Arg4206_4]);})
  : (((Shen.is_type(Arg4206_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4206_0[1])) && (Shen.is_type(Arg4206_0[2], Shen.type_cons) && (Shen.is_type(Arg4206_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4206_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4206_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-lift-defun"], [Arg4206_0[2][1], Arg4206_0[2][2][1], Arg4206_0[2][2][2][1], Arg4206_4]);})
  : ((Shen.is_type(Arg4206_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-apply"], [Arg4206_0, Arg4206_1, Arg4206_2, Arg4206_3, Arg4206_4]);})
  : (((Shen.call(Shen.fns["reg-kl-var-defined?"], [Arg4206_0, Arg4206_1]) && Shen.is_type(Arg4206_0, Shen.type_symbol)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl-var-idx"], [Arg4206_0, Arg4206_1])]);})
  : Arg4206_0)))))))))},
  5,
  [],
  "reg-kl-walk-expr"];






Shen.fns["reg-kl-mk-defun-env"] = [Shen.type_func,
  function shen_user_lambda4209(Arg4208) {
  if (Arg4208.length < 3) return [Shen.type_func, shen_user_lambda4209, 3, Arg4208];
  var Arg4208_0 = Arg4208[0], Arg4208_1 = Arg4208[1], Arg4208_2 = Arg4208[2];
  return ((Shen.empty$question$(Arg4208_0))
  ? Arg4208_2
  : ((Shen.is_type(Arg4208_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-mk-defun-env"], [Arg4208_0[2], (Arg4208_1 - 1), [Shen.type_cons, [Shen.type_cons, Arg4208_0[1], Arg4208_1], Arg4208_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-mk-defun-env"]]);})))},
  3,
  [],
  "reg-kl-mk-defun-env"];






Shen.fns["reg-kl-mk-function-kl"] = [Shen.type_func,
  function shen_user_lambda4211(Arg4210) {
  if (Arg4210.length < 4) return [Shen.type_func, shen_user_lambda4211, 4, Arg4210];
  var Arg4210_0 = Arg4210[0], Arg4210_1 = Arg4210[1], Arg4210_2 = Arg4210[2], Arg4210_3 = Arg4210[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl-remove-duplicates"], [Arg4210_0])),
  (R1 = Shen.call(Shen.fns["reg-kl-mk-defun-env"], [R0, -1, Arg4210_2])),
  (R0 = Shen.call(Shen.fns["reg-kl-used-vars"], [Arg4210_1, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-expr"], [Arg4210_1, R1, R0, [], Arg4210_3]);}))},
  4,
  [],
  "reg-kl-mk-function-kl"];






Shen.fns["reg-kl-mk-defun-kl"] = [Shen.type_func,
  function shen_user_lambda4213(Arg4212) {
  if (Arg4212.length < 5) return [Shen.type_func, shen_user_lambda4213, 5, Arg4212];
  var Arg4212_0 = Arg4212[0], Arg4212_1 = Arg4212[1], Arg4212_2 = Arg4212[2], Arg4212_3 = Arg4212[3], Arg4212_4 = Arg4212[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl-mk-context"], [Shen.call(Shen.fns["reg-kl-context-toplevel"], [Arg4212_4]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl-mk-function-kl"], [Arg4212_1, Arg4212_2, Arg4212_3, R0])),
  Shen.call(Shen.fns["reg-kl-context-toplevel->"], [Arg4212_4, Shen.call(Shen.fns["reg-kl-context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "shen-mk-func"], [Shen.type_cons, Arg4212_0, [Shen.type_cons, Arg4212_1, [Shen.type_cons, Shen.call(Shen.fns["reg-kl-context-nregs"], [R0]), [Shen.type_cons, R1, []]]]]])},
  5,
  [],
  "reg-kl-mk-defun-kl"];






Shen.fns["reg-kl-walk-toplevel"] = [Shen.type_func,
  function shen_user_lambda4215(Arg4214) {
  if (Arg4214.length < 3) return [Shen.type_func, shen_user_lambda4215, 3, Arg4214];
  var Arg4214_0 = Arg4214[0], Arg4214_1 = Arg4214[1], Arg4214_2 = Arg4214[2];
  var R0, R1;
  return (((Shen.is_type(Arg4214_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4214_0[1])) && (Shen.is_type(Arg4214_0[2], Shen.type_cons) && (Shen.is_type(Arg4214_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4214_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4214_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl-mk-context"], [Arg4214_2, 0])),
  (R1 = Shen.call(Shen.fns["reg-kl-mk-defun-kl"], [Arg4214_0[2][1], Arg4214_0[2][2][1], Arg4214_0[2][2][2][1], [], R0])),
  [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl-context-toplevel"], [R0])])
  : ((Shen.is_type(Arg4214_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-toplevel-"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, [], [Shen.type_cons, Arg4214_0, []]]]]),
  [Shen.type_cons, [Shen.type_cons, R0, []], Shen.call(Shen.fns["reg-kl-walk-toplevel"], [R1, Arg4214_1, Arg4214_2])])
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4214_1)))
  ? Arg4214_2
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4214_1)))
  ? [Shen.type_cons, Arg4214_0, Arg4214_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-walk-toplevel"]]);})))))},
  3,
  [],
  "reg-kl-walk-toplevel"];






Shen.fns["reg-kl-walk-aux"] = [Shen.type_func,
  function shen_user_lambda4217(Arg4216) {
  if (Arg4216.length < 3) return [Shen.type_func, shen_user_lambda4217, 3, Arg4216];
  var Arg4216_0 = Arg4216[0], Arg4216_1 = Arg4216[1], Arg4216_2 = Arg4216[2];
  return ((Shen.empty$question$(Arg4216_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4216_2]);})
  : ((Shen.is_type(Arg4216_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-aux"], [Arg4216_0[2], Arg4216_1, Shen.call(Shen.fns["reg-kl-walk-toplevel"], [Arg4216_0[1], Arg4216_1, Arg4216_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "reg-kl-walk-aux"]]);})))},
  3,
  [],
  "reg-kl-walk-aux"];






Shen.fns["reg-kl-walk"] = [Shen.type_func,
  function shen_user_lambda4219(Arg4218) {
  if (Arg4218.length < 2) return [Shen.type_func, shen_user_lambda4219, 2, Arg4218];
  var Arg4218_0 = Arg4218[0], Arg4218_1 = Arg4218[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl-walk-aux"], [Arg4218_0, Arg4218_1, []]);})},
  2,
  [],
  "reg-kl-walk"];






Shen.fns["shen-toplevel-5322"] = [Shen.type_func,
  function shen_user_lambda5323(Arg5321) {
  if (Arg5321.length < 0) return [Shen.type_func, shen_user_lambda5323, 0, Arg5321];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-process-datatype"], [[Shen.type_symbol, "js-context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen-<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js-context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen-datatype-error"]])]);})},
  0,
  [],
  "shen-toplevel-5322"];

Shen.call_toplevel("shen-toplevel-5322")






Shen.fns["js-mk-context"] = [Shen.type_func,
  function shen_user_lambda5325(Arg5324) {
  if (Arg5324.length < 4) return [Shen.type_func, shen_user_lambda5325, 4, Arg5324];
  var Arg5324_0 = Arg5324[0], Arg5324_1 = Arg5324[1], Arg5324_2 = Arg5324[2], Arg5324_3 = Arg5324[3];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg5324_0, Shen.call(Shen.fns["@v"], [Arg5324_1, Shen.call(Shen.fns["@v"], [Arg5324_2, Shen.call(Shen.fns["@v"], [Arg5324_3, Shen.vector(0)])])])]);})},
  4,
  [],
  "js-mk-context"];






Shen.fns["js-context-varname->"] = [Shen.type_func,
  function shen_user_lambda5327(Arg5326) {
  if (Arg5326.length < 2) return [Shen.type_func, shen_user_lambda5327, 2, Arg5326];
  var Arg5326_0 = Arg5326[0], Arg5326_1 = Arg5326[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5326_0, 4, Arg5326_1]);})},
  2,
  [],
  "js-context-varname->"];






Shen.fns["js-context-argname->"] = [Shen.type_func,
  function shen_user_lambda5329(Arg5328) {
  if (Arg5328.length < 2) return [Shen.type_func, shen_user_lambda5329, 2, Arg5328];
  var Arg5328_0 = Arg5328[0], Arg5328_1 = Arg5328[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5328_0, 3, Arg5328_1]);})},
  2,
  [],
  "js-context-argname->"];






Shen.fns["js-context-toplevel->"] = [Shen.type_func,
  function shen_user_lambda5331(Arg5330) {
  if (Arg5330.length < 2) return [Shen.type_func, shen_user_lambda5331, 2, Arg5330];
  var Arg5330_0 = Arg5330[0], Arg5330_1 = Arg5330[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5330_0, 2, Arg5330_1]);})},
  2,
  [],
  "js-context-toplevel->"];






Shen.fns["js-context-nregs->"] = [Shen.type_func,
  function shen_user_lambda5333(Arg5332) {
  if (Arg5332.length < 2) return [Shen.type_func, shen_user_lambda5333, 2, Arg5332];
  var Arg5332_0 = Arg5332[0], Arg5332_1 = Arg5332[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5332_0, 1, Arg5332_1]);})},
  2,
  [],
  "js-context-nregs->"];






Shen.fns["js-context-varname"] = [Shen.type_func,
  function shen_user_lambda5335(Arg5334) {
  if (Arg5334.length < 1) return [Shen.type_func, shen_user_lambda5335, 1, Arg5334];
  var Arg5334_0 = Arg5334[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5334_0, 4]);})},
  1,
  [],
  "js-context-varname"];






Shen.fns["js-context-argname"] = [Shen.type_func,
  function shen_user_lambda5337(Arg5336) {
  if (Arg5336.length < 1) return [Shen.type_func, shen_user_lambda5337, 1, Arg5336];
  var Arg5336_0 = Arg5336[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5336_0, 3]);})},
  1,
  [],
  "js-context-argname"];






Shen.fns["js-context-toplevel"] = [Shen.type_func,
  function shen_user_lambda5339(Arg5338) {
  if (Arg5338.length < 1) return [Shen.type_func, shen_user_lambda5339, 1, Arg5338];
  var Arg5338_0 = Arg5338[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5338_0, 2]);})},
  1,
  [],
  "js-context-toplevel"];






Shen.fns["js-context-nregs"] = [Shen.type_func,
  function shen_user_lambda5341(Arg5340) {
  if (Arg5340.length < 1) return [Shen.type_func, shen_user_lambda5341, 1, Arg5340];
  var Arg5340_0 = Arg5340[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5340_0, 1]);})},
  1,
  [],
  "js-context-nregs"];






Shen.fns["js-max"] = [Shen.type_func,
  function shen_user_lambda5343(Arg5342) {
  if (Arg5342.length < 2) return [Shen.type_func, shen_user_lambda5343, 2, Arg5342];
  var Arg5342_0 = Arg5342[0], Arg5342_1 = Arg5342[1];
  return (((Arg5342_0 > Arg5342_1))
  ? Arg5342_0
  : Arg5342_1)},
  2,
  [],
  "js-max"];






Shen.fns["js-str-js-from-shen*"] = [Shen.type_func,
  function shen_user_lambda5345(Arg5344) {
  if (Arg5344.length < 2) return [Shen.type_func, shen_user_lambda5345, 2, Arg5344];
  var Arg5344_0 = Arg5344[0], Arg5344_1 = Arg5344[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5344_0)))
  ? Arg5344_1
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("-", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "_")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("_", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$_")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("$", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("'", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$quote$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("`", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$bquote$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("/", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$slash$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("*", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$asterisk$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("+", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$plus$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("%", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$percent$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("=", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$eq$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("?", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$question$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("!", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$excl$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$(">", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$gt$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("<", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$lt$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$(".", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$dot$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("|", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$bar$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("#", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$sharp$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("~", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$tilde$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$(":", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$colon$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$(";", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$sc$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("@", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$at$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("&", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$amp$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("{", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$cbraceopen$")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]) && Shen.unwind_tail(Shen.$eq$("}", Arg5344_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + "$cbraceclose$")]);})
  : ((Shen.call(Shen.fns["shen-+string?"], [Arg5344_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Shen.tlstr(Arg5344_0), (Arg5344_1 + Arg5344_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-str-js-from-shen*"]]);})))))))))))))))))))))))))))},
  2,
  [],
  "js-str-js-from-shen*"];






Shen.fns["js-str-js-from-shen"] = [Shen.type_func,
  function shen_user_lambda5347(Arg5346) {
  if (Arg5346.length < 1) return [Shen.type_func, shen_user_lambda5347, 1, Arg5346];
  var Arg5346_0 = Arg5346[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js-str-js-from-shen*"], [Arg5346_0, ""]);})},
  1,
  [],
  "js-str-js-from-shen"];






Shen.fns["js-sym-js-from-shen"] = [Shen.type_func,
  function shen_user_lambda5349(Arg5348) {
  if (Arg5348.length < 1) return [Shen.type_func, shen_user_lambda5349, 1, Arg5348];
  var Arg5348_0 = Arg5348[0];
  return (function() {
  return Shen.intern(Shen.call(Shen.fns["js-str-js-from-shen"], [Shen.str(Arg5348_0)]));})},
  1,
  [],
  "js-sym-js-from-shen"];






Shen.fns["shen-toplevel-5351"] = [Shen.type_func,
  function shen_user_lambda5352(Arg5350) {
  if (Arg5350.length < 0) return [Shen.type_func, shen_user_lambda5352, 0, Arg5350];
  return (Shen.globals["js-js-backslash"] = Shen.n_$gt$string(92))},
  0,
  [],
  "shen-toplevel-5351"];

Shen.call_toplevel("shen-toplevel-5351")






Shen.fns["shen-toplevel-5354"] = [Shen.type_func,
  function shen_user_lambda5355(Arg5353) {
  if (Arg5353.length < 0) return [Shen.type_func, shen_user_lambda5355, 0, Arg5353];
  return (Shen.globals["js-js-dquote"] = Shen.n_$gt$string(34))},
  0,
  [],
  "shen-toplevel-5354"];

Shen.call_toplevel("shen-toplevel-5354")






Shen.fns["js-esc-string"] = [Shen.type_func,
  function shen_user_lambda5357(Arg5356) {
  if (Arg5356.length < 2) return [Shen.type_func, shen_user_lambda5357, 2, Arg5356];
  var Arg5356_0 = Arg5356[0], Arg5356_1 = Arg5356[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5356_0)))
  ? Arg5356_1
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5356_0]) && (Shen.unwind_tail(Shen.$eq$(Arg5356_0[0], (Shen.globals["js-js-backslash"]))) || Shen.unwind_tail(Shen.$eq$(Arg5356_0[0], (Shen.globals["js-js-dquote"]))))))
  ? ((R0 = (Shen.globals["js-js-backslash"])),
  (function() {
  return Shen.call_tail(Shen.fns["js-esc-string"], [Shen.tlstr(Arg5356_0), Shen.call(Shen.fns["intmake-string"], ["~A~A~A", [Shen.fns['shen-tuple'], Arg5356_1, [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], Arg5356_0[0], []]]]])]);}))
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5356_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg5356_0[0]), 10))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-esc-string"], [Shen.tlstr(Arg5356_0), (Arg5356_1 + "\\x0a")]);})
  : (((Shen.call(Shen.fns["shen-+string?"], [Arg5356_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg5356_0[0]), 13))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-esc-string"], [Shen.tlstr(Arg5356_0), (Arg5356_1 + "\\x0d")]);})
  : ((Shen.call(Shen.fns["shen-+string?"], [Arg5356_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-esc-string"], [Shen.tlstr(Arg5356_0), (Arg5356_1 + Arg5356_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-esc-string"]]);}))))))},
  2,
  [],
  "js-esc-string"];






Shen.fns["js-func-name"] = [Shen.type_func,
  function shen_user_lambda5359(Arg5358) {
  if (Arg5358.length < 1) return [Shen.type_func, shen_user_lambda5359, 1, Arg5358];
  var Arg5358_0 = Arg5358[0];
  return ((Shen.is_type(Arg5358_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-sym-js-from-shen"], [Arg5358_0]);})
  : Arg5358_0)},
  1,
  [],
  "js-func-name"];






Shen.fns["js-intfunc-name"] = [Shen.type_func,
  function shen_user_lambda5361(Arg5360) {
  if (Arg5360.length < 1) return [Shen.type_func, shen_user_lambda5361, 1, Arg5360];
  var Arg5360_0 = Arg5360[0];
  return (((Shen.call(Shen.fns["shen-sysfunc?"], [Arg5360_0]) || (Shen.globals["shen-*installing-kl*"])))
  ? (function() {
  return Shen.intern(("Shen." + Shen.call(Shen.fns["js-str-js-from-shen"], [Shen.str(Arg5360_0)])));})
  : ((Shen.is_type(Arg5360_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-sym-js-from-shen"], [Arg5360_0]);})
  : Arg5360_0))},
  1,
  [],
  "js-intfunc-name"];






Shen.fns["shen-toplevel-5363"] = [Shen.type_func,
  function shen_user_lambda5364(Arg5362) {
  if (Arg5362.length < 0) return [Shen.type_func, shen_user_lambda5364, 0, Arg5362];
  return (Shen.globals["js-int-funcs"] = [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], []], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js-call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], []]], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "pr"], []]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]], []]]])},
  0,
  [],
  "shen-toplevel-5363"];

Shen.call_toplevel("shen-toplevel-5363")






Shen.fns["shen-toplevel-5366"] = [Shen.type_func,
  function shen_user_lambda5367(Arg5365) {
  if (Arg5365.length < 0) return [Shen.type_func, shen_user_lambda5367, 0, Arg5365];
  return (Shen.globals["js-internals"] = [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "js-write-byte"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js-shenjs-call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]])},
  0,
  [],
  "shen-toplevel-5366"];

Shen.call_toplevel("shen-toplevel-5366")






Shen.fns["shen-toplevel-5369"] = [Shen.type_func,
  function shen_user_lambda5370(Arg5368) {
  if (Arg5368.length < 0) return [Shen.type_func, shen_user_lambda5370, 0, Arg5368];
  return (Shen.globals["js-tail-internals"] = [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "js-shenjs-call-js"], []]])},
  0,
  [],
  "shen-toplevel-5369"];

Shen.call_toplevel("shen-toplevel-5369")






Shen.fns["js-int-func-args*"] = [Shen.type_func,
  function shen_user_lambda5372(Arg5371) {
  if (Arg5371.length < 2) return [Shen.type_func, shen_user_lambda5372, 2, Arg5371];
  var Arg5371_0 = Arg5371[0], Arg5371_1 = Arg5371[1];
  return ((Shen.empty$question$(Arg5371_1))
  ? []
  : (((Shen.is_type(Arg5371_1, Shen.type_cons) && (Shen.is_type(Arg5371_1[1], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg5371_0, Arg5371_1[1][2]]))))
  ? Arg5371_1[1][1]
  : (((Shen.is_type(Arg5371_1, Shen.type_cons) && Shen.is_type(Arg5371_1[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-func-args*"], [Arg5371_0, Arg5371_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-int-func-args*"]]);}))))},
  2,
  [],
  "js-int-func-args*"];






Shen.fns["js-int-func-args"] = [Shen.type_func,
  function shen_user_lambda5374(Arg5373) {
  if (Arg5373.length < 1) return [Shen.type_func, shen_user_lambda5374, 1, Arg5373];
  var Arg5373_0 = Arg5373[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js-int-func-args*"], [Arg5373_0, (Shen.globals["js-int-funcs"])]);})},
  1,
  [],
  "js-int-func-args"];






Shen.fns["js-int-func?"] = [Shen.type_func,
  function shen_user_lambda5376(Arg5375) {
  if (Arg5375.length < 1) return [Shen.type_func, shen_user_lambda5376, 1, Arg5375];
  var Arg5375_0 = Arg5375[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5375_0)))
  ? true
  : (!Shen.empty$question$(Shen.call(Shen.fns["js-int-func-args"], [Arg5375_0]))))},
  1,
  [],
  "js-int-func?"];






Shen.fns["js-esc-obj"] = [Shen.type_func,
  function shen_user_lambda5378(Arg5377) {
  if (Arg5377.length < 1) return [Shen.type_func, shen_user_lambda5378, 1, Arg5377];
  var Arg5377_0 = Arg5377[0];
  return (((typeof(Arg5377_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["\"~A\"", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-esc-string"], [Arg5377_0, ""]), []]]);})
  : ((Shen.is_type(Arg5377_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-sym-js-from-shen"], [Arg5377_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["Object ~R cannot be escaped", [Shen.fns['shen-tuple'], Arg5377_0, []]]);})))},
  1,
  [],
  "js-esc-obj"];






Shen.fns["js-str-join*"] = [Shen.type_func,
  function shen_user_lambda5380(Arg5379) {
  if (Arg5379.length < 3) return [Shen.type_func, shen_user_lambda5380, 3, Arg5379];
  var Arg5379_0 = Arg5379[0], Arg5379_1 = Arg5379[1], Arg5379_2 = Arg5379[2];
  return ((Shen.empty$question$(Arg5379_0))
  ? Arg5379_2
  : (((Shen.is_type(Arg5379_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("", Arg5379_2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-join*"], [Arg5379_0[2], Arg5379_1, Arg5379_0[1]]);})
  : ((Shen.is_type(Arg5379_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-str-join*"], [Arg5379_0[2], Arg5379_1, Shen.call(Shen.fns["intmake-string"], ["~A~A~A", [Shen.fns['shen-tuple'], Arg5379_2, [Shen.fns['shen-tuple'], Arg5379_1, [Shen.fns['shen-tuple'], Arg5379_0[1], []]]]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-str-join*"]]);}))))},
  3,
  [],
  "js-str-join*"];






Shen.fns["js-str-join"] = [Shen.type_func,
  function shen_user_lambda5382(Arg5381) {
  if (Arg5381.length < 2) return [Shen.type_func, shen_user_lambda5382, 2, Arg5381];
  var Arg5381_0 = Arg5381[0], Arg5381_1 = Arg5381[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-str-join*"], [Arg5381_0, Arg5381_1, ""]);})},
  2,
  [],
  "js-str-join"];






Shen.fns["js-arg-list"] = [Shen.type_func,
  function shen_user_lambda5384(Arg5383) {
  if (Arg5383.length < 1) return [Shen.type_func, shen_user_lambda5384, 1, Arg5383];
  var Arg5383_0 = Arg5383[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js-str-join"], [Arg5383_0, ", "]);})},
  1,
  [],
  "js-arg-list"];






Shen.fns["js-arg-name"] = [Shen.type_func,
  function shen_user_lambda5386(Arg5385) {
  if (Arg5385.length < 2) return [Shen.type_func, shen_user_lambda5386, 2, Arg5385];
  var Arg5385_0 = Arg5385[0], Arg5385_1 = Arg5385[1];
  return (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A_~A", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-context-argname"], [Arg5385_1]), [Shen.fns['shen-tuple'], Arg5385_0, []]]]);})},
  2,
  [],
  "js-arg-name"];






Shen.fns["js-tail-call-ret"] = [Shen.type_func,
  function shen_user_lambda5388(Arg5387) {
  if (Arg5387.length < 1) return [Shen.type_func, shen_user_lambda5388, 1, Arg5387];
  var Arg5387_0 = Arg5387[0];
  return (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(function() {~%  return ~A;})", [Shen.fns['shen-tuple'], Arg5387_0, []]]);})},
  1,
  [],
  "js-tail-call-ret"];






Shen.fns["js-tail-call-expr"] = [Shen.type_func,
  function shen_user_lambda5390(Arg5389) {
  if (Arg5389.length < 2) return [Shen.type_func, shen_user_lambda5390, 2, Arg5389];
  var Arg5389_0 = Arg5389[0], Arg5389_1 = Arg5389[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5389_0, false, Arg5389_1]);})},
  2,
  [],
  "js-tail-call-expr"];






Shen.fns["js-cond-case"] = [Shen.type_func,
  function shen_user_lambda5392(Arg5391) {
  if (Arg5391.length < 2) return [Shen.type_func, shen_user_lambda5392, 2, Arg5391];
  var Arg5391_0 = Arg5391[0], Arg5391_1 = Arg5391[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-tail-call-expr"], [Arg5391_0, Arg5391_1]);})},
  2,
  [],
  "js-cond-case"];






Shen.fns["js-emit-cond*"] = [Shen.type_func,
  function shen_user_lambda5394(Arg5393) {
  if (Arg5393.length < 3) return [Shen.type_func, shen_user_lambda5394, 3, Arg5393];
  var Arg5393_0 = Arg5393[0], Arg5393_1 = Arg5393[1], Arg5393_2 = Arg5393[2];
  return ((Shen.empty$question$(Arg5393_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["cond failure: no default branch", []]);})
  : (((Shen.is_type(Arg5393_0, Shen.type_cons) && (Shen.is_type(Arg5393_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5393_0[1][1])) && (Shen.is_type(Arg5393_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5393_0[1][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5393_0[1][2][1], Arg5393_1, Arg5393_2]);})
  : (((Shen.is_type(Arg5393_0, Shen.type_cons) && (Shen.is_type(Arg5393_0[1], Shen.type_cons) && (Shen.is_type(Arg5393_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5393_0[1][2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["((~A)~%  ? ~A~%  : ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-cond-case"], [Arg5393_0[1][1], Arg5393_2]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5393_0[1][2][1], Arg5393_1, Arg5393_2]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-emit-cond*"], [Arg5393_0[2], Arg5393_1, Arg5393_2]), []]]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-emit-cond*"]]);}))))},
  3,
  [],
  "js-emit-cond*"];






Shen.fns["js-emit-cond"] = [Shen.type_func,
  function shen_user_lambda5396(Arg5395) {
  if (Arg5395.length < 3) return [Shen.type_func, shen_user_lambda5396, 3, Arg5395];
  var Arg5395_0 = Arg5395[0], Arg5395_1 = Arg5395[1], Arg5395_2 = Arg5395[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js-emit-cond*"], [Arg5395_0, Arg5395_1, Arg5395_2]);})},
  3,
  [],
  "js-emit-cond"];






Shen.fns["js-emit-trap-error"] = [Shen.type_func,
  function shen_user_lambda5398(Arg5397) {
  if (Arg5397.length < 4) return [Shen.type_func, shen_user_lambda5398, 4, Arg5397];
  var Arg5397_0 = Arg5397[0], Arg5397_1 = Arg5397[1], Arg5397_2 = Arg5397[2], Arg5397_3 = Arg5397[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5397_2)))
  ? ((R0 = Shen.call(Shen.fns["intmake-string"], ["function() {return ~A;}", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5397_0, false, Arg5397_3]), []]])),
  (R1 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5397_1, false, Arg5397_3])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.trap_error(~A, ~A)", [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], R1, []]]]);}))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5397_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-tail-call-ret"], [Shen.call(Shen.fns["js-emit-trap-error"], [Arg5397_0, Arg5397_1, false, Arg5397_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-emit-trap-error"]]);})))},
  4,
  [],
  "js-emit-trap-error"];






Shen.fns["js-predicate-op"] = [Shen.type_func,
  function shen_user_lambda5400(Arg5399) {
  if (Arg5399.length < 4) return [Shen.type_func, shen_user_lambda5400, 4, Arg5399];
  var Arg5399_0 = Arg5399[0], Arg5399_1 = Arg5399[1], Arg5399_2 = Arg5399[2], Arg5399_3 = Arg5399[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5399_0)) && (typeof(Arg5399_1) == 'number')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5399_0)) && (typeof(Arg5399_1) == 'string')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5399_0)) && Shen.unwind_tail(Shen.$eq$(true, Arg5399_1))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5399_0)) && Shen.unwind_tail(Shen.$eq$(false, Arg5399_1))))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5399_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, Arg5399_1, []], Arg5399_2, Arg5399_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5399_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(typeof(~A) == 'string')", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5399_1, false, Arg5399_3]), []]]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5399_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(typeof(~A) == 'number')", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5399_1, false, Arg5399_3]), []]]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol?"], Arg5399_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.is_type(~A, ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5399_1, false, Arg5399_3]), [Shen.fns['shen-tuple'], "Shen.type_symbol", []]]]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons?"], Arg5399_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.is_type(~A, ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5399_1, false, Arg5399_3]), [Shen.fns['shen-tuple'], "Shen.type_cons", []]]]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tuple?"], Arg5399_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.is_type(~A, ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5399_1, false, Arg5399_3]), [Shen.fns['shen-tuple'], "Shen.fns['shen-tuple']", []]]]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector?"], Arg5399_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, Arg5399_1, []], Arg5399_2, Arg5399_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "empty?"], Arg5399_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5399_1, []], Arg5399_2, Arg5399_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "absvector?"], Arg5399_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, Arg5399_1, []], Arg5399_2, Arg5399_3]);})
  : Shen.fail_obj)))))))))))))},
  4,
  [],
  "js-predicate-op"];






Shen.fns["js-math-op"] = [Shen.type_func,
  function shen_user_lambda5402(Arg5401) {
  if (Arg5401.length < 4) return [Shen.type_func, shen_user_lambda5402, 4, Arg5401];
  var Arg5401_0 = Arg5401[0], Arg5401_1 = Arg5401[1], Arg5401_2 = Arg5401[2], Arg5401_3 = Arg5401[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5401_0)) && (Shen.is_type(Arg5401_1, Shen.type_cons) && (Shen.is_type(Arg5401_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5401_1[2][2]) && ((typeof(Arg5401_1[1]) == 'number') && (typeof(Arg5401_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5401_1[1] + Arg5401_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5401_0)) && (Shen.is_type(Arg5401_1, Shen.type_cons) && (Shen.is_type(Arg5401_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5401_1[2][2]) && ((typeof(Arg5401_1[1]) == 'number') && (typeof(Arg5401_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5401_1[1] - Arg5401_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5401_0)) && (Shen.is_type(Arg5401_1, Shen.type_cons) && (Shen.is_type(Arg5401_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5401_1[2][2]) && ((typeof(Arg5401_1[1]) == 'number') && (typeof(Arg5401_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5401_1[1] * Arg5401_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/"], Arg5401_0)) && (Shen.is_type(Arg5401_1, Shen.type_cons) && (Shen.is_type(Arg5401_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5401_1[2][2]) && ((typeof(Arg5401_1[1]) == 'number') && (typeof(Arg5401_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5401_1[1] / Arg5401_1[2][1]));})
  : (((Shen.is_type(Arg5401_1, Shen.type_cons) && (Shen.is_type(Arg5401_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5401_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5401_0, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], []]]]]])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(~A ~A ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5401_1[1], false, Arg5401_3]), [Shen.fns['shen-tuple'], Arg5401_0, [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5401_1[2][1], false, Arg5401_3]), []]]]]);})
  : Shen.fail_obj)))))},
  4,
  [],
  "js-math-op"];






Shen.fns["js-equality-op"] = [Shen.type_func,
  function shen_user_lambda5404(Arg5403) {
  if (Arg5403.length < 3) return [Shen.type_func, shen_user_lambda5404, 3, Arg5403];
  var Arg5403_0 = Arg5403[0], Arg5403_1 = Arg5403[1], Arg5403_2 = Arg5403[2];
  return (((Shen.is_type(Arg5403_0, Shen.type_cons) && (Shen.is_type(Arg5403_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5403_0[2][2]) && ((typeof(Arg5403_0[1]) == 'number') && (typeof(Arg5403_0[2][1]) == 'number'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5403_0[1], Arg5403_0[2][1])));})
  : (((Shen.is_type(Arg5403_0, Shen.type_cons) && (Shen.is_type(Arg5403_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5403_0[2][2]) && ((typeof(Arg5403_0[1]) == 'string') && (typeof(Arg5403_0[2][1]) == 'string'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5403_0[1], Arg5403_0[2][1])));})
  : (((Shen.is_type(Arg5403_0, Shen.type_cons) && (Shen.is_type(Arg5403_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5403_0[2][2]) && (Shen.boolean$question$(Arg5403_0[1]) && Shen.boolean$question$(Arg5403_0[2][1]))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5403_0[1], Arg5403_0[2][1])));})
  : (((Shen.is_type(Arg5403_0, Shen.type_cons) && (Shen.is_type(Arg5403_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5403_0[2][1]) && Shen.empty$question$(Arg5403_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5403_0[1], []], Arg5403_1, Arg5403_2]);})
  : (((Shen.is_type(Arg5403_0, Shen.type_cons) && (Shen.empty$question$(Arg5403_0[1]) && (Shen.is_type(Arg5403_0[2], Shen.type_cons) && Shen.empty$question$(Arg5403_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall"], [[Shen.type_symbol, "empty?"], Arg5403_0[2], Arg5403_1, Arg5403_2]);})
  : (((Shen.is_type(Arg5403_0, Shen.type_cons) && (Shen.is_type(Arg5403_0[2], Shen.type_cons) && Shen.empty$question$(Arg5403_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall"], [[Shen.type_symbol, "="], Arg5403_0, Arg5403_1, Arg5403_2]);})
  : Shen.fail_obj))))))},
  3,
  [],
  "js-equality-op"];






Shen.fns["js-order-op"] = [Shen.type_func,
  function shen_user_lambda5406(Arg5405) {
  if (Arg5405.length < 4) return [Shen.type_func, shen_user_lambda5406, 4, Arg5405];
  var Arg5405_0 = Arg5405[0], Arg5405_1 = Arg5405[1], Arg5405_2 = Arg5405[2], Arg5405_3 = Arg5405[3];
  var R0, R1;
  return (((Shen.is_type(Arg5405_1, Shen.type_cons) && (Shen.is_type(Arg5405_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5405_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5405_0, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<="], []]]]]])))))
  ? ((R0 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5405_1[1], false, Arg5405_3])),
  (R1 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5405_1[2][1], false, Arg5405_3])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(~A ~A ~A)", [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], Arg5405_0, [Shen.fns['shen-tuple'], R1, []]]]]);}))
  : Shen.fail_obj)},
  4,
  [],
  "js-order-op"];






Shen.fns["js-logic-op"] = [Shen.type_func,
  function shen_user_lambda5408(Arg5407) {
  if (Arg5407.length < 4) return [Shen.type_func, shen_user_lambda5408, 4, Arg5407];
  var Arg5407_0 = Arg5407[0], Arg5407_1 = Arg5407[1], Arg5407_2 = Arg5407[2], Arg5407_3 = Arg5407[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5407_0)) && (Shen.is_type(Arg5407_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5407_1[1])) && Shen.empty$question$(Arg5407_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5407_0)) && (Shen.is_type(Arg5407_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5407_1[1])) && Shen.empty$question$(Arg5407_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5407_0)) && (Shen.is_type(Arg5407_1, Shen.type_cons) && Shen.empty$question$(Arg5407_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(!~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5407_1[1], false, Arg5407_3]), []]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5407_0)) && (Shen.is_type(Arg5407_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5407_1[1])) && (Shen.is_type(Arg5407_1[2], Shen.type_cons) && Shen.empty$question$(Arg5407_1[2][2]))))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5407_0)) && (Shen.is_type(Arg5407_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5407_1[1])) && (Shen.is_type(Arg5407_1[2], Shen.type_cons) && Shen.empty$question$(Arg5407_1[2][2]))))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5407_0)) && (Shen.is_type(Arg5407_1, Shen.type_cons) && (Shen.is_type(Arg5407_1[2], Shen.type_cons) && Shen.empty$question$(Arg5407_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(~A && ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5407_1[1], false, Arg5407_3]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5407_1[2][1], false, Arg5407_3]), []]]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5407_0)) && (Shen.is_type(Arg5407_1, Shen.type_cons) && (Shen.is_type(Arg5407_1[2], Shen.type_cons) && Shen.empty$question$(Arg5407_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(~A || ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5407_1[1], false, Arg5407_3]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5407_1[2][1], false, Arg5407_3]), []]]]);})
  : Shen.fail_obj)))))))},
  4,
  [],
  "js-logic-op"];






Shen.fns["js-emit-set*"] = [Shen.type_func,
  function shen_user_lambda5410(Arg5409) {
  if (Arg5409.length < 4) return [Shen.type_func, shen_user_lambda5410, 4, Arg5409];
  var Arg5409_0 = Arg5409[0], Arg5409_1 = Arg5409[1], Arg5409_2 = Arg5409[2], Arg5409_3 = Arg5409[3];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5409_3)))
  ? ((R0 = Shen.call(Shen.fns["js-esc-obj"], [Shen.str(Arg5409_0)])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(Shen.globals[~A] = ~A)", [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], Arg5409_1, []]]]);}))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5409_3)))
  ? ((R0 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5409_0, false, Arg5409_2])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(Shen.globals[~A[1]] = ~A)", [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], Arg5409_1, []]]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-emit-set*"]]);})))},
  4,
  [],
  "js-emit-set*"];






Shen.fns["js-emit-set"] = [Shen.type_func,
  function shen_user_lambda5412(Arg5411) {
  if (Arg5411.length < 3) return [Shen.type_func, shen_user_lambda5412, 3, Arg5411];
  var Arg5411_0 = Arg5411[0], Arg5411_1 = Arg5411[1], Arg5411_2 = Arg5411[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js-emit-set*"], [Arg5411_0, Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5411_1, false, Arg5411_2]), Arg5411_2, Shen.is_type(Arg5411_0, Shen.type_symbol)]);})},
  3,
  [],
  "js-emit-set"];






Shen.fns["js-emit-value"] = [Shen.type_func,
  function shen_user_lambda5414(Arg5413) {
  if (Arg5413.length < 3) return [Shen.type_func, shen_user_lambda5414, 3, Arg5413];
  var Arg5413_0 = Arg5413[0], Arg5413_1 = Arg5413[1], Arg5413_2 = Arg5413[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5413_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(Shen.globals[~A])", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-esc-obj"], [Shen.str(Arg5413_0)]), []]]);})
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5413_2)))
  ? ((R0 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5413_0, false, Arg5413_1])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(Shen.globals[~A[1]])", [Shen.fns['shen-tuple'], R0, []]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-emit-value"]]);})))},
  3,
  [],
  "js-emit-value"];






Shen.fns["js-basic-op"] = [Shen.type_func,
  function shen_user_lambda5416(Arg5415) {
  if (Arg5415.length < 4) return [Shen.type_func, shen_user_lambda5416, 4, Arg5415];
  var Arg5415_0 = Arg5415[0], Arg5415_1 = Arg5415[1], Arg5415_2 = Arg5415[2], Arg5415_3 = Arg5415[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("true", Arg5415_1[1])) && Shen.empty$question$(Arg5415_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("false", Arg5415_1[1])) && Shen.empty$question$(Arg5415_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.empty$question$(Arg5415_1[2]) && (typeof(Arg5415_1[1]) == 'string')))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["[Shen.type_symbol, ~A]", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-esc-obj"], [Arg5415_1[1]]), []]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && Shen.empty$question$(Arg5415_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall"], [[Shen.type_symbol, "intern"], Arg5415_1, Arg5415_2, Arg5415_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.is_type(Arg5415_1[2], Shen.type_cons) && Shen.empty$question$(Arg5415_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[1], false, Arg5415_3])),
  (R1 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[2][1], false, Arg5415_3])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["[Shen.type_cons, ~A, ~A]", [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], R1, []]]]);}))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.is_type(Arg5415_1[2], Shen.type_cons) && Shen.empty$question$(Arg5415_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[1], false, Arg5415_3])),
  (R1 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[2][1], false, Arg5415_3])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["[Shen.fns['shen-tuple'], ~A, ~A]", [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], R1, []]]]);}))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.is_type(Arg5415_1[2], Shen.type_cons) && Shen.empty$question$(Arg5415_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-set"], [Arg5415_1[1], Arg5415_1[2][1], Arg5415_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "value"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && Shen.empty$question$(Arg5415_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-value"], [Arg5415_1[1], Arg5415_3, Shen.is_type(Arg5415_1[1], Shen.type_symbol)]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "thaw"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && Shen.empty$question$(Arg5415_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-thaw"], [Arg5415_1[1], Arg5415_2, Arg5415_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && Shen.empty$question$(Arg5415_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[1], true, Arg5415_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "hd"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && Shen.empty$question$(Arg5415_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A[1]", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[1], false, Arg5415_3]), []]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tl"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && Shen.empty$question$(Arg5415_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A[2]", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[1], false, Arg5415_3]), []]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.is_type(Arg5415_1[2], Shen.type_cons) && Shen.empty$question$(Arg5415_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(~A + ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[1], false, Arg5415_3]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[2][1], false, Arg5415_3]), []]]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pos"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.is_type(Arg5415_1[2], Shen.type_cons) && Shen.empty$question$(Arg5415_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A[~A]", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[1], false, Arg5415_3]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[2][1], false, Arg5415_3]), []]]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "address->"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.is_type(Arg5415_1[2], Shen.type_cons) && (Shen.is_type(Arg5415_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg5415_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.absvector_set(~A, ~A, ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[1], false, Arg5415_3]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[2][1], false, Arg5415_3]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[2][2][1], false, Arg5415_3]), []]]]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-address"], Arg5415_0)) && (Shen.is_type(Arg5415_1, Shen.type_cons) && (Shen.is_type(Arg5415_1[2], Shen.type_cons) && Shen.empty$question$(Arg5415_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.absvector_ref(~A, ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[1], false, Arg5415_3]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5415_1[2][1], false, Arg5415_3]), []]]]);})
  : Shen.fail_obj))))))))))))))))},
  4,
  [],
  "js-basic-op"];






Shen.fns["js-int-funcall*"] = [Shen.type_func,
  function shen_user_lambda5418(Arg5417) {
  if (Arg5417.length < 5) return [Shen.type_func, shen_user_lambda5418, 5, Arg5417];
  var Arg5417_0 = Arg5417[0], Arg5417_1 = Arg5417[1], Arg5417_2 = Arg5417[2], Arg5417_3 = Arg5417[3], Arg5417_4 = Arg5417[4];
  var R0;
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg5417_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5417_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall*"], [Arg5417_0, Arg5417_1, false, false, Arg5417_4]);})
  : (((Shen.unwind_tail(Shen.$eq$(true, Arg5417_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5417_3))))
  ? ((R0 = Shen.call(Shen.fns["js-int-funcall*"], [Arg5417_0, Arg5417_1, false, false, Arg5417_4])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.unwind_tail(~A)", [Shen.fns['shen-tuple'], R0, []]]);}))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5417_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5417_3))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5420(Arg5419) {
  if (Arg5419.length < 2) return [Shen.type_func, shen_user_lambda5420, 2, Arg5419];
  var Arg5419_0 = Arg5419[0], Arg5419_1 = Arg5419[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5419_1, false, Arg5419_0]);})},
  2,
  [Arg5417_4]], Arg5417_1])),
  (R0 = Shen.call(Shen.fns["js-str-join"], [R0, ", "])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A(~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-intfunc-name"], [Arg5417_0]), [Shen.fns['shen-tuple'], R0, []]]]);}))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5417_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5417_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-tail-call-ret"], [Shen.call(Shen.fns["js-int-funcall*"], [Arg5417_0, Arg5417_1, false, false, Arg5417_4])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-int-funcall*"]]);})))))},
  5,
  [],
  "js-int-funcall*"];






Shen.fns["js-int-funcall"] = [Shen.type_func,
  function shen_user_lambda5422(Arg5421) {
  if (Arg5421.length < 4) return [Shen.type_func, shen_user_lambda5422, 4, Arg5421];
  var Arg5421_0 = Arg5421[0], Arg5421_1 = Arg5421[1], Arg5421_2 = Arg5421[2], Arg5421_3 = Arg5421[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["element?"], [Arg5421_0, (Shen.globals["js-tail-internals"])])),
  (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall*"], [Arg5421_0, Arg5421_1, R0, Arg5421_2, Arg5421_3]);}))},
  4,
  [],
  "js-int-funcall"];






Shen.fns["js-int-curry"] = [Shen.type_func,
  function shen_user_lambda5424(Arg5423) {
  if (Arg5423.length < 4) return [Shen.type_func, shen_user_lambda5424, 4, Arg5423];
  var Arg5423_0 = Arg5423[0], Arg5423_1 = Arg5423[1], Arg5423_2 = Arg5423[2], Arg5423_3 = Arg5423[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["intmake-string"], ["~A[1]", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-func-name"], [Arg5423_0]), []]])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5426(Arg5425) {
  if (Arg5425.length < 2) return [Shen.type_func, shen_user_lambda5426, 2, Arg5425];
  var Arg5425_0 = Arg5425[0], Arg5425_1 = Arg5425[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5425_1, false, Arg5425_0]);})},
  2,
  [Arg5423_3]], Arg5423_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js-emit-func-obj"], [Shen.call(Shen.fns["length"], [Arg5423_1]), R0, R1, []]);}))},
  4,
  [],
  "js-int-curry"];






Shen.fns["js-internal-op*"] = [Shen.type_func,
  function shen_user_lambda5428(Arg5427) {
  if (Arg5427.length < 5) return [Shen.type_func, shen_user_lambda5428, 5, Arg5427];
  var Arg5427_0 = Arg5427[0], Arg5427_1 = Arg5427[1], Arg5427_2 = Arg5427[2], Arg5427_3 = Arg5427[3], Arg5427_4 = Arg5427[4];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg5427_1]), Shen.call(Shen.fns["length"], [Arg5427_2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-int-funcall"], [Arg5427_0, Arg5427_2, Arg5427_3, Arg5427_4]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js-int-curry"], [Arg5427_0, Arg5427_1, Arg5427_2, Arg5427_4]);}))},
  5,
  [],
  "js-internal-op*"];






Shen.fns["js-internal-op"] = [Shen.type_func,
  function shen_user_lambda5430(Arg5429) {
  if (Arg5429.length < 4) return [Shen.type_func, shen_user_lambda5430, 4, Arg5429];
  var Arg5429_0 = Arg5429[0], Arg5429_1 = Arg5429[1], Arg5429_2 = Arg5429[2], Arg5429_3 = Arg5429[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js-int-func-args"], [Arg5429_0])),
  Shen.call(Shen.fns["js-intfunc-name"], [Arg5429_0]),
  ((Shen.empty$question$(R0))
  ? Shen.fail_obj
  : (function() {
  return Shen.call_tail(Shen.fns["js-internal-op*"], [Arg5429_0, R0, Arg5429_1, Arg5429_2, Arg5429_3]);})))},
  4,
  [],
  "js-internal-op"];






Shen.fns["js-emit-do"] = [Shen.type_func,
  function shen_user_lambda5432(Arg5431) {
  if (Arg5431.length < 4) return [Shen.type_func, shen_user_lambda5432, 4, Arg5431];
  var Arg5431_0 = Arg5431[0], Arg5431_1 = Arg5431[1], Arg5431_2 = Arg5431[2], Arg5431_3 = Arg5431[3];
  var R0, R1;
  return (((Shen.is_type(Arg5431_0, Shen.type_cons) && Shen.empty$question$(Arg5431_0[2])))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5434(Arg5433) {
  if (Arg5433.length < 2) return [Shen.type_func, shen_user_lambda5434, 2, Arg5433];
  var Arg5433_0 = Arg5433[0], Arg5433_1 = Arg5433[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5433_1, false, Arg5433_0]);})},
  2,
  [Arg5431_2]], Shen.call(Shen.fns["reverse"], [Arg5431_3])])),
  (R1 = Shen.call(Shen.fns["intmake-string"], [",~%  ", []])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(~A,~%  ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-str-join"], [R0, R1]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5431_0[1], Arg5431_1, Arg5431_2]), []]]]);}))
  : ((Shen.is_type(Arg5431_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-do"], [Arg5431_0[2], Arg5431_1, Arg5431_2, [Shen.type_cons, Arg5431_0[1], Arg5431_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-emit-do"]]);})))},
  4,
  [],
  "js-emit-do"];






Shen.fns["js-std-op"] = [Shen.type_func,
  function shen_user_lambda5436(Arg5435) {
  if (Arg5435.length < 4) return [Shen.type_func, shen_user_lambda5436, 4, Arg5435];
  var Arg5435_0 = Arg5435[0], Arg5435_1 = Arg5435[1], Arg5435_2 = Arg5435[2], Arg5435_3 = Arg5435[3];
  var R0, R1;
  return ((R0 = (new Shen.Freeze([Arg5435_0, Arg5435_1, Arg5435_2, Arg5435_3], function(Arg5437) {
  var Arg5437_0 = Arg5437[0], Arg5437_1 = Arg5437[1], Arg5437_2 = Arg5437[2], Arg5437_3 = Arg5437[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js-math-op"], [Arg5437_0, Arg5437_1, Arg5437_2, Arg5437_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5437_0, Arg5437_1, Arg5437_2, Arg5437_3], function(Arg5439) {
  var Arg5439_0 = Arg5439[0], Arg5439_1 = Arg5439[1], Arg5439_2 = Arg5439[2], Arg5439_3 = Arg5439[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js-logic-op"], [Arg5439_0, Arg5439_1, Arg5439_2, Arg5439_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js-order-op"], [Arg5439_0, Arg5439_1, Arg5439_2, Arg5439_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js-basic-op"], [Arg5439_0, Arg5439_1, Arg5439_2, Arg5439_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5439_0, Arg5439_1, Arg5439_2, Arg5439_3], function(Arg5441) {
  var Arg5441_0 = Arg5441[0], Arg5441_1 = Arg5441[1], Arg5441_2 = Arg5441[2], Arg5441_3 = Arg5441[3];
  return (function() {
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "trap-error"], Arg5441_0)) && (Shen.is_type(Arg5441_1, Shen.type_cons) && (Shen.is_type(Arg5441_1[2], Shen.type_cons) && Shen.empty$question$(Arg5441_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-trap-error"], [Arg5441_1[1], Arg5441_1[2][1], Arg5441_2, Arg5441_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg5441_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-do"], [Arg5441_1, Arg5441_2, Arg5441_3, []]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5441_0)) && Shen.empty$question$(Arg5441_1)))
  ? "Shen.fail_obj"
  : Shen.fail_obj)));})}))),
  ((Shen.is_type(Arg5439_0, Shen.type_symbol))
  ? ((R3 = Shen.call(Shen.fns["js-internal-op"], [Arg5439_0, Arg5439_1, Arg5439_2, Arg5439_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4))
  : R4))
  : R4));})}))),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg5437_0)))
  ? ((R3 = Shen.call(Shen.fns["js-equality-op"], [Arg5437_1, Arg5437_2, Arg5437_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4));})}))),
  (((Shen.is_type(Arg5435_1, Shen.type_cons) && Shen.empty$question$(Arg5435_1[2])))
  ? ((R1 = Shen.call(Shen.fns["js-predicate-op"], [Arg5435_0, Arg5435_1[1], Arg5435_2, Arg5435_3])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))},
  4,
  [],
  "js-std-op"];






Shen.fns["js-mk-regs-aux"] = [Shen.type_func,
  function shen_user_lambda5444(Arg5443) {
  if (Arg5443.length < 5) return [Shen.type_func, shen_user_lambda5444, 5, Arg5443];
  var Arg5443_0 = Arg5443[0], Arg5443_1 = Arg5443[1], Arg5443_2 = Arg5443[2], Arg5443_3 = Arg5443[3], Arg5443_4 = Arg5443[4];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5443_1, Arg5443_0)))
  ? Arg5443_4
  : ((R0 = Shen.call(Shen.fns["intmake-string"], ["~A~A~A~A", [Shen.fns['shen-tuple'], Arg5443_4, [Shen.fns['shen-tuple'], Arg5443_3, [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-context-varname"], [Arg5443_2]), [Shen.fns['shen-tuple'], Arg5443_0, []]]]]])),
  (function() {
  return Shen.call_tail(Shen.fns["js-mk-regs-aux"], [(Arg5443_0 + 1), Arg5443_1, Arg5443_2, ", ", R0]);})))},
  5,
  [],
  "js-mk-regs-aux"];






Shen.fns["js-mk-regs"] = [Shen.type_func,
  function shen_user_lambda5446(Arg5445) {
  if (Arg5445.length < 1) return [Shen.type_func, shen_user_lambda5446, 1, Arg5445];
  var Arg5445_0 = Arg5445[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js-mk-regs-aux"], [0, Shen.call(Shen.fns["js-context-nregs"], [Arg5445_0]), Arg5445_0, "var ", ""]);})},
  1,
  [],
  "js-mk-regs"];






Shen.fns["js-mk-regs-str"] = [Shen.type_func,
  function shen_user_lambda5448(Arg5447) {
  if (Arg5447.length < 1) return [Shen.type_func, shen_user_lambda5448, 1, Arg5447];
  var Arg5447_0 = Arg5447[0];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["js-context-nregs"], [Arg5447_0]), 0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A;~%  ", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-mk-regs"], [Arg5447_0]), []]]);}))},
  1,
  [],
  "js-mk-regs-str"];






Shen.fns["js-mk-args-str-aux"] = [Shen.type_func,
  function shen_user_lambda5450(Arg5449) {
  if (Arg5449.length < 5) return [Shen.type_func, shen_user_lambda5450, 5, Arg5449];
  var Arg5449_0 = Arg5449[0], Arg5449_1 = Arg5449[1], Arg5449_2 = Arg5449[2], Arg5449_3 = Arg5449[3], Arg5449_4 = Arg5449[4];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5449_1, Arg5449_0)))
  ? Arg5449_4
  : ((R0 = "~A~A~A = ~A[~A]"),
  (R1 = Shen.call(Shen.fns["js-context-argname"], [Arg5449_2])),
  (R2 = Shen.call(Shen.fns["js-arg-name"], [Arg5449_1, Arg5449_2])),
  (R2 = Shen.call(Shen.fns["intmake-string"], [R0, [Shen.fns['shen-tuple'], Arg5449_4, [Shen.fns['shen-tuple'], Arg5449_3, [Shen.fns['shen-tuple'], R2, [Shen.fns['shen-tuple'], R1, [Shen.fns['shen-tuple'], Arg5449_1, []]]]]]])),
  (function() {
  return Shen.call_tail(Shen.fns["js-mk-args-str-aux"], [Arg5449_0, (Arg5449_1 + 1), Arg5449_2, ", ", R2]);})))},
  5,
  [],
  "js-mk-args-str-aux"];






Shen.fns["js-mk-args-str"] = [Shen.type_func,
  function shen_user_lambda5452(Arg5451) {
  if (Arg5451.length < 2) return [Shen.type_func, shen_user_lambda5452, 2, Arg5451];
  var Arg5451_0 = Arg5451[0], Arg5451_1 = Arg5451[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5451_0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A;~%  ", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-mk-args-str-aux"], [Arg5451_0, 0, Arg5451_1, "var ", ""]), []]]);}))},
  2,
  [],
  "js-mk-args-str"];






Shen.fns["js-emit-func-obj"] = [Shen.type_func,
  function shen_user_lambda5454(Arg5453) {
  if (Arg5453.length < 4) return [Shen.type_func, shen_user_lambda5454, 4, Arg5453];
  var Arg5453_0 = Arg5453[0], Arg5453_1 = Arg5453[1], Arg5453_2 = Arg5453[2], Arg5453_3 = Arg5453[3];
  var R0, R1, R2, R3;
  return ((((Shen.unwind_tail(Shen.$eq$(Arg5453_3, "")) || Shen.empty$question$(Arg5453_3)))
  ? (R0 = "")
  : (R0 = Shen.call(Shen.fns["intmake-string"], [",~%  ~A", [Shen.fns['shen-tuple'], Arg5453_3, []]]))),
  (R1 = "Shen.type_func"),
  (R2 = Shen.call(Shen.fns["js-str-join"], [Arg5453_2, ", "])),
  (R3 = "[~A,~%  ~A,~%  ~A,~%  [~A]~A]"),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], [R3, [Shen.fns['shen-tuple'], R1, [Shen.fns['shen-tuple'], Arg5453_1, [Shen.fns['shen-tuple'], Arg5453_0, [Shen.fns['shen-tuple'], R2, [Shen.fns['shen-tuple'], R0, []]]]]]]);}))},
  4,
  [],
  "js-emit-func-obj"];






Shen.fns["js-emit-func-closure"] = [Shen.type_func,
  function shen_user_lambda5456(Arg5455) {
  if (Arg5455.length < 3) return [Shen.type_func, shen_user_lambda5456, 3, Arg5455];
  var Arg5455_0 = Arg5455[0], Arg5455_1 = Arg5455[1], Arg5455_2 = Arg5455[2];
  var R0, R1;
  return ((R0 = "[~A, ~A, ~A, ~A]"),
  (R1 = "Shen.type_func"),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], [R0, [Shen.fns['shen-tuple'], R1, [Shen.fns['shen-tuple'], Arg5455_1, [Shen.fns['shen-tuple'], Arg5455_0, [Shen.fns['shen-tuple'], Arg5455_2, []]]]]]);}))},
  3,
  [],
  "js-emit-func-closure"];






Shen.fns["js-emit-func-body"] = [Shen.type_func,
  function shen_user_lambda5458(Arg5457) {
  if (Arg5457.length < 5) return [Shen.type_func, shen_user_lambda5458, 5, Arg5457];
  var Arg5457_0 = Arg5457[0], Arg5457_1 = Arg5457[1], Arg5457_2 = Arg5457[2], Arg5457_3 = Arg5457[3], Arg5457_4 = Arg5457[4];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js-func-name"], [Arg5457_1])),
  ((Shen.empty$question$(Arg5457_0))
  ? []
  : Shen.call(Shen.fns["js-esc-obj"], [Shen.str(Arg5457_0)])),
  (R1 = Shen.call(Shen.fns["js-context-argname"], [Arg5457_4])),
  (R2 = Shen.call(Shen.fns["js-emit-func-closure"], [Arg5457_2, R0, R1])),
  (R2 = Shen.call(Shen.fns["intmake-string"], ["if (~A.length < ~A) return ~A", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-context-argname"], [Arg5457_4]), [Shen.fns['shen-tuple'], Arg5457_2, [Shen.fns['shen-tuple'], R2, []]]]])),
  (R3 = "function ~A(~A) {~%  ~A;~%  ~A~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5457_3, true, Arg5457_4])),
  (R5 = Shen.call(Shen.fns["js-mk-regs-str"], [Arg5457_4])),
  (R6 = Shen.call(Shen.fns["js-mk-args-str"], [Arg5457_2, Arg5457_4])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], [R3, [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], R1, [Shen.fns['shen-tuple'], R2, [Shen.fns['shen-tuple'], R6, [Shen.fns['shen-tuple'], R5, [Shen.fns['shen-tuple'], R4, []]]]]]]]);}))},
  5,
  [],
  "js-emit-func-body"];






Shen.fns["js-emit-mk-func"] = [Shen.type_func,
  function shen_user_lambda5460(Arg5459) {
  if (Arg5459.length < 4) return [Shen.type_func, shen_user_lambda5460, 4, Arg5459];
  var Arg5459_0 = Arg5459[0], Arg5459_1 = Arg5459[1], Arg5459_2 = Arg5459[2], Arg5459_3 = Arg5459[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["js-esc-obj"], [Shen.str(Arg5459_0)])),
  (R1 = Shen.call(Shen.fns["js-func-name"], [Arg5459_0])),
  (R2 = Shen.call(Shen.fns["length"], [Arg5459_1])),
  (R3 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R3 = Shen.call(Shen.fns["js-emit-func-body"], [R1, R3, R2, Arg5459_2, Arg5459_3])),
  (R3 = Shen.call(Shen.fns["js-emit-func-obj"], [R2, R3, [], R0])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.fns[~A] = ~A;~%", [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], R3, []]]]);}))},
  4,
  [],
  "js-emit-mk-func"];






Shen.fns["js-emit-mk-closure"] = [Shen.type_func,
  function shen_user_lambda5462(Arg5461) {
  if (Arg5461.length < 4) return [Shen.type_func, shen_user_lambda5462, 4, Arg5461];
  var Arg5461_0 = Arg5461[0], Arg5461_1 = Arg5461[1], Arg5461_2 = Arg5461[2], Arg5461_3 = Arg5461[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["js-context-toplevel"], [Arg5461_3])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R2 = (Shen.call(Shen.fns["length"], [Arg5461_1]) + Shen.call(Shen.fns["length"], [Arg5461_0]))),
  (R1 = Shen.call(Shen.fns["js-mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  (R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R0 = Shen.call(Shen.fns["js-emit-func-body"], [[], R0, R2, Arg5461_2, R1])),
  Shen.call(Shen.fns["js-context-toplevel->"], [Arg5461_3, Shen.call(Shen.fns["js-context-toplevel"], [R1])]),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5464(Arg5463) {
  if (Arg5463.length < 2) return [Shen.type_func, shen_user_lambda5464, 2, Arg5463];
  var Arg5463_0 = Arg5463[0], Arg5463_1 = Arg5463[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5463_1, false, Arg5463_0]);})},
  2,
  [Arg5461_3]], Arg5461_1])),
  (function() {
  return Shen.call_tail(Shen.fns["js-emit-func-obj"], [R2, R0, R1, []]);}))},
  4,
  [],
  "js-emit-mk-closure"];






Shen.fns["js-emit-freeze"] = [Shen.type_func,
  function shen_user_lambda5466(Arg5465) {
  if (Arg5465.length < 3) return [Shen.type_func, shen_user_lambda5466, 3, Arg5465];
  var Arg5465_0 = Arg5465[0], Arg5465_1 = Arg5465[1], Arg5465_2 = Arg5465[2];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["js-context-toplevel"], [Arg5465_2])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R1 = Shen.call(Shen.fns["js-mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]]),
  Shen.call(Shen.fns["js-context-toplevel->"], [Arg5465_2, Shen.call(Shen.fns["js-context-toplevel"], [R1])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5468(Arg5467) {
  if (Arg5467.length < 2) return [Shen.type_func, shen_user_lambda5468, 2, Arg5467];
  var Arg5467_0 = Arg5467[0], Arg5467_1 = Arg5467[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5467_1, false, Arg5467_0]);})},
  2,
  [Arg5465_2]], Arg5465_0])),
  (R2 = Shen.call(Shen.fns["js-str-join"], [R0, ", "])),
  (R3 = Shen.call(Shen.fns["js-tail-call-ret"], [Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5465_1, true, R1])])),
  (R0 = Shen.call(Shen.fns["js-mk-args-str"], [Shen.call(Shen.fns["length"], [R0]), R1])),
  (R4 = "function(~A) {~%  ~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["intmake-string"], [R4, [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-context-argname"], [R1]), [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], R3, []]]]])),
  (R3 = "(new Shen.Freeze([~A], ~A))"),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], [R3, [Shen.fns['shen-tuple'], R2, [Shen.fns['shen-tuple'], R4, []]]]);}))},
  3,
  [],
  "js-emit-freeze"];






Shen.fns["js-emit-thaw"] = [Shen.type_func,
  function shen_user_lambda5470(Arg5469) {
  if (Arg5469.length < 3) return [Shen.type_func, shen_user_lambda5470, 3, Arg5469];
  var Arg5469_0 = Arg5469[0], Arg5469_1 = Arg5469[1], Arg5469_2 = Arg5469[2];
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5469_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.unwind_tail(~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-emit-thaw"], [Arg5469_0, true, Arg5469_2]), []]]);})
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5469_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.thaw(~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5469_0, false, Arg5469_2]), []]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-emit-thaw"]]);})))},
  3,
  [],
  "js-emit-thaw"];






Shen.fns["js-emit-get-arg"] = [Shen.type_func,
  function shen_user_lambda5472(Arg5471) {
  if (Arg5471.length < 2) return [Shen.type_func, shen_user_lambda5472, 2, Arg5471];
  var Arg5471_0 = Arg5471[0], Arg5471_1 = Arg5471[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-arg-name"], [Arg5471_0, Arg5471_1]);})},
  2,
  [],
  "js-emit-get-arg"];






Shen.fns["js-emit-set-reg"] = [Shen.type_func,
  function shen_user_lambda5474(Arg5473) {
  if (Arg5473.length < 3) return [Shen.type_func, shen_user_lambda5474, 3, Arg5473];
  var Arg5473_0 = Arg5473[0], Arg5473_1 = Arg5473[1], Arg5473_2 = Arg5473[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5473_1, false, Arg5473_2])),
  Shen.call(Shen.fns["js-context-nregs->"], [Arg5473_2, Shen.call(Shen.fns["js-max"], [(Arg5473_0 + 1), Shen.call(Shen.fns["js-context-nregs"], [Arg5473_2])])]),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(~A~A = ~A)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-context-varname"], [Arg5473_2]), [Shen.fns['shen-tuple'], Arg5473_0, [Shen.fns['shen-tuple'], R0, []]]]]);}))},
  3,
  [],
  "js-emit-set-reg"];






Shen.fns["js-emit-get-reg"] = [Shen.type_func,
  function shen_user_lambda5476(Arg5475) {
  if (Arg5475.length < 2) return [Shen.type_func, shen_user_lambda5476, 2, Arg5475];
  var Arg5475_0 = Arg5475[0], Arg5475_1 = Arg5475[1];
  return (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A~A", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-context-varname"], [Arg5475_1]), [Shen.fns['shen-tuple'], Arg5475_0, []]]]);})},
  2,
  [],
  "js-emit-get-reg"];






Shen.fns["js-func-arg"] = [Shen.type_func,
  function shen_user_lambda5478(Arg5477) {
  if (Arg5477.length < 2) return [Shen.type_func, shen_user_lambda5478, 2, Arg5477];
  var Arg5477_0 = Arg5477[0], Arg5477_1 = Arg5477[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5477_1, false, Arg5477_0]);})},
  2,
  [],
  "js-func-arg"];






Shen.fns["js-emit-funcall*"] = [Shen.type_func,
  function shen_user_lambda5480(Arg5479) {
  if (Arg5479.length < 4) return [Shen.type_func, shen_user_lambda5480, 4, Arg5479];
  var Arg5479_0 = Arg5479[0], Arg5479_1 = Arg5479[1], Arg5479_2 = Arg5479[2], Arg5479_3 = Arg5479[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5479_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5482(Arg5481) {
  if (Arg5481.length < 2) return [Shen.type_func, shen_user_lambda5482, 2, Arg5481];
  var Arg5481_0 = Arg5481[0], Arg5481_1 = Arg5481[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5481_1, false, Arg5481_0]);})},
  2,
  [Arg5479_3]], Arg5479_1])),
  (R0 = Shen.call(Shen.fns["js-str-join"], [R0, ", "])),
  (R1 = "Shen.call_tail"),
  (function() {
  return Shen.call_tail(Shen.fns["js-tail-call-ret"], [Shen.call(Shen.fns["intmake-string"], ["~A(~A, [~A])", [Shen.fns['shen-tuple'], R1, [Shen.fns['shen-tuple'], Arg5479_0, [Shen.fns['shen-tuple'], R0, []]]]])]);}))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5479_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5484(Arg5483) {
  if (Arg5483.length < 2) return [Shen.type_func, shen_user_lambda5484, 2, Arg5483];
  var Arg5483_0 = Arg5483[0], Arg5483_1 = Arg5483[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5483_1, false, Arg5483_0]);})},
  2,
  [Arg5479_3]], Arg5479_1])),
  (R0 = Shen.call(Shen.fns["js-str-join"], [R0, ", "])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.call(~A, [~A])", [Shen.fns['shen-tuple'], Arg5479_0, [Shen.fns['shen-tuple'], R0, []]]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-emit-funcall*"]]);})))},
  4,
  [],
  "js-emit-funcall*"];






Shen.fns["js-emit-funcall"] = [Shen.type_func,
  function shen_user_lambda5486(Arg5485) {
  if (Arg5485.length < 4) return [Shen.type_func, shen_user_lambda5486, 4, Arg5485];
  var Arg5485_0 = Arg5485[0], Arg5485_1 = Arg5485[1], Arg5485_2 = Arg5485[2], Arg5485_3 = Arg5485[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js-esc-obj"], [Shen.str(Arg5485_0)])),
  (R0 = Shen.call(Shen.fns["intmake-string"], ["Shen.fns[~A]", [Shen.fns['shen-tuple'], R0, []]])),
  (function() {
  return Shen.call_tail(Shen.fns["js-emit-funcall*"], [R0, Arg5485_1, Arg5485_2, Arg5485_3]);}))},
  4,
  [],
  "js-emit-funcall"];






Shen.fns["js-js-from-kl-expr"] = [Shen.type_func,
  function shen_user_lambda5488(Arg5487) {
  if (Arg5487.length < 3) return [Shen.type_func, shen_user_lambda5488, 3, Arg5487];
  var Arg5487_0 = Arg5487[0], Arg5487_1 = Arg5487[1], Arg5487_2 = Arg5487[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js-js-from-kl-expr*"], [Arg5487_0, Arg5487_1, Arg5487_2])),
  (((typeof(R0) == 'string'))
  ? R0
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["ERROR: expr ~R => ~R", [Shen.fns['shen-tuple'], Arg5487_0, [Shen.fns['shen-tuple'], R0, []]]]);})))},
  3,
  [],
  "js-js-from-kl-expr"];






Shen.fns["js-js-from-kl-expr*"] = [Shen.type_func,
  function shen_user_lambda5490(Arg5489) {
  if (Arg5489.length < 3) return [Shen.type_func, shen_user_lambda5490, 3, Arg5489];
  var Arg5489_0 = Arg5489[0], Arg5489_1 = Arg5489[1], Arg5489_2 = Arg5489[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg5489_0))
  ? "[]"
  : (((typeof(Arg5489_0) == 'number'))
  ? (function() {
  return Shen.str(Arg5489_0);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg5489_0, Shen.fail_obj)))
  ? "shen_fail_obj"
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5489_0)))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5489_0)))
  ? "false"
  : ((Shen.is_type(Arg5489_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["[Shen.type_symbol, ~S]", [Shen.fns['shen-tuple'], Shen.str(Arg5489_0), []]]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bar!"], Arg5489_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["[Shen.type_symbol, ~S]", [Shen.fns['shen-tuple'], "|", []]]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["[Shen.type_cons, ~A, ~A]", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5489_0[2][1], false, Arg5489_2]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5489_0[2][2][1], false, Arg5489_2]), []]]]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5489_0[2][1], Arg5489_1, Arg5489_2]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg5489_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-cond"], [Arg5489_0[2], Arg5489_1, Arg5489_2]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-cond"], [[Shen.type_cons, [Shen.type_cons, Arg5489_0[2][1], [Shen.type_cons, Arg5489_0[2][2][1], []]], [Shen.type_cons, [Shen.type_cons, true, Arg5489_0[2][2][2]], []]], Arg5489_1, Arg5489_2]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["Wrong freeze code!", []]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-freeze"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-freeze"], [Arg5489_0[2][2][1], Arg5489_0[2][2][2][1], Arg5489_2]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-arg"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-get-arg"], [Arg5489_0[2][1], Arg5489_2]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-reg"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-get-reg"], [Arg5489_0[2][1], Arg5489_2]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-set-reg!"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-set-reg"], [Arg5489_0[2][1], Arg5489_0[2][2][1], Arg5489_2]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-func"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-mk-func"], [Arg5489_0[2][1], Arg5489_0[2][2][1], Arg5489_0[2][2][2][2][1], Arg5489_2]);})
  : (((Shen.is_type(Arg5489_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-closure"], Arg5489_0[1])) && (Shen.is_type(Arg5489_0[2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5489_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5489_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-mk-closure"], [Arg5489_0[2][1], Arg5489_0[2][2][2][1], Arg5489_0[2][2][2][2][1], Arg5489_2]);})
  : ((R0 = (new Shen.Freeze([Arg5489_0, Arg5489_1, Arg5489_2], function(Arg5491) {
  var Arg5491_0 = Arg5491[0], Arg5491_1 = Arg5491[1], Arg5491_2 = Arg5491[2];
  return (function() {
  return (((Shen.is_type(Arg5491_0, Shen.type_cons) && Shen.is_type(Arg5491_0[1], Shen.type_cons)))
  ? ((R3 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5491_0[1], false, Arg5491_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js-emit-funcall*"], [R3, Arg5491_0[2], Arg5491_1, Arg5491_2]);}))
  : ((Shen.is_type(Arg5491_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-emit-funcall"], [Arg5491_0[1], Arg5491_0[2], Arg5491_1, Arg5491_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js-esc-obj"], [Arg5491_0]);})));})}))),
  ((Shen.is_type(Arg5489_0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["js-std-op"], [Arg5489_0[1], Arg5489_0[2], Arg5489_1, Arg5489_2])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))))))))))))))))))))},
  3,
  [],
  "js-js-from-kl-expr*"];






Shen.fns["js-js-from-kl-toplevel-expr"] = [Shen.type_func,
  function shen_user_lambda5494(Arg5493) {
  if (Arg5493.length < 2) return [Shen.type_func, shen_user_lambda5494, 2, Arg5493];
  var Arg5493_0 = Arg5493[0], Arg5493_1 = Arg5493[1];
  var R0, R1;
  return (((typeof(Arg5493_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A;~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5493_0, false, Arg5493_1]), []]]);})
  : ((R0 = Shen.call(Shen.fns["js-js-from-kl-expr"], [Arg5493_0, false, Arg5493_1])),
  (R1 = Shen.call(Shen.fns["js-mk-regs-str"], [Arg5493_1])),
  (((Shen.call(Shen.fns["js-context-nregs"], [Arg5493_1]) > 0))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["((function() {~%  ~Areturn ~A})());~%", [Shen.fns['shen-tuple'], R1, [Shen.fns['shen-tuple'], R0, []]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A;", [Shen.fns['shen-tuple'], R0, []]]);}))))},
  2,
  [],
  "js-js-from-kl-toplevel-expr"];






Shen.fns["js-js-from-kl-toplevel"] = [Shen.type_func,
  function shen_user_lambda5496(Arg5495) {
  if (Arg5495.length < 3) return [Shen.type_func, shen_user_lambda5496, 3, Arg5495];
  var Arg5495_0 = Arg5495[0], Arg5495_1 = Arg5495[1], Arg5495_2 = Arg5495[2];
  return (((Shen.is_type(Arg5495_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5495_0[1])) && (Shen.is_type(Arg5495_0[2], Shen.type_cons) && (Shen.is_type(Arg5495_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5495_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A;~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-emit-set"], [Arg5495_0[2][1], Arg5495_0[2][2][1], Arg5495_2]), []]]);})
  : (((Shen.is_type(Arg5495_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-func"], Arg5495_0[1])) && (Shen.is_type(Arg5495_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5495_1)) && Shen.call(Shen.fns["js-int-func?"], [Arg5495_0[2][1]]))))))
  ? ""
  : (((Shen.is_type(Arg5495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-func"], Arg5495_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-expr"], [Arg5495_0, true, Arg5495_2]);})
  : (((Shen.is_type(Arg5495_0, Shen.type_cons) && (Shen.empty$question$(Arg5495_0[2]) && Shen.is_type(Arg5495_0[1], Shen.type_symbol))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Shen.call_toplevel(~A)~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-esc-obj"], [Shen.str(Arg5495_0[1])]), []]]);})
  : (((Shen.is_type(Arg5495_0, Shen.type_cons) && Shen.empty$question$(Arg5495_0[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["Unexpected toplevel expression: ~R~%", [Shen.fns['shen-tuple'], Arg5495_0[1], []]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-toplevel-expr"], [Arg5495_0, Arg5495_2]);}))))))},
  3,
  [],
  "js-js-from-kl-toplevel"];






Shen.fns["js-js-from-kl-toplevel-forms"] = [Shen.type_func,
  function shen_user_lambda5498(Arg5497) {
  if (Arg5497.length < 4) return [Shen.type_func, shen_user_lambda5498, 4, Arg5497];
  var Arg5497_0 = Arg5497[0], Arg5497_1 = Arg5497[1], Arg5497_2 = Arg5497[2], Arg5497_3 = Arg5497[3];
  var R0;
  return ((Shen.empty$question$(Arg5497_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A~%~A~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-context-toplevel"], [Arg5497_2]), [Shen.fns['shen-tuple'], Arg5497_3, []]]]);})
  : ((Shen.is_type(Arg5497_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js-js-from-kl-toplevel"], [Arg5497_0[1], Arg5497_1, Arg5497_2])),
  (R0 = Shen.call(Shen.fns["intmake-string"], ["~A~A~%", [Shen.fns['shen-tuple'], Arg5497_3, [Shen.fns['shen-tuple'], R0, []]]])),
  (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-toplevel-forms"], [Arg5497_0[2], Arg5497_1, Arg5497_2, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-js-from-kl-toplevel-forms"]]);})))},
  4,
  [],
  "js-js-from-kl-toplevel-forms"];






Shen.fns["js-js-from-kl*"] = [Shen.type_func,
  function shen_user_lambda5500(Arg5499) {
  if (Arg5499.length < 3) return [Shen.type_func, shen_user_lambda5500, 3, Arg5499];
  var Arg5499_0 = Arg5499[0], Arg5499_1 = Arg5499[1], Arg5499_2 = Arg5499[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-toplevel"], [Arg5499_0, Arg5499_1, Arg5499_2]);})},
  3,
  [],
  "js-js-from-kl*"];






Shen.fns["js-from-kl"] = [Shen.type_func,
  function shen_user_lambda5502(Arg5501) {
  if (Arg5501.length < 1) return [Shen.type_func, shen_user_lambda5502, 1, Arg5501];
  var Arg5501_0 = Arg5501[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["js-mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (R1 = Shen.call(Shen.fns["reg-kl-walk"], [[Shen.type_cons, Arg5501_0, []], false])),
  (R1 = Shen.call(Shen.fns["js-js-from-kl-toplevel-forms"], [R1, (Shen.globals["js-skip-internals"]), R0, ""])),
  (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~A~%~A~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["js-context-toplevel"], [R0]), [Shen.fns['shen-tuple'], R1, []]]]);}))},
  1,
  [],
  "js-from-kl"];






Shen.fns["js-js-from-kl-all"] = [Shen.type_func,
  function shen_user_lambda5504(Arg5503) {
  if (Arg5503.length < 1) return [Shen.type_func, shen_user_lambda5504, 1, Arg5503];
  var Arg5503_0 = Arg5503[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl-walk"], [Arg5503_0, false])),
  (R1 = Shen.call(Shen.fns["js-mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (function() {
  return Shen.call_tail(Shen.fns["js-js-from-kl-toplevel-all"], [R0, (Shen.globals["js-skip-internals"]), R1, ""]);}))},
  1,
  [],
  "js-js-from-kl-all"];






Shen.fns["shen-toplevel-5506"] = [Shen.type_func,
  function shen_user_lambda5507(Arg5505) {
  if (Arg5505.length < 0) return [Shen.type_func, shen_user_lambda5507, 0, Arg5505];
  return (Shen.globals["js-skip-internals"] = true)},
  0,
  [],
  "shen-toplevel-5506"];

Shen.call_toplevel("shen-toplevel-5506")






Shen.fns["js-js-write-string"] = [Shen.type_func,
  function shen_user_lambda5509(Arg5508) {
  if (Arg5508.length < 3) return [Shen.type_func, shen_user_lambda5509, 3, Arg5508];
  var Arg5508_0 = Arg5508[0], Arg5508_1 = Arg5508[1], Arg5508_2 = Arg5508[2];
  return (function() {
  return Shen.trap_error(function() {return (Shen.pr(Arg5508_0[Arg5508_1], Arg5508_2),
  Shen.call(Shen.fns["js-js-write-string"], [Arg5508_0, (Arg5508_1 + 1), Arg5508_2]));}, [Shen.type_func,
  function shen_user_lambda5511(Arg5510) {
  if (Arg5510.length < 1) return [Shen.type_func, shen_user_lambda5511, 1, Arg5510];
  var Arg5510_0 = Arg5510[0];
  return true},
  1,
  []]);})},
  3,
  [],
  "js-js-write-string"];






Shen.fns["js-js-dump-exprs-to-file"] = [Shen.type_func,
  function shen_user_lambda5513(Arg5512) {
  if (Arg5512.length < 2) return [Shen.type_func, shen_user_lambda5513, 2, Arg5512];
  var Arg5512_0 = Arg5512[0], Arg5512_1 = Arg5512[1];
  return ((Shen.empty$question$(Arg5512_0))
  ? true
  : ((Shen.is_type(Arg5512_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["js-js-write-string"], [Shen.call(Shen.fns["js-from-kl"], [Arg5512_0[1]]), 0, Arg5512_1]),
  Shen.call(Shen.fns["js-js-write-string"], [Shen.call(Shen.fns["intmake-string"], ["~%", []]), 0, Arg5512_1]),
  (function() {
  return Shen.call_tail(Shen.fns["js-js-dump-exprs-to-file"], [Arg5512_0[2], Arg5512_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "js-js-dump-exprs-to-file"]]);})))},
  2,
  [],
  "js-js-dump-exprs-to-file"];






Shen.fns["js-dump-to-file"] = [Shen.type_func,
  function shen_user_lambda5515(Arg5514) {
  if (Arg5514.length < 2) return [Shen.type_func, shen_user_lambda5515, 2, Arg5514];
  var Arg5514_0 = Arg5514[0], Arg5514_1 = Arg5514[1];
  var R0;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg5514_1, [Shen.type_symbol, "out"])),
  Shen.call(Shen.fns["js-js-dump-exprs-to-file"], [Arg5514_0, R0]),
  Shen.close(R0),
  true)},
  2,
  [],
  "js-dump-to-file"];






Shen.fns["js-kl-from-shen"] = [Shen.type_func,
  function shen_user_lambda5517(Arg5516) {
  if (Arg5516.length < 1) return [Shen.type_func, shen_user_lambda5517, 1, Arg5516];
  var Arg5516_0 = Arg5516[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-walk"], [[Shen.type_func,
  function shen_user_lambda5519(Arg5518) {
  if (Arg5518.length < 1) return [Shen.type_func, shen_user_lambda5519, 1, Arg5518];
  var Arg5518_0 = Arg5518[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg5518_0]);})},
  1,
  []], Arg5516_0])),
  ((Shen.call(Shen.fns["shen-packaged?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["js-package-contents"], [R0]))
  : (R0 = R0)),
  (function() {
  return Shen.call_tail(Shen.fns["shen-elim-define"], [Shen.call(Shen.fns["shen-proc-input+"], [R0])]);}))},
  1,
  [],
  "js-kl-from-shen"];






Shen.fns["js-dump"] = [Shen.type_func,
  function shen_user_lambda5521(Arg5520) {
  if (Arg5520.length < 3) return [Shen.type_func, shen_user_lambda5521, 3, Arg5520];
  var Arg5520_0 = Arg5520[0], Arg5520_1 = Arg5520[1], Arg5520_2 = Arg5520[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["intmake-string"], ["~A~A.js", [Shen.fns['shen-tuple'], Arg5520_2, [Shen.fns['shen-tuple'], Arg5520_1, []]]])),
  (R1 = Shen.call(Shen.fns["intmake-string"], ["~A~A", [Shen.fns['shen-tuple'], Arg5520_0, [Shen.fns['shen-tuple'], Arg5520_1, []]]])),
  (R2 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "js-kl-from-shen"], Shen.call(Shen.fns["read-file"], [R1])])),
  ((Shen.unwind_tail(Shen.$eq$((Shen.globals["shen-*hush*"]), [Shen.type_symbol, "js-hushed"])))
  ? [Shen.type_symbol, "_"]
  : Shen.call(Shen.fns["intoutput"], ["== ~A -> ~A~%", [Shen.fns['shen-tuple'], R1, [Shen.fns['shen-tuple'], R0, []]]])),
  (function() {
  return Shen.call_tail(Shen.fns["js-dump-to-file"], [R2, R0]);}))},
  3,
  [],
  "js-dump"];






Shen.fns["shen-toplevel-5523"] = [Shen.type_func,
  function shen_user_lambda5524(Arg5522) {
  if (Arg5522.length < 0) return [Shen.type_func, shen_user_lambda5524, 0, Arg5522];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "js-dump"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-5523"];

Shen.call_toplevel("shen-toplevel-5523")






Shen.fns["shen-toplevel-5526"] = [Shen.type_func,
  function shen_user_lambda5527(Arg5525) {
  if (Arg5525.length < 0) return [Shen.type_func, shen_user_lambda5527, 0, Arg5525];
  return ((Shen.trap_error(function() {return (Shen.call(Shen.fns["register-dumper"], []),
  true);}, [Shen.type_func,
  function shen_user_lambda5529(Arg5528) {
  if (Arg5528.length < 1) return [Shen.type_func, shen_user_lambda5529, 1, Arg5528];
  var Arg5528_0 = Arg5528[0];
  return false},
  1,
  []]))
  ? (function() {
  return Shen.call_tail(Shen.fns["register-dumper"], [[Shen.type_symbol, "javascript"], [Shen.type_symbol, "all"], [Shen.type_symbol, "js-dump"]]);})
  : [Shen.type_symbol, "_"])},
  0,
  [],
  "shen-toplevel-5526"];

Shen.call_toplevel("shen-toplevel-5526")






Shen.fns["shenjs-repl-split-input-aux"] = [Shen.type_func,
  function shen_user_lambda5535(Arg5534) {
  if (Arg5534.length < 3) return [Shen.type_func, shen_user_lambda5535, 3, Arg5534];
  var Arg5534_0 = Arg5534[0], Arg5534_1 = Arg5534[1], Arg5534_2 = Arg5534[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5534_0))
  ? Arg5534_2
  : ((Shen.is_type(Arg5534_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg5534_0[1], Arg5534_1]),
  (R1 = Shen.call(Shen.fns["reverse"], [R0])),
  (R2 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen-<st_input>"], R1, []])),
  (function() {
  return Shen.call_tail(Shen.fns["shenjs-repl-split-input-aux"], [Arg5534_0[2], R0, (((Shen.unwind_tail(Shen.$eq$(R2, Shen.fail_obj)) || Shen.empty$question$(R2)))
  ? Arg5534_2
  : [Shen.fns['shen-tuple'], R1, Arg5534_0[2]])]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "shenjs-repl-split-input-aux"]]);})))},
  3,
  [],
  "shenjs-repl-split-input-aux"];






Shen.fns["shenjs-repl-split-input"] = [Shen.type_func,
  function shen_user_lambda5537(Arg5536) {
  if (Arg5536.length < 1) return [Shen.type_func, shen_user_lambda5537, 1, Arg5536];
  var Arg5536_0 = Arg5536[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shenjs-repl-split-input-aux"], [Arg5536_0, [], []]);})},
  1,
  [],
  "shenjs-repl-split-input"];












Shen.fns["shen-shen->kl"] = [Shen.type_func,
  function shen_user_lambda5634(Arg5633) {
  if (Arg5633.length < 2) return [Shen.type_func, shen_user_lambda5634, 2, Arg5633];
  var Arg5633_0 = Arg5633[0], Arg5633_1 = Arg5633[1];
  return (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func,
  function shen_user_lambda5636(Arg5635) {
  if (Arg5635.length < 1) return [Shen.type_func, shen_user_lambda5636, 1, Arg5635];
  var Arg5635_0 = Arg5635[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-<define>"], [Arg5635_0]);})},
  1,
  []], [Shen.type_cons, Arg5633_0, Arg5633_1], [Shen.type_func,
  function shen_user_lambda5638(Arg5637) {
  if (Arg5637.length < 2) return [Shen.type_func, shen_user_lambda5638, 2, Arg5637];
  var Arg5637_0 = Arg5637[0], Arg5637_1 = Arg5637[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-shen-syntax-error"], [Arg5637_0, Arg5637_1]);})},
  2,
  [Arg5633_0]]]);})},
  2,
  [],
  "shen-shen->kl"];






Shen.fns["shen-shen-syntax-error"] = [Shen.type_func,
  function shen_user_lambda5640(Arg5639) {
  if (Arg5639.length < 2) return [Shen.type_func, shen_user_lambda5640, 2, Arg5639];
  var Arg5639_0 = Arg5639[0], Arg5639_1 = Arg5639[1];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["syntax error in ~A here:~%~% ~A~%", [Shen.fns['shen-tuple'], Arg5639_0, [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-next-50"], [50, Arg5639_1]), []]]]);})},
  2,
  [],
  "shen-shen-syntax-error"];






Shen.fns["shen-<define>"] = [Shen.type_func,
  function shen_user_lambda5642(Arg5641) {
  if (Arg5641.length < 1) return [Shen.type_func, shen_user_lambda5642, 1, Arg5641];
  var Arg5641_0 = Arg5641[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<name>"], [Arg5641_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<signature>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen-<rules>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["shen-compile_to_machine_code"], [Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<name>"], [Arg5641_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["shen-compile_to_machine_code"], [Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<define>"];






Shen.fns["shen-<name>"] = [Shen.type_func,
  function shen_user_lambda5644(Arg5643) {
  if (Arg5643.length < 1) return [Shen.type_func, shen_user_lambda5644, 1, Arg5643];
  var Arg5643_0 = Arg5643[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5643_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5643_0])[2], Shen.call(Shen.fns["snd"], [Arg5643_0])])]), (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5643_0])[1], Shen.type_symbol) && (!Shen.call(Shen.fns["shen-sysfunc?"], [Shen.call(Shen.fns["fst"], [Arg5643_0])[1]]))))
  ? Shen.call(Shen.fns["fst"], [Arg5643_0])[1]
  : Shen.call(Shen.fns["interror"], ["~A is not a legitimate function name.~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["fst"], [Arg5643_0])[1], []]]))]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<name>"];






Shen.fns["shen-sysfunc?"] = [Shen.type_func,
  function shen_user_lambda5646(Arg5645) {
  if (Arg5645.length < 1) return [Shen.type_func, shen_user_lambda5646, 1, Arg5645];
  var Arg5645_0 = Arg5645[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5645_0, (Shen.globals["shen-*system*"])]);})},
  1,
  [],
  "shen-sysfunc?"];






Shen.fns["shen-<signature>"] = [Shen.type_func,
  function shen_user_lambda5648(Arg5647) {
  if (Arg5647.length < 1) return [Shen.type_func, shen_user_lambda5648, 1, Arg5647];
  var Arg5647_0 = Arg5647[0];
  var R0;
  return ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5647_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Shen.call(Shen.fns["fst"], [Arg5647_0])[1]))))
  ? ((R0 = Shen.call(Shen.fns["shen-<signature-help>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5647_0])[2], Shen.call(Shen.fns["snd"], [Arg5647_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])]), Shen.call(Shen.fns["shen-normalise-type"], [Shen.call(Shen.fns["shen-curry-type"], [Shen.call(Shen.fns["snd"], [R0])])])]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<signature>"];






Shen.fns["shen-curry-type"] = [Shen.type_func,
  function shen_user_lambda5650(Arg5649) {
  if (Arg5649.length < 1) return [Shen.type_func, shen_user_lambda5650, 1, Arg5649];
  var Arg5649_0 = Arg5649[0];
  return (((Shen.is_type(Arg5649_0, Shen.type_cons) && (Shen.is_type(Arg5649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg5649_0[2][1])) && (Shen.is_type(Arg5649_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5649_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg5649_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-curry-type"], [[Shen.type_cons, Arg5649_0[1], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5649_0[2][2], []]]]]);})
  : (((Shen.is_type(Arg5649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5649_0[1])) && (Shen.is_type(Arg5649_0[2], Shen.type_cons) && (Shen.is_type(Arg5649_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5649_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-curry-type"], [Arg5649_0[2][1]]), []]]
  : (((Shen.is_type(Arg5649_0, Shen.type_cons) && (Shen.is_type(Arg5649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5649_0[2][1])) && (Shen.is_type(Arg5649_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5649_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5649_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-curry-type"], [[Shen.type_cons, Arg5649_0[1], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, Arg5649_0[2][2], []]]]]);})
  : ((Shen.is_type(Arg5649_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5652(Arg5651) {
  if (Arg5651.length < 1) return [Shen.type_func, shen_user_lambda5652, 1, Arg5651];
  var Arg5651_0 = Arg5651[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-curry-type"], [Arg5651_0]);})},
  1,
  []], Arg5649_0]);})
  : Arg5649_0))))},
  1,
  [],
  "shen-curry-type"];






Shen.fns["shen-<signature-help>"] = [Shen.type_func,
  function shen_user_lambda5654(Arg5653) {
  if (Arg5653.length < 1) return [Shen.type_func, shen_user_lambda5654, 1, Arg5653];
  var Arg5653_0 = Arg5653[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5653_0]), Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen-<signature-help>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5653_0])[2], Shen.call(Shen.fns["snd"], [Arg5653_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), ((Shen.call(Shen.fns["element?"], [Shen.call(Shen.fns["fst"], [Arg5653_0])[1], [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "}"], []]]]))
  ? Shen.fail_obj
  : [Shen.type_cons, Shen.call(Shen.fns["fst"], [Arg5653_0])[1], Shen.call(Shen.fns["snd"], [R0])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg5653_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<signature-help>"];






Shen.fns["shen-<rules>"] = [Shen.type_func,
  function shen_user_lambda5656(Arg5655) {
  if (Arg5655.length < 1) return [Shen.type_func, shen_user_lambda5656, 1, Arg5655];
  var Arg5655_0 = Arg5655[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<rule>"], [Arg5655_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<rule>"], [Arg5655_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<rules>"];






Shen.fns["shen-<rule>"] = [Shen.type_func,
  function shen_user_lambda5658(Arg5657) {
  if (Arg5657.length < 1) return [Shen.type_func, shen_user_lambda5658, 1, Arg5657];
  var Arg5657_0 = Arg5657[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen-<patterns>"], [Arg5657_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<action>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R1]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Shen.call(Shen.fns["fst"], [R1])[1]))))
  ? ((R2 = Shen.call(Shen.fns["shen-<guard>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1])[2], Shen.call(Shen.fns["snd"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<patterns>"], [Arg5657_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<action>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<patterns>"], [Arg5657_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<action>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R1]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Shen.call(Shen.fns["fst"], [R1])[1]))))
  ? ((R2 = Shen.call(Shen.fns["shen-<guard>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1])[2], Shen.call(Shen.fns["snd"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R2]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]], []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<patterns>"], [Arg5657_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<action>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))},
  1,
  [],
  "shen-<rule>"];






Shen.fns["shen-fail_if"] = [Shen.type_func,
  function shen_user_lambda5660(Arg5659) {
  if (Arg5659.length < 2) return [Shen.type_func, shen_user_lambda5660, 2, Arg5659];
  var Arg5659_0 = Arg5659[0], Arg5659_1 = Arg5659[1];
  return ((Shen.call(Arg5659_0, [Arg5659_1]))
  ? Shen.fail_obj
  : Arg5659_1)},
  2,
  [],
  "shen-fail_if"];






Shen.fns["shen-succeeds?"] = [Shen.type_func,
  function shen_user_lambda5662(Arg5661) {
  if (Arg5661.length < 1) return [Shen.type_func, shen_user_lambda5662, 1, Arg5661];
  var Arg5661_0 = Arg5661[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg5661_0, Shen.fail_obj)))
  ? false
  : true)},
  1,
  [],
  "shen-succeeds?"];






Shen.fns["shen-<patterns>"] = [Shen.type_func,
  function shen_user_lambda5664(Arg5663) {
  if (Arg5663.length < 1) return [Shen.type_func, shen_user_lambda5664, 1, Arg5663];
  var Arg5663_0 = Arg5663[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<pattern>"], [Arg5663_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<patterns>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg5663_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<patterns>"];






Shen.fns["shen-<pattern>"] = [Shen.type_func,
  function shen_user_lambda5666(Arg5665) {
  if (Arg5665.length < 1) return [Shen.type_func, shen_user_lambda5666, 1, Arg5665];
  var Arg5665_0 = Arg5665[0];
  var R0, R1;
  return ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0]), Shen.type_cons) && Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen-snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[1]))))
  ? ((R0 = Shen.call(Shen.fns["shen-<pattern1>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[2], Shen.call(Shen.fns["snd"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[2], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0]), Shen.type_cons) && Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen-snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[1]))))
  ? ((R0 = Shen.call(Shen.fns["shen-<pattern1>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[2], Shen.call(Shen.fns["snd"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[2], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0]), Shen.type_cons) && Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen-snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[1]))))
  ? ((R0 = Shen.call(Shen.fns["shen-<pattern1>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[2], Shen.call(Shen.fns["snd"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[2], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0]), Shen.type_cons) && Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen-snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[1]))))
  ? ((R0 = Shen.call(Shen.fns["shen-<pattern1>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[2], Shen.call(Shen.fns["snd"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[2], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0]), Shen.type_cons) && Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen-snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[1]))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[2], Shen.call(Shen.fns["snd"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])])]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(0, Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[2], Shen.call(Shen.fns["snd"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])])])[1]))))
  ? Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[2], Shen.call(Shen.fns["snd"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])])])[2], Shen.call(Shen.fns["snd"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])[2], Shen.call(Shen.fns["snd"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.call(Shen.fns["snd"], [Arg5665_0])])])])])])]), Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[2], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]])])
  : Shen.fail_obj)
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5665_0])[2], Shen.call(Shen.fns["snd"], [Arg5665_0])])]), ((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5665_0])[1], Shen.type_cons))
  ? Shen.call(Shen.fns["interror"], ["~A is not a legitimate constructor~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["fst"], [Arg5665_0])[1], []]])
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<simple_pattern>"], [Arg5665_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))},
  1,
  [],
  "shen-<pattern>"];






Shen.fns["shen-<simple_pattern>"] = [Shen.type_func,
  function shen_user_lambda5668(Arg5667) {
  if (Arg5667.length < 1) return [Shen.type_func, shen_user_lambda5668, 1, Arg5667];
  var Arg5667_0 = Arg5667[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5667_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5667_0])[2], Shen.call(Shen.fns["snd"], [Arg5667_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg5667_0])[1], [Shen.type_symbol, "_"])))
  ? Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "X"]])
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5667_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5667_0])[2], Shen.call(Shen.fns["snd"], [Arg5667_0])])]), ((Shen.call(Shen.fns["element?"], [Shen.call(Shen.fns["fst"], [Arg5667_0])[1], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<-"], []]]]))
  ? Shen.fail_obj
  : Shen.call(Shen.fns["fst"], [Arg5667_0])[1])]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<simple_pattern>"];






Shen.fns["shen-<pattern1>"] = [Shen.type_func,
  function shen_user_lambda5670(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5670, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<pattern>"], [Arg5669_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<pattern1>"];






Shen.fns["shen-<pattern2>"] = [Shen.type_func,
  function shen_user_lambda5672(Arg5671) {
  if (Arg5671.length < 1) return [Shen.type_func, shen_user_lambda5672, 1, Arg5671];
  var Arg5671_0 = Arg5671[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<pattern>"], [Arg5671_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<pattern2>"];






Shen.fns["shen-<action>"] = [Shen.type_func,
  function shen_user_lambda5674(Arg5673) {
  if (Arg5673.length < 1) return [Shen.type_func, shen_user_lambda5674, 1, Arg5673];
  var Arg5673_0 = Arg5673[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5673_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5673_0])[2], Shen.call(Shen.fns["snd"], [Arg5673_0])])]), Shen.call(Shen.fns["fst"], [Arg5673_0])[1]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<action>"];






Shen.fns["shen-<guard>"] = [Shen.type_func,
  function shen_user_lambda5676(Arg5675) {
  if (Arg5675.length < 1) return [Shen.type_func, shen_user_lambda5676, 1, Arg5675];
  var Arg5675_0 = Arg5675[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg5675_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg5675_0])[2], Shen.call(Shen.fns["snd"], [Arg5675_0])])]), Shen.call(Shen.fns["fst"], [Arg5675_0])[1]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<guard>"];






Shen.fns["shen-compile_to_machine_code"] = [Shen.type_func,
  function shen_user_lambda5678(Arg5677) {
  if (Arg5677.length < 2) return [Shen.type_func, shen_user_lambda5678, 2, Arg5677];
  var Arg5677_0 = Arg5677[0], Arg5677_1 = Arg5677[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-compile_to_lambda+"], [Arg5677_0, Arg5677_1])),
  (R0 = Shen.call(Shen.fns["shen-compile_to_kl"], [Arg5677_0, R0])),
  Shen.call(Shen.fns["shen-record-source"], [Arg5677_0, R0]),
  R0)},
  2,
  [],
  "shen-compile_to_machine_code"];






Shen.fns["shen-record-source"] = [Shen.type_func,
  function shen_user_lambda5680(Arg5679) {
  if (Arg5679.length < 2) return [Shen.type_func, shen_user_lambda5680, 2, Arg5679];
  var Arg5679_0 = Arg5679[0], Arg5679_1 = Arg5679[1];
  return (((Shen.globals["shen-*installing-kl*"]))
  ? [Shen.type_symbol, "shen-skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg5679_0, [Shen.type_symbol, "shen-source"], Arg5679_1, (Shen.globals["shen-*property-vector*"])]);}))},
  2,
  [],
  "shen-record-source"];






Shen.fns["shen-compile_to_lambda+"] = [Shen.type_func,
  function shen_user_lambda5682(Arg5681) {
  if (Arg5681.length < 2) return [Shen.type_func, shen_user_lambda5682, 2, Arg5681];
  var Arg5681_0 = Arg5681[0], Arg5681_1 = Arg5681[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen-aritycheck"], [Arg5681_0, Arg5681_1])),
  Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5684(Arg5683) {
  if (Arg5683.length < 2) return [Shen.type_func, shen_user_lambda5684, 2, Arg5683];
  var Arg5683_0 = Arg5683[0], Arg5683_1 = Arg5683[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-free_variable_check"], [Arg5683_0, Arg5683_1]);})},
  2,
  [Arg5681_0]], Arg5681_1]),
  (R0 = Shen.call(Shen.fns["shen-parameters"], [R0])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5686(Arg5685) {
  if (Arg5685.length < 1) return [Shen.type_func, shen_user_lambda5686, 1, Arg5685];
  var Arg5685_0 = Arg5685[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-linearise"], [Arg5685_0]);})},
  1,
  []], Shen.call(Shen.fns["shen-strip-protect"], [Arg5681_1])])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5688(Arg5687) {
  if (Arg5687.length < 1) return [Shen.type_func, shen_user_lambda5688, 1, Arg5687];
  var Arg5687_0 = Arg5687[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-abstract_rule"], [Arg5687_0]);})},
  1,
  []], R1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5690(Arg5689) {
  if (Arg5689.length < 2) return [Shen.type_func, shen_user_lambda5690, 2, Arg5689];
  var Arg5689_0 = Arg5689[0], Arg5689_1 = Arg5689[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-application_build"], [Arg5689_0, Arg5689_1]);})},
  2,
  [R0]], R1])),
  [Shen.type_cons, R0, [Shen.type_cons, R1, []]])},
  2,
  [],
  "shen-compile_to_lambda+"];






Shen.fns["shen-free_variable_check"] = [Shen.type_func,
  function shen_user_lambda5692(Arg5691) {
  if (Arg5691.length < 2) return [Shen.type_func, shen_user_lambda5692, 2, Arg5691];
  var Arg5691_0 = Arg5691[0], Arg5691_1 = Arg5691[1];
  var R0;
  return (((Shen.is_type(Arg5691_1, Shen.type_cons) && (Shen.is_type(Arg5691_1[2], Shen.type_cons) && Shen.empty$question$(Arg5691_1[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen-extract_vars"], [Arg5691_1[1]])),
  (R0 = Shen.call(Shen.fns["shen-extract_free_vars"], [R0, Arg5691_1[2][1]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-free_variable_warnings"], [Arg5691_0, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-free_variable_check"]]);}))},
  2,
  [],
  "shen-free_variable_check"];






Shen.fns["shen-extract_vars"] = [Shen.type_func,
  function shen_user_lambda5694(Arg5693) {
  if (Arg5693.length < 1) return [Shen.type_func, shen_user_lambda5694, 1, Arg5693];
  var Arg5693_0 = Arg5693[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg5693_0]))
  ? [Shen.type_cons, Arg5693_0, []]
  : ((Shen.is_type(Arg5693_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen-extract_vars"], [Arg5693_0[1]]), Shen.call(Shen.fns["shen-extract_vars"], [Arg5693_0[2]])]);})
  : []))},
  1,
  [],
  "shen-extract_vars"];






Shen.fns["shen-extract_free_vars"] = [Shen.type_func,
  function shen_user_lambda5696(Arg5695) {
  if (Arg5695.length < 2) return [Shen.type_func, shen_user_lambda5696, 2, Arg5695];
  var Arg5695_0 = Arg5695[0], Arg5695_1 = Arg5695[1];
  return (((Shen.is_type(Arg5695_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "protect"], Arg5695_1[1])) && (Shen.is_type(Arg5695_1[2], Shen.type_cons) && Shen.empty$question$(Arg5695_1[2][2])))))
  ? []
  : (((Shen.call(Shen.fns["variable?"], [Arg5695_1]) && (!Shen.call(Shen.fns["element?"], [Arg5695_1, Arg5695_0]))))
  ? [Shen.type_cons, Arg5695_1, []]
  : (((Shen.is_type(Arg5695_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg5695_1[1])) && (Shen.is_type(Arg5695_1[2], Shen.type_cons) && (Shen.is_type(Arg5695_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg5695_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-extract_free_vars"], [[Shen.type_cons, Arg5695_1[2][1], Arg5695_0], Arg5695_1[2][2][1]]);})
  : (((Shen.is_type(Arg5695_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg5695_1[1])) && (Shen.is_type(Arg5695_1[2], Shen.type_cons) && (Shen.is_type(Arg5695_1[2][2], Shen.type_cons) && (Shen.is_type(Arg5695_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5695_1[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen-extract_free_vars"], [Arg5695_0, Arg5695_1[2][2][1]]), Shen.call(Shen.fns["shen-extract_free_vars"], [[Shen.type_cons, Arg5695_1[2][1], Arg5695_0], Arg5695_1[2][2][2][1]])]);})
  : ((Shen.is_type(Arg5695_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen-extract_free_vars"], [Arg5695_0, Arg5695_1[1]]), Shen.call(Shen.fns["shen-extract_free_vars"], [Arg5695_0, Arg5695_1[2]])]);})
  : [])))))},
  2,
  [],
  "shen-extract_free_vars"];






Shen.fns["shen-free_variable_warnings"] = [Shen.type_func,
  function shen_user_lambda5698(Arg5697) {
  if (Arg5697.length < 2) return [Shen.type_func, shen_user_lambda5698, 2, Arg5697];
  var Arg5697_0 = Arg5697[0], Arg5697_1 = Arg5697[1];
  return ((Shen.empty$question$(Arg5697_1))
  ? [Shen.type_symbol, "_"]
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["error: the following variables are free in ~A: ~A", [Shen.fns['shen-tuple'], Arg5697_0, [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-list_variables"], [Arg5697_1]), []]]]);}))},
  2,
  [],
  "shen-free_variable_warnings"];






Shen.fns["shen-list_variables"] = [Shen.type_func,
  function shen_user_lambda5700(Arg5699) {
  if (Arg5699.length < 1) return [Shen.type_func, shen_user_lambda5700, 1, Arg5699];
  var Arg5699_0 = Arg5699[0];
  return (((Shen.is_type(Arg5699_0, Shen.type_cons) && Shen.empty$question$(Arg5699_0[2])))
  ? (Shen.str(Arg5699_0[1]) + ".")
  : ((Shen.is_type(Arg5699_0, Shen.type_cons))
  ? (Shen.str(Arg5699_0[1]) + (", " + Shen.call(Shen.fns["shen-list_variables"], [Arg5699_0[2]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-list_variables"]]);})))},
  1,
  [],
  "shen-list_variables"];






Shen.fns["shen-strip-protect"] = [Shen.type_func,
  function shen_user_lambda5702(Arg5701) {
  if (Arg5701.length < 1) return [Shen.type_func, shen_user_lambda5702, 1, Arg5701];
  var Arg5701_0 = Arg5701[0];
  return (((Shen.is_type(Arg5701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "protect"], Arg5701_0[1])) && (Shen.is_type(Arg5701_0[2], Shen.type_cons) && Shen.empty$question$(Arg5701_0[2][2])))))
  ? Arg5701_0[2][1]
  : ((Shen.is_type(Arg5701_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-strip-protect"], [Arg5701_0[1]]), Shen.call(Shen.fns["shen-strip-protect"], [Arg5701_0[2]])]
  : Arg5701_0))},
  1,
  [],
  "shen-strip-protect"];






Shen.fns["shen-linearise"] = [Shen.type_func,
  function shen_user_lambda5704(Arg5703) {
  if (Arg5703.length < 1) return [Shen.type_func, shen_user_lambda5704, 1, Arg5703];
  var Arg5703_0 = Arg5703[0];
  return (((Shen.is_type(Arg5703_0, Shen.type_cons) && (Shen.is_type(Arg5703_0[2], Shen.type_cons) && Shen.empty$question$(Arg5703_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-linearise_help"], [Shen.call(Shen.fns["shen-flatten"], [Arg5703_0[1]]), Arg5703_0[1], Arg5703_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-linearise"]]);}))},
  1,
  [],
  "shen-linearise"];






Shen.fns["shen-flatten"] = [Shen.type_func,
  function shen_user_lambda5706(Arg5705) {
  if (Arg5705.length < 1) return [Shen.type_func, shen_user_lambda5706, 1, Arg5705];
  var Arg5705_0 = Arg5705[0];
  return ((Shen.empty$question$(Arg5705_0))
  ? []
  : ((Shen.is_type(Arg5705_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen-flatten"], [Arg5705_0[1]]), Shen.call(Shen.fns["shen-flatten"], [Arg5705_0[2]])]);})
  : [Shen.type_cons, Arg5705_0, []]))},
  1,
  [],
  "shen-flatten"];






Shen.fns["shen-linearise_help"] = [Shen.type_func,
  function shen_user_lambda5708(Arg5707) {
  if (Arg5707.length < 3) return [Shen.type_func, shen_user_lambda5708, 3, Arg5707];
  var Arg5707_0 = Arg5707[0], Arg5707_1 = Arg5707[1], Arg5707_2 = Arg5707[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg5707_0))
  ? [Shen.type_cons, Arg5707_1, [Shen.type_cons, Arg5707_2, []]]
  : ((Shen.is_type(Arg5707_0, Shen.type_cons))
  ? (((Shen.call(Shen.fns["variable?"], [Arg5707_0[1]]) && Shen.call(Shen.fns["element?"], [Arg5707_0[1], Arg5707_0[2]])))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [Arg5707_0[1]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg5707_0[1], [Shen.type_cons, R0, []]]], [Shen.type_cons, Arg5707_2, []]]]),
  (R0 = Shen.call(Shen.fns["shen-linearise_X"], [Arg5707_0[1], R0, Arg5707_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-linearise_help"], [Arg5707_0[2], R0, R1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-linearise_help"], [Arg5707_0[2], Arg5707_1, Arg5707_2]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-linearise_help"]]);})))},
  3,
  [],
  "shen-linearise_help"];






Shen.fns["shen-linearise_X"] = [Shen.type_func,
  function shen_user_lambda5710(Arg5709) {
  if (Arg5709.length < 3) return [Shen.type_func, shen_user_lambda5710, 3, Arg5709];
  var Arg5709_0 = Arg5709[0], Arg5709_1 = Arg5709[1], Arg5709_2 = Arg5709[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5709_2, Arg5709_0)))
  ? Arg5709_1
  : ((Shen.is_type(Arg5709_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen-linearise_X"], [Arg5709_0, Arg5709_1, Arg5709_2[1]])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Arg5709_2[1])))
  ? [Shen.type_cons, Arg5709_2[1], Shen.call(Shen.fns["shen-linearise_X"], [Arg5709_0, Arg5709_1, Arg5709_2[2]])]
  : [Shen.type_cons, R0, Arg5709_2[2]]))
  : Arg5709_2))},
  3,
  [],
  "shen-linearise_X"];






Shen.fns["shen-aritycheck"] = [Shen.type_func,
  function shen_user_lambda5712(Arg5711) {
  if (Arg5711.length < 2) return [Shen.type_func, shen_user_lambda5712, 2, Arg5711];
  var Arg5711_0 = Arg5711[0], Arg5711_1 = Arg5711[1];
  return (((Shen.is_type(Arg5711_1, Shen.type_cons) && (Shen.is_type(Arg5711_1[1], Shen.type_cons) && (Shen.is_type(Arg5711_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg5711_1[1][2][2]) && Shen.empty$question$(Arg5711_1[2]))))))
  ? (Shen.call(Shen.fns["shen-aritycheck-action"], [Arg5711_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-aritycheck-name"], [Arg5711_0, Shen.call(Shen.fns["arity"], [Arg5711_0]), Shen.call(Shen.fns["length"], [Arg5711_1[1][1]])]);}))
  : (((Shen.is_type(Arg5711_1, Shen.type_cons) && (Shen.is_type(Arg5711_1[1], Shen.type_cons) && (Shen.is_type(Arg5711_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg5711_1[1][2][2]) && (Shen.is_type(Arg5711_1[2], Shen.type_cons) && (Shen.is_type(Arg5711_1[2][1], Shen.type_cons) && (Shen.is_type(Arg5711_1[2][1][2], Shen.type_cons) && Shen.empty$question$(Arg5711_1[2][1][2][2])))))))))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg5711_1[1][1]]), Shen.call(Shen.fns["length"], [Arg5711_1[2][1][1]]))))
  ? (Shen.call(Shen.fns["shen-aritycheck-action"], [[Shen.type_symbol, "Action"]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-aritycheck"], [Arg5711_0, Arg5711_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["arity error in ~A~%", [Shen.fns['shen-tuple'], Arg5711_0, []]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-aritycheck"]]);})))},
  2,
  [],
  "shen-aritycheck"];






Shen.fns["shen-aritycheck-name"] = [Shen.type_func,
  function shen_user_lambda5714(Arg5713) {
  if (Arg5713.length < 3) return [Shen.type_func, shen_user_lambda5714, 3, Arg5713];
  var Arg5713_0 = Arg5713[0], Arg5713_1 = Arg5713[1], Arg5713_2 = Arg5713[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg5713_1)))
  ? Arg5713_2
  : ((Shen.unwind_tail(Shen.$eq$(Arg5713_2, Arg5713_1)))
  ? Arg5713_2
  : (Shen.call(Shen.fns["intoutput"], ["~%warning: changing the arity of ~A can cause errors.~%", [Shen.fns['shen-tuple'], Arg5713_0, []]]),
  Arg5713_2)))},
  3,
  [],
  "shen-aritycheck-name"];






Shen.fns["shen-aritycheck-action"] = [Shen.type_func,
  function shen_user_lambda5716(Arg5715) {
  if (Arg5715.length < 1) return [Shen.type_func, shen_user_lambda5716, 1, Arg5715];
  var Arg5715_0 = Arg5715[0];
  return ((Shen.is_type(Arg5715_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen-aah"], [Arg5715_0[1], Arg5715_0[2]]),
  (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5718(Arg5717) {
  if (Arg5717.length < 1) return [Shen.type_func, shen_user_lambda5718, 1, Arg5717];
  var Arg5717_0 = Arg5717[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-aritycheck-action"], [Arg5717_0]);})},
  1,
  []], Arg5715_0]);}))
  : [Shen.type_symbol, "shen-skip"])},
  1,
  [],
  "shen-aritycheck-action"];






Shen.fns["shen-aah"] = [Shen.type_func,
  function shen_user_lambda5720(Arg5719) {
  if (Arg5719.length < 2) return [Shen.type_func, shen_user_lambda5720, 2, Arg5719];
  var Arg5719_0 = Arg5719[0], Arg5719_1 = Arg5719[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["arity"], [Arg5719_0])),
  (R1 = Shen.call(Shen.fns["length"], [Arg5719_1])),
  ((((R0 > -1) && (R1 > R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["warning: ~A might not like ~A argument~A.~%", [Shen.fns['shen-tuple'], Arg5719_0, [Shen.fns['shen-tuple'], R1, [Shen.fns['shen-tuple'], (((R1 > 1))
  ? "s"
  : ""), []]]]]);})
  : [Shen.type_symbol, "shen-skip"]))},
  2,
  [],
  "shen-aah"];






Shen.fns["shen-abstract_rule"] = [Shen.type_func,
  function shen_user_lambda5722(Arg5721) {
  if (Arg5721.length < 1) return [Shen.type_func, shen_user_lambda5722, 1, Arg5721];
  var Arg5721_0 = Arg5721[0];
  return (((Shen.is_type(Arg5721_0, Shen.type_cons) && (Shen.is_type(Arg5721_0[2], Shen.type_cons) && Shen.empty$question$(Arg5721_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-abstraction_build"], [Arg5721_0[1], Arg5721_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-abstract_rule"]]);}))},
  1,
  [],
  "shen-abstract_rule"];






Shen.fns["shen-abstraction_build"] = [Shen.type_func,
  function shen_user_lambda5724(Arg5723) {
  if (Arg5723.length < 2) return [Shen.type_func, shen_user_lambda5724, 2, Arg5723];
  var Arg5723_0 = Arg5723[0], Arg5723_1 = Arg5723[1];
  return ((Shen.empty$question$(Arg5723_0))
  ? Arg5723_1
  : ((Shen.is_type(Arg5723_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5723_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen-abstraction_build"], [Arg5723_0[2], Arg5723_1]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-abstraction_build"]]);})))},
  2,
  [],
  "shen-abstraction_build"];






Shen.fns["shen-parameters"] = [Shen.type_func,
  function shen_user_lambda5726(Arg5725) {
  if (Arg5725.length < 1) return [Shen.type_func, shen_user_lambda5726, 1, Arg5725];
  var Arg5725_0 = Arg5725[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5725_0)))
  ? []
  : [Shen.type_cons, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]), Shen.call(Shen.fns["shen-parameters"], [(Arg5725_0 - 1)])])},
  1,
  [],
  "shen-parameters"];






Shen.fns["shen-application_build"] = [Shen.type_func,
  function shen_user_lambda5728(Arg5727) {
  if (Arg5727.length < 2) return [Shen.type_func, shen_user_lambda5728, 2, Arg5727];
  var Arg5727_0 = Arg5727[0], Arg5727_1 = Arg5727[1];
  return ((Shen.empty$question$(Arg5727_0))
  ? Arg5727_1
  : ((Shen.is_type(Arg5727_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-application_build"], [Arg5727_0[2], [Shen.type_cons, Arg5727_1, [Shen.type_cons, Arg5727_0[1], []]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-application_build"]]);})))},
  2,
  [],
  "shen-application_build"];






Shen.fns["shen-compile_to_kl"] = [Shen.type_func,
  function shen_user_lambda5730(Arg5729) {
  if (Arg5729.length < 2) return [Shen.type_func, shen_user_lambda5730, 2, Arg5729];
  var Arg5729_0 = Arg5729[0], Arg5729_1 = Arg5729[1];
  var R0;
  return (((Shen.is_type(Arg5729_1, Shen.type_cons) && (Shen.is_type(Arg5729_1[2], Shen.type_cons) && Shen.empty$question$(Arg5729_1[2][2]))))
  ? (Shen.call(Shen.fns["shen-store-arity"], [Arg5729_0, Shen.call(Shen.fns["length"], [Arg5729_1[1]])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5732(Arg5731) {
  if (Arg5731.length < 1) return [Shen.type_func, shen_user_lambda5732, 1, Arg5731];
  var Arg5731_0 = Arg5731[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-reduce"], [Arg5731_0]);})},
  1,
  []], Arg5729_1[2][1]])),
  (R0 = Shen.call(Shen.fns["shen-cond-expression"], [Arg5729_0, Arg5729_1[1], R0])),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg5729_0, [Shen.type_cons, Arg5729_1[1], [Shen.type_cons, R0, []]]]]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-compile_to_kl"]]);}))},
  2,
  [],
  "shen-compile_to_kl"];






Shen.fns["shen-store-arity"] = [Shen.type_func,
  function shen_user_lambda5734(Arg5733) {
  if (Arg5733.length < 2) return [Shen.type_func, shen_user_lambda5734, 2, Arg5733];
  var Arg5733_0 = Arg5733[0], Arg5733_1 = Arg5733[1];
  return (((Shen.globals["shen-*installing-kl*"]))
  ? [Shen.type_symbol, "shen-skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg5733_0, [Shen.type_symbol, "arity"], Arg5733_1, (Shen.globals["shen-*property-vector*"])]);}))},
  2,
  [],
  "shen-store-arity"];






Shen.fns["shen-reduce"] = [Shen.type_func,
  function shen_user_lambda5736(Arg5735) {
  if (Arg5735.length < 1) return [Shen.type_func, shen_user_lambda5736, 1, Arg5735];
  var Arg5735_0 = Arg5735[0];
  var R0;
  return ((Shen.globals["shen-*teststack*"] = []),
  (R0 = Shen.call(Shen.fns["shen-reduce_help"], [Arg5735_0])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-tests"], Shen.call(Shen.fns["reverse"], [(Shen.globals["shen-*teststack*"])])], [Shen.type_cons, R0, []]])},
  1,
  [],
  "shen-reduce"];






Shen.fns["shen-reduce_help"] = [Shen.type_func,
  function shen_user_lambda5738(Arg5737) {
  if (Arg5737.length < 1) return [Shen.type_func, shen_user_lambda5738, 1, Arg5737];
  var Arg5737_0 = Arg5737[0];
  var R0;
  return (((Shen.is_type(Arg5737_0, Shen.type_cons) && (Shen.is_type(Arg5737_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5737_0[1][1])) && (Shen.is_type(Arg5737_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5737_0[1][2][1][1])) && (Shen.is_type(Arg5737_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][1][2][2][2]) && (Shen.is_type(Arg5737_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][2][2]) && (Shen.is_type(Arg5737_0[2], Shen.type_cons) && Shen.empty$question$(Arg5737_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen-add_test"], [[Shen.type_cons, [Shen.type_symbol, "cons?"], Arg5737_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5737_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5737_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-ebr"], [Arg5737_0[2][1], Arg5737_0[1][2][1], Arg5737_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], Arg5737_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], Arg5737_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg5737_0, Shen.type_cons) && (Shen.is_type(Arg5737_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5737_0[1][1])) && (Shen.is_type(Arg5737_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg5737_0[1][2][1][1])) && (Shen.is_type(Arg5737_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][1][2][2][2]) && (Shen.is_type(Arg5737_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][2][2]) && (Shen.is_type(Arg5737_0[2], Shen.type_cons) && Shen.empty$question$(Arg5737_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen-add_test"], [[Shen.type_cons, [Shen.type_symbol, "tuple?"], Arg5737_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5737_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5737_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-ebr"], [Arg5737_0[2][1], Arg5737_0[1][2][1], Arg5737_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], Arg5737_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], Arg5737_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg5737_0, Shen.type_cons) && (Shen.is_type(Arg5737_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5737_0[1][1])) && (Shen.is_type(Arg5737_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Arg5737_0[1][2][1][1])) && (Shen.is_type(Arg5737_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][1][2][2][2]) && (Shen.is_type(Arg5737_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][2][2]) && (Shen.is_type(Arg5737_0[2], Shen.type_cons) && Shen.empty$question$(Arg5737_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen-add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen-+vector?"], Arg5737_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5737_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5737_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-ebr"], [Arg5737_0[2][1], Arg5737_0[1][2][1], Arg5737_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hdv"], Arg5737_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlv"], Arg5737_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg5737_0, Shen.type_cons) && (Shen.is_type(Arg5737_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5737_0[1][1])) && (Shen.is_type(Arg5737_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg5737_0[1][2][1][1])) && (Shen.is_type(Arg5737_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][1][2][2][2]) && (Shen.is_type(Arg5737_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][2][2]) && (Shen.is_type(Arg5737_0[2], Shen.type_cons) && Shen.empty$question$(Arg5737_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen-add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen-+string?"], Arg5737_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5737_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5737_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-ebr"], [Arg5737_0[2][1], Arg5737_0[1][2][1], Arg5737_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, Arg5737_0[2][1], [Shen.type_cons, 0, []]]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlstr"], Arg5737_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg5737_0, Shen.type_cons) && (Shen.is_type(Arg5737_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5737_0[1][1])) && (Shen.is_type(Arg5737_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][2][2]) && (Shen.is_type(Arg5737_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[2][2]) && (!Shen.call(Shen.fns["variable?"], [Arg5737_0[1][2][1]])))))))))))
  ? (Shen.call(Shen.fns["shen-add_test"], [[Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg5737_0[1][2][1], Arg5737_0[2]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-reduce_help"], [Arg5737_0[1][2][2][1]]);}))
  : (((Shen.is_type(Arg5737_0, Shen.type_cons) && (Shen.is_type(Arg5737_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5737_0[1][1])) && (Shen.is_type(Arg5737_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5737_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5737_0[1][2][2][2]) && (Shen.is_type(Arg5737_0[2], Shen.type_cons) && Shen.empty$question$(Arg5737_0[2][2])))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-reduce_help"], [Shen.call(Shen.fns["shen-ebr"], [Arg5737_0[2][1], Arg5737_0[1][2][1], Arg5737_0[1][2][2][1]])]);})
  : (((Shen.is_type(Arg5737_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg5737_0[1])) && (Shen.is_type(Arg5737_0[2], Shen.type_cons) && (Shen.is_type(Arg5737_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5737_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen-add_test"], [Arg5737_0[2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-reduce_help"], [Arg5737_0[2][2][1]]);}))
  : (((Shen.is_type(Arg5737_0, Shen.type_cons) && (Shen.is_type(Arg5737_0[2], Shen.type_cons) && Shen.empty$question$(Arg5737_0[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen-reduce_help"], [Arg5737_0[1]])),
  ((Shen.unwind_tail(Shen.$eq$(Arg5737_0[1], R0)))
  ? Arg5737_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen-reduce_help"], [[Shen.type_cons, R0, Arg5737_0[2]]]);})))
  : Arg5737_0))))))))},
  1,
  [],
  "shen-reduce_help"];






Shen.fns["shen-+string?"] = [Shen.type_func,
  function shen_user_lambda5740(Arg5739) {
  if (Arg5739.length < 1) return [Shen.type_func, shen_user_lambda5740, 1, Arg5739];
  var Arg5739_0 = Arg5739[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5739_0)))
  ? false
  : (typeof(Arg5739_0) == 'string'))},
  1,
  [],
  "shen-+string?"];






Shen.fns["shen-+vector"] = [Shen.type_func,
  function shen_user_lambda5742(Arg5741) {
  if (Arg5741.length < 1) return [Shen.type_func, shen_user_lambda5742, 1, Arg5741];
  var Arg5741_0 = Arg5741[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg5741_0, Shen.vector(0))))
  ? false
  : (function() {
  return Shen.vector$question$(Arg5741_0);}))},
  1,
  [],
  "shen-+vector"];






Shen.fns["shen-ebr"] = [Shen.type_func,
  function shen_user_lambda5744(Arg5743) {
  if (Arg5743.length < 3) return [Shen.type_func, shen_user_lambda5744, 3, Arg5743];
  var Arg5743_0 = Arg5743[0], Arg5743_1 = Arg5743[1], Arg5743_2 = Arg5743[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg5743_2, Arg5743_1)))
  ? Arg5743_0
  : (((Shen.is_type(Arg5743_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5743_2[1])) && (Shen.is_type(Arg5743_2[2], Shen.type_cons) && (Shen.is_type(Arg5743_2[2][2], Shen.type_cons) && (Shen.empty$question$(Arg5743_2[2][2][2]) && (Shen.call(Shen.fns["occurrences"], [Arg5743_1, Arg5743_2[2][1]]) > 0)))))))
  ? Arg5743_2
  : (((Shen.is_type(Arg5743_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg5743_2[1])) && (Shen.is_type(Arg5743_2[2], Shen.type_cons) && (Shen.is_type(Arg5743_2[2][2], Shen.type_cons) && (Shen.is_type(Arg5743_2[2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5743_2[2][2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg5743_2[2][1], Arg5743_1)))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg5743_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-ebr"], [Arg5743_0, Arg5743_2[2][1], Arg5743_2[2][2][1]]), Arg5743_2[2][2][2]]]]
  : ((Shen.is_type(Arg5743_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-ebr"], [Arg5743_0, Arg5743_1, Arg5743_2[1]]), Shen.call(Shen.fns["shen-ebr"], [Arg5743_0, Arg5743_1, Arg5743_2[2]])]
  : Arg5743_2))))},
  3,
  [],
  "shen-ebr"];






Shen.fns["shen-add_test"] = [Shen.type_func,
  function shen_user_lambda5746(Arg5745) {
  if (Arg5745.length < 1) return [Shen.type_func, shen_user_lambda5746, 1, Arg5745];
  var Arg5745_0 = Arg5745[0];
  return (Shen.globals["shen-*teststack*"] = [Shen.type_cons, Arg5745_0, (Shen.globals["shen-*teststack*"])])},
  1,
  [],
  "shen-add_test"];






Shen.fns["shen-cond-expression"] = [Shen.type_func,
  function shen_user_lambda5748(Arg5747) {
  if (Arg5747.length < 3) return [Shen.type_func, shen_user_lambda5748, 3, Arg5747];
  var Arg5747_0 = Arg5747[0], Arg5747_1 = Arg5747[1], Arg5747_2 = Arg5747[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-err-condition"], [Arg5747_0])),
  (R0 = Shen.call(Shen.fns["shen-case-form"], [Arg5747_2, R0])),
  (R0 = Shen.call(Shen.fns["shen-encode-choices"], [R0, Arg5747_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-cond-form"], [R0]);}))},
  3,
  [],
  "shen-cond-expression"];






Shen.fns["shen-cond-form"] = [Shen.type_func,
  function shen_user_lambda5750(Arg5749) {
  if (Arg5749.length < 1) return [Shen.type_func, shen_user_lambda5750, 1, Arg5749];
  var Arg5749_0 = Arg5749[0];
  return (((Shen.is_type(Arg5749_0, Shen.type_cons) && (Shen.is_type(Arg5749_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5749_0[1][1])) && (Shen.is_type(Arg5749_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5749_0[1][2][2]))))))
  ? Arg5749_0[1][2][1]
  : [Shen.type_cons, [Shen.type_symbol, "cond"], Arg5749_0])},
  1,
  [],
  "shen-cond-form"];






Shen.fns["shen-encode-choices"] = [Shen.type_func,
  function shen_user_lambda5752(Arg5751) {
  if (Arg5751.length < 2) return [Shen.type_func, shen_user_lambda5752, 2, Arg5751];
  var Arg5751_0 = Arg5751[0], Arg5751_1 = Arg5751[1];
  return ((Shen.empty$question$(Arg5751_0))
  ? []
  : (((Shen.is_type(Arg5751_0, Shen.type_cons) && (Shen.is_type(Arg5751_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5751_0[1][1])) && (Shen.is_type(Arg5751_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5751_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-choicepoint!"], Arg5751_0[1][2][1][1])) && (Shen.is_type(Arg5751_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5751_0[1][2][1][2][2]) && (Shen.empty$question$(Arg5751_0[1][2][2]) && Shen.empty$question$(Arg5751_0[2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg5751_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, (((Shen.globals["shen-*installing-kl*"]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-sys-error"], [Shen.type_cons, Arg5751_1, []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen-f_error"], [Shen.type_cons, Arg5751_1, []]]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg5751_0, Shen.type_cons) && (Shen.is_type(Arg5751_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5751_0[1][1])) && (Shen.is_type(Arg5751_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5751_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-choicepoint!"], Arg5751_0[1][2][1][1])) && (Shen.is_type(Arg5751_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5751_0[1][2][1][2][2]) && Shen.empty$question$(Arg5751_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg5751_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen-cond-form"], [Shen.call(Shen.fns["shen-encode-choices"], [Arg5751_0[2], Arg5751_1])]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg5751_0, Shen.type_cons) && (Shen.is_type(Arg5751_0[1], Shen.type_cons) && (Shen.is_type(Arg5751_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5751_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-choicepoint!"], Arg5751_0[1][2][1][1])) && (Shen.is_type(Arg5751_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5751_0[1][2][1][2][2]) && Shen.empty$question$(Arg5751_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Shen.call(Shen.fns["shen-cond-form"], [Shen.call(Shen.fns["shen-encode-choices"], [Arg5751_0[2], Arg5751_1])]), []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg5751_0[1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg5751_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg5751_0, Shen.type_cons) && (Shen.is_type(Arg5751_0[1], Shen.type_cons) && (Shen.is_type(Arg5751_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5751_0[1][2][2])))))
  ? [Shen.type_cons, Arg5751_0[1], Shen.call(Shen.fns["shen-encode-choices"], [Arg5751_0[2], Arg5751_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-encode-choices"]]);}))))))},
  2,
  [],
  "shen-encode-choices"];






Shen.fns["shen-case-form"] = [Shen.type_func,
  function shen_user_lambda5754(Arg5753) {
  if (Arg5753.length < 2) return [Shen.type_func, shen_user_lambda5754, 2, Arg5753];
  var Arg5753_0 = Arg5753[0], Arg5753_1 = Arg5753[1];
  return ((Shen.empty$question$(Arg5753_0))
  ? [Shen.type_cons, Arg5753_1, []]
  : (((Shen.is_type(Arg5753_0, Shen.type_cons) && (Shen.is_type(Arg5753_0[1], Shen.type_cons) && (Shen.is_type(Arg5753_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-tests"], Arg5753_0[1][1][1])) && (Shen.empty$question$(Arg5753_0[1][1][2]) && (Shen.is_type(Arg5753_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5753_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-choicepoint!"], Arg5753_0[1][2][1][1])) && (Shen.is_type(Arg5753_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5753_0[1][2][1][2][2]) && Shen.empty$question$(Arg5753_0[1][2][2]))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg5753_0[1][2]], Shen.call(Shen.fns["shen-case-form"], [Arg5753_0[2], Arg5753_1])]
  : (((Shen.is_type(Arg5753_0, Shen.type_cons) && (Shen.is_type(Arg5753_0[1], Shen.type_cons) && (Shen.is_type(Arg5753_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-tests"], Arg5753_0[1][1][1])) && (Shen.empty$question$(Arg5753_0[1][1][2]) && (Shen.is_type(Arg5753_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5753_0[1][2][2]))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg5753_0[1][2]], []]
  : (((Shen.is_type(Arg5753_0, Shen.type_cons) && (Shen.is_type(Arg5753_0[1], Shen.type_cons) && (Shen.is_type(Arg5753_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-tests"], Arg5753_0[1][1][1])) && (Shen.is_type(Arg5753_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5753_0[1][2][2])))))))
  ? [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-embed-and"], [Arg5753_0[1][1][2]]), Arg5753_0[1][2]], Shen.call(Shen.fns["shen-case-form"], [Arg5753_0[2], Arg5753_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-case-form"]]);})))))},
  2,
  [],
  "shen-case-form"];






Shen.fns["shen-embed-and"] = [Shen.type_func,
  function shen_user_lambda5756(Arg5755) {
  if (Arg5755.length < 1) return [Shen.type_func, shen_user_lambda5756, 1, Arg5755];
  var Arg5755_0 = Arg5755[0];
  return (((Shen.is_type(Arg5755_0, Shen.type_cons) && Shen.empty$question$(Arg5755_0[2])))
  ? Arg5755_0[1]
  : ((Shen.is_type(Arg5755_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, Arg5755_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen-embed-and"], [Arg5755_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-embed-and"]]);})))},
  1,
  [],
  "shen-embed-and"];






Shen.fns["shen-err-condition"] = [Shen.type_func,
  function shen_user_lambda5758(Arg5757) {
  if (Arg5757.length < 1) return [Shen.type_func, shen_user_lambda5758, 1, Arg5757];
  var Arg5757_0 = Arg5757[0];
  return (((Shen.globals["shen-*installing-kl*"]))
  ? [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-sys-error"], [Shen.type_cons, Arg5757_0, []]], []]]
  : [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-f_error"], [Shen.type_cons, Arg5757_0, []]], []]])},
  1,
  [],
  "shen-err-condition"];






Shen.fns["shen-sys-error"] = [Shen.type_func,
  function shen_user_lambda5760(Arg5759) {
  if (Arg5759.length < 1) return [Shen.type_func, shen_user_lambda5760, 1, Arg5759];
  var Arg5759_0 = Arg5759[0];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["system function ~A: unexpected argument~%", [Shen.fns['shen-tuple'], Arg5759_0, []]]);})},
  1,
  [],
  "shen-sys-error"];


















Shen.fns["eval"] = [Shen.type_func,
  function shen_user_lambda6713(Arg6712) {
  if (Arg6712.length < 1) return [Shen.type_func, shen_user_lambda6713, 1, Arg6712];
  var Arg6712_0 = Arg6712[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-walk"], [[Shen.type_func,
  function shen_user_lambda6715(Arg6714) {
  if (Arg6714.length < 1) return [Shen.type_func, shen_user_lambda6715, 1, Arg6714];
  var Arg6714_0 = Arg6714[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg6714_0]);})},
  1,
  []], Arg6712_0])),
  ((Shen.call(Shen.fns["shen-packaged?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6717(Arg6716) {
  if (Arg6716.length < 1) return [Shen.type_func, shen_user_lambda6717, 1, Arg6716];
  var Arg6716_0 = Arg6716[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-eval-without-macros"], [Arg6716_0]);})},
  1,
  []], Shen.call(Shen.fns["shen-package-contents"], [R0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-eval-without-macros"], [R0]);})))},
  1,
  [],
  "eval"];






Shen.fns["shen-eval-without-macros"] = [Shen.type_func,
  function shen_user_lambda6719(Arg6718) {
  if (Arg6718.length < 1) return [Shen.type_func, shen_user_lambda6719, 1, Arg6718];
  var Arg6718_0 = Arg6718[0];
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["shen-elim-define"], [Shen.call(Shen.fns["shen-proc-input+"], [Arg6718_0])]));})},
  1,
  [],
  "shen-eval-without-macros"];






Shen.fns["shen-proc-input+"] = [Shen.type_func,
  function shen_user_lambda6721(Arg6720) {
  if (Arg6720.length < 1) return [Shen.type_func, shen_user_lambda6721, 1, Arg6720];
  var Arg6720_0 = Arg6720[0];
  return (((Shen.is_type(Arg6720_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg6720_0[1])) && (Shen.is_type(Arg6720_0[2], Shen.type_cons) && (Shen.is_type(Arg6720_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6720_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Arg6720_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-rcons_form"], [Arg6720_0[2][2][1]]), []]]]
  : ((Shen.is_type(Arg6720_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6723(Arg6722) {
  if (Arg6722.length < 1) return [Shen.type_func, shen_user_lambda6723, 1, Arg6722];
  var Arg6722_0 = Arg6722[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-proc-input+"], [Arg6722_0]);})},
  1,
  []], Arg6720_0]);})
  : Arg6720_0))},
  1,
  [],
  "shen-proc-input+"];






Shen.fns["shen-elim-define"] = [Shen.type_func,
  function shen_user_lambda6725(Arg6724) {
  if (Arg6724.length < 1) return [Shen.type_func, shen_user_lambda6725, 1, Arg6724];
  var Arg6724_0 = Arg6724[0];
  return (((Shen.is_type(Arg6724_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg6724_0[1])) && Shen.is_type(Arg6724_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-shen->kl"], [Arg6724_0[2][1], Arg6724_0[2][2]]);})
  : ((Shen.is_type(Arg6724_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6727(Arg6726) {
  if (Arg6726.length < 1) return [Shen.type_func, shen_user_lambda6727, 1, Arg6726];
  var Arg6726_0 = Arg6726[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-elim-define"], [Arg6726_0]);})},
  1,
  []], Arg6724_0]);})
  : Arg6724_0))},
  1,
  [],
  "shen-elim-define"];






Shen.fns["shen-packaged?"] = [Shen.type_func,
  function shen_user_lambda6729(Arg6728) {
  if (Arg6728.length < 1) return [Shen.type_func, shen_user_lambda6729, 1, Arg6728];
  var Arg6728_0 = Arg6728[0];
  return (((Shen.is_type(Arg6728_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6728_0[1])) && (Shen.is_type(Arg6728_0[2], Shen.type_cons) && Shen.is_type(Arg6728_0[2][2], Shen.type_cons)))))
  ? true
  : false)},
  1,
  [],
  "shen-packaged?"];






Shen.fns["external"] = [Shen.type_func,
  function shen_user_lambda6731(Arg6730) {
  if (Arg6730.length < 1) return [Shen.type_func, shen_user_lambda6731, 1, Arg6730];
  var Arg6730_0 = Arg6730[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6730_0, [Shen.type_symbol, "shen-external-symbols"], (Shen.globals["shen-*property-vector*"])]);}, [Shen.type_func,
  function shen_user_lambda6733(Arg6732) {
  if (Arg6732.length < 2) return [Shen.type_func, shen_user_lambda6733, 2, Arg6732];
  var Arg6732_0 = Arg6732[0], Arg6732_1 = Arg6732[1];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["package ~A has not been used.~%", [Shen.fns['shen-tuple'], Arg6732_0, []]]);})},
  2,
  [Arg6730_0]]);})},
  1,
  [],
  "external"];






Shen.fns["shen-package-contents"] = [Shen.type_func,
  function shen_user_lambda6735(Arg6734) {
  if (Arg6734.length < 1) return [Shen.type_func, shen_user_lambda6735, 1, Arg6734];
  var Arg6734_0 = Arg6734[0];
  return (((Shen.is_type(Arg6734_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6734_0[1])) && (Shen.is_type(Arg6734_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg6734_0[2][1])) && Shen.is_type(Arg6734_0[2][2], Shen.type_cons))))))
  ? Arg6734_0[2][2][2]
  : (((Shen.is_type(Arg6734_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6734_0[1])) && (Shen.is_type(Arg6734_0[2], Shen.type_cons) && Shen.is_type(Arg6734_0[2][2], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-packageh"], [Arg6734_0[2][1], Arg6734_0[2][2][1], [Shen.type_symbol, "Code"]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-package-contents"]]);})))},
  1,
  [],
  "shen-package-contents"];






Shen.fns["shen-walk"] = [Shen.type_func,
  function shen_user_lambda6737(Arg6736) {
  if (Arg6736.length < 2) return [Shen.type_func, shen_user_lambda6737, 2, Arg6736];
  var Arg6736_0 = Arg6736[0], Arg6736_1 = Arg6736[1];
  return ((Shen.is_type(Arg6736_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Arg6736_0, [Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6739(Arg6738) {
  if (Arg6738.length < 2) return [Shen.type_func, shen_user_lambda6739, 2, Arg6738];
  var Arg6738_0 = Arg6738[0], Arg6738_1 = Arg6738[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-walk"], [Arg6738_0, Arg6738_1]);})},
  2,
  [Arg6736_0]], Arg6736_1])]);})
  : (function() {
  return Shen.call_tail(Arg6736_0, [Arg6736_1]);}))},
  2,
  [],
  "shen-walk"];






Shen.fns["compile"] = [Shen.type_func,
  function shen_user_lambda6741(Arg6740) {
  if (Arg6740.length < 3) return [Shen.type_func, shen_user_lambda6741, 3, Arg6740];
  var Arg6740_0 = Arg6740[0], Arg6740_1 = Arg6740[1], Arg6740_2 = Arg6740[2];
  var R0;
  return ((R0 = Shen.call(Arg6740_0, [[Shen.fns['shen-tuple'], Arg6740_1, []]])),
  (((Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0)) || (!Shen.empty$question$(Shen.call(Shen.fns["fst"], [R0])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-compile-error"], [R0, Arg6740_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["snd"], [R0]);})))},
  3,
  [],
  "compile"];






Shen.fns["shen-compile-error"] = [Shen.type_func,
  function shen_user_lambda6743(Arg6742) {
  if (Arg6742.length < 2) return [Shen.type_func, shen_user_lambda6743, 2, Arg6742];
  var Arg6742_0 = Arg6742[0], Arg6742_1 = Arg6742[1];
  return ((Shen.empty$question$(Arg6742_1))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg6742_0, Shen.fns['shen-tuple']) && Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6742_0]), Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Arg6742_1, [Shen.call(Shen.fns["fst"], [Arg6742_0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["syntax error~%", []]);})))},
  2,
  [],
  "shen-compile-error"];






Shen.fns["<e>"] = [Shen.type_func,
  function shen_user_lambda6745(Arg6744) {
  if (Arg6744.length < 1) return [Shen.type_func, shen_user_lambda6745, 1, Arg6744];
  var Arg6744_0 = Arg6744[0];
  return ((Shen.is_type(Arg6744_0, Shen.fns['shen-tuple']))
  ? [Shen.fns['shen-tuple'], Shen.call(Shen.fns["fst"], [Arg6744_0]), []]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "<e>"]]);}))},
  1,
  [],
  "<e>"];






Shen.fns["fail-if"] = [Shen.type_func,
  function shen_user_lambda6747(Arg6746) {
  if (Arg6746.length < 2) return [Shen.type_func, shen_user_lambda6747, 2, Arg6746];
  var Arg6746_0 = Arg6746[0], Arg6746_1 = Arg6746[1];
  return ((Shen.call(Arg6746_0, [Arg6746_1]))
  ? Shen.fail_obj
  : Arg6746_1)},
  2,
  [],
  "fail-if"];






Shen.fns["@s"] = [Shen.type_func,
  function shen_user_lambda6749(Arg6748) {
  if (Arg6748.length < 2) return [Shen.type_func, shen_user_lambda6749, 2, Arg6748];
  var Arg6748_0 = Arg6748[0], Arg6748_1 = Arg6748[1];
  return (Arg6748_0 + Arg6748_1)},
  2,
  [],
  "@s"];






Shen.fns["tc?"] = [Shen.type_func,
  function shen_user_lambda6751(Arg6750) {
  if (Arg6750.length < 1) return [Shen.type_func, shen_user_lambda6751, 1, Arg6750];
  var Arg6750_0 = Arg6750[0];
  return (Shen.globals["shen-*tc*"])},
  1,
  [],
  "tc?"];






Shen.fns["ps"] = [Shen.type_func,
  function shen_user_lambda6753(Arg6752) {
  if (Arg6752.length < 1) return [Shen.type_func, shen_user_lambda6753, 1, Arg6752];
  var Arg6752_0 = Arg6752[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6752_0, [Shen.type_symbol, "shen-source"], (Shen.globals["shen-*property-vector*"])]);}, [Shen.type_func,
  function shen_user_lambda6755(Arg6754) {
  if (Arg6754.length < 2) return [Shen.type_func, shen_user_lambda6755, 2, Arg6754];
  var Arg6754_0 = Arg6754[0], Arg6754_1 = Arg6754[1];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["~A not found.~%", [Shen.fns['shen-tuple'], Arg6754_0, []]]);})},
  2,
  [Arg6752_0]]);})},
  1,
  [],
  "ps"];






Shen.fns["explode"] = [Shen.type_func,
  function shen_user_lambda6757(Arg6756) {
  if (Arg6756.length < 1) return [Shen.type_func, shen_user_lambda6757, 1, Arg6756];
  var Arg6756_0 = Arg6756[0];
  return (((typeof(Arg6756_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-explode-string"], [Arg6756_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["explode"], [Shen.call(Shen.fns["intmake-string"], ["~A", [Shen.fns['shen-tuple'], Arg6756_0, []]])]);}))},
  1,
  [],
  "explode"];






Shen.fns["shen-explode-string"] = [Shen.type_func,
  function shen_user_lambda6759(Arg6758) {
  if (Arg6758.length < 1) return [Shen.type_func, shen_user_lambda6759, 1, Arg6758];
  var Arg6758_0 = Arg6758[0];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6758_0)))
  ? []
  : ((R0 = Arg6758_0[0]),
  (R1 = Shen.tlstr(Arg6758_0)),
  ((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen-eos"])))
  ? []
  : [Shen.type_cons, R0, Shen.call(Shen.fns["shen-explode-string"], [R1])])))},
  1,
  [],
  "shen-explode-string"];






Shen.fns["stinput"] = [Shen.type_func,
  function shen_user_lambda6761(Arg6760) {
  if (Arg6760.length < 1) return [Shen.type_func, shen_user_lambda6761, 1, Arg6760];
  var Arg6760_0 = Arg6760[0];
  return (Shen.globals["*stinput*"])},
  1,
  [],
  "stinput"];






Shen.fns["shen-+vector?"] = [Shen.type_func,
  function shen_user_lambda6763(Arg6762) {
  if (Arg6762.length < 1) return [Shen.type_func, shen_user_lambda6763, 1, Arg6762];
  var Arg6762_0 = Arg6762[0];
  return (Shen.absvector$question$(Arg6762_0) && (Shen.absvector_ref(Arg6762_0, 0) > 0))},
  1,
  [],
  "shen-+vector?"];












Shen.fns["shen-fillvector"] = [Shen.type_func,
  function shen_user_lambda6766(Arg6765) {
  if (Arg6765.length < 4) return [Shen.type_func, shen_user_lambda6766, 4, Arg6765];
  var Arg6765_0 = Arg6765[0], Arg6765_1 = Arg6765[1], Arg6765_2 = Arg6765[2], Arg6765_3 = Arg6765[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6765_2, Arg6765_1)))
  ? Shen.absvector_set(Arg6765_0, Arg6765_2, Arg6765_3)
  : (function() {
  return Shen.call_tail(Shen.fns["shen-fillvector"], [Shen.absvector_set(Arg6765_0, Arg6765_1, Arg6765_3), (1 + Arg6765_1), Arg6765_2, Arg6765_3]);}))},
  4,
  [],
  "shen-fillvector"];












Shen.fns["vector->"] = [Shen.type_func,
  function shen_user_lambda6769(Arg6768) {
  if (Arg6768.length < 3) return [Shen.type_func, shen_user_lambda6769, 3, Arg6768];
  var Arg6768_0 = Arg6768[0], Arg6768_1 = Arg6768[1], Arg6768_2 = Arg6768[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6768_1, 0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["cannot access 0th element of a vector~%", []]);})
  : Shen.absvector_set(Arg6768_0, Arg6768_1, Arg6768_2))},
  3,
  [],
  "vector->"];






Shen.fns["<-vector"] = [Shen.type_func,
  function shen_user_lambda6771(Arg6770) {
  if (Arg6770.length < 2) return [Shen.type_func, shen_user_lambda6771, 2, Arg6770];
  var Arg6770_0 = Arg6770[0], Arg6770_1 = Arg6770[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6770_1, 0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["cannot access 0th element of a vector~%", []]);})
  : ((R0 = Shen.absvector_ref(Arg6770_0, Arg6770_1)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["vector element not found~%", []]);})
  : R0)))},
  2,
  [],
  "<-vector"];






Shen.fns["shen-posint?"] = [Shen.type_func,
  function shen_user_lambda6773(Arg6772) {
  if (Arg6772.length < 1) return [Shen.type_func, shen_user_lambda6773, 1, Arg6772];
  var Arg6772_0 = Arg6772[0];
  return (Shen.call(Shen.fns["integer?"], [Arg6772_0]) && (Arg6772_0 >= 0))},
  1,
  [],
  "shen-posint?"];






Shen.fns["limit"] = [Shen.type_func,
  function shen_user_lambda6775(Arg6774) {
  if (Arg6774.length < 1) return [Shen.type_func, shen_user_lambda6775, 1, Arg6774];
  var Arg6774_0 = Arg6774[0];
  return Shen.absvector_ref(Arg6774_0, 0)},
  1,
  [],
  "limit"];












Shen.fns["shen-analyse-symbol?"] = [Shen.type_func,
  function shen_user_lambda6778(Arg6777) {
  if (Arg6777.length < 1) return [Shen.type_func, shen_user_lambda6778, 1, Arg6777];
  var Arg6777_0 = Arg6777[0];
  return ((Shen.is_type(Arg6777_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen-alpha?"], [Arg6777_0[1]]) && Shen.call(Shen.fns["shen-alphanums?"], [Arg6777_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-analyse-symbol?"]]);}))},
  1,
  [],
  "shen-analyse-symbol?"];






Shen.fns["shen-alpha?"] = [Shen.type_func,
  function shen_user_lambda6780(Arg6779) {
  if (Arg6779.length < 1) return [Shen.type_func, shen_user_lambda6780, 1, Arg6779];
  var Arg6779_0 = Arg6779[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6779_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", [Shen.type_cons, "a", [Shen.type_cons, "b", [Shen.type_cons, "c", [Shen.type_cons, "d", [Shen.type_cons, "e", [Shen.type_cons, "f", [Shen.type_cons, "g", [Shen.type_cons, "h", [Shen.type_cons, "i", [Shen.type_cons, "j", [Shen.type_cons, "k", [Shen.type_cons, "l", [Shen.type_cons, "m", [Shen.type_cons, "n", [Shen.type_cons, "o", [Shen.type_cons, "p", [Shen.type_cons, "q", [Shen.type_cons, "r", [Shen.type_cons, "s", [Shen.type_cons, "t", [Shen.type_cons, "u", [Shen.type_cons, "v", [Shen.type_cons, "w", [Shen.type_cons, "x", [Shen.type_cons, "y", [Shen.type_cons, "z", [Shen.type_cons, "=", [Shen.type_cons, "*", [Shen.type_cons, "/", [Shen.type_cons, "+", [Shen.type_cons, "-", [Shen.type_cons, "_", [Shen.type_cons, "?", [Shen.type_cons, "$", [Shen.type_cons, "!", [Shen.type_cons, "@", [Shen.type_cons, "~", [Shen.type_cons, ">", [Shen.type_cons, "<", [Shen.type_cons, "&", [Shen.type_cons, "%", [Shen.type_cons, "{", [Shen.type_cons, "}", [Shen.type_cons, ":", [Shen.type_cons, ";", [Shen.type_cons, "`", [Shen.type_cons, "#", [Shen.type_cons, "'", [Shen.type_cons, ".", []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})},
  1,
  [],
  "shen-alpha?"];






Shen.fns["shen-alphanums?"] = [Shen.type_func,
  function shen_user_lambda6782(Arg6781) {
  if (Arg6781.length < 1) return [Shen.type_func, shen_user_lambda6782, 1, Arg6781];
  var Arg6781_0 = Arg6781[0];
  return ((Shen.empty$question$(Arg6781_0))
  ? true
  : ((Shen.is_type(Arg6781_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen-alphanum?"], [Arg6781_0[1]]) && Shen.call(Shen.fns["shen-alphanums?"], [Arg6781_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-alphanums?"]]);})))},
  1,
  [],
  "shen-alphanums?"];






Shen.fns["shen-alphanum?"] = [Shen.type_func,
  function shen_user_lambda6784(Arg6783) {
  if (Arg6783.length < 1) return [Shen.type_func, shen_user_lambda6784, 1, Arg6783];
  var Arg6783_0 = Arg6783[0];
  return (Shen.call(Shen.fns["shen-alpha?"], [Arg6783_0]) || Shen.call(Shen.fns["shen-digit?"], [Arg6783_0]))},
  1,
  [],
  "shen-alphanum?"];






Shen.fns["shen-digit?"] = [Shen.type_func,
  function shen_user_lambda6786(Arg6785) {
  if (Arg6785.length < 1) return [Shen.type_func, shen_user_lambda6786, 1, Arg6785];
  var Arg6785_0 = Arg6785[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6785_0, [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]);})},
  1,
  [],
  "shen-digit?"];






Shen.fns["variable?"] = [Shen.type_func,
  function shen_user_lambda6788(Arg6787) {
  if (Arg6787.length < 1) return [Shen.type_func, shen_user_lambda6788, 1, Arg6787];
  var Arg6787_0 = Arg6787[0];
  var R0;
  return (((Shen.boolean$question$(Arg6787_0) || ((typeof(Arg6787_0) == 'number') || (typeof(Arg6787_0) == 'string'))))
  ? false
  : (function() {
  return Shen.trap_error(function() {return ((R0 = Shen.call(Shen.fns["explode"], [Arg6787_0])),
  Shen.call(Shen.fns["shen-analyse-variable?"], [R0]));}, [Shen.type_func,
  function shen_user_lambda6790(Arg6789) {
  if (Arg6789.length < 1) return [Shen.type_func, shen_user_lambda6790, 1, Arg6789];
  var Arg6789_0 = Arg6789[0];
  return false},
  1,
  []]);}))},
  1,
  [],
  "variable?"];






Shen.fns["shen-analyse-variable?"] = [Shen.type_func,
  function shen_user_lambda6792(Arg6791) {
  if (Arg6791.length < 1) return [Shen.type_func, shen_user_lambda6792, 1, Arg6791];
  var Arg6791_0 = Arg6791[0];
  return ((Shen.is_type(Arg6791_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen-uppercase?"], [Arg6791_0[1]]) && Shen.call(Shen.fns["shen-alphanums?"], [Arg6791_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-analyse-variable?"]]);}))},
  1,
  [],
  "shen-analyse-variable?"];






Shen.fns["shen-uppercase?"] = [Shen.type_func,
  function shen_user_lambda6794(Arg6793) {
  if (Arg6793.length < 1) return [Shen.type_func, shen_user_lambda6794, 1, Arg6793];
  var Arg6793_0 = Arg6793[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6793_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", []]]]]]]]]]]]]]]]]]]]]]]]]]]]);})},
  1,
  [],
  "shen-uppercase?"];






Shen.fns["gensym"] = [Shen.type_func,
  function shen_user_lambda6796(Arg6795) {
  if (Arg6795.length < 1) return [Shen.type_func, shen_user_lambda6796, 1, Arg6795];
  var Arg6795_0 = Arg6795[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg6795_0, (Shen.globals["shen-*gensym*"] = (1 + (Shen.globals["shen-*gensym*"])))]);})},
  1,
  [],
  "gensym"];






Shen.fns["concat"] = [Shen.type_func,
  function shen_user_lambda6798(Arg6797) {
  if (Arg6797.length < 2) return [Shen.type_func, shen_user_lambda6798, 2, Arg6797];
  var Arg6797_0 = Arg6797[0], Arg6797_1 = Arg6797[1];
  return (function() {
  return Shen.intern((Shen.str(Arg6797_0) + Shen.str(Arg6797_1)));})},
  2,
  [],
  "concat"];












Shen.fns["fst"] = [Shen.type_func,
  function shen_user_lambda6801(Arg6800) {
  if (Arg6800.length < 1) return [Shen.type_func, shen_user_lambda6801, 1, Arg6800];
  var Arg6800_0 = Arg6800[0];
  return Shen.absvector_ref(Arg6800_0, 1)},
  1,
  [],
  "fst"];






Shen.fns["snd"] = [Shen.type_func,
  function shen_user_lambda6803(Arg6802) {
  if (Arg6802.length < 1) return [Shen.type_func, shen_user_lambda6803, 1, Arg6802];
  var Arg6802_0 = Arg6802[0];
  return Shen.absvector_ref(Arg6802_0, 2)},
  1,
  [],
  "snd"];






Shen.fns["tuple?"] = [Shen.type_func,
  function shen_user_lambda6805(Arg6804) {
  if (Arg6804.length < 1) return [Shen.type_func, shen_user_lambda6805, 1, Arg6804];
  var Arg6804_0 = Arg6804[0];
  return (function() {
  return Shen.trap_error(function() {return (Shen.absvector$question$(Arg6804_0) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-tuple"], Shen.absvector_ref(Arg6804_0, 0))));}, [Shen.type_func,
  function shen_user_lambda6807(Arg6806) {
  if (Arg6806.length < 1) return [Shen.type_func, shen_user_lambda6807, 1, Arg6806];
  var Arg6806_0 = Arg6806[0];
  return false},
  1,
  []]);})},
  1,
  [],
  "tuple?"];






Shen.fns["append"] = [Shen.type_func,
  function shen_user_lambda6809(Arg6808) {
  if (Arg6808.length < 2) return [Shen.type_func, shen_user_lambda6809, 2, Arg6808];
  var Arg6808_0 = Arg6808[0], Arg6808_1 = Arg6808[1];
  return ((Shen.empty$question$(Arg6808_0))
  ? Arg6808_1
  : ((Shen.is_type(Arg6808_0, Shen.type_cons))
  ? [Shen.type_cons, Arg6808_0[1], Shen.call(Shen.fns["append"], [Arg6808_0[2], Arg6808_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "append"]]);})))},
  2,
  [],
  "append"];






Shen.fns["@v"] = [Shen.type_func,
  function shen_user_lambda6811(Arg6810) {
  if (Arg6810.length < 2) return [Shen.type_func, shen_user_lambda6811, 2, Arg6810];
  var Arg6810_0 = Arg6810[0], Arg6810_1 = Arg6810[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg6810_1])),
  (R1 = Shen.vector((R0 + 1))),
  (R1 = Shen.call(Shen.fns["vector->"], [R1, 1, Arg6810_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? R1
  : (function() {
  return Shen.call_tail(Shen.fns["shen-@v-help"], [Arg6810_1, 1, R0, R1]);})))},
  2,
  [],
  "@v"];






Shen.fns["shen-@v-help"] = [Shen.type_func,
  function shen_user_lambda6813(Arg6812) {
  if (Arg6812.length < 4) return [Shen.type_func, shen_user_lambda6813, 4, Arg6812];
  var Arg6812_0 = Arg6812[0], Arg6812_1 = Arg6812[1], Arg6812_2 = Arg6812[2], Arg6812_3 = Arg6812[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6812_2, Arg6812_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-copyfromvector"], [Arg6812_0, Arg6812_3, Arg6812_2, (Arg6812_2 + 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-@v-help"], [Arg6812_0, (Arg6812_1 + 1), Arg6812_2, Shen.call(Shen.fns["shen-copyfromvector"], [Arg6812_0, Arg6812_3, Arg6812_1, (Arg6812_1 + 1)])]);}))},
  4,
  [],
  "shen-@v-help"];






Shen.fns["shen-copyfromvector"] = [Shen.type_func,
  function shen_user_lambda6815(Arg6814) {
  if (Arg6814.length < 4) return [Shen.type_func, shen_user_lambda6815, 4, Arg6814];
  var Arg6814_0 = Arg6814[0], Arg6814_1 = Arg6814[1], Arg6814_2 = Arg6814[2], Arg6814_3 = Arg6814[3];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["vector->"], [Arg6814_1, Arg6814_3, Shen.call(Shen.fns["<-vector"], [Arg6814_0, Arg6814_2])]);}, [Shen.type_func,
  function shen_user_lambda6817(Arg6816) {
  if (Arg6816.length < 2) return [Shen.type_func, shen_user_lambda6817, 2, Arg6816];
  var Arg6816_0 = Arg6816[0], Arg6816_1 = Arg6816[1];
  return Arg6816_0},
  2,
  [Arg6814_1]]);})},
  4,
  [],
  "shen-copyfromvector"];






Shen.fns["hdv"] = [Shen.type_func,
  function shen_user_lambda6819(Arg6818) {
  if (Arg6818.length < 1) return [Shen.type_func, shen_user_lambda6819, 1, Arg6818];
  var Arg6818_0 = Arg6818[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg6818_0, 1]);}, [Shen.type_func,
  function shen_user_lambda6821(Arg6820) {
  if (Arg6820.length < 2) return [Shen.type_func, shen_user_lambda6821, 2, Arg6820];
  var Arg6820_0 = Arg6820[0], Arg6820_1 = Arg6820[1];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["hdv needs a non-empty vector as an argument; not ~S~%", [Shen.fns['shen-tuple'], Arg6820_0, []]]);})},
  2,
  [Arg6818_0]]);})},
  1,
  [],
  "hdv"];






Shen.fns["tlv"] = [Shen.type_func,
  function shen_user_lambda6823(Arg6822) {
  if (Arg6822.length < 1) return [Shen.type_func, shen_user_lambda6823, 1, Arg6822];
  var Arg6822_0 = Arg6822[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg6822_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["cannot take the tail of the empty vector~%", []]);})
  : ((Shen.unwind_tail(Shen.$eq$(R0, 1)))
  ? (function() {
  return Shen.vector(0);})
  : (Shen.vector((R0 - 1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen-tlv-help"], [Arg6822_0, 2, R0, Shen.vector((R0 - 1))]);})))))},
  1,
  [],
  "tlv"];






Shen.fns["shen-tlv-help"] = [Shen.type_func,
  function shen_user_lambda6825(Arg6824) {
  if (Arg6824.length < 4) return [Shen.type_func, shen_user_lambda6825, 4, Arg6824];
  var Arg6824_0 = Arg6824[0], Arg6824_1 = Arg6824[1], Arg6824_2 = Arg6824[2], Arg6824_3 = Arg6824[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6824_2, Arg6824_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-copyfromvector"], [Arg6824_0, Arg6824_3, Arg6824_2, (Arg6824_2 - 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-tlv-help"], [Arg6824_0, (Arg6824_1 + 1), Arg6824_2, Shen.call(Shen.fns["shen-copyfromvector"], [Arg6824_0, Arg6824_3, Arg6824_1, (Arg6824_1 - 1)])]);}))},
  4,
  [],
  "shen-tlv-help"];






Shen.fns["assoc"] = [Shen.type_func,
  function shen_user_lambda6827(Arg6826) {
  if (Arg6826.length < 2) return [Shen.type_func, shen_user_lambda6827, 2, Arg6826];
  var Arg6826_0 = Arg6826[0], Arg6826_1 = Arg6826[1];
  return ((Shen.empty$question$(Arg6826_1))
  ? []
  : (((Shen.is_type(Arg6826_1, Shen.type_cons) && (Shen.is_type(Arg6826_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6826_1[1][1], Arg6826_0)))))
  ? Arg6826_1[1]
  : ((Shen.is_type(Arg6826_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["assoc"], [Arg6826_0, Arg6826_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "assoc"]]);}))))},
  2,
  [],
  "assoc"];






Shen.fns["boolean?"] = [Shen.type_func,
  function shen_user_lambda6829(Arg6828) {
  if (Arg6828.length < 1) return [Shen.type_func, shen_user_lambda6829, 1, Arg6828];
  var Arg6828_0 = Arg6828[0];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg6828_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg6828_0)))
  ? true
  : false))},
  1,
  [],
  "boolean?"];






Shen.fns["nl"] = [Shen.type_func,
  function shen_user_lambda6831(Arg6830) {
  if (Arg6830.length < 1) return [Shen.type_func, shen_user_lambda6831, 1, Arg6830];
  var Arg6830_0 = Arg6830[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6830_0)))
  ? 0
  : (Shen.call(Shen.fns["intoutput"], ["~%", []]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [(Arg6830_0 - 1)]);})))},
  1,
  [],
  "nl"];






Shen.fns["difference"] = [Shen.type_func,
  function shen_user_lambda6833(Arg6832) {
  if (Arg6832.length < 2) return [Shen.type_func, shen_user_lambda6833, 2, Arg6832];
  var Arg6832_0 = Arg6832[0], Arg6832_1 = Arg6832[1];
  return ((Shen.empty$question$(Arg6832_0))
  ? []
  : ((Shen.is_type(Arg6832_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg6832_0[1], Arg6832_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["difference"], [Arg6832_0[2], Arg6832_1]);})
  : [Shen.type_cons, Arg6832_0[1], Shen.call(Shen.fns["difference"], [Arg6832_0[2], Arg6832_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "difference"]]);})))},
  2,
  [],
  "difference"];






Shen.fns["do"] = [Shen.type_func,
  function shen_user_lambda6835(Arg6834) {
  if (Arg6834.length < 2) return [Shen.type_func, shen_user_lambda6835, 2, Arg6834];
  var Arg6834_0 = Arg6834[0], Arg6834_1 = Arg6834[1];
  return Arg6834_1},
  2,
  [],
  "do"];






Shen.fns["element?"] = [Shen.type_func,
  function shen_user_lambda6837(Arg6836) {
  if (Arg6836.length < 2) return [Shen.type_func, shen_user_lambda6837, 2, Arg6836];
  var Arg6836_0 = Arg6836[0], Arg6836_1 = Arg6836[1];
  return ((Shen.empty$question$(Arg6836_1))
  ? false
  : (((Shen.is_type(Arg6836_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6836_1[1], Arg6836_0))))
  ? true
  : ((Shen.is_type(Arg6836_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6836_0, Arg6836_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "element?"]]);}))))},
  2,
  [],
  "element?"];












Shen.fns["fix"] = [Shen.type_func,
  function shen_user_lambda6840(Arg6839) {
  if (Arg6839.length < 2) return [Shen.type_func, shen_user_lambda6840, 2, Arg6839];
  var Arg6839_0 = Arg6839[0], Arg6839_1 = Arg6839[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-fix-help"], [Arg6839_0, Arg6839_1, Shen.call(Arg6839_0, [Arg6839_1])]);})},
  2,
  [],
  "fix"];






Shen.fns["shen-fix-help"] = [Shen.type_func,
  function shen_user_lambda6842(Arg6841) {
  if (Arg6841.length < 3) return [Shen.type_func, shen_user_lambda6842, 3, Arg6841];
  var Arg6841_0 = Arg6841[0], Arg6841_1 = Arg6841[1], Arg6841_2 = Arg6841[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6841_2, Arg6841_1)))
  ? Arg6841_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen-fix-help"], [Arg6841_0, Arg6841_2, Shen.call(Arg6841_0, [Arg6841_2])]);}))},
  3,
  [],
  "shen-fix-help"];






Shen.fns["put"] = [Shen.type_func,
  function shen_user_lambda6844(Arg6843) {
  if (Arg6843.length < 4) return [Shen.type_func, shen_user_lambda6844, 4, Arg6843];
  var Arg6843_0 = Arg6843[0], Arg6843_1 = Arg6843[1], Arg6843_2 = Arg6843[2], Arg6843_3 = Arg6843[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg6843_0, Shen.call(Shen.fns["limit"], [Arg6843_3])])),
  (R1 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg6843_3, R0]);}, [Shen.type_func,
  function shen_user_lambda6846(Arg6845) {
  if (Arg6845.length < 1) return [Shen.type_func, shen_user_lambda6846, 1, Arg6845];
  var Arg6845_0 = Arg6845[0];
  return []},
  1,
  []])),
  Shen.call(Shen.fns["vector->"], [Arg6843_3, R0, Shen.call(Shen.fns["shen-change-pointer-value"], [Arg6843_0, Arg6843_1, Arg6843_2, R1])]),
  Arg6843_2)},
  4,
  [],
  "put"];






Shen.fns["shen-change-pointer-value"] = [Shen.type_func,
  function shen_user_lambda6848(Arg6847) {
  if (Arg6847.length < 4) return [Shen.type_func, shen_user_lambda6848, 4, Arg6847];
  var Arg6847_0 = Arg6847[0], Arg6847_1 = Arg6847[1], Arg6847_2 = Arg6847[2], Arg6847_3 = Arg6847[3];
  return ((Shen.empty$question$(Arg6847_3))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg6847_0, [Shen.type_cons, Arg6847_1, []]], Arg6847_2], []]
  : (((Shen.is_type(Arg6847_3, Shen.type_cons) && (Shen.is_type(Arg6847_3[1], Shen.type_cons) && (Shen.is_type(Arg6847_3[1][1], Shen.type_cons) && (Shen.is_type(Arg6847_3[1][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6847_3[1][1][2][2]) && (Shen.unwind_tail(Shen.$eq$(Arg6847_3[1][1][2][1], Arg6847_1)) && Shen.unwind_tail(Shen.$eq$(Arg6847_3[1][1][1], Arg6847_0)))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6847_3[1][1], Arg6847_2], Arg6847_3[2]]
  : ((Shen.is_type(Arg6847_3, Shen.type_cons))
  ? [Shen.type_cons, Arg6847_3[1], Shen.call(Shen.fns["shen-change-pointer-value"], [Arg6847_0, Arg6847_1, Arg6847_2, Arg6847_3[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-change-pointer-value"]]);}))))},
  4,
  [],
  "shen-change-pointer-value"];






Shen.fns["get"] = [Shen.type_func,
  function shen_user_lambda6850(Arg6849) {
  if (Arg6849.length < 3) return [Shen.type_func, shen_user_lambda6850, 3, Arg6849];
  var Arg6849_0 = Arg6849[0], Arg6849_1 = Arg6849[1], Arg6849_2 = Arg6849[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg6849_0, Shen.call(Shen.fns["limit"], [Arg6849_2])])),
  (R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg6849_2, R0]);}, [Shen.type_func,
  function shen_user_lambda6852(Arg6851) {
  if (Arg6851.length < 1) return [Shen.type_func, shen_user_lambda6852, 1, Arg6851];
  var Arg6851_0 = Arg6851[0];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["pointer not found~%", []]);})},
  1,
  []])),
  (R0 = Shen.call(Shen.fns["assoc"], [[Shen.type_cons, Arg6849_0, [Shen.type_cons, Arg6849_1, []]], R0])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["value not found~%", []]);})
  : R0[2]))},
  3,
  [],
  "get"];






Shen.fns["hash"] = [Shen.type_func,
  function shen_user_lambda6854(Arg6853) {
  if (Arg6853.length < 2) return [Shen.type_func, shen_user_lambda6854, 2, Arg6853];
  var Arg6853_0 = Arg6853[0], Arg6853_1 = Arg6853[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-mod"], [Shen.call(Shen.fns["sum"], [Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6856(Arg6855) {
  if (Arg6855.length < 1) return [Shen.type_func, shen_user_lambda6856, 1, Arg6855];
  var Arg6855_0 = Arg6855[0];
  return (function() {
  return Shen.string_$gt$n(Arg6855_0);})},
  1,
  []], Shen.call(Shen.fns["explode"], [Arg6853_0])])]), Arg6853_1])),
  ((Shen.unwind_tail(Shen.$eq$(0, R0)))
  ? 1
  : R0))},
  2,
  [],
  "hash"];






Shen.fns["shen-mod"] = [Shen.type_func,
  function shen_user_lambda6858(Arg6857) {
  if (Arg6857.length < 2) return [Shen.type_func, shen_user_lambda6858, 2, Arg6857];
  var Arg6857_0 = Arg6857[0], Arg6857_1 = Arg6857[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-modh"], [Arg6857_0, Shen.call(Shen.fns["shen-multiples"], [Arg6857_0, [Shen.type_cons, Arg6857_1, []]])]);})},
  2,
  [],
  "shen-mod"];






Shen.fns["shen-multiples"] = [Shen.type_func,
  function shen_user_lambda6860(Arg6859) {
  if (Arg6859.length < 2) return [Shen.type_func, shen_user_lambda6860, 2, Arg6859];
  var Arg6859_0 = Arg6859[0], Arg6859_1 = Arg6859[1];
  return (((Shen.is_type(Arg6859_1, Shen.type_cons) && (Arg6859_1[1] > Arg6859_0)))
  ? Arg6859_1[2]
  : ((Shen.is_type(Arg6859_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-multiples"], [Arg6859_0, [Shen.type_cons, (2 * Arg6859_1[1]), Arg6859_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-multiples"]]);})))},
  2,
  [],
  "shen-multiples"];






Shen.fns["shen-modh"] = [Shen.type_func,
  function shen_user_lambda6862(Arg6861) {
  if (Arg6861.length < 2) return [Shen.type_func, shen_user_lambda6862, 2, Arg6861];
  var Arg6861_0 = Arg6861[0], Arg6861_1 = Arg6861[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6861_0)))
  ? 0
  : ((Shen.empty$question$(Arg6861_1))
  ? Arg6861_0
  : (((Shen.is_type(Arg6861_1, Shen.type_cons) && (Arg6861_1[1] > Arg6861_0)))
  ? ((Shen.empty$question$(Arg6861_1[2]))
  ? Arg6861_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen-modh"], [Arg6861_0, Arg6861_1[2]]);}))
  : ((Shen.is_type(Arg6861_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-modh"], [(Arg6861_0 - Arg6861_1[1]), Arg6861_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-modh"]]);})))))},
  2,
  [],
  "shen-modh"];






Shen.fns["sum"] = [Shen.type_func,
  function shen_user_lambda6864(Arg6863) {
  if (Arg6863.length < 1) return [Shen.type_func, shen_user_lambda6864, 1, Arg6863];
  var Arg6863_0 = Arg6863[0];
  return ((Shen.empty$question$(Arg6863_0))
  ? 0
  : ((Shen.is_type(Arg6863_0, Shen.type_cons))
  ? (Arg6863_0[1] + Shen.call(Shen.fns["sum"], [Arg6863_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "sum"]]);})))},
  1,
  [],
  "sum"];






Shen.fns["head"] = [Shen.type_func,
  function shen_user_lambda6866(Arg6865) {
  if (Arg6865.length < 1) return [Shen.type_func, shen_user_lambda6866, 1, Arg6865];
  var Arg6865_0 = Arg6865[0];
  return ((Shen.is_type(Arg6865_0, Shen.type_cons))
  ? Arg6865_0[1]
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["head expects a non-empty list", []]);}))},
  1,
  [],
  "head"];






Shen.fns["tail"] = [Shen.type_func,
  function shen_user_lambda6868(Arg6867) {
  if (Arg6867.length < 1) return [Shen.type_func, shen_user_lambda6868, 1, Arg6867];
  var Arg6867_0 = Arg6867[0];
  return ((Shen.is_type(Arg6867_0, Shen.type_cons))
  ? Arg6867_0[2]
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["tail expects a non-empty list", []]);}))},
  1,
  [],
  "tail"];






Shen.fns["hdstr"] = [Shen.type_func,
  function shen_user_lambda6870(Arg6869) {
  if (Arg6869.length < 1) return [Shen.type_func, shen_user_lambda6870, 1, Arg6869];
  var Arg6869_0 = Arg6869[0];
  return Arg6869_0[0]},
  1,
  [],
  "hdstr"];






Shen.fns["intersection"] = [Shen.type_func,
  function shen_user_lambda6872(Arg6871) {
  if (Arg6871.length < 2) return [Shen.type_func, shen_user_lambda6872, 2, Arg6871];
  var Arg6871_0 = Arg6871[0], Arg6871_1 = Arg6871[1];
  return ((Shen.empty$question$(Arg6871_0))
  ? []
  : ((Shen.is_type(Arg6871_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg6871_0[1], Arg6871_1]))
  ? [Shen.type_cons, Arg6871_0[1], Shen.call(Shen.fns["intersection"], [Arg6871_0[2], Arg6871_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["intersection"], [Arg6871_0[2], Arg6871_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "intersection"]]);})))},
  2,
  [],
  "intersection"];






Shen.fns["reverse"] = [Shen.type_func,
  function shen_user_lambda6874(Arg6873) {
  if (Arg6873.length < 1) return [Shen.type_func, shen_user_lambda6874, 1, Arg6873];
  var Arg6873_0 = Arg6873[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-reverse_help"], [Arg6873_0, []]);})},
  1,
  [],
  "reverse"];






Shen.fns["shen-reverse_help"] = [Shen.type_func,
  function shen_user_lambda6876(Arg6875) {
  if (Arg6875.length < 2) return [Shen.type_func, shen_user_lambda6876, 2, Arg6875];
  var Arg6875_0 = Arg6875[0], Arg6875_1 = Arg6875[1];
  return ((Shen.empty$question$(Arg6875_0))
  ? Arg6875_1
  : ((Shen.is_type(Arg6875_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-reverse_help"], [Arg6875_0[2], [Shen.type_cons, Arg6875_0[1], Arg6875_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-reverse_help"]]);})))},
  2,
  [],
  "shen-reverse_help"];






Shen.fns["union"] = [Shen.type_func,
  function shen_user_lambda6878(Arg6877) {
  if (Arg6877.length < 2) return [Shen.type_func, shen_user_lambda6878, 2, Arg6877];
  var Arg6877_0 = Arg6877[0], Arg6877_1 = Arg6877[1];
  return ((Shen.empty$question$(Arg6877_0))
  ? Arg6877_1
  : ((Shen.is_type(Arg6877_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg6877_0[1], Arg6877_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Arg6877_0[2], Arg6877_1]);})
  : [Shen.type_cons, Arg6877_0[1], Shen.call(Shen.fns["union"], [Arg6877_0[2], Arg6877_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "union"]]);})))},
  2,
  [],
  "union"];






Shen.fns["y-or-n?"] = [Shen.type_func,
  function shen_user_lambda6880(Arg6879) {
  if (Arg6879.length < 1) return [Shen.type_func, shen_user_lambda6880, 1, Arg6879];
  var Arg6879_0 = Arg6879[0];
  var R0;
  return (Shen.call(Shen.fns["intoutput"], [Arg6879_0, []]),
  Shen.call(Shen.fns["intoutput"], [" (y/n) ", []]),
  (R0 = Shen.call(Shen.fns["intmake-string"], ["~S", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["input"], []), []]])),
  ((Shen.unwind_tail(Shen.$eq$("y", R0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$("n", R0)))
  ? false
  : (Shen.call(Shen.fns["intoutput"], ["please answer y or n~%", []]),
  (function() {
  return Shen.call_tail(Shen.fns["y-or-n?"], [Arg6879_0]);})))))},
  1,
  [],
  "y-or-n?"];












Shen.fns["subst"] = [Shen.type_func,
  function shen_user_lambda6883(Arg6882) {
  if (Arg6882.length < 3) return [Shen.type_func, shen_user_lambda6883, 3, Arg6882];
  var Arg6882_0 = Arg6882[0], Arg6882_1 = Arg6882[1], Arg6882_2 = Arg6882[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6882_2, Arg6882_1)))
  ? Arg6882_0
  : ((Shen.is_type(Arg6882_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["subst"], [Arg6882_0, Arg6882_1, Arg6882_2[1]]), Shen.call(Shen.fns["subst"], [Arg6882_0, Arg6882_1, Arg6882_2[2]])]
  : Arg6882_2))},
  3,
  [],
  "subst"];






Shen.fns["cd"] = [Shen.type_func,
  function shen_user_lambda6885(Arg6884) {
  if (Arg6884.length < 1) return [Shen.type_func, shen_user_lambda6885, 1, Arg6884];
  var Arg6884_0 = Arg6884[0];
  return (Shen.globals["*home-directory*"] = ((Shen.unwind_tail(Shen.$eq$(Arg6884_0, "")))
  ? ""
  : Shen.call(Shen.fns["intmake-string"], ["~A/", [Shen.fns['shen-tuple'], Arg6884_0, []]])))},
  1,
  [],
  "cd"];






Shen.fns["map"] = [Shen.type_func,
  function shen_user_lambda6887(Arg6886) {
  if (Arg6886.length < 2) return [Shen.type_func, shen_user_lambda6887, 2, Arg6886];
  var Arg6886_0 = Arg6886[0], Arg6886_1 = Arg6886[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-map-h"], [Arg6886_0, Arg6886_1, []]);})},
  2,
  [],
  "map"];






Shen.fns["shen-map-h"] = [Shen.type_func,
  function shen_user_lambda6889(Arg6888) {
  if (Arg6888.length < 3) return [Shen.type_func, shen_user_lambda6889, 3, Arg6888];
  var Arg6888_0 = Arg6888[0], Arg6888_1 = Arg6888[1], Arg6888_2 = Arg6888[2];
  return ((Shen.empty$question$(Arg6888_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg6888_2]);})
  : ((Shen.is_type(Arg6888_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-map-h"], [Arg6888_0, Arg6888_1[2], [Shen.type_cons, Shen.call(Arg6888_0, [Arg6888_1[1]]), Arg6888_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-map-h"]]);})))},
  3,
  [],
  "shen-map-h"];






Shen.fns["length"] = [Shen.type_func,
  function shen_user_lambda6891(Arg6890) {
  if (Arg6890.length < 1) return [Shen.type_func, shen_user_lambda6891, 1, Arg6890];
  var Arg6890_0 = Arg6890[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-length-h"], [Arg6890_0, 0]);})},
  1,
  [],
  "length"];






Shen.fns["shen-length-h"] = [Shen.type_func,
  function shen_user_lambda6893(Arg6892) {
  if (Arg6892.length < 2) return [Shen.type_func, shen_user_lambda6893, 2, Arg6892];
  var Arg6892_0 = Arg6892[0], Arg6892_1 = Arg6892[1];
  return ((Shen.empty$question$(Arg6892_0))
  ? Arg6892_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen-length-h"], [Arg6892_0[2], (Arg6892_1 + 1)]);}))},
  2,
  [],
  "shen-length-h"];






Shen.fns["occurrences"] = [Shen.type_func,
  function shen_user_lambda6895(Arg6894) {
  if (Arg6894.length < 2) return [Shen.type_func, shen_user_lambda6895, 2, Arg6894];
  var Arg6894_0 = Arg6894[0], Arg6894_1 = Arg6894[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6894_1, Arg6894_0)))
  ? 1
  : ((Shen.is_type(Arg6894_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["occurrences"], [Arg6894_0, Arg6894_1[1]]) + Shen.call(Shen.fns["occurrences"], [Arg6894_0, Arg6894_1[2]]))
  : 0))},
  2,
  [],
  "occurrences"];






Shen.fns["nth"] = [Shen.type_func,
  function shen_user_lambda6897(Arg6896) {
  if (Arg6896.length < 2) return [Shen.type_func, shen_user_lambda6897, 2, Arg6896];
  var Arg6896_0 = Arg6896[0], Arg6896_1 = Arg6896[1];
  return (((Shen.unwind_tail(Shen.$eq$(1, Arg6896_0)) && Shen.is_type(Arg6896_1, Shen.type_cons)))
  ? Arg6896_1[1]
  : ((Shen.is_type(Arg6896_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["nth"], [(Arg6896_0 - 1), Arg6896_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "nth"]]);})))},
  2,
  [],
  "nth"];






Shen.fns["integer?"] = [Shen.type_func,
  function shen_user_lambda6899(Arg6898) {
  if (Arg6898.length < 1) return [Shen.type_func, shen_user_lambda6899, 1, Arg6898];
  var Arg6898_0 = Arg6898[0];
  var R0;
  return ((typeof(Arg6898_0) == 'number') && ((R0 = Shen.call(Shen.fns["shen-abs"], [Arg6898_0])),
  Shen.call(Shen.fns["shen-integer-test?"], [R0, Shen.call(Shen.fns["shen-magless"], [R0, 1])])))},
  1,
  [],
  "integer?"];






Shen.fns["shen-abs"] = [Shen.type_func,
  function shen_user_lambda6901(Arg6900) {
  if (Arg6900.length < 1) return [Shen.type_func, shen_user_lambda6901, 1, Arg6900];
  var Arg6900_0 = Arg6900[0];
  return (((Arg6900_0 > 0))
  ? Arg6900_0
  : (0 - Arg6900_0))},
  1,
  [],
  "shen-abs"];






Shen.fns["shen-magless"] = [Shen.type_func,
  function shen_user_lambda6903(Arg6902) {
  if (Arg6902.length < 2) return [Shen.type_func, shen_user_lambda6903, 2, Arg6902];
  var Arg6902_0 = Arg6902[0], Arg6902_1 = Arg6902[1];
  var R0;
  return ((R0 = (Arg6902_1 * 2)),
  (((R0 > Arg6902_0))
  ? Arg6902_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen-magless"], [Arg6902_0, R0]);})))},
  2,
  [],
  "shen-magless"];






Shen.fns["shen-integer-test?"] = [Shen.type_func,
  function shen_user_lambda6905(Arg6904) {
  if (Arg6904.length < 2) return [Shen.type_func, shen_user_lambda6905, 2, Arg6904];
  var Arg6904_0 = Arg6904[0], Arg6904_1 = Arg6904[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6904_0)))
  ? true
  : (((1 > Arg6904_0))
  ? false
  : ((R0 = (Arg6904_0 - Arg6904_1)),
  (((0 > R0))
  ? (function() {
  return Shen.call_tail(Shen.fns["integer?"], [Arg6904_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-integer-test?"], [R0, Arg6904_1]);})))))},
  2,
  [],
  "shen-integer-test?"];






Shen.fns["mapcan"] = [Shen.type_func,
  function shen_user_lambda6907(Arg6906) {
  if (Arg6906.length < 2) return [Shen.type_func, shen_user_lambda6907, 2, Arg6906];
  var Arg6906_0 = Arg6906[0], Arg6906_1 = Arg6906[1];
  return ((Shen.empty$question$(Arg6906_1))
  ? []
  : ((Shen.is_type(Arg6906_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Arg6906_0, [Arg6906_1[1]]), Shen.call(Shen.fns["mapcan"], [Arg6906_0, Arg6906_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "mapcan"]]);})))},
  2,
  [],
  "mapcan"];






Shen.fns["read-file-as-bytelist"] = [Shen.type_func,
  function shen_user_lambda6909(Arg6908) {
  if (Arg6908.length < 1) return [Shen.type_func, shen_user_lambda6909, 1, Arg6908];
  var Arg6908_0 = Arg6908[0];
  var R0, R1;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg6908_0, [Shen.type_symbol, "in"])),
  (R1 = Shen.read_byte(R0)),
  (R1 = Shen.call(Shen.fns["shen-read-file-as-bytelist-help"], [R0, R1, []])),
  Shen.close(R0),
  (function() {
  return Shen.call_tail(Shen.fns["reverse"], [R1]);}))},
  1,
  [],
  "read-file-as-bytelist"];






Shen.fns["shen-read-file-as-bytelist-help"] = [Shen.type_func,
  function shen_user_lambda6911(Arg6910) {
  if (Arg6910.length < 3) return [Shen.type_func, shen_user_lambda6911, 3, Arg6910];
  var Arg6910_0 = Arg6910[0], Arg6910_1 = Arg6910[1], Arg6910_2 = Arg6910[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6910_1)))
  ? Arg6910_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen-read-file-as-bytelist-help"], [Arg6910_0, Shen.read_byte(Arg6910_0), [Shen.type_cons, Arg6910_1, Arg6910_2]]);}))},
  3,
  [],
  "shen-read-file-as-bytelist-help"];






Shen.fns["read-file-as-string"] = [Shen.type_func,
  function shen_user_lambda6913(Arg6912) {
  if (Arg6912.length < 1) return [Shen.type_func, shen_user_lambda6913, 1, Arg6912];
  var Arg6912_0 = Arg6912[0];
  var R0;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg6912_0, [Shen.type_symbol, "in"])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-rfas-h"], [R0, Shen.read_byte(R0), ""]);}))},
  1,
  [],
  "read-file-as-string"];






Shen.fns["shen-rfas-h"] = [Shen.type_func,
  function shen_user_lambda6915(Arg6914) {
  if (Arg6914.length < 3) return [Shen.type_func, shen_user_lambda6915, 3, Arg6914];
  var Arg6914_0 = Arg6914[0], Arg6914_1 = Arg6914[1], Arg6914_2 = Arg6914[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6914_1)))
  ? (Shen.close(Arg6914_0),
  Arg6914_2)
  : (function() {
  return Shen.call_tail(Shen.fns["shen-rfas-h"], [Arg6914_0, Shen.read_byte(Arg6914_0), (Arg6914_2 + Shen.n_$gt$string(Arg6914_1))]);}))},
  3,
  [],
  "shen-rfas-h"];






Shen.fns["=="] = [Shen.type_func,
  function shen_user_lambda6917(Arg6916) {
  if (Arg6916.length < 2) return [Shen.type_func, shen_user_lambda6917, 2, Arg6916];
  var Arg6916_0 = Arg6916[0], Arg6916_1 = Arg6916[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6916_1, Arg6916_0)))
  ? true
  : false)},
  2,
  [],
  "=="];






Shen.fns["abort"] = [Shen.type_func,
  function shen_user_lambda6919(Arg6918) {
  if (Arg6918.length < 0) return [Shen.type_func, shen_user_lambda6919, 0, Arg6918];
  return (function() {
  return Shen.simple_error("");})},
  0,
  [],
  "abort"];






Shen.fns["read"] = [Shen.type_func,
  function shen_user_lambda6921(Arg6920) {
  if (Arg6920.length < 0) return [Shen.type_func, shen_user_lambda6921, 0, Arg6920];
  return Shen.call(Shen.fns["lineread"], [])[1]},
  0,
  [],
  "read"];






Shen.fns["input"] = [Shen.type_func,
  function shen_user_lambda6923(Arg6922) {
  if (Arg6922.length < 0) return [Shen.type_func, shen_user_lambda6923, 0, Arg6922];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["read"], [])]);})},
  0,
  [],
  "input"];






Shen.fns["input+"] = [Shen.type_func,
  function shen_user_lambda6925(Arg6924) {
  if (Arg6924.length < 2) return [Shen.type_func, shen_user_lambda6925, 2, Arg6924];
  var Arg6924_0 = Arg6924[0], Arg6924_1 = Arg6924[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["read"], [])),
  (R1 = Shen.call(Shen.fns["shen-typecheck"], [R0, Arg6924_1])),
  ((Shen.unwind_tail(Shen.$eq$(false, R1)))
  ? (Shen.call(Shen.fns["intoutput"], ["input is not of type ~R: please re-enter ", [Shen.fns['shen-tuple'], Arg6924_1, []]]),
  (function() {
  return Shen.call_tail(Shen.fns["input+"], [[Shen.type_symbol, ":"], Arg6924_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["eval"], [R0]);})))},
  2,
  [],
  "input+"];






Shen.fns["bound?"] = [Shen.type_func,
  function shen_user_lambda6927(Arg6926) {
  if (Arg6926.length < 1) return [Shen.type_func, shen_user_lambda6927, 1, Arg6926];
  var Arg6926_0 = Arg6926[0];
  var R0;
  return (Shen.is_type(Arg6926_0, Shen.type_symbol) && ((R0 = Shen.trap_error(function() {return (Shen.globals[Arg6926_0[1]]);}, [Shen.type_func,
  function shen_user_lambda6929(Arg6928) {
  if (Arg6928.length < 1) return [Shen.type_func, shen_user_lambda6929, 1, Arg6928];
  var Arg6928_0 = Arg6928[0];
  return [Shen.type_symbol, "shen-this-symbol-is-unbound"]},
  1,
  []])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen-this-symbol-is-unbound"])))
  ? false
  : true)))},
  1,
  [],
  "bound?"];






Shen.fns["shen-string->bytes"] = [Shen.type_func,
  function shen_user_lambda6931(Arg6930) {
  if (Arg6930.length < 1) return [Shen.type_func, shen_user_lambda6931, 1, Arg6930];
  var Arg6930_0 = Arg6930[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6930_0)))
  ? []
  : [Shen.type_cons, Shen.string_$gt$n(Arg6930_0[0]), Shen.call(Shen.fns["shen-string->bytes"], [Shen.tlstr(Arg6930_0)])])},
  1,
  [],
  "shen-string->bytes"];






Shen.fns["maxinferences"] = [Shen.type_func,
  function shen_user_lambda6933(Arg6932) {
  if (Arg6932.length < 1) return [Shen.type_func, shen_user_lambda6933, 1, Arg6932];
  var Arg6932_0 = Arg6932[0];
  return (Shen.globals["shen-*maxinferences*"] = Arg6932_0)},
  1,
  [],
  "maxinferences"];






Shen.fns["inferences"] = [Shen.type_func,
  function shen_user_lambda6935(Arg6934) {
  if (Arg6934.length < 1) return [Shen.type_func, shen_user_lambda6935, 1, Arg6934];
  var Arg6934_0 = Arg6934[0];
  return (Shen.globals["shen-*infs*"])},
  1,
  [],
  "inferences"];






Shen.fns["shen-hush"] = [Shen.type_func,
  function shen_user_lambda6937(Arg6936) {
  if (Arg6936.length < 1) return [Shen.type_func, shen_user_lambda6937, 1, Arg6936];
  var Arg6936_0 = Arg6936[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6936_0)))
  ? (Shen.globals["shen-*hush*"] = [Shen.type_symbol, "shen-hushed"])
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6936_0)))
  ? (Shen.globals["shen-*hush*"] = [Shen.type_symbol, "shen-unhushed"])
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["'hush' expects a + or a -~%", []]);})))},
  1,
  [],
  "shen-hush"];






Shen.fns["protect"] = [Shen.type_func,
  function shen_user_lambda6939(Arg6938) {
  if (Arg6938.length < 1) return [Shen.type_func, shen_user_lambda6939, 1, Arg6938];
  var Arg6938_0 = Arg6938[0];
  return Arg6938_0},
  1,
  [],
  "protect"];






Shen.fns["shen-stoutput"] = [Shen.type_func,
  function shen_user_lambda6941(Arg6940) {
  if (Arg6940.length < 1) return [Shen.type_func, shen_user_lambda6941, 1, Arg6940];
  var Arg6940_0 = Arg6940[0];
  return (Shen.globals["*stoutput*"])},
  1,
  [],
  "shen-stoutput"];












Shen.fns["shen-datatype-error"] = [Shen.type_func,
  function shen_user_lambda6605(Arg6604) {
  if (Arg6604.length < 1) return [Shen.type_func, shen_user_lambda6605, 1, Arg6604];
  var Arg6604_0 = Arg6604[0];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["datatype syntax error here:~%~% ~A~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-next-50"], [50, Arg6604_0]), []]]);})},
  1,
  [],
  "shen-datatype-error"];






Shen.fns["shen-<datatype-rules>"] = [Shen.type_func,
  function shen_user_lambda6607(Arg6606) {
  if (Arg6606.length < 1) return [Shen.type_func, shen_user_lambda6607, 1, Arg6606];
  var Arg6606_0 = Arg6606[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<datatype-rule>"], [Arg6606_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<datatype-rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6606_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<datatype-rules>"];






Shen.fns["shen-<datatype-rule>"] = [Shen.type_func,
  function shen_user_lambda6609(Arg6608) {
  if (Arg6608.length < 1) return [Shen.type_func, shen_user_lambda6609, 1, Arg6608];
  var Arg6608_0 = Arg6608[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen-<side-conditions>"], [Arg6608_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen-<singleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen-<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R2]), [Shen.fns['shen-tuple'], [Shen.type_symbol, "shen-single"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R2]), []]]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<side-conditions>"], [Arg6608_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen-<doubleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen-<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R2]), [Shen.fns['shen-tuple'], [Shen.type_symbol, "shen-double"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R2]), []]]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<datatype-rule>"];






Shen.fns["shen-<side-conditions>"] = [Shen.type_func,
  function shen_user_lambda6611(Arg6610) {
  if (Arg6610.length < 1) return [Shen.type_func, shen_user_lambda6611, 1, Arg6610];
  var Arg6610_0 = Arg6610[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<side-condition>"], [Arg6610_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<side-conditions>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6610_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<side-conditions>"];






Shen.fns["shen-<side-condition>"] = [Shen.type_func,
  function shen_user_lambda6613(Arg6612) {
  if (Arg6612.length < 1) return [Shen.type_func, shen_user_lambda6613, 1, Arg6612];
  var Arg6612_0 = Arg6612[0];
  var R0, R1;
  return ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6612_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Shen.call(Shen.fns["fst"], [Arg6612_0])[1]))))
  ? ((R0 = Shen.call(Shen.fns["shen-<expr>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6612_0])[2], Shen.call(Shen.fns["snd"], [Arg6612_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6612_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Shen.call(Shen.fns["fst"], [Arg6612_0])[1]))))
  ? ((R0 = Shen.call(Shen.fns["shen-<variable?>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6612_0])[2], Shen.call(Shen.fns["snd"], [Arg6612_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<expr>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<side-condition>"];






Shen.fns["shen-<variable?>"] = [Shen.type_func,
  function shen_user_lambda6615(Arg6614) {
  if (Arg6614.length < 1) return [Shen.type_func, shen_user_lambda6615, 1, Arg6614];
  var Arg6614_0 = Arg6614[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6614_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6614_0])[2], Shen.call(Shen.fns["snd"], [Arg6614_0])])]), (((!Shen.call(Shen.fns["variable?"], [Shen.call(Shen.fns["fst"], [Arg6614_0])[1]])))
  ? Shen.fail_obj
  : Shen.call(Shen.fns["fst"], [Arg6614_0])[1])]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<variable?>"];






Shen.fns["shen-<expr>"] = [Shen.type_func,
  function shen_user_lambda6617(Arg6616) {
  if (Arg6616.length < 1) return [Shen.type_func, shen_user_lambda6617, 1, Arg6616];
  var Arg6616_0 = Arg6616[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6616_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6616_0])[2], Shen.call(Shen.fns["snd"], [Arg6616_0])])]), (((Shen.call(Shen.fns["element?"], [Shen.call(Shen.fns["fst"], [Arg6616_0])[1], [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]) || (Shen.call(Shen.fns["shen-singleunderline?"], [Shen.call(Shen.fns["fst"], [Arg6616_0])[1]]) || Shen.call(Shen.fns["shen-doubleunderline?"], [Shen.call(Shen.fns["fst"], [Arg6616_0])[1]]))))
  ? Shen.fail_obj
  : Shen.call(Shen.fns["shen-remove-bar"], [Shen.call(Shen.fns["fst"], [Arg6616_0])[1]]))]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<expr>"];






Shen.fns["shen-remove-bar"] = [Shen.type_func,
  function shen_user_lambda6619(Arg6618) {
  if (Arg6618.length < 1) return [Shen.type_func, shen_user_lambda6619, 1, Arg6618];
  var Arg6618_0 = Arg6618[0];
  return (((Shen.is_type(Arg6618_0, Shen.type_cons) && (Shen.is_type(Arg6618_0[2], Shen.type_cons) && (Shen.is_type(Arg6618_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6618_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6618_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, Arg6618_0[1], Arg6618_0[2][2][1]]
  : ((Shen.is_type(Arg6618_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-remove-bar"], [Arg6618_0[1]]), Shen.call(Shen.fns["shen-remove-bar"], [Arg6618_0[2]])]
  : Arg6618_0))},
  1,
  [],
  "shen-remove-bar"];






Shen.fns["shen-<premises>"] = [Shen.type_func,
  function shen_user_lambda6621(Arg6620) {
  if (Arg6620.length < 1) return [Shen.type_func, shen_user_lambda6621, 1, Arg6620];
  var Arg6620_0 = Arg6620[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<premise>"], [Arg6620_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen-<premises>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6620_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<premises>"];






Shen.fns["shen-<semicolon-symbol>"] = [Shen.type_func,
  function shen_user_lambda6623(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6623, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6622_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6622_0])[2], Shen.call(Shen.fns["snd"], [Arg6622_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6622_0])[1], [Shen.type_symbol, ";"])))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<semicolon-symbol>"];






Shen.fns["shen-<premise>"] = [Shen.type_func,
  function shen_user_lambda6625(Arg6624) {
  if (Arg6624.length < 1) return [Shen.type_func, shen_user_lambda6625, 1, Arg6624];
  var Arg6624_0 = Arg6624[0];
  var R0, R1;
  return ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6624_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Shen.call(Shen.fns["fst"], [Arg6624_0])[1]))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6624_0])[2], Shen.call(Shen.fns["snd"], [Arg6624_0])])]), [Shen.type_symbol, "!"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<formulae>"], [Arg6624_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<formula>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<formula>"], [Arg6624_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.fns['shen-tuple'], [], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))},
  1,
  [],
  "shen-<premise>"];






Shen.fns["shen-<conclusion>"] = [Shen.type_func,
  function shen_user_lambda6627(Arg6626) {
  if (Arg6626.length < 1) return [Shen.type_func, shen_user_lambda6627, 1, Arg6626];
  var Arg6626_0 = Arg6626[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen-<formulae>"], [Arg6626_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<formula>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen-<semicolon-symbol>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R2]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<formula>"], [Arg6626_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.fns['shen-tuple'], [], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<conclusion>"];






Shen.fns["shen-<formulae>"] = [Shen.type_func,
  function shen_user_lambda6629(Arg6628) {
  if (Arg6628.length < 1) return [Shen.type_func, shen_user_lambda6629, 1, Arg6628];
  var Arg6628_0 = Arg6628[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<formula>"], [Arg6628_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<formulae>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<formula>"], [Arg6628_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6628_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))},
  1,
  [],
  "shen-<formulae>"];






Shen.fns["shen-<formula>"] = [Shen.type_func,
  function shen_user_lambda6631(Arg6630) {
  if (Arg6630.length < 1) return [Shen.type_func, shen_user_lambda6631, 1, Arg6630];
  var Arg6630_0 = Arg6630[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<expr>"], [Arg6630_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<type>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen-curry"], [Shen.call(Shen.fns["snd"], [R0])]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-normalise-type"], [Shen.call(Shen.fns["snd"], [R1])]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<expr>"], [Arg6630_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<formula>"];






Shen.fns["shen-<colonsymbol>"] = [Shen.type_func,
  function shen_user_lambda6633(Arg6632) {
  if (Arg6632.length < 1) return [Shen.type_func, shen_user_lambda6633, 1, Arg6632];
  var Arg6632_0 = Arg6632[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6632_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6632_0])[2], Shen.call(Shen.fns["snd"], [Arg6632_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6632_0])[1], [Shen.type_symbol, ";"])))
  ? Shen.call(Shen.fns["fst"], [Arg6632_0])[1]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<colonsymbol>"];






Shen.fns["shen-<type>"] = [Shen.type_func,
  function shen_user_lambda6635(Arg6634) {
  if (Arg6634.length < 1) return [Shen.type_func, shen_user_lambda6635, 1, Arg6634];
  var Arg6634_0 = Arg6634[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<expr>"], [Arg6634_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["shen-curry-type"], [Shen.call(Shen.fns["snd"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<type>"];






Shen.fns["shen-<doubleunderline>"] = [Shen.type_func,
  function shen_user_lambda6637(Arg6636) {
  if (Arg6636.length < 1) return [Shen.type_func, shen_user_lambda6637, 1, Arg6636];
  var Arg6636_0 = Arg6636[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6636_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6636_0])[2], Shen.call(Shen.fns["snd"], [Arg6636_0])])]), ((Shen.call(Shen.fns["shen-doubleunderline?"], [Shen.call(Shen.fns["fst"], [Arg6636_0])[1]]))
  ? Shen.call(Shen.fns["fst"], [Arg6636_0])[1]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<doubleunderline>"];






Shen.fns["shen-<singleunderline>"] = [Shen.type_func,
  function shen_user_lambda6639(Arg6638) {
  if (Arg6638.length < 1) return [Shen.type_func, shen_user_lambda6639, 1, Arg6638];
  var Arg6638_0 = Arg6638[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6638_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6638_0])[2], Shen.call(Shen.fns["snd"], [Arg6638_0])])]), ((Shen.call(Shen.fns["shen-singleunderline?"], [Shen.call(Shen.fns["fst"], [Arg6638_0])[1]]))
  ? Shen.call(Shen.fns["fst"], [Arg6638_0])[1]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<singleunderline>"];






Shen.fns["shen-singleunderline?"] = [Shen.type_func,
  function shen_user_lambda6641(Arg6640) {
  if (Arg6640.length < 1) return [Shen.type_func, shen_user_lambda6641, 1, Arg6640];
  var Arg6640_0 = Arg6640[0];
  return (Shen.is_type(Arg6640_0, Shen.type_symbol) && Shen.call(Shen.fns["shen-sh?"], [Shen.str(Arg6640_0)]))},
  1,
  [],
  "shen-singleunderline?"];






Shen.fns["shen-sh?"] = [Shen.type_func,
  function shen_user_lambda6643(Arg6642) {
  if (Arg6642.length < 1) return [Shen.type_func, shen_user_lambda6643, 1, Arg6642];
  var Arg6642_0 = Arg6642[0];
  return ((Shen.unwind_tail(Shen.$eq$("_", Arg6642_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6642_0[0], "_")) && Shen.call(Shen.fns["shen-sh?"], [Shen.tlstr(Arg6642_0)])))},
  1,
  [],
  "shen-sh?"];






Shen.fns["shen-doubleunderline?"] = [Shen.type_func,
  function shen_user_lambda6645(Arg6644) {
  if (Arg6644.length < 1) return [Shen.type_func, shen_user_lambda6645, 1, Arg6644];
  var Arg6644_0 = Arg6644[0];
  return (Shen.is_type(Arg6644_0, Shen.type_symbol) && Shen.call(Shen.fns["shen-dh?"], [Shen.str(Arg6644_0)]))},
  1,
  [],
  "shen-doubleunderline?"];






Shen.fns["shen-dh?"] = [Shen.type_func,
  function shen_user_lambda6647(Arg6646) {
  if (Arg6646.length < 1) return [Shen.type_func, shen_user_lambda6647, 1, Arg6646];
  var Arg6646_0 = Arg6646[0];
  return ((Shen.unwind_tail(Shen.$eq$("=", Arg6646_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6646_0[0], "=")) && Shen.call(Shen.fns["shen-dh?"], [Shen.tlstr(Arg6646_0)])))},
  1,
  [],
  "shen-dh?"];






Shen.fns["shen-process-datatype"] = [Shen.type_func,
  function shen_user_lambda6649(Arg6648) {
  if (Arg6648.length < 2) return [Shen.type_func, shen_user_lambda6649, 2, Arg6648];
  var Arg6648_0 = Arg6648[0], Arg6648_1 = Arg6648[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-remember-datatype"], [Shen.call(Shen.fns["shen-s-prolog"], [Shen.call(Shen.fns["shen-rules->horn-clauses"], [Arg6648_0, Arg6648_1])])]);})},
  2,
  [],
  "shen-process-datatype"];






Shen.fns["shen-remember-datatype"] = [Shen.type_func,
  function shen_user_lambda6651(Arg6650) {
  if (Arg6650.length < 1) return [Shen.type_func, shen_user_lambda6651, 1, Arg6650];
  var Arg6650_0 = Arg6650[0];
  return ((Shen.is_type(Arg6650_0, Shen.type_cons))
  ? ((Shen.globals["shen-*datatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6650_0[1], (Shen.globals["shen-*datatypes*"])])),
  (Shen.globals["shen-*alldatatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6650_0[1], (Shen.globals["shen-*alldatatypes*"])])),
  Arg6650_0[1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-remember-datatype"]]);}))},
  1,
  [],
  "shen-remember-datatype"];






Shen.fns["shen-rules->horn-clauses"] = [Shen.type_func,
  function shen_user_lambda6653(Arg6652) {
  if (Arg6652.length < 2) return [Shen.type_func, shen_user_lambda6653, 2, Arg6652];
  var Arg6652_0 = Arg6652[0], Arg6652_1 = Arg6652[1];
  return ((Shen.empty$question$(Arg6652_1))
  ? []
  : (((Shen.is_type(Arg6652_1, Shen.type_cons) && (Shen.is_type(Arg6652_1[1], Shen.fns['shen-tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-single"], Shen.call(Shen.fns["fst"], [Arg6652_1[1]]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-rule->horn-clause"], [Arg6652_0, Shen.call(Shen.fns["snd"], [Arg6652_1[1]])]), Shen.call(Shen.fns["shen-rules->horn-clauses"], [Arg6652_0, Arg6652_1[2]])]
  : (((Shen.is_type(Arg6652_1, Shen.type_cons) && (Shen.is_type(Arg6652_1[1], Shen.fns['shen-tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-double"], Shen.call(Shen.fns["fst"], [Arg6652_1[1]]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-rules->horn-clauses"], [Arg6652_0, Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen-double->singles"], [Shen.call(Shen.fns["snd"], [Arg6652_1[1]])]), Arg6652_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-rules->horn-clauses"]]);}))))},
  2,
  [],
  "shen-rules->horn-clauses"];






Shen.fns["shen-double->singles"] = [Shen.type_func,
  function shen_user_lambda6655(Arg6654) {
  if (Arg6654.length < 1) return [Shen.type_func, shen_user_lambda6655, 1, Arg6654];
  var Arg6654_0 = Arg6654[0];
  return [Shen.type_cons, Shen.call(Shen.fns["shen-right-rule"], [Arg6654_0]), [Shen.type_cons, Shen.call(Shen.fns["shen-left-rule"], [Arg6654_0]), []]]},
  1,
  [],
  "shen-double->singles"];






Shen.fns["shen-right-rule"] = [Shen.type_func,
  function shen_user_lambda6657(Arg6656) {
  if (Arg6656.length < 1) return [Shen.type_func, shen_user_lambda6657, 1, Arg6656];
  var Arg6656_0 = Arg6656[0];
  return [Shen.fns['shen-tuple'], [Shen.type_symbol, "shen-single"], Arg6656_0]},
  1,
  [],
  "shen-right-rule"];






Shen.fns["shen-left-rule"] = [Shen.type_func,
  function shen_user_lambda6659(Arg6658) {
  if (Arg6658.length < 1) return [Shen.type_func, shen_user_lambda6659, 1, Arg6658];
  var Arg6658_0 = Arg6658[0];
  var R0, R1;
  return (((Shen.is_type(Arg6658_0, Shen.type_cons) && (Shen.is_type(Arg6658_0[2], Shen.type_cons) && (Shen.is_type(Arg6658_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6658_0[2][2][1], Shen.fns['shen-tuple']) && (Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6658_0[2][2][1]])) && Shen.empty$question$(Arg6658_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Qv"]])),
  (R1 = [Shen.fns['shen-tuple'], [Shen.type_cons, Shen.call(Shen.fns["snd"], [Arg6658_0[2][2][1]]), []], R0]),
  (R0 = [Shen.type_cons, [Shen.fns['shen-tuple'], Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6661(Arg6660) {
  if (Arg6660.length < 1) return [Shen.type_func, shen_user_lambda6661, 1, Arg6660];
  var Arg6660_0 = Arg6660[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-right->left"], [Arg6660_0]);})},
  1,
  []], Arg6658_0[2][1]]), R0], []]),
  [Shen.fns['shen-tuple'], [Shen.type_symbol, "shen-single"], [Shen.type_cons, Arg6658_0[1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-left-rule"]]);}))},
  1,
  [],
  "shen-left-rule"];






Shen.fns["shen-right->left"] = [Shen.type_func,
  function shen_user_lambda6663(Arg6662) {
  if (Arg6662.length < 1) return [Shen.type_func, shen_user_lambda6663, 1, Arg6662];
  var Arg6662_0 = Arg6662[0];
  return (((Shen.is_type(Arg6662_0, Shen.fns['shen-tuple']) && Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6662_0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["snd"], [Arg6662_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["syntax error with ==========~%", []]);}))},
  1,
  [],
  "shen-right->left"];






Shen.fns["shen-rule->horn-clause"] = [Shen.type_func,
  function shen_user_lambda6665(Arg6664) {
  if (Arg6664.length < 2) return [Shen.type_func, shen_user_lambda6665, 2, Arg6664];
  var Arg6664_0 = Arg6664[0], Arg6664_1 = Arg6664[1];
  return (((Shen.is_type(Arg6664_1, Shen.type_cons) && (Shen.is_type(Arg6664_1[2], Shen.type_cons) && (Shen.is_type(Arg6664_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6664_1[2][2][1], Shen.fns['shen-tuple']) && Shen.empty$question$(Arg6664_1[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-rule->horn-clause-head"], [Arg6664_0, Shen.call(Shen.fns["snd"], [Arg6664_1[2][2][1]])]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen-rule->horn-clause-body"], [Arg6664_1[1], Arg6664_1[2][1], Shen.call(Shen.fns["fst"], [Arg6664_1[2][2][1]])]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-rule->horn-clause"]]);}))},
  2,
  [],
  "shen-rule->horn-clause"];






Shen.fns["shen-rule->horn-clause-head"] = [Shen.type_func,
  function shen_user_lambda6667(Arg6666) {
  if (Arg6666.length < 2) return [Shen.type_func, shen_user_lambda6667, 2, Arg6666];
  var Arg6666_0 = Arg6666[0], Arg6666_1 = Arg6666[1];
  return [Shen.type_cons, Arg6666_0, [Shen.type_cons, Shen.call(Shen.fns["shen-mode-ify"], [Arg6666_1]), [Shen.type_cons, [Shen.type_symbol, "Context_1957"], []]]]},
  2,
  [],
  "shen-rule->horn-clause-head"];






Shen.fns["shen-mode-ify"] = [Shen.type_func,
  function shen_user_lambda6669(Arg6668) {
  if (Arg6668.length < 1) return [Shen.type_func, shen_user_lambda6669, 1, Arg6668];
  var Arg6668_0 = Arg6668[0];
  return (((Shen.is_type(Arg6668_0, Shen.type_cons) && (Shen.is_type(Arg6668_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6668_0[2][1])) && (Shen.is_type(Arg6668_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6668_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_cons, Arg6668_0[1], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6668_0[2][2][1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "-"], []]]]
  : Arg6668_0)},
  1,
  [],
  "shen-mode-ify"];






Shen.fns["shen-rule->horn-clause-body"] = [Shen.type_func,
  function shen_user_lambda6671(Arg6670) {
  if (Arg6670.length < 3) return [Shen.type_func, shen_user_lambda6671, 3, Arg6670];
  var Arg6670_0 = Arg6670[0], Arg6670_1 = Arg6670[1], Arg6670_2 = Arg6670[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6673(Arg6672) {
  if (Arg6672.length < 1) return [Shen.type_func, shen_user_lambda6673, 1, Arg6672];
  var Arg6672_0 = Arg6672[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-extract_vars"], [Arg6672_0]);})},
  1,
  []], Arg6670_2])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6675(Arg6674) {
  if (Arg6674.length < 1) return [Shen.type_func, shen_user_lambda6675, 1, Arg6674];
  var Arg6674_0 = Arg6674[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "shen-cl"]]);})},
  1,
  []], Arg6670_2])),
  (R2 = Shen.call(Shen.fns["shen-construct-search-literals"], [R1, R0, [Shen.type_symbol, "Context_1957"], [Shen.type_symbol, "Context1_1957"]])),
  Shen.call(Shen.fns["shen-construct-search-clauses"], [R1, Arg6670_2, R0]),
  (R1 = Shen.call(Shen.fns["shen-construct-side-literals"], [Arg6670_0])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6677(Arg6676) {
  if (Arg6676.length < 2) return [Shen.type_func, shen_user_lambda6677, 2, Arg6676];
  var Arg6676_0 = Arg6676[0], Arg6676_1 = Arg6676[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-construct-premiss-literal"], [Arg6676_1, Shen.empty$question$(Arg6676_0)]);})},
  2,
  [Arg6670_2]], Arg6670_1])),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [R1, R0])]);}))},
  3,
  [],
  "shen-rule->horn-clause-body"];






Shen.fns["shen-construct-search-literals"] = [Shen.type_func,
  function shen_user_lambda6679(Arg6678) {
  if (Arg6678.length < 4) return [Shen.type_func, shen_user_lambda6679, 4, Arg6678];
  var Arg6678_0 = Arg6678[0], Arg6678_1 = Arg6678[1], Arg6678_2 = Arg6678[2], Arg6678_3 = Arg6678[3];
  return (((Shen.empty$question$(Arg6678_0) && Shen.empty$question$(Arg6678_1)))
  ? []
  : (function() {
  return Shen.call_tail(Shen.fns["shen-csl-help"], [Arg6678_0, Arg6678_1, Arg6678_2, Arg6678_3]);}))},
  4,
  [],
  "shen-construct-search-literals"];






Shen.fns["shen-csl-help"] = [Shen.type_func,
  function shen_user_lambda6681(Arg6680) {
  if (Arg6680.length < 4) return [Shen.type_func, shen_user_lambda6681, 4, Arg6680];
  var Arg6680_0 = Arg6680[0], Arg6680_1 = Arg6680[1], Arg6680_2 = Arg6680[2], Arg6680_3 = Arg6680[3];
  return (((Shen.empty$question$(Arg6680_0) && Shen.empty$question$(Arg6680_1)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "ContextOut_1957"], [Shen.type_cons, Arg6680_2, []]]], []]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && Shen.is_type(Arg6680_1, Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_cons, Arg6680_0[1], [Shen.type_cons, Arg6680_2, [Shen.type_cons, Arg6680_3, Arg6680_1[1]]]], Shen.call(Shen.fns["shen-csl-help"], [Arg6680_0[2], Arg6680_1[2], Arg6680_3, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Context"]])])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-csl-help"]]);})))},
  4,
  [],
  "shen-csl-help"];






Shen.fns["shen-construct-search-clauses"] = [Shen.type_func,
  function shen_user_lambda6683(Arg6682) {
  if (Arg6682.length < 3) return [Shen.type_func, shen_user_lambda6683, 3, Arg6682];
  var Arg6682_0 = Arg6682[0], Arg6682_1 = Arg6682[1], Arg6682_2 = Arg6682[2];
  return (((Shen.empty$question$(Arg6682_0) && (Shen.empty$question$(Arg6682_1) && Shen.empty$question$(Arg6682_2))))
  ? [Shen.type_symbol, "shen-skip"]
  : (((Shen.is_type(Arg6682_0, Shen.type_cons) && (Shen.is_type(Arg6682_1, Shen.type_cons) && Shen.is_type(Arg6682_2, Shen.type_cons))))
  ? (Shen.call(Shen.fns["shen-construct-search-clause"], [Arg6682_0[1], Arg6682_1[1], Arg6682_2[1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-construct-search-clauses"], [Arg6682_0[2], Arg6682_1[2], Arg6682_2[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-construct-search-clauses"]]);})))},
  3,
  [],
  "shen-construct-search-clauses"];






Shen.fns["shen-construct-search-clause"] = [Shen.type_func,
  function shen_user_lambda6685(Arg6684) {
  if (Arg6684.length < 3) return [Shen.type_func, shen_user_lambda6685, 3, Arg6684];
  var Arg6684_0 = Arg6684[0], Arg6684_1 = Arg6684[1], Arg6684_2 = Arg6684[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-s-prolog"], [[Shen.type_cons, Shen.call(Shen.fns["shen-construct-base-search-clause"], [Arg6684_0, Arg6684_1, Arg6684_2]), [Shen.type_cons, Shen.call(Shen.fns["shen-construct-recursive-search-clause"], [Arg6684_0, Arg6684_1, Arg6684_2]), []]]]);})},
  3,
  [],
  "shen-construct-search-clause"];






Shen.fns["shen-construct-base-search-clause"] = [Shen.type_func,
  function shen_user_lambda6687(Arg6686) {
  if (Arg6686.length < 3) return [Shen.type_func, shen_user_lambda6687, 3, Arg6686];
  var Arg6686_0 = Arg6686[0], Arg6686_1 = Arg6686[1], Arg6686_2 = Arg6686[2];
  return [Shen.type_cons, [Shen.type_cons, Arg6686_0, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-mode-ify"], [Arg6686_1]), [Shen.type_symbol, "In_1957"]], [Shen.type_cons, [Shen.type_symbol, "In_1957"], Arg6686_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [], []]]]},
  3,
  [],
  "shen-construct-base-search-clause"];






Shen.fns["shen-construct-recursive-search-clause"] = [Shen.type_func,
  function shen_user_lambda6689(Arg6688) {
  if (Arg6688.length < 3) return [Shen.type_func, shen_user_lambda6689, 3, Arg6688];
  var Arg6688_0 = Arg6688[0], Arg6688_1 = Arg6688[1], Arg6688_2 = Arg6688[2];
  return [Shen.type_cons, [Shen.type_cons, Arg6688_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Assumptions_1957"]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Out_1957"]], Arg6688_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg6688_0, [Shen.type_cons, [Shen.type_symbol, "Assumptions_1957"], [Shen.type_cons, [Shen.type_symbol, "Out_1957"], Arg6688_2]]], []], []]]]},
  3,
  [],
  "shen-construct-recursive-search-clause"];






Shen.fns["shen-construct-side-literals"] = [Shen.type_func,
  function shen_user_lambda6691(Arg6690) {
  if (Arg6690.length < 1) return [Shen.type_func, shen_user_lambda6691, 1, Arg6690];
  var Arg6690_0 = Arg6690[0];
  return ((Shen.empty$question$(Arg6690_0))
  ? []
  : (((Shen.is_type(Arg6690_0, Shen.type_cons) && (Shen.is_type(Arg6690_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6690_0[1][1])) && (Shen.is_type(Arg6690_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6690_0[1][2][2]))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "when"], Arg6690_0[1][2]], Shen.call(Shen.fns["shen-construct-side-literals"], [Arg6690_0[2]])]
  : (((Shen.is_type(Arg6690_0, Shen.type_cons) && (Shen.is_type(Arg6690_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6690_0[1][1])) && (Shen.is_type(Arg6690_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6690_0[1][2][2], Shen.type_cons) && Shen.empty$question$(Arg6690_0[1][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "is"], Arg6690_0[1][2]], Shen.call(Shen.fns["shen-construct-side-literals"], [Arg6690_0[2]])]
  : ((Shen.is_type(Arg6690_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-construct-side-literals"], [Arg6690_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-construct-side-literals"]]);})))))},
  1,
  [],
  "shen-construct-side-literals"];






Shen.fns["shen-construct-premiss-literal"] = [Shen.type_func,
  function shen_user_lambda6693(Arg6692) {
  if (Arg6692.length < 2) return [Shen.type_func, shen_user_lambda6693, 2, Arg6692];
  var Arg6692_0 = Arg6692[0], Arg6692_1 = Arg6692[1];
  return ((Shen.is_type(Arg6692_0, Shen.fns['shen-tuple']))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-t*"], [Shen.type_cons, Shen.call(Shen.fns["shen-recursive_cons_form"], [Shen.call(Shen.fns["snd"], [Arg6692_0])]), [Shen.type_cons, Shen.call(Shen.fns["shen-construct-context"], [Arg6692_1, Shen.call(Shen.fns["fst"], [Arg6692_0])]), []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6692_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-construct-premiss-literal"]]);})))},
  2,
  [],
  "shen-construct-premiss-literal"];






Shen.fns["shen-construct-context"] = [Shen.type_func,
  function shen_user_lambda6695(Arg6694) {
  if (Arg6694.length < 2) return [Shen.type_func, shen_user_lambda6695, 2, Arg6694];
  var Arg6694_0 = Arg6694[0], Arg6694_1 = Arg6694[1];
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg6694_0)) && Shen.empty$question$(Arg6694_1)))
  ? [Shen.type_symbol, "Context_1957"]
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg6694_0)) && Shen.empty$question$(Arg6694_1)))
  ? [Shen.type_symbol, "ContextOut_1957"]
  : ((Shen.is_type(Arg6694_1, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen-recursive_cons_form"], [Arg6694_1[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen-construct-context"], [Arg6694_0, Arg6694_1[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-construct-context"]]);}))))},
  2,
  [],
  "shen-construct-context"];






Shen.fns["shen-recursive_cons_form"] = [Shen.type_func,
  function shen_user_lambda6697(Arg6696) {
  if (Arg6696.length < 1) return [Shen.type_func, shen_user_lambda6697, 1, Arg6696];
  var Arg6696_0 = Arg6696[0];
  return ((Shen.is_type(Arg6696_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen-recursive_cons_form"], [Arg6696_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen-recursive_cons_form"], [Arg6696_0[2]]), []]]]
  : Arg6696_0)},
  1,
  [],
  "shen-recursive_cons_form"];






Shen.fns["preclude"] = [Shen.type_func,
  function shen_user_lambda6699(Arg6698) {
  if (Arg6698.length < 1) return [Shen.type_func, shen_user_lambda6699, 1, Arg6698];
  var Arg6698_0 = Arg6698[0];
  return ((Shen.globals["shen-*datatypes*"] = Shen.call(Shen.fns["difference"], [(Shen.globals["shen-*datatypes*"]), Arg6698_0])),
  (Shen.globals["shen-*datatypes*"]))},
  1,
  [],
  "preclude"];






Shen.fns["include"] = [Shen.type_func,
  function shen_user_lambda6701(Arg6700) {
  if (Arg6700.length < 1) return [Shen.type_func, shen_user_lambda6701, 1, Arg6700];
  var Arg6700_0 = Arg6700[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["intersection"], [Arg6700_0, (Shen.globals["shen-*alldatatypes*"])])),
  (Shen.globals["shen-*datatypes*"] = Shen.call(Shen.fns["union"], [R0, (Shen.globals["shen-*datatypes*"])])),
  (Shen.globals["shen-*datatypes*"]))},
  1,
  [],
  "include"];






Shen.fns["preclude-all-but"] = [Shen.type_func,
  function shen_user_lambda6703(Arg6702) {
  if (Arg6702.length < 1) return [Shen.type_func, shen_user_lambda6703, 1, Arg6702];
  var Arg6702_0 = Arg6702[0];
  return (function() {
  return Shen.call_tail(Shen.fns["preclude"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen-*alldatatypes*"]), Arg6702_0])]);})},
  1,
  [],
  "preclude-all-but"];






Shen.fns["include-all-but"] = [Shen.type_func,
  function shen_user_lambda6705(Arg6704) {
  if (Arg6704.length < 1) return [Shen.type_func, shen_user_lambda6705, 1, Arg6704];
  var Arg6704_0 = Arg6704[0];
  return (function() {
  return Shen.call_tail(Shen.fns["include"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen-*alldatatypes*"]), Arg6704_0])]);})},
  1,
  [],
  "include-all-but"];






Shen.fns["shen-synonyms-help"] = [Shen.type_func,
  function shen_user_lambda6707(Arg6706) {
  if (Arg6706.length < 1) return [Shen.type_func, shen_user_lambda6707, 1, Arg6706];
  var Arg6706_0 = Arg6706[0];
  return ((Shen.empty$question$(Arg6706_0))
  ? [Shen.type_symbol, "synonyms"]
  : (((Shen.is_type(Arg6706_0, Shen.type_cons) && Shen.is_type(Arg6706_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen-pushnew"], [[Shen.type_cons, Arg6706_0[1], Arg6706_0[2][1]], [Shen.type_symbol, "shen-*synonyms*"]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-synonyms-help"], [Arg6706_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["odd number of synonyms~%", [Shen.fns['shen-tuple'], [], []]]);})))},
  1,
  [],
  "shen-synonyms-help"];






Shen.fns["shen-pushnew"] = [Shen.type_func,
  function shen_user_lambda6709(Arg6708) {
  if (Arg6708.length < 2) return [Shen.type_func, shen_user_lambda6709, 2, Arg6708];
  var Arg6708_0 = Arg6708[0], Arg6708_1 = Arg6708[1];
  return ((Shen.call(Shen.fns["element?"], [Arg6708_0, (Shen.globals[Arg6708_1[1]])]))
  ? (Shen.globals[Arg6708_1[1]])
  : (Shen.globals[Arg6708_1[1]] = [Shen.type_cons, Arg6708_0, (Shen.globals[Arg6708_1[1]])]))},
  2,
  [],
  "shen-pushnew"];












Shen.fns["shen-yacc"] = [Shen.type_func,
  function shen_user_lambda7928(Arg7927) {
  if (Arg7927.length < 1) return [Shen.type_func, shen_user_lambda7928, 1, Arg7927];
  var Arg7927_0 = Arg7927[0];
  return (((Shen.is_type(Arg7927_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7927_0[1])) && Shen.is_type(Arg7927_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-yacc->shen"], [Arg7927_0[2][1], Arg7927_0[2][2], Shen.call(Shen.fns["shen-extract-segvars"], [Arg7927_0[2][2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-yacc"]]);}))},
  1,
  [],
  "shen-yacc"];






Shen.fns["shen-extract-segvars"] = [Shen.type_func,
  function shen_user_lambda7930(Arg7929) {
  if (Arg7929.length < 1) return [Shen.type_func, shen_user_lambda7930, 1, Arg7929];
  var Arg7929_0 = Arg7929[0];
  return ((Shen.call(Shen.fns["shen-segvar?"], [Arg7929_0]))
  ? [Shen.type_cons, Arg7929_0, []]
  : ((Shen.is_type(Arg7929_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen-extract-segvars"], [Arg7929_0[1]]), Shen.call(Shen.fns["shen-extract-segvars"], [Arg7929_0[2]])]);})
  : []))},
  1,
  [],
  "shen-extract-segvars"];






Shen.fns["shen-yacc->shen"] = [Shen.type_func,
  function shen_user_lambda7932(Arg7931) {
  if (Arg7931.length < 3) return [Shen.type_func, shen_user_lambda7932, 3, Arg7931];
  var Arg7931_0 = Arg7931[0], Arg7931_1 = Arg7931[1], Arg7931_2 = Arg7931[2];
  var R0;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7931_0, Shen.call(Shen.fns["shen-yacc_cases"], [Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda7934(Arg7933) {
  if (Arg7933.length < 1) return [Shen.type_func, shen_user_lambda7934, 1, Arg7933];
  var Arg7933_0 = Arg7933[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-cc_body"], [Arg7933_0]);})},
  1,
  []], Shen.call(Shen.fns["shen-split_cc_rules"], [Arg7931_1, []])])])]]),
  ((Shen.empty$question$(Arg7931_2))
  ? R0
  : [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [], [Shen.type_cons, R0, Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda7936(Arg7935) {
  if (Arg7935.length < 1) return [Shen.type_func, shen_user_lambda7936, 1, Arg7935];
  var Arg7935_0 = Arg7935[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-segdef"], [Arg7935_0]);})},
  1,
  []], Arg7931_2])]]]]))},
  3,
  [],
  "shen-yacc->shen"];






Shen.fns["shen-segdef"] = [Shen.type_func,
  function shen_user_lambda7938(Arg7937) {
  if (Arg7937.length < 1) return [Shen.type_func, shen_user_lambda7938, 1, Arg7937];
  var Arg7937_0 = Arg7937[0];
  return [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7937_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "In"], [Shen.type_cons, [Shen.type_symbol, "Out"], []]]], [Shen.type_cons, [Shen.type_symbol, "Continuation"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Continue"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Continuation"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_symbol, "Out"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "In"], [Shen.type_cons, [], []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Continue"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "In"], []]], []]]], [Shen.type_cons, [Shen.type_cons, Arg7937_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "In"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "In"], []]], [Shen.type_cons, [Shen.type_symbol, "Out"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]]], [Shen.type_cons, [Shen.type_symbol, "Continue"], []]]]], []]]]], []]]]]]]},
  1,
  [],
  "shen-segdef"];






Shen.fns["shen-yacc_cases"] = [Shen.type_func,
  function shen_user_lambda7940(Arg7939) {
  if (Arg7939.length < 1) return [Shen.type_func, shen_user_lambda7940, 1, Arg7939];
  var Arg7939_0 = Arg7939[0];
  return (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["mapcan"], [[Shen.type_func,
  function shen_user_lambda7942(Arg7941) {
  if (Arg7941.length < 1) return [Shen.type_func, shen_user_lambda7942, 1, Arg7941];
  var Arg7941_0 = Arg7941[0];
  return [Shen.type_cons, [Shen.type_symbol, "Stream"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, Arg7941_0, []]]]},
  1,
  []], Arg7939_0]), [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]);})},
  1,
  [],
  "shen-yacc_cases"];






Shen.fns["shen-first_n"] = [Shen.type_func,
  function shen_user_lambda7944(Arg7943) {
  if (Arg7943.length < 2) return [Shen.type_func, shen_user_lambda7944, 2, Arg7943];
  var Arg7943_0 = Arg7943[0], Arg7943_1 = Arg7943[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7943_0)))
  ? []
  : ((Shen.empty$question$(Arg7943_1))
  ? []
  : ((Shen.is_type(Arg7943_1, Shen.type_cons))
  ? [Shen.type_cons, Arg7943_1[1], Shen.call(Shen.fns["shen-first_n"], [(Arg7943_0 - 1), Arg7943_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-first_n"]]);}))))},
  2,
  [],
  "shen-first_n"];






Shen.fns["shen-split_cc_rules"] = [Shen.type_func,
  function shen_user_lambda7946(Arg7945) {
  if (Arg7945.length < 2) return [Shen.type_func, shen_user_lambda7946, 2, Arg7945];
  var Arg7945_0 = Arg7945[0], Arg7945_1 = Arg7945[1];
  return (((Shen.empty$question$(Arg7945_0) && Shen.empty$question$(Arg7945_1)))
  ? []
  : ((Shen.empty$question$(Arg7945_0))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7945_1]), []]), []]
  : (((Shen.is_type(Arg7945_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], Arg7945_0[1]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7945_1]), []]), Shen.call(Shen.fns["shen-split_cc_rules"], [Arg7945_0[2], []])]
  : ((Shen.is_type(Arg7945_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-split_cc_rules"], [Arg7945_0[2], [Shen.type_cons, Arg7945_0[1], Arg7945_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-split_cc_rules"]]);})))))},
  2,
  [],
  "shen-split_cc_rules"];






Shen.fns["shen-split_cc_rule"] = [Shen.type_func,
  function shen_user_lambda7948(Arg7947) {
  if (Arg7947.length < 2) return [Shen.type_func, shen_user_lambda7948, 2, Arg7947];
  var Arg7947_0 = Arg7947[0], Arg7947_1 = Arg7947[1];
  return (((Shen.is_type(Arg7947_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7947_0[1])) && (Shen.is_type(Arg7947_0[2], Shen.type_cons) && Shen.empty$question$(Arg7947_0[2][2])))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7947_1]), Arg7947_0[2]]
  : (((Shen.is_type(Arg7947_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7947_0[1]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7947_1]), [Shen.type_cons, Shen.call(Shen.fns["shen-cons_form"], [Arg7947_0[2]]), []]]
  : ((Shen.empty$question$(Arg7947_0))
  ? (Shen.call(Shen.fns["intoutput"], ["warning: ", []]),
  Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda7950(Arg7949) {
  if (Arg7949.length < 1) return [Shen.type_func, shen_user_lambda7950, 1, Arg7949];
  var Arg7949_0 = Arg7949[0];
  return (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["~A ", [Shen.fns['shen-tuple'], Arg7949_0, []]]);})},
  1,
  []], Shen.call(Shen.fns["reverse"], [Arg7947_1])]),
  Shen.call(Shen.fns["intoutput"], ["has no semantics.~%", []]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-split_cc_rule"], [[Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, Shen.call(Shen.fns["shen-default_semantics"], [Shen.call(Shen.fns["reverse"], [Arg7947_1])]), []]], Arg7947_1]);}))
  : ((Shen.is_type(Arg7947_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-split_cc_rule"], [Arg7947_0[2], [Shen.type_cons, Arg7947_0[1], Arg7947_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-split_cc_rule"]]);})))))},
  2,
  [],
  "shen-split_cc_rule"];






Shen.fns["shen-default_semantics"] = [Shen.type_func,
  function shen_user_lambda7952(Arg7951) {
  if (Arg7951.length < 1) return [Shen.type_func, shen_user_lambda7952, 1, Arg7951];
  var Arg7951_0 = Arg7951[0];
  var R0;
  return ((Shen.empty$question$(Arg7951_0))
  ? []
  : (((Shen.is_type(Arg7951_0, Shen.type_cons) && Shen.call(Shen.fns["shen-grammar_symbol?"], [Arg7951_0[1]])))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7951_0[1]]), []]]),
  ((Shen.empty$question$(Arg7951_0[2]))
  ? R0
  : [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["shen-default_semantics"], [Arg7951_0[2]]), []]]]))
  : ((Shen.is_type(Arg7951_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg7951_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen-default_semantics"], [Arg7951_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-default_semantics"]]);}))))},
  1,
  [],
  "shen-default_semantics"];






Shen.fns["shen-cc_body"] = [Shen.type_func,
  function shen_user_lambda7954(Arg7953) {
  if (Arg7953.length < 1) return [Shen.type_func, shen_user_lambda7954, 1, Arg7953];
  var Arg7953_0 = Arg7953[0];
  return (((Shen.is_type(Arg7953_0, Shen.type_cons) && (Shen.is_type(Arg7953_0[2], Shen.type_cons) && Shen.empty$question$(Arg7953_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-syntax"], [Arg7953_0[1], [Shen.type_symbol, "Stream"], Arg7953_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-cc_body"]]);}))},
  1,
  [],
  "shen-cc_body"];






Shen.fns["shen-syntax"] = [Shen.type_func,
  function shen_user_lambda7956(Arg7955) {
  if (Arg7955.length < 3) return [Shen.type_func, shen_user_lambda7956, 3, Arg7955];
  var Arg7955_0 = Arg7955[0], Arg7955_1 = Arg7955[1], Arg7955_2 = Arg7955[2];
  return ((Shen.empty$question$(Arg7955_0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-reassemble"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7955_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen-semantics"], [Arg7955_2]), []]]]
  : ((Shen.is_type(Arg7955_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen-grammar_symbol?"], [Arg7955_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-recursive_descent"], [Arg7955_0, Arg7955_1, Arg7955_2]);})
  : ((Shen.call(Shen.fns["shen-segvar?"], [Arg7955_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-segment-match"], [Arg7955_0, Arg7955_1, Arg7955_2]);})
  : ((Shen.call(Shen.fns["shen-terminal?"], [Arg7955_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-check_stream"], [Arg7955_0, Arg7955_1, Arg7955_2]);})
  : ((Shen.call(Shen.fns["shen-jump_stream?"], [Arg7955_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-jump_stream"], [Arg7955_0, Arg7955_1, Arg7955_2]);})
  : ((Shen.call(Shen.fns["shen-list_stream?"], [Arg7955_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-list_stream"], [Shen.call(Shen.fns["shen-decons"], [Arg7955_0[1]]), Arg7955_0[2], Arg7955_1, Arg7955_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["~A is not legal syntax~%", [Shen.fns['shen-tuple'], Arg7955_0[1], []]]);}))))))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-syntax"]]);})))},
  3,
  [],
  "shen-syntax"];






Shen.fns["shen-list_stream?"] = [Shen.type_func,
  function shen_user_lambda7958(Arg7957) {
  if (Arg7957.length < 1) return [Shen.type_func, shen_user_lambda7958, 1, Arg7957];
  var Arg7957_0 = Arg7957[0];
  return ((Shen.is_type(Arg7957_0, Shen.type_cons))
  ? true
  : false)},
  1,
  [],
  "shen-list_stream?"];






Shen.fns["shen-decons"] = [Shen.type_func,
  function shen_user_lambda7960(Arg7959) {
  if (Arg7959.length < 1) return [Shen.type_func, shen_user_lambda7960, 1, Arg7959];
  var Arg7959_0 = Arg7959[0];
  return (((Shen.is_type(Arg7959_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg7959_0[1])) && (Shen.is_type(Arg7959_0[2], Shen.type_cons) && (Shen.is_type(Arg7959_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7959_0[2][2][2]))))))
  ? [Shen.type_cons, Arg7959_0[2][1], Shen.call(Shen.fns["shen-decons"], [Arg7959_0[2][2][1]])]
  : Arg7959_0)},
  1,
  [],
  "shen-decons"];






Shen.fns["shen-list_stream"] = [Shen.type_func,
  function shen_user_lambda7962(Arg7961) {
  if (Arg7961.length < 4) return [Shen.type_func, shen_user_lambda7962, 4, Arg7961];
  var Arg7961_0 = Arg7961[0], Arg7961_1 = Arg7961[1], Arg7961_2 = Arg7961[2], Arg7961_3 = Arg7961[3];
  var R0, R1, R2;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7961_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7961_2, []]], []]], []]], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "shen-snd-or-fail"], [Shen.type_cons, Shen.call(Shen.fns["shen-syntax"], [Arg7961_0, [Shen.type_cons, [Shen.type_symbol, "shen-reassemble"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7961_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, Arg7961_2, []]], []]]], [Shen.type_cons, [Shen.type_symbol, "shen-leave!"], [Shen.type_cons, Shen.call(Shen.fns["shen-syntax"], [Arg7961_1, [Shen.type_cons, [Shen.type_symbol, "shen-reassemble"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7961_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, Arg7961_2, []]], []]]], Arg7961_3]), []]]]), []]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])},
  4,
  [],
  "shen-list_stream"];






Shen.fns["shen-snd-or-fail"] = [Shen.type_func,
  function shen_user_lambda7964(Arg7963) {
  if (Arg7963.length < 1) return [Shen.type_func, shen_user_lambda7964, 1, Arg7963];
  var Arg7963_0 = Arg7963[0];
  return ((Shen.is_type(Arg7963_0, Shen.fns['shen-tuple']))
  ? (function() {
  return Shen.call_tail(Shen.fns["snd"], [Arg7963_0]);})
  : Shen.fail_obj)},
  1,
  [],
  "shen-snd-or-fail"];






Shen.fns["shen-grammar_symbol?"] = [Shen.type_func,
  function shen_user_lambda7966(Arg7965) {
  if (Arg7965.length < 1) return [Shen.type_func, shen_user_lambda7966, 1, Arg7965];
  var Arg7965_0 = Arg7965[0];
  var R0;
  return (Shen.is_type(Arg7965_0, Shen.type_symbol) && ((R0 = Shen.call(Shen.fns["explode"], [Arg7965_0])),
  (Shen.unwind_tail(Shen.$eq$(R0[1], "<")) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["reverse"], [R0])[1], ">")))))},
  1,
  [],
  "shen-grammar_symbol?"];






Shen.fns["shen-recursive_descent"] = [Shen.type_func,
  function shen_user_lambda7968(Arg7967) {
  if (Arg7967.length < 3) return [Shen.type_func, shen_user_lambda7968, 3, Arg7967];
  var Arg7967_0 = Arg7967[0], Arg7967_1 = Arg7967[1], Arg7967_2 = Arg7967[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7967_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg7967_0[1], [Shen.type_cons, Arg7967_1, []]]),
  (R1 = Shen.call(Shen.fns["shen-syntax"], [Arg7967_0[2], Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7967_0[1]]), Arg7967_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7967_0[1]]), [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7967_0[1]]), []]]], []]], [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-recursive_descent"]]);}))},
  3,
  [],
  "shen-recursive_descent"];






Shen.fns["shen-segvar?"] = [Shen.type_func,
  function shen_user_lambda7970(Arg7969) {
  if (Arg7969.length < 1) return [Shen.type_func, shen_user_lambda7970, 1, Arg7969];
  var Arg7969_0 = Arg7969[0];
  return (Shen.is_type(Arg7969_0, Shen.type_symbol) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["explode"], [Arg7969_0])[1], "?")))},
  1,
  [],
  "shen-segvar?"];






Shen.fns["shen-segment-match"] = [Shen.type_func,
  function shen_user_lambda7972(Arg7971) {
  if (Arg7971.length < 3) return [Shen.type_func, shen_user_lambda7972, 3, Arg7971];
  var Arg7971_0 = Arg7971[0], Arg7971_1 = Arg7971[1], Arg7971_2 = Arg7971[2];
  var R0;
  return ((Shen.is_type(Arg7971_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg7971_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "Restart"], [Shen.type_cons, Shen.call(Shen.fns["shen-syntax"], [Arg7971_0[2], [Shen.type_symbol, "Restart"], Arg7971_2]), []]]], []]]]),
  [Shen.type_cons, Arg7971_0[1], [Shen.type_cons, Arg7971_1, [Shen.type_cons, R0, []]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-segment-match"]]);}))},
  3,
  [],
  "shen-segment-match"];






Shen.fns["shen-terminal?"] = [Shen.type_func,
  function shen_user_lambda7974(Arg7973) {
  if (Arg7973.length < 1) return [Shen.type_func, shen_user_lambda7974, 1, Arg7973];
  var Arg7973_0 = Arg7973[0];
  return ((Shen.is_type(Arg7973_0, Shen.type_cons))
  ? false
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-*-"], Arg7973_0)))
  ? false
  : true))},
  1,
  [],
  "shen-terminal?"];






Shen.fns["shen-jump_stream?"] = [Shen.type_func,
  function shen_user_lambda7976(Arg7975) {
  if (Arg7975.length < 1) return [Shen.type_func, shen_user_lambda7976, 1, Arg7975];
  var Arg7975_0 = Arg7975[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-*-"], Arg7975_0)))
  ? true
  : false)},
  1,
  [],
  "shen-jump_stream?"];






Shen.fns["shen-check_stream"] = [Shen.type_func,
  function shen_user_lambda7978(Arg7977) {
  if (Arg7977.length < 3) return [Shen.type_func, shen_user_lambda7978, 3, Arg7977];
  var Arg7977_0 = Arg7977[0], Arg7977_1 = Arg7977[1], Arg7977_2 = Arg7977[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7977_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7977_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg7977_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7977_1, []]], []]], []]]], []]]]),
  (R1 = Shen.call(Shen.fns["shen-syntax"], [Arg7977_0[2], [Shen.type_cons, [Shen.type_symbol, "shen-reassemble"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7977_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, Arg7977_1, []]], []]]], Arg7977_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-check_stream"]]);}))},
  3,
  [],
  "shen-check_stream"];






Shen.fns["shen-reassemble"] = [Shen.type_func,
  function shen_user_lambda7980(Arg7979) {
  if (Arg7979.length < 2) return [Shen.type_func, shen_user_lambda7980, 2, Arg7979];
  var Arg7979_0 = Arg7979[0], Arg7979_1 = Arg7979[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7979_1, Shen.fail_obj)))
  ? Arg7979_1
  : [Shen.fns['shen-tuple'], Arg7979_0, Arg7979_1])},
  2,
  [],
  "shen-reassemble"];






Shen.fns["shen-jump_stream"] = [Shen.type_func,
  function shen_user_lambda7982(Arg7981) {
  if (Arg7981.length < 3) return [Shen.type_func, shen_user_lambda7982, 3, Arg7981];
  var Arg7981_0 = Arg7981[0], Arg7981_1 = Arg7981[1], Arg7981_2 = Arg7981[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7981_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7981_1, []]], []]]),
  (R1 = Shen.call(Shen.fns["shen-syntax"], [Arg7981_0[2], [Shen.type_cons, [Shen.type_symbol, "shen-reassemble"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, Arg7981_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, Arg7981_1, []]], []]]], Arg7981_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-jump_stream"]]);}))},
  3,
  [],
  "shen-jump_stream"];






Shen.fns["shen-semantics"] = [Shen.type_func,
  function shen_user_lambda7984(Arg7983) {
  if (Arg7983.length < 1) return [Shen.type_func, shen_user_lambda7984, 1, Arg7983];
  var Arg7983_0 = Arg7983[0];
  return (((Shen.is_type(Arg7983_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-leave!"], Arg7983_0[1])) && (Shen.is_type(Arg7983_0[2], Shen.type_cons) && Shen.empty$question$(Arg7983_0[2][2])))))
  ? Arg7983_0[2][1]
  : ((Shen.empty$question$(Arg7983_0))
  ? []
  : ((Shen.call(Shen.fns["shen-grammar_symbol?"], [Arg7983_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7983_0]), []]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-o-"], Arg7983_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_symbol, "Stream"], []]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-*-"], Arg7983_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_symbol, "Stream"], []]], []]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-s-"], Arg7983_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_symbol, "Stream"], []]]
  : ((Shen.is_type(Arg7983_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda7986(Arg7985) {
  if (Arg7985.length < 1) return [Shen.type_func, shen_user_lambda7986, 1, Arg7985];
  var Arg7985_0 = Arg7985[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-semantics"], [Arg7985_0]);})},
  1,
  []], Arg7983_0]);})
  : Arg7983_0)))))))},
  1,
  [],
  "shen-semantics"];






Shen.fns["<!>"] = [Shen.type_func,
  function shen_user_lambda7988(Arg7987) {
  if (Arg7987.length < 1) return [Shen.type_func, shen_user_lambda7988, 1, Arg7987];
  var Arg7987_0 = Arg7987[0];
  return ((Shen.is_type(Arg7987_0, Shen.fns['shen-tuple']))
  ? [Shen.fns['shen-tuple'], [], Shen.call(Shen.fns["fst"], [Arg7987_0])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "<!>"]]);}))},
  1,
  [],
  "<!>"];












Shen.fns["print"] = [Shen.type_func,
  function shen_user_lambda7893(Arg7892) {
  if (Arg7892.length < 1) return [Shen.type_func, shen_user_lambda7893, 1, Arg7892];
  var Arg7892_0 = Arg7892[0];
  return (Shen.pr(Shen.call(Shen.fns["shen-ms-h"], [[Shen.type_cons, "~", [Shen.type_cons, "S", []]], [Shen.fns['shen-tuple'], Arg7892_0, [Shen.type_symbol, "shen-skip"]]]), Shen.call(Shen.fns["shen-stoutput"], [0])),
  Arg7892_0)},
  1,
  [],
  "print"];






Shen.fns["format"] = [Shen.type_func,
  function shen_user_lambda7895(Arg7894) {
  if (Arg7894.length < 3) return [Shen.type_func, shen_user_lambda7895, 3, Arg7894];
  var Arg7894_0 = Arg7894[0], Arg7894_1 = Arg7894[1], Arg7894_2 = Arg7894[2];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg7894_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intoutput"], [Arg7894_1, [Shen.fns['shen-tuple'], Arg7894_2, []]]);})
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg7894_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], [Arg7894_1, [Shen.fns['shen-tuple'], Arg7894_2, []]]);})
  : (function() {
  return Shen.pr(Shen.call(Shen.fns["shen-ms-h"], [Shen.call(Shen.fns["explode"], [Arg7894_1]), Arg7894_2]), Arg7894_0);})))},
  3,
  [],
  "format"];






Shen.fns["intoutput"] = [Shen.type_func,
  function shen_user_lambda7897(Arg7896) {
  if (Arg7896.length < 2) return [Shen.type_func, shen_user_lambda7897, 2, Arg7896];
  var Arg7896_0 = Arg7896[0], Arg7896_1 = Arg7896[1];
  return (function() {
  return Shen.pr(Shen.call(Shen.fns["shen-ms-h"], [Shen.call(Shen.fns["shen-explode-string"], [Arg7896_0]), Arg7896_1]), Shen.call(Shen.fns["shen-stoutput"], [0]));})},
  2,
  [],
  "intoutput"];






Shen.fns["interror"] = [Shen.type_func,
  function shen_user_lambda7899(Arg7898) {
  if (Arg7898.length < 2) return [Shen.type_func, shen_user_lambda7899, 2, Arg7898];
  var Arg7898_0 = Arg7898[0], Arg7898_1 = Arg7898[1];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen-ms-h"], [Shen.call(Shen.fns["shen-explode-string"], [Arg7898_0]), Arg7898_1]));})},
  2,
  [],
  "interror"];






Shen.fns["intmake-string"] = [Shen.type_func,
  function shen_user_lambda7901(Arg7900) {
  if (Arg7900.length < 2) return [Shen.type_func, shen_user_lambda7901, 2, Arg7900];
  var Arg7900_0 = Arg7900[0], Arg7900_1 = Arg7900[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-ms-h"], [Shen.call(Shen.fns["shen-explode-string"], [Arg7900_0]), Arg7900_1]);})},
  2,
  [],
  "intmake-string"];






Shen.fns["shen-ms-h"] = [Shen.type_func,
  function shen_user_lambda7903(Arg7902) {
  if (Arg7902.length < 2) return [Shen.type_func, shen_user_lambda7903, 2, Arg7902];
  var Arg7902_0 = Arg7902[0], Arg7902_1 = Arg7902[1];
  return ((Shen.empty$question$(Arg7902_0))
  ? ""
  : (((Shen.is_type(Arg7902_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("~", Arg7902_0[1])) && (Shen.is_type(Arg7902_0[2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("%", Arg7902_0[2][1]))))))
  ? (Shen.n_$gt$string(10) + Shen.call(Shen.fns["shen-ms-h"], [Arg7902_0[2][2], Arg7902_1]))
  : (((Shen.is_type(Arg7902_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("~", Arg7902_0[1])) && (Shen.is_type(Arg7902_0[2], Shen.type_cons) && (Shen.is_type(Arg7902_1, Shen.fns['shen-tuple']) && Shen.call(Shen.fns["element?"], [Arg7902_0[2][1], [Shen.type_cons, "A", [Shen.type_cons, "S", [Shen.type_cons, "R", []]]]]))))))
  ? (Shen.call(Shen.fns["shen-ob->str"], [Arg7902_0[2][1], Shen.call(Shen.fns["fst"], [Arg7902_1])]) + Shen.call(Shen.fns["shen-ms-h"], [Arg7902_0[2][2], Shen.call(Shen.fns["snd"], [Arg7902_1])]))
  : ((Shen.is_type(Arg7902_0, Shen.type_cons))
  ? (Arg7902_0[1] + Shen.call(Shen.fns["shen-ms-h"], [Arg7902_0[2], Arg7902_1]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-ms-h"]]);})))))},
  2,
  [],
  "shen-ms-h"];






Shen.fns["shen-ob->str"] = [Shen.type_func,
  function shen_user_lambda7905(Arg7904) {
  if (Arg7904.length < 2) return [Shen.type_func, shen_user_lambda7905, 2, Arg7904];
  var Arg7904_0 = Arg7904[0], Arg7904_1 = Arg7904[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7904_1, Shen.fail_obj)))
  ? "..."
  : ((Shen.empty$question$(Arg7904_1))
  ? ((Shen.unwind_tail(Shen.$eq$(Arg7904_0, "R")))
  ? "()"
  : "[]")
  : ((Shen.unwind_tail(Shen.$eq$(Arg7904_1, Shen.vector(0))))
  ? "<>"
  : ((Shen.is_type(Arg7904_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-cn-all"], [Shen.call(Shen.fns["append"], [((Shen.unwind_tail(Shen.$eq$(Arg7904_0, "R")))
  ? [Shen.type_cons, "(", []]
  : [Shen.type_cons, "[", []]), Shen.call(Shen.fns["append"], [[Shen.type_cons, Shen.call(Shen.fns["shen-ob->str"], [Arg7904_0, Arg7904_1[1]]), []], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen-xmapcan"], [(Shen.globals["*maximum-print-sequence-size*"]), [Shen.type_func,
  function shen_user_lambda7907(Arg7906) {
  if (Arg7906.length < 2) return [Shen.type_func, shen_user_lambda7907, 2, Arg7906];
  var Arg7906_0 = Arg7906[0], Arg7906_1 = Arg7906[1];
  return [Shen.type_cons, " ", [Shen.type_cons, Shen.call(Shen.fns["shen-ob->str"], [Arg7906_0, Arg7906_1]), []]]},
  2,
  [Arg7904_0]], Arg7904_1[2]]), ((Shen.unwind_tail(Shen.$eq$(Arg7904_0, "R")))
  ? [Shen.type_cons, ")", []]
  : [Shen.type_cons, "]", []])])])])]);})
  : ((Shen.vector$question$(Arg7904_1))
  ? ((R0 = Shen.call(Shen.fns["shen-vector->list"], [Arg7904_1, 1])),
  (R0 = Shen.tlstr(Shen.call(Shen.fns["shen-cn-all"], [Shen.call(Shen.fns["shen-xmapcan"], [((Shen.globals["*maximum-print-sequence-size*"]) - 1), [Shen.type_func,
  function shen_user_lambda7909(Arg7908) {
  if (Arg7908.length < 2) return [Shen.type_func, shen_user_lambda7909, 2, Arg7908];
  var Arg7908_0 = Arg7908[0], Arg7908_1 = Arg7908[1];
  return [Shen.type_cons, " ", [Shen.type_cons, Shen.call(Shen.fns["shen-ob->str"], [Arg7908_0, Arg7908_1]), []]]},
  2,
  [Arg7904_0]], R0])]))),
  (R0 = ("<" + (R0 + ">"))),
  R0)
  : ((((!(typeof(Arg7904_1) == 'string')) && Shen.absvector$question$(Arg7904_1)))
  ? (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["shen-ob->str"], ["A", Shen.call(Shen.absvector_ref(Arg7904_1, 0), [Arg7904_1])]);}, [Shen.type_func,
  function shen_user_lambda7911(Arg7910) {
  if (Arg7910.length < 3) return [Shen.type_func, shen_user_lambda7911, 3, Arg7910];
  var Arg7910_0 = Arg7910[0], Arg7910_1 = Arg7910[1], Arg7910_2 = Arg7910[2];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen-vector->list"], [Arg7910_0, 0])),
  (R1 = Shen.tlstr(Shen.call(Shen.fns["shen-cn-all"], [Shen.call(Shen.fns["shen-xmapcan"], [((Shen.globals["*maximum-print-sequence-size*"]) - 1), [Shen.type_func,
  function shen_user_lambda7913(Arg7912) {
  if (Arg7912.length < 2) return [Shen.type_func, shen_user_lambda7913, 2, Arg7912];
  var Arg7912_0 = Arg7912[0], Arg7912_1 = Arg7912[1];
  return [Shen.type_cons, " ", [Shen.type_cons, Shen.call(Shen.fns["shen-ob->str"], [Arg7912_0, Arg7912_1]), []]]},
  2,
  [Arg7910_1]], R0])]))),
  (R1 = ("<" + (R1 + ">"))),
  R1)},
  3,
  [Arg7904_1, Arg7904_0]]);})
  : (((Shen.unwind_tail(Shen.$eq$(Arg7904_0, "A")) && (typeof(Arg7904_1) == 'string')))
  ? Arg7904_1
  : (function() {
  return Shen.str(Arg7904_1);}))))))))},
  2,
  [],
  "shen-ob->str"];






Shen.fns["shen-tuple"] = [Shen.type_func,
  function shen_user_lambda7915(Arg7914) {
  if (Arg7914.length < 1) return [Shen.type_func, shen_user_lambda7915, 1, Arg7914];
  var Arg7914_0 = Arg7914[0];
  return (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["(@p ~S ~S)", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["fst"], [Arg7914_0]), [Shen.fns['shen-tuple'], Shen.call(Shen.fns["snd"], [Arg7914_0]), []]]]);})},
  1,
  [],
  "shen-tuple"];






Shen.fns["shen-cn-all"] = [Shen.type_func,
  function shen_user_lambda7917(Arg7916) {
  if (Arg7916.length < 1) return [Shen.type_func, shen_user_lambda7917, 1, Arg7916];
  var Arg7916_0 = Arg7916[0];
  return ((Shen.empty$question$(Arg7916_0))
  ? ""
  : ((Shen.is_type(Arg7916_0, Shen.type_cons))
  ? (Arg7916_0[1] + Shen.call(Shen.fns["shen-cn-all"], [Arg7916_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-cn-all"]]);})))},
  1,
  [],
  "shen-cn-all"];






Shen.fns["shen-xmapcan"] = [Shen.type_func,
  function shen_user_lambda7919(Arg7918) {
  if (Arg7918.length < 3) return [Shen.type_func, shen_user_lambda7919, 3, Arg7918];
  var Arg7918_0 = Arg7918[0], Arg7918_1 = Arg7918[1], Arg7918_2 = Arg7918[2];
  return ((Shen.empty$question$(Arg7918_2))
  ? []
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg7918_0)))
  ? [Shen.type_cons, "... etc", []]
  : ((Shen.is_type(Arg7918_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Arg7918_1, [Arg7918_2[1]]), Shen.call(Shen.fns["shen-xmapcan"], [(Arg7918_0 - 1), Arg7918_1, Arg7918_2[2]])]);})
  : [Shen.type_cons, " |", Shen.call(Arg7918_1, [Arg7918_2])])))},
  3,
  [],
  "shen-xmapcan"];






Shen.fns["shen-vector->list"] = [Shen.type_func,
  function shen_user_lambda7921(Arg7920) {
  if (Arg7920.length < 2) return [Shen.type_func, shen_user_lambda7921, 2, Arg7920];
  var Arg7920_0 = Arg7920[0], Arg7920_1 = Arg7920[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-vector->listh"], [Arg7920_0, Arg7920_1, []]);})},
  2,
  [],
  "shen-vector->list"];






Shen.fns["shen-vector->listh"] = [Shen.type_func,
  function shen_user_lambda7923(Arg7922) {
  if (Arg7922.length < 3) return [Shen.type_func, shen_user_lambda7923, 3, Arg7922];
  var Arg7922_0 = Arg7922[0], Arg7922_1 = Arg7922[1], Arg7922_2 = Arg7922[2];
  var R0;
  return ((R0 = Shen.trap_error(function() {return Shen.absvector_ref(Arg7922_0, Arg7922_1);}, [Shen.type_func,
  function shen_user_lambda7925(Arg7924) {
  if (Arg7924.length < 1) return [Shen.type_func, shen_user_lambda7925, 1, Arg7924];
  var Arg7924_0 = Arg7924[0];
  return [Shen.type_symbol, "shen-out-of-range"]},
  1,
  []])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen-out-of-range"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg7922_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-vector->listh"], [Arg7922_0, (Arg7922_1 + 1), [Shen.type_cons, R0, Arg7922_2]]);})))},
  3,
  [],
  "shen-vector->listh"];












Shen.fns["shen-toplevel-6224"] = [Shen.type_func,
  function shen_user_lambda6225(Arg6223) {
  if (Arg6223.length < 0) return [Shen.type_func, shen_user_lambda6225, 0, Arg6223];
  return (Shen.globals["shen-*symbolcodes*"] = Shen.vector(128))},
  0,
  [],
  "shen-toplevel-6224"];

Shen.call_toplevel("shen-toplevel-6224")






Shen.fns["shen-toplevel-6227"] = [Shen.type_func,
  function shen_user_lambda6228(Arg6226) {
  if (Arg6226.length < 0) return [Shen.type_func, shen_user_lambda6228, 0, Arg6226];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 126, "~")},
  0,
  [],
  "shen-toplevel-6227"];

Shen.call_toplevel("shen-toplevel-6227")






Shen.fns["shen-toplevel-6230"] = [Shen.type_func,
  function shen_user_lambda6231(Arg6229) {
  if (Arg6229.length < 0) return [Shen.type_func, shen_user_lambda6231, 0, Arg6229];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 122, "z")},
  0,
  [],
  "shen-toplevel-6230"];

Shen.call_toplevel("shen-toplevel-6230")






Shen.fns["shen-toplevel-6233"] = [Shen.type_func,
  function shen_user_lambda6234(Arg6232) {
  if (Arg6232.length < 0) return [Shen.type_func, shen_user_lambda6234, 0, Arg6232];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 121, "y")},
  0,
  [],
  "shen-toplevel-6233"];

Shen.call_toplevel("shen-toplevel-6233")






Shen.fns["shen-toplevel-6236"] = [Shen.type_func,
  function shen_user_lambda6237(Arg6235) {
  if (Arg6235.length < 0) return [Shen.type_func, shen_user_lambda6237, 0, Arg6235];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 120, "x")},
  0,
  [],
  "shen-toplevel-6236"];

Shen.call_toplevel("shen-toplevel-6236")






Shen.fns["shen-toplevel-6239"] = [Shen.type_func,
  function shen_user_lambda6240(Arg6238) {
  if (Arg6238.length < 0) return [Shen.type_func, shen_user_lambda6240, 0, Arg6238];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 119, "w")},
  0,
  [],
  "shen-toplevel-6239"];

Shen.call_toplevel("shen-toplevel-6239")






Shen.fns["shen-toplevel-6242"] = [Shen.type_func,
  function shen_user_lambda6243(Arg6241) {
  if (Arg6241.length < 0) return [Shen.type_func, shen_user_lambda6243, 0, Arg6241];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 118, "v")},
  0,
  [],
  "shen-toplevel-6242"];

Shen.call_toplevel("shen-toplevel-6242")






Shen.fns["shen-toplevel-6245"] = [Shen.type_func,
  function shen_user_lambda6246(Arg6244) {
  if (Arg6244.length < 0) return [Shen.type_func, shen_user_lambda6246, 0, Arg6244];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 117, "u")},
  0,
  [],
  "shen-toplevel-6245"];

Shen.call_toplevel("shen-toplevel-6245")






Shen.fns["shen-toplevel-6248"] = [Shen.type_func,
  function shen_user_lambda6249(Arg6247) {
  if (Arg6247.length < 0) return [Shen.type_func, shen_user_lambda6249, 0, Arg6247];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 116, "t")},
  0,
  [],
  "shen-toplevel-6248"];

Shen.call_toplevel("shen-toplevel-6248")






Shen.fns["shen-toplevel-6251"] = [Shen.type_func,
  function shen_user_lambda6252(Arg6250) {
  if (Arg6250.length < 0) return [Shen.type_func, shen_user_lambda6252, 0, Arg6250];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 115, "s")},
  0,
  [],
  "shen-toplevel-6251"];

Shen.call_toplevel("shen-toplevel-6251")






Shen.fns["shen-toplevel-6254"] = [Shen.type_func,
  function shen_user_lambda6255(Arg6253) {
  if (Arg6253.length < 0) return [Shen.type_func, shen_user_lambda6255, 0, Arg6253];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 114, "r")},
  0,
  [],
  "shen-toplevel-6254"];

Shen.call_toplevel("shen-toplevel-6254")






Shen.fns["shen-toplevel-6257"] = [Shen.type_func,
  function shen_user_lambda6258(Arg6256) {
  if (Arg6256.length < 0) return [Shen.type_func, shen_user_lambda6258, 0, Arg6256];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 113, "q")},
  0,
  [],
  "shen-toplevel-6257"];

Shen.call_toplevel("shen-toplevel-6257")






Shen.fns["shen-toplevel-6260"] = [Shen.type_func,
  function shen_user_lambda6261(Arg6259) {
  if (Arg6259.length < 0) return [Shen.type_func, shen_user_lambda6261, 0, Arg6259];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 112, "p")},
  0,
  [],
  "shen-toplevel-6260"];

Shen.call_toplevel("shen-toplevel-6260")






Shen.fns["shen-toplevel-6263"] = [Shen.type_func,
  function shen_user_lambda6264(Arg6262) {
  if (Arg6262.length < 0) return [Shen.type_func, shen_user_lambda6264, 0, Arg6262];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 111, "o")},
  0,
  [],
  "shen-toplevel-6263"];

Shen.call_toplevel("shen-toplevel-6263")






Shen.fns["shen-toplevel-6266"] = [Shen.type_func,
  function shen_user_lambda6267(Arg6265) {
  if (Arg6265.length < 0) return [Shen.type_func, shen_user_lambda6267, 0, Arg6265];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 110, "n")},
  0,
  [],
  "shen-toplevel-6266"];

Shen.call_toplevel("shen-toplevel-6266")






Shen.fns["shen-toplevel-6269"] = [Shen.type_func,
  function shen_user_lambda6270(Arg6268) {
  if (Arg6268.length < 0) return [Shen.type_func, shen_user_lambda6270, 0, Arg6268];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 109, "m")},
  0,
  [],
  "shen-toplevel-6269"];

Shen.call_toplevel("shen-toplevel-6269")






Shen.fns["shen-toplevel-6272"] = [Shen.type_func,
  function shen_user_lambda6273(Arg6271) {
  if (Arg6271.length < 0) return [Shen.type_func, shen_user_lambda6273, 0, Arg6271];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 108, "l")},
  0,
  [],
  "shen-toplevel-6272"];

Shen.call_toplevel("shen-toplevel-6272")






Shen.fns["shen-toplevel-6275"] = [Shen.type_func,
  function shen_user_lambda6276(Arg6274) {
  if (Arg6274.length < 0) return [Shen.type_func, shen_user_lambda6276, 0, Arg6274];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 107, "k")},
  0,
  [],
  "shen-toplevel-6275"];

Shen.call_toplevel("shen-toplevel-6275")






Shen.fns["shen-toplevel-6278"] = [Shen.type_func,
  function shen_user_lambda6279(Arg6277) {
  if (Arg6277.length < 0) return [Shen.type_func, shen_user_lambda6279, 0, Arg6277];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 106, "j")},
  0,
  [],
  "shen-toplevel-6278"];

Shen.call_toplevel("shen-toplevel-6278")






Shen.fns["shen-toplevel-6281"] = [Shen.type_func,
  function shen_user_lambda6282(Arg6280) {
  if (Arg6280.length < 0) return [Shen.type_func, shen_user_lambda6282, 0, Arg6280];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 105, "i")},
  0,
  [],
  "shen-toplevel-6281"];

Shen.call_toplevel("shen-toplevel-6281")






Shen.fns["shen-toplevel-6284"] = [Shen.type_func,
  function shen_user_lambda6285(Arg6283) {
  if (Arg6283.length < 0) return [Shen.type_func, shen_user_lambda6285, 0, Arg6283];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 104, "h")},
  0,
  [],
  "shen-toplevel-6284"];

Shen.call_toplevel("shen-toplevel-6284")






Shen.fns["shen-toplevel-6287"] = [Shen.type_func,
  function shen_user_lambda6288(Arg6286) {
  if (Arg6286.length < 0) return [Shen.type_func, shen_user_lambda6288, 0, Arg6286];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 103, "g")},
  0,
  [],
  "shen-toplevel-6287"];

Shen.call_toplevel("shen-toplevel-6287")






Shen.fns["shen-toplevel-6290"] = [Shen.type_func,
  function shen_user_lambda6291(Arg6289) {
  if (Arg6289.length < 0) return [Shen.type_func, shen_user_lambda6291, 0, Arg6289];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 102, "f")},
  0,
  [],
  "shen-toplevel-6290"];

Shen.call_toplevel("shen-toplevel-6290")






Shen.fns["shen-toplevel-6293"] = [Shen.type_func,
  function shen_user_lambda6294(Arg6292) {
  if (Arg6292.length < 0) return [Shen.type_func, shen_user_lambda6294, 0, Arg6292];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 101, "e")},
  0,
  [],
  "shen-toplevel-6293"];

Shen.call_toplevel("shen-toplevel-6293")






Shen.fns["shen-toplevel-6296"] = [Shen.type_func,
  function shen_user_lambda6297(Arg6295) {
  if (Arg6295.length < 0) return [Shen.type_func, shen_user_lambda6297, 0, Arg6295];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 100, "d")},
  0,
  [],
  "shen-toplevel-6296"];

Shen.call_toplevel("shen-toplevel-6296")






Shen.fns["shen-toplevel-6299"] = [Shen.type_func,
  function shen_user_lambda6300(Arg6298) {
  if (Arg6298.length < 0) return [Shen.type_func, shen_user_lambda6300, 0, Arg6298];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 99, "c")},
  0,
  [],
  "shen-toplevel-6299"];

Shen.call_toplevel("shen-toplevel-6299")






Shen.fns["shen-toplevel-6302"] = [Shen.type_func,
  function shen_user_lambda6303(Arg6301) {
  if (Arg6301.length < 0) return [Shen.type_func, shen_user_lambda6303, 0, Arg6301];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 98, "b")},
  0,
  [],
  "shen-toplevel-6302"];

Shen.call_toplevel("shen-toplevel-6302")






Shen.fns["shen-toplevel-6305"] = [Shen.type_func,
  function shen_user_lambda6306(Arg6304) {
  if (Arg6304.length < 0) return [Shen.type_func, shen_user_lambda6306, 0, Arg6304];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 97, "a")},
  0,
  [],
  "shen-toplevel-6305"];

Shen.call_toplevel("shen-toplevel-6305")






Shen.fns["shen-toplevel-6308"] = [Shen.type_func,
  function shen_user_lambda6309(Arg6307) {
  if (Arg6307.length < 0) return [Shen.type_func, shen_user_lambda6309, 0, Arg6307];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 96, "`")},
  0,
  [],
  "shen-toplevel-6308"];

Shen.call_toplevel("shen-toplevel-6308")






Shen.fns["shen-toplevel-6311"] = [Shen.type_func,
  function shen_user_lambda6312(Arg6310) {
  if (Arg6310.length < 0) return [Shen.type_func, shen_user_lambda6312, 0, Arg6310];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 95, "_")},
  0,
  [],
  "shen-toplevel-6311"];

Shen.call_toplevel("shen-toplevel-6311")






Shen.fns["shen-toplevel-6314"] = [Shen.type_func,
  function shen_user_lambda6315(Arg6313) {
  if (Arg6313.length < 0) return [Shen.type_func, shen_user_lambda6315, 0, Arg6313];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 90, "Z")},
  0,
  [],
  "shen-toplevel-6314"];

Shen.call_toplevel("shen-toplevel-6314")






Shen.fns["shen-toplevel-6317"] = [Shen.type_func,
  function shen_user_lambda6318(Arg6316) {
  if (Arg6316.length < 0) return [Shen.type_func, shen_user_lambda6318, 0, Arg6316];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 89, "Y")},
  0,
  [],
  "shen-toplevel-6317"];

Shen.call_toplevel("shen-toplevel-6317")






Shen.fns["shen-toplevel-6320"] = [Shen.type_func,
  function shen_user_lambda6321(Arg6319) {
  if (Arg6319.length < 0) return [Shen.type_func, shen_user_lambda6321, 0, Arg6319];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 88, "X")},
  0,
  [],
  "shen-toplevel-6320"];

Shen.call_toplevel("shen-toplevel-6320")






Shen.fns["shen-toplevel-6323"] = [Shen.type_func,
  function shen_user_lambda6324(Arg6322) {
  if (Arg6322.length < 0) return [Shen.type_func, shen_user_lambda6324, 0, Arg6322];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 87, "W")},
  0,
  [],
  "shen-toplevel-6323"];

Shen.call_toplevel("shen-toplevel-6323")






Shen.fns["shen-toplevel-6326"] = [Shen.type_func,
  function shen_user_lambda6327(Arg6325) {
  if (Arg6325.length < 0) return [Shen.type_func, shen_user_lambda6327, 0, Arg6325];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 86, "V")},
  0,
  [],
  "shen-toplevel-6326"];

Shen.call_toplevel("shen-toplevel-6326")






Shen.fns["shen-toplevel-6329"] = [Shen.type_func,
  function shen_user_lambda6330(Arg6328) {
  if (Arg6328.length < 0) return [Shen.type_func, shen_user_lambda6330, 0, Arg6328];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 85, "U")},
  0,
  [],
  "shen-toplevel-6329"];

Shen.call_toplevel("shen-toplevel-6329")






Shen.fns["shen-toplevel-6332"] = [Shen.type_func,
  function shen_user_lambda6333(Arg6331) {
  if (Arg6331.length < 0) return [Shen.type_func, shen_user_lambda6333, 0, Arg6331];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 84, "T")},
  0,
  [],
  "shen-toplevel-6332"];

Shen.call_toplevel("shen-toplevel-6332")






Shen.fns["shen-toplevel-6335"] = [Shen.type_func,
  function shen_user_lambda6336(Arg6334) {
  if (Arg6334.length < 0) return [Shen.type_func, shen_user_lambda6336, 0, Arg6334];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 83, "S")},
  0,
  [],
  "shen-toplevel-6335"];

Shen.call_toplevel("shen-toplevel-6335")






Shen.fns["shen-toplevel-6338"] = [Shen.type_func,
  function shen_user_lambda6339(Arg6337) {
  if (Arg6337.length < 0) return [Shen.type_func, shen_user_lambda6339, 0, Arg6337];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 82, "R")},
  0,
  [],
  "shen-toplevel-6338"];

Shen.call_toplevel("shen-toplevel-6338")






Shen.fns["shen-toplevel-6341"] = [Shen.type_func,
  function shen_user_lambda6342(Arg6340) {
  if (Arg6340.length < 0) return [Shen.type_func, shen_user_lambda6342, 0, Arg6340];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 81, "Q")},
  0,
  [],
  "shen-toplevel-6341"];

Shen.call_toplevel("shen-toplevel-6341")






Shen.fns["shen-toplevel-6344"] = [Shen.type_func,
  function shen_user_lambda6345(Arg6343) {
  if (Arg6343.length < 0) return [Shen.type_func, shen_user_lambda6345, 0, Arg6343];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 80, "P")},
  0,
  [],
  "shen-toplevel-6344"];

Shen.call_toplevel("shen-toplevel-6344")






Shen.fns["shen-toplevel-6347"] = [Shen.type_func,
  function shen_user_lambda6348(Arg6346) {
  if (Arg6346.length < 0) return [Shen.type_func, shen_user_lambda6348, 0, Arg6346];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 79, "O")},
  0,
  [],
  "shen-toplevel-6347"];

Shen.call_toplevel("shen-toplevel-6347")






Shen.fns["shen-toplevel-6350"] = [Shen.type_func,
  function shen_user_lambda6351(Arg6349) {
  if (Arg6349.length < 0) return [Shen.type_func, shen_user_lambda6351, 0, Arg6349];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 78, "N")},
  0,
  [],
  "shen-toplevel-6350"];

Shen.call_toplevel("shen-toplevel-6350")






Shen.fns["shen-toplevel-6353"] = [Shen.type_func,
  function shen_user_lambda6354(Arg6352) {
  if (Arg6352.length < 0) return [Shen.type_func, shen_user_lambda6354, 0, Arg6352];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 77, "M")},
  0,
  [],
  "shen-toplevel-6353"];

Shen.call_toplevel("shen-toplevel-6353")






Shen.fns["shen-toplevel-6356"] = [Shen.type_func,
  function shen_user_lambda6357(Arg6355) {
  if (Arg6355.length < 0) return [Shen.type_func, shen_user_lambda6357, 0, Arg6355];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 76, "L")},
  0,
  [],
  "shen-toplevel-6356"];

Shen.call_toplevel("shen-toplevel-6356")






Shen.fns["shen-toplevel-6359"] = [Shen.type_func,
  function shen_user_lambda6360(Arg6358) {
  if (Arg6358.length < 0) return [Shen.type_func, shen_user_lambda6360, 0, Arg6358];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 75, "K")},
  0,
  [],
  "shen-toplevel-6359"];

Shen.call_toplevel("shen-toplevel-6359")






Shen.fns["shen-toplevel-6362"] = [Shen.type_func,
  function shen_user_lambda6363(Arg6361) {
  if (Arg6361.length < 0) return [Shen.type_func, shen_user_lambda6363, 0, Arg6361];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 74, "J")},
  0,
  [],
  "shen-toplevel-6362"];

Shen.call_toplevel("shen-toplevel-6362")






Shen.fns["shen-toplevel-6365"] = [Shen.type_func,
  function shen_user_lambda6366(Arg6364) {
  if (Arg6364.length < 0) return [Shen.type_func, shen_user_lambda6366, 0, Arg6364];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 73, "I")},
  0,
  [],
  "shen-toplevel-6365"];

Shen.call_toplevel("shen-toplevel-6365")






Shen.fns["shen-toplevel-6368"] = [Shen.type_func,
  function shen_user_lambda6369(Arg6367) {
  if (Arg6367.length < 0) return [Shen.type_func, shen_user_lambda6369, 0, Arg6367];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 72, "H")},
  0,
  [],
  "shen-toplevel-6368"];

Shen.call_toplevel("shen-toplevel-6368")






Shen.fns["shen-toplevel-6371"] = [Shen.type_func,
  function shen_user_lambda6372(Arg6370) {
  if (Arg6370.length < 0) return [Shen.type_func, shen_user_lambda6372, 0, Arg6370];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 71, "G")},
  0,
  [],
  "shen-toplevel-6371"];

Shen.call_toplevel("shen-toplevel-6371")






Shen.fns["shen-toplevel-6374"] = [Shen.type_func,
  function shen_user_lambda6375(Arg6373) {
  if (Arg6373.length < 0) return [Shen.type_func, shen_user_lambda6375, 0, Arg6373];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 70, "F")},
  0,
  [],
  "shen-toplevel-6374"];

Shen.call_toplevel("shen-toplevel-6374")






Shen.fns["shen-toplevel-6377"] = [Shen.type_func,
  function shen_user_lambda6378(Arg6376) {
  if (Arg6376.length < 0) return [Shen.type_func, shen_user_lambda6378, 0, Arg6376];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 69, "E")},
  0,
  [],
  "shen-toplevel-6377"];

Shen.call_toplevel("shen-toplevel-6377")






Shen.fns["shen-toplevel-6380"] = [Shen.type_func,
  function shen_user_lambda6381(Arg6379) {
  if (Arg6379.length < 0) return [Shen.type_func, shen_user_lambda6381, 0, Arg6379];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 68, "D")},
  0,
  [],
  "shen-toplevel-6380"];

Shen.call_toplevel("shen-toplevel-6380")






Shen.fns["shen-toplevel-6383"] = [Shen.type_func,
  function shen_user_lambda6384(Arg6382) {
  if (Arg6382.length < 0) return [Shen.type_func, shen_user_lambda6384, 0, Arg6382];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 67, "C")},
  0,
  [],
  "shen-toplevel-6383"];

Shen.call_toplevel("shen-toplevel-6383")






Shen.fns["shen-toplevel-6386"] = [Shen.type_func,
  function shen_user_lambda6387(Arg6385) {
  if (Arg6385.length < 0) return [Shen.type_func, shen_user_lambda6387, 0, Arg6385];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 66, "B")},
  0,
  [],
  "shen-toplevel-6386"];

Shen.call_toplevel("shen-toplevel-6386")






Shen.fns["shen-toplevel-6389"] = [Shen.type_func,
  function shen_user_lambda6390(Arg6388) {
  if (Arg6388.length < 0) return [Shen.type_func, shen_user_lambda6390, 0, Arg6388];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 65, "A")},
  0,
  [],
  "shen-toplevel-6389"];

Shen.call_toplevel("shen-toplevel-6389")






Shen.fns["shen-toplevel-6392"] = [Shen.type_func,
  function shen_user_lambda6393(Arg6391) {
  if (Arg6391.length < 0) return [Shen.type_func, shen_user_lambda6393, 0, Arg6391];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 64, "@")},
  0,
  [],
  "shen-toplevel-6392"];

Shen.call_toplevel("shen-toplevel-6392")






Shen.fns["shen-toplevel-6395"] = [Shen.type_func,
  function shen_user_lambda6396(Arg6394) {
  if (Arg6394.length < 0) return [Shen.type_func, shen_user_lambda6396, 0, Arg6394];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 63, "?")},
  0,
  [],
  "shen-toplevel-6395"];

Shen.call_toplevel("shen-toplevel-6395")






Shen.fns["shen-toplevel-6398"] = [Shen.type_func,
  function shen_user_lambda6399(Arg6397) {
  if (Arg6397.length < 0) return [Shen.type_func, shen_user_lambda6399, 0, Arg6397];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 62, ">")},
  0,
  [],
  "shen-toplevel-6398"];

Shen.call_toplevel("shen-toplevel-6398")






Shen.fns["shen-toplevel-6401"] = [Shen.type_func,
  function shen_user_lambda6402(Arg6400) {
  if (Arg6400.length < 0) return [Shen.type_func, shen_user_lambda6402, 0, Arg6400];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 61, "=")},
  0,
  [],
  "shen-toplevel-6401"];

Shen.call_toplevel("shen-toplevel-6401")






Shen.fns["shen-toplevel-6404"] = [Shen.type_func,
  function shen_user_lambda6405(Arg6403) {
  if (Arg6403.length < 0) return [Shen.type_func, shen_user_lambda6405, 0, Arg6403];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 60, "<")},
  0,
  [],
  "shen-toplevel-6404"];

Shen.call_toplevel("shen-toplevel-6404")






Shen.fns["shen-toplevel-6407"] = [Shen.type_func,
  function shen_user_lambda6408(Arg6406) {
  if (Arg6406.length < 0) return [Shen.type_func, shen_user_lambda6408, 0, Arg6406];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 57, "9")},
  0,
  [],
  "shen-toplevel-6407"];

Shen.call_toplevel("shen-toplevel-6407")






Shen.fns["shen-toplevel-6410"] = [Shen.type_func,
  function shen_user_lambda6411(Arg6409) {
  if (Arg6409.length < 0) return [Shen.type_func, shen_user_lambda6411, 0, Arg6409];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 56, "8")},
  0,
  [],
  "shen-toplevel-6410"];

Shen.call_toplevel("shen-toplevel-6410")






Shen.fns["shen-toplevel-6413"] = [Shen.type_func,
  function shen_user_lambda6414(Arg6412) {
  if (Arg6412.length < 0) return [Shen.type_func, shen_user_lambda6414, 0, Arg6412];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 55, "7")},
  0,
  [],
  "shen-toplevel-6413"];

Shen.call_toplevel("shen-toplevel-6413")






Shen.fns["shen-toplevel-6416"] = [Shen.type_func,
  function shen_user_lambda6417(Arg6415) {
  if (Arg6415.length < 0) return [Shen.type_func, shen_user_lambda6417, 0, Arg6415];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 54, "6")},
  0,
  [],
  "shen-toplevel-6416"];

Shen.call_toplevel("shen-toplevel-6416")






Shen.fns["shen-toplevel-6419"] = [Shen.type_func,
  function shen_user_lambda6420(Arg6418) {
  if (Arg6418.length < 0) return [Shen.type_func, shen_user_lambda6420, 0, Arg6418];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 53, "5")},
  0,
  [],
  "shen-toplevel-6419"];

Shen.call_toplevel("shen-toplevel-6419")






Shen.fns["shen-toplevel-6422"] = [Shen.type_func,
  function shen_user_lambda6423(Arg6421) {
  if (Arg6421.length < 0) return [Shen.type_func, shen_user_lambda6423, 0, Arg6421];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 52, "4")},
  0,
  [],
  "shen-toplevel-6422"];

Shen.call_toplevel("shen-toplevel-6422")






Shen.fns["shen-toplevel-6425"] = [Shen.type_func,
  function shen_user_lambda6426(Arg6424) {
  if (Arg6424.length < 0) return [Shen.type_func, shen_user_lambda6426, 0, Arg6424];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 51, "3")},
  0,
  [],
  "shen-toplevel-6425"];

Shen.call_toplevel("shen-toplevel-6425")






Shen.fns["shen-toplevel-6428"] = [Shen.type_func,
  function shen_user_lambda6429(Arg6427) {
  if (Arg6427.length < 0) return [Shen.type_func, shen_user_lambda6429, 0, Arg6427];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 50, "2")},
  0,
  [],
  "shen-toplevel-6428"];

Shen.call_toplevel("shen-toplevel-6428")






Shen.fns["shen-toplevel-6431"] = [Shen.type_func,
  function shen_user_lambda6432(Arg6430) {
  if (Arg6430.length < 0) return [Shen.type_func, shen_user_lambda6432, 0, Arg6430];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 49, "1")},
  0,
  [],
  "shen-toplevel-6431"];

Shen.call_toplevel("shen-toplevel-6431")






Shen.fns["shen-toplevel-6434"] = [Shen.type_func,
  function shen_user_lambda6435(Arg6433) {
  if (Arg6433.length < 0) return [Shen.type_func, shen_user_lambda6435, 0, Arg6433];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 48, "0")},
  0,
  [],
  "shen-toplevel-6434"];

Shen.call_toplevel("shen-toplevel-6434")






Shen.fns["shen-toplevel-6437"] = [Shen.type_func,
  function shen_user_lambda6438(Arg6436) {
  if (Arg6436.length < 0) return [Shen.type_func, shen_user_lambda6438, 0, Arg6436];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 47, "/")},
  0,
  [],
  "shen-toplevel-6437"];

Shen.call_toplevel("shen-toplevel-6437")






Shen.fns["shen-toplevel-6440"] = [Shen.type_func,
  function shen_user_lambda6441(Arg6439) {
  if (Arg6439.length < 0) return [Shen.type_func, shen_user_lambda6441, 0, Arg6439];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 46, ".")},
  0,
  [],
  "shen-toplevel-6440"];

Shen.call_toplevel("shen-toplevel-6440")






Shen.fns["shen-toplevel-6443"] = [Shen.type_func,
  function shen_user_lambda6444(Arg6442) {
  if (Arg6442.length < 0) return [Shen.type_func, shen_user_lambda6444, 0, Arg6442];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 45, "-")},
  0,
  [],
  "shen-toplevel-6443"];

Shen.call_toplevel("shen-toplevel-6443")






Shen.fns["shen-toplevel-6446"] = [Shen.type_func,
  function shen_user_lambda6447(Arg6445) {
  if (Arg6445.length < 0) return [Shen.type_func, shen_user_lambda6447, 0, Arg6445];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 43, "+")},
  0,
  [],
  "shen-toplevel-6446"];

Shen.call_toplevel("shen-toplevel-6446")






Shen.fns["shen-toplevel-6449"] = [Shen.type_func,
  function shen_user_lambda6450(Arg6448) {
  if (Arg6448.length < 0) return [Shen.type_func, shen_user_lambda6450, 0, Arg6448];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 42, "*")},
  0,
  [],
  "shen-toplevel-6449"];

Shen.call_toplevel("shen-toplevel-6449")






Shen.fns["shen-toplevel-6452"] = [Shen.type_func,
  function shen_user_lambda6453(Arg6451) {
  if (Arg6451.length < 0) return [Shen.type_func, shen_user_lambda6453, 0, Arg6451];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 39, "'")},
  0,
  [],
  "shen-toplevel-6452"];

Shen.call_toplevel("shen-toplevel-6452")






Shen.fns["shen-toplevel-6455"] = [Shen.type_func,
  function shen_user_lambda6456(Arg6454) {
  if (Arg6454.length < 0) return [Shen.type_func, shen_user_lambda6456, 0, Arg6454];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 38, "&")},
  0,
  [],
  "shen-toplevel-6455"];

Shen.call_toplevel("shen-toplevel-6455")






Shen.fns["shen-toplevel-6458"] = [Shen.type_func,
  function shen_user_lambda6459(Arg6457) {
  if (Arg6457.length < 0) return [Shen.type_func, shen_user_lambda6459, 0, Arg6457];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 37, "%")},
  0,
  [],
  "shen-toplevel-6458"];

Shen.call_toplevel("shen-toplevel-6458")






Shen.fns["shen-toplevel-6461"] = [Shen.type_func,
  function shen_user_lambda6462(Arg6460) {
  if (Arg6460.length < 0) return [Shen.type_func, shen_user_lambda6462, 0, Arg6460];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 36, "$")},
  0,
  [],
  "shen-toplevel-6461"];

Shen.call_toplevel("shen-toplevel-6461")






Shen.fns["shen-toplevel-6464"] = [Shen.type_func,
  function shen_user_lambda6465(Arg6463) {
  if (Arg6463.length < 0) return [Shen.type_func, shen_user_lambda6465, 0, Arg6463];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 35, "#")},
  0,
  [],
  "shen-toplevel-6464"];

Shen.call_toplevel("shen-toplevel-6464")






Shen.fns["shen-toplevel-6467"] = [Shen.type_func,
  function shen_user_lambda6468(Arg6466) {
  if (Arg6466.length < 0) return [Shen.type_func, shen_user_lambda6468, 0, Arg6466];
  return Shen.absvector_set((Shen.globals["shen-*symbolcodes*"]), 33, "!")},
  0,
  [],
  "shen-toplevel-6467"];

Shen.call_toplevel("shen-toplevel-6467")






Shen.fns["lineread"] = [Shen.type_func,
  function shen_user_lambda6470(Arg6469) {
  if (Arg6469.length < 0) return [Shen.type_func, shen_user_lambda6470, 0, Arg6469];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), []]);})},
  0,
  [],
  "lineread"];






Shen.fns["shen-lineread-loop"] = [Shen.type_func,
  function shen_user_lambda6472(Arg6471) {
  if (Arg6471.length < 2) return [Shen.type_func, shen_user_lambda6472, 2, Arg6471];
  var Arg6471_0 = Arg6471[0], Arg6471_1 = Arg6471[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6471_0, Shen.call(Shen.fns["shen-hat"], []))))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["line read aborted", []]);})
  : ((Shen.call(Shen.fns["element?"], [Arg6471_0, [Shen.type_cons, Shen.call(Shen.fns["shen-newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen-carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func,
  function shen_user_lambda6474(Arg6473) {
  if (Arg6473.length < 1) return [Shen.type_func, shen_user_lambda6474, 1, Arg6473];
  var Arg6473_0 = Arg6473[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-<st_input>"], [Arg6473_0]);})},
  1,
  []], Arg6471_1, []])),
  (((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), Shen.call(Shen.fns["append"], [Arg6471_1, [Shen.type_cons, Arg6471_0, []]])]);})
  : R0))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), Shen.call(Shen.fns["append"], [Arg6471_1, [Shen.type_cons, Arg6471_0, []]])]);})))},
  2,
  [],
  "shen-lineread-loop"];






Shen.fns["read-file"] = [Shen.type_func,
  function shen_user_lambda6476(Arg6475) {
  if (Arg6475.length < 1) return [Shen.type_func, shen_user_lambda6476, 1, Arg6475];
  var Arg6475_0 = Arg6475[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["read-file-as-bytelist"], [Arg6475_0])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func,
  function shen_user_lambda6478(Arg6477) {
  if (Arg6477.length < 1) return [Shen.type_func, shen_user_lambda6478, 1, Arg6477];
  var Arg6477_0 = Arg6477[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-<st_input>"], [Arg6477_0]);})},
  1,
  []], R0, [Shen.type_func,
  function shen_user_lambda6480(Arg6479) {
  if (Arg6479.length < 1) return [Shen.type_func, shen_user_lambda6480, 1, Arg6479];
  var Arg6479_0 = Arg6479[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-read-error"], [Arg6479_0]);})},
  1,
  []]]);}))},
  1,
  [],
  "read-file"];






Shen.fns["shen-read-error"] = [Shen.type_func,
  function shen_user_lambda6482(Arg6481) {
  if (Arg6481.length < 1) return [Shen.type_func, shen_user_lambda6482, 1, Arg6481];
  var Arg6481_0 = Arg6481[0];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["read error here:~%~% ~A~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-compress-50"], [50, Arg6481_0]), []]]);})},
  1,
  [],
  "shen-read-error"];






Shen.fns["shen-compress-50"] = [Shen.type_func,
  function shen_user_lambda6484(Arg6483) {
  if (Arg6483.length < 2) return [Shen.type_func, shen_user_lambda6484, 2, Arg6483];
  var Arg6483_0 = Arg6483[0], Arg6483_1 = Arg6483[1];
  return ((Shen.empty$question$(Arg6483_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6483_0)))
  ? ""
  : ((Shen.is_type(Arg6483_1, Shen.type_cons))
  ? (Shen.n_$gt$string(Arg6483_1[1]) + Shen.call(Shen.fns["shen-compress-50"], [(Arg6483_0 - 1), Arg6483_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-compress-50"]]);}))))},
  2,
  [],
  "shen-compress-50"];






Shen.fns["shen-<st_input>"] = [Shen.type_func,
  function shen_user_lambda6486(Arg6485) {
  if (Arg6485.length < 1) return [Shen.type_func, shen_user_lambda6486, 1, Arg6485];
  var Arg6485_0 = Arg6485[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<lsb>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<rsb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen-<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen-cons_form"], [Shen.call(Shen.fns["snd"], [R0])])]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<lrb>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<rrb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen-<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["shen-package-macro"], [Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["snd"], [R0])]), Shen.call(Shen.fns["snd"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<lcurly>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_symbol, "{"], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<rcurly>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_symbol, "}"], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<bar>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_symbol, "bar!"], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<semicolon>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_symbol, ";"], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<colon>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<equal>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_symbol, ":="], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<colon>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<minus>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_symbol, ":-"], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<colon>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_symbol, ":"], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<comma>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_symbol, "shen-"], Shen.call(Shen.fns["snd"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<comment>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<atom>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["snd"], [R0])]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<whitespaces>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))},
  1,
  [],
  "shen-<st_input>"];






Shen.fns["shen-<lsb>"] = [Shen.type_func,
  function shen_user_lambda6488(Arg6487) {
  if (Arg6487.length < 1) return [Shen.type_func, shen_user_lambda6488, 1, Arg6487];
  var Arg6487_0 = Arg6487[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6487_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6487_0])[2], Shen.call(Shen.fns["snd"], [Arg6487_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6487_0])[1], 91)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<lsb>"];






Shen.fns["shen-<rsb>"] = [Shen.type_func,
  function shen_user_lambda6490(Arg6489) {
  if (Arg6489.length < 1) return [Shen.type_func, shen_user_lambda6490, 1, Arg6489];
  var Arg6489_0 = Arg6489[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6489_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6489_0])[2], Shen.call(Shen.fns["snd"], [Arg6489_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6489_0])[1], 93)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<rsb>"];






Shen.fns["shen-<lcurly>"] = [Shen.type_func,
  function shen_user_lambda6492(Arg6491) {
  if (Arg6491.length < 1) return [Shen.type_func, shen_user_lambda6492, 1, Arg6491];
  var Arg6491_0 = Arg6491[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6491_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6491_0])[2], Shen.call(Shen.fns["snd"], [Arg6491_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6491_0])[1], 123)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<lcurly>"];






Shen.fns["shen-<rcurly>"] = [Shen.type_func,
  function shen_user_lambda6494(Arg6493) {
  if (Arg6493.length < 1) return [Shen.type_func, shen_user_lambda6494, 1, Arg6493];
  var Arg6493_0 = Arg6493[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6493_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6493_0])[2], Shen.call(Shen.fns["snd"], [Arg6493_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6493_0])[1], 125)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<rcurly>"];






Shen.fns["shen-<bar>"] = [Shen.type_func,
  function shen_user_lambda6496(Arg6495) {
  if (Arg6495.length < 1) return [Shen.type_func, shen_user_lambda6496, 1, Arg6495];
  var Arg6495_0 = Arg6495[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6495_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6495_0])[2], Shen.call(Shen.fns["snd"], [Arg6495_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6495_0])[1], 124)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<bar>"];






Shen.fns["shen-<semicolon>"] = [Shen.type_func,
  function shen_user_lambda6498(Arg6497) {
  if (Arg6497.length < 1) return [Shen.type_func, shen_user_lambda6498, 1, Arg6497];
  var Arg6497_0 = Arg6497[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6497_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6497_0])[2], Shen.call(Shen.fns["snd"], [Arg6497_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6497_0])[1], 59)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<semicolon>"];






Shen.fns["shen-<colon>"] = [Shen.type_func,
  function shen_user_lambda6500(Arg6499) {
  if (Arg6499.length < 1) return [Shen.type_func, shen_user_lambda6500, 1, Arg6499];
  var Arg6499_0 = Arg6499[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6499_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6499_0])[2], Shen.call(Shen.fns["snd"], [Arg6499_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6499_0])[1], 58)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<colon>"];






Shen.fns["shen-<comma>"] = [Shen.type_func,
  function shen_user_lambda6502(Arg6501) {
  if (Arg6501.length < 1) return [Shen.type_func, shen_user_lambda6502, 1, Arg6501];
  var Arg6501_0 = Arg6501[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6501_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6501_0])[2], Shen.call(Shen.fns["snd"], [Arg6501_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6501_0])[1], 44)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<comma>"];






Shen.fns["shen-<equal>"] = [Shen.type_func,
  function shen_user_lambda6504(Arg6503) {
  if (Arg6503.length < 1) return [Shen.type_func, shen_user_lambda6504, 1, Arg6503];
  var Arg6503_0 = Arg6503[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6503_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6503_0])[2], Shen.call(Shen.fns["snd"], [Arg6503_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6503_0])[1], 61)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<equal>"];






Shen.fns["shen-<minus>"] = [Shen.type_func,
  function shen_user_lambda6506(Arg6505) {
  if (Arg6505.length < 1) return [Shen.type_func, shen_user_lambda6506, 1, Arg6505];
  var Arg6505_0 = Arg6505[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6505_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6505_0])[2], Shen.call(Shen.fns["snd"], [Arg6505_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6505_0])[1], 45)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<minus>"];






Shen.fns["shen-<lrb>"] = [Shen.type_func,
  function shen_user_lambda6508(Arg6507) {
  if (Arg6507.length < 1) return [Shen.type_func, shen_user_lambda6508, 1, Arg6507];
  var Arg6507_0 = Arg6507[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6507_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6507_0])[2], Shen.call(Shen.fns["snd"], [Arg6507_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6507_0])[1], 40)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<lrb>"];






Shen.fns["shen-<rrb>"] = [Shen.type_func,
  function shen_user_lambda6510(Arg6509) {
  if (Arg6509.length < 1) return [Shen.type_func, shen_user_lambda6510, 1, Arg6509];
  var Arg6509_0 = Arg6509[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6509_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6509_0])[2], Shen.call(Shen.fns["snd"], [Arg6509_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6509_0])[1], 41)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<rrb>"];






Shen.fns["shen-<atom>"] = [Shen.type_func,
  function shen_user_lambda6512(Arg6511) {
  if (Arg6511.length < 1) return [Shen.type_func, shen_user_lambda6512, 1, Arg6511];
  var Arg6511_0 = Arg6511[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<str>"], [Arg6511_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["shen-control-chars"], [Shen.call(Shen.fns["snd"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<number>"], [Arg6511_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<sym>"], [Arg6511_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))},
  1,
  [],
  "shen-<atom>"];






Shen.fns["shen-control-chars"] = [Shen.type_func,
  function shen_user_lambda6514(Arg6513) {
  if (Arg6513.length < 1) return [Shen.type_func, shen_user_lambda6514, 1, Arg6513];
  var Arg6513_0 = Arg6513[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6513_0))
  ? ""
  : (((Shen.is_type(Arg6513_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("c", Arg6513_0[1])) && (Shen.is_type(Arg6513_0[2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("#", Arg6513_0[2][1]))))))
  ? ((R0 = Shen.call(Shen.fns["shen-code-point"], [Arg6513_0[2][2]])),
  (R1 = Shen.call(Shen.fns["shen-after-codepoint"], [Arg6513_0[2][2]])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(Shen.call(Shen.fns["shen-decimalise"], [R0])), Shen.call(Shen.fns["shen-control-chars"], [R1])]);}))
  : ((Shen.is_type(Arg6513_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Arg6513_0[1], Shen.call(Shen.fns["shen-control-chars"], [Arg6513_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-control-chars"]]);}))))},
  1,
  [],
  "shen-control-chars"];






Shen.fns["shen-code-point"] = [Shen.type_func,
  function shen_user_lambda6516(Arg6515) {
  if (Arg6515.length < 1) return [Shen.type_func, shen_user_lambda6516, 1, Arg6515];
  var Arg6515_0 = Arg6515[0];
  return (((Shen.is_type(Arg6515_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6515_0[1]))))
  ? ""
  : (((Shen.is_type(Arg6515_0, Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6515_0[1], [Shen.type_cons, "0", [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]])))
  ? [Shen.type_cons, Arg6515_0[1], Shen.call(Shen.fns["shen-code-point"], [Arg6515_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["code point parse error ~A~%", [Shen.fns['shen-tuple'], Arg6515_0, []]]);})))},
  1,
  [],
  "shen-code-point"];






Shen.fns["shen-after-codepoint"] = [Shen.type_func,
  function shen_user_lambda6518(Arg6517) {
  if (Arg6517.length < 1) return [Shen.type_func, shen_user_lambda6518, 1, Arg6517];
  var Arg6517_0 = Arg6517[0];
  return ((Shen.empty$question$(Arg6517_0))
  ? []
  : (((Shen.is_type(Arg6517_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6517_0[1]))))
  ? Arg6517_0[2]
  : ((Shen.is_type(Arg6517_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-after-codepoint"], [Arg6517_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-after-codepoint"]]);}))))},
  1,
  [],
  "shen-after-codepoint"];






Shen.fns["shen-decimalise"] = [Shen.type_func,
  function shen_user_lambda6520(Arg6519) {
  if (Arg6519.length < 1) return [Shen.type_func, shen_user_lambda6520, 1, Arg6519];
  var Arg6519_0 = Arg6519[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen-digits->integers"], [Arg6519_0])]), 0]);})},
  1,
  [],
  "shen-decimalise"];






Shen.fns["shen-digits->integers"] = [Shen.type_func,
  function shen_user_lambda6522(Arg6521) {
  if (Arg6521.length < 1) return [Shen.type_func, shen_user_lambda6522, 1, Arg6521];
  var Arg6521_0 = Arg6521[0];
  return (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("0", Arg6521_0[1]))))
  ? [Shen.type_cons, 0, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("1", Arg6521_0[1]))))
  ? [Shen.type_cons, 1, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("2", Arg6521_0[1]))))
  ? [Shen.type_cons, 2, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("3", Arg6521_0[1]))))
  ? [Shen.type_cons, 3, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("4", Arg6521_0[1]))))
  ? [Shen.type_cons, 4, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("5", Arg6521_0[1]))))
  ? [Shen.type_cons, 5, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("6", Arg6521_0[1]))))
  ? [Shen.type_cons, 6, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("7", Arg6521_0[1]))))
  ? [Shen.type_cons, 7, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("8", Arg6521_0[1]))))
  ? [Shen.type_cons, 8, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : (((Shen.is_type(Arg6521_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("9", Arg6521_0[1]))))
  ? [Shen.type_cons, 9, Shen.call(Shen.fns["shen-digits->integers"], [Arg6521_0[2]])]
  : []))))))))))},
  1,
  [],
  "shen-digits->integers"];






Shen.fns["shen-<sym>"] = [Shen.type_func,
  function shen_user_lambda6524(Arg6523) {
  if (Arg6523.length < 1) return [Shen.type_func, shen_user_lambda6524, 1, Arg6523];
  var Arg6523_0 = Arg6523[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<alpha>"], [Arg6523_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<symchars>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.intern((Shen.call(Shen.fns["snd"], [R0]) + Shen.call(Shen.fns["snd"], [R1])))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<alpha>"], [Arg6523_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.intern(Shen.call(Shen.fns["snd"], [R0]))]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<sym>"];






Shen.fns["shen-<symchars>"] = [Shen.type_func,
  function shen_user_lambda6526(Arg6525) {
  if (Arg6525.length < 1) return [Shen.type_func, shen_user_lambda6526, 1, Arg6525];
  var Arg6525_0 = Arg6525[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<symchar>"], [Arg6525_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<symchars>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), (Shen.call(Shen.fns["snd"], [R0]) + Shen.call(Shen.fns["snd"], [R1]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<symchar>"], [Arg6525_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<symchars>"];






Shen.fns["shen-<symchar>"] = [Shen.type_func,
  function shen_user_lambda6528(Arg6527) {
  if (Arg6527.length < 1) return [Shen.type_func, shen_user_lambda6528, 1, Arg6527];
  var Arg6527_0 = Arg6527[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<alpha>"], [Arg6527_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<digit->string>"], [Arg6527_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<symchar>"];






Shen.fns["shen-<digit->string>"] = [Shen.type_func,
  function shen_user_lambda6530(Arg6529) {
  if (Arg6529.length < 1) return [Shen.type_func, shen_user_lambda6530, 1, Arg6529];
  var Arg6529_0 = Arg6529[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6529_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6529_0])[2], Shen.call(Shen.fns["snd"], [Arg6529_0])])]), ((Shen.call(Shen.fns["shen-digit-byte?"], [Shen.call(Shen.fns["fst"], [Arg6529_0])[1]]))
  ? Shen.n_$gt$string(Shen.call(Shen.fns["fst"], [Arg6529_0])[1])
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<digit->string>"];






Shen.fns["shen-digit-byte?"] = [Shen.type_func,
  function shen_user_lambda6532(Arg6531) {
  if (Arg6531.length < 1) return [Shen.type_func, shen_user_lambda6532, 1, Arg6531];
  var Arg6531_0 = Arg6531[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6531_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6531_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6531_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6531_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6531_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6531_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6531_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6531_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6531_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6531_0)))
  ? true
  : false))))))))))},
  1,
  [],
  "shen-digit-byte?"];






Shen.fns["shen-<alpha>"] = [Shen.type_func,
  function shen_user_lambda6534(Arg6533) {
  if (Arg6533.length < 1) return [Shen.type_func, shen_user_lambda6534, 1, Arg6533];
  var Arg6533_0 = Arg6533[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6533_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6533_0])[2], Shen.call(Shen.fns["snd"], [Arg6533_0])])]), ((R0 = Shen.call(Shen.fns["shen-symbol-byte->string"], [Shen.call(Shen.fns["fst"], [Arg6533_0])[1]])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<alpha>"];






Shen.fns["shen-symbol-byte->string"] = [Shen.type_func,
  function shen_user_lambda6536(Arg6535) {
  if (Arg6535.length < 1) return [Shen.type_func, shen_user_lambda6536, 1, Arg6535];
  var Arg6535_0 = Arg6535[0];
  return Shen.absvector_ref((Shen.globals["shen-*symbolcodes*"]), Arg6535_0)},
  1,
  [],
  "shen-symbol-byte->string"];






Shen.fns["shen-<str>"] = [Shen.type_func,
  function shen_user_lambda6538(Arg6537) {
  if (Arg6537.length < 1) return [Shen.type_func, shen_user_lambda6538, 1, Arg6537];
  var Arg6537_0 = Arg6537[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<dbq>"], [Arg6537_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<dbq>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<str>"];






Shen.fns["shen-<dbq>"] = [Shen.type_func,
  function shen_user_lambda6540(Arg6539) {
  if (Arg6539.length < 1) return [Shen.type_func, shen_user_lambda6540, 1, Arg6539];
  var Arg6539_0 = Arg6539[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6539_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6539_0])[2], Shen.call(Shen.fns["snd"], [Arg6539_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6539_0])[1], 34)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<dbq>"];






Shen.fns["shen-<strcontents>"] = [Shen.type_func,
  function shen_user_lambda6542(Arg6541) {
  if (Arg6541.length < 1) return [Shen.type_func, shen_user_lambda6542, 1, Arg6541];
  var Arg6541_0 = Arg6541[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<strc>"], [Arg6541_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6541_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<strcontents>"];






Shen.fns["shen-<byte>"] = [Shen.type_func,
  function shen_user_lambda6544(Arg6543) {
  if (Arg6543.length < 1) return [Shen.type_func, shen_user_lambda6544, 1, Arg6543];
  var Arg6543_0 = Arg6543[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6543_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6543_0])[2], Shen.call(Shen.fns["snd"], [Arg6543_0])])]), Shen.n_$gt$string(Shen.call(Shen.fns["fst"], [Arg6543_0])[1])]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<byte>"];






Shen.fns["shen-<strc>"] = [Shen.type_func,
  function shen_user_lambda6546(Arg6545) {
  if (Arg6545.length < 1) return [Shen.type_func, shen_user_lambda6546, 1, Arg6545];
  var Arg6545_0 = Arg6545[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6545_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6545_0])[2], Shen.call(Shen.fns["snd"], [Arg6545_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6545_0])[1], 34)))
  ? Shen.fail_obj
  : Shen.n_$gt$string(Shen.call(Shen.fns["fst"], [Arg6545_0])[1]))]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<strc>"];






Shen.fns["shen-<backslash>"] = [Shen.type_func,
  function shen_user_lambda6548(Arg6547) {
  if (Arg6547.length < 1) return [Shen.type_func, shen_user_lambda6548, 1, Arg6547];
  var Arg6547_0 = Arg6547[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6547_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6547_0])[2], Shen.call(Shen.fns["snd"], [Arg6547_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6547_0])[1], 92)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<backslash>"];






Shen.fns["shen-<number>"] = [Shen.type_func,
  function shen_user_lambda6550(Arg6549) {
  if (Arg6549.length < 1) return [Shen.type_func, shen_user_lambda6550, 1, Arg6549];
  var Arg6549_0 = Arg6549[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen-<minus>"], [Arg6549_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), (0 - Shen.call(Shen.fns["snd"], [R0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<plus>"], [Arg6549_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<predigits>"], [Arg6549_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen-<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen-<E>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen-<log10>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R2]), (Shen.call(Shen.fns["shen-expt"], [10, Shen.call(Shen.fns["snd"], [R2])]) * (Shen.call(Shen.fns["shen-pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["snd"], [R0])]), 0]) + Shen.call(Shen.fns["shen-post"], [Shen.call(Shen.fns["snd"], [R1]), 1])))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<digits>"], [Arg6549_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<E>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen-<log10>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), (Shen.call(Shen.fns["shen-expt"], [10, Shen.call(Shen.fns["snd"], [R1])]) * Shen.call(Shen.fns["shen-pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["snd"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<predigits>"], [Arg6549_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen-<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), (Shen.call(Shen.fns["shen-pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["snd"], [R0])]), 0]) + Shen.call(Shen.fns["shen-post"], [Shen.call(Shen.fns["snd"], [R1]), 1]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<digits>"], [Arg6549_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["shen-pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["snd"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))},
  1,
  [],
  "shen-<number>"];






Shen.fns["shen-<E>"] = [Shen.type_func,
  function shen_user_lambda6552(Arg6551) {
  if (Arg6551.length < 1) return [Shen.type_func, shen_user_lambda6552, 1, Arg6551];
  var Arg6551_0 = Arg6551[0];
  var R0;
  return ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6551_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(101, Shen.call(Shen.fns["fst"], [Arg6551_0])[1]))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6551_0])[2], Shen.call(Shen.fns["snd"], [Arg6551_0])])]), [Shen.type_cons, 101, []]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<E>"];






Shen.fns["shen-<log10>"] = [Shen.type_func,
  function shen_user_lambda6554(Arg6553) {
  if (Arg6553.length < 1) return [Shen.type_func, shen_user_lambda6554, 1, Arg6553];
  var Arg6553_0 = Arg6553[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<minus>"], [Arg6553_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), (0 - Shen.call(Shen.fns["shen-pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["snd"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<digits>"], [Arg6553_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["shen-pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["snd"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<log10>"];






Shen.fns["shen-<plus>"] = [Shen.type_func,
  function shen_user_lambda6556(Arg6555) {
  if (Arg6555.length < 1) return [Shen.type_func, shen_user_lambda6556, 1, Arg6555];
  var Arg6555_0 = Arg6555[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6555_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6555_0])[2], Shen.call(Shen.fns["snd"], [Arg6555_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6555_0])[1], 43)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<plus>"];






Shen.fns["shen-<stop>"] = [Shen.type_func,
  function shen_user_lambda6558(Arg6557) {
  if (Arg6557.length < 1) return [Shen.type_func, shen_user_lambda6558, 1, Arg6557];
  var Arg6557_0 = Arg6557[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6557_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6557_0])[2], Shen.call(Shen.fns["snd"], [Arg6557_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6557_0])[1], 46)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<stop>"];






Shen.fns["shen-<predigits>"] = [Shen.type_func,
  function shen_user_lambda6560(Arg6559) {
  if (Arg6559.length < 1) return [Shen.type_func, shen_user_lambda6560, 1, Arg6559];
  var Arg6559_0 = Arg6559[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<digits>"], [Arg6559_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6559_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<predigits>"];






Shen.fns["shen-<postdigits>"] = [Shen.type_func,
  function shen_user_lambda6562(Arg6561) {
  if (Arg6561.length < 1) return [Shen.type_func, shen_user_lambda6562, 1, Arg6561];
  var Arg6561_0 = Arg6561[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<digits>"], [Arg6561_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<postdigits>"];






Shen.fns["shen-<digits>"] = [Shen.type_func,
  function shen_user_lambda6564(Arg6563) {
  if (Arg6563.length < 1) return [Shen.type_func, shen_user_lambda6564, 1, Arg6563];
  var Arg6563_0 = Arg6563[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<digit>"], [Arg6563_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<digit>"], [Arg6563_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<digits>"];






Shen.fns["shen-<digit>"] = [Shen.type_func,
  function shen_user_lambda6566(Arg6565) {
  if (Arg6565.length < 1) return [Shen.type_func, shen_user_lambda6566, 1, Arg6565];
  var Arg6565_0 = Arg6565[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6565_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6565_0])[2], Shen.call(Shen.fns["snd"], [Arg6565_0])])]), ((Shen.call(Shen.fns["shen-digit-byte?"], [Shen.call(Shen.fns["fst"], [Arg6565_0])[1]]))
  ? Shen.call(Shen.fns["shen-byte->digit"], [Shen.call(Shen.fns["fst"], [Arg6565_0])[1]])
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<digit>"];






Shen.fns["shen-byte->digit"] = [Shen.type_func,
  function shen_user_lambda6568(Arg6567) {
  if (Arg6567.length < 1) return [Shen.type_func, shen_user_lambda6568, 1, Arg6567];
  var Arg6567_0 = Arg6567[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6567_0)))
  ? 0
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6567_0)))
  ? 1
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6567_0)))
  ? 2
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6567_0)))
  ? 3
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6567_0)))
  ? 4
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6567_0)))
  ? 5
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6567_0)))
  ? 6
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6567_0)))
  ? 7
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6567_0)))
  ? 8
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6567_0)))
  ? 9
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-byte->digit"]]);})))))))))))},
  1,
  [],
  "shen-byte->digit"];






Shen.fns["shen-pre"] = [Shen.type_func,
  function shen_user_lambda6570(Arg6569) {
  if (Arg6569.length < 2) return [Shen.type_func, shen_user_lambda6570, 2, Arg6569];
  var Arg6569_0 = Arg6569[0], Arg6569_1 = Arg6569[1];
  return ((Shen.empty$question$(Arg6569_0))
  ? 0
  : ((Shen.is_type(Arg6569_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen-expt"], [10, Arg6569_1]) * Arg6569_0[1]) + Shen.call(Shen.fns["shen-pre"], [Arg6569_0[2], (Arg6569_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-pre"]]);})))},
  2,
  [],
  "shen-pre"];






Shen.fns["shen-post"] = [Shen.type_func,
  function shen_user_lambda6572(Arg6571) {
  if (Arg6571.length < 2) return [Shen.type_func, shen_user_lambda6572, 2, Arg6571];
  var Arg6571_0 = Arg6571[0], Arg6571_1 = Arg6571[1];
  return ((Shen.empty$question$(Arg6571_0))
  ? 0
  : ((Shen.is_type(Arg6571_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen-expt"], [10, (0 - Arg6571_1)]) * Arg6571_0[1]) + Shen.call(Shen.fns["shen-post"], [Arg6571_0[2], (Arg6571_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-post"]]);})))},
  2,
  [],
  "shen-post"];






Shen.fns["shen-expt"] = [Shen.type_func,
  function shen_user_lambda6574(Arg6573) {
  if (Arg6573.length < 2) return [Shen.type_func, shen_user_lambda6574, 2, Arg6573];
  var Arg6573_0 = Arg6573[0], Arg6573_1 = Arg6573[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6573_1)))
  ? 1
  : (((Arg6573_1 > 0))
  ? (Arg6573_0 * Shen.call(Shen.fns["shen-expt"], [Arg6573_0, (Arg6573_1 - 1)]))
  : (1.0 * (Shen.call(Shen.fns["shen-expt"], [Arg6573_0, (Arg6573_1 + 1)]) / Arg6573_0))))},
  2,
  [],
  "shen-expt"];






Shen.fns["shen-<st_input1>"] = [Shen.type_func,
  function shen_user_lambda6576(Arg6575) {
  if (Arg6575.length < 1) return [Shen.type_func, shen_user_lambda6576, 1, Arg6575];
  var Arg6575_0 = Arg6575[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<st_input>"], [Arg6575_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<st_input1>"];






Shen.fns["shen-<st_input2>"] = [Shen.type_func,
  function shen_user_lambda6578(Arg6577) {
  if (Arg6577.length < 1) return [Shen.type_func, shen_user_lambda6578, 1, Arg6577];
  var Arg6577_0 = Arg6577[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<st_input>"], [Arg6577_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<st_input2>"];






Shen.fns["shen-<comment>"] = [Shen.type_func,
  function shen_user_lambda6580(Arg6579) {
  if (Arg6579.length < 1) return [Shen.type_func, shen_user_lambda6580, 1, Arg6579];
  var Arg6579_0 = Arg6579[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<backslash>"], [Arg6579_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_symbol, "shen-skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<comment>"];






Shen.fns["shen-<times>"] = [Shen.type_func,
  function shen_user_lambda6582(Arg6581) {
  if (Arg6581.length < 1) return [Shen.type_func, shen_user_lambda6582, 1, Arg6581];
  var Arg6581_0 = Arg6581[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6581_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6581_0])[2], Shen.call(Shen.fns["snd"], [Arg6581_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6581_0])[1], 42)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<times>"];






Shen.fns["shen-<any>"] = [Shen.type_func,
  function shen_user_lambda6584(Arg6583) {
  if (Arg6583.length < 1) return [Shen.type_func, shen_user_lambda6584, 1, Arg6583];
  var Arg6583_0 = Arg6583[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<comment>"], [Arg6583_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_symbol, "shen-skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<blah>"], [Arg6583_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_symbol, "shen-skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6583_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_symbol, "shen-skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))},
  1,
  [],
  "shen-<any>"];






Shen.fns["shen-<blah>"] = [Shen.type_func,
  function shen_user_lambda6586(Arg6585) {
  if (Arg6585.length < 1) return [Shen.type_func, shen_user_lambda6586, 1, Arg6585];
  var Arg6585_0 = Arg6585[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6585_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6585_0])[2], Shen.call(Shen.fns["snd"], [Arg6585_0])])]), ((Shen.call(Shen.fns["shen-end-of-comment?"], [Shen.call(Shen.fns["fst"], [Arg6585_0])]))
  ? Shen.fail_obj
  : [Shen.type_symbol, "shen-skip"])]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<blah>"];






Shen.fns["shen-end-of-comment?"] = [Shen.type_func,
  function shen_user_lambda6588(Arg6587) {
  if (Arg6587.length < 1) return [Shen.type_func, shen_user_lambda6588, 1, Arg6587];
  var Arg6587_0 = Arg6587[0];
  return (((Shen.is_type(Arg6587_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(42, Arg6587_0[1])) && (Shen.is_type(Arg6587_0[2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(92, Arg6587_0[2][1]))))))
  ? true
  : false)},
  1,
  [],
  "shen-end-of-comment?"];






Shen.fns["shen-<whitespaces>"] = [Shen.type_func,
  function shen_user_lambda6590(Arg6589) {
  if (Arg6589.length < 1) return [Shen.type_func, shen_user_lambda6590, 1, Arg6589];
  var Arg6589_0 = Arg6589[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<whitespace>"], [Arg6589_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen-<whitespaces>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_symbol, "shen-skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<whitespace>"], [Arg6589_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_symbol, "shen-skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<whitespaces>"];






Shen.fns["shen-<whitespace>"] = [Shen.type_func,
  function shen_user_lambda6592(Arg6591) {
  if (Arg6591.length < 1) return [Shen.type_func, shen_user_lambda6592, 1, Arg6591];
  var Arg6591_0 = Arg6591[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6591_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6591_0])[2], Shen.call(Shen.fns["snd"], [Arg6591_0])])]), ((R0 = Shen.call(Shen.fns["fst"], [Arg6591_0])[1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 32)))
  ? [Shen.type_symbol, "shen-skip"]
  : ((Shen.unwind_tail(Shen.$eq$(R0, 13)))
  ? [Shen.type_symbol, "shen-skip"]
  : ((Shen.unwind_tail(Shen.$eq$(R0, 10)))
  ? [Shen.type_symbol, "shen-skip"]
  : ((Shen.unwind_tail(Shen.$eq$(R0, 9)))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)))))]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<whitespace>"];






Shen.fns["shen-cons_form"] = [Shen.type_func,
  function shen_user_lambda6594(Arg6593) {
  if (Arg6593.length < 1) return [Shen.type_func, shen_user_lambda6594, 1, Arg6593];
  var Arg6593_0 = Arg6593[0];
  return ((Shen.empty$question$(Arg6593_0))
  ? []
  : (((Shen.is_type(Arg6593_0, Shen.type_cons) && (Shen.is_type(Arg6593_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bar!"], Arg6593_0[2][1])) && (Shen.is_type(Arg6593_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6593_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6593_0[1], Arg6593_0[2][2]]]
  : ((Shen.is_type(Arg6593_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6593_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen-cons_form"], [Arg6593_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-cons_form"]]);}))))},
  1,
  [],
  "shen-cons_form"];






Shen.fns["shen-package-macro"] = [Shen.type_func,
  function shen_user_lambda6596(Arg6595) {
  if (Arg6595.length < 2) return [Shen.type_func, shen_user_lambda6596, 2, Arg6595];
  var Arg6595_0 = Arg6595[0], Arg6595_1 = Arg6595[1];
  var R0;
  return (((Shen.is_type(Arg6595_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "$"], Arg6595_0[1])) && (Shen.is_type(Arg6595_0[2], Shen.type_cons) && Shen.empty$question$(Arg6595_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["explode"], [Arg6595_0[2][1]]), Arg6595_1]);})
  : (((Shen.is_type(Arg6595_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6595_0[1])) && (Shen.is_type(Arg6595_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg6595_0[2][1])) && Shen.is_type(Arg6595_0[2][2], Shen.type_cons))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Arg6595_0[2][2][2], Arg6595_1]);})
  : (((Shen.is_type(Arg6595_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6595_0[1])) && (Shen.is_type(Arg6595_0[2], Shen.type_cons) && Shen.is_type(Arg6595_0[2][2], Shen.type_cons)))))
  ? ((R0 = Shen.call(Shen.fns["shen-eval-without-macros"], [Arg6595_0[2][2][1]])),
  Shen.call(Shen.fns["shen-record-exceptions"], [R0, Arg6595_0[2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen-packageh"], [Arg6595_0[2][1], R0, Arg6595_0[2][2][2]]), Arg6595_1]);}))
  : [Shen.type_cons, Arg6595_0, Arg6595_1])))},
  2,
  [],
  "shen-package-macro"];






Shen.fns["shen-record-exceptions"] = [Shen.type_func,
  function shen_user_lambda6598(Arg6597) {
  if (Arg6597.length < 2) return [Shen.type_func, shen_user_lambda6598, 2, Arg6597];
  var Arg6597_0 = Arg6597[0], Arg6597_1 = Arg6597[1];
  var R0;
  return ((R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6597_1, [Shen.type_symbol, "shen-external-symbols"], (Shen.globals["shen-*property-vector*"])]);}, [Shen.type_func,
  function shen_user_lambda6600(Arg6599) {
  if (Arg6599.length < 1) return [Shen.type_func, shen_user_lambda6600, 1, Arg6599];
  var Arg6599_0 = Arg6599[0];
  return []},
  1,
  []])),
  (R0 = Shen.call(Shen.fns["union"], [Arg6597_0, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6597_1, [Shen.type_symbol, "shen-external-symbols"], R0, (Shen.globals["shen-*property-vector*"])]);}))},
  2,
  [],
  "shen-record-exceptions"];






Shen.fns["shen-packageh"] = [Shen.type_func,
  function shen_user_lambda6602(Arg6601) {
  if (Arg6601.length < 3) return [Shen.type_func, shen_user_lambda6602, 3, Arg6601];
  var Arg6601_0 = Arg6601[0], Arg6601_1 = Arg6601[1], Arg6601_2 = Arg6601[2];
  return ((Shen.is_type(Arg6601_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-packageh"], [Arg6601_0, Arg6601_1, Arg6601_2[1]]), Shen.call(Shen.fns["shen-packageh"], [Arg6601_0, Arg6601_1, Arg6601_2[2]])]
  : (((Shen.call(Shen.fns["shen-sysfunc?"], [Arg6601_2]) || (Shen.call(Shen.fns["variable?"], [Arg6601_2]) || (Shen.call(Shen.fns["element?"], [Arg6601_2, Arg6601_1]) || (Shen.call(Shen.fns["shen-doubleunderline?"], [Arg6601_2]) || Shen.call(Shen.fns["shen-singleunderline?"], [Arg6601_2]))))))
  ? Arg6601_2
  : (((Shen.is_type(Arg6601_2, Shen.type_symbol) && (!Shen.call(Shen.fns["shen-prefix?"], [[Shen.type_cons, "s", [Shen.type_cons, "h", [Shen.type_cons, "e", [Shen.type_cons, "n", [Shen.type_cons, "-", []]]]]], Shen.call(Shen.fns["explode"], [Arg6601_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg6601_0, Arg6601_2]);})
  : Arg6601_2)))},
  3,
  [],
  "shen-packageh"];












Shen.fns["shen-<defprolog>"] = [Shen.type_func,
  function shen_user_lambda5989(Arg5988) {
  if (Arg5988.length < 1) return [Shen.type_func, shen_user_lambda5989, 1, Arg5988];
  var Arg5988_0 = Arg5988[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<predicate*>"], [Arg5988_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["shen-prolog->shen"], [Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5991(Arg5990) {
  if (Arg5990.length < 2) return [Shen.type_func, shen_user_lambda5991, 2, Arg5990];
  var Arg5990_0 = Arg5990[0], Arg5990_1 = Arg5990[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-insert-predicate"], [Shen.call(Shen.fns["snd"], [Arg5990_0]), Arg5990_1]);})},
  2,
  [R0]], Shen.call(Shen.fns["snd"], [R1])])])[1]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<defprolog>"];






Shen.fns["shen-prolog-error"] = [Shen.type_func,
  function shen_user_lambda5993(Arg5992) {
  if (Arg5992.length < 2) return [Shen.type_func, shen_user_lambda5993, 2, Arg5992];
  var Arg5992_0 = Arg5992[0], Arg5992_1 = Arg5992[1];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["prolog syntax error in ~A here:~%~% ~A~%", [Shen.fns['shen-tuple'], Arg5992_0, [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-next-50"], [50, Arg5992_1]), []]]]);})},
  2,
  [],
  "shen-prolog-error"];






Shen.fns["shen-next-50"] = [Shen.type_func,
  function shen_user_lambda5995(Arg5994) {
  if (Arg5994.length < 2) return [Shen.type_func, shen_user_lambda5995, 2, Arg5994];
  var Arg5994_0 = Arg5994[0], Arg5994_1 = Arg5994[1];
  return ((Shen.empty$question$(Arg5994_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg5994_0)))
  ? ""
  : ((Shen.is_type(Arg5994_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen-decons-string"], [Arg5994_1[1]]) + Shen.call(Shen.fns["shen-next-50"], [(Arg5994_0 - 1), Arg5994_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-next-50"]]);}))))},
  2,
  [],
  "shen-next-50"];






Shen.fns["shen-decons-string"] = [Shen.type_func,
  function shen_user_lambda5997(Arg5996) {
  if (Arg5996.length < 1) return [Shen.type_func, shen_user_lambda5997, 1, Arg5996];
  var Arg5996_0 = Arg5996[0];
  return (((Shen.is_type(Arg5996_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5996_0[1])) && (Shen.is_type(Arg5996_0[2], Shen.type_cons) && (Shen.is_type(Arg5996_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5996_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~S ", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-eval-cons"], [Arg5996_0]), []]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["~R ", [Shen.fns['shen-tuple'], Arg5996_0, []]]);}))},
  1,
  [],
  "shen-decons-string"];






Shen.fns["shen-insert-predicate"] = [Shen.type_func,
  function shen_user_lambda5999(Arg5998) {
  if (Arg5998.length < 2) return [Shen.type_func, shen_user_lambda5999, 2, Arg5998];
  var Arg5998_0 = Arg5998[0], Arg5998_1 = Arg5998[1];
  return (((Shen.is_type(Arg5998_1, Shen.type_cons) && (Shen.is_type(Arg5998_1[2], Shen.type_cons) && Shen.empty$question$(Arg5998_1[2][2]))))
  ? [Shen.type_cons, [Shen.type_cons, Arg5998_0, Arg5998_1[1]], [Shen.type_cons, [Shen.type_symbol, ":-"], Arg5998_1[2]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-insert-predicate"]]);}))},
  2,
  [],
  "shen-insert-predicate"];






Shen.fns["shen-<predicate*>"] = [Shen.type_func,
  function shen_user_lambda6001(Arg6000) {
  if (Arg6000.length < 1) return [Shen.type_func, shen_user_lambda6001, 1, Arg6000];
  var Arg6000_0 = Arg6000[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6000_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6000_0])[2], Shen.call(Shen.fns["snd"], [Arg6000_0])])]), Shen.call(Shen.fns["fst"], [Arg6000_0])[1]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<predicate*>"];






Shen.fns["shen-<clauses*>"] = [Shen.type_func,
  function shen_user_lambda6003(Arg6002) {
  if (Arg6002.length < 1) return [Shen.type_func, shen_user_lambda6003, 1, Arg6002];
  var Arg6002_0 = Arg6002[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<clause*>"], [Arg6002_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6002_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<clauses*>"];






Shen.fns["shen-<clause*>"] = [Shen.type_func,
  function shen_user_lambda6005(Arg6004) {
  if (Arg6004.length < 1) return [Shen.type_func, shen_user_lambda6005, 1, Arg6004];
  var Arg6004_0 = Arg6004[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen-<head*>"], [Arg6004_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<body*>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen-<end*>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<clause*>"];






Shen.fns["shen-<head*>"] = [Shen.type_func,
  function shen_user_lambda6007(Arg6006) {
  if (Arg6006.length < 1) return [Shen.type_func, shen_user_lambda6007, 1, Arg6006];
  var Arg6006_0 = Arg6006[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<term*>"], [Arg6006_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<head*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6006_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<head*>"];






Shen.fns["shen-<term*>"] = [Shen.type_func,
  function shen_user_lambda6009(Arg6008) {
  if (Arg6008.length < 1) return [Shen.type_func, shen_user_lambda6009, 1, Arg6008];
  var Arg6008_0 = Arg6008[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6008_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6008_0])[2], Shen.call(Shen.fns["snd"], [Arg6008_0])])]), ((((!Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], Shen.call(Shen.fns["fst"], [Arg6008_0])[1]))) && Shen.call(Shen.fns["shen-legitimate-term?"], [Shen.call(Shen.fns["fst"], [Arg6008_0])[1]])))
  ? Shen.call(Shen.fns["shen-eval-cons"], [Shen.call(Shen.fns["fst"], [Arg6008_0])[1]])
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<term*>"];






Shen.fns["shen-legitimate-term?"] = [Shen.type_func,
  function shen_user_lambda6011(Arg6010) {
  if (Arg6010.length < 1) return [Shen.type_func, shen_user_lambda6011, 1, Arg6010];
  var Arg6010_0 = Arg6010[0];
  return (((Shen.is_type(Arg6010_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6010_0[1])) && (Shen.is_type(Arg6010_0[2], Shen.type_cons) && (Shen.is_type(Arg6010_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6010_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen-legitimate-term?"], [Arg6010_0[2][1]]) && Shen.call(Shen.fns["shen-legitimate-term?"], [Arg6010_0[2][2][1]]))
  : (((Shen.is_type(Arg6010_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6010_0[1])) && (Shen.is_type(Arg6010_0[2], Shen.type_cons) && (Shen.is_type(Arg6010_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6010_0[2][2][1])) && Shen.empty$question$(Arg6010_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-legitimate-term?"], [Arg6010_0[2][1]]);})
  : (((Shen.is_type(Arg6010_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6010_0[1])) && (Shen.is_type(Arg6010_0[2], Shen.type_cons) && (Shen.is_type(Arg6010_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6010_0[2][2][1])) && Shen.empty$question$(Arg6010_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-legitimate-term?"], [Arg6010_0[2][1]]);})
  : ((Shen.is_type(Arg6010_0, Shen.type_cons))
  ? false
  : true))))},
  1,
  [],
  "shen-legitimate-term?"];






Shen.fns["shen-eval-cons"] = [Shen.type_func,
  function shen_user_lambda6013(Arg6012) {
  if (Arg6012.length < 1) return [Shen.type_func, shen_user_lambda6013, 1, Arg6012];
  var Arg6012_0 = Arg6012[0];
  return (((Shen.is_type(Arg6012_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6012_0[1])) && (Shen.is_type(Arg6012_0[2], Shen.type_cons) && (Shen.is_type(Arg6012_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6012_0[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-eval-cons"], [Arg6012_0[2][1]]), Shen.call(Shen.fns["shen-eval-cons"], [Arg6012_0[2][2][1]])]
  : (((Shen.is_type(Arg6012_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6012_0[1])) && (Shen.is_type(Arg6012_0[2], Shen.type_cons) && (Shen.is_type(Arg6012_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6012_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen-eval-cons"], [Arg6012_0[2][1]]), Arg6012_0[2][2]]]
  : Arg6012_0))},
  1,
  [],
  "shen-eval-cons"];






Shen.fns["shen-<body*>"] = [Shen.type_func,
  function shen_user_lambda6015(Arg6014) {
  if (Arg6014.length < 1) return [Shen.type_func, shen_user_lambda6015, 1, Arg6014];
  var Arg6014_0 = Arg6014[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<literal*>"], [Arg6014_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<body*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6014_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<body*>"];






Shen.fns["shen-<literal*>"] = [Shen.type_func,
  function shen_user_lambda6017(Arg6016) {
  if (Arg6016.length < 1) return [Shen.type_func, shen_user_lambda6017, 1, Arg6016];
  var Arg6016_0 = Arg6016[0];
  var R0;
  return ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6016_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Shen.call(Shen.fns["fst"], [Arg6016_0])[1]))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6016_0])[2], Shen.call(Shen.fns["snd"], [Arg6016_0])])]), [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6016_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6016_0])[2], Shen.call(Shen.fns["snd"], [Arg6016_0])])]), ((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6016_0])[1], Shen.type_cons))
  ? Shen.call(Shen.fns["fst"], [Arg6016_0])[1]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<literal*>"];






Shen.fns["shen-<end*>"] = [Shen.type_func,
  function shen_user_lambda6019(Arg6018) {
  if (Arg6018.length < 1) return [Shen.type_func, shen_user_lambda6019, 1, Arg6018];
  var Arg6018_0 = Arg6018[0];
  var R0;
  return (((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg6018_0]), Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg6018_0])[2], Shen.call(Shen.fns["snd"], [Arg6018_0])])]), ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["fst"], [Arg6018_0])[1], [Shen.type_symbol, ";"])))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<end*>"];






Shen.fns["cut"] = [Shen.type_func,
  function shen_user_lambda6021(Arg6020) {
  if (Arg6020.length < 3) return [Shen.type_func, shen_user_lambda6021, 3, Arg6020];
  var Arg6020_0 = Arg6020[0], Arg6020_1 = Arg6020[1], Arg6020_2 = Arg6020[2];
  var R0;
  return ((R0 = Shen.unwind_tail(Shen.thaw(Arg6020_2))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? Arg6020_0
  : R0))},
  3,
  [],
  "cut"];






Shen.fns["shen-insert_modes"] = [Shen.type_func,
  function shen_user_lambda6023(Arg6022) {
  if (Arg6022.length < 1) return [Shen.type_func, shen_user_lambda6023, 1, Arg6022];
  var Arg6022_0 = Arg6022[0];
  return (((Shen.is_type(Arg6022_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6022_0[1])) && (Shen.is_type(Arg6022_0[2], Shen.type_cons) && (Shen.is_type(Arg6022_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6022_0[2][2][2]))))))
  ? Arg6022_0
  : ((Shen.empty$question$(Arg6022_0))
  ? []
  : ((Shen.is_type(Arg6022_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6022_0[1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen-insert_modes"], [Arg6022_0[2]]), [Shen.type_cons, [Shen.type_symbol, "-"], []]]]]
  : Arg6022_0)))},
  1,
  [],
  "shen-insert_modes"];






Shen.fns["shen-s-prolog"] = [Shen.type_func,
  function shen_user_lambda6025(Arg6024) {
  if (Arg6024.length < 1) return [Shen.type_func, shen_user_lambda6025, 1, Arg6024];
  var Arg6024_0 = Arg6024[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6027(Arg6026) {
  if (Arg6026.length < 1) return [Shen.type_func, shen_user_lambda6027, 1, Arg6026];
  var Arg6026_0 = Arg6026[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Arg6026_0]);})},
  1,
  []], Shen.call(Shen.fns["shen-prolog->shen"], [Arg6024_0])]);})},
  1,
  [],
  "shen-s-prolog"];






Shen.fns["shen-prolog->shen"] = [Shen.type_func,
  function shen_user_lambda6029(Arg6028) {
  if (Arg6028.length < 1) return [Shen.type_func, shen_user_lambda6029, 1, Arg6028];
  var Arg6028_0 = Arg6028[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6031(Arg6030) {
  if (Arg6030.length < 1) return [Shen.type_func, shen_user_lambda6031, 1, Arg6030];
  var Arg6030_0 = Arg6030[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-compile_prolog_procedure"], [Arg6030_0]);})},
  1,
  []], Shen.call(Shen.fns["shen-group_clauses"], [Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6033(Arg6032) {
  if (Arg6032.length < 1) return [Shen.type_func, shen_user_lambda6033, 1, Arg6032];
  var Arg6032_0 = Arg6032[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-s-prolog_clause"], [Arg6032_0]);})},
  1,
  []], Shen.call(Shen.fns["mapcan"], [[Shen.type_func,
  function shen_user_lambda6035(Arg6034) {
  if (Arg6034.length < 1) return [Shen.type_func, shen_user_lambda6035, 1, Arg6034];
  var Arg6034_0 = Arg6034[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-head_abstraction"], [Arg6034_0]);})},
  1,
  []], Arg6028_0])])])]);})},
  1,
  [],
  "shen-prolog->shen"];






Shen.fns["shen-s-prolog_clause"] = [Shen.type_func,
  function shen_user_lambda6037(Arg6036) {
  if (Arg6036.length < 1) return [Shen.type_func, shen_user_lambda6037, 1, Arg6036];
  var Arg6036_0 = Arg6036[0];
  return (((Shen.is_type(Arg6036_0, Shen.type_cons) && (Shen.is_type(Arg6036_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6036_0[2][1])) && (Shen.is_type(Arg6036_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6036_0[2][2][2]))))))
  ? [Shen.type_cons, Arg6036_0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6039(Arg6038) {
  if (Arg6038.length < 1) return [Shen.type_func, shen_user_lambda6039, 1, Arg6038];
  var Arg6038_0 = Arg6038[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-s-prolog_literal"], [Arg6038_0]);})},
  1,
  []], Arg6036_0[2][2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-s-prolog_clause"]]);}))},
  1,
  [],
  "shen-s-prolog_clause"];






Shen.fns["shen-head_abstraction"] = [Shen.type_func,
  function shen_user_lambda6041(Arg6040) {
  if (Arg6040.length < 1) return [Shen.type_func, shen_user_lambda6041, 1, Arg6040];
  var Arg6040_0 = Arg6040[0];
  var R0, R1;
  return (((Shen.is_type(Arg6040_0, Shen.type_cons) && (Shen.is_type(Arg6040_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6040_0[2][1])) && (Shen.is_type(Arg6040_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6040_0[2][2][2]) && (Shen.call(Shen.fns["shen-complexity_head"], [Arg6040_0[1]]) < (Shen.globals["shen-*maxcomplexity*"]))))))))
  ? [Shen.type_cons, Arg6040_0, []]
  : (((Shen.is_type(Arg6040_0, Shen.type_cons) && (Shen.is_type(Arg6040_0[1], Shen.type_cons) && (Shen.is_type(Arg6040_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6040_0[2][1])) && (Shen.is_type(Arg6040_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6040_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6043(Arg6042) {
  if (Arg6042.length < 1) return [Shen.type_func, shen_user_lambda6043, 1, Arg6042];
  var Arg6042_0 = Arg6042[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]);})},
  1,
  []], Arg6040_0[1][2]])),
  (R1 = Shen.call(Shen.fns["shen-rcons_form"], [Shen.call(Shen.fns["shen-remove_modes"], [Arg6040_0[1][2]])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, Shen.call(Shen.fns["shen-cons_form"], [R0]), [Shen.type_cons, R1, []]]]),
  (R1 = [Shen.type_cons, [Shen.type_cons, Arg6040_0[1][1], R0], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, R1, Arg6040_0[2][2][1]], []]]]),
  [Shen.type_cons, R1, []])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-head_abstraction"]]);})))},
  1,
  [],
  "shen-head_abstraction"];






Shen.fns["shen-complexity_head"] = [Shen.type_func,
  function shen_user_lambda6045(Arg6044) {
  if (Arg6044.length < 1) return [Shen.type_func, shen_user_lambda6045, 1, Arg6044];
  var Arg6044_0 = Arg6044[0];
  return ((Shen.is_type(Arg6044_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-product"], [Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6047(Arg6046) {
  if (Arg6046.length < 1) return [Shen.type_func, shen_user_lambda6047, 1, Arg6046];
  var Arg6046_0 = Arg6046[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-complexity"], [Arg6046_0]);})},
  1,
  []], Arg6044_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-complexity_head"]]);}))},
  1,
  [],
  "shen-complexity_head"];






Shen.fns["shen-complexity"] = [Shen.type_func,
  function shen_user_lambda6049(Arg6048) {
  if (Arg6048.length < 1) return [Shen.type_func, shen_user_lambda6049, 1, Arg6048];
  var Arg6048_0 = Arg6048[0];
  return (((Shen.is_type(Arg6048_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6048_0[1])) && (Shen.is_type(Arg6048_0[2], Shen.type_cons) && (Shen.is_type(Arg6048_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6048_0[2][1][1])) && (Shen.is_type(Arg6048_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6048_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6048_0[2][1][2][2][2]) && (Shen.is_type(Arg6048_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6048_0[2][2][2])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-complexity"], [Arg6048_0[2][1]]);})
  : (((Shen.is_type(Arg6048_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6048_0[1])) && (Shen.is_type(Arg6048_0[2], Shen.type_cons) && (Shen.is_type(Arg6048_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6048_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6048_0[2][2][1])) && Shen.empty$question$(Arg6048_0[2][2][2]))))))))
  ? (2 * (Shen.call(Shen.fns["shen-complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6048_0[2][1][1], Arg6048_0[2][2]]]]) * Shen.call(Shen.fns["shen-complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6048_0[2][1][2], Arg6048_0[2][2]]]])))
  : (((Shen.is_type(Arg6048_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6048_0[1])) && (Shen.is_type(Arg6048_0[2], Shen.type_cons) && (Shen.is_type(Arg6048_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6048_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6048_0[2][2][1])) && Shen.empty$question$(Arg6048_0[2][2][2]))))))))
  ? (Shen.call(Shen.fns["shen-complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6048_0[2][1][1], Arg6048_0[2][2]]]]) * Shen.call(Shen.fns["shen-complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6048_0[2][1][2], Arg6048_0[2][2]]]]))
  : (((Shen.is_type(Arg6048_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6048_0[1])) && (Shen.is_type(Arg6048_0[2], Shen.type_cons) && (Shen.is_type(Arg6048_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6048_0[2][2][2]) && Shen.call(Shen.fns["variable?"], [Arg6048_0[2][1]])))))))
  ? 1
  : (((Shen.is_type(Arg6048_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6048_0[1])) && (Shen.is_type(Arg6048_0[2], Shen.type_cons) && (Shen.is_type(Arg6048_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6048_0[2][2][1])) && Shen.empty$question$(Arg6048_0[2][2][2])))))))
  ? 2
  : (((Shen.is_type(Arg6048_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6048_0[1])) && (Shen.is_type(Arg6048_0[2], Shen.type_cons) && (Shen.is_type(Arg6048_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6048_0[2][2][1])) && Shen.empty$question$(Arg6048_0[2][2][2])))))))
  ? 1
  : (function() {
  return Shen.call_tail(Shen.fns["shen-complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6048_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]]]);})))))))},
  1,
  [],
  "shen-complexity"];






Shen.fns["shen-product"] = [Shen.type_func,
  function shen_user_lambda6051(Arg6050) {
  if (Arg6050.length < 1) return [Shen.type_func, shen_user_lambda6051, 1, Arg6050];
  var Arg6050_0 = Arg6050[0];
  return ((Shen.empty$question$(Arg6050_0))
  ? 1
  : ((Shen.is_type(Arg6050_0, Shen.type_cons))
  ? (Arg6050_0[1] * Shen.call(Shen.fns["shen-product"], [Arg6050_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-product"]]);})))},
  1,
  [],
  "shen-product"];






Shen.fns["shen-s-prolog_literal"] = [Shen.type_func,
  function shen_user_lambda6053(Arg6052) {
  if (Arg6052.length < 1) return [Shen.type_func, shen_user_lambda6053, 1, Arg6052];
  var Arg6052_0 = Arg6052[0];
  return (((Shen.is_type(Arg6052_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6052_0[1])) && (Shen.is_type(Arg6052_0[2], Shen.type_cons) && (Shen.is_type(Arg6052_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6052_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6052_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-insert_deref"], [Arg6052_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6052_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "when"], Arg6052_0[1])) && (Shen.is_type(Arg6052_0[2], Shen.type_cons) && Shen.empty$question$(Arg6052_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen-insert_deref"], [Arg6052_0[2][1]]), []]]
  : (((Shen.is_type(Arg6052_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6052_0[1])) && (Shen.is_type(Arg6052_0[2], Shen.type_cons) && (Shen.is_type(Arg6052_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6052_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6052_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-insert_lazyderef"], [Arg6052_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6052_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fwhen"], Arg6052_0[1])) && (Shen.is_type(Arg6052_0[2], Shen.type_cons) && Shen.empty$question$(Arg6052_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen-insert_lazyderef"], [Arg6052_0[2][1]]), []]]
  : ((Shen.is_type(Arg6052_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-m_prolog_to_s-prolog_predicate"], [Arg6052_0[1]]), Arg6052_0[2]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-s-prolog_literal"]]);}))))))},
  1,
  [],
  "shen-s-prolog_literal"];






Shen.fns["shen-insert_deref"] = [Shen.type_func,
  function shen_user_lambda6055(Arg6054) {
  if (Arg6054.length < 1) return [Shen.type_func, shen_user_lambda6055, 1, Arg6054];
  var Arg6054_0 = Arg6054[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6054_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-deref"], [Shen.type_cons, Arg6054_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6054_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-insert_deref"], [Arg6054_0[1]]), Shen.call(Shen.fns["shen-insert_deref"], [Arg6054_0[2]])]
  : Arg6054_0))},
  1,
  [],
  "shen-insert_deref"];






Shen.fns["shen-insert_lazyderef"] = [Shen.type_func,
  function shen_user_lambda6057(Arg6056) {
  if (Arg6056.length < 1) return [Shen.type_func, shen_user_lambda6057, 1, Arg6056];
  var Arg6056_0 = Arg6056[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6056_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-lazyderef"], [Shen.type_cons, Arg6056_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6056_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-insert_lazyderef"], [Arg6056_0[1]]), Shen.call(Shen.fns["shen-insert_lazyderef"], [Arg6056_0[2]])]
  : Arg6056_0))},
  1,
  [],
  "shen-insert_lazyderef"];






Shen.fns["shen-m_prolog_to_s-prolog_predicate"] = [Shen.type_func,
  function shen_user_lambda6059(Arg6058) {
  if (Arg6058.length < 1) return [Shen.type_func, shen_user_lambda6059, 1, Arg6058];
  var Arg6058_0 = Arg6058[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6058_0)))
  ? [Shen.type_symbol, "unify"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=!"], Arg6058_0)))
  ? [Shen.type_symbol, "unify!"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=="], Arg6058_0)))
  ? [Shen.type_symbol, "identical"]
  : Arg6058_0)))},
  1,
  [],
  "shen-m_prolog_to_s-prolog_predicate"];






Shen.fns["shen-group_clauses"] = [Shen.type_func,
  function shen_user_lambda6061(Arg6060) {
  if (Arg6060.length < 1) return [Shen.type_func, shen_user_lambda6061, 1, Arg6060];
  var Arg6060_0 = Arg6060[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6060_0))
  ? []
  : ((Shen.is_type(Arg6060_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen-collect"], [[Shen.type_func,
  function shen_user_lambda6063(Arg6062) {
  if (Arg6062.length < 2) return [Shen.type_func, shen_user_lambda6063, 2, Arg6062];
  var Arg6062_0 = Arg6062[0], Arg6062_1 = Arg6062[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-same_predicate?"], [Arg6062_0[1], Arg6062_1]);})},
  2,
  [Arg6060_0]], Arg6060_0])),
  (R1 = Shen.call(Shen.fns["difference"], [Arg6060_0, R0])),
  [Shen.type_cons, R0, Shen.call(Shen.fns["shen-group_clauses"], [R1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-group_clauses"]]);})))},
  1,
  [],
  "shen-group_clauses"];






Shen.fns["shen-collect"] = [Shen.type_func,
  function shen_user_lambda6065(Arg6064) {
  if (Arg6064.length < 2) return [Shen.type_func, shen_user_lambda6065, 2, Arg6064];
  var Arg6064_0 = Arg6064[0], Arg6064_1 = Arg6064[1];
  return ((Shen.empty$question$(Arg6064_1))
  ? []
  : ((Shen.is_type(Arg6064_1, Shen.type_cons))
  ? ((Shen.call(Arg6064_0, [Arg6064_1[1]]))
  ? [Shen.type_cons, Arg6064_1[1], Shen.call(Shen.fns["shen-collect"], [Arg6064_0, Arg6064_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-collect"], [Arg6064_0, Arg6064_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-collect"]]);})))},
  2,
  [],
  "shen-collect"];






Shen.fns["shen-same_predicate?"] = [Shen.type_func,
  function shen_user_lambda6067(Arg6066) {
  if (Arg6066.length < 2) return [Shen.type_func, shen_user_lambda6067, 2, Arg6066];
  var Arg6066_0 = Arg6066[0], Arg6066_1 = Arg6066[1];
  return (((Shen.is_type(Arg6066_0, Shen.type_cons) && (Shen.is_type(Arg6066_0[1], Shen.type_cons) && (Shen.is_type(Arg6066_1, Shen.type_cons) && Shen.is_type(Arg6066_1[1], Shen.type_cons)))))
  ? Shen.$eq$(Arg6066_0[1][1], Arg6066_1[1][1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-same_predicate?"]]);}))},
  2,
  [],
  "shen-same_predicate?"];






Shen.fns["shen-compile_prolog_procedure"] = [Shen.type_func,
  function shen_user_lambda6069(Arg6068) {
  if (Arg6068.length < 1) return [Shen.type_func, shen_user_lambda6069, 1, Arg6068];
  var Arg6068_0 = Arg6068[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-procedure_name"], [Arg6068_0])),
  (R0 = Shen.call(Shen.fns["shen-clauses-to-shen"], [R0, Arg6068_0])),
  R0)},
  1,
  [],
  "shen-compile_prolog_procedure"];






Shen.fns["shen-procedure_name"] = [Shen.type_func,
  function shen_user_lambda6071(Arg6070) {
  if (Arg6070.length < 1) return [Shen.type_func, shen_user_lambda6071, 1, Arg6070];
  var Arg6070_0 = Arg6070[0];
  return (((Shen.is_type(Arg6070_0, Shen.type_cons) && (Shen.is_type(Arg6070_0[1], Shen.type_cons) && Shen.is_type(Arg6070_0[1][1], Shen.type_cons))))
  ? Arg6070_0[1][1][1]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-procedure_name"]]);}))},
  1,
  [],
  "shen-procedure_name"];






Shen.fns["shen-clauses-to-shen"] = [Shen.type_func,
  function shen_user_lambda6073(Arg6072) {
  if (Arg6072.length < 2) return [Shen.type_func, shen_user_lambda6073, 2, Arg6072];
  var Arg6072_0 = Arg6072[0], Arg6072_1 = Arg6072[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6075(Arg6074) {
  if (Arg6074.length < 1) return [Shen.type_func, shen_user_lambda6075, 1, Arg6074];
  var Arg6074_0 = Arg6074[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-linearise-clause"], [Arg6074_0]);})},
  1,
  []], Arg6072_1])),
  (R1 = Shen.call(Shen.fns["shen-prolog-aritycheck"], [Arg6072_0, Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6077(Arg6076) {
  if (Arg6076.length < 1) return [Shen.type_func, shen_user_lambda6077, 1, Arg6076];
  var Arg6076_0 = Arg6076[0];
  return (function() {
  return Shen.call_tail(Shen.fns["head"], [Arg6076_0]);})},
  1,
  []], Arg6072_1])])),
  (R1 = Shen.call(Shen.fns["shen-parameters"], [R1])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6079(Arg6078) {
  if (Arg6078.length < 2) return [Shen.type_func, shen_user_lambda6079, 2, Arg6078];
  var Arg6078_0 = Arg6078[0], Arg6078_1 = Arg6078[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-aum"], [Arg6078_1, Arg6078_0]);})},
  2,
  [R1]], R0])),
  (R0 = Shen.call(Shen.fns["shen-catch-cut"], [Shen.call(Shen.fns["shen-nest-disjunct"], [Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6081(Arg6080) {
  if (Arg6080.length < 1) return [Shen.type_func, shen_user_lambda6081, 1, Arg6080];
  var Arg6080_0 = Arg6080[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-aum_to_shen"], [Arg6080_0]);})},
  1,
  []], R0])])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6072_0, Shen.call(Shen.fns["append"], [R1, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  R1)},
  2,
  [],
  "shen-clauses-to-shen"];






Shen.fns["shen-catch-cut"] = [Shen.type_func,
  function shen_user_lambda6083(Arg6082) {
  if (Arg6082.length < 1) return [Shen.type_func, shen_user_lambda6083, 1, Arg6082];
  var Arg6082_0 = Arg6082[0];
  return (((!Shen.call(Shen.fns["shen-occurs?"], [[Shen.type_symbol, "cut"], Arg6082_0])))
  ? Arg6082_0
  : [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-catchpoint"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-cutpoint"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, Arg6082_0, []]]], []]]]])},
  1,
  [],
  "shen-catch-cut"];






Shen.fns["shen-catchpoint"] = [Shen.type_func,
  function shen_user_lambda6085(Arg6084) {
  if (Arg6084.length < 0) return [Shen.type_func, shen_user_lambda6085, 0, Arg6084];
  return (Shen.globals["shen-*catch*"] = (1 + (Shen.globals["shen-*catch*"])))},
  0,
  [],
  "shen-catchpoint"];






Shen.fns["shen-cutpoint"] = [Shen.type_func,
  function shen_user_lambda6087(Arg6086) {
  if (Arg6086.length < 2) return [Shen.type_func, shen_user_lambda6087, 2, Arg6086];
  var Arg6086_0 = Arg6086[0], Arg6086_1 = Arg6086[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6086_1, Arg6086_0)))
  ? false
  : Arg6086_1)},
  2,
  [],
  "shen-cutpoint"];






Shen.fns["shen-nest-disjunct"] = [Shen.type_func,
  function shen_user_lambda6089(Arg6088) {
  if (Arg6088.length < 1) return [Shen.type_func, shen_user_lambda6089, 1, Arg6088];
  var Arg6088_0 = Arg6088[0];
  return (((Shen.is_type(Arg6088_0, Shen.type_cons) && Shen.empty$question$(Arg6088_0[2])))
  ? Arg6088_0[1]
  : ((Shen.is_type(Arg6088_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-lisp-or"], [Arg6088_0[1], Shen.call(Shen.fns["shen-nest-disjunct"], [Arg6088_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-nest-disjunct"]]);})))},
  1,
  [],
  "shen-nest-disjunct"];






Shen.fns["shen-lisp-or"] = [Shen.type_func,
  function shen_user_lambda6091(Arg6090) {
  if (Arg6090.length < 2) return [Shen.type_func, shen_user_lambda6091, 2, Arg6090];
  var Arg6090_0 = Arg6090[0], Arg6090_1 = Arg6090[1];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, Arg6090_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, false, []]]], [Shen.type_cons, Arg6090_1, [Shen.type_cons, [Shen.type_symbol, "Case"], []]]]], []]]]]},
  2,
  [],
  "shen-lisp-or"];






Shen.fns["shen-prolog-aritycheck"] = [Shen.type_func,
  function shen_user_lambda6093(Arg6092) {
  if (Arg6092.length < 2) return [Shen.type_func, shen_user_lambda6093, 2, Arg6092];
  var Arg6092_0 = Arg6092[0], Arg6092_1 = Arg6092[1];
  return (((Shen.is_type(Arg6092_1, Shen.type_cons) && Shen.empty$question$(Arg6092_1[2])))
  ? (Shen.call(Shen.fns["length"], [Arg6092_1[1]]) - 1)
  : (((Shen.is_type(Arg6092_1, Shen.type_cons) && Shen.is_type(Arg6092_1[2], Shen.type_cons)))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6092_1[1]]), Shen.call(Shen.fns["length"], [Arg6092_1[2][1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-prolog-aritycheck"], [Arg6092_0, Arg6092_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["arity error in prolog procedure ~A~%", [Shen.fns['shen-tuple'], [Shen.type_cons, Arg6092_0, []], []]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-prolog-aritycheck"]]);})))},
  2,
  [],
  "shen-prolog-aritycheck"];






Shen.fns["shen-linearise-clause"] = [Shen.type_func,
  function shen_user_lambda6095(Arg6094) {
  if (Arg6094.length < 1) return [Shen.type_func, shen_user_lambda6095, 1, Arg6094];
  var Arg6094_0 = Arg6094[0];
  var R0;
  return (((Shen.is_type(Arg6094_0, Shen.type_cons) && (Shen.is_type(Arg6094_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6094_0[2][1])) && (Shen.is_type(Arg6094_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6094_0[2][2][2]))))))
  ? ((R0 = Shen.call(Shen.fns["shen-linearise"], [[Shen.type_cons, Arg6094_0[1], Arg6094_0[2][2]]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-clause_form"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-linearise-clause"]]);}))},
  1,
  [],
  "shen-linearise-clause"];






Shen.fns["shen-clause_form"] = [Shen.type_func,
  function shen_user_lambda6097(Arg6096) {
  if (Arg6096.length < 1) return [Shen.type_func, shen_user_lambda6097, 1, Arg6096];
  var Arg6096_0 = Arg6096[0];
  return (((Shen.is_type(Arg6096_0, Shen.type_cons) && (Shen.is_type(Arg6096_0[2], Shen.type_cons) && Shen.empty$question$(Arg6096_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-explicit_modes"], [Arg6096_0[1]]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen-cf_help"], [Arg6096_0[2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-clause_form"]]);}))},
  1,
  [],
  "shen-clause_form"];






Shen.fns["shen-explicit_modes"] = [Shen.type_func,
  function shen_user_lambda6099(Arg6098) {
  if (Arg6098.length < 1) return [Shen.type_func, shen_user_lambda6099, 1, Arg6098];
  var Arg6098_0 = Arg6098[0];
  return ((Shen.is_type(Arg6098_0, Shen.type_cons))
  ? [Shen.type_cons, Arg6098_0[1], Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6101(Arg6100) {
  if (Arg6100.length < 1) return [Shen.type_func, shen_user_lambda6101, 1, Arg6100];
  var Arg6100_0 = Arg6100[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-em_help"], [Arg6100_0]);})},
  1,
  []], Arg6098_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-explicit_modes"]]);}))},
  1,
  [],
  "shen-explicit_modes"];






Shen.fns["shen-em_help"] = [Shen.type_func,
  function shen_user_lambda6103(Arg6102) {
  if (Arg6102.length < 1) return [Shen.type_func, shen_user_lambda6103, 1, Arg6102];
  var Arg6102_0 = Arg6102[0];
  return (((Shen.is_type(Arg6102_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6102_0[1])) && (Shen.is_type(Arg6102_0[2], Shen.type_cons) && (Shen.is_type(Arg6102_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6102_0[2][2][2]))))))
  ? Arg6102_0
  : [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6102_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]])},
  1,
  [],
  "shen-em_help"];






Shen.fns["shen-cf_help"] = [Shen.type_func,
  function shen_user_lambda6105(Arg6104) {
  if (Arg6104.length < 1) return [Shen.type_func, shen_user_lambda6105, 1, Arg6104];
  var Arg6104_0 = Arg6104[0];
  return (((Shen.is_type(Arg6104_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6104_0[1])) && (Shen.is_type(Arg6104_0[2], Shen.type_cons) && (Shen.is_type(Arg6104_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6104_0[2][1][1])) && (Shen.is_type(Arg6104_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6104_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6104_0[2][1][2][2][2]) && (Shen.is_type(Arg6104_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6104_0[2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, (((Shen.globals["shen-*occurs*"]))
  ? [Shen.type_symbol, "unify!"]
  : [Shen.type_symbol, "unify"]), Arg6104_0[2][1][2]], Shen.call(Shen.fns["shen-cf_help"], [Arg6104_0[2][2][1]])]
  : Arg6104_0)},
  1,
  [],
  "shen-cf_help"];






Shen.fns["occurs-check"] = [Shen.type_func,
  function shen_user_lambda6107(Arg6106) {
  if (Arg6106.length < 1) return [Shen.type_func, shen_user_lambda6107, 1, Arg6106];
  var Arg6106_0 = Arg6106[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6106_0)))
  ? (Shen.globals["shen-*occurs*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6106_0)))
  ? (Shen.globals["shen-*occurs*"] = false)
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["occurs-check expects + or -~%", []]);})))},
  1,
  [],
  "occurs-check"];






Shen.fns["shen-aum"] = [Shen.type_func,
  function shen_user_lambda6109(Arg6108) {
  if (Arg6108.length < 2) return [Shen.type_func, shen_user_lambda6109, 2, Arg6108];
  var Arg6108_0 = Arg6108[0], Arg6108_1 = Arg6108[1];
  var R0;
  return (((Shen.is_type(Arg6108_0, Shen.type_cons) && (Shen.is_type(Arg6108_0[1], Shen.type_cons) && (Shen.is_type(Arg6108_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6108_0[2][1])) && (Shen.is_type(Arg6108_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6108_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["shen-make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen-mu"], [Shen.type_cons, Arg6108_0[1][2], [Shen.type_cons, Shen.call(Shen.fns["shen-continuation_call"], [Arg6108_0[1][2], Arg6108_0[2][2][1]]), []]]], Arg6108_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-mu_reduction"], [R0, [Shen.type_symbol, "+"]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-aum"]]);}))},
  2,
  [],
  "shen-aum"];






Shen.fns["shen-continuation_call"] = [Shen.type_func,
  function shen_user_lambda6111(Arg6110) {
  if (Arg6110.length < 2) return [Shen.type_func, shen_user_lambda6111, 2, Arg6110];
  var Arg6110_0 = Arg6110[0], Arg6110_1 = Arg6110[1];
  var R0, R1;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "ProcessN"], Shen.call(Shen.fns["shen-extract_vars"], [Arg6110_0])]),
  (R1 = Shen.call(Shen.fns["shen-extract_vars"], [Arg6110_1])),
  (R1 = Shen.call(Shen.fns["remove"], [[Shen.type_symbol, "Throwcontrol"], Shen.call(Shen.fns["difference"], [R1, R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-cc_help"], [R1, Arg6110_1]);}))},
  2,
  [],
  "shen-continuation_call"];






Shen.fns["remove"] = [Shen.type_func,
  function shen_user_lambda6113(Arg6112) {
  if (Arg6112.length < 2) return [Shen.type_func, shen_user_lambda6113, 2, Arg6112];
  var Arg6112_0 = Arg6112[0], Arg6112_1 = Arg6112[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-remove-h"], [Arg6112_0, Arg6112_1, []]);})},
  2,
  [],
  "remove"];






Shen.fns["shen-remove-h"] = [Shen.type_func,
  function shen_user_lambda6115(Arg6114) {
  if (Arg6114.length < 3) return [Shen.type_func, shen_user_lambda6115, 3, Arg6114];
  var Arg6114_0 = Arg6114[0], Arg6114_1 = Arg6114[1], Arg6114_2 = Arg6114[2];
  return ((Shen.empty$question$(Arg6114_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg6114_2]);})
  : (((Shen.is_type(Arg6114_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6114_1[1], Arg6114_0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-remove-h"], [Arg6114_1[1], Arg6114_1[2], Arg6114_2]);})
  : ((Shen.is_type(Arg6114_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-remove-h"], [Arg6114_0, Arg6114_1[2], [Shen.type_cons, Arg6114_1[1], Arg6114_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-remove-h"]]);}))))},
  3,
  [],
  "shen-remove-h"];






Shen.fns["shen-cc_help"] = [Shen.type_func,
  function shen_user_lambda6117(Arg6116) {
  if (Arg6116.length < 2) return [Shen.type_func, shen_user_lambda6117, 2, Arg6116];
  var Arg6116_0 = Arg6116[0], Arg6116_1 = Arg6116[1];
  return (((Shen.empty$question$(Arg6116_0) && Shen.empty$question$(Arg6116_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-pop"], [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-stack"], []]]]
  : ((Shen.empty$question$(Arg6116_1))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-rename"], [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6116_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen-then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-pop"], [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-stack"], []]]], []]]]]]]]]
  : ((Shen.empty$question$(Arg6116_0))
  ? [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-continuation"], [Shen.type_cons, Arg6116_1, []]]]]
  : [Shen.type_cons, [Shen.type_symbol, "shen-rename"], [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6116_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen-then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-continuation"], [Shen.type_cons, Arg6116_1, []]]]], []]]]]]]]])))},
  2,
  [],
  "shen-cc_help"];






Shen.fns["shen-make_mu_application"] = [Shen.type_func,
  function shen_user_lambda6119(Arg6118) {
  if (Arg6118.length < 2) return [Shen.type_func, shen_user_lambda6119, 2, Arg6118];
  var Arg6118_0 = Arg6118[0], Arg6118_1 = Arg6118[1];
  return (((Shen.is_type(Arg6118_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6118_0[1])) && (Shen.is_type(Arg6118_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6118_0[2][1]) && (Shen.is_type(Arg6118_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6118_0[2][2][2]) && Shen.empty$question$(Arg6118_1))))))))
  ? Arg6118_0[2][2][1]
  : (((Shen.is_type(Arg6118_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6118_0[1])) && (Shen.is_type(Arg6118_0[2], Shen.type_cons) && (Shen.is_type(Arg6118_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6118_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6118_0[2][2][2]) && Shen.is_type(Arg6118_1, Shen.type_cons))))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-mu"], [Shen.type_cons, Arg6118_0[2][1][1], [Shen.type_cons, Shen.call(Shen.fns["shen-make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen-mu"], [Shen.type_cons, Arg6118_0[2][1][2], Arg6118_0[2][2]]], Arg6118_1[2]]), []]]], [Shen.type_cons, Arg6118_1[1], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-make_mu_application"]]);})))},
  2,
  [],
  "shen-make_mu_application"];






Shen.fns["shen-mu_reduction"] = [Shen.type_func,
  function shen_user_lambda6121(Arg6120) {
  if (Arg6120.length < 2) return [Shen.type_func, shen_user_lambda6121, 2, Arg6120];
  var Arg6120_0 = Arg6120[0], Arg6120_1 = Arg6120[1];
  var R0;
  return (((Shen.is_type(Arg6120_0, Shen.type_cons) && (Shen.is_type(Arg6120_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6120_0[1][1])) && (Shen.is_type(Arg6120_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6120_0[1][2][1][1])) && (Shen.is_type(Arg6120_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6120_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[1][2][2][2]) && (Shen.is_type(Arg6120_0[2], Shen.type_cons) && Shen.empty$question$(Arg6120_0[2][2]))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-mu"], [Shen.type_cons, Arg6120_0[1][2][1][2][1], Arg6120_0[1][2][2]]], Arg6120_0[2]], Arg6120_0[1][2][1][2][2][1]]);})
  : (((Shen.is_type(Arg6120_0, Shen.type_cons) && (Shen.is_type(Arg6120_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6120_0[1][1])) && (Shen.is_type(Arg6120_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[1][2][2][2]) && (Shen.is_type(Arg6120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "_"], Arg6120_0[1][2][1])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-mu_reduction"], [Arg6120_0[1][2][2][1], Arg6120_1]);})
  : (((Shen.is_type(Arg6120_0, Shen.type_cons) && (Shen.is_type(Arg6120_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6120_0[1][1])) && (Shen.is_type(Arg6120_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[1][2][2][2]) && (Shen.is_type(Arg6120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[2][2]) && Shen.call(Shen.fns["shen-ephemeral_variable?"], [Arg6120_0[1][2][1], Arg6120_0[2][1]]))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["subst"], [Arg6120_0[2][1], Arg6120_0[1][2][1], Shen.call(Shen.fns["shen-mu_reduction"], [Arg6120_0[1][2][2][1], Arg6120_1])]);})
  : (((Shen.is_type(Arg6120_0, Shen.type_cons) && (Shen.is_type(Arg6120_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6120_0[1][1])) && (Shen.is_type(Arg6120_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[1][2][2][2]) && (Shen.is_type(Arg6120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[2][2]) && Shen.call(Shen.fns["variable?"], [Arg6120_0[1][2][1]]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6120_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "shen-be"], [Shen.type_cons, Arg6120_0[2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen-mu_reduction"], [Arg6120_0[1][2][2][1], Arg6120_1]), []]]]]]]
  : (((Shen.is_type(Arg6120_0, Shen.type_cons) && (Shen.is_type(Arg6120_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6120_0[1][1])) && (Shen.is_type(Arg6120_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[1][2][2][2]) && (Shen.is_type(Arg6120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6120_1)) && Shen.call(Shen.fns["shen-prolog_constant?"], [Arg6120_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen-be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-result"], [Shen.type_cons, [Shen.type_symbol, "shen-of"], [Shen.type_cons, [Shen.type_symbol, "shen-dereferencing"], Arg6120_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen-to"], [Shen.type_cons, Arg6120_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen-then"], [Shen.type_cons, Shen.call(Shen.fns["shen-mu_reduction"], [Arg6120_0[1][2][2][1], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen-else"], [Shen.type_cons, Shen.fail_obj, []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6120_0, Shen.type_cons) && (Shen.is_type(Arg6120_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6120_0[1][1])) && (Shen.is_type(Arg6120_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[1][2][2][2]) && (Shen.is_type(Arg6120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6120_1)) && Shen.call(Shen.fns["shen-prolog_constant?"], [Arg6120_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen-be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-result"], [Shen.type_cons, [Shen.type_symbol, "shen-of"], [Shen.type_cons, [Shen.type_symbol, "shen-dereferencing"], Arg6120_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen-to"], [Shen.type_cons, Arg6120_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen-then"], [Shen.type_cons, Shen.call(Shen.fns["shen-mu_reduction"], [Arg6120_0[1][2][2][1], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen-else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen-a"], [Shen.type_cons, [Shen.type_symbol, "shen-variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen-then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen-to"], [Shen.type_cons, Arg6120_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen-mu_reduction"], [Arg6120_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen-else"], [Shen.type_cons, Shen.fail_obj, []]]]]]], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6120_0, Shen.type_cons) && (Shen.is_type(Arg6120_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6120_0[1][1])) && (Shen.is_type(Arg6120_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[1][2][2][2]) && (Shen.is_type(Arg6120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6120_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen-be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-result"], [Shen.type_cons, [Shen.type_symbol, "shen-of"], [Shen.type_cons, [Shen.type_symbol, "shen-dereferencing"], Arg6120_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen-a"], [Shen.type_cons, [Shen.type_symbol, "shen-non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen-then"], [Shen.type_cons, Shen.call(Shen.fns["shen-mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-mu"], [Shen.type_cons, Arg6120_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-mu"], [Shen.type_cons, Arg6120_0[1][2][1][2], Arg6120_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen-of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen-of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen-else"], [Shen.type_cons, Shen.fail_obj, []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6120_0, Shen.type_cons) && (Shen.is_type(Arg6120_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mu"], Arg6120_0[1][1])) && (Shen.is_type(Arg6120_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6120_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[1][2][2][2]) && (Shen.is_type(Arg6120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6120_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6120_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen-be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-result"], [Shen.type_cons, [Shen.type_symbol, "shen-of"], [Shen.type_cons, [Shen.type_symbol, "shen-dereferencing"], Arg6120_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen-a"], [Shen.type_cons, [Shen.type_symbol, "shen-non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen-then"], [Shen.type_cons, Shen.call(Shen.fns["shen-mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-mu"], [Shen.type_cons, Arg6120_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-mu"], [Shen.type_cons, Arg6120_0[1][2][1][2], Arg6120_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen-of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen-of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen-else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen-a"], [Shen.type_cons, [Shen.type_symbol, "shen-variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen-then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-rename"], [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen-extract_vars"], [Arg6120_0[1][2][1]]), [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen-then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen-to"], [Shen.type_cons, Shen.call(Shen.fns["shen-rcons_form"], [Shen.call(Shen.fns["shen-remove_modes"], [Arg6120_0[1][2][1]])]), [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen-mu_reduction"], [Arg6120_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], []]]]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen-else"], [Shen.type_cons, Shen.fail_obj, []]]]]]], []]]]]]], []]]]]]])
  : Arg6120_0))))))))},
  2,
  [],
  "shen-mu_reduction"];






Shen.fns["shen-rcons_form"] = [Shen.type_func,
  function shen_user_lambda6123(Arg6122) {
  if (Arg6122.length < 1) return [Shen.type_func, shen_user_lambda6123, 1, Arg6122];
  var Arg6122_0 = Arg6122[0];
  return ((Shen.is_type(Arg6122_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen-rcons_form"], [Arg6122_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen-rcons_form"], [Arg6122_0[2]]), []]]]
  : Arg6122_0)},
  1,
  [],
  "shen-rcons_form"];






Shen.fns["shen-remove_modes"] = [Shen.type_func,
  function shen_user_lambda6125(Arg6124) {
  if (Arg6124.length < 1) return [Shen.type_func, shen_user_lambda6125, 1, Arg6124];
  var Arg6124_0 = Arg6124[0];
  return (((Shen.is_type(Arg6124_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6124_0[1])) && (Shen.is_type(Arg6124_0[2], Shen.type_cons) && (Shen.is_type(Arg6124_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6124_0[2][2][1])) && Shen.empty$question$(Arg6124_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-remove_modes"], [Arg6124_0[2][1]]);})
  : (((Shen.is_type(Arg6124_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6124_0[1])) && (Shen.is_type(Arg6124_0[2], Shen.type_cons) && (Shen.is_type(Arg6124_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6124_0[2][2][1])) && Shen.empty$question$(Arg6124_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-remove_modes"], [Arg6124_0[2][1]]);})
  : ((Shen.is_type(Arg6124_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-remove_modes"], [Arg6124_0[1]]), Shen.call(Shen.fns["shen-remove_modes"], [Arg6124_0[2]])]
  : Arg6124_0)))},
  1,
  [],
  "shen-remove_modes"];






Shen.fns["shen-ephemeral_variable?"] = [Shen.type_func,
  function shen_user_lambda6127(Arg6126) {
  if (Arg6126.length < 2) return [Shen.type_func, shen_user_lambda6127, 2, Arg6126];
  var Arg6126_0 = Arg6126[0], Arg6126_1 = Arg6126[1];
  return (Shen.call(Shen.fns["variable?"], [Arg6126_0]) && Shen.call(Shen.fns["variable?"], [Arg6126_1]))},
  2,
  [],
  "shen-ephemeral_variable?"];






Shen.fns["shen-prolog_constant?"] = [Shen.type_func,
  function shen_user_lambda6129(Arg6128) {
  if (Arg6128.length < 1) return [Shen.type_func, shen_user_lambda6129, 1, Arg6128];
  var Arg6128_0 = Arg6128[0];
  return ((Shen.is_type(Arg6128_0, Shen.type_cons))
  ? false
  : true)},
  1,
  [],
  "shen-prolog_constant?"];






Shen.fns["shen-aum_to_shen"] = [Shen.type_func,
  function shen_user_lambda6131(Arg6130) {
  if (Arg6130.length < 1) return [Shen.type_func, shen_user_lambda6131, 1, Arg6130];
  var Arg6130_0 = Arg6130[0];
  return (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-be"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6130_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6130_0[2][2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6130_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-aum_to_shen"], [Arg6130_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen-aum_to_shen"], [Arg6130_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-the"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-result"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-of"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-dereferencing"], Arg6130_0[2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-lazyderef"], [Shen.type_cons, Shen.call(Shen.fns["shen-aum_to_shen"], [Arg6130_0[2][2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-then"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6130_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-else"], Arg6130_0[2][2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen-aum_to_shen"], [Arg6130_0[2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen-aum_to_shen"], [Arg6130_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen-aum_to_shen"], [Arg6130_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-a"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-variable"], Arg6130_0[2][2][2][1])) && Shen.empty$question$(Arg6130_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-pvar?"], [Shen.type_cons, Arg6130_0[1], []]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-a"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-non-empty"], Arg6130_0[2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6130_0[2][2][2][2][1])) && Shen.empty$question$(Arg6130_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, Arg6130_0[1], []]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-rename"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-the"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-variables"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6130_0[2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6130_0[2][2][2][2][1]) && (Shen.is_type(Arg6130_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6130_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-then"], Arg6130_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-aum_to_shen"], [Arg6130_0[2][2][2][2][2][2][2][1]]);})
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-rename"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-the"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-variables"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6130_0[2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6130_0[2][2][2][2][1], Shen.type_cons) && (Shen.is_type(Arg6130_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6130_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-then"], Arg6130_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6130_0[2][2][2][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen-aum_to_shen"], [[Shen.type_cons, [Shen.type_symbol, "shen-rename"], [Shen.type_cons, [Shen.type_symbol, "shen-the"], [Shen.type_cons, [Shen.type_symbol, "shen-variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6130_0[2][2][2][2][1][2], Arg6130_0[2][2][2][2][2]]]]]]]), []]]]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-to"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6130_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6130_0[2][2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-bindv"], [Shen.type_cons, Arg6130_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-chwild"], [Arg6130_0[2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Shen.call(Shen.fns["shen-aum_to_shen"], [Arg6130_0[2][2][2][2][2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-unbindv"], [Shen.type_cons, Arg6130_0[2][1], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]]], []]]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "identical"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-to"], Arg6130_0[2][2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6130_0[2][2][2][2][1], [Shen.type_cons, Arg6130_0[1], []]]]
  : ((Shen.unwind_tail(Shen.$eq$(Arg6130_0, Shen.fail_obj)))
  ? false
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-the"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "head"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-of"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6130_0[2][2][2]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-the"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tail"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-of"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6130_0[2][2][2]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-pop"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-the"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-stack"], Arg6130_0[2][2][1])) && Shen.empty$question$(Arg6130_0[2][2][2]))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-incinfs"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], []]]]
  : (((Shen.is_type(Arg6130_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "call"], Arg6130_0[1])) && (Shen.is_type(Arg6130_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-the"], Arg6130_0[2][1])) && (Shen.is_type(Arg6130_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-continuation"], Arg6130_0[2][2][1])) && (Shen.is_type(Arg6130_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6130_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-incinfs"], []], [Shen.type_cons, Shen.call(Shen.fns["shen-call_the_continuation"], [Shen.call(Shen.fns["shen-chwild"], [Arg6130_0[2][2][2][1]]), [Shen.type_symbol, "ProcessN"], [Shen.type_symbol, "Continuation"]]), []]]]
  : Arg6130_0))))))))))))))},
  1,
  [],
  "shen-aum_to_shen"];






Shen.fns["shen-chwild"] = [Shen.type_func,
  function shen_user_lambda6133(Arg6132) {
  if (Arg6132.length < 1) return [Shen.type_func, shen_user_lambda6133, 1, Arg6132];
  var Arg6132_0 = Arg6132[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6132_0, [Shen.type_symbol, "_"])))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]
  : ((Shen.is_type(Arg6132_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6135(Arg6134) {
  if (Arg6134.length < 1) return [Shen.type_func, shen_user_lambda6135, 1, Arg6134];
  var Arg6134_0 = Arg6134[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-chwild"], [Arg6134_0]);})},
  1,
  []], Arg6132_0]);})
  : Arg6132_0))},
  1,
  [],
  "shen-chwild"];






Shen.fns["shen-newpv"] = [Shen.type_func,
  function shen_user_lambda6137(Arg6136) {
  if (Arg6136.length < 1) return [Shen.type_func, shen_user_lambda6137, 1, Arg6136];
  var Arg6136_0 = Arg6136[0];
  var R0, R1;
  return ((R0 = (Shen.absvector_ref((Shen.globals["shen-*varcounter*"]), Arg6136_0) + 1)),
  Shen.absvector_set((Shen.globals["shen-*varcounter*"]), Arg6136_0, R0),
  (R1 = Shen.absvector_ref((Shen.globals["shen-*prologvectors*"]), Arg6136_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.call(Shen.fns["limit"], [R1]))))
  ? Shen.call(Shen.fns["shen-resizeprocessvector"], [Arg6136_0, R0])
  : [Shen.type_symbol, "shen-skip"]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-mk-pvar"], [R0]);}))},
  1,
  [],
  "shen-newpv"];






Shen.fns["shen-resizeprocessvector"] = [Shen.type_func,
  function shen_user_lambda6139(Arg6138) {
  if (Arg6138.length < 2) return [Shen.type_func, shen_user_lambda6139, 2, Arg6138];
  var Arg6138_0 = Arg6138[0], Arg6138_1 = Arg6138[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen-*prologvectors*"]), Arg6138_0)),
  (R0 = Shen.call(Shen.fns["shen-resize-vector"], [R0, (Arg6138_1 + Arg6138_1), [Shen.type_symbol, "shen--null-"]])),
  Shen.absvector_set((Shen.globals["shen-*prologvectors*"]), Arg6138_0, R0))},
  2,
  [],
  "shen-resizeprocessvector"];






Shen.fns["shen-resize-vector"] = [Shen.type_func,
  function shen_user_lambda6141(Arg6140) {
  if (Arg6140.length < 3) return [Shen.type_func, shen_user_lambda6141, 3, Arg6140];
  var Arg6140_0 = Arg6140[0], Arg6140_1 = Arg6140[1], Arg6140_2 = Arg6140[2];
  var R0;
  return ((R0 = Shen.absvector_set(Shen.absvector((1 + Arg6140_1)), 0, Arg6140_1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen-copy-vector"], [Arg6140_0, R0, Shen.call(Shen.fns["limit"], [Arg6140_0]), Arg6140_1, Arg6140_2]);}))},
  3,
  [],
  "shen-resize-vector"];






Shen.fns["shen-copy-vector"] = [Shen.type_func,
  function shen_user_lambda6143(Arg6142) {
  if (Arg6142.length < 5) return [Shen.type_func, shen_user_lambda6143, 5, Arg6142];
  var Arg6142_0 = Arg6142[0], Arg6142_1 = Arg6142[1], Arg6142_2 = Arg6142[2], Arg6142_3 = Arg6142[3], Arg6142_4 = Arg6142[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-copy-vector-stage-2"], [(1 + Arg6142_2), (Arg6142_3 + 1), Arg6142_4, Shen.call(Shen.fns["shen-copy-vector-stage-1"], [1, Arg6142_0, Arg6142_1, (1 + Arg6142_2)])]);})},
  5,
  [],
  "shen-copy-vector"];






Shen.fns["shen-copy-vector-stage-1"] = [Shen.type_func,
  function shen_user_lambda6145(Arg6144) {
  if (Arg6144.length < 4) return [Shen.type_func, shen_user_lambda6145, 4, Arg6144];
  var Arg6144_0 = Arg6144[0], Arg6144_1 = Arg6144[1], Arg6144_2 = Arg6144[2], Arg6144_3 = Arg6144[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6144_3, Arg6144_0)))
  ? Arg6144_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen-copy-vector-stage-1"], [(1 + Arg6144_0), Arg6144_1, Shen.absvector_set(Arg6144_2, Arg6144_0, Shen.absvector_ref(Arg6144_1, Arg6144_0)), Arg6144_3]);}))},
  4,
  [],
  "shen-copy-vector-stage-1"];






Shen.fns["shen-copy-vector-stage-2"] = [Shen.type_func,
  function shen_user_lambda6147(Arg6146) {
  if (Arg6146.length < 4) return [Shen.type_func, shen_user_lambda6147, 4, Arg6146];
  var Arg6146_0 = Arg6146[0], Arg6146_1 = Arg6146[1], Arg6146_2 = Arg6146[2], Arg6146_3 = Arg6146[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6146_1, Arg6146_0)))
  ? Arg6146_3
  : (function() {
  return Shen.call_tail(Shen.fns["shen-copy-vector-stage-2"], [(Arg6146_0 + 1), Arg6146_1, Arg6146_2, Shen.absvector_set(Arg6146_3, Arg6146_0, Arg6146_2)]);}))},
  4,
  [],
  "shen-copy-vector-stage-2"];






Shen.fns["shen-mk-pvar"] = [Shen.type_func,
  function shen_user_lambda6149(Arg6148) {
  if (Arg6148.length < 1) return [Shen.type_func, shen_user_lambda6149, 1, Arg6148];
  var Arg6148_0 = Arg6148[0];
  return Shen.absvector_set(Shen.absvector_set(Shen.absvector(2), 0, [Shen.type_symbol, "shen-pvar"]), 1, Arg6148_0)},
  1,
  [],
  "shen-mk-pvar"];






Shen.fns["shen-pvar?"] = [Shen.type_func,
  function shen_user_lambda6151(Arg6150) {
  if (Arg6150.length < 1) return [Shen.type_func, shen_user_lambda6151, 1, Arg6150];
  var Arg6150_0 = Arg6150[0];
  return (Shen.absvector$question$(Arg6150_0) && Shen.unwind_tail(Shen.$eq$(Shen.absvector_ref(Arg6150_0, 0), [Shen.type_symbol, "shen-pvar"])))},
  1,
  [],
  "shen-pvar?"];






Shen.fns["shen-bindv"] = [Shen.type_func,
  function shen_user_lambda6153(Arg6152) {
  if (Arg6152.length < 3) return [Shen.type_func, shen_user_lambda6153, 3, Arg6152];
  var Arg6152_0 = Arg6152[0], Arg6152_1 = Arg6152[1], Arg6152_2 = Arg6152[2];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen-*prologvectors*"]), Arg6152_2)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6152_0, 1), Arg6152_1))},
  3,
  [],
  "shen-bindv"];






Shen.fns["shen-unbindv"] = [Shen.type_func,
  function shen_user_lambda6155(Arg6154) {
  if (Arg6154.length < 2) return [Shen.type_func, shen_user_lambda6155, 2, Arg6154];
  var Arg6154_0 = Arg6154[0], Arg6154_1 = Arg6154[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen-*prologvectors*"]), Arg6154_1)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6154_0, 1), [Shen.type_symbol, "shen--null-"]))},
  2,
  [],
  "shen-unbindv"];






Shen.fns["shen-incinfs"] = [Shen.type_func,
  function shen_user_lambda6157(Arg6156) {
  if (Arg6156.length < 0) return [Shen.type_func, shen_user_lambda6157, 0, Arg6156];
  return (Shen.globals["shen-*infs*"] = (1 + (Shen.globals["shen-*infs*"])))},
  0,
  [],
  "shen-incinfs"];






Shen.fns["shen-call_the_continuation"] = [Shen.type_func,
  function shen_user_lambda6159(Arg6158) {
  if (Arg6158.length < 3) return [Shen.type_func, shen_user_lambda6159, 3, Arg6158];
  var Arg6158_0 = Arg6158[0], Arg6158_1 = Arg6158[1], Arg6158_2 = Arg6158[2];
  var R0;
  return (((Shen.is_type(Arg6158_0, Shen.type_cons) && (Shen.is_type(Arg6158_0[1], Shen.type_cons) && Shen.empty$question$(Arg6158_0[2]))))
  ? [Shen.type_cons, Arg6158_0[1][1], Shen.call(Shen.fns["append"], [Arg6158_0[1][2], [Shen.type_cons, Arg6158_1, [Shen.type_cons, Arg6158_2, []]]])]
  : (((Shen.is_type(Arg6158_0, Shen.type_cons) && Shen.is_type(Arg6158_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen-newcontinuation"], [Arg6158_0[2], Arg6158_1, Arg6158_2])),
  [Shen.type_cons, Arg6158_0[1][1], Shen.call(Shen.fns["append"], [Arg6158_0[1][2], [Shen.type_cons, Arg6158_1, [Shen.type_cons, R0, []]]])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-call_the_continuation"]]);})))},
  3,
  [],
  "shen-call_the_continuation"];






Shen.fns["shen-newcontinuation"] = [Shen.type_func,
  function shen_user_lambda6161(Arg6160) {
  if (Arg6160.length < 3) return [Shen.type_func, shen_user_lambda6161, 3, Arg6160];
  var Arg6160_0 = Arg6160[0], Arg6160_1 = Arg6160[1], Arg6160_2 = Arg6160[2];
  return ((Shen.empty$question$(Arg6160_0))
  ? Arg6160_2
  : (((Shen.is_type(Arg6160_0, Shen.type_cons) && Shen.is_type(Arg6160_0[1], Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_cons, Arg6160_0[1][1], Shen.call(Shen.fns["append"], [Arg6160_0[1][2], [Shen.type_cons, Arg6160_1, [Shen.type_cons, Shen.call(Shen.fns["shen-newcontinuation"], [Arg6160_0[2], Arg6160_1, Arg6160_2]), []]]])], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-newcontinuation"]]);})))},
  3,
  [],
  "shen-newcontinuation"];






Shen.fns["return"] = [Shen.type_func,
  function shen_user_lambda6163(Arg6162) {
  if (Arg6162.length < 3) return [Shen.type_func, shen_user_lambda6163, 3, Arg6162];
  var Arg6162_0 = Arg6162[0], Arg6162_1 = Arg6162[1], Arg6162_2 = Arg6162[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-deref"], [Arg6162_0, Arg6162_1]);})},
  3,
  [],
  "return"];






Shen.fns["shen-measure&return"] = [Shen.type_func,
  function shen_user_lambda6165(Arg6164) {
  if (Arg6164.length < 3) return [Shen.type_func, shen_user_lambda6165, 3, Arg6164];
  var Arg6164_0 = Arg6164[0], Arg6164_1 = Arg6164[1], Arg6164_2 = Arg6164[2];
  return (Shen.call(Shen.fns["intoutput"], ["~A inferences~%", [Shen.fns['shen-tuple'], (Shen.globals["shen-*infs*"]), []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-deref"], [Arg6164_0, Arg6164_1]);}))},
  3,
  [],
  "shen-measure&return"];






Shen.fns["unify"] = [Shen.type_func,
  function shen_user_lambda6167(Arg6166) {
  if (Arg6166.length < 4) return [Shen.type_func, shen_user_lambda6167, 4, Arg6166];
  var Arg6166_0 = Arg6166[0], Arg6166_1 = Arg6166[1], Arg6166_2 = Arg6166[2], Arg6166_3 = Arg6166[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-lzy="], [Shen.call(Shen.fns["shen-lazyderef"], [Arg6166_0, Arg6166_2]), Shen.call(Shen.fns["shen-lazyderef"], [Arg6166_1, Arg6166_2]), Arg6166_2, Arg6166_3]);})},
  4,
  [],
  "unify"];






Shen.fns["shen-lzy="] = [Shen.type_func,
  function shen_user_lambda6169(Arg6168) {
  if (Arg6168.length < 4) return [Shen.type_func, shen_user_lambda6169, 4, Arg6168];
  var Arg6168_0 = Arg6168[0], Arg6168_1 = Arg6168[1], Arg6168_2 = Arg6168[2], Arg6168_3 = Arg6168[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6168_1, Arg6168_0)))
  ? Shen.thaw(Arg6168_3)
  : ((Shen.call(Shen.fns["shen-pvar?"], [Arg6168_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6168_0, Arg6168_1, Arg6168_2, Arg6168_3]);})
  : ((Shen.call(Shen.fns["shen-pvar?"], [Arg6168_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6168_1, Arg6168_0, Arg6168_2, Arg6168_3]);})
  : (((Shen.is_type(Arg6168_0, Shen.type_cons) && Shen.is_type(Arg6168_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-lzy="], [Shen.call(Shen.fns["shen-lazyderef"], [Arg6168_0[1], Arg6168_2]), Shen.call(Shen.fns["shen-lazyderef"], [Arg6168_1[1], Arg6168_2]), Arg6168_2, (new Shen.Freeze([Arg6168_0, Arg6168_1, Arg6168_2, Arg6168_3], function(Arg6170) {
  var Arg6170_0 = Arg6170[0], Arg6170_1 = Arg6170[1], Arg6170_2 = Arg6170[2], Arg6170_3 = Arg6170[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-lzy="], [Shen.call(Shen.fns["shen-lazyderef"], [Arg6170_0[2], Arg6170_2]), Shen.call(Shen.fns["shen-lazyderef"], [Arg6170_1[2], Arg6170_2]), Arg6170_2, Arg6170_3]);});})}))]);})
  : false))))},
  4,
  [],
  "shen-lzy="];






Shen.fns["shen-deref"] = [Shen.type_func,
  function shen_user_lambda6173(Arg6172) {
  if (Arg6172.length < 2) return [Shen.type_func, shen_user_lambda6173, 2, Arg6172];
  var Arg6172_0 = Arg6172[0], Arg6172_1 = Arg6172[1];
  var R0;
  return ((Shen.is_type(Arg6172_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-deref"], [Arg6172_0[1], Arg6172_1]), Shen.call(Shen.fns["shen-deref"], [Arg6172_0[2], Arg6172_1])]
  : ((Shen.call(Shen.fns["shen-pvar?"], [Arg6172_0]))
  ? ((R0 = Shen.call(Shen.fns["shen-valvector"], [Arg6172_0, Arg6172_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen--null-"])))
  ? Arg6172_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen-deref"], [R0, Arg6172_1]);})))
  : Arg6172_0))},
  2,
  [],
  "shen-deref"];






Shen.fns["shen-lazyderef"] = [Shen.type_func,
  function shen_user_lambda6175(Arg6174) {
  if (Arg6174.length < 2) return [Shen.type_func, shen_user_lambda6175, 2, Arg6174];
  var Arg6174_0 = Arg6174[0], Arg6174_1 = Arg6174[1];
  var R0;
  return ((Shen.call(Shen.fns["shen-pvar?"], [Arg6174_0]))
  ? ((R0 = Shen.call(Shen.fns["shen-valvector"], [Arg6174_0, Arg6174_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen--null-"])))
  ? Arg6174_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen-lazyderef"], [R0, Arg6174_1]);})))
  : Arg6174_0)},
  2,
  [],
  "shen-lazyderef"];






Shen.fns["shen-valvector"] = [Shen.type_func,
  function shen_user_lambda6177(Arg6176) {
  if (Arg6176.length < 2) return [Shen.type_func, shen_user_lambda6177, 2, Arg6176];
  var Arg6176_0 = Arg6176[0], Arg6176_1 = Arg6176[1];
  return Shen.absvector_ref(Shen.absvector_ref((Shen.globals["shen-*prologvectors*"]), Arg6176_1), Shen.absvector_ref(Arg6176_0, 1))},
  2,
  [],
  "shen-valvector"];






Shen.fns["unify!"] = [Shen.type_func,
  function shen_user_lambda6179(Arg6178) {
  if (Arg6178.length < 4) return [Shen.type_func, shen_user_lambda6179, 4, Arg6178];
  var Arg6178_0 = Arg6178[0], Arg6178_1 = Arg6178[1], Arg6178_2 = Arg6178[2], Arg6178_3 = Arg6178[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-lzy=!"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg6178_0, Arg6178_2]), Shen.call(Shen.fns["shen-lazyderef"], [Arg6178_1, Arg6178_2]), Arg6178_2, Arg6178_3]);})},
  4,
  [],
  "unify!"];






Shen.fns["shen-lzy=!"] = [Shen.type_func,
  function shen_user_lambda6181(Arg6180) {
  if (Arg6180.length < 4) return [Shen.type_func, shen_user_lambda6181, 4, Arg6180];
  var Arg6180_0 = Arg6180[0], Arg6180_1 = Arg6180[1], Arg6180_2 = Arg6180[2], Arg6180_3 = Arg6180[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6180_1, Arg6180_0)))
  ? Shen.thaw(Arg6180_3)
  : (((Shen.call(Shen.fns["shen-pvar?"], [Arg6180_0]) && (!Shen.call(Shen.fns["shen-occurs?"], [Arg6180_0, Shen.call(Shen.fns["shen-deref"], [Arg6180_1, Arg6180_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6180_0, Arg6180_1, Arg6180_2, Arg6180_3]);})
  : (((Shen.call(Shen.fns["shen-pvar?"], [Arg6180_1]) && (!Shen.call(Shen.fns["shen-occurs?"], [Arg6180_1, Shen.call(Shen.fns["shen-deref"], [Arg6180_0, Arg6180_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6180_1, Arg6180_0, Arg6180_2, Arg6180_3]);})
  : (((Shen.is_type(Arg6180_0, Shen.type_cons) && Shen.is_type(Arg6180_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-lzy=!"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg6180_0[1], Arg6180_2]), Shen.call(Shen.fns["shen-lazyderef"], [Arg6180_1[1], Arg6180_2]), Arg6180_2, (new Shen.Freeze([Arg6180_0, Arg6180_1, Arg6180_2, Arg6180_3], function(Arg6182) {
  var Arg6182_0 = Arg6182[0], Arg6182_1 = Arg6182[1], Arg6182_2 = Arg6182[2], Arg6182_3 = Arg6182[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-lzy=!"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg6182_0[2], Arg6182_2]), Shen.call(Shen.fns["shen-lazyderef"], [Arg6182_1[2], Arg6182_2]), Arg6182_2, Arg6182_3]);});})}))]);})
  : false))))},
  4,
  [],
  "shen-lzy=!"];






Shen.fns["shen-occurs?"] = [Shen.type_func,
  function shen_user_lambda6185(Arg6184) {
  if (Arg6184.length < 2) return [Shen.type_func, shen_user_lambda6185, 2, Arg6184];
  var Arg6184_0 = Arg6184[0], Arg6184_1 = Arg6184[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6184_1, Arg6184_0)))
  ? true
  : ((Shen.is_type(Arg6184_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen-occurs?"], [Arg6184_0, Arg6184_1[1]]) || Shen.call(Shen.fns["shen-occurs?"], [Arg6184_0, Arg6184_1[2]]))
  : false))},
  2,
  [],
  "shen-occurs?"];






Shen.fns["identical"] = [Shen.type_func,
  function shen_user_lambda6187(Arg6186) {
  if (Arg6186.length < 4) return [Shen.type_func, shen_user_lambda6187, 4, Arg6186];
  var Arg6186_0 = Arg6186[0], Arg6186_1 = Arg6186[1], Arg6186_2 = Arg6186[2], Arg6186_3 = Arg6186[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-lzy=="], [Shen.call(Shen.fns["shen-lazyderef"], [Arg6186_0, Arg6186_2]), Shen.call(Shen.fns["shen-lazyderef"], [Arg6186_1, Arg6186_2]), Arg6186_2, Arg6186_3]);})},
  4,
  [],
  "identical"];






Shen.fns["shen-lzy=="] = [Shen.type_func,
  function shen_user_lambda6189(Arg6188) {
  if (Arg6188.length < 4) return [Shen.type_func, shen_user_lambda6189, 4, Arg6188];
  var Arg6188_0 = Arg6188[0], Arg6188_1 = Arg6188[1], Arg6188_2 = Arg6188[2], Arg6188_3 = Arg6188[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6188_1, Arg6188_0)))
  ? Shen.thaw(Arg6188_3)
  : (((Shen.is_type(Arg6188_0, Shen.type_cons) && Shen.is_type(Arg6188_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-lzy=="], [Shen.call(Shen.fns["shen-lazyderef"], [Arg6188_0[1], Arg6188_2]), Shen.call(Shen.fns["shen-lazyderef"], [Arg6188_1[1], Arg6188_2]), Arg6188_2, (new Shen.Freeze([Arg6188_0, Arg6188_1, Arg6188_2, Arg6188_3], function(Arg6190) {
  var Arg6190_0 = Arg6190[0], Arg6190_1 = Arg6190[1], Arg6190_2 = Arg6190[2], Arg6190_3 = Arg6190[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-lzy=="], [Arg6190_0[2], Arg6190_1[2], Arg6190_2, Arg6190_3]);});})}))]);})
  : false))},
  4,
  [],
  "shen-lzy=="];






Shen.fns["shen-pvar"] = [Shen.type_func,
  function shen_user_lambda6193(Arg6192) {
  if (Arg6192.length < 1) return [Shen.type_func, shen_user_lambda6193, 1, Arg6192];
  var Arg6192_0 = Arg6192[0];
  return (function() {
  return Shen.call_tail(Shen.fns["intmake-string"], ["Var~A", [Shen.fns['shen-tuple'], Shen.absvector_ref(Arg6192_0, 1), []]]);})},
  1,
  [],
  "shen-pvar"];






Shen.fns["bind"] = [Shen.type_func,
  function shen_user_lambda6195(Arg6194) {
  if (Arg6194.length < 4) return [Shen.type_func, shen_user_lambda6195, 4, Arg6194];
  var Arg6194_0 = Arg6194[0], Arg6194_1 = Arg6194[1], Arg6194_2 = Arg6194[2], Arg6194_3 = Arg6194[3];
  var R0;
  return (Shen.call(Shen.fns["shen-bindv"], [Arg6194_0, Arg6194_1, Arg6194_2]),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6194_3))),
  Shen.call(Shen.fns["shen-unbindv"], [Arg6194_0, Arg6194_2]),
  R0)},
  4,
  [],
  "bind"];






Shen.fns["fwhen"] = [Shen.type_func,
  function shen_user_lambda6197(Arg6196) {
  if (Arg6196.length < 3) return [Shen.type_func, shen_user_lambda6197, 3, Arg6196];
  var Arg6196_0 = Arg6196[0], Arg6196_1 = Arg6196[1], Arg6196_2 = Arg6196[2];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg6196_0)))
  ? Shen.thaw(Arg6196_2)
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg6196_0)))
  ? false
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["fwhen expects a boolean: not ~S%", [Shen.fns['shen-tuple'], Arg6196_0, []]]);})))},
  3,
  [],
  "fwhen"];






Shen.fns["call"] = [Shen.type_func,
  function shen_user_lambda6199(Arg6198) {
  if (Arg6198.length < 3) return [Shen.type_func, shen_user_lambda6199, 3, Arg6198];
  var Arg6198_0 = Arg6198[0], Arg6198_1 = Arg6198[1], Arg6198_2 = Arg6198[2];
  return ((Shen.is_type(Arg6198_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-call-help"], [Shen.call(Shen.fns["shen-m_prolog_to_s-prolog_predicate"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg6198_0[1], Arg6198_1])]), Arg6198_0[2], Arg6198_1, Arg6198_2]);})
  : false)},
  3,
  [],
  "call"];






Shen.fns["shen-call-help"] = [Shen.type_func,
  function shen_user_lambda6201(Arg6200) {
  if (Arg6200.length < 4) return [Shen.type_func, shen_user_lambda6201, 4, Arg6200];
  var Arg6200_0 = Arg6200[0], Arg6200_1 = Arg6200[1], Arg6200_2 = Arg6200[2], Arg6200_3 = Arg6200[3];
  return ((Shen.empty$question$(Arg6200_1))
  ? (function() {
  return Shen.call_tail(Arg6200_0, [Arg6200_2, Arg6200_3]);})
  : ((Shen.is_type(Arg6200_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-call-help"], [Shen.call(Arg6200_0, [Arg6200_1[1]]), Arg6200_1[2], Arg6200_2, Arg6200_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-call-help"]]);})))},
  4,
  [],
  "shen-call-help"];






Shen.fns["shen-intprolog"] = [Shen.type_func,
  function shen_user_lambda6203(Arg6202) {
  if (Arg6202.length < 1) return [Shen.type_func, shen_user_lambda6203, 1, Arg6202];
  var Arg6202_0 = Arg6202[0];
  var R0;
  return (((Shen.is_type(Arg6202_0, Shen.type_cons) && Shen.is_type(Arg6202_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen-start-new-prolog-process"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-intprolog-help"], [Arg6202_0[1][1], Shen.call(Shen.fns["shen-insert-prolog-variables"], [[Shen.type_cons, Arg6202_0[1][2], [Shen.type_cons, Arg6202_0[2], []]], R0]), R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-intprolog"]]);}))},
  1,
  [],
  "shen-intprolog"];






Shen.fns["shen-intprolog-help"] = [Shen.type_func,
  function shen_user_lambda6205(Arg6204) {
  if (Arg6204.length < 3) return [Shen.type_func, shen_user_lambda6205, 3, Arg6204];
  var Arg6204_0 = Arg6204[0], Arg6204_1 = Arg6204[1], Arg6204_2 = Arg6204[2];
  return (((Shen.is_type(Arg6204_1, Shen.type_cons) && (Shen.is_type(Arg6204_1[2], Shen.type_cons) && Shen.empty$question$(Arg6204_1[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-intprolog-help-help"], [Arg6204_0, Arg6204_1[1], Arg6204_1[2][1], Arg6204_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-intprolog-help"]]);}))},
  3,
  [],
  "shen-intprolog-help"];






Shen.fns["shen-intprolog-help-help"] = [Shen.type_func,
  function shen_user_lambda6207(Arg6206) {
  if (Arg6206.length < 4) return [Shen.type_func, shen_user_lambda6207, 4, Arg6206];
  var Arg6206_0 = Arg6206[0], Arg6206_1 = Arg6206[1], Arg6206_2 = Arg6206[2], Arg6206_3 = Arg6206[3];
  return ((Shen.empty$question$(Arg6206_1))
  ? (function() {
  return Shen.call_tail(Arg6206_0, [Arg6206_3, (new Shen.Freeze([Arg6206_0, Arg6206_1, Arg6206_2, Arg6206_3], function(Arg6208) {
  var Arg6208_0 = Arg6208[0], Arg6208_1 = Arg6208[1], Arg6208_2 = Arg6208[2], Arg6208_3 = Arg6208[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-call-rest"], [Arg6208_2, Arg6208_3]);});})}))]);})
  : ((Shen.is_type(Arg6206_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-intprolog-help-help"], [Shen.call(Arg6206_0, [Arg6206_1[1]]), Arg6206_1[2], Arg6206_2, Arg6206_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-intprolog-help-help"]]);})))},
  4,
  [],
  "shen-intprolog-help-help"];






Shen.fns["shen-call-rest"] = [Shen.type_func,
  function shen_user_lambda6211(Arg6210) {
  if (Arg6210.length < 2) return [Shen.type_func, shen_user_lambda6211, 2, Arg6210];
  var Arg6210_0 = Arg6210[0], Arg6210_1 = Arg6210[1];
  return ((Shen.empty$question$(Arg6210_0))
  ? true
  : (((Shen.is_type(Arg6210_0, Shen.type_cons) && (Shen.is_type(Arg6210_0[1], Shen.type_cons) && Shen.is_type(Arg6210_0[1][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-call-rest"], [[Shen.type_cons, [Shen.type_cons, Shen.call(Arg6210_0[1][1], [Arg6210_0[1][2][1]]), Arg6210_0[1][2][2]], Arg6210_0[2]], Arg6210_1]);})
  : (((Shen.is_type(Arg6210_0, Shen.type_cons) && (Shen.is_type(Arg6210_0[1], Shen.type_cons) && Shen.empty$question$(Arg6210_0[1][2]))))
  ? (function() {
  return Shen.call_tail(Arg6210_0[1][1], [Arg6210_1, (new Shen.Freeze([Arg6210_0, Arg6210_1], function(Arg6212) {
  var Arg6212_0 = Arg6212[0], Arg6212_1 = Arg6212[1];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-call-rest"], [Arg6212_0[2], Arg6212_1]);});})}))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-call-rest"]]);}))))},
  2,
  [],
  "shen-call-rest"];






Shen.fns["shen-start-new-prolog-process"] = [Shen.type_func,
  function shen_user_lambda6215(Arg6214) {
  if (Arg6214.length < 0) return [Shen.type_func, shen_user_lambda6215, 0, Arg6214];
  var R0;
  return ((R0 = (Shen.globals["shen-*process-counter*"] = (1 + (Shen.globals["shen-*process-counter*"])))),
  (function() {
  return Shen.call_tail(Shen.fns["shen-initialise-prolog"], [R0]);}))},
  0,
  [],
  "shen-start-new-prolog-process"];






Shen.fns["shen-insert-prolog-variables"] = [Shen.type_func,
  function shen_user_lambda6217(Arg6216) {
  if (Arg6216.length < 2) return [Shen.type_func, shen_user_lambda6217, 2, Arg6216];
  var Arg6216_0 = Arg6216[0], Arg6216_1 = Arg6216[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-insert-prolog-variables-help"], [Arg6216_0, Shen.call(Shen.fns["shen-flatten"], [Arg6216_0]), Arg6216_1]);})},
  2,
  [],
  "shen-insert-prolog-variables"];






Shen.fns["shen-insert-prolog-variables-help"] = [Shen.type_func,
  function shen_user_lambda6219(Arg6218) {
  if (Arg6218.length < 3) return [Shen.type_func, shen_user_lambda6219, 3, Arg6218];
  var Arg6218_0 = Arg6218[0], Arg6218_1 = Arg6218[1], Arg6218_2 = Arg6218[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6218_1))
  ? Arg6218_0
  : (((Shen.is_type(Arg6218_1, Shen.type_cons) && Shen.call(Shen.fns["variable?"], [Arg6218_1[1]])))
  ? ((R0 = Shen.call(Shen.fns["shen-newpv"], [Arg6218_2])),
  (R0 = Shen.call(Shen.fns["subst"], [R0, Arg6218_1[1], Arg6218_0])),
  (R1 = Shen.call(Shen.fns["remove"], [Arg6218_1[1], Arg6218_1[2]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-insert-prolog-variables-help"], [R0, R1, Arg6218_2]);}))
  : ((Shen.is_type(Arg6218_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-insert-prolog-variables-help"], [Arg6218_0, Arg6218_1[2], Arg6218_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-insert-prolog-variables-help"]]);}))))},
  3,
  [],
  "shen-insert-prolog-variables-help"];






Shen.fns["shen-initialise-prolog"] = [Shen.type_func,
  function shen_user_lambda6221(Arg6220) {
  if (Arg6220.length < 1) return [Shen.type_func, shen_user_lambda6221, 1, Arg6220];
  var Arg6220_0 = Arg6220[0];
  return (Shen.absvector_set((Shen.globals["shen-*prologvectors*"]), Arg6220_0, Shen.call(Shen.fns["shen-fillvector"], [Shen.vector(10), 1, 10, [Shen.type_symbol, "shen--null-"]])),
  Shen.absvector_set((Shen.globals["shen-*varcounter*"]), Arg6220_0, 1),
  Arg6220_0)},
  1,
  [],
  "shen-initialise-prolog"];












Shen.fns["shen-f_error"] = [Shen.type_func,
  function shen_user_lambda7035(Arg7034) {
  if (Arg7034.length < 1) return [Shen.type_func, shen_user_lambda7035, 1, Arg7034];
  var Arg7034_0 = Arg7034[0];
  return (Shen.call(Shen.fns["intoutput"], ["partial function ~A;~%", [Shen.fns['shen-tuple'], Arg7034_0, []]]),
  ((((!Shen.call(Shen.fns["shen-tracked?"], [Arg7034_0])) && Shen.call(Shen.fns["y-or-n?"], [Shen.call(Shen.fns["intmake-string"], ["track ~A? ", [Shen.fns['shen-tuple'], Arg7034_0, []]])])))
  ? Shen.call(Shen.fns["shen-track-function"], [Shen.call(Shen.fns["ps"], [Arg7034_0])])
  : [Shen.type_symbol, "shen-ok"]),
  (function() {
  return Shen.simple_error("aborted");}))},
  1,
  [],
  "shen-f_error"];






Shen.fns["shen-tracked?"] = [Shen.type_func,
  function shen_user_lambda7037(Arg7036) {
  if (Arg7036.length < 1) return [Shen.type_func, shen_user_lambda7037, 1, Arg7036];
  var Arg7036_0 = Arg7036[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7036_0, (Shen.globals["shen-*tracking*"])]);})},
  1,
  [],
  "shen-tracked?"];






Shen.fns["track"] = [Shen.type_func,
  function shen_user_lambda7039(Arg7038) {
  if (Arg7038.length < 1) return [Shen.type_func, shen_user_lambda7039, 1, Arg7038];
  var Arg7038_0 = Arg7038[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["ps"], [Arg7038_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-track-function"], [R0]);}))},
  1,
  [],
  "track"];






Shen.fns["shen-track-function"] = [Shen.type_func,
  function shen_user_lambda7041(Arg7040) {
  if (Arg7040.length < 1) return [Shen.type_func, shen_user_lambda7041, 1, Arg7040];
  var Arg7040_0 = Arg7040[0];
  var R0;
  return (((Shen.is_type(Arg7040_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7040_0[1])) && (Shen.is_type(Arg7040_0[2], Shen.type_cons) && (Shen.is_type(Arg7040_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7040_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7040_0[2][2][2][2])))))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7040_0[2][1], [Shen.type_cons, Arg7040_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-insert-tracking-code"], [Arg7040_0[2][1], Arg7040_0[2][2][1], Arg7040_0[2][2][2][1]]), []]]]]),
  (R0 = Shen.call(Shen.fns["eval"], [R0])),
  (Shen.globals["shen-*tracking*"] = [Shen.type_cons, R0, (Shen.globals["shen-*tracking*"])]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-track-function"]]);}))},
  1,
  [],
  "shen-track-function"];






Shen.fns["shen-insert-tracking-code"] = [Shen.type_func,
  function shen_user_lambda7043(Arg7042) {
  if (Arg7042.length < 3) return [Shen.type_func, shen_user_lambda7043, 3, Arg7042];
  var Arg7042_0 = Arg7042[0], Arg7042_1 = Arg7042[1], Arg7042_2 = Arg7042[2];
  return [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen-*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen-*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-input-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen-*call*"], []]], [Shen.type_cons, Arg7042_0, [Shen.type_cons, Shen.call(Shen.fns["shen-cons_form"], [Arg7042_1]), []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7042_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-output-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen-*call*"], []]], [Shen.type_cons, Arg7042_0, [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen-*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen-*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]], []]]], []]]]], []]]], []]]], []]]]},
  3,
  [],
  "shen-insert-tracking-code"];






Shen.fns["shen-toplevel-7045"] = [Shen.type_func,
  function shen_user_lambda7046(Arg7044) {
  if (Arg7044.length < 0) return [Shen.type_func, shen_user_lambda7046, 0, Arg7044];
  return (Shen.globals["shen-*step*"] = false)},
  0,
  [],
  "shen-toplevel-7045"];

Shen.call_toplevel("shen-toplevel-7045")






Shen.fns["step"] = [Shen.type_func,
  function shen_user_lambda7048(Arg7047) {
  if (Arg7047.length < 1) return [Shen.type_func, shen_user_lambda7048, 1, Arg7047];
  var Arg7047_0 = Arg7047[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7047_0)))
  ? (Shen.globals["shen-*step*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7047_0)))
  ? (Shen.globals["shen-*step*"] = false)
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["step expects a + or a -.~%", []]);})))},
  1,
  [],
  "step"];






Shen.fns["spy"] = [Shen.type_func,
  function shen_user_lambda7050(Arg7049) {
  if (Arg7049.length < 1) return [Shen.type_func, shen_user_lambda7050, 1, Arg7049];
  var Arg7049_0 = Arg7049[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7049_0)))
  ? (Shen.globals["shen-*spy*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7049_0)))
  ? (Shen.globals["shen-*spy*"] = false)
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["spy expects a + or a -.~%", []]);})))},
  1,
  [],
  "spy"];






Shen.fns["shen-terpri-or-read-char"] = [Shen.type_func,
  function shen_user_lambda7052(Arg7051) {
  if (Arg7051.length < 0) return [Shen.type_func, shen_user_lambda7052, 0, Arg7051];
  return (((Shen.globals["shen-*step*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-check-byte"], [Shen.read_byte((Shen.globals["*stinput*"]))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))},
  0,
  [],
  "shen-terpri-or-read-char"];






Shen.fns["shen-check-byte"] = [Shen.type_func,
  function shen_user_lambda7054(Arg7053) {
  if (Arg7053.length < 1) return [Shen.type_func, shen_user_lambda7054, 1, Arg7053];
  var Arg7053_0 = Arg7053[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7053_0, Shen.call(Shen.fns["shen-hat"], []))))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["aborted", []]);})
  : true)},
  1,
  [],
  "shen-check-byte"];






Shen.fns["shen-input-track"] = [Shen.type_func,
  function shen_user_lambda7056(Arg7055) {
  if (Arg7055.length < 3) return [Shen.type_func, shen_user_lambda7056, 3, Arg7055];
  var Arg7055_0 = Arg7055[0], Arg7055_1 = Arg7055[1], Arg7055_2 = Arg7055[2];
  return (Shen.call(Shen.fns["intoutput"], ["~%~A<~A> Inputs to ~A ~%~A", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-spaces"], [Arg7055_0]), [Shen.fns['shen-tuple'], Arg7055_0, [Shen.fns['shen-tuple'], Arg7055_1, [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-spaces"], [Arg7055_0]), [Shen.fns['shen-tuple'], Arg7055_2, []]]]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-recursively-print"], [Arg7055_2]);}))},
  3,
  [],
  "shen-input-track"];






Shen.fns["shen-recursively-print"] = [Shen.type_func,
  function shen_user_lambda7058(Arg7057) {
  if (Arg7057.length < 1) return [Shen.type_func, shen_user_lambda7058, 1, Arg7057];
  var Arg7057_0 = Arg7057[0];
  return ((Shen.empty$question$(Arg7057_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["intoutput"], [" ==>", []]);})
  : ((Shen.is_type(Arg7057_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["print"], [Arg7057_0[1]]),
  Shen.call(Shen.fns["intoutput"], [", ", []]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-recursively-print"], [Arg7057_0[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-recursively-print"]]);})))},
  1,
  [],
  "shen-recursively-print"];






Shen.fns["shen-spaces"] = [Shen.type_func,
  function shen_user_lambda7060(Arg7059) {
  if (Arg7059.length < 1) return [Shen.type_func, shen_user_lambda7060, 1, Arg7059];
  var Arg7059_0 = Arg7059[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7059_0)))
  ? ""
  : (" " + Shen.call(Shen.fns["shen-spaces"], [(Arg7059_0 - 1)])))},
  1,
  [],
  "shen-spaces"];






Shen.fns["shen-output-track"] = [Shen.type_func,
  function shen_user_lambda7062(Arg7061) {
  if (Arg7061.length < 3) return [Shen.type_func, shen_user_lambda7062, 3, Arg7061];
  var Arg7061_0 = Arg7061[0], Arg7061_1 = Arg7061[1], Arg7061_2 = Arg7061[2];
  return (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["~%~A<~A> Output from ~A ~%~A==> ~S", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-spaces"], [Arg7061_0]), [Shen.fns['shen-tuple'], Arg7061_0, [Shen.fns['shen-tuple'], Arg7061_1, [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-spaces"], [Arg7061_0]), [Shen.fns['shen-tuple'], Arg7061_2, []]]]]]]);})},
  3,
  [],
  "shen-output-track"];






Shen.fns["untrack"] = [Shen.type_func,
  function shen_user_lambda7064(Arg7063) {
  if (Arg7063.length < 1) return [Shen.type_func, shen_user_lambda7064, 1, Arg7063];
  var Arg7063_0 = Arg7063[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["ps"], [Arg7063_0])]);})},
  1,
  [],
  "untrack"];






Shen.fns["profile"] = [Shen.type_func,
  function shen_user_lambda7066(Arg7065) {
  if (Arg7065.length < 1) return [Shen.type_func, shen_user_lambda7066, 1, Arg7065];
  var Arg7065_0 = Arg7065[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-profile-help"], [Shen.call(Shen.fns["ps"], [Arg7065_0])]);})},
  1,
  [],
  "profile"];






Shen.fns["shen-profile-help"] = [Shen.type_func,
  function shen_user_lambda7068(Arg7067) {
  if (Arg7067.length < 1) return [Shen.type_func, shen_user_lambda7068, 1, Arg7067];
  var Arg7067_0 = Arg7067[0];
  var R0, R1;
  return (((Shen.is_type(Arg7067_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7067_0[1])) && (Shen.is_type(Arg7067_0[2], Shen.type_cons) && (Shen.is_type(Arg7067_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7067_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7067_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-f"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7067_0[2][1], [Shen.type_cons, Arg7067_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-profile-func"], [Arg7067_0[2][1], Arg7067_0[2][2][1], [Shen.type_cons, R0, Arg7067_0[2][2][1]]]), []]]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, Arg7067_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["subst"], [R0, Arg7067_0[2][1], Arg7067_0[2][2][2][1]]), []]]]]),
  Shen.call(Shen.fns["shen-eval-without-macros"], [R1]),
  Shen.call(Shen.fns["shen-eval-without-macros"], [R0]),
  Arg7067_0[2][1])
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["Cannot profile.~%", []]);}))},
  1,
  [],
  "shen-profile-help"];






Shen.fns["unprofile"] = [Shen.type_func,
  function shen_user_lambda7070(Arg7069) {
  if (Arg7069.length < 1) return [Shen.type_func, shen_user_lambda7070, 1, Arg7069];
  var Arg7069_0 = Arg7069[0];
  return (function() {
  return Shen.call_tail(Shen.fns["untrack"], [Arg7069_0]);})},
  1,
  [],
  "unprofile"];






Shen.fns["shen-profile-func"] = [Shen.type_func,
  function shen_user_lambda7072(Arg7071) {
  if (Arg7071.length < 3) return [Shen.type_func, shen_user_lambda7072, 3, Arg7071];
  var Arg7071_0 = Arg7071[0], Arg7071_1 = Arg7071[1], Arg7071_2 = Arg7071[2];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7071_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Record"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-put-profile"], [Shen.type_cons, Arg7071_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-get-profile"], [Shen.type_cons, Arg7071_0, []]], [Shen.type_cons, [Shen.type_symbol, "Finish"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]]]], []]]]]},
  3,
  [],
  "shen-profile-func"];






Shen.fns["profile-results"] = [Shen.type_func,
  function shen_user_lambda7074(Arg7073) {
  if (Arg7073.length < 1) return [Shen.type_func, shen_user_lambda7074, 1, Arg7073];
  var Arg7073_0 = Arg7073[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-get-profile"], [Arg7073_0])),
  Shen.call(Shen.fns["shen-put-profile"], [Arg7073_0, 0]),
  [Shen.fns['shen-tuple'], Arg7073_0, R0])},
  1,
  [],
  "profile-results"];






Shen.fns["shen-get-profile"] = [Shen.type_func,
  function shen_user_lambda7076(Arg7075) {
  if (Arg7075.length < 1) return [Shen.type_func, shen_user_lambda7076, 1, Arg7075];
  var Arg7075_0 = Arg7075[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7075_0, [Shen.type_symbol, "profile"], (Shen.globals["shen-*property-vector*"])]);}, [Shen.type_func,
  function shen_user_lambda7078(Arg7077) {
  if (Arg7077.length < 1) return [Shen.type_func, shen_user_lambda7078, 1, Arg7077];
  var Arg7077_0 = Arg7077[0];
  return 0},
  1,
  []]);})},
  1,
  [],
  "shen-get-profile"];






Shen.fns["shen-put-profile"] = [Shen.type_func,
  function shen_user_lambda7080(Arg7079) {
  if (Arg7079.length < 2) return [Shen.type_func, shen_user_lambda7080, 2, Arg7079];
  var Arg7079_0 = Arg7079[0], Arg7079_1 = Arg7079[1];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg7079_0, [Shen.type_symbol, "profile"], Arg7079_1, (Shen.globals["shen-*property-vector*"])]);})},
  2,
  [],
  "shen-put-profile"];












Shen.fns["shen-toplevel-5763"] = [Shen.type_func,
  function shen_user_lambda5764(Arg5762) {
  if (Arg5762.length < 0) return [Shen.type_func, shen_user_lambda5764, 0, Arg5762];
  return (Shen.globals["shen-*installing-kl*"] = false)},
  0,
  [],
  "shen-toplevel-5763"];

Shen.call_toplevel("shen-toplevel-5763")






Shen.fns["shen-toplevel-5766"] = [Shen.type_func,
  function shen_user_lambda5767(Arg5765) {
  if (Arg5765.length < 0) return [Shen.type_func, shen_user_lambda5767, 0, Arg5765];
  return (Shen.globals["shen-*history*"] = [])},
  0,
  [],
  "shen-toplevel-5766"];

Shen.call_toplevel("shen-toplevel-5766")






Shen.fns["shen-toplevel-5769"] = [Shen.type_func,
  function shen_user_lambda5770(Arg5768) {
  if (Arg5768.length < 0) return [Shen.type_func, shen_user_lambda5770, 0, Arg5768];
  return (Shen.globals["shen-*tc*"] = false)},
  0,
  [],
  "shen-toplevel-5769"];

Shen.call_toplevel("shen-toplevel-5769")






Shen.fns["shen-toplevel-5772"] = [Shen.type_func,
  function shen_user_lambda5773(Arg5771) {
  if (Arg5771.length < 0) return [Shen.type_func, shen_user_lambda5773, 0, Arg5771];
  return (Shen.globals["shen-*property-vector*"] = Shen.vector(20000))},
  0,
  [],
  "shen-toplevel-5772"];

Shen.call_toplevel("shen-toplevel-5772")






Shen.fns["shen-toplevel-5775"] = [Shen.type_func,
  function shen_user_lambda5776(Arg5774) {
  if (Arg5774.length < 0) return [Shen.type_func, shen_user_lambda5776, 0, Arg5774];
  return (Shen.globals["shen-*process-counter*"] = 0)},
  0,
  [],
  "shen-toplevel-5775"];

Shen.call_toplevel("shen-toplevel-5775")






Shen.fns["shen-toplevel-5778"] = [Shen.type_func,
  function shen_user_lambda5779(Arg5777) {
  if (Arg5777.length < 0) return [Shen.type_func, shen_user_lambda5779, 0, Arg5777];
  return (Shen.globals["shen-*varcounter*"] = Shen.vector(1000))},
  0,
  [],
  "shen-toplevel-5778"];

Shen.call_toplevel("shen-toplevel-5778")






Shen.fns["shen-toplevel-5781"] = [Shen.type_func,
  function shen_user_lambda5782(Arg5780) {
  if (Arg5780.length < 0) return [Shen.type_func, shen_user_lambda5782, 0, Arg5780];
  return (Shen.globals["shen-*prologvectors*"] = Shen.vector(1000))},
  0,
  [],
  "shen-toplevel-5781"];

Shen.call_toplevel("shen-toplevel-5781")






Shen.fns["shen-toplevel-5784"] = [Shen.type_func,
  function shen_user_lambda5785(Arg5783) {
  if (Arg5783.length < 0) return [Shen.type_func, shen_user_lambda5785, 0, Arg5783];
  return (Shen.globals["shen-*reader-macros*"] = [])},
  0,
  [],
  "shen-toplevel-5784"];

Shen.call_toplevel("shen-toplevel-5784")






Shen.fns["shen-toplevel-5787"] = [Shen.type_func,
  function shen_user_lambda5788(Arg5786) {
  if (Arg5786.length < 0) return [Shen.type_func, shen_user_lambda5788, 0, Arg5786];
  return (Shen.globals["*printer*"] = [])},
  0,
  [],
  "shen-toplevel-5787"];

Shen.call_toplevel("shen-toplevel-5787")






Shen.fns["shen-toplevel-5790"] = [Shen.type_func,
  function shen_user_lambda5791(Arg5789) {
  if (Arg5789.length < 0) return [Shen.type_func, shen_user_lambda5791, 0, Arg5789];
  return (Shen.globals["*home-directory*"] = [])},
  0,
  [],
  "shen-toplevel-5790"];

Shen.call_toplevel("shen-toplevel-5790")






Shen.fns["shen-toplevel-5793"] = [Shen.type_func,
  function shen_user_lambda5794(Arg5792) {
  if (Arg5792.length < 0) return [Shen.type_func, shen_user_lambda5794, 0, Arg5792];
  return (Shen.globals["shen-*gensym*"] = 0)},
  0,
  [],
  "shen-toplevel-5793"];

Shen.call_toplevel("shen-toplevel-5793")






Shen.fns["shen-toplevel-5796"] = [Shen.type_func,
  function shen_user_lambda5797(Arg5795) {
  if (Arg5795.length < 0) return [Shen.type_func, shen_user_lambda5797, 0, Arg5795];
  return (Shen.globals["shen-*tracking*"] = [])},
  0,
  [],
  "shen-toplevel-5796"];

Shen.call_toplevel("shen-toplevel-5796")






Shen.fns["shen-toplevel-5799"] = [Shen.type_func,
  function shen_user_lambda5800(Arg5798) {
  if (Arg5798.length < 0) return [Shen.type_func, shen_user_lambda5800, 0, Arg5798];
  return (Shen.globals["*home-directory*"] = "")},
  0,
  [],
  "shen-toplevel-5799"];

Shen.call_toplevel("shen-toplevel-5799")






Shen.fns["shen-toplevel-5802"] = [Shen.type_func,
  function shen_user_lambda5803(Arg5801) {
  if (Arg5801.length < 0) return [Shen.type_func, shen_user_lambda5803, 0, Arg5801];
  return (Shen.globals["shen-*alphabet*"] = [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "C"], [Shen.type_cons, [Shen.type_symbol, "D"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_symbol, "F"], [Shen.type_cons, [Shen.type_symbol, "G"], [Shen.type_cons, [Shen.type_symbol, "H"], [Shen.type_cons, [Shen.type_symbol, "I"], [Shen.type_cons, [Shen.type_symbol, "J"], [Shen.type_cons, [Shen.type_symbol, "K"], [Shen.type_cons, [Shen.type_symbol, "L"], [Shen.type_cons, [Shen.type_symbol, "M"], [Shen.type_cons, [Shen.type_symbol, "N"], [Shen.type_cons, [Shen.type_symbol, "O"], [Shen.type_cons, [Shen.type_symbol, "P"], [Shen.type_cons, [Shen.type_symbol, "Q"], [Shen.type_cons, [Shen.type_symbol, "R"], [Shen.type_cons, [Shen.type_symbol, "S"], [Shen.type_cons, [Shen.type_symbol, "T"], [Shen.type_cons, [Shen.type_symbol, "U"], [Shen.type_cons, [Shen.type_symbol, "V"], [Shen.type_cons, [Shen.type_symbol, "W"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]]]]]]]]]]]]]]]]]]]]]]]]])},
  0,
  [],
  "shen-toplevel-5802"];

Shen.call_toplevel("shen-toplevel-5802")






Shen.fns["shen-toplevel-5805"] = [Shen.type_func,
  function shen_user_lambda5806(Arg5804) {
  if (Arg5804.length < 0) return [Shen.type_func, shen_user_lambda5806, 0, Arg5804];
  return (Shen.globals["shen-*special*"] = [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]]]]]]]]])},
  0,
  [],
  "shen-toplevel-5805"];

Shen.call_toplevel("shen-toplevel-5805")






Shen.fns["shen-toplevel-5808"] = [Shen.type_func,
  function shen_user_lambda5809(Arg5807) {
  if (Arg5807.length < 0) return [Shen.type_func, shen_user_lambda5809, 0, Arg5807];
  return (Shen.globals["shen-*extraspecial*"] = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "shen-process-datatype"], [Shen.type_cons, [Shen.type_symbol, "input+"], []]]])},
  0,
  [],
  "shen-toplevel-5808"];

Shen.call_toplevel("shen-toplevel-5808")






Shen.fns["shen-toplevel-5811"] = [Shen.type_func,
  function shen_user_lambda5812(Arg5810) {
  if (Arg5810.length < 0) return [Shen.type_func, shen_user_lambda5812, 0, Arg5810];
  return (Shen.globals["shen-*spy*"] = false)},
  0,
  [],
  "shen-toplevel-5811"];

Shen.call_toplevel("shen-toplevel-5811")






Shen.fns["shen-toplevel-5814"] = [Shen.type_func,
  function shen_user_lambda5815(Arg5813) {
  if (Arg5813.length < 0) return [Shen.type_func, shen_user_lambda5815, 0, Arg5813];
  return (Shen.globals["shen-*datatypes*"] = [])},
  0,
  [],
  "shen-toplevel-5814"];

Shen.call_toplevel("shen-toplevel-5814")






Shen.fns["shen-toplevel-5817"] = [Shen.type_func,
  function shen_user_lambda5818(Arg5816) {
  if (Arg5816.length < 0) return [Shen.type_func, shen_user_lambda5818, 0, Arg5816];
  return (Shen.globals["shen-*alldatatypes*"] = [])},
  0,
  [],
  "shen-toplevel-5817"];

Shen.call_toplevel("shen-toplevel-5817")






Shen.fns["shen-toplevel-5820"] = [Shen.type_func,
  function shen_user_lambda5821(Arg5819) {
  if (Arg5819.length < 0) return [Shen.type_func, shen_user_lambda5821, 0, Arg5819];
  return (Shen.globals["shen-*shen-type-theory-enabled?*"] = true)},
  0,
  [],
  "shen-toplevel-5820"];

Shen.call_toplevel("shen-toplevel-5820")






Shen.fns["shen-toplevel-5823"] = [Shen.type_func,
  function shen_user_lambda5824(Arg5822) {
  if (Arg5822.length < 0) return [Shen.type_func, shen_user_lambda5824, 0, Arg5822];
  return (Shen.globals["shen-*synonyms*"] = [])},
  0,
  [],
  "shen-toplevel-5823"];

Shen.call_toplevel("shen-toplevel-5823")






Shen.fns["shen-toplevel-5826"] = [Shen.type_func,
  function shen_user_lambda5827(Arg5825) {
  if (Arg5825.length < 0) return [Shen.type_func, shen_user_lambda5827, 0, Arg5825];
  return (Shen.globals["shen-*system*"] = [])},
  0,
  [],
  "shen-toplevel-5826"];

Shen.call_toplevel("shen-toplevel-5826")






Shen.fns["shen-toplevel-5829"] = [Shen.type_func,
  function shen_user_lambda5830(Arg5828) {
  if (Arg5828.length < 0) return [Shen.type_func, shen_user_lambda5830, 0, Arg5828];
  return (Shen.globals["shen-*signedfuncs*"] = [])},
  0,
  [],
  "shen-toplevel-5829"];

Shen.call_toplevel("shen-toplevel-5829")






Shen.fns["shen-toplevel-5832"] = [Shen.type_func,
  function shen_user_lambda5833(Arg5831) {
  if (Arg5831.length < 0) return [Shen.type_func, shen_user_lambda5833, 0, Arg5831];
  return (Shen.globals["shen-*maxcomplexity*"] = 128)},
  0,
  [],
  "shen-toplevel-5832"];

Shen.call_toplevel("shen-toplevel-5832")






Shen.fns["shen-toplevel-5835"] = [Shen.type_func,
  function shen_user_lambda5836(Arg5834) {
  if (Arg5834.length < 0) return [Shen.type_func, shen_user_lambda5836, 0, Arg5834];
  return (Shen.globals["shen-*occurs*"] = true)},
  0,
  [],
  "shen-toplevel-5835"];

Shen.call_toplevel("shen-toplevel-5835")






Shen.fns["shen-toplevel-5838"] = [Shen.type_func,
  function shen_user_lambda5839(Arg5837) {
  if (Arg5837.length < 0) return [Shen.type_func, shen_user_lambda5839, 0, Arg5837];
  return (Shen.globals["shen-*maxinferences*"] = 1000000)},
  0,
  [],
  "shen-toplevel-5838"];

Shen.call_toplevel("shen-toplevel-5838")






Shen.fns["shen-toplevel-5841"] = [Shen.type_func,
  function shen_user_lambda5842(Arg5840) {
  if (Arg5840.length < 0) return [Shen.type_func, shen_user_lambda5842, 0, Arg5840];
  return (Shen.globals["*maximum-print-sequence-size*"] = 20)},
  0,
  [],
  "shen-toplevel-5841"];

Shen.call_toplevel("shen-toplevel-5841")






Shen.fns["shen-toplevel-5844"] = [Shen.type_func,
  function shen_user_lambda5845(Arg5843) {
  if (Arg5843.length < 0) return [Shen.type_func, shen_user_lambda5845, 0, Arg5843];
  return (Shen.globals["shen-*catch*"] = 0)},
  0,
  [],
  "shen-toplevel-5844"];

Shen.call_toplevel("shen-toplevel-5844")






Shen.fns["shen-toplevel-5847"] = [Shen.type_func,
  function shen_user_lambda5848(Arg5846) {
  if (Arg5846.length < 0) return [Shen.type_func, shen_user_lambda5848, 0, Arg5846];
  return (Shen.globals["shen-*call*"] = 0)},
  0,
  [],
  "shen-toplevel-5847"];

Shen.call_toplevel("shen-toplevel-5847")






Shen.fns["shen-toplevel-5850"] = [Shen.type_func,
  function shen_user_lambda5851(Arg5849) {
  if (Arg5849.length < 0) return [Shen.type_func, shen_user_lambda5851, 0, Arg5849];
  return (Shen.globals["shen-*infs*"] = 0)},
  0,
  [],
  "shen-toplevel-5850"];

Shen.call_toplevel("shen-toplevel-5850")






Shen.fns["shen-toplevel-5853"] = [Shen.type_func,
  function shen_user_lambda5854(Arg5852) {
  if (Arg5852.length < 0) return [Shen.type_func, shen_user_lambda5854, 0, Arg5852];
  return (Shen.globals["shen-*process-counter*"] = 0)},
  0,
  [],
  "shen-toplevel-5853"];

Shen.call_toplevel("shen-toplevel-5853")






Shen.fns["shen-toplevel-5856"] = [Shen.type_func,
  function shen_user_lambda5857(Arg5855) {
  if (Arg5855.length < 0) return [Shen.type_func, shen_user_lambda5857, 0, Arg5855];
  return (Shen.globals["shen-*catch*"] = 0)},
  0,
  [],
  "shen-toplevel-5856"];

Shen.call_toplevel("shen-toplevel-5856")






Shen.fns["shen-initialise_arity_table"] = [Shen.type_func,
  function shen_user_lambda5859(Arg5858) {
  if (Arg5858.length < 1) return [Shen.type_func, shen_user_lambda5859, 1, Arg5858];
  var Arg5858_0 = Arg5858[0];
  return ((Shen.empty$question$(Arg5858_0))
  ? []
  : (((Shen.is_type(Arg5858_0, Shen.type_cons) && Shen.is_type(Arg5858_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["put"], [Arg5858_0[1], [Shen.type_symbol, "arity"], Arg5858_0[2][1], (Shen.globals["shen-*property-vector*"])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-initialise_arity_table"], [Arg5858_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-initialise_arity_table"]]);})))},
  1,
  [],
  "shen-initialise_arity_table"];






Shen.fns["arity"] = [Shen.type_func,
  function shen_user_lambda5861(Arg5860) {
  if (Arg5860.length < 1) return [Shen.type_func, shen_user_lambda5861, 1, Arg5860];
  var Arg5860_0 = Arg5860[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg5860_0, [Shen.type_symbol, "arity"], (Shen.globals["shen-*property-vector*"])]);}, [Shen.type_func,
  function shen_user_lambda5863(Arg5862) {
  if (Arg5862.length < 1) return [Shen.type_func, shen_user_lambda5863, 1, Arg5862];
  var Arg5862_0 = Arg5862[0];
  return -1},
  1,
  []]);})},
  1,
  [],
  "arity"];






Shen.fns["shen-toplevel-5865"] = [Shen.type_func,
  function shen_user_lambda5866(Arg5864) {
  if (Arg5864.length < 0) return [Shen.type_func, shen_user_lambda5866, 0, Arg5864];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-initialise_arity_table"], [[Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "shen-enable-type-theory"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "interror"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, 5, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "intoutput"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "make-string"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "intmake-string"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "output"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "shen-reassemble"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "shen-stoutput"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "strong-warning"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "shen-undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "shen-<1>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, 2, []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})},
  0,
  [],
  "shen-toplevel-5865"];

Shen.call_toplevel("shen-toplevel-5865")






Shen.fns["systemf"] = [Shen.type_func,
  function shen_user_lambda5868(Arg5867) {
  if (Arg5867.length < 1) return [Shen.type_func, shen_user_lambda5868, 1, Arg5867];
  var Arg5867_0 = Arg5867[0];
  return (Shen.globals["shen-*system*"] = Shen.call(Shen.fns["adjoin"], [Arg5867_0, (Shen.globals["shen-*system*"])]))},
  1,
  [],
  "systemf"];






Shen.fns["adjoin"] = [Shen.type_func,
  function shen_user_lambda5870(Arg5869) {
  if (Arg5869.length < 2) return [Shen.type_func, shen_user_lambda5870, 2, Arg5869];
  var Arg5869_0 = Arg5869[0], Arg5869_1 = Arg5869[1];
  return ((Shen.call(Shen.fns["element?"], [Arg5869_0, Arg5869_1]))
  ? Arg5869_1
  : [Shen.type_cons, Arg5869_0, Arg5869_1])},
  2,
  [],
  "adjoin"];






Shen.fns["shen-toplevel-5872"] = [Shen.type_func,
  function shen_user_lambda5873(Arg5871) {
  if (Arg5871.length < 0) return [Shen.type_func, shen_user_lambda5873, 0, Arg5871];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5875(Arg5874) {
  if (Arg5874.length < 1) return [Shen.type_func, shen_user_lambda5875, 1, Arg5874];
  var Arg5874_0 = Arg5874[0];
  return (Shen.call(Shen.fns["systemf"], [Arg5874_0]),
  Arg5874_0)},
  1,
  []], [Shen.type_cons, [Shen.type_symbol, "!"], [Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "<--"], [Shen.type_cons, [Shen.type_symbol, "&&"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "<!>"], [Shen.type_cons, [Shen.type_symbol, "-*-"], [Shen.type_cons, [Shen.type_symbol, "*language*"], [Shen.type_cons, [Shen.type_symbol, "*implementation*"], [Shen.type_cons, [Shen.type_symbol, "*stinput*"], [Shen.type_cons, [Shen.type_symbol, "*home-directory*"], [Shen.type_cons, [Shen.type_symbol, "*version*"], [Shen.type_cons, [Shen.type_symbol, "*maximum-print-sequence-size*"], [Shen.type_cons, [Shen.type_symbol, "*printer*"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_symbol, "*os*"], [Shen.type_cons, [Shen.type_symbol, "*release*"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, [Shen.type_symbol, "=!"], [Shen.type_cons, [Shen.type_symbol, "$"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, Shen.vector(0), [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "when"], [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "verified"], [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "unix"], [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_symbol, "shen-undefmacro"], [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, true, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "time"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "synonyms"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "shen-stoutput"], [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "save"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "run"], [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "quit"], [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "prolog?"], [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "output"], [Shen.type_cons, [Shen.type_symbol, "out"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_symbol, "macro"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_symbol, "make-string"], [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "loaded"], [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "format"], [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_symbol, "file"], [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, false, [Shen.type_cons, [Shen.type_symbol, "shen-enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "defprolog"], [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, [Shen.type_symbol, "datatype"], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "cond"], [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "cases"], [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "bar!"], [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "abort"], [Shen.type_cons, [Shen.type_symbol, "intmake-string"], [Shen.type_cons, [Shen.type_symbol, "intoutput"], [Shen.type_cons, [Shen.type_symbol, "interror"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})},
  0,
  [],
  "shen-toplevel-5872"];

Shen.call_toplevel("shen-toplevel-5872")






Shen.fns["specialise"] = [Shen.type_func,
  function shen_user_lambda5877(Arg5876) {
  if (Arg5876.length < 1) return [Shen.type_func, shen_user_lambda5877, 1, Arg5876];
  var Arg5876_0 = Arg5876[0];
  return ((Shen.globals["shen-*special*"] = [Shen.type_cons, Arg5876_0, (Shen.globals["shen-*special*"])]),
  Arg5876_0)},
  1,
  [],
  "specialise"];






Shen.fns["unspecialise"] = [Shen.type_func,
  function shen_user_lambda5879(Arg5878) {
  if (Arg5878.length < 1) return [Shen.type_func, shen_user_lambda5879, 1, Arg5878];
  var Arg5878_0 = Arg5878[0];
  return ((Shen.globals["shen-*special*"] = Shen.call(Shen.fns["remove"], [Arg5878_0, (Shen.globals["shen-*special*"])])),
  Arg5878_0)},
  1,
  [],
  "unspecialise"];












Shen.fns["load"] = [Shen.type_func,
  function shen_user_lambda5882(Arg5881) {
  if (Arg5881.length < 1) return [Shen.type_func, shen_user_lambda5882, 1, Arg5881];
  var Arg5881_0 = Arg5881[0];
  var R0, R1, R2;
  return (((R0 = Shen.get_time([Shen.type_symbol, "run"])),
  (R1 = Shen.call(Shen.fns["shen-load-help"], [(Shen.globals["shen-*tc*"]), Shen.call(Shen.fns["read-file"], [Arg5881_0])])),
  (R2 = Shen.get_time([Shen.type_symbol, "run"])),
  (R2 = (R2 - R0)),
  Shen.call(Shen.fns["intoutput"], ["~%run time: ~A secs~%", [Shen.fns['shen-tuple'], R2, []]]),
  R1),
  (((Shen.globals["shen-*tc*"]))
  ? Shen.call(Shen.fns["intoutput"], ["~%typechecked in ~A inferences~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["inferences"], [[Shen.type_symbol, "_"]]), []]])
  : [Shen.type_symbol, "shen-skip"]),
  [Shen.type_symbol, "loaded"])},
  1,
  [],
  "load"];






Shen.fns["shen-load-help"] = [Shen.type_func,
  function shen_user_lambda5884(Arg5883) {
  if (Arg5883.length < 2) return [Shen.type_func, shen_user_lambda5884, 2, Arg5883];
  var Arg5883_0 = Arg5883[0], Arg5883_1 = Arg5883[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5883_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5886(Arg5885) {
  if (Arg5885.length < 1) return [Shen.type_func, shen_user_lambda5886, 1, Arg5885];
  var Arg5885_0 = Arg5885[0];
  return (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["~S~%", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["shen-eval-without-macros"], [Arg5885_0]), []]]);})},
  1,
  []], Arg5883_1]);})
  : ((R0 = Shen.call(Shen.fns["mapcan"], [[Shen.type_func,
  function shen_user_lambda5888(Arg5887) {
  if (Arg5887.length < 1) return [Shen.type_func, shen_user_lambda5888, 1, Arg5887];
  var Arg5887_0 = Arg5887[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-remove-synonyms"], [Arg5887_0]);})},
  1,
  []], Arg5883_1])),
  (R1 = Shen.call(Shen.fns["mapcan"], [[Shen.type_func,
  function shen_user_lambda5890(Arg5889) {
  if (Arg5889.length < 1) return [Shen.type_func, shen_user_lambda5890, 1, Arg5889];
  var Arg5889_0 = Arg5889[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-typetable"], [Arg5889_0]);})},
  1,
  []], R0])),
  Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5892(Arg5891) {
  if (Arg5891.length < 1) return [Shen.type_func, shen_user_lambda5892, 1, Arg5891];
  var Arg5891_0 = Arg5891[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-assumetype"], [Arg5891_0]);})},
  1,
  []], R1]),
  (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5894(Arg5893) {
  if (Arg5893.length < 1) return [Shen.type_func, shen_user_lambda5894, 1, Arg5893];
  var Arg5893_0 = Arg5893[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-typecheck-and-load"], [Arg5893_0]);})},
  1,
  []], R0]);}, [Shen.type_func,
  function shen_user_lambda5896(Arg5895) {
  if (Arg5895.length < 2) return [Shen.type_func, shen_user_lambda5896, 2, Arg5895];
  var Arg5895_0 = Arg5895[0], Arg5895_1 = Arg5895[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-unwind-types"], [Arg5895_1, Arg5895_0]);})},
  2,
  [R1]]);})))},
  2,
  [],
  "shen-load-help"];






Shen.fns["shen-remove-synonyms"] = [Shen.type_func,
  function shen_user_lambda5898(Arg5897) {
  if (Arg5897.length < 1) return [Shen.type_func, shen_user_lambda5898, 1, Arg5897];
  var Arg5897_0 = Arg5897[0];
  return (((Shen.is_type(Arg5897_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-synonyms-help"], Arg5897_0[1]))))
  ? (Shen.call(Shen.fns["eval"], [Arg5897_0]),
  [])
  : [Shen.type_cons, Arg5897_0, []])},
  1,
  [],
  "shen-remove-synonyms"];






Shen.fns["shen-typecheck-and-load"] = [Shen.type_func,
  function shen_user_lambda5900(Arg5899) {
  if (Arg5899.length < 1) return [Shen.type_func, shen_user_lambda5900, 1, Arg5899];
  var Arg5899_0 = Arg5899[0];
  return (Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-typecheck-and-evaluate"], [Arg5899_0, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);}))},
  1,
  [],
  "shen-typecheck-and-load"];






Shen.fns["shen-typetable"] = [Shen.type_func,
  function shen_user_lambda5902(Arg5901) {
  if (Arg5901.length < 1) return [Shen.type_func, shen_user_lambda5902, 1, Arg5901];
  var Arg5901_0 = Arg5901[0];
  var R0;
  return (((Shen.is_type(Arg5901_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg5901_0[1])) && Shen.is_type(Arg5901_0[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func,
  function shen_user_lambda5904(Arg5903) {
  if (Arg5903.length < 1) return [Shen.type_func, shen_user_lambda5904, 1, Arg5903];
  var Arg5903_0 = Arg5903[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-<sig+rest>"], [Arg5903_0]);})},
  1,
  []], Arg5901_0[2][2], []])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["~A lacks a proper signature.~%", [Shen.fns['shen-tuple'], Arg5901_0[2][1], []]]);})
  : [Shen.type_cons, [Shen.type_cons, Arg5901_0[2][1], R0], []]))
  : [])},
  1,
  [],
  "shen-typetable"];






Shen.fns["shen-assumetype"] = [Shen.type_func,
  function shen_user_lambda5906(Arg5905) {
  if (Arg5905.length < 1) return [Shen.type_func, shen_user_lambda5906, 1, Arg5905];
  var Arg5905_0 = Arg5905[0];
  return ((Shen.is_type(Arg5905_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg5905_0[1], Arg5905_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-assumetype"]]);}))},
  1,
  [],
  "shen-assumetype"];






Shen.fns["shen-unwind-types"] = [Shen.type_func,
  function shen_user_lambda5908(Arg5907) {
  if (Arg5907.length < 2) return [Shen.type_func, shen_user_lambda5908, 2, Arg5907];
  var Arg5907_0 = Arg5907[0], Arg5907_1 = Arg5907[1];
  return ((Shen.empty$question$(Arg5907_1))
  ? (function() {
  return Shen.simple_error(Shen.error_to_string(Arg5907_0));})
  : (((Shen.is_type(Arg5907_1, Shen.type_cons) && Shen.is_type(Arg5907_1[1], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen-remtype"], [Arg5907_1[1][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-unwind-types"], [Arg5907_0, Arg5907_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-unwind-types"]]);})))},
  2,
  [],
  "shen-unwind-types"];






Shen.fns["shen-remtype"] = [Shen.type_func,
  function shen_user_lambda5910(Arg5909) {
  if (Arg5909.length < 1) return [Shen.type_func, shen_user_lambda5910, 1, Arg5909];
  var Arg5909_0 = Arg5909[0];
  return ((Shen.globals["shen-*signedfuncs*"] = Shen.call(Shen.fns["remove"], [Arg5909_0, (Shen.globals["shen-*signedfuncs*"])])),
  Arg5909_0)},
  1,
  [],
  "shen-remtype"];






Shen.fns["shen-<sig+rest>"] = [Shen.type_func,
  function shen_user_lambda5912(Arg5911) {
  if (Arg5911.length < 1) return [Shen.type_func, shen_user_lambda5912, 1, Arg5911];
  var Arg5911_0 = Arg5911[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<signature>"], [Arg5911_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<sig+rest>"];






Shen.fns["write-to-file"] = [Shen.type_func,
  function shen_user_lambda5914(Arg5913) {
  if (Arg5913.length < 2) return [Shen.type_func, shen_user_lambda5914, 2, Arg5913];
  var Arg5913_0 = Arg5913[0], Arg5913_1 = Arg5913[1];
  var R0, R1;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg5913_0, [Shen.type_symbol, "out"])),
  (((typeof(Arg5913_1) == 'string'))
  ? (R1 = Shen.call(Shen.fns["intmake-string"], ["~A~%~%", [Shen.fns['shen-tuple'], Arg5913_1, []]]))
  : (R1 = Shen.call(Shen.fns["intmake-string"], ["~S~%~%", [Shen.fns['shen-tuple'], Arg5913_1, []]]))),
  Shen.pr(R1, R0),
  Shen.close(R0),
  Arg5913_1)},
  2,
  [],
  "write-to-file"];












Shen.fns["macroexpand"] = [Shen.type_func,
  function shen_user_lambda5917(Arg5916) {
  if (Arg5916.length < 1) return [Shen.type_func, shen_user_lambda5917, 1, Arg5916];
  var Arg5916_0 = Arg5916[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-compose"], [(Shen.globals["*macros*"]), Arg5916_0]);})},
  1,
  [],
  "macroexpand"];






Shen.fns["macroexpand"] = [Shen.type_func,
  function shen_user_lambda5919(Arg5918) {
  if (Arg5918.length < 1) return [Shen.type_func, shen_user_lambda5919, 1, Arg5918];
  var Arg5918_0 = Arg5918[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-compose"], [(Shen.globals["*macros*"]), Arg5918_0])),
  ((Shen.unwind_tail(Shen.$eq$(Arg5918_0, R0)))
  ? Arg5918_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen-walk"], [[Shen.type_symbol, "macroexpand"], R0]);})))},
  1,
  [],
  "macroexpand"];






Shen.fns["shen-toplevel-5921"] = [Shen.type_func,
  function shen_user_lambda5922(Arg5920) {
  if (Arg5920.length < 0) return [Shen.type_func, shen_user_lambda5922, 0, Arg5920];
  return (Shen.globals["*macros*"] = [Shen.type_cons, [Shen.type_symbol, "shen-timer-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-cases-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-abs-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-put/get-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-compile-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-yacc-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-datatype-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-let-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-assoc-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-i/o-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-prolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-synonyms-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-nl-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-vector-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-@s-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-defmacro-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-defprolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen-function-macro"], []]]]]]]]]]]]]]]]]]])},
  0,
  [],
  "shen-toplevel-5921"];

Shen.call_toplevel("shen-toplevel-5921")






Shen.fns["shen-compose"] = [Shen.type_func,
  function shen_user_lambda5924(Arg5923) {
  if (Arg5923.length < 2) return [Shen.type_func, shen_user_lambda5924, 2, Arg5923];
  var Arg5923_0 = Arg5923[0], Arg5923_1 = Arg5923[1];
  return ((Shen.empty$question$(Arg5923_0))
  ? Arg5923_1
  : ((Shen.is_type(Arg5923_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-compose"], [Arg5923_0[2], Shen.call(Arg5923_0[1], [Arg5923_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-compose"]]);})))},
  2,
  [],
  "shen-compose"];






Shen.fns["shen-compile-macro"] = [Shen.type_func,
  function shen_user_lambda5926(Arg5925) {
  if (Arg5925.length < 1) return [Shen.type_func, shen_user_lambda5926, 1, Arg5925];
  var Arg5925_0 = Arg5925[0];
  return (((Shen.is_type(Arg5925_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "compile"], Arg5925_0[1])) && (Shen.is_type(Arg5925_0[2], Shen.type_cons) && (Shen.is_type(Arg5925_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5925_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, Arg5925_0[2][1], [Shen.type_cons, Arg5925_0[2][2][1], [Shen.type_cons, [], []]]]]
  : Arg5925_0)},
  1,
  [],
  "shen-compile-macro"];






Shen.fns["shen-prolog-macro"] = [Shen.type_func,
  function shen_user_lambda5928(Arg5927) {
  if (Arg5927.length < 1) return [Shen.type_func, shen_user_lambda5928, 1, Arg5927];
  var Arg5927_0 = Arg5927[0];
  return (((Shen.is_type(Arg5927_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "prolog?"], Arg5927_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-intprolog"], [Shen.type_cons, Shen.call(Shen.fns["shen-prolog-form"], [Arg5927_0[2]]), []]]
  : Arg5927_0)},
  1,
  [],
  "shen-prolog-macro"];






Shen.fns["shen-defprolog-macro"] = [Shen.type_func,
  function shen_user_lambda5930(Arg5929) {
  if (Arg5929.length < 1) return [Shen.type_func, shen_user_lambda5930, 1, Arg5929];
  var Arg5929_0 = Arg5929[0];
  return (((Shen.is_type(Arg5929_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defprolog"], Arg5929_0[1])) && Shen.is_type(Arg5929_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func,
  function shen_user_lambda5932(Arg5931) {
  if (Arg5931.length < 1) return [Shen.type_func, shen_user_lambda5932, 1, Arg5931];
  var Arg5931_0 = Arg5931[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-<defprolog>"], [Arg5931_0]);})},
  1,
  []], Arg5929_0[2], [Shen.type_func,
  function shen_user_lambda5934(Arg5933) {
  if (Arg5933.length < 2) return [Shen.type_func, shen_user_lambda5934, 2, Arg5933];
  var Arg5933_0 = Arg5933[0], Arg5933_1 = Arg5933[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-prolog-error"], [Arg5933_0[2][1], Arg5933_1]);})},
  2,
  [Arg5929_0]]]);})
  : Arg5929_0)},
  1,
  [],
  "shen-defprolog-macro"];






Shen.fns["shen-prolog-form"] = [Shen.type_func,
  function shen_user_lambda5936(Arg5935) {
  if (Arg5935.length < 1) return [Shen.type_func, shen_user_lambda5936, 1, Arg5935];
  var Arg5935_0 = Arg5935[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-cons_form"], [Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda5938(Arg5937) {
  if (Arg5937.length < 1) return [Shen.type_func, shen_user_lambda5938, 1, Arg5937];
  var Arg5937_0 = Arg5937[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-cons_form"], [Arg5937_0]);})},
  1,
  []], Arg5935_0])]);})},
  1,
  [],
  "shen-prolog-form"];






Shen.fns["shen-datatype-macro"] = [Shen.type_func,
  function shen_user_lambda5940(Arg5939) {
  if (Arg5939.length < 1) return [Shen.type_func, shen_user_lambda5940, 1, Arg5939];
  var Arg5939_0 = Arg5939[0];
  return (((Shen.is_type(Arg5939_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "datatype"], Arg5939_0[1])) && Shen.is_type(Arg5939_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-process-datatype"], [Shen.type_cons, Arg5939_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen-<datatype-rules>"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen-rcons_form"], [Arg5939_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen-datatype-error"], []]], []]]]], []]]]
  : Arg5939_0)},
  1,
  [],
  "shen-datatype-macro"];






Shen.fns["shen-defmacro-macro"] = [Shen.type_func,
  function shen_user_lambda5942(Arg5941) {
  if (Arg5941.length < 1) return [Shen.type_func, shen_user_lambda5942, 1, Arg5941];
  var Arg5941_0 = Arg5941[0];
  var R0, R1;
  return (((Shen.is_type(Arg5941_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], Arg5941_0[1])) && Shen.is_type(Arg5941_0[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen-<defmacro>"], Arg5941_0[2], []])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, Arg5941_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "macro"], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [], [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]]]),
  R1)
  : Arg5941_0)},
  1,
  [],
  "shen-defmacro-macro"];






Shen.fns["shen-defmacro-macro"] = [Shen.type_func,
  function shen_user_lambda5944(Arg5943) {
  if (Arg5943.length < 1) return [Shen.type_func, shen_user_lambda5944, 1, Arg5943];
  var Arg5943_0 = Arg5943[0];
  var R0, R1;
  return (((Shen.is_type(Arg5943_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], Arg5943_0[1])) && Shen.is_type(Arg5943_0[2], Shen.type_cons))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg5943_0[2][1], Shen.call(Shen.fns["append"], [Arg5943_0[2][2], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]])]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, Arg5943_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "macro"], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [], [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]]]),
  R1)
  : Arg5943_0)},
  1,
  [],
  "shen-defmacro-macro"];






Shen.fns["shen-<defmacro>"] = [Shen.type_func,
  function shen_user_lambda5946(Arg5945) {
  if (Arg5945.length < 1) return [Shen.type_func, shen_user_lambda5946, 1, Arg5945];
  var Arg5945_0 = Arg5945[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<name>"], [Arg5945_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<macrorules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<defmacro>"];






Shen.fns["shen-<macrorules>"] = [Shen.type_func,
  function shen_user_lambda5948(Arg5947) {
  if (Arg5947.length < 1) return [Shen.type_func, shen_user_lambda5948, 1, Arg5947];
  var Arg5947_0 = Arg5947[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<macrorule>"], [Arg5947_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<macrorules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<macrorule>"], [Arg5947_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<macrorules>"];






Shen.fns["shen-<macrorule>"] = [Shen.type_func,
  function shen_user_lambda5950(Arg5949) {
  if (Arg5949.length < 1) return [Shen.type_func, shen_user_lambda5950, 1, Arg5949];
  var Arg5949_0 = Arg5949[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen-<patterns>"], [Arg5949_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<macroaction>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R1]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Shen.call(Shen.fns["fst"], [R1])[1]))))
  ? ((R2 = Shen.call(Shen.fns["shen-<guard>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1])[2], Shen.call(Shen.fns["snd"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R2]), Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, [Shen.type_symbol, "->"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["snd"], [R1]), [Shen.type_cons, [Shen.type_symbol, "where"], Shen.call(Shen.fns["snd"], [R2])]])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<patterns>"], [Arg5949_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<macroaction>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, [Shen.type_symbol, "->"], Shen.call(Shen.fns["snd"], [R1])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<patterns>"], [Arg5949_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<macroaction>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R1]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Shen.call(Shen.fns["fst"], [R1])[1]))))
  ? ((R2 = Shen.call(Shen.fns["shen-<guard>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1])[2], Shen.call(Shen.fns["snd"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R2]), Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, [Shen.type_symbol, "<-"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["snd"], [R1]), [Shen.type_cons, [Shen.type_symbol, "where"], Shen.call(Shen.fns["snd"], [R2])]])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<patterns>"], [Arg5949_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(Shen.call(Shen.fns["fst"], [R0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], Shen.call(Shen.fns["fst"], [R0])[1]))))
  ? ((R1 = Shen.call(Shen.fns["shen-<macroaction>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0])[2], Shen.call(Shen.fns["snd"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["snd"], [R0]), [Shen.type_cons, [Shen.type_symbol, "<-"], Shen.call(Shen.fns["snd"], [R1])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))},
  1,
  [],
  "shen-<macrorule>"];






Shen.fns["shen-<macroaction>"] = [Shen.type_func,
  function shen_user_lambda5952(Arg5951) {
  if (Arg5951.length < 1) return [Shen.type_func, shen_user_lambda5952, 1, Arg5951];
  var Arg5951_0 = Arg5951[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-<action>"], [Arg5951_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-walk"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], []]], [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), []]]], []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<macroaction>"];






Shen.fns["shen-@s-macro"] = [Shen.type_func,
  function shen_user_lambda5954(Arg5953) {
  if (Arg5953.length < 1) return [Shen.type_func, shen_user_lambda5954, 1, Arg5953];
  var Arg5953_0 = Arg5953[0];
  var R0;
  return (((Shen.is_type(Arg5953_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg5953_0[1])) && (Shen.is_type(Arg5953_0[2], Shen.type_cons) && (Shen.is_type(Arg5953_0[2][2], Shen.type_cons) && Shen.is_type(Arg5953_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Arg5953_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Arg5953_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg5953_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg5953_0[1])) && (Shen.is_type(Arg5953_0[2], Shen.type_cons) && (Shen.is_type(Arg5953_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg5953_0[2][2][2]) && (typeof(Arg5953_0[2][1]) == 'string')))))))
  ? ((R0 = Shen.call(Shen.fns["explode"], [Arg5953_0[2][1]])),
  (((Shen.call(Shen.fns["length"], [R0]) > 1))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Shen.call(Shen.fns["append"], [R0, Arg5953_0[2][2]])]]);})
  : Arg5953_0))
  : Arg5953_0))},
  1,
  [],
  "shen-@s-macro"];






Shen.fns["shen-synonyms-macro"] = [Shen.type_func,
  function shen_user_lambda5956(Arg5955) {
  if (Arg5955.length < 1) return [Shen.type_func, shen_user_lambda5956, 1, Arg5955];
  var Arg5955_0 = Arg5955[0];
  return (((Shen.is_type(Arg5955_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "synonyms"], Arg5955_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-synonyms-help"], [Shen.type_cons, Shen.call(Shen.fns["shen-rcons_form"], [Arg5955_0[2]]), []]]
  : Arg5955_0)},
  1,
  [],
  "shen-synonyms-macro"];






Shen.fns["shen-nl-macro"] = [Shen.type_func,
  function shen_user_lambda5958(Arg5957) {
  if (Arg5957.length < 1) return [Shen.type_func, shen_user_lambda5958, 1, Arg5957];
  var Arg5957_0 = Arg5957[0];
  return (((Shen.is_type(Arg5957_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "nl"], Arg5957_0[1])) && Shen.empty$question$(Arg5957_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, 1, []]]
  : Arg5957_0)},
  1,
  [],
  "shen-nl-macro"];






Shen.fns["shen-vector-macro"] = [Shen.type_func,
  function shen_user_lambda5960(Arg5959) {
  if (Arg5959.length < 1) return [Shen.type_func, shen_user_lambda5960, 1, Arg5959];
  var Arg5959_0 = Arg5959[0];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.vector(0), Arg5959_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]
  : Arg5959_0)},
  1,
  [],
  "shen-vector-macro"];






Shen.fns["shen-yacc-macro"] = [Shen.type_func,
  function shen_user_lambda5962(Arg5961) {
  if (Arg5961.length < 1) return [Shen.type_func, shen_user_lambda5962, 1, Arg5961];
  var Arg5961_0 = Arg5961[0];
  return (((Shen.is_type(Arg5961_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg5961_0[1])) && Shen.is_type(Arg5961_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-yacc->shen"], [Arg5961_0[2][1], Arg5961_0[2][2], Shen.call(Shen.fns["shen-extract-segvars"], [Arg5961_0[2][2]])]);})
  : Arg5961_0)},
  1,
  [],
  "shen-yacc-macro"];






Shen.fns["shen-assoc-macro"] = [Shen.type_func,
  function shen_user_lambda5964(Arg5963) {
  if (Arg5963.length < 1) return [Shen.type_func, shen_user_lambda5964, 1, Arg5963];
  var Arg5963_0 = Arg5963[0];
  return (((Shen.is_type(Arg5963_0, Shen.type_cons) && (Shen.is_type(Arg5963_0[2], Shen.type_cons) && (Shen.is_type(Arg5963_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5963_0[2][2][2], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg5963_0[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "do"], []]]]]]]]]]))))))
  ? [Shen.type_cons, Arg5963_0[1], [Shen.type_cons, Arg5963_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-assoc-macro"], [[Shen.type_cons, Arg5963_0[1], Arg5963_0[2][2]]]), []]]]
  : Arg5963_0)},
  1,
  [],
  "shen-assoc-macro"];






Shen.fns["shen-let-macro"] = [Shen.type_func,
  function shen_user_lambda5966(Arg5965) {
  if (Arg5965.length < 1) return [Shen.type_func, shen_user_lambda5966, 1, Arg5965];
  var Arg5965_0 = Arg5965[0];
  return (((Shen.is_type(Arg5965_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg5965_0[1])) && (Shen.is_type(Arg5965_0[2], Shen.type_cons) && (Shen.is_type(Arg5965_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5965_0[2][2][2], Shen.type_cons) && Shen.is_type(Arg5965_0[2][2][2][2], Shen.type_cons)))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg5965_0[2][1], [Shen.type_cons, Arg5965_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], Arg5965_0[2][2][2]]]), []]]]]
  : Arg5965_0)},
  1,
  [],
  "shen-let-macro"];






Shen.fns["shen-abs-macro"] = [Shen.type_func,
  function shen_user_lambda5968(Arg5967) {
  if (Arg5967.length < 1) return [Shen.type_func, shen_user_lambda5968, 1, Arg5967];
  var Arg5967_0 = Arg5967[0];
  return (((Shen.is_type(Arg5967_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5967_0[1])) && (Shen.is_type(Arg5967_0[2], Shen.type_cons) && (Shen.is_type(Arg5967_0[2][2], Shen.type_cons) && Shen.is_type(Arg5967_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg5967_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-abs-macro"], [[Shen.type_cons, [Shen.type_symbol, "/."], Arg5967_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg5967_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5967_0[1])) && (Shen.is_type(Arg5967_0[2], Shen.type_cons) && (Shen.is_type(Arg5967_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5967_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], Arg5967_0[2]]
  : Arg5967_0))},
  1,
  [],
  "shen-abs-macro"];






Shen.fns["shen-cases-macro"] = [Shen.type_func,
  function shen_user_lambda5970(Arg5969) {
  if (Arg5969.length < 1) return [Shen.type_func, shen_user_lambda5970, 1, Arg5969];
  var Arg5969_0 = Arg5969[0];
  return (((Shen.is_type(Arg5969_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg5969_0[1])) && (Shen.is_type(Arg5969_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5969_0[2][1])) && Shen.is_type(Arg5969_0[2][2], Shen.type_cons))))))
  ? Arg5969_0[2][2][1]
  : (((Shen.is_type(Arg5969_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg5969_0[1])) && (Shen.is_type(Arg5969_0[2], Shen.type_cons) && (Shen.is_type(Arg5969_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5969_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg5969_0[2][1], [Shen.type_cons, Arg5969_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-i/o-macro"], [[Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "error: cases exhausted~%", []]]]), []]]]]
  : (((Shen.is_type(Arg5969_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg5969_0[1])) && (Shen.is_type(Arg5969_0[2], Shen.type_cons) && Shen.is_type(Arg5969_0[2][2], Shen.type_cons)))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg5969_0[2][1], [Shen.type_cons, Arg5969_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-cases-macro"], [[Shen.type_cons, [Shen.type_symbol, "cases"], Arg5969_0[2][2][2]]]), []]]]]
  : (((Shen.is_type(Arg5969_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg5969_0[1])) && (Shen.is_type(Arg5969_0[2], Shen.type_cons) && Shen.empty$question$(Arg5969_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["error: odd number of case elements~%", []]);})
  : Arg5969_0))))},
  1,
  [],
  "shen-cases-macro"];






Shen.fns["shen-timer-macro"] = [Shen.type_func,
  function shen_user_lambda5972(Arg5971) {
  if (Arg5971.length < 1) return [Shen.type_func, shen_user_lambda5972, 1, Arg5971];
  var Arg5971_0 = Arg5971[0];
  return (((Shen.is_type(Arg5971_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "time"], Arg5971_0[1])) && (Shen.is_type(Arg5971_0[2], Shen.type_cons) && Shen.empty$question$(Arg5971_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg5971_0[2][1], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Time"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_symbol, "Message"], [Shen.type_cons, Shen.call(Shen.fns["shen-i/o-macro"], [[Shen.type_cons, [Shen.type_symbol, "output"], [Shen.type_cons, "~%run time: ~A secs~%", [Shen.type_cons, [Shen.type_symbol, "Time"], []]]]]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]]]]]]]]]]]);})
  : Arg5971_0)},
  1,
  [],
  "shen-timer-macro"];






Shen.fns["shen-i/o-macro"] = [Shen.type_func,
  function shen_user_lambda5974(Arg5973) {
  if (Arg5973.length < 1) return [Shen.type_func, shen_user_lambda5974, 1, Arg5973];
  var Arg5973_0 = Arg5973[0];
  return (((Shen.is_type(Arg5973_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "output"], Arg5973_0[1])) && Shen.is_type(Arg5973_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "intoutput"], [Shen.type_cons, Arg5973_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-tuple-up"], [Arg5973_0[2][2]]), []]]]
  : (((Shen.is_type(Arg5973_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "make-string"], Arg5973_0[1])) && Shen.is_type(Arg5973_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "intmake-string"], [Shen.type_cons, Arg5973_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-tuple-up"], [Arg5973_0[2][2]]), []]]]
  : (((Shen.is_type(Arg5973_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "error"], Arg5973_0[1])) && Shen.is_type(Arg5973_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "interror"], [Shen.type_cons, Arg5973_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen-tuple-up"], [Arg5973_0[2][2]]), []]]]
  : (((Shen.is_type(Arg5973_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pr"], Arg5973_0[1])) && (Shen.is_type(Arg5973_0[2], Shen.type_cons) && Shen.empty$question$(Arg5973_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, Arg5973_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen-stoutput"], [Shen.type_cons, 0, []]], []]]]
  : (((Shen.is_type(Arg5973_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read-byte"], Arg5973_0[1])) && Shen.empty$question$(Arg5973_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, 0, []]], []]]
  : Arg5973_0)))))},
  1,
  [],
  "shen-i/o-macro"];






Shen.fns["shen-tuple-up"] = [Shen.type_func,
  function shen_user_lambda5976(Arg5975) {
  if (Arg5975.length < 1) return [Shen.type_func, shen_user_lambda5976, 1, Arg5975];
  var Arg5975_0 = Arg5975[0];
  return ((Shen.is_type(Arg5975_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Arg5975_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen-tuple-up"], [Arg5975_0[2]]), []]]]
  : Arg5975_0)},
  1,
  [],
  "shen-tuple-up"];






Shen.fns["shen-put/get-macro"] = [Shen.type_func,
  function shen_user_lambda5978(Arg5977) {
  if (Arg5977.length < 1) return [Shen.type_func, shen_user_lambda5978, 1, Arg5977];
  var Arg5977_0 = Arg5977[0];
  return (((Shen.is_type(Arg5977_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "put"], Arg5977_0[1])) && (Shen.is_type(Arg5977_0[2], Shen.type_cons) && (Shen.is_type(Arg5977_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5977_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5977_0[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, Arg5977_0[2][1], [Shen.type_cons, Arg5977_0[2][2][1], [Shen.type_cons, Arg5977_0[2][2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen-*property-vector*"], []]], []]]]]]
  : (((Shen.is_type(Arg5977_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "get"], Arg5977_0[1])) && (Shen.is_type(Arg5977_0[2], Shen.type_cons) && (Shen.is_type(Arg5977_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5977_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, Arg5977_0[2][1], [Shen.type_cons, Arg5977_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen-*property-vector*"], []]], []]]]]
  : Arg5977_0))},
  1,
  [],
  "shen-put/get-macro"];






Shen.fns["shen-function-macro"] = [Shen.type_func,
  function shen_user_lambda5980(Arg5979) {
  if (Arg5979.length < 1) return [Shen.type_func, shen_user_lambda5980, 1, Arg5979];
  var Arg5979_0 = Arg5979[0];
  return (((Shen.is_type(Arg5979_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg5979_0[1])) && (Shen.is_type(Arg5979_0[2], Shen.type_cons) && Shen.empty$question$(Arg5979_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-function-abstraction"], [Arg5979_0[2][1], Shen.call(Shen.fns["arity"], [Arg5979_0[2][1]])]);})
  : Arg5979_0)},
  1,
  [],
  "shen-function-macro"];






Shen.fns["shen-function-abstraction"] = [Shen.type_func,
  function shen_user_lambda5982(Arg5981) {
  if (Arg5981.length < 2) return [Shen.type_func, shen_user_lambda5982, 2, Arg5981];
  var Arg5981_0 = Arg5981[0], Arg5981_1 = Arg5981[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5981_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Arg5981_0, []]]
  : ((Shen.unwind_tail(Shen.$eq$(-1, Arg5981_1)))
  ? Arg5981_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen-function-abstraction-help"], [Arg5981_0, Arg5981_1, []]);})))},
  2,
  [],
  "shen-function-abstraction"];






Shen.fns["shen-function-abstraction-help"] = [Shen.type_func,
  function shen_user_lambda5984(Arg5983) {
  if (Arg5983.length < 3) return [Shen.type_func, shen_user_lambda5984, 3, Arg5983];
  var Arg5983_0 = Arg5983[0], Arg5983_1 = Arg5983[1], Arg5983_2 = Arg5983[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5983_1)))
  ? [Shen.type_cons, Arg5983_0, Arg5983_2]
  : ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["shen-function-abstraction-help"], [Arg5983_0, (Arg5983_1 - 1), Shen.call(Shen.fns["append"], [Arg5983_2, [Shen.type_cons, R0, []]])]), []]]]))},
  3,
  [],
  "shen-function-abstraction-help"];






Shen.fns["undefmacro"] = [Shen.type_func,
  function shen_user_lambda5986(Arg5985) {
  if (Arg5985.length < 1) return [Shen.type_func, shen_user_lambda5986, 1, Arg5985];
  var Arg5985_0 = Arg5985[0];
  return ((Shen.globals["*macros*"] = Shen.call(Shen.fns["remove"], [Arg5985_0, (Shen.globals["*macros*"])])),
  Arg5985_0)},
  1,
  [],
  "undefmacro"];












Shen.fns["declare"] = [Shen.type_func,
  function shen_user_lambda7532(Arg7531) {
  if (Arg7531.length < 2) return [Shen.type_func, shen_user_lambda7532, 2, Arg7531];
  var Arg7531_0 = Arg7531[0], Arg7531_1 = Arg7531[1];
  var R0, R1, R2;
  return ((Shen.globals["shen-*signedfuncs*"] = Shen.call(Shen.fns["adjoin"], [Arg7531_0, (Shen.globals["shen-*signedfuncs*"])])),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen-variancy-test"], [Arg7531_0, Arg7531_1]);}, [Shen.type_func,
  function shen_user_lambda7534(Arg7533) {
  if (Arg7533.length < 1) return [Shen.type_func, shen_user_lambda7534, 1, Arg7533];
  var Arg7533_0 = Arg7533[0];
  return [Shen.type_symbol, "shen-skip"]},
  1,
  []]),
  (R0 = Shen.call(Shen.fns["shen-rcons_form"], [Shen.call(Shen.fns["shen-normalise-type"], [Arg7531_1])])),
  (R1 = Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "shen-type-signature-of-"], Arg7531_0])),
  (R2 = Shen.call(Shen.fns["shen-parameters"], [1])),
  (R0 = [Shen.type_cons, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "X"], []]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, R0, []]]], []], []]]]),
  (R0 = Shen.call(Shen.fns["shen-aum"], [R0, R2])),
  (R0 = Shen.call(Shen.fns["shen-aum_to_shen"], [R0])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, R1, Shen.call(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  Shen.call(Shen.fns["shen-eval-without-macros"], [R2]),
  Arg7531_0)},
  2,
  [],
  "declare"];






Shen.fns["shen-normalise-type"] = [Shen.type_func,
  function shen_user_lambda7536(Arg7535) {
  if (Arg7535.length < 1) return [Shen.type_func, shen_user_lambda7536, 1, Arg7535];
  var Arg7535_0 = Arg7535[0];
  return (function() {
  return Shen.call_tail(Shen.fns["fix"], [[Shen.type_func,
  function shen_user_lambda7538(Arg7537) {
  if (Arg7537.length < 1) return [Shen.type_func, shen_user_lambda7538, 1, Arg7537];
  var Arg7537_0 = Arg7537[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-normalise-type-help"], [Arg7537_0]);})},
  1,
  []], Arg7535_0]);})},
  1,
  [],
  "shen-normalise-type"];






Shen.fns["shen-normalise-type-help"] = [Shen.type_func,
  function shen_user_lambda7540(Arg7539) {
  if (Arg7539.length < 1) return [Shen.type_func, shen_user_lambda7540, 1, Arg7539];
  var Arg7539_0 = Arg7539[0];
  return ((Shen.is_type(Arg7539_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-normalise-X"], [Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda7542(Arg7541) {
  if (Arg7541.length < 1) return [Shen.type_func, shen_user_lambda7542, 1, Arg7541];
  var Arg7541_0 = Arg7541[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-normalise-type-help"], [Arg7541_0]);})},
  1,
  []], Arg7539_0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-normalise-X"], [Arg7539_0]);}))},
  1,
  [],
  "shen-normalise-type-help"];






Shen.fns["shen-normalise-X"] = [Shen.type_func,
  function shen_user_lambda7544(Arg7543) {
  if (Arg7543.length < 1) return [Shen.type_func, shen_user_lambda7544, 1, Arg7543];
  var Arg7543_0 = Arg7543[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["assoc"], [Arg7543_0, (Shen.globals["shen-*synonyms*"])])),
  ((Shen.empty$question$(R0))
  ? Arg7543_0
  : R0[2]))},
  1,
  [],
  "shen-normalise-X"];






Shen.fns["shen-variancy-test"] = [Shen.type_func,
  function shen_user_lambda7546(Arg7545) {
  if (Arg7545.length < 2) return [Shen.type_func, shen_user_lambda7546, 2, Arg7545];
  var Arg7545_0 = Arg7545[0], Arg7545_1 = Arg7545[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-typecheck"], [Arg7545_0, [Shen.type_symbol, "B"]])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? [Shen.type_symbol, "shen-skip"]
  : ((Shen.call(Shen.fns["shen-variant?"], [R0, Arg7545_1]))
  ? [Shen.type_symbol, "shen-skip"]
  : Shen.call(Shen.fns["intoutput"], ["warning: changing the type of ~A may create errors~%", [Shen.fns['shen-tuple'], Arg7545_0, []]]))),
  [Shen.type_symbol, "shen-skip"])},
  2,
  [],
  "shen-variancy-test"];






Shen.fns["shen-variant?"] = [Shen.type_func,
  function shen_user_lambda7548(Arg7547) {
  if (Arg7547.length < 2) return [Shen.type_func, shen_user_lambda7548, 2, Arg7547];
  var Arg7547_0 = Arg7547[0], Arg7547_1 = Arg7547[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7547_1, Arg7547_0)))
  ? true
  : (((Shen.is_type(Arg7547_0, Shen.type_cons) && (Shen.is_type(Arg7547_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7547_1[1], Arg7547_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-variant?"], [Arg7547_0[2], Arg7547_1[2]]);})
  : (((Shen.is_type(Arg7547_0, Shen.type_cons) && (Shen.is_type(Arg7547_1, Shen.type_cons) && (Shen.call(Shen.fns["shen-pvar?"], [Arg7547_0[1]]) && Shen.call(Shen.fns["variable?"], [Arg7547_1[1]])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-variant?"], [Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen-a"], Arg7547_0[1], Arg7547_0[2]]), Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen-a"], Arg7547_1[1], Arg7547_1[2]])]);})
  : (((Shen.is_type(Arg7547_0, Shen.type_cons) && (Shen.is_type(Arg7547_0[1], Shen.type_cons) && (Shen.is_type(Arg7547_1, Shen.type_cons) && Shen.is_type(Arg7547_1[1], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-variant?"], [Shen.call(Shen.fns["append"], [Arg7547_0[1], Arg7547_0[2]]), Shen.call(Shen.fns["append"], [Arg7547_1[1], Arg7547_1[2]])]);})
  : false))))},
  2,
  [],
  "shen-variant?"];






Shen.fns["shen-toplevel-7550"] = [Shen.type_func,
  function shen_user_lambda7551(Arg7549) {
  if (Arg7549.length < 0) return [Shen.type_func, shen_user_lambda7551, 0, Arg7549];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7550"];

Shen.call_toplevel("shen-toplevel-7550")






Shen.fns["shen-toplevel-7553"] = [Shen.type_func,
  function shen_user_lambda7554(Arg7552) {
  if (Arg7552.length < 0) return [Shen.type_func, shen_user_lambda7554, 0, Arg7552];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7553"];

Shen.call_toplevel("shen-toplevel-7553")






Shen.fns["shen-toplevel-7556"] = [Shen.type_func,
  function shen_user_lambda7557(Arg7555) {
  if (Arg7555.length < 0) return [Shen.type_func, shen_user_lambda7557, 0, Arg7555];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7556"];

Shen.call_toplevel("shen-toplevel-7556")






Shen.fns["shen-toplevel-7559"] = [Shen.type_func,
  function shen_user_lambda7560(Arg7558) {
  if (Arg7558.length < 0) return [Shen.type_func, shen_user_lambda7560, 0, Arg7558];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7559"];

Shen.call_toplevel("shen-toplevel-7559")






Shen.fns["shen-toplevel-7562"] = [Shen.type_func,
  function shen_user_lambda7563(Arg7561) {
  if (Arg7561.length < 0) return [Shen.type_func, shen_user_lambda7563, 0, Arg7561];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7562"];

Shen.call_toplevel("shen-toplevel-7562")






Shen.fns["shen-toplevel-7565"] = [Shen.type_func,
  function shen_user_lambda7566(Arg7564) {
  if (Arg7564.length < 0) return [Shen.type_func, shen_user_lambda7566, 0, Arg7564];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7565"];

Shen.call_toplevel("shen-toplevel-7565")






Shen.fns["shen-toplevel-7568"] = [Shen.type_func,
  function shen_user_lambda7569(Arg7567) {
  if (Arg7567.length < 0) return [Shen.type_func, shen_user_lambda7569, 0, Arg7567];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7568"];

Shen.call_toplevel("shen-toplevel-7568")






Shen.fns["shen-toplevel-7571"] = [Shen.type_func,
  function shen_user_lambda7572(Arg7570) {
  if (Arg7570.length < 0) return [Shen.type_func, shen_user_lambda7572, 0, Arg7570];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7571"];

Shen.call_toplevel("shen-toplevel-7571")






Shen.fns["shen-toplevel-7574"] = [Shen.type_func,
  function shen_user_lambda7575(Arg7573) {
  if (Arg7573.length < 0) return [Shen.type_func, shen_user_lambda7575, 0, Arg7573];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7574"];

Shen.call_toplevel("shen-toplevel-7574")






Shen.fns["shen-toplevel-7577"] = [Shen.type_func,
  function shen_user_lambda7578(Arg7576) {
  if (Arg7576.length < 0) return [Shen.type_func, shen_user_lambda7578, 0, Arg7576];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7577"];

Shen.call_toplevel("shen-toplevel-7577")






Shen.fns["shen-toplevel-7580"] = [Shen.type_func,
  function shen_user_lambda7581(Arg7579) {
  if (Arg7579.length < 0) return [Shen.type_func, shen_user_lambda7581, 0, Arg7579];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7580"];

Shen.call_toplevel("shen-toplevel-7580")






Shen.fns["shen-toplevel-7583"] = [Shen.type_func,
  function shen_user_lambda7584(Arg7582) {
  if (Arg7582.length < 0) return [Shen.type_func, shen_user_lambda7584, 0, Arg7582];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "concat"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7583"];

Shen.call_toplevel("shen-toplevel-7583")






Shen.fns["shen-toplevel-7586"] = [Shen.type_func,
  function shen_user_lambda7587(Arg7585) {
  if (Arg7585.length < 0) return [Shen.type_func, shen_user_lambda7587, 0, Arg7585];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7586"];

Shen.call_toplevel("shen-toplevel-7586")






Shen.fns["shen-toplevel-7589"] = [Shen.type_func,
  function shen_user_lambda7590(Arg7588) {
  if (Arg7588.length < 0) return [Shen.type_func, shen_user_lambda7590, 0, Arg7588];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7589"];

Shen.call_toplevel("shen-toplevel-7589")






Shen.fns["shen-toplevel-7592"] = [Shen.type_func,
  function shen_user_lambda7593(Arg7591) {
  if (Arg7591.length < 0) return [Shen.type_func, shen_user_lambda7593, 0, Arg7591];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7592"];

Shen.call_toplevel("shen-toplevel-7592")






Shen.fns["shen-toplevel-7595"] = [Shen.type_func,
  function shen_user_lambda7596(Arg7594) {
  if (Arg7594.length < 0) return [Shen.type_func, shen_user_lambda7596, 0, Arg7594];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7595"];

Shen.call_toplevel("shen-toplevel-7595")






Shen.fns["shen-toplevel-7598"] = [Shen.type_func,
  function shen_user_lambda7599(Arg7597) {
  if (Arg7597.length < 0) return [Shen.type_func, shen_user_lambda7599, 0, Arg7597];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7598"];

Shen.call_toplevel("shen-toplevel-7598")






Shen.fns["shen-toplevel-7601"] = [Shen.type_func,
  function shen_user_lambda7602(Arg7600) {
  if (Arg7600.length < 0) return [Shen.type_func, shen_user_lambda7602, 0, Arg7600];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7601"];

Shen.call_toplevel("shen-toplevel-7601")






Shen.fns["shen-toplevel-7604"] = [Shen.type_func,
  function shen_user_lambda7605(Arg7603) {
  if (Arg7603.length < 0) return [Shen.type_func, shen_user_lambda7605, 0, Arg7603];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7604"];

Shen.call_toplevel("shen-toplevel-7604")






Shen.fns["shen-toplevel-7607"] = [Shen.type_func,
  function shen_user_lambda7608(Arg7606) {
  if (Arg7606.length < 0) return [Shen.type_func, shen_user_lambda7608, 0, Arg7606];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7607"];

Shen.call_toplevel("shen-toplevel-7607")






Shen.fns["shen-toplevel-7610"] = [Shen.type_func,
  function shen_user_lambda7611(Arg7609) {
  if (Arg7609.length < 0) return [Shen.type_func, shen_user_lambda7611, 0, Arg7609];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "interror"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7610"];

Shen.call_toplevel("shen-toplevel-7610")






Shen.fns["shen-toplevel-7613"] = [Shen.type_func,
  function shen_user_lambda7614(Arg7612) {
  if (Arg7612.length < 0) return [Shen.type_func, shen_user_lambda7614, 0, Arg7612];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7613"];

Shen.call_toplevel("shen-toplevel-7613")






Shen.fns["shen-toplevel-7616"] = [Shen.type_func,
  function shen_user_lambda7617(Arg7615) {
  if (Arg7615.length < 0) return [Shen.type_func, shen_user_lambda7617, 0, Arg7615];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "string"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7616"];

Shen.call_toplevel("shen-toplevel-7616")






Shen.fns["shen-toplevel-7619"] = [Shen.type_func,
  function shen_user_lambda7620(Arg7618) {
  if (Arg7618.length < 0) return [Shen.type_func, shen_user_lambda7620, 0, Arg7618];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7619"];

Shen.call_toplevel("shen-toplevel-7619")






Shen.fns["shen-toplevel-7622"] = [Shen.type_func,
  function shen_user_lambda7623(Arg7621) {
  if (Arg7621.length < 0) return [Shen.type_func, shen_user_lambda7623, 0, Arg7621];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7622"];

Shen.call_toplevel("shen-toplevel-7622")






Shen.fns["shen-toplevel-7625"] = [Shen.type_func,
  function shen_user_lambda7626(Arg7624) {
  if (Arg7624.length < 0) return [Shen.type_func, shen_user_lambda7626, 0, Arg7624];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "format"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7625"];

Shen.call_toplevel("shen-toplevel-7625")






Shen.fns["shen-toplevel-7628"] = [Shen.type_func,
  function shen_user_lambda7629(Arg7627) {
  if (Arg7627.length < 0) return [Shen.type_func, shen_user_lambda7629, 0, Arg7627];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7628"];

Shen.call_toplevel("shen-toplevel-7628")






Shen.fns["shen-toplevel-7631"] = [Shen.type_func,
  function shen_user_lambda7632(Arg7630) {
  if (Arg7630.length < 0) return [Shen.type_func, shen_user_lambda7632, 0, Arg7630];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7631"];

Shen.call_toplevel("shen-toplevel-7631")






Shen.fns["shen-toplevel-7634"] = [Shen.type_func,
  function shen_user_lambda7635(Arg7633) {
  if (Arg7633.length < 0) return [Shen.type_func, shen_user_lambda7635, 0, Arg7633];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7634"];

Shen.call_toplevel("shen-toplevel-7634")






Shen.fns["shen-toplevel-7637"] = [Shen.type_func,
  function shen_user_lambda7638(Arg7636) {
  if (Arg7636.length < 0) return [Shen.type_func, shen_user_lambda7638, 0, Arg7636];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7637"];

Shen.call_toplevel("shen-toplevel-7637")






Shen.fns["shen-toplevel-7640"] = [Shen.type_func,
  function shen_user_lambda7641(Arg7639) {
  if (Arg7639.length < 0) return [Shen.type_func, shen_user_lambda7641, 0, Arg7639];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7640"];

Shen.call_toplevel("shen-toplevel-7640")






Shen.fns["shen-toplevel-7643"] = [Shen.type_func,
  function shen_user_lambda7644(Arg7642) {
  if (Arg7642.length < 0) return [Shen.type_func, shen_user_lambda7644, 0, Arg7642];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7643"];

Shen.call_toplevel("shen-toplevel-7643")






Shen.fns["shen-toplevel-7646"] = [Shen.type_func,
  function shen_user_lambda7647(Arg7645) {
  if (Arg7645.length < 0) return [Shen.type_func, shen_user_lambda7647, 0, Arg7645];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7646"];

Shen.call_toplevel("shen-toplevel-7646")






Shen.fns["shen-toplevel-7649"] = [Shen.type_func,
  function shen_user_lambda7650(Arg7648) {
  if (Arg7648.length < 0) return [Shen.type_func, shen_user_lambda7650, 0, Arg7648];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7649"];

Shen.call_toplevel("shen-toplevel-7649")






Shen.fns["shen-toplevel-7652"] = [Shen.type_func,
  function shen_user_lambda7653(Arg7651) {
  if (Arg7651.length < 0) return [Shen.type_func, shen_user_lambda7653, 0, Arg7651];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7652"];

Shen.call_toplevel("shen-toplevel-7652")






Shen.fns["shen-toplevel-7655"] = [Shen.type_func,
  function shen_user_lambda7656(Arg7654) {
  if (Arg7654.length < 0) return [Shen.type_func, shen_user_lambda7656, 0, Arg7654];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7655"];

Shen.call_toplevel("shen-toplevel-7655")






Shen.fns["shen-toplevel-7658"] = [Shen.type_func,
  function shen_user_lambda7659(Arg7657) {
  if (Arg7657.length < 0) return [Shen.type_func, shen_user_lambda7659, 0, Arg7657];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7658"];

Shen.call_toplevel("shen-toplevel-7658")






Shen.fns["shen-toplevel-7661"] = [Shen.type_func,
  function shen_user_lambda7662(Arg7660) {
  if (Arg7660.length < 0) return [Shen.type_func, shen_user_lambda7662, 0, Arg7660];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7661"];

Shen.call_toplevel("shen-toplevel-7661")






Shen.fns["shen-toplevel-7664"] = [Shen.type_func,
  function shen_user_lambda7665(Arg7663) {
  if (Arg7663.length < 0) return [Shen.type_func, shen_user_lambda7665, 0, Arg7663];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7664"];

Shen.call_toplevel("shen-toplevel-7664")






Shen.fns["shen-toplevel-7667"] = [Shen.type_func,
  function shen_user_lambda7668(Arg7666) {
  if (Arg7666.length < 0) return [Shen.type_func, shen_user_lambda7668, 0, Arg7666];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7667"];

Shen.call_toplevel("shen-toplevel-7667")






Shen.fns["shen-toplevel-7670"] = [Shen.type_func,
  function shen_user_lambda7671(Arg7669) {
  if (Arg7669.length < 0) return [Shen.type_func, shen_user_lambda7671, 0, Arg7669];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7670"];

Shen.call_toplevel("shen-toplevel-7670")






Shen.fns["shen-toplevel-7673"] = [Shen.type_func,
  function shen_user_lambda7674(Arg7672) {
  if (Arg7672.length < 0) return [Shen.type_func, shen_user_lambda7674, 0, Arg7672];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7673"];

Shen.call_toplevel("shen-toplevel-7673")






Shen.fns["shen-toplevel-7676"] = [Shen.type_func,
  function shen_user_lambda7677(Arg7675) {
  if (Arg7675.length < 0) return [Shen.type_func, shen_user_lambda7677, 0, Arg7675];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7676"];

Shen.call_toplevel("shen-toplevel-7676")






Shen.fns["shen-toplevel-7679"] = [Shen.type_func,
  function shen_user_lambda7680(Arg7678) {
  if (Arg7678.length < 0) return [Shen.type_func, shen_user_lambda7680, 0, Arg7678];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7679"];

Shen.call_toplevel("shen-toplevel-7679")






Shen.fns["shen-toplevel-7682"] = [Shen.type_func,
  function shen_user_lambda7683(Arg7681) {
  if (Arg7681.length < 0) return [Shen.type_func, shen_user_lambda7683, 0, Arg7681];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7682"];

Shen.call_toplevel("shen-toplevel-7682")






Shen.fns["shen-toplevel-7685"] = [Shen.type_func,
  function shen_user_lambda7686(Arg7684) {
  if (Arg7684.length < 0) return [Shen.type_func, shen_user_lambda7686, 0, Arg7684];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7685"];

Shen.call_toplevel("shen-toplevel-7685")






Shen.fns["shen-toplevel-7688"] = [Shen.type_func,
  function shen_user_lambda7689(Arg7687) {
  if (Arg7687.length < 0) return [Shen.type_func, shen_user_lambda7689, 0, Arg7687];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "intmake-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7688"];

Shen.call_toplevel("shen-toplevel-7688")






Shen.fns["shen-toplevel-7691"] = [Shen.type_func,
  function shen_user_lambda7692(Arg7690) {
  if (Arg7690.length < 0) return [Shen.type_func, shen_user_lambda7692, 0, Arg7690];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7691"];

Shen.call_toplevel("shen-toplevel-7691")






Shen.fns["shen-toplevel-7694"] = [Shen.type_func,
  function shen_user_lambda7695(Arg7693) {
  if (Arg7693.length < 0) return [Shen.type_func, shen_user_lambda7695, 0, Arg7693];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7694"];

Shen.call_toplevel("shen-toplevel-7694")






Shen.fns["shen-toplevel-7697"] = [Shen.type_func,
  function shen_user_lambda7698(Arg7696) {
  if (Arg7696.length < 0) return [Shen.type_func, shen_user_lambda7698, 0, Arg7696];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7697"];

Shen.call_toplevel("shen-toplevel-7697")






Shen.fns["shen-toplevel-7700"] = [Shen.type_func,
  function shen_user_lambda7701(Arg7699) {
  if (Arg7699.length < 0) return [Shen.type_func, shen_user_lambda7701, 0, Arg7699];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7700"];

Shen.call_toplevel("shen-toplevel-7700")






Shen.fns["shen-toplevel-7703"] = [Shen.type_func,
  function shen_user_lambda7704(Arg7702) {
  if (Arg7702.length < 0) return [Shen.type_func, shen_user_lambda7704, 0, Arg7702];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7703"];

Shen.call_toplevel("shen-toplevel-7703")






Shen.fns["shen-toplevel-7706"] = [Shen.type_func,
  function shen_user_lambda7707(Arg7705) {
  if (Arg7705.length < 0) return [Shen.type_func, shen_user_lambda7707, 0, Arg7705];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7706"];

Shen.call_toplevel("shen-toplevel-7706")






Shen.fns["shen-toplevel-7709"] = [Shen.type_func,
  function shen_user_lambda7710(Arg7708) {
  if (Arg7708.length < 0) return [Shen.type_func, shen_user_lambda7710, 0, Arg7708];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7709"];

Shen.call_toplevel("shen-toplevel-7709")






Shen.fns["shen-toplevel-7712"] = [Shen.type_func,
  function shen_user_lambda7713(Arg7711) {
  if (Arg7711.length < 0) return [Shen.type_func, shen_user_lambda7713, 0, Arg7711];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7712"];

Shen.call_toplevel("shen-toplevel-7712")






Shen.fns["shen-toplevel-7715"] = [Shen.type_func,
  function shen_user_lambda7716(Arg7714) {
  if (Arg7714.length < 0) return [Shen.type_func, shen_user_lambda7716, 0, Arg7714];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7715"];

Shen.call_toplevel("shen-toplevel-7715")






Shen.fns["shen-toplevel-7718"] = [Shen.type_func,
  function shen_user_lambda7719(Arg7717) {
  if (Arg7717.length < 0) return [Shen.type_func, shen_user_lambda7719, 0, Arg7717];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7718"];

Shen.call_toplevel("shen-toplevel-7718")






Shen.fns["shen-toplevel-7721"] = [Shen.type_func,
  function shen_user_lambda7722(Arg7720) {
  if (Arg7720.length < 0) return [Shen.type_func, shen_user_lambda7722, 0, Arg7720];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7721"];

Shen.call_toplevel("shen-toplevel-7721")






Shen.fns["shen-toplevel-7724"] = [Shen.type_func,
  function shen_user_lambda7725(Arg7723) {
  if (Arg7723.length < 0) return [Shen.type_func, shen_user_lambda7725, 0, Arg7723];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "intoutput"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7724"];

Shen.call_toplevel("shen-toplevel-7724")






Shen.fns["shen-toplevel-7727"] = [Shen.type_func,
  function shen_user_lambda7728(Arg7726) {
  if (Arg7726.length < 0) return [Shen.type_func, shen_user_lambda7728, 0, Arg7726];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7727"];

Shen.call_toplevel("shen-toplevel-7727")






Shen.fns["shen-toplevel-7730"] = [Shen.type_func,
  function shen_user_lambda7731(Arg7729) {
  if (Arg7729.length < 0) return [Shen.type_func, shen_user_lambda7731, 0, Arg7729];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7730"];

Shen.call_toplevel("shen-toplevel-7730")






Shen.fns["shen-toplevel-7733"] = [Shen.type_func,
  function shen_user_lambda7734(Arg7732) {
  if (Arg7732.length < 0) return [Shen.type_func, shen_user_lambda7734, 0, Arg7732];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7733"];

Shen.call_toplevel("shen-toplevel-7733")






Shen.fns["shen-toplevel-7736"] = [Shen.type_func,
  function shen_user_lambda7737(Arg7735) {
  if (Arg7735.length < 0) return [Shen.type_func, shen_user_lambda7737, 0, Arg7735];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7736"];

Shen.call_toplevel("shen-toplevel-7736")






Shen.fns["shen-toplevel-7739"] = [Shen.type_func,
  function shen_user_lambda7740(Arg7738) {
  if (Arg7738.length < 0) return [Shen.type_func, shen_user_lambda7740, 0, Arg7738];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7739"];

Shen.call_toplevel("shen-toplevel-7739")






Shen.fns["shen-toplevel-7742"] = [Shen.type_func,
  function shen_user_lambda7743(Arg7741) {
  if (Arg7741.length < 0) return [Shen.type_func, shen_user_lambda7743, 0, Arg7741];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7742"];

Shen.call_toplevel("shen-toplevel-7742")






Shen.fns["shen-toplevel-7745"] = [Shen.type_func,
  function shen_user_lambda7746(Arg7744) {
  if (Arg7744.length < 0) return [Shen.type_func, shen_user_lambda7746, 0, Arg7744];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7745"];

Shen.call_toplevel("shen-toplevel-7745")






Shen.fns["shen-toplevel-7748"] = [Shen.type_func,
  function shen_user_lambda7749(Arg7747) {
  if (Arg7747.length < 0) return [Shen.type_func, shen_user_lambda7749, 0, Arg7747];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7748"];

Shen.call_toplevel("shen-toplevel-7748")






Shen.fns["shen-toplevel-7751"] = [Shen.type_func,
  function shen_user_lambda7752(Arg7750) {
  if (Arg7750.length < 0) return [Shen.type_func, shen_user_lambda7752, 0, Arg7750];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7751"];

Shen.call_toplevel("shen-toplevel-7751")






Shen.fns["shen-toplevel-7754"] = [Shen.type_func,
  function shen_user_lambda7755(Arg7753) {
  if (Arg7753.length < 0) return [Shen.type_func, shen_user_lambda7755, 0, Arg7753];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7754"];

Shen.call_toplevel("shen-toplevel-7754")






Shen.fns["shen-toplevel-7757"] = [Shen.type_func,
  function shen_user_lambda7758(Arg7756) {
  if (Arg7756.length < 0) return [Shen.type_func, shen_user_lambda7758, 0, Arg7756];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7757"];

Shen.call_toplevel("shen-toplevel-7757")






Shen.fns["shen-toplevel-7760"] = [Shen.type_func,
  function shen_user_lambda7761(Arg7759) {
  if (Arg7759.length < 0) return [Shen.type_func, shen_user_lambda7761, 0, Arg7759];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7760"];

Shen.call_toplevel("shen-toplevel-7760")






Shen.fns["shen-toplevel-7763"] = [Shen.type_func,
  function shen_user_lambda7764(Arg7762) {
  if (Arg7762.length < 0) return [Shen.type_func, shen_user_lambda7764, 0, Arg7762];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7763"];

Shen.call_toplevel("shen-toplevel-7763")






Shen.fns["shen-toplevel-7766"] = [Shen.type_func,
  function shen_user_lambda7767(Arg7765) {
  if (Arg7765.length < 0) return [Shen.type_func, shen_user_lambda7767, 0, Arg7765];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7766"];

Shen.call_toplevel("shen-toplevel-7766")






Shen.fns["shen-toplevel-7769"] = [Shen.type_func,
  function shen_user_lambda7770(Arg7768) {
  if (Arg7768.length < 0) return [Shen.type_func, shen_user_lambda7770, 0, Arg7768];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7769"];

Shen.call_toplevel("shen-toplevel-7769")






Shen.fns["shen-toplevel-7772"] = [Shen.type_func,
  function shen_user_lambda7773(Arg7771) {
  if (Arg7771.length < 0) return [Shen.type_func, shen_user_lambda7773, 0, Arg7771];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7772"];

Shen.call_toplevel("shen-toplevel-7772")






Shen.fns["shen-toplevel-7775"] = [Shen.type_func,
  function shen_user_lambda7776(Arg7774) {
  if (Arg7774.length < 0) return [Shen.type_func, shen_user_lambda7776, 0, Arg7774];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7775"];

Shen.call_toplevel("shen-toplevel-7775")






Shen.fns["shen-toplevel-7778"] = [Shen.type_func,
  function shen_user_lambda7779(Arg7777) {
  if (Arg7777.length < 0) return [Shen.type_func, shen_user_lambda7779, 0, Arg7777];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7778"];

Shen.call_toplevel("shen-toplevel-7778")






Shen.fns["shen-toplevel-7781"] = [Shen.type_func,
  function shen_user_lambda7782(Arg7780) {
  if (Arg7780.length < 0) return [Shen.type_func, shen_user_lambda7782, 0, Arg7780];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7781"];

Shen.call_toplevel("shen-toplevel-7781")






Shen.fns["shen-toplevel-7784"] = [Shen.type_func,
  function shen_user_lambda7785(Arg7783) {
  if (Arg7783.length < 0) return [Shen.type_func, shen_user_lambda7785, 0, Arg7783];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7784"];

Shen.call_toplevel("shen-toplevel-7784")






Shen.fns["shen-toplevel-7787"] = [Shen.type_func,
  function shen_user_lambda7788(Arg7786) {
  if (Arg7786.length < 0) return [Shen.type_func, shen_user_lambda7788, 0, Arg7786];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen-stoutput"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7787"];

Shen.call_toplevel("shen-toplevel-7787")






Shen.fns["shen-toplevel-7790"] = [Shen.type_func,
  function shen_user_lambda7791(Arg7789) {
  if (Arg7789.length < 0) return [Shen.type_func, shen_user_lambda7791, 0, Arg7789];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7790"];

Shen.call_toplevel("shen-toplevel-7790")






Shen.fns["shen-toplevel-7793"] = [Shen.type_func,
  function shen_user_lambda7794(Arg7792) {
  if (Arg7792.length < 0) return [Shen.type_func, shen_user_lambda7794, 0, Arg7792];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "sum"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7793"];

Shen.call_toplevel("shen-toplevel-7793")






Shen.fns["shen-toplevel-7796"] = [Shen.type_func,
  function shen_user_lambda7797(Arg7795) {
  if (Arg7795.length < 0) return [Shen.type_func, shen_user_lambda7797, 0, Arg7795];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7796"];

Shen.call_toplevel("shen-toplevel-7796")






Shen.fns["shen-toplevel-7799"] = [Shen.type_func,
  function shen_user_lambda7800(Arg7798) {
  if (Arg7798.length < 0) return [Shen.type_func, shen_user_lambda7800, 0, Arg7798];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7799"];

Shen.call_toplevel("shen-toplevel-7799")






Shen.fns["shen-toplevel-7802"] = [Shen.type_func,
  function shen_user_lambda7803(Arg7801) {
  if (Arg7801.length < 0) return [Shen.type_func, shen_user_lambda7803, 0, Arg7801];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7802"];

Shen.call_toplevel("shen-toplevel-7802")






Shen.fns["shen-toplevel-7805"] = [Shen.type_func,
  function shen_user_lambda7806(Arg7804) {
  if (Arg7804.length < 0) return [Shen.type_func, shen_user_lambda7806, 0, Arg7804];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7805"];

Shen.call_toplevel("shen-toplevel-7805")






Shen.fns["shen-toplevel-7808"] = [Shen.type_func,
  function shen_user_lambda7809(Arg7807) {
  if (Arg7807.length < 0) return [Shen.type_func, shen_user_lambda7809, 0, Arg7807];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7808"];

Shen.call_toplevel("shen-toplevel-7808")






Shen.fns["shen-toplevel-7811"] = [Shen.type_func,
  function shen_user_lambda7812(Arg7810) {
  if (Arg7810.length < 0) return [Shen.type_func, shen_user_lambda7812, 0, Arg7810];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7811"];

Shen.call_toplevel("shen-toplevel-7811")






Shen.fns["shen-toplevel-7814"] = [Shen.type_func,
  function shen_user_lambda7815(Arg7813) {
  if (Arg7813.length < 0) return [Shen.type_func, shen_user_lambda7815, 0, Arg7813];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7814"];

Shen.call_toplevel("shen-toplevel-7814")






Shen.fns["shen-toplevel-7817"] = [Shen.type_func,
  function shen_user_lambda7818(Arg7816) {
  if (Arg7816.length < 0) return [Shen.type_func, shen_user_lambda7818, 0, Arg7816];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7817"];

Shen.call_toplevel("shen-toplevel-7817")






Shen.fns["shen-toplevel-7820"] = [Shen.type_func,
  function shen_user_lambda7821(Arg7819) {
  if (Arg7819.length < 0) return [Shen.type_func, shen_user_lambda7821, 0, Arg7819];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7820"];

Shen.call_toplevel("shen-toplevel-7820")






Shen.fns["shen-toplevel-7823"] = [Shen.type_func,
  function shen_user_lambda7824(Arg7822) {
  if (Arg7822.length < 0) return [Shen.type_func, shen_user_lambda7824, 0, Arg7822];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7823"];

Shen.call_toplevel("shen-toplevel-7823")






Shen.fns["shen-toplevel-7826"] = [Shen.type_func,
  function shen_user_lambda7827(Arg7825) {
  if (Arg7825.length < 0) return [Shen.type_func, shen_user_lambda7827, 0, Arg7825];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7826"];

Shen.call_toplevel("shen-toplevel-7826")






Shen.fns["shen-toplevel-7829"] = [Shen.type_func,
  function shen_user_lambda7830(Arg7828) {
  if (Arg7828.length < 0) return [Shen.type_func, shen_user_lambda7830, 0, Arg7828];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7829"];

Shen.call_toplevel("shen-toplevel-7829")






Shen.fns["shen-toplevel-7832"] = [Shen.type_func,
  function shen_user_lambda7833(Arg7831) {
  if (Arg7831.length < 0) return [Shen.type_func, shen_user_lambda7833, 0, Arg7831];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tuple?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7832"];

Shen.call_toplevel("shen-toplevel-7832")






Shen.fns["shen-toplevel-7835"] = [Shen.type_func,
  function shen_user_lambda7836(Arg7834) {
  if (Arg7834.length < 0) return [Shen.type_func, shen_user_lambda7836, 0, Arg7834];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7835"];

Shen.call_toplevel("shen-toplevel-7835")






Shen.fns["shen-toplevel-7838"] = [Shen.type_func,
  function shen_user_lambda7839(Arg7837) {
  if (Arg7837.length < 0) return [Shen.type_func, shen_user_lambda7839, 0, Arg7837];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7838"];

Shen.call_toplevel("shen-toplevel-7838")






Shen.fns["shen-toplevel-7841"] = [Shen.type_func,
  function shen_user_lambda7842(Arg7840) {
  if (Arg7840.length < 0) return [Shen.type_func, shen_user_lambda7842, 0, Arg7840];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7841"];

Shen.call_toplevel("shen-toplevel-7841")






Shen.fns["shen-toplevel-7844"] = [Shen.type_func,
  function shen_user_lambda7845(Arg7843) {
  if (Arg7843.length < 0) return [Shen.type_func, shen_user_lambda7845, 0, Arg7843];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7844"];

Shen.call_toplevel("shen-toplevel-7844")






Shen.fns["shen-toplevel-7847"] = [Shen.type_func,
  function shen_user_lambda7848(Arg7846) {
  if (Arg7846.length < 0) return [Shen.type_func, shen_user_lambda7848, 0, Arg7846];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7847"];

Shen.call_toplevel("shen-toplevel-7847")






Shen.fns["shen-toplevel-7850"] = [Shen.type_func,
  function shen_user_lambda7851(Arg7849) {
  if (Arg7849.length < 0) return [Shen.type_func, shen_user_lambda7851, 0, Arg7849];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7850"];

Shen.call_toplevel("shen-toplevel-7850")






Shen.fns["shen-toplevel-7853"] = [Shen.type_func,
  function shen_user_lambda7854(Arg7852) {
  if (Arg7852.length < 0) return [Shen.type_func, shen_user_lambda7854, 0, Arg7852];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7853"];

Shen.call_toplevel("shen-toplevel-7853")






Shen.fns["shen-toplevel-7856"] = [Shen.type_func,
  function shen_user_lambda7857(Arg7855) {
  if (Arg7855.length < 0) return [Shen.type_func, shen_user_lambda7857, 0, Arg7855];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7856"];

Shen.call_toplevel("shen-toplevel-7856")






Shen.fns["shen-toplevel-7859"] = [Shen.type_func,
  function shen_user_lambda7860(Arg7858) {
  if (Arg7858.length < 0) return [Shen.type_func, shen_user_lambda7860, 0, Arg7858];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})},
  0,
  [],
  "shen-toplevel-7859"];

Shen.call_toplevel("shen-toplevel-7859")






Shen.fns["shen-toplevel-7862"] = [Shen.type_func,
  function shen_user_lambda7863(Arg7861) {
  if (Arg7861.length < 0) return [Shen.type_func, shen_user_lambda7863, 0, Arg7861];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7862"];

Shen.call_toplevel("shen-toplevel-7862")






Shen.fns["shen-toplevel-7865"] = [Shen.type_func,
  function shen_user_lambda7866(Arg7864) {
  if (Arg7864.length < 0) return [Shen.type_func, shen_user_lambda7866, 0, Arg7864];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7865"];

Shen.call_toplevel("shen-toplevel-7865")






Shen.fns["shen-toplevel-7868"] = [Shen.type_func,
  function shen_user_lambda7869(Arg7867) {
  if (Arg7867.length < 0) return [Shen.type_func, shen_user_lambda7869, 0, Arg7867];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7868"];

Shen.call_toplevel("shen-toplevel-7868")






Shen.fns["shen-toplevel-7871"] = [Shen.type_func,
  function shen_user_lambda7872(Arg7870) {
  if (Arg7870.length < 0) return [Shen.type_func, shen_user_lambda7872, 0, Arg7870];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7871"];

Shen.call_toplevel("shen-toplevel-7871")






Shen.fns["shen-toplevel-7874"] = [Shen.type_func,
  function shen_user_lambda7875(Arg7873) {
  if (Arg7873.length < 0) return [Shen.type_func, shen_user_lambda7875, 0, Arg7873];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7874"];

Shen.call_toplevel("shen-toplevel-7874")






Shen.fns["shen-toplevel-7877"] = [Shen.type_func,
  function shen_user_lambda7878(Arg7876) {
  if (Arg7876.length < 0) return [Shen.type_func, shen_user_lambda7878, 0, Arg7876];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7877"];

Shen.call_toplevel("shen-toplevel-7877")






Shen.fns["shen-toplevel-7880"] = [Shen.type_func,
  function shen_user_lambda7881(Arg7879) {
  if (Arg7879.length < 0) return [Shen.type_func, shen_user_lambda7881, 0, Arg7879];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7880"];

Shen.call_toplevel("shen-toplevel-7880")






Shen.fns["shen-toplevel-7883"] = [Shen.type_func,
  function shen_user_lambda7884(Arg7882) {
  if (Arg7882.length < 0) return [Shen.type_func, shen_user_lambda7884, 0, Arg7882];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7883"];

Shen.call_toplevel("shen-toplevel-7883")






Shen.fns["shen-toplevel-7886"] = [Shen.type_func,
  function shen_user_lambda7887(Arg7885) {
  if (Arg7885.length < 0) return [Shen.type_func, shen_user_lambda7887, 0, Arg7885];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7886"];

Shen.call_toplevel("shen-toplevel-7886")






Shen.fns["shen-toplevel-7889"] = [Shen.type_func,
  function shen_user_lambda7890(Arg7888) {
  if (Arg7888.length < 0) return [Shen.type_func, shen_user_lambda7890, 0, Arg7888];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})},
  0,
  [],
  "shen-toplevel-7889"];

Shen.call_toplevel("shen-toplevel-7889")












Shen.fns["shen-typecheck"] = [Shen.type_func,
  function shen_user_lambda7083(Arg7082) {
  if (Arg7082.length < 2) return [Shen.type_func, shen_user_lambda7083, 2, Arg7082];
  var Arg7082_0 = Arg7082[0], Arg7082_1 = Arg7082[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen-curry"], [Arg7082_0])),
  (R1 = Shen.call(Shen.fns["shen-start-new-prolog-process"], [])),
  (R2 = Shen.call(Shen.fns["shen-insert-prolog-variables"], [Shen.call(Shen.fns["shen-normalise-type"], [Shen.call(Shen.fns["shen-curry-type"], [Arg7082_1])]), R1])),
  (R3 = (new Shen.Freeze([R0, R2, R1], function(Arg7084) {
  var Arg7084_0 = Arg7084[0], Arg7084_1 = Arg7084[1], Arg7084_2 = Arg7084[2];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["return"], [Arg7084_1, Arg7084_2, [Shen.type_symbol, "shen-void"]]);});})}))),
  (function() {
  return Shen.call_tail(Shen.fns["shen-t*"], [[Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R2, []]]], [], R1, R3]);}))},
  2,
  [],
  "shen-typecheck"];






Shen.fns["shen-curry"] = [Shen.type_func,
  function shen_user_lambda7087(Arg7086) {
  if (Arg7086.length < 1) return [Shen.type_func, shen_user_lambda7087, 1, Arg7086];
  var Arg7086_0 = Arg7086[0];
  return (((Shen.is_type(Arg7086_0, Shen.type_cons) && Shen.call(Shen.fns["shen-special?"], [Arg7086_0[1]])))
  ? [Shen.type_cons, Arg7086_0[1], Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda7089(Arg7088) {
  if (Arg7088.length < 1) return [Shen.type_func, shen_user_lambda7089, 1, Arg7088];
  var Arg7088_0 = Arg7088[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-curry"], [Arg7088_0]);})},
  1,
  []], Arg7086_0[2]])]
  : (((Shen.is_type(Arg7086_0, Shen.type_cons) && (Shen.is_type(Arg7086_0[2], Shen.type_cons) && Shen.call(Shen.fns["shen-extraspecial?"], [Arg7086_0[1]]))))
  ? Arg7086_0
  : (((Shen.is_type(Arg7086_0, Shen.type_cons) && (Shen.is_type(Arg7086_0[2], Shen.type_cons) && Shen.is_type(Arg7086_0[2][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-curry"], [[Shen.type_cons, [Shen.type_cons, Arg7086_0[1], [Shen.type_cons, Arg7086_0[2][1], []]], Arg7086_0[2][2]]]);})
  : (((Shen.is_type(Arg7086_0, Shen.type_cons) && (Shen.is_type(Arg7086_0[2], Shen.type_cons) && Shen.empty$question$(Arg7086_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen-curry"], [Arg7086_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen-curry"], [Arg7086_0[2][1]]), []]]
  : Arg7086_0))))},
  1,
  [],
  "shen-curry"];






Shen.fns["shen-special?"] = [Shen.type_func,
  function shen_user_lambda7091(Arg7090) {
  if (Arg7090.length < 1) return [Shen.type_func, shen_user_lambda7091, 1, Arg7090];
  var Arg7090_0 = Arg7090[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7090_0, (Shen.globals["shen-*special*"])]);})},
  1,
  [],
  "shen-special?"];






Shen.fns["shen-extraspecial?"] = [Shen.type_func,
  function shen_user_lambda7093(Arg7092) {
  if (Arg7092.length < 1) return [Shen.type_func, shen_user_lambda7093, 1, Arg7092];
  var Arg7092_0 = Arg7092[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7092_0, (Shen.globals["shen-*extraspecial*"])]);})},
  1,
  [],
  "shen-extraspecial?"];






Shen.fns["shen-t*"] = [Shen.type_func,
  function shen_user_lambda7095(Arg7094) {
  if (Arg7094.length < 4) return [Shen.type_func, shen_user_lambda7095, 4, Arg7094];
  var Arg7094_0 = Arg7094[0], Arg7094_1 = Arg7094[1], Arg7094_2 = Arg7094[2], Arg7094_3 = Arg7094[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen-catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7094_2])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen-maxinfexceeded?"], []), Arg7094_2, (new Shen.Freeze([R1, Arg7094_2, Arg7094_3, R0, Arg7094_0, Arg7094_1, Arg7094_2, Arg7094_3], function(Arg7096) {
  var Arg7096_0 = Arg7096[0], Arg7096_1 = Arg7096[1], Arg7096_2 = Arg7096[2], Arg7096_3 = Arg7096[3], Arg7096_4 = Arg7096[4], Arg7096_5 = Arg7096[5], Arg7096_6 = Arg7096[6], Arg7096_7 = Arg7096[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7096_0, Shen.call(Shen.fns["shen-errormaxinfs"], []), Arg7096_1, Arg7096_2]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7094_0, Arg7094_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R1)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg7094_2, (new Shen.Freeze([R0, Arg7094_0, Arg7094_1, Arg7094_2, Arg7094_3], function(Arg7098) {
  var Arg7098_0 = Arg7098[0], Arg7098_1 = Arg7098[1], Arg7098_2 = Arg7098[2], Arg7098_3 = Arg7098[3], Arg7098_4 = Arg7098[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-prolog-failure"], [Arg7098_3, Arg7098_4]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7094_0, Arg7094_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7094_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7094_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7094_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7094_2])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen-type-theory-enabled?"], []), Arg7094_2, (new Shen.Freeze([R0, R2, R1, Arg7094_0, Arg7094_1, Arg7094_2, Arg7094_3], function(Arg7100) {
  var Arg7100_0 = Arg7100[0], Arg7100_1 = Arg7100[1], Arg7100_2 = Arg7100[2], Arg7100_3 = Arg7100[3], Arg7100_4 = Arg7100[4], Arg7100_5 = Arg7100[5], Arg7100_6 = Arg7100[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7100_0, Arg7100_5, (new Shen.Freeze([Arg7100_0, Arg7100_1, Arg7100_2, Arg7100_4, Arg7100_5, Arg7100_6], function(Arg7102) {
  var Arg7102_0 = Arg7102[0], Arg7102_1 = Arg7102[1], Arg7102_2 = Arg7102[2], Arg7102_3 = Arg7102[3], Arg7102_4 = Arg7102[4], Arg7102_5 = Arg7102[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7102_1, Arg7102_2, Arg7102_3, Arg7102_4, Arg7102_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7094_2])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  Shen.call(Shen.fns["shen-show"], [Arg7094_0, Arg7094_1, Arg7094_2, (new Shen.Freeze([Arg7094_0, Arg7094_1, R1, Arg7094_2, Arg7094_3], function(Arg7104) {
  var Arg7104_0 = Arg7104[0], Arg7104_1 = Arg7104[1], Arg7104_2 = Arg7104[2], Arg7104_3 = Arg7104[3], Arg7104_4 = Arg7104[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7104_2, (Shen.globals["shen-*datatypes*"]), Arg7104_3, (new Shen.Freeze([Arg7104_0, Arg7104_1, Arg7104_2, Arg7104_3, Arg7104_4], function(Arg7106) {
  var Arg7106_0 = Arg7106[0], Arg7106_1 = Arg7106[1], Arg7106_2 = Arg7106[2], Arg7106_3 = Arg7106[3], Arg7106_4 = Arg7106[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-udefs*"], [Arg7106_0, Arg7106_1, Arg7106_2, Arg7106_3, Arg7106_4]);});})}))]);});})}))]))
  : R1))
  : R1))
  : R1))]);}))},
  4,
  [],
  "shen-t*"];






Shen.fns["shen-type-theory-enabled?"] = [Shen.type_func,
  function shen_user_lambda7109(Arg7108) {
  if (Arg7108.length < 0) return [Shen.type_func, shen_user_lambda7109, 0, Arg7108];
  return (Shen.globals["shen-*shen-type-theory-enabled?*"])},
  0,
  [],
  "shen-type-theory-enabled?"];






Shen.fns["enable-type-theory"] = [Shen.type_func,
  function shen_user_lambda7111(Arg7110) {
  if (Arg7110.length < 1) return [Shen.type_func, shen_user_lambda7111, 1, Arg7110];
  var Arg7110_0 = Arg7110[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7110_0)))
  ? (Shen.globals["shen-*shen-type-theory-enabled?*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7110_0)))
  ? (Shen.globals["shen-*shen-type-theory-enabled?*"] = false)
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["enable-type-theory expects a + or a -~%", []]);})))},
  1,
  [],
  "enable-type-theory"];






Shen.fns["shen-prolog-failure"] = [Shen.type_func,
  function shen_user_lambda7113(Arg7112) {
  if (Arg7112.length < 2) return [Shen.type_func, shen_user_lambda7113, 2, Arg7112];
  var Arg7112_0 = Arg7112[0], Arg7112_1 = Arg7112[1];
  return false},
  2,
  [],
  "shen-prolog-failure"];






Shen.fns["shen-maxinfexceeded?"] = [Shen.type_func,
  function shen_user_lambda7115(Arg7114) {
  if (Arg7114.length < 0) return [Shen.type_func, shen_user_lambda7115, 0, Arg7114];
  return (Shen.call(Shen.fns["inferences"], [[Shen.type_symbol, "shen-skip"]]) > (Shen.globals["shen-*maxinferences*"]))},
  0,
  [],
  "shen-maxinfexceeded?"];






Shen.fns["shen-errormaxinfs"] = [Shen.type_func,
  function shen_user_lambda7117(Arg7116) {
  if (Arg7116.length < 0) return [Shen.type_func, shen_user_lambda7117, 0, Arg7116];
  return (function() {
  return Shen.simple_error("maximum inferences exceeded~%");})},
  0,
  [],
  "shen-errormaxinfs"];






Shen.fns["shen-udefs*"] = [Shen.type_func,
  function shen_user_lambda7119(Arg7118) {
  if (Arg7118.length < 5) return [Shen.type_func, shen_user_lambda7119, 5, Arg7118];
  var Arg7118_0 = Arg7118[0], Arg7118_1 = Arg7118[1], Arg7118_2 = Arg7118[2], Arg7118_3 = Arg7118[3], Arg7118_4 = Arg7118[4];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7118_2, Arg7118_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[1]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [[Shen.type_cons, R0, [Shen.type_cons, Arg7118_0, [Shen.type_cons, Arg7118_1, []]]], Arg7118_3, Arg7118_4])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7118_2, Arg7118_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen-udefs*"], [Arg7118_0, Arg7118_1, R0, Arg7118_3, Arg7118_4]);}))
  : false))
  : R0))},
  5,
  [],
  "shen-udefs*"];






Shen.fns["shen-th*"] = [Shen.type_func,
  function shen_user_lambda7121(Arg7120) {
  if (Arg7120.length < 5) return [Shen.type_func, shen_user_lambda7121, 5, Arg7120];
  var Arg7120_0 = Arg7120[0], Arg7120_1 = Arg7120[1], Arg7120_2 = Arg7120[2], Arg7120_3 = Arg7120[3], Arg7120_4 = Arg7120[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen-catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-cutpoint"], [R0, ((Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen-show"], [[Shen.type_cons, Arg7120_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7120_1, []]]], Arg7120_2, Arg7120_3, (new Shen.Freeze([R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7122) {
  var Arg7122_0 = Arg7122[0], Arg7122_1 = Arg7122[1], Arg7122_2 = Arg7122[2], Arg7122_3 = Arg7122[3], Arg7122_4 = Arg7122[4], Arg7122_5 = Arg7122[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg7122_4, Arg7122_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen-typedf?"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])]), Arg7120_3, (new Shen.Freeze([Arg7120_0, R1, Arg7120_1, Arg7120_3, Arg7120_4, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7124) {
  var Arg7124_0 = Arg7124[0], Arg7124_1 = Arg7124[1], Arg7124_2 = Arg7124[2], Arg7124_3 = Arg7124[3], Arg7124_4 = Arg7124[4], Arg7124_5 = Arg7124[5], Arg7124_6 = Arg7124[6], Arg7124_7 = Arg7124[7], Arg7124_8 = Arg7124[8], Arg7124_9 = Arg7124[9], Arg7124_10 = Arg7124[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7124_1, Shen.call(Shen.fns["shen-sigf"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7124_0, Arg7124_3])]), Arg7124_3, (new Shen.Freeze([Arg7124_0, Arg7124_1, Arg7124_2, Arg7124_3, Arg7124_4], function(Arg7126) {
  var Arg7126_0 = Arg7126[0], Arg7126_1 = Arg7126[1], Arg7126_2 = Arg7126[2], Arg7126_3 = Arg7126[3], Arg7126_4 = Arg7126[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["call"], [[Shen.type_cons, Arg7126_1, [Shen.type_cons, Arg7126_2, []]], Arg7126_3, Arg7126_4]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen-base"], [Arg7120_0, Arg7120_1, Arg7120_3, Arg7120_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen-by_hypothesis"], [Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen-th*"], [R2, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg7120_1, []]]], Arg7120_2, Arg7120_3, (new Shen.Freeze([R2, Arg7120_1, R3, R1, Arg7120_2, Arg7120_3, Arg7120_4, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7128) {
  var Arg7128_0 = Arg7128[0], Arg7128_1 = Arg7128[1], Arg7128_2 = Arg7128[2], Arg7128_3 = Arg7128[3], Arg7128_4 = Arg7128[4], Arg7128_5 = Arg7128[5], Arg7128_6 = Arg7128[6], Arg7128_7 = Arg7128[7], Arg7128_8 = Arg7128[8], Arg7128_9 = Arg7128[9], Arg7128_10 = Arg7128[10], Arg7128_11 = Arg7128[11], Arg7128_12 = Arg7128[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7128_2, Arg7128_3, Arg7128_4, Arg7128_5, Arg7128_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_1, Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen-lazyderef"], [R4[2], Arg7120_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen-th*"], [R1, R2, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R2, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7130) {
  var Arg7130_0 = Arg7130[0], Arg7130_1 = Arg7130[1], Arg7130_2 = Arg7130[2], Arg7130_3 = Arg7130[3], Arg7130_4 = Arg7130[4], Arg7130_5 = Arg7130[5], Arg7130_6 = Arg7130[6], Arg7130_7 = Arg7130[7], Arg7130_8 = Arg7130[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7130_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg7130_2, []]], Arg7130_6, Arg7130_7, Arg7130_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R4, [], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen-th*"], [R1, R2, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7132) {
  var Arg7132_0 = Arg7132[0], Arg7132_1 = Arg7132[1], Arg7132_2 = Arg7132[2], Arg7132_3 = Arg7132[3], Arg7132_4 = Arg7132[4], Arg7132_5 = Arg7132[5], Arg7132_6 = Arg7132[6], Arg7132_7 = Arg7132[7], Arg7132_8 = Arg7132[8], Arg7132_9 = Arg7132[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7132_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg7132_2, []]], Arg7132_7, Arg7132_8, Arg7132_9]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R4, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R4, [Shen.type_cons, R2, []], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen-th*"], [R1, R2, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R2, Arg7120_2, Arg7120_4, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7134) {
  var Arg7134_0 = Arg7134[0], Arg7134_1 = Arg7134[1], Arg7134_2 = Arg7134[2], Arg7134_3 = Arg7134[3], Arg7134_4 = Arg7134[4], Arg7134_5 = Arg7134[5], Arg7134_6 = Arg7134[6], Arg7134_7 = Arg7134[7], Arg7134_8 = Arg7134[8], Arg7134_9 = Arg7134[9], Arg7134_10 = Arg7134[10], Arg7134_11 = Arg7134[11], Arg7134_12 = Arg7134[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7134_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg7134_2, []]], Arg7134_3, Arg7134_6, Arg7134_4]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R4, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R4, [Shen.type_symbol, "list"], Arg7120_3]),
  ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen-th*"], [R1, R5, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R5, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7136) {
  var Arg7136_0 = Arg7136[0], Arg7136_1 = Arg7136[1], Arg7136_2 = Arg7136[2], Arg7136_3 = Arg7136[3], Arg7136_4 = Arg7136[4], Arg7136_5 = Arg7136[5], Arg7136_6 = Arg7136[6], Arg7136_7 = Arg7136[7], Arg7136_8 = Arg7136[8], Arg7136_9 = Arg7136[9], Arg7136_10 = Arg7136[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7136_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg7136_2, []]], Arg7136_8, Arg7136_4, Arg7136_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R2, [], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen-th*"], [R1, R5, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7138) {
  var Arg7138_0 = Arg7138[0], Arg7138_1 = Arg7138[1], Arg7138_2 = Arg7138[2], Arg7138_3 = Arg7138[3], Arg7138_4 = Arg7138[4], Arg7138_5 = Arg7138[5], Arg7138_6 = Arg7138[6], Arg7138_7 = Arg7138[7], Arg7138_8 = Arg7138[8], Arg7138_9 = Arg7138[9], Arg7138_10 = Arg7138[10], Arg7138_11 = Arg7138[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7138_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg7138_2, []]], Arg7138_9, Arg7138_5, Arg7138_10]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, R5, []], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen-th*"], [R1, R5, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R5, Arg7120_2, Arg7120_4, R2, Arg7120_3, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7140) {
  var Arg7140_0 = Arg7140[0], Arg7140_1 = Arg7140[1], Arg7140_2 = Arg7140[2], Arg7140_3 = Arg7140[3], Arg7140_4 = Arg7140[4], Arg7140_5 = Arg7140[5], Arg7140_6 = Arg7140[6], Arg7140_7 = Arg7140[7], Arg7140_8 = Arg7140[8], Arg7140_9 = Arg7140[9], Arg7140_10 = Arg7140[10], Arg7140_11 = Arg7140[11], Arg7140_12 = Arg7140[12], Arg7140_13 = Arg7140[13], Arg7140_14 = Arg7140[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7140_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg7140_2, []]], Arg7140_3, Arg7140_6, Arg7140_4]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R4, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R4, []]], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R4, Arg7120_2, Arg7120_4, R2, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7142) {
  var Arg7142_0 = Arg7142[0], Arg7142_1 = Arg7142[1], Arg7142_2 = Arg7142[2], Arg7142_3 = Arg7142[3], Arg7142_4 = Arg7142[4], Arg7142_5 = Arg7142[5], Arg7142_6 = Arg7142[6], Arg7142_7 = Arg7142[7], Arg7142_8 = Arg7142[8], Arg7142_9 = Arg7142[9], Arg7142_10 = Arg7142[10], Arg7142_11 = Arg7142[11], Arg7142_12 = Arg7142[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7142_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg7142_2, []]], Arg7142_3, Arg7142_6, Arg7142_4]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_1, Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen-lazyderef"], [R5[2], Arg7120_3])),
  ((Shen.empty$question$(R5))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R4, R3, R2, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7144) {
  var Arg7144_0 = Arg7144[0], Arg7144_1 = Arg7144[1], Arg7144_2 = Arg7144[2], Arg7144_3 = Arg7144[3], Arg7144_4 = Arg7144[4], Arg7144_5 = Arg7144[5], Arg7144_6 = Arg7144[6], Arg7144_7 = Arg7144[7], Arg7144_8 = Arg7144[8], Arg7144_9 = Arg7144[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7144_2, Arg7144_3, Arg7144_7, Arg7144_8, Arg7144_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R4, R3, R2, R5, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7146) {
  var Arg7146_0 = Arg7146[0], Arg7146_1 = Arg7146[1], Arg7146_2 = Arg7146[2], Arg7146_3 = Arg7146[3], Arg7146_4 = Arg7146[4], Arg7146_5 = Arg7146[5], Arg7146_6 = Arg7146[6], Arg7146_7 = Arg7146[7], Arg7146_8 = Arg7146[8], Arg7146_9 = Arg7146[9], Arg7146_10 = Arg7146[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7146_2, Arg7146_3, Arg7146_8, Arg7146_9, Arg7146_10]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7120_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R5, [Shen.type_cons, R2, []], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R4, R3, R2, Arg7120_2, Arg7120_4, R5, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7148) {
  var Arg7148_0 = Arg7148[0], Arg7148_1 = Arg7148[1], Arg7148_2 = Arg7148[2], Arg7148_3 = Arg7148[3], Arg7148_4 = Arg7148[4], Arg7148_5 = Arg7148[5], Arg7148_6 = Arg7148[6], Arg7148_7 = Arg7148[7], Arg7148_8 = Arg7148[8], Arg7148_9 = Arg7148[9], Arg7148_10 = Arg7148[10], Arg7148_11 = Arg7148[11], Arg7148_12 = Arg7148[12], Arg7148_13 = Arg7148[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7148_2, Arg7148_3, Arg7148_4, Arg7148_7, Arg7148_5]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7120_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [Shen.type_symbol, "*"], Arg7120_3]),
  ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R4, R3, R6, R5, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7150) {
  var Arg7150_0 = Arg7150[0], Arg7150_1 = Arg7150[1], Arg7150_2 = Arg7150[2], Arg7150_3 = Arg7150[3], Arg7150_4 = Arg7150[4], Arg7150_5 = Arg7150[5], Arg7150_6 = Arg7150[6], Arg7150_7 = Arg7150[7], Arg7150_8 = Arg7150[8], Arg7150_9 = Arg7150[9], Arg7150_10 = Arg7150[10], Arg7150_11 = Arg7150[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7150_2, Arg7150_3, Arg7150_9, Arg7150_5, Arg7150_10]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R2, [], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R4, R3, R6, R2, R5, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7152) {
  var Arg7152_0 = Arg7152[0], Arg7152_1 = Arg7152[1], Arg7152_2 = Arg7152[2], Arg7152_3 = Arg7152[3], Arg7152_4 = Arg7152[4], Arg7152_5 = Arg7152[5], Arg7152_6 = Arg7152[6], Arg7152_7 = Arg7152[7], Arg7152_8 = Arg7152[8], Arg7152_9 = Arg7152[9], Arg7152_10 = Arg7152[10], Arg7152_11 = Arg7152[11], Arg7152_12 = Arg7152[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7152_2, Arg7152_3, Arg7152_10, Arg7152_6, Arg7152_11]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, R6, []], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R4, R3, R6, Arg7120_2, Arg7120_4, R2, Arg7120_3, R5, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7154) {
  var Arg7154_0 = Arg7154[0], Arg7154_1 = Arg7154[1], Arg7154_2 = Arg7154[2], Arg7154_3 = Arg7154[3], Arg7154_4 = Arg7154[4], Arg7154_5 = Arg7154[5], Arg7154_6 = Arg7154[6], Arg7154_7 = Arg7154[7], Arg7154_8 = Arg7154[8], Arg7154_9 = Arg7154[9], Arg7154_10 = Arg7154[10], Arg7154_11 = Arg7154[11], Arg7154_12 = Arg7154[12], Arg7154_13 = Arg7154[13], Arg7154_14 = Arg7154[14], Arg7154_15 = Arg7154[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7154_2, Arg7154_3, Arg7154_4, Arg7154_7, Arg7154_5]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7120_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R4, R3, R5, Arg7120_2, Arg7120_4, R2, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7156) {
  var Arg7156_0 = Arg7156[0], Arg7156_1 = Arg7156[1], Arg7156_2 = Arg7156[2], Arg7156_3 = Arg7156[3], Arg7156_4 = Arg7156[4], Arg7156_5 = Arg7156[5], Arg7156_6 = Arg7156[6], Arg7156_7 = Arg7156[7], Arg7156_8 = Arg7156[8], Arg7156_9 = Arg7156[9], Arg7156_10 = Arg7156[10], Arg7156_11 = Arg7156[11], Arg7156_12 = Arg7156[12], Arg7156_13 = Arg7156[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7156_2, Arg7156_3, Arg7156_4, Arg7156_7, Arg7156_5]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]]], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R4, R3, R5, Arg7120_2, Arg7120_4, R2, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7158) {
  var Arg7158_0 = Arg7158[0], Arg7158_1 = Arg7158[1], Arg7158_2 = Arg7158[2], Arg7158_3 = Arg7158[3], Arg7158_4 = Arg7158[4], Arg7158_5 = Arg7158[5], Arg7158_6 = Arg7158[6], Arg7158_7 = Arg7158[7], Arg7158_8 = Arg7158[8], Arg7158_9 = Arg7158[9], Arg7158_10 = Arg7158[10], Arg7158_11 = Arg7158[11], Arg7158_12 = Arg7158[12], Arg7158_13 = Arg7158[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7158_2, Arg7158_3, Arg7158_4, Arg7158_7, Arg7158_5]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_1, Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen-lazyderef"], [R4[2], Arg7120_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen-th*"], [R1, R2, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R2, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7160) {
  var Arg7160_0 = Arg7160[0], Arg7160_1 = Arg7160[1], Arg7160_2 = Arg7160[2], Arg7160_3 = Arg7160[3], Arg7160_4 = Arg7160[4], Arg7160_5 = Arg7160[5], Arg7160_6 = Arg7160[6], Arg7160_7 = Arg7160[7], Arg7160_8 = Arg7160[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7160_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg7160_2, []]], Arg7160_6, Arg7160_7, Arg7160_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R4, [], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen-th*"], [R1, R2, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7162) {
  var Arg7162_0 = Arg7162[0], Arg7162_1 = Arg7162[1], Arg7162_2 = Arg7162[2], Arg7162_3 = Arg7162[3], Arg7162_4 = Arg7162[4], Arg7162_5 = Arg7162[5], Arg7162_6 = Arg7162[6], Arg7162_7 = Arg7162[7], Arg7162_8 = Arg7162[8], Arg7162_9 = Arg7162[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7162_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg7162_2, []]], Arg7162_7, Arg7162_8, Arg7162_9]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R4, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R4, [Shen.type_cons, R2, []], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen-th*"], [R1, R2, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R2, Arg7120_2, Arg7120_4, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7164) {
  var Arg7164_0 = Arg7164[0], Arg7164_1 = Arg7164[1], Arg7164_2 = Arg7164[2], Arg7164_3 = Arg7164[3], Arg7164_4 = Arg7164[4], Arg7164_5 = Arg7164[5], Arg7164_6 = Arg7164[6], Arg7164_7 = Arg7164[7], Arg7164_8 = Arg7164[8], Arg7164_9 = Arg7164[9], Arg7164_10 = Arg7164[10], Arg7164_11 = Arg7164[11], Arg7164_12 = Arg7164[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7164_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg7164_2, []]], Arg7164_3, Arg7164_6, Arg7164_4]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R4, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R4, [Shen.type_symbol, "vector"], Arg7120_3]),
  ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen-th*"], [R1, R5, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R5, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7166) {
  var Arg7166_0 = Arg7166[0], Arg7166_1 = Arg7166[1], Arg7166_2 = Arg7166[2], Arg7166_3 = Arg7166[3], Arg7166_4 = Arg7166[4], Arg7166_5 = Arg7166[5], Arg7166_6 = Arg7166[6], Arg7166_7 = Arg7166[7], Arg7166_8 = Arg7166[8], Arg7166_9 = Arg7166[9], Arg7166_10 = Arg7166[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7166_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg7166_2, []]], Arg7166_8, Arg7166_4, Arg7166_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R2, [], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen-th*"], [R1, R5, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7168) {
  var Arg7168_0 = Arg7168[0], Arg7168_1 = Arg7168[1], Arg7168_2 = Arg7168[2], Arg7168_3 = Arg7168[3], Arg7168_4 = Arg7168[4], Arg7168_5 = Arg7168[5], Arg7168_6 = Arg7168[6], Arg7168_7 = Arg7168[7], Arg7168_8 = Arg7168[8], Arg7168_9 = Arg7168[9], Arg7168_10 = Arg7168[10], Arg7168_11 = Arg7168[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7168_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg7168_2, []]], Arg7168_9, Arg7168_5, Arg7168_10]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, R5, []], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen-th*"], [R1, R5, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R5, Arg7120_2, Arg7120_4, R2, Arg7120_3, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7170) {
  var Arg7170_0 = Arg7170[0], Arg7170_1 = Arg7170[1], Arg7170_2 = Arg7170[2], Arg7170_3 = Arg7170[3], Arg7170_4 = Arg7170[4], Arg7170_5 = Arg7170[5], Arg7170_6 = Arg7170[6], Arg7170_7 = Arg7170[7], Arg7170_8 = Arg7170[8], Arg7170_9 = Arg7170[9], Arg7170_10 = Arg7170[10], Arg7170_11 = Arg7170[11], Arg7170_12 = Arg7170[12], Arg7170_13 = Arg7170[13], Arg7170_14 = Arg7170[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7170_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg7170_2, []]], Arg7170_3, Arg7170_6, Arg7170_4]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R4, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R4, []]], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen-th*"], [R1, R4, Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R4, Arg7120_2, Arg7120_4, R2, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7172) {
  var Arg7172_0 = Arg7172[0], Arg7172_1 = Arg7172[1], Arg7172_2 = Arg7172[2], Arg7172_3 = Arg7172[3], Arg7172_4 = Arg7172[4], Arg7172_5 = Arg7172[5], Arg7172_6 = Arg7172[6], Arg7172_7 = Arg7172[7], Arg7172_8 = Arg7172[8], Arg7172_9 = Arg7172[9], Arg7172_10 = Arg7172[10], Arg7172_11 = Arg7172[11], Arg7172_12 = Arg7172[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7172_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg7172_2, []]], Arg7172_3, Arg7172_6, Arg7172_4]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_1, Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R2)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen-th*"], [R1, [Shen.type_symbol, "string"], Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7174) {
  var Arg7174_0 = Arg7174[0], Arg7174_1 = Arg7174[1], Arg7174_2 = Arg7174[2], Arg7174_3 = Arg7174[3], Arg7174_4 = Arg7174[4], Arg7174_5 = Arg7174[5], Arg7174_6 = Arg7174[6], Arg7174_7 = Arg7174[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7174_1, [Shen.type_symbol, "string"], Arg7174_5, Arg7174_6, Arg7174_7]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_symbol, "string"], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen-th*"], [R1, [Shen.type_symbol, "string"], Arg7120_2, Arg7120_3, (new Shen.Freeze([R1, R3, R2, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7176) {
  var Arg7176_0 = Arg7176[0], Arg7176_1 = Arg7176[1], Arg7176_2 = Arg7176[2], Arg7176_3 = Arg7176[3], Arg7176_4 = Arg7176[4], Arg7176_5 = Arg7176[5], Arg7176_6 = Arg7176[6], Arg7176_7 = Arg7176[7], Arg7176_8 = Arg7176[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7176_1, [Shen.type_symbol, "string"], Arg7176_6, Arg7176_7, Arg7176_8]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_1, Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen-lazyderef"], [R5[2], Arg7120_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R1, R3, R5, R2, R6, R4, Arg7120_2, Arg7120_3, Arg7120_4, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7178) {
  var Arg7178_0 = Arg7178[0], Arg7178_1 = Arg7178[1], Arg7178_2 = Arg7178[2], Arg7178_3 = Arg7178[3], Arg7178_4 = Arg7178[4], Arg7178_5 = Arg7178[5], Arg7178_6 = Arg7178[6], Arg7178_7 = Arg7178[7], Arg7178_8 = Arg7178[8], Arg7178_9 = Arg7178[9], Arg7178_10 = Arg7178[10], Arg7178_11 = Arg7178[11], Arg7178_12 = Arg7178[12], Arg7178_13 = Arg7178[13], Arg7178_14 = Arg7178[14], Arg7178_15 = Arg7178[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7178_5, Shen.call(Shen.fns["shen-placeholder"], []), Arg7178_8, (new Shen.Freeze([Arg7178_1, Arg7178_2, Arg7178_3, Arg7178_4, Arg7178_5, Arg7178_6, Arg7178_7, Arg7178_8, Arg7178_9], function(Arg7180) {
  var Arg7180_0 = Arg7180[0], Arg7180_1 = Arg7180[1], Arg7180_2 = Arg7180[2], Arg7180_3 = Arg7180[3], Arg7180_4 = Arg7180[4], Arg7180_5 = Arg7180[5], Arg7180_6 = Arg7180[6], Arg7180_7 = Arg7180[7], Arg7180_8 = Arg7180[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7180_2, Shen.call(Shen.fns["shen-ebr"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7180_4, Arg7180_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7180_0, Arg7180_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7180_1, Arg7180_7])]), Arg7180_7, (new Shen.Freeze([Arg7180_0, Arg7180_1, Arg7180_2, Arg7180_3, Arg7180_4, Arg7180_5, Arg7180_6, Arg7180_7, Arg7180_8], function(Arg7182) {
  var Arg7182_0 = Arg7182[0], Arg7182_1 = Arg7182[1], Arg7182_2 = Arg7182[2], Arg7182_3 = Arg7182[3], Arg7182_4 = Arg7182[4], Arg7182_5 = Arg7182[5], Arg7182_6 = Arg7182[6], Arg7182_7 = Arg7182[7], Arg7182_8 = Arg7182[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7182_2, Arg7182_3, [Shen.type_cons, [Shen.type_cons, Arg7182_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7182_5, []]]], Arg7182_6], Arg7182_7, Arg7182_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [], Arg7120_3]),
  ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg7120_2, Arg7120_3, Arg7120_4, R5, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7184) {
  var Arg7184_0 = Arg7184[0], Arg7184_1 = Arg7184[1], Arg7184_2 = Arg7184[2], Arg7184_3 = Arg7184[3], Arg7184_4 = Arg7184[4], Arg7184_5 = Arg7184[5], Arg7184_6 = Arg7184[6], Arg7184_7 = Arg7184[7], Arg7184_8 = Arg7184[8], Arg7184_9 = Arg7184[9], Arg7184_10 = Arg7184[10], Arg7184_11 = Arg7184[11], Arg7184_12 = Arg7184[12], Arg7184_13 = Arg7184[13], Arg7184_14 = Arg7184[14], Arg7184_15 = Arg7184[15], Arg7184_16 = Arg7184[16], Arg7184_17 = Arg7184[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7184_5, Shen.call(Shen.fns["shen-placeholder"], []), Arg7184_8, (new Shen.Freeze([Arg7184_1, Arg7184_2, Arg7184_3, Arg7184_4, Arg7184_5, Arg7184_6, Arg7184_7, Arg7184_8, Arg7184_9], function(Arg7186) {
  var Arg7186_0 = Arg7186[0], Arg7186_1 = Arg7186[1], Arg7186_2 = Arg7186[2], Arg7186_3 = Arg7186[3], Arg7186_4 = Arg7186[4], Arg7186_5 = Arg7186[5], Arg7186_6 = Arg7186[6], Arg7186_7 = Arg7186[7], Arg7186_8 = Arg7186[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7186_2, Shen.call(Shen.fns["shen-ebr"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7186_4, Arg7186_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7186_0, Arg7186_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7186_1, Arg7186_7])]), Arg7186_7, (new Shen.Freeze([Arg7186_0, Arg7186_1, Arg7186_2, Arg7186_3, Arg7186_4, Arg7186_5, Arg7186_6, Arg7186_7, Arg7186_8], function(Arg7188) {
  var Arg7188_0 = Arg7188[0], Arg7188_1 = Arg7188[1], Arg7188_2 = Arg7188[2], Arg7188_3 = Arg7188[3], Arg7188_4 = Arg7188[4], Arg7188_5 = Arg7188[5], Arg7188_6 = Arg7188[6], Arg7188_7 = Arg7188[7], Arg7188_8 = Arg7188[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7188_2, Arg7188_3, [Shen.type_cons, [Shen.type_cons, Arg7188_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7188_5, []]]], Arg7188_6], Arg7188_7, Arg7188_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7120_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R5, [Shen.type_cons, R2, []], Arg7120_3]),
  ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg7120_2, Arg7120_3, Arg7120_4, R5, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7190) {
  var Arg7190_0 = Arg7190[0], Arg7190_1 = Arg7190[1], Arg7190_2 = Arg7190[2], Arg7190_3 = Arg7190[3], Arg7190_4 = Arg7190[4], Arg7190_5 = Arg7190[5], Arg7190_6 = Arg7190[6], Arg7190_7 = Arg7190[7], Arg7190_8 = Arg7190[8], Arg7190_9 = Arg7190[9], Arg7190_10 = Arg7190[10], Arg7190_11 = Arg7190[11], Arg7190_12 = Arg7190[12], Arg7190_13 = Arg7190[13], Arg7190_14 = Arg7190[14], Arg7190_15 = Arg7190[15], Arg7190_16 = Arg7190[16], Arg7190_17 = Arg7190[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7190_5, Shen.call(Shen.fns["shen-placeholder"], []), Arg7190_8, (new Shen.Freeze([Arg7190_1, Arg7190_2, Arg7190_3, Arg7190_4, Arg7190_5, Arg7190_6, Arg7190_7, Arg7190_8, Arg7190_9], function(Arg7192) {
  var Arg7192_0 = Arg7192[0], Arg7192_1 = Arg7192[1], Arg7192_2 = Arg7192[2], Arg7192_3 = Arg7192[3], Arg7192_4 = Arg7192[4], Arg7192_5 = Arg7192[5], Arg7192_6 = Arg7192[6], Arg7192_7 = Arg7192[7], Arg7192_8 = Arg7192[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7192_2, Shen.call(Shen.fns["shen-ebr"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7192_4, Arg7192_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7192_0, Arg7192_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7192_1, Arg7192_7])]), Arg7192_7, (new Shen.Freeze([Arg7192_0, Arg7192_1, Arg7192_2, Arg7192_3, Arg7192_4, Arg7192_5, Arg7192_6, Arg7192_7, Arg7192_8], function(Arg7194) {
  var Arg7194_0 = Arg7194[0], Arg7194_1 = Arg7194[1], Arg7194_2 = Arg7194[2], Arg7194_3 = Arg7194[3], Arg7194_4 = Arg7194[4], Arg7194_5 = Arg7194[5], Arg7194_6 = Arg7194[6], Arg7194_7 = Arg7194[7], Arg7194_8 = Arg7194[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7194_2, Arg7194_3, [Shen.type_cons, [Shen.type_cons, Arg7194_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7194_5, []]]], Arg7194_6], Arg7194_7, Arg7194_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7120_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [Shen.type_symbol, "-->"], Arg7120_3]),
  ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R1, R3, R2, R6, R7, R4, Arg7120_2, Arg7120_3, Arg7120_4, R5, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7196) {
  var Arg7196_0 = Arg7196[0], Arg7196_1 = Arg7196[1], Arg7196_2 = Arg7196[2], Arg7196_3 = Arg7196[3], Arg7196_4 = Arg7196[4], Arg7196_5 = Arg7196[5], Arg7196_6 = Arg7196[6], Arg7196_7 = Arg7196[7], Arg7196_8 = Arg7196[8], Arg7196_9 = Arg7196[9], Arg7196_10 = Arg7196[10], Arg7196_11 = Arg7196[11], Arg7196_12 = Arg7196[12], Arg7196_13 = Arg7196[13], Arg7196_14 = Arg7196[14], Arg7196_15 = Arg7196[15], Arg7196_16 = Arg7196[16], Arg7196_17 = Arg7196[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7196_5, Shen.call(Shen.fns["shen-placeholder"], []), Arg7196_8, (new Shen.Freeze([Arg7196_1, Arg7196_2, Arg7196_3, Arg7196_4, Arg7196_5, Arg7196_6, Arg7196_7, Arg7196_8, Arg7196_9], function(Arg7198) {
  var Arg7198_0 = Arg7198[0], Arg7198_1 = Arg7198[1], Arg7198_2 = Arg7198[2], Arg7198_3 = Arg7198[3], Arg7198_4 = Arg7198[4], Arg7198_5 = Arg7198[5], Arg7198_6 = Arg7198[6], Arg7198_7 = Arg7198[7], Arg7198_8 = Arg7198[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7198_2, Shen.call(Shen.fns["shen-ebr"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7198_4, Arg7198_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7198_0, Arg7198_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7198_1, Arg7198_7])]), Arg7198_7, (new Shen.Freeze([Arg7198_0, Arg7198_1, Arg7198_2, Arg7198_3, Arg7198_4, Arg7198_5, Arg7198_6, Arg7198_7, Arg7198_8], function(Arg7200) {
  var Arg7200_0 = Arg7200[0], Arg7200_1 = Arg7200[1], Arg7200_2 = Arg7200[2], Arg7200_3 = Arg7200[3], Arg7200_4 = Arg7200[4], Arg7200_5 = Arg7200[5], Arg7200_6 = Arg7200[6], Arg7200_7 = Arg7200[7], Arg7200_8 = Arg7200[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7200_2, Arg7200_3, [Shen.type_cons, [Shen.type_cons, Arg7200_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7200_5, []]]], Arg7200_6], Arg7200_7, Arg7200_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R2, [], Arg7120_3]),
  ((R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R8 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg7120_2, Arg7120_3, Arg7120_4, R2, Arg7120_3, R5, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7202) {
  var Arg7202_0 = Arg7202[0], Arg7202_1 = Arg7202[1], Arg7202_2 = Arg7202[2], Arg7202_3 = Arg7202[3], Arg7202_4 = Arg7202[4], Arg7202_5 = Arg7202[5], Arg7202_6 = Arg7202[6], Arg7202_7 = Arg7202[7], Arg7202_8 = Arg7202[8], Arg7202_9 = Arg7202[9], Arg7202_10 = Arg7202[10], Arg7202_11 = Arg7202[11], Arg7202_12 = Arg7202[12], Arg7202_13 = Arg7202[13], Arg7202_14 = Arg7202[14], Arg7202_15 = Arg7202[15], Arg7202_16 = Arg7202[16], Arg7202_17 = Arg7202[17], Arg7202_18 = Arg7202[18], Arg7202_19 = Arg7202[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7202_5, Shen.call(Shen.fns["shen-placeholder"], []), Arg7202_8, (new Shen.Freeze([Arg7202_1, Arg7202_2, Arg7202_3, Arg7202_4, Arg7202_5, Arg7202_6, Arg7202_7, Arg7202_8, Arg7202_9], function(Arg7204) {
  var Arg7204_0 = Arg7204[0], Arg7204_1 = Arg7204[1], Arg7204_2 = Arg7204[2], Arg7204_3 = Arg7204[3], Arg7204_4 = Arg7204[4], Arg7204_5 = Arg7204[5], Arg7204_6 = Arg7204[6], Arg7204_7 = Arg7204[7], Arg7204_8 = Arg7204[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7204_2, Shen.call(Shen.fns["shen-ebr"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7204_4, Arg7204_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7204_0, Arg7204_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7204_1, Arg7204_7])]), Arg7204_7, (new Shen.Freeze([Arg7204_0, Arg7204_1, Arg7204_2, Arg7204_3, Arg7204_4, Arg7204_5, Arg7204_6, Arg7204_7, Arg7204_8], function(Arg7206) {
  var Arg7206_0 = Arg7206[0], Arg7206_1 = Arg7206[1], Arg7206_2 = Arg7206[2], Arg7206_3 = Arg7206[3], Arg7206_4 = Arg7206[4], Arg7206_5 = Arg7206[5], Arg7206_6 = Arg7206[6], Arg7206_7 = Arg7206[7], Arg7206_8 = Arg7206[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7206_2, Arg7206_3, [Shen.type_cons, [Shen.type_cons, Arg7206_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7206_5, []]]], Arg7206_6], Arg7206_7, Arg7206_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, R6, []], Arg7120_3]),
  ((R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R8 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg7120_2, Arg7120_3, Arg7120_4, R2, Arg7120_3, R5, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7208) {
  var Arg7208_0 = Arg7208[0], Arg7208_1 = Arg7208[1], Arg7208_2 = Arg7208[2], Arg7208_3 = Arg7208[3], Arg7208_4 = Arg7208[4], Arg7208_5 = Arg7208[5], Arg7208_6 = Arg7208[6], Arg7208_7 = Arg7208[7], Arg7208_8 = Arg7208[8], Arg7208_9 = Arg7208[9], Arg7208_10 = Arg7208[10], Arg7208_11 = Arg7208[11], Arg7208_12 = Arg7208[12], Arg7208_13 = Arg7208[13], Arg7208_14 = Arg7208[14], Arg7208_15 = Arg7208[15], Arg7208_16 = Arg7208[16], Arg7208_17 = Arg7208[17], Arg7208_18 = Arg7208[18], Arg7208_19 = Arg7208[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7208_5, Shen.call(Shen.fns["shen-placeholder"], []), Arg7208_8, (new Shen.Freeze([Arg7208_1, Arg7208_2, Arg7208_3, Arg7208_4, Arg7208_5, Arg7208_6, Arg7208_7, Arg7208_8, Arg7208_9], function(Arg7210) {
  var Arg7210_0 = Arg7210[0], Arg7210_1 = Arg7210[1], Arg7210_2 = Arg7210[2], Arg7210_3 = Arg7210[3], Arg7210_4 = Arg7210[4], Arg7210_5 = Arg7210[5], Arg7210_6 = Arg7210[6], Arg7210_7 = Arg7210[7], Arg7210_8 = Arg7210[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7210_2, Shen.call(Shen.fns["shen-ebr"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7210_4, Arg7210_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7210_0, Arg7210_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7210_1, Arg7210_7])]), Arg7210_7, (new Shen.Freeze([Arg7210_0, Arg7210_1, Arg7210_2, Arg7210_3, Arg7210_4, Arg7210_5, Arg7210_6, Arg7210_7, Arg7210_8], function(Arg7212) {
  var Arg7212_0 = Arg7212[0], Arg7212_1 = Arg7212[1], Arg7212_2 = Arg7212[2], Arg7212_3 = Arg7212[3], Arg7212_4 = Arg7212[4], Arg7212_5 = Arg7212[5], Arg7212_6 = Arg7212[6], Arg7212_7 = Arg7212[7], Arg7212_8 = Arg7212[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7212_2, Arg7212_3, [Shen.type_cons, [Shen.type_cons, Arg7212_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7212_5, []]]], Arg7212_6], Arg7212_7, Arg7212_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7120_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]], Arg7120_3]),
  ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg7120_2, Arg7120_3, Arg7120_4, R2, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7214) {
  var Arg7214_0 = Arg7214[0], Arg7214_1 = Arg7214[1], Arg7214_2 = Arg7214[2], Arg7214_3 = Arg7214[3], Arg7214_4 = Arg7214[4], Arg7214_5 = Arg7214[5], Arg7214_6 = Arg7214[6], Arg7214_7 = Arg7214[7], Arg7214_8 = Arg7214[8], Arg7214_9 = Arg7214[9], Arg7214_10 = Arg7214[10], Arg7214_11 = Arg7214[11], Arg7214_12 = Arg7214[12], Arg7214_13 = Arg7214[13], Arg7214_14 = Arg7214[14], Arg7214_15 = Arg7214[15], Arg7214_16 = Arg7214[16], Arg7214_17 = Arg7214[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7214_5, Shen.call(Shen.fns["shen-placeholder"], []), Arg7214_8, (new Shen.Freeze([Arg7214_1, Arg7214_2, Arg7214_3, Arg7214_4, Arg7214_5, Arg7214_6, Arg7214_7, Arg7214_8, Arg7214_9], function(Arg7216) {
  var Arg7216_0 = Arg7216[0], Arg7216_1 = Arg7216[1], Arg7216_2 = Arg7216[2], Arg7216_3 = Arg7216[3], Arg7216_4 = Arg7216[4], Arg7216_5 = Arg7216[5], Arg7216_6 = Arg7216[6], Arg7216_7 = Arg7216[7], Arg7216_8 = Arg7216[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7216_2, Shen.call(Shen.fns["shen-ebr"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7216_4, Arg7216_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7216_0, Arg7216_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7216_1, Arg7216_7])]), Arg7216_7, (new Shen.Freeze([Arg7216_0, Arg7216_1, Arg7216_2, Arg7216_3, Arg7216_4, Arg7216_5, Arg7216_6, Arg7216_7, Arg7216_8], function(Arg7218) {
  var Arg7218_0 = Arg7218[0], Arg7218_1 = Arg7218[1], Arg7218_2 = Arg7218[2], Arg7218_3 = Arg7218[3], Arg7218_4 = Arg7218[4], Arg7218_5 = Arg7218[5], Arg7218_6 = Arg7218[6], Arg7218_7 = Arg7218[7], Arg7218_8 = Arg7218[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7218_2, Arg7218_3, [Shen.type_cons, [Shen.type_cons, Arg7218_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7218_5, []]]], Arg7218_6], Arg7218_7, Arg7218_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]]], Arg7120_3]),
  ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg7120_2, Arg7120_3, Arg7120_4, R2, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7220) {
  var Arg7220_0 = Arg7220[0], Arg7220_1 = Arg7220[1], Arg7220_2 = Arg7220[2], Arg7220_3 = Arg7220[3], Arg7220_4 = Arg7220[4], Arg7220_5 = Arg7220[5], Arg7220_6 = Arg7220[6], Arg7220_7 = Arg7220[7], Arg7220_8 = Arg7220[8], Arg7220_9 = Arg7220[9], Arg7220_10 = Arg7220[10], Arg7220_11 = Arg7220[11], Arg7220_12 = Arg7220[12], Arg7220_13 = Arg7220[13], Arg7220_14 = Arg7220[14], Arg7220_15 = Arg7220[15], Arg7220_16 = Arg7220[16], Arg7220_17 = Arg7220[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7220_5, Shen.call(Shen.fns["shen-placeholder"], []), Arg7220_8, (new Shen.Freeze([Arg7220_1, Arg7220_2, Arg7220_3, Arg7220_4, Arg7220_5, Arg7220_6, Arg7220_7, Arg7220_8, Arg7220_9], function(Arg7222) {
  var Arg7222_0 = Arg7222[0], Arg7222_1 = Arg7222[1], Arg7222_2 = Arg7222[2], Arg7222_3 = Arg7222[3], Arg7222_4 = Arg7222[4], Arg7222_5 = Arg7222[5], Arg7222_6 = Arg7222[6], Arg7222_7 = Arg7222[7], Arg7222_8 = Arg7222[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7222_2, Shen.call(Shen.fns["shen-ebr"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7222_4, Arg7222_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7222_0, Arg7222_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7222_1, Arg7222_7])]), Arg7222_7, (new Shen.Freeze([Arg7222_0, Arg7222_1, Arg7222_2, Arg7222_3, Arg7222_4, Arg7222_5, Arg7222_6, Arg7222_7, Arg7222_8], function(Arg7224) {
  var Arg7224_0 = Arg7224[0], Arg7224_1 = Arg7224[1], Arg7224_2 = Arg7224[2], Arg7224_3 = Arg7224[3], Arg7224_4 = Arg7224[4], Arg7224_5 = Arg7224[5], Arg7224_6 = Arg7224[6], Arg7224_7 = Arg7224[7], Arg7224_8 = Arg7224[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7224_2, Arg7224_3, [Shen.type_cons, [Shen.type_cons, Arg7224_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7224_5, []]]], Arg7224_6], Arg7224_7, Arg7224_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  (R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R3, R1, R4, R2, Arg7120_1, R5, R6, Arg7120_2, Arg7120_3, Arg7120_4, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7226) {
  var Arg7226_0 = Arg7226[0], Arg7226_1 = Arg7226[1], Arg7226_2 = Arg7226[2], Arg7226_3 = Arg7226[3], Arg7226_4 = Arg7226[4], Arg7226_5 = Arg7226[5], Arg7226_6 = Arg7226[6], Arg7226_7 = Arg7226[7], Arg7226_8 = Arg7226[8], Arg7226_9 = Arg7226[9], Arg7226_10 = Arg7226[10], Arg7226_11 = Arg7226[11], Arg7226_12 = Arg7226[12], Arg7226_13 = Arg7226[13], Arg7226_14 = Arg7226[14], Arg7226_15 = Arg7226[15], Arg7226_16 = Arg7226[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7226_1, Arg7226_7, Arg7226_8, Arg7226_9, (new Shen.Freeze([Arg7226_1, Arg7226_2, Arg7226_3, Arg7226_4, Arg7226_5, Arg7226_6, Arg7226_7, Arg7226_8, Arg7226_9, Arg7226_10], function(Arg7228) {
  var Arg7228_0 = Arg7228[0], Arg7228_1 = Arg7228[1], Arg7228_2 = Arg7228[2], Arg7228_3 = Arg7228[3], Arg7228_4 = Arg7228[4], Arg7228_5 = Arg7228[5], Arg7228_6 = Arg7228[6], Arg7228_7 = Arg7228[7], Arg7228_8 = Arg7228[8], Arg7228_9 = Arg7228[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7228_5, Shen.call(Shen.fns["shen-placeholder"], []), Arg7228_8, (new Shen.Freeze([Arg7228_1, Arg7228_2, Arg7228_3, Arg7228_4, Arg7228_5, Arg7228_6, Arg7228_7, Arg7228_8, Arg7228_9], function(Arg7230) {
  var Arg7230_0 = Arg7230[0], Arg7230_1 = Arg7230[1], Arg7230_2 = Arg7230[2], Arg7230_3 = Arg7230[3], Arg7230_4 = Arg7230[4], Arg7230_5 = Arg7230[5], Arg7230_6 = Arg7230[6], Arg7230_7 = Arg7230[7], Arg7230_8 = Arg7230[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7230_2, Shen.call(Shen.fns["shen-ebr"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7230_4, Arg7230_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7230_0, Arg7230_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7230_1, Arg7230_7])]), Arg7230_7, (new Shen.Freeze([Arg7230_0, Arg7230_1, Arg7230_2, Arg7230_3, Arg7230_4, Arg7230_5, Arg7230_6, Arg7230_7, Arg7230_8], function(Arg7232) {
  var Arg7232_0 = Arg7232[0], Arg7232_1 = Arg7232[1], Arg7232_2 = Arg7232[2], Arg7232_3 = Arg7232[3], Arg7232_4 = Arg7232[4], Arg7232_5 = Arg7232[5], Arg7232_6 = Arg7232[6], Arg7232_7 = Arg7232[7], Arg7232_8 = Arg7232[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7232_2, Arg7232_3, [Shen.type_cons, [Shen.type_cons, Arg7232_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7232_5, []]]], Arg7232_6], Arg7232_7, Arg7232_8]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "open"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "file"], R1)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_1, Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "stream"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen-lazyderef"], [R4[2], Arg7120_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg7120_3, (new Shen.Freeze([R2, R3, R1, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7234) {
  var Arg7234_0 = Arg7234[0], Arg7234_1 = Arg7234[1], Arg7234_2 = Arg7234[2], Arg7234_3 = Arg7234[3], Arg7234_4 = Arg7234[4], Arg7234_5 = Arg7234[5], Arg7234_6 = Arg7234[6], Arg7234_7 = Arg7234[7], Arg7234_8 = Arg7234[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7234_3, Arg7234_7, (new Shen.Freeze([Arg7234_3, Arg7234_2, Arg7234_6, Arg7234_7, Arg7234_8], function(Arg7236) {
  var Arg7236_0 = Arg7236[0], Arg7236_1 = Arg7236[1], Arg7236_2 = Arg7236[2], Arg7236_3 = Arg7236[3], Arg7236_4 = Arg7236[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7236_1, [Shen.type_symbol, "string"], Arg7236_2, Arg7236_3, Arg7236_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R4, [], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg7120_3, (new Shen.Freeze([R2, R3, R1, R4, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7238) {
  var Arg7238_0 = Arg7238[0], Arg7238_1 = Arg7238[1], Arg7238_2 = Arg7238[2], Arg7238_3 = Arg7238[3], Arg7238_4 = Arg7238[4], Arg7238_5 = Arg7238[5], Arg7238_6 = Arg7238[6], Arg7238_7 = Arg7238[7], Arg7238_8 = Arg7238[8], Arg7238_9 = Arg7238[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7238_4, Arg7238_8, (new Shen.Freeze([Arg7238_4, Arg7238_2, Arg7238_7, Arg7238_8, Arg7238_9], function(Arg7240) {
  var Arg7240_0 = Arg7240[0], Arg7240_1 = Arg7240[1], Arg7240_2 = Arg7240[2], Arg7240_3 = Arg7240[3], Arg7240_4 = Arg7240[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7240_1, [Shen.type_symbol, "string"], Arg7240_2, Arg7240_3, Arg7240_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R4, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R4, [Shen.type_cons, R2, []], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg7120_3, (new Shen.Freeze([R2, R3, R0, R1, Arg7120_2, Arg7120_4, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7242) {
  var Arg7242_0 = Arg7242[0], Arg7242_1 = Arg7242[1], Arg7242_2 = Arg7242[2], Arg7242_3 = Arg7242[3], Arg7242_4 = Arg7242[4], Arg7242_5 = Arg7242[5], Arg7242_6 = Arg7242[6], Arg7242_7 = Arg7242[7], Arg7242_8 = Arg7242[8], Arg7242_9 = Arg7242[9], Arg7242_10 = Arg7242[10], Arg7242_11 = Arg7242[11], Arg7242_12 = Arg7242[12], Arg7242_13 = Arg7242[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7242_2, Arg7242_7, (new Shen.Freeze([Arg7242_2, Arg7242_3, Arg7242_4, Arg7242_7, Arg7242_5], function(Arg7244) {
  var Arg7244_0 = Arg7244[0], Arg7244_1 = Arg7244[1], Arg7244_2 = Arg7244[2], Arg7244_3 = Arg7244[3], Arg7244_4 = Arg7244[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7244_1, [Shen.type_symbol, "string"], Arg7244_2, Arg7244_3, Arg7244_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R4, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R4, [Shen.type_symbol, "stream"], Arg7120_3]),
  ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg7120_3, (new Shen.Freeze([R5, R3, R1, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7246) {
  var Arg7246_0 = Arg7246[0], Arg7246_1 = Arg7246[1], Arg7246_2 = Arg7246[2], Arg7246_3 = Arg7246[3], Arg7246_4 = Arg7246[4], Arg7246_5 = Arg7246[5], Arg7246_6 = Arg7246[6], Arg7246_7 = Arg7246[7], Arg7246_8 = Arg7246[8], Arg7246_9 = Arg7246[9], Arg7246_10 = Arg7246[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7246_5, Arg7246_4, (new Shen.Freeze([Arg7246_5, Arg7246_2, Arg7246_8, Arg7246_4, Arg7246_9], function(Arg7248) {
  var Arg7248_0 = Arg7248[0], Arg7248_1 = Arg7248[1], Arg7248_2 = Arg7248[2], Arg7248_3 = Arg7248[3], Arg7248_4 = Arg7248[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7248_1, [Shen.type_symbol, "string"], Arg7248_2, Arg7248_3, Arg7248_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R2, [], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg7120_3, (new Shen.Freeze([R5, R3, R1, R2, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7250) {
  var Arg7250_0 = Arg7250[0], Arg7250_1 = Arg7250[1], Arg7250_2 = Arg7250[2], Arg7250_3 = Arg7250[3], Arg7250_4 = Arg7250[4], Arg7250_5 = Arg7250[5], Arg7250_6 = Arg7250[6], Arg7250_7 = Arg7250[7], Arg7250_8 = Arg7250[8], Arg7250_9 = Arg7250[9], Arg7250_10 = Arg7250[10], Arg7250_11 = Arg7250[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7250_6, Arg7250_5, (new Shen.Freeze([Arg7250_6, Arg7250_2, Arg7250_9, Arg7250_5, Arg7250_10], function(Arg7252) {
  var Arg7252_0 = Arg7252[0], Arg7252_1 = Arg7252[1], Arg7252_2 = Arg7252[2], Arg7252_3 = Arg7252[3], Arg7252_4 = Arg7252[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7252_1, [Shen.type_symbol, "string"], Arg7252_2, Arg7252_3, Arg7252_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, R5, []], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg7120_3, (new Shen.Freeze([R5, R3, R0, R1, Arg7120_2, Arg7120_4, R2, Arg7120_3, R4, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7254) {
  var Arg7254_0 = Arg7254[0], Arg7254_1 = Arg7254[1], Arg7254_2 = Arg7254[2], Arg7254_3 = Arg7254[3], Arg7254_4 = Arg7254[4], Arg7254_5 = Arg7254[5], Arg7254_6 = Arg7254[6], Arg7254_7 = Arg7254[7], Arg7254_8 = Arg7254[8], Arg7254_9 = Arg7254[9], Arg7254_10 = Arg7254[10], Arg7254_11 = Arg7254[11], Arg7254_12 = Arg7254[12], Arg7254_13 = Arg7254[13], Arg7254_14 = Arg7254[14], Arg7254_15 = Arg7254[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7254_2, Arg7254_7, (new Shen.Freeze([Arg7254_2, Arg7254_3, Arg7254_4, Arg7254_7, Arg7254_5], function(Arg7256) {
  var Arg7256_0 = Arg7256[0], Arg7256_1 = Arg7256[1], Arg7256_2 = Arg7256[2], Arg7256_3 = Arg7256[3], Arg7256_4 = Arg7256[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7256_1, [Shen.type_symbol, "string"], Arg7256_2, Arg7256_3, Arg7256_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R4, Arg7120_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, R4, []]], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R3, Arg7120_3, (new Shen.Freeze([R4, R3, R0, R1, Arg7120_2, Arg7120_4, R2, Arg7120_3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7258) {
  var Arg7258_0 = Arg7258[0], Arg7258_1 = Arg7258[1], Arg7258_2 = Arg7258[2], Arg7258_3 = Arg7258[3], Arg7258_4 = Arg7258[4], Arg7258_5 = Arg7258[5], Arg7258_6 = Arg7258[6], Arg7258_7 = Arg7258[7], Arg7258_8 = Arg7258[8], Arg7258_9 = Arg7258[9], Arg7258_10 = Arg7258[10], Arg7258_11 = Arg7258[11], Arg7258_12 = Arg7258[12], Arg7258_13 = Arg7258[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7258_2, Arg7258_7, (new Shen.Freeze([Arg7258_2, Arg7258_3, Arg7258_4, Arg7258_7, Arg7258_5], function(Arg7260) {
  var Arg7260_0 = Arg7260[0], Arg7260_1 = Arg7260[1], Arg7260_2 = Arg7260[2], Arg7260_3 = Arg7260[3], Arg7260_4 = Arg7260[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7260_1, [Shen.type_symbol, "string"], Arg7260_2, Arg7260_3, Arg7260_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R1, R3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7262) {
  var Arg7262_0 = Arg7262[0], Arg7262_1 = Arg7262[1], Arg7262_2 = Arg7262[2], Arg7262_3 = Arg7262[3], Arg7262_4 = Arg7262[4], Arg7262_5 = Arg7262[5], Arg7262_6 = Arg7262[6], Arg7262_7 = Arg7262[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg7262_1, Arg7262_4, Arg7262_6, (new Shen.Freeze([Arg7262_4, Arg7262_0, Arg7262_1, Arg7262_5, Arg7262_6, Arg7262_7], function(Arg7264) {
  var Arg7264_0 = Arg7264[0], Arg7264_1 = Arg7264[1], Arg7264_2 = Arg7264[2], Arg7264_3 = Arg7264[3], Arg7264_4 = Arg7264[4], Arg7264_5 = Arg7264[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7264_1, Arg7264_2, Arg7264_3, Arg7264_4, Arg7264_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["bind"], [R2, Shen.call(Shen.fns["shen-normalise-type"], [Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7120_3])]), Arg7120_3, (new Shen.Freeze([R1, Arg7120_1, R2, Arg7120_3, Arg7120_4, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7266) {
  var Arg7266_0 = Arg7266[0], Arg7266_1 = Arg7266[1], Arg7266_2 = Arg7266[2], Arg7266_3 = Arg7266[3], Arg7266_4 = Arg7266[4], Arg7266_5 = Arg7266[5], Arg7266_6 = Arg7266[6], Arg7266_7 = Arg7266[7], Arg7266_8 = Arg7266[8], Arg7266_9 = Arg7266[9], Arg7266_10 = Arg7266[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg7266_1, Arg7266_2, Arg7266_3, Arg7266_4]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R3, R1, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7268) {
  var Arg7268_0 = Arg7268[0], Arg7268_1 = Arg7268[1], Arg7268_2 = Arg7268[2], Arg7268_3 = Arg7268[3], Arg7268_4 = Arg7268[4], Arg7268_5 = Arg7268[5], Arg7268_6 = Arg7268[6], Arg7268_7 = Arg7268[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7268_1, [Shen.type_symbol, "boolean"], Arg7268_5, Arg7268_6, (new Shen.Freeze([Arg7268_2, Arg7268_0, Arg7268_4, Arg7268_1, Arg7268_5, Arg7268_6, Arg7268_7], function(Arg7270) {
  var Arg7270_0 = Arg7270[0], Arg7270_1 = Arg7270[1], Arg7270_2 = Arg7270[2], Arg7270_3 = Arg7270[3], Arg7270_4 = Arg7270[4], Arg7270_5 = Arg7270[5], Arg7270_6 = Arg7270[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7270_0, Arg7270_5, (new Shen.Freeze([Arg7270_0, Arg7270_1, Arg7270_2, Arg7270_3, Arg7270_4, Arg7270_5, Arg7270_6], function(Arg7272) {
  var Arg7272_0 = Arg7272[0], Arg7272_1 = Arg7272[1], Arg7272_2 = Arg7272[2], Arg7272_3 = Arg7272[3], Arg7272_4 = Arg7272[4], Arg7272_5 = Arg7272[5], Arg7272_6 = Arg7272[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7272_1, Arg7272_2, [Shen.type_cons, [Shen.type_cons, Arg7272_3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "verified"], []]]], Arg7272_4], Arg7272_5, Arg7272_6]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R1, R3, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7274) {
  var Arg7274_0 = Arg7274[0], Arg7274_1 = Arg7274[1], Arg7274_2 = Arg7274[2], Arg7274_3 = Arg7274[3], Arg7274_4 = Arg7274[4], Arg7274_5 = Arg7274[5], Arg7274_6 = Arg7274[6], Arg7274_7 = Arg7274[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [[Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, Arg7274_0, []]], Arg7274_4, Arg7274_5, Arg7274_6, (new Shen.Freeze([Arg7274_0, Arg7274_1, Arg7274_4, Arg7274_5, Arg7274_6, Arg7274_7], function(Arg7276) {
  var Arg7276_0 = Arg7276[0], Arg7276_1 = Arg7276[1], Arg7276_2 = Arg7276[2], Arg7276_3 = Arg7276[3], Arg7276_4 = Arg7276[4], Arg7276_5 = Arg7276[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7276_1, Arg7276_2, Arg7276_3, Arg7276_4, Arg7276_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_1, Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R2)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg7120_4))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R2, [Shen.type_symbol, "symbol"], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg7120_4)))),
  Shen.call(Shen.fns["shen-unbindv"], [R2, Arg7120_3]),
  (R1 = R1))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen-t*-hyps"], [Arg7120_2, R1, Arg7120_3, (new Shen.Freeze([Arg7120_2, Arg7120_0, Arg7120_1, R1, Arg7120_3, Arg7120_4, R0, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7278) {
  var Arg7278_0 = Arg7278[0], Arg7278_1 = Arg7278[1], Arg7278_2 = Arg7278[2], Arg7278_3 = Arg7278[3], Arg7278_4 = Arg7278[4], Arg7278_5 = Arg7278[5], Arg7278_6 = Arg7278[6], Arg7278_7 = Arg7278[7], Arg7278_8 = Arg7278[8], Arg7278_9 = Arg7278[9], Arg7278_10 = Arg7278[10], Arg7278_11 = Arg7278[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7278_1, Arg7278_2, Arg7278_3, Arg7278_4, Arg7278_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7120_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg7120_3, (new Shen.Freeze([R0, R1, R2, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4, Arg7120_0, Arg7120_1, Arg7120_2, Arg7120_3, Arg7120_4], function(Arg7280) {
  var Arg7280_0 = Arg7280[0], Arg7280_1 = Arg7280[1], Arg7280_2 = Arg7280[2], Arg7280_3 = Arg7280[3], Arg7280_4 = Arg7280[4], Arg7280_5 = Arg7280[5], Arg7280_6 = Arg7280[6], Arg7280_7 = Arg7280[7], Arg7280_8 = Arg7280[8], Arg7280_9 = Arg7280[9], Arg7280_10 = Arg7280[10], Arg7280_11 = Arg7280[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7280_1, Arg7280_2]], Arg7280_3, Arg7280_4, Arg7280_5, Arg7280_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-process-datatype"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_1, Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg7120_4))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_symbol, "symbol"], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg7120_4)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7120_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_0, Arg7120_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-synonyms-help"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7120_1, Arg7120_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg7120_4))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_symbol, "symbol"], Arg7120_3]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg7120_4)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7120_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7120_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, (Shen.globals["shen-*datatypes*"]), Arg7120_3, (new Shen.Freeze([Arg7120_0, Arg7120_1, Arg7120_2, R1, Arg7120_3, Arg7120_4], function(Arg7282) {
  var Arg7282_0 = Arg7282[0], Arg7282_1 = Arg7282[1], Arg7282_2 = Arg7282[2], Arg7282_3 = Arg7282[3], Arg7282_4 = Arg7282[4], Arg7282_5 = Arg7282[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-udefs*"], [[Shen.type_cons, Arg7282_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7282_1, []]]], Arg7282_2, Arg7282_3, Arg7282_4, Arg7282_5]);});})}))]))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))]);}))},
  5,
  [],
  "shen-th*"];






Shen.fns["shen-t*-hyps"] = [Shen.type_func,
  function shen_user_lambda7285(Arg7284) {
  if (Arg7284.length < 4) return [Shen.type_func, shen_user_lambda7285, 4, Arg7284];
  var Arg7284_0 = Arg7284[0], Arg7284_1 = Arg7284[1], Arg7284_2 = Arg7284[2], Arg7284_3 = Arg7284[3];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7284_0, Arg7284_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R0[1], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7284_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R3[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R3[1], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen-lazyderef"], [R5[2], Arg7284_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [], Arg7284_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R5, [Shen.type_cons, R1, []], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [Shen.type_symbol, "list"], Arg7284_2]),
  ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R1, [], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_cons, R6, []], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R5, []]], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7284_0, Arg7284_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R0[1], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7284_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R3[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R3[1], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen-lazyderef"], [R6[2], Arg7284_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R6, [], Arg7284_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R6, Arg7284_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R6, [], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R6, Arg7284_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R6]))
  ? ((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R6, [Shen.type_cons, R1, []], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R6, Arg7284_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R6, [Shen.type_symbol, "*"], Arg7284_2]),
  ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R7 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R7, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R7, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R1, [], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R7, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R7, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? ((R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_cons, R7, []], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R7, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R7, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R6, Arg7284_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R0 = R6))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  (R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]]], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R0 = R6))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7284_0, Arg7284_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R0[1], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7284_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R3[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R3[1], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen-lazyderef"], [R5[2], Arg7284_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [], Arg7284_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R5, [Shen.type_cons, R1, []], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R5, [Shen.type_symbol, "vector"], Arg7284_2]),
  ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R1, [], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_cons, R6, []], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R6, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R5, []]], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R5, Arg7284_2]), []]], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7284_0, Arg7284_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R0[1], Arg7284_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7284_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R2[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R3[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R3[1], Arg7284_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_symbol, "string"], Arg7284_2]),
  ((R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7284_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R3, Arg7284_2])]], Arg7284_2, Arg7284_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R3, [], Arg7284_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R4, Arg7284_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen-lazyderef"], [R0, Arg7284_2])]], Arg7284_2, Arg7284_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R3, Arg7284_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7284_2]),
  (R0 = R4))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7284_0, Arg7284_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7284_2])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7284_1, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7284_2]), Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7284_2])], Arg7284_2, (new Shen.Freeze([Arg7284_1, R1, R0, R2, Arg7284_2, Arg7284_3], function(Arg7286) {
  var Arg7286_0 = Arg7286[0], Arg7286_1 = Arg7286[1], Arg7286_2 = Arg7286[2], Arg7286_3 = Arg7286[3], Arg7286_4 = Arg7286[4], Arg7286_5 = Arg7286[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-hyps"], [Arg7286_2, Arg7286_3, Arg7286_4, Arg7286_5]);});})}))]);}))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))},
  4,
  [],
  "shen-t*-hyps"];






Shen.fns["shen-show"] = [Shen.type_func,
  function shen_user_lambda7289(Arg7288) {
  if (Arg7288.length < 4) return [Shen.type_func, shen_user_lambda7289, 4, Arg7288];
  var Arg7288_0 = Arg7288[0], Arg7288_1 = Arg7288[1], Arg7288_2 = Arg7288[2], Arg7288_3 = Arg7288[3];
  return (((Shen.globals["shen-*spy*"]))
  ? (Shen.call(Shen.fns["shen-line"], []),
  Shen.call(Shen.fns["shen-show-p"], [Shen.call(Shen.fns["shen-deref"], [Arg7288_0, Arg7288_2])]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["shen-show-assumptions"], [Shen.call(Shen.fns["shen-deref"], [Arg7288_1, Arg7288_2]), 1]),
  Shen.call(Shen.fns["intoutput"], ["~%> ", []]),
  Shen.call(Shen.fns["shen-pause-for-user"], [(Shen.globals["*language*"])]),
  Shen.thaw(Arg7288_3))
  : Shen.thaw(Arg7288_3))},
  4,
  [],
  "shen-show"];






Shen.fns["shen-line"] = [Shen.type_func,
  function shen_user_lambda7291(Arg7290) {
  if (Arg7290.length < 0) return [Shen.type_func, shen_user_lambda7291, 0, Arg7290];
  var R0;
  return ((R0 = Shen.call(Shen.fns["inferences"], [[Shen.type_symbol, "_"]])),
  (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["____________________________________________________________ ~A inference~A ~%?- ", [Shen.fns['shen-tuple'], R0, [Shen.fns['shen-tuple'], ((Shen.unwind_tail(Shen.$eq$(1, R0)))
  ? ""
  : "s"), []]]]);}))},
  0,
  [],
  "shen-line"];






Shen.fns["shen-show-p"] = [Shen.type_func,
  function shen_user_lambda7293(Arg7292) {
  if (Arg7292.length < 1) return [Shen.type_func, shen_user_lambda7293, 1, Arg7292];
  var Arg7292_0 = Arg7292[0];
  return (((Shen.is_type(Arg7292_0, Shen.type_cons) && (Shen.is_type(Arg7292_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg7292_0[2][1])) && (Shen.is_type(Arg7292_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7292_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["~R : ~R", [Shen.fns['shen-tuple'], Arg7292_0[1], [Shen.fns['shen-tuple'], Arg7292_0[2][2][1], []]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["~R", [Shen.fns['shen-tuple'], Arg7292_0, []]]);}))},
  1,
  [],
  "shen-show-p"];






Shen.fns["shen-show-assumptions"] = [Shen.type_func,
  function shen_user_lambda7295(Arg7294) {
  if (Arg7294.length < 2) return [Shen.type_func, shen_user_lambda7295, 2, Arg7294];
  var Arg7294_0 = Arg7294[0], Arg7294_1 = Arg7294[1];
  return ((Shen.empty$question$(Arg7294_0))
  ? [Shen.type_symbol, "shen-skip"]
  : ((Shen.is_type(Arg7294_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["intoutput"], ["~A. ", [Shen.fns['shen-tuple'], Arg7294_1, []]]),
  Shen.call(Shen.fns["shen-show-p"], [Arg7294_0[1]]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-show-assumptions"], [Arg7294_0[2], (Arg7294_1 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "shen-show-assumptions"]]);})))},
  2,
  [],
  "shen-show-assumptions"];






Shen.fns["shen-pause-for-user"] = [Shen.type_func,
  function shen_user_lambda7297(Arg7296) {
  if (Arg7296.length < 1) return [Shen.type_func, shen_user_lambda7297, 1, Arg7296];
  var Arg7296_0 = Arg7296[0];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$("Common Lisp", Arg7296_0)))
  ? ((R0 = Shen.call(Shen.fns["FORMAT"], [[], "~C", Shen.call(Shen.fns["READ-CHAR"], [])])),
  ((Shen.unwind_tail(Shen.$eq$(R0, "a")))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["input aborted~%", []]);})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);})))
  : ((R0 = Shen.call(Shen.fns["shen-read-char"], [])),
  ((Shen.unwind_tail(Shen.$eq$(R0, "a")))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["input aborted~%", []]);})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))))},
  1,
  [],
  "shen-pause-for-user"];






Shen.fns["shen-read-char"] = [Shen.type_func,
  function shen_user_lambda7299(Arg7298) {
  if (Arg7298.length < 0) return [Shen.type_func, shen_user_lambda7299, 0, Arg7298];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), 0]);})},
  0,
  [],
  "shen-read-char"];






Shen.fns["shen-read-char-h"] = [Shen.type_func,
  function shen_user_lambda7301(Arg7300) {
  if (Arg7300.length < 2) return [Shen.type_func, shen_user_lambda7301, 2, Arg7300];
  var Arg7300_0 = Arg7300[0], Arg7300_1 = Arg7300[1];
  return (((Shen.unwind_tail(Shen.$eq$(-1, Arg7300_0)) && Shen.unwind_tail(Shen.$eq$(0, Arg7300_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), 1]);})
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg7300_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), 0]);})
  : (((Shen.unwind_tail(Shen.$eq$(-1, Arg7300_0)) && Shen.unwind_tail(Shen.$eq$(1, Arg7300_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), 1]);})
  : ((Shen.unwind_tail(Shen.$eq$(1, Arg7300_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["byte->string"], [Arg7300_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "shen-read-char-h"]]);})))))},
  2,
  [],
  "shen-read-char-h"];






Shen.fns["shen-typedf?"] = [Shen.type_func,
  function shen_user_lambda7303(Arg7302) {
  if (Arg7302.length < 1) return [Shen.type_func, shen_user_lambda7303, 1, Arg7302];
  var Arg7302_0 = Arg7302[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7302_0, (Shen.globals["shen-*signedfuncs*"])]);})},
  1,
  [],
  "shen-typedf?"];






Shen.fns["shen-sigf"] = [Shen.type_func,
  function shen_user_lambda7305(Arg7304) {
  if (Arg7304.length < 1) return [Shen.type_func, shen_user_lambda7305, 1, Arg7304];
  var Arg7304_0 = Arg7304[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "shen-type-signature-of-"], Arg7304_0]);})},
  1,
  [],
  "shen-sigf"];






Shen.fns["shen-placeholder"] = [Shen.type_func,
  function shen_user_lambda7307(Arg7306) {
  if (Arg7306.length < 0) return [Shen.type_func, shen_user_lambda7307, 0, Arg7306];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "&&"]]);})},
  0,
  [],
  "shen-placeholder"];






Shen.fns["shen-base"] = [Shen.type_func,
  function shen_user_lambda7309(Arg7308) {
  if (Arg7308.length < 4) return [Shen.type_func, shen_user_lambda7309, 4, Arg7308];
  var Arg7308_0 = Arg7308[0], Arg7308_1 = Arg7308[1], Arg7308_2 = Arg7308[2], Arg7308_3 = Arg7308[3];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_1, Arg7308_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number"], R0)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_0, Arg7308_2])) == 'number'), Arg7308_2, Arg7308_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R0, [Shen.type_symbol, "number"], Arg7308_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_0, Arg7308_2])) == 'number'), Arg7308_2, Arg7308_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R0, Arg7308_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_1, Arg7308_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean"], R0)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_0, Arg7308_2])), Arg7308_2, Arg7308_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R0, [Shen.type_symbol, "boolean"], Arg7308_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_0, Arg7308_2])), Arg7308_2, Arg7308_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R0, Arg7308_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_1, Arg7308_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R0)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_0, Arg7308_2])) == 'string'), Arg7308_2, Arg7308_3])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R0, [Shen.type_symbol, "string"], Arg7308_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_0, Arg7308_2])) == 'string'), Arg7308_2, Arg7308_3]))),
  Shen.call(Shen.fns["shen-unbindv"], [R0, Arg7308_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_1, Arg7308_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_0, Arg7308_2]), Shen.type_symbol), Arg7308_2, (new Shen.Freeze([Arg7308_0, Arg7308_1, Arg7308_3, Arg7308_2], function(Arg7310) {
  var Arg7310_0 = Arg7310[0], Arg7310_1 = Arg7310[1], Arg7310_2 = Arg7310[2], Arg7310_3 = Arg7310[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen-placeholder?"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7310_0, Arg7310_3])])), Arg7310_3, Arg7310_2]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R0, [Shen.type_symbol, "symbol"], Arg7308_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_0, Arg7308_2]), Shen.type_symbol), Arg7308_2, (new Shen.Freeze([R0, Arg7308_0, Arg7308_1, Arg7308_3, Arg7308_2], function(Arg7312) {
  var Arg7312_0 = Arg7312[0], Arg7312_1 = Arg7312[1], Arg7312_2 = Arg7312[2], Arg7312_3 = Arg7312[3], Arg7312_4 = Arg7312[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen-placeholder?"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7312_1, Arg7312_4])])), Arg7312_4, Arg7312_3]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R0, Arg7308_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_0, Arg7308_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7308_1, Arg7308_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R0[1], Arg7308_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [R0[2], Arg7308_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? (R1[1],
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7308_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  Shen.thaw(Arg7308_3))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R1, [], Arg7308_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg7308_3)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7308_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen-newpv"], [Arg7308_2])),
  Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_cons, R0, []], Arg7308_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg7308_3)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7308_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R1, [Shen.type_symbol, "list"], Arg7308_2]),
  ((R0 = Shen.call(Shen.fns["shen-lazyderef"], [R0[2], Arg7308_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0[1],
  (R0 = Shen.call(Shen.fns["shen-lazyderef"], [R0[2], Arg7308_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg7308_3))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R0, [], Arg7308_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg7308_3)))),
  Shen.call(Shen.fns["shen-unbindv"], [R0, Arg7308_2]),
  (R0 = R2))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R0]))
  ? ((R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7308_2])),
  Shen.call(Shen.fns["shen-bindv"], [R0, [Shen.type_cons, R2, []], Arg7308_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg7308_3)))),
  Shen.call(Shen.fns["shen-unbindv"], [R0, Arg7308_2]),
  (R0 = R2))
  : (R0 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7308_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R0]))
  ? ((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7308_2])),
  Shen.call(Shen.fns["shen-bindv"], [R0, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R1, []]], Arg7308_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg7308_3)))),
  Shen.call(Shen.fns["shen-unbindv"], [R0, Arg7308_2]),
  R1)
  : false)))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))},
  4,
  [],
  "shen-base"];






Shen.fns["shen-placeholder?"] = [Shen.type_func,
  function shen_user_lambda7315(Arg7314) {
  if (Arg7314.length < 1) return [Shen.type_func, shen_user_lambda7315, 1, Arg7314];
  var Arg7314_0 = Arg7314[0];
  return (Shen.is_type(Arg7314_0, Shen.type_symbol) && Shen.call(Shen.fns["shen-placeholder-help?"], [Shen.str(Arg7314_0)]))},
  1,
  [],
  "shen-placeholder?"];






Shen.fns["shen-placeholder-help?"] = [Shen.type_func,
  function shen_user_lambda7317(Arg7316) {
  if (Arg7316.length < 1) return [Shen.type_func, shen_user_lambda7317, 1, Arg7316];
  var Arg7316_0 = Arg7316[0];
  return (((Shen.call(Shen.fns["shen-+string?"], [Arg7316_0]) && (Shen.unwind_tail(Shen.$eq$("&", Arg7316_0[0])) && (Shen.call(Shen.fns["shen-+string?"], [Shen.tlstr(Arg7316_0)]) && Shen.unwind_tail(Shen.$eq$("&", Shen.tlstr(Arg7316_0)[0]))))))
  ? true
  : false)},
  1,
  [],
  "shen-placeholder-help?"];






Shen.fns["shen-by_hypothesis"] = [Shen.type_func,
  function shen_user_lambda7319(Arg7318) {
  if (Arg7318.length < 5) return [Shen.type_func, shen_user_lambda7319, 5, Arg7318];
  var Arg7318_0 = Arg7318[0], Arg7318_1 = Arg7318[1], Arg7318_2 = Arg7318[2], Arg7318_3 = Arg7318[3], Arg7318_4 = Arg7318[4];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7318_2, Arg7318_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen-lazyderef"], [R0[1], Arg7318_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = Shen.call(Shen.fns["shen-lazyderef"], [R0[2], Arg7318_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R0[1], Arg7318_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R0[2], Arg7318_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R0 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen-lazyderef"], [R2[2], Arg7318_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["identical"], [Arg7318_0, R1, Arg7318_3, (new Shen.Freeze([R1, R0, Arg7318_2, Arg7318_0, Arg7318_1, Arg7318_3, Arg7318_4], function(Arg7320) {
  var Arg7320_0 = Arg7320[0], Arg7320_1 = Arg7320[1], Arg7320_2 = Arg7320[2], Arg7320_3 = Arg7320[3], Arg7320_4 = Arg7320[4], Arg7320_5 = Arg7320[5], Arg7320_6 = Arg7320[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7320_4, Arg7320_1, Arg7320_5, Arg7320_6]);});})}))])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7318_2, Arg7318_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen-by_hypothesis"], [Arg7318_0, Arg7318_1, R0, Arg7318_3, Arg7318_4]);}))
  : false))
  : R0))},
  5,
  [],
  "shen-by_hypothesis"];






Shen.fns["shen-t*-def"] = [Shen.type_func,
  function shen_user_lambda7323(Arg7322) {
  if (Arg7322.length < 5) return [Shen.type_func, shen_user_lambda7323, 5, Arg7322];
  var Arg7322_0 = Arg7322[0], Arg7322_1 = Arg7322[1], Arg7322_2 = Arg7322[2], Arg7322_3 = Arg7322[3], Arg7322_4 = Arg7322[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8, R9;
  return ((R0 = Shen.call(Shen.fns["shen-catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7322_0, Arg7322_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[1], Arg7322_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7322_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  (R3 = Shen.call(Shen.fns["shen-newpv"], [Arg7322_3])),
  (R4 = Shen.call(Shen.fns["shen-newpv"], [Arg7322_3])),
  (R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7322_3])),
  (R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7322_3])),
  (R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7322_3])),
  (R8 = Shen.call(Shen.fns["shen-newpv"], [Arg7322_3])),
  (R9 = Shen.call(Shen.fns["shen-newpv"], [Arg7322_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  Shen.call(Shen.fns["bind"], [R4, Shen.call(Shen.fns["compile"], [[Shen.type_func,
  function shen_user_lambda7325(Arg7324) {
  if (Arg7324.length < 1) return [Shen.type_func, shen_user_lambda7325, 1, Arg7324];
  var Arg7324_0 = Arg7324[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-<sig+rules>"], [Arg7324_0]);})},
  1,
  []], Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7322_3]), []]), Arg7322_3, (new Shen.Freeze([R2, R3, R4, R5, R0, R6, R7, Arg7322_2, R8, R1, Arg7322_1, R9, Arg7322_3, Arg7322_4], function(Arg7326) {
  var Arg7326_0 = Arg7326[0], Arg7326_1 = Arg7326[1], Arg7326_2 = Arg7326[2], Arg7326_3 = Arg7326[3], Arg7326_4 = Arg7326[4], Arg7326_5 = Arg7326[5], Arg7326_6 = Arg7326[6], Arg7326_7 = Arg7326[7], Arg7326_8 = Arg7326[8], Arg7326_9 = Arg7326[9], Arg7326_10 = Arg7326[10], Arg7326_11 = Arg7326[11], Arg7326_12 = Arg7326[12], Arg7326_13 = Arg7326[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7326_1, ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["shen-lazyderef"], [Arg7326_2, Arg7326_12]), Shen.fail_obj)))
  ? Shen.call(Shen.fns["shen-errordef"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7326_9, Arg7326_12])])
  : [Shen.type_symbol, "shen-skip"]), Arg7326_12, (new Shen.Freeze([Arg7326_1, Arg7326_2, Arg7326_3, Arg7326_4, Arg7326_5, Arg7326_6, Arg7326_7, Arg7326_8, Arg7326_9, Arg7326_10, Arg7326_11, Arg7326_12, Arg7326_13], function(Arg7328) {
  var Arg7328_0 = Arg7328[0], Arg7328_1 = Arg7328[1], Arg7328_2 = Arg7328[2], Arg7328_3 = Arg7328[3], Arg7328_4 = Arg7328[4], Arg7328_5 = Arg7328[5], Arg7328_6 = Arg7328[6], Arg7328_7 = Arg7328[7], Arg7328_8 = Arg7328[8], Arg7328_9 = Arg7328[9], Arg7328_10 = Arg7328[10], Arg7328_11 = Arg7328[11], Arg7328_12 = Arg7328[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7328_10, Shen.call(Shen.fns["shen-lazyderef"], [Arg7328_1, Arg7328_11])[1], Arg7328_11, (new Shen.Freeze([Arg7328_1, Arg7328_2, Arg7328_3, Arg7328_4, Arg7328_5, Arg7328_6, Arg7328_7, Arg7328_8, Arg7328_9, Arg7328_10, Arg7328_11, Arg7328_12], function(Arg7330) {
  var Arg7330_0 = Arg7330[0], Arg7330_1 = Arg7330[1], Arg7330_2 = Arg7330[2], Arg7330_3 = Arg7330[3], Arg7330_4 = Arg7330[4], Arg7330_5 = Arg7330[5], Arg7330_6 = Arg7330[6], Arg7330_7 = Arg7330[7], Arg7330_8 = Arg7330[8], Arg7330_9 = Arg7330[9], Arg7330_10 = Arg7330[10], Arg7330_11 = Arg7330[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7330_3, Shen.call(Shen.fns["shen-lazyderef"], [Arg7330_0, Arg7330_10])[2], Arg7330_10, (new Shen.Freeze([Arg7330_0, Arg7330_1, Arg7330_2, Arg7330_3, Arg7330_4, Arg7330_5, Arg7330_6, Arg7330_7, Arg7330_8, Arg7330_9, Arg7330_10, Arg7330_11], function(Arg7332) {
  var Arg7332_0 = Arg7332[0], Arg7332_1 = Arg7332[1], Arg7332_2 = Arg7332[2], Arg7332_3 = Arg7332[3], Arg7332_4 = Arg7332[4], Arg7332_5 = Arg7332[5], Arg7332_6 = Arg7332[6], Arg7332_7 = Arg7332[7], Arg7332_8 = Arg7332[8], Arg7332_9 = Arg7332[9], Arg7332_10 = Arg7332[10], Arg7332_11 = Arg7332[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7332_1, Shen.call(Shen.fns["shen-extract_vars"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7332_9, Arg7332_10])]), Arg7332_10, (new Shen.Freeze([Arg7332_1, Arg7332_2, Arg7332_3, Arg7332_4, Arg7332_5, Arg7332_6, Arg7332_7, Arg7332_8, Arg7332_9, Arg7332_10, Arg7332_11], function(Arg7334) {
  var Arg7334_0 = Arg7334[0], Arg7334_1 = Arg7334[1], Arg7334_2 = Arg7334[2], Arg7334_3 = Arg7334[3], Arg7334_4 = Arg7334[4], Arg7334_5 = Arg7334[5], Arg7334_6 = Arg7334[6], Arg7334_7 = Arg7334[7], Arg7334_8 = Arg7334[8], Arg7334_9 = Arg7334[9], Arg7334_10 = Arg7334[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7334_3, Shen.call(Shen.fns["shen-placeholders"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7334_8, Arg7334_9]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7334_0, Arg7334_9])]), Arg7334_9, (new Shen.Freeze([Arg7334_0, Arg7334_1, Arg7334_2, Arg7334_3, Arg7334_4, Arg7334_5, Arg7334_6, Arg7334_7, Arg7334_8, Arg7334_9, Arg7334_10], function(Arg7336) {
  var Arg7336_0 = Arg7336[0], Arg7336_1 = Arg7336[1], Arg7336_2 = Arg7336[2], Arg7336_3 = Arg7336[3], Arg7336_4 = Arg7336[4], Arg7336_5 = Arg7336[5], Arg7336_6 = Arg7336[6], Arg7336_7 = Arg7336[7], Arg7336_8 = Arg7336[8], Arg7336_9 = Arg7336[9], Arg7336_10 = Arg7336[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7336_1, Arg7336_9, (new Shen.Freeze([Arg7336_1, Arg7336_2, Arg7336_3, Arg7336_4, Arg7336_5, Arg7336_6, Arg7336_7, Arg7336_8, Arg7336_9, Arg7336_10], function(Arg7338) {
  var Arg7338_0 = Arg7338[0], Arg7338_1 = Arg7338[1], Arg7338_2 = Arg7338[2], Arg7338_3 = Arg7338[3], Arg7338_4 = Arg7338[4], Arg7338_5 = Arg7338[5], Arg7338_6 = Arg7338[6], Arg7338_7 = Arg7338[7], Arg7338_8 = Arg7338[8], Arg7338_9 = Arg7338[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-rules"], [Arg7338_1, Arg7338_2, 1, Arg7338_5, [Shen.type_cons, [Shen.type_cons, Arg7338_5, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg7338_2, []]]], Arg7338_3], Arg7338_8, (new Shen.Freeze([Arg7338_1, Arg7338_2, Arg7338_3, Arg7338_4, Arg7338_5, Arg7338_6, Arg7338_7, Arg7338_8, Arg7338_9], function(Arg7340) {
  var Arg7340_0 = Arg7340[0], Arg7340_1 = Arg7340[1], Arg7340_2 = Arg7340[2], Arg7340_3 = Arg7340[3], Arg7340_4 = Arg7340[4], Arg7340_5 = Arg7340[5], Arg7340_6 = Arg7340[6], Arg7340_7 = Arg7340[7], Arg7340_8 = Arg7340[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7340_3, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7340_4, Arg7340_7]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7340_6, Arg7340_7])]), Arg7340_7, (new Shen.Freeze([Arg7340_3, Arg7340_4, Arg7340_5, Arg7340_6, Arg7340_7, Arg7340_8], function(Arg7342) {
  var Arg7342_0 = Arg7342[0], Arg7342_1 = Arg7342[1], Arg7342_2 = Arg7342[2], Arg7342_3 = Arg7342[3], Arg7342_4 = Arg7342[4], Arg7342_5 = Arg7342[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7342_2, Arg7342_3, Arg7342_4, Arg7342_5]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))]);}))},
  5,
  [],
  "shen-t*-def"];






Shen.fns["shen-<sig+rules>"] = [Shen.type_func,
  function shen_user_lambda7345(Arg7344) {
  if (Arg7344.length < 1) return [Shen.type_func, shen_user_lambda7345, 1, Arg7344];
  var Arg7344_0 = Arg7344[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<signature>"], [Arg7344_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<trules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<sig+rules>"];






Shen.fns["shen-placeholders"] = [Shen.type_func,
  function shen_user_lambda7347(Arg7346) {
  if (Arg7346.length < 2) return [Shen.type_func, shen_user_lambda7347, 2, Arg7346];
  var Arg7346_0 = Arg7346[0], Arg7346_1 = Arg7346[1];
  return ((Shen.is_type(Arg7346_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda7349(Arg7348) {
  if (Arg7348.length < 2) return [Shen.type_func, shen_user_lambda7349, 2, Arg7348];
  var Arg7348_0 = Arg7348[0], Arg7348_1 = Arg7348[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-placeholders"], [Arg7348_1, Arg7348_0]);})},
  2,
  [Arg7346_1]], Arg7346_0]);})
  : ((Shen.call(Shen.fns["element?"], [Arg7346_0, Arg7346_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Arg7346_0]);})
  : Arg7346_0))},
  2,
  [],
  "shen-placeholders"];






Shen.fns["shen-<trules>"] = [Shen.type_func,
  function shen_user_lambda7351(Arg7350) {
  if (Arg7350.length < 1) return [Shen.type_func, shen_user_lambda7351, 1, Arg7350];
  var Arg7350_0 = Arg7350[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen-<trule>"], [Arg7350_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<trules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["snd"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen-<trule>"], [Arg7350_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["snd"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<trules>"];






Shen.fns["shen-<trule>"] = [Shen.type_func,
  function shen_user_lambda7353(Arg7352) {
  if (Arg7352.length < 1) return [Shen.type_func, shen_user_lambda7353, 1, Arg7352];
  var Arg7352_0 = Arg7352[0];
  var R0, R1, R2, R3, R4;
  return (((R0 = Shen.call(Shen.fns["shen-<patterns>"], [Arg7352_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen-<arrow>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen-<action>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R3 = Shen.call(Shen.fns["shen-<guard?>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R3))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R3]), ((R4 = Shen.call(Shen.fns["shen-extract_vars"], [Shen.call(Shen.fns["snd"], [R0])])),
  (R0 = Shen.call(Shen.fns["shen-placeholders"], [Shen.call(Shen.fns["snd"], [R0]), R4])),
  (R2 = Shen.call(Shen.fns["shen-placeholders"], [Shen.call(Shen.fns["shen-curry"], [Shen.call(Shen.fns["snd"], [R2])]), R4])),
  (R4 = Shen.call(Shen.fns["shen-placeholders"], [Shen.call(Shen.fns["shen-curry"], [Shen.call(Shen.fns["snd"], [R3])]), R4])),
  Shen.call(Shen.fns["shen-form-rule"], [R0, Shen.call(Shen.fns["snd"], [R1]), R2, R4]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))},
  1,
  [],
  "shen-<trule>"];






Shen.fns["shen-form-rule"] = [Shen.type_func,
  function shen_user_lambda7355(Arg7354) {
  if (Arg7354.length < 4) return [Shen.type_func, shen_user_lambda7355, 4, Arg7354];
  var Arg7354_0 = Arg7354[0], Arg7354_1 = Arg7354[1], Arg7354_2 = Arg7354[2], Arg7354_3 = Arg7354[3];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-forward"], Arg7354_1)))
  ? [Shen.type_cons, Arg7354_0, [Shen.type_cons, ((Shen.unwind_tail(Shen.$eq$(Arg7354_3, [Shen.type_symbol, "shen-skip"])))
  ? Arg7354_2
  : [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Arg7354_3, [Shen.type_cons, Arg7354_2, []]]]), []]]
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-backward"], Arg7354_1)) && (Shen.is_type(Arg7354_2, Shen.type_cons) && (Shen.is_type(Arg7354_2[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail-if"], Arg7354_2[1][1])) && (Shen.is_type(Arg7354_2[1][2], Shen.type_cons) && (Shen.empty$question$(Arg7354_2[1][2][2]) && (Shen.is_type(Arg7354_2[2], Shen.type_cons) && Shen.empty$question$(Arg7354_2[2][2])))))))))
  ? [Shen.type_cons, Arg7354_0, [Shen.type_cons, ((Shen.unwind_tail(Shen.$eq$(Arg7354_3, [Shen.type_symbol, "shen-skip"])))
  ? [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, Arg7354_2[1][2][1], Arg7354_2[2]], []]], Arg7354_2[2]]]
  : [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, Arg7354_3, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, Arg7354_2[1][2][1], Arg7354_2[2]], []]], []]], Arg7354_2[2]]]), []]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-backward"], Arg7354_1)))
  ? [Shen.type_cons, Arg7354_0, [Shen.type_cons, ((Shen.unwind_tail(Shen.$eq$(Arg7354_3, [Shen.type_symbol, "shen-skip"])))
  ? [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, Arg7354_2, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]], []]], [Shen.type_cons, Arg7354_2, []]]]
  : [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, Arg7354_3, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, Arg7354_2, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]], []]], []]], [Shen.type_cons, Arg7354_2, []]]]), []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen-f_error"], [[Shen.type_symbol, "shen-form-rule"]]);}))))},
  4,
  [],
  "shen-form-rule"];






Shen.fns["shen-<guard?>"] = [Shen.type_func,
  function shen_user_lambda7357(Arg7356) {
  if (Arg7356.length < 1) return [Shen.type_func, shen_user_lambda7357, 1, Arg7356];
  var Arg7356_0 = Arg7356[0];
  var R0;
  return ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg7356_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Shen.call(Shen.fns["fst"], [Arg7356_0])[1]))))
  ? ((R0 = Shen.call(Shen.fns["shen-<guard>"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg7356_0])[2], Shen.call(Shen.fns["snd"], [Arg7356_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), Shen.call(Shen.fns["snd"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg7356_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [R0]), [Shen.type_symbol, "shen-skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<guard?>"];






Shen.fns["shen-<arrow>"] = [Shen.type_func,
  function shen_user_lambda7359(Arg7358) {
  if (Arg7358.length < 1) return [Shen.type_func, shen_user_lambda7359, 1, Arg7358];
  var Arg7358_0 = Arg7358[0];
  var R0;
  return ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg7358_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], Shen.call(Shen.fns["fst"], [Arg7358_0])[1]))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg7358_0])[2], Shen.call(Shen.fns["snd"], [Arg7358_0])])]), [Shen.type_symbol, "shen-forward"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Shen.call(Shen.fns["fst"], [Arg7358_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], Shen.call(Shen.fns["fst"], [Arg7358_0])[1]))))
  ? (R0 = Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Shen.call(Shen.fns["shen-reassemble"], [Shen.call(Shen.fns["fst"], [Arg7358_0])[2], Shen.call(Shen.fns["snd"], [Arg7358_0])])]), [Shen.type_symbol, "shen-backward"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))},
  1,
  [],
  "shen-<arrow>"];






Shen.fns["shen-errordef"] = [Shen.type_func,
  function shen_user_lambda7361(Arg7360) {
  if (Arg7360.length < 1) return [Shen.type_func, shen_user_lambda7361, 1, Arg7360];
  var Arg7360_0 = Arg7360[0];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["syntax error in ~A~%", [Shen.fns['shen-tuple'], Arg7360_0, []]]);})},
  1,
  [],
  "shen-errordef"];






Shen.fns["shen-t*-rules"] = [Shen.type_func,
  function shen_user_lambda7363(Arg7362) {
  if (Arg7362.length < 7) return [Shen.type_func, shen_user_lambda7363, 7, Arg7362];
  var Arg7362_0 = Arg7362[0], Arg7362_1 = Arg7362[1], Arg7362_2 = Arg7362[2], Arg7362_3 = Arg7362[3], Arg7362_4 = Arg7362[4], Arg7362_5 = Arg7362[5], Arg7362_6 = Arg7362[6];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen-catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7362_0, Arg7362_5])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg7362_6))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7362_0, Arg7362_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen-newpv"], [Arg7362_5])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  Shen.call(Shen.fns["shen-t*-rule"], [R2, Arg7362_1, Arg7362_2, Arg7362_3, Arg7362_4, Arg7362_5, (new Shen.Freeze([R2, R0, Arg7362_2, R1, Arg7362_1, R3, Arg7362_3, Arg7362_4, Arg7362_5, Arg7362_6], function(Arg7364) {
  var Arg7364_0 = Arg7364[0], Arg7364_1 = Arg7364[1], Arg7364_2 = Arg7364[2], Arg7364_3 = Arg7364[3], Arg7364_4 = Arg7364[4], Arg7364_5 = Arg7364[5], Arg7364_6 = Arg7364[6], Arg7364_7 = Arg7364[7], Arg7364_8 = Arg7364[8], Arg7364_9 = Arg7364[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7364_1, Arg7364_8, (new Shen.Freeze([Arg7364_1, Arg7364_2, Arg7364_3, Arg7364_4, Arg7364_5, Arg7364_6, Arg7364_7, Arg7364_8, Arg7364_9], function(Arg7366) {
  var Arg7366_0 = Arg7366[0], Arg7366_1 = Arg7366[1], Arg7366_2 = Arg7366[2], Arg7366_3 = Arg7366[3], Arg7366_4 = Arg7366[4], Arg7366_5 = Arg7366[5], Arg7366_6 = Arg7366[6], Arg7366_7 = Arg7366[7], Arg7366_8 = Arg7366[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7366_4, (Shen.call(Shen.fns["shen-lazyderef"], [Arg7366_1, Arg7366_7]) + 1), Arg7366_7, (new Shen.Freeze([Arg7366_1, Arg7366_2, Arg7366_3, Arg7366_4, Arg7366_5, Arg7366_6, Arg7366_7, Arg7366_8], function(Arg7368) {
  var Arg7368_0 = Arg7368[0], Arg7368_1 = Arg7368[1], Arg7368_2 = Arg7368[2], Arg7368_3 = Arg7368[3], Arg7368_4 = Arg7368[4], Arg7368_5 = Arg7368[5], Arg7368_6 = Arg7368[6], Arg7368_7 = Arg7368[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-rules"], [Arg7368_1, Arg7368_2, Arg7368_3, Arg7368_4, Arg7368_5, Arg7368_6, Arg7368_7]);});})}))]);});})}))]);});})}))]))
  : false))
  : R1))]);}))},
  7,
  [],
  "shen-t*-rules"];






Shen.fns["shen-t*-rule"] = [Shen.type_func,
  function shen_user_lambda7371(Arg7370) {
  if (Arg7370.length < 7) return [Shen.type_func, shen_user_lambda7371, 7, Arg7370];
  var Arg7370_0 = Arg7370[0], Arg7370_1 = Arg7370[1], Arg7370_2 = Arg7370[2], Arg7370_3 = Arg7370[3], Arg7370_4 = Arg7370[4], Arg7370_5 = Arg7370[5], Arg7370_6 = Arg7370[6];
  var R0;
  return ((Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["shen-t*-ruleh"], [Arg7370_0, Arg7370_1, Arg7370_4, Arg7370_5, Arg7370_6]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen-newpv"], [Arg7370_5])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.call(Shen.fns["shen-type-insecure-rule-error-message"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7370_2, Arg7370_5]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7370_3, Arg7370_5])]), Arg7370_5, Arg7370_6]);}))
  : R0))},
  7,
  [],
  "shen-t*-rule"];






Shen.fns["shen-t*-ruleh"] = [Shen.type_func,
  function shen_user_lambda7373(Arg7372) {
  if (Arg7372.length < 5) return [Shen.type_func, shen_user_lambda7373, 5, Arg7372];
  var Arg7372_0 = Arg7372[0], Arg7372_1 = Arg7372[1], Arg7372_2 = Arg7372[2], Arg7372_3 = Arg7372[3], Arg7372_4 = Arg7372[4];
  var R0, R1, R2, R3, R4, R5;
  return ((R0 = Shen.call(Shen.fns["shen-catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7372_0, Arg7372_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7372_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen-lazyderef"], [R1[2], Arg7372_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7372_3])),
  (R4 = Shen.call(Shen.fns["shen-newpv"], [Arg7372_3])),
  (R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7372_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  Shen.call(Shen.fns["shen-t*-patterns"], [R2, Arg7372_1, R1, R4, Arg7372_3, (new Shen.Freeze([R2, Arg7372_1, R1, Arg7372_2, R0, R3, R4, R5, Arg7372_3, Arg7372_4], function(Arg7374) {
  var Arg7374_0 = Arg7374[0], Arg7374_1 = Arg7374[1], Arg7374_2 = Arg7374[2], Arg7374_3 = Arg7374[3], Arg7374_4 = Arg7374[4], Arg7374_5 = Arg7374[5], Arg7374_6 = Arg7374[6], Arg7374_7 = Arg7374[7], Arg7374_8 = Arg7374[8], Arg7374_9 = Arg7374[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7374_4, Arg7374_8, (new Shen.Freeze([Arg7374_2, Arg7374_3, Arg7374_4, Arg7374_5, Arg7374_6, Arg7374_7, Arg7374_8, Arg7374_9], function(Arg7376) {
  var Arg7376_0 = Arg7376[0], Arg7376_1 = Arg7376[1], Arg7376_2 = Arg7376[2], Arg7376_3 = Arg7376[3], Arg7376_4 = Arg7376[4], Arg7376_5 = Arg7376[5], Arg7376_6 = Arg7376[6], Arg7376_7 = Arg7376[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-conc"], [Arg7376_0, Arg7376_1, Arg7376_5, Arg7376_6, (new Shen.Freeze([Arg7376_0, Arg7376_1, Arg7376_2, Arg7376_3, Arg7376_4, Arg7376_5, Arg7376_6, Arg7376_7], function(Arg7378) {
  var Arg7378_0 = Arg7378[0], Arg7378_1 = Arg7378[1], Arg7378_2 = Arg7378[2], Arg7378_3 = Arg7378[3], Arg7378_4 = Arg7378[4], Arg7378_5 = Arg7378[5], Arg7378_6 = Arg7378[6], Arg7378_7 = Arg7378[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7378_2, Arg7378_6, (new Shen.Freeze([Arg7378_2, Arg7378_3, Arg7378_4, Arg7378_5, Arg7378_6, Arg7378_7], function(Arg7380) {
  var Arg7380_0 = Arg7380[0], Arg7380_1 = Arg7380[1], Arg7380_2 = Arg7380[2], Arg7380_3 = Arg7380[3], Arg7380_4 = Arg7380[4], Arg7380_5 = Arg7380[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7380_1, Arg7380_2, Arg7380_3, Arg7380_4, Arg7380_5]);});})}))]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))]);}))},
  5,
  [],
  "shen-t*-ruleh"];






Shen.fns["shen-type-insecure-rule-error-message"] = [Shen.type_func,
  function shen_user_lambda7383(Arg7382) {
  if (Arg7382.length < 2) return [Shen.type_func, shen_user_lambda7383, 2, Arg7382];
  var Arg7382_0 = Arg7382[0], Arg7382_1 = Arg7382[1];
  return (function() {
  return Shen.call_tail(Shen.fns["interror"], ["type error in rule ~A of ~A~%", [Shen.fns['shen-tuple'], Arg7382_0, [Shen.fns['shen-tuple'], Arg7382_1, []]]]);})},
  2,
  [],
  "shen-type-insecure-rule-error-message"];






Shen.fns["shen-t*-patterns"] = [Shen.type_func,
  function shen_user_lambda7385(Arg7384) {
  if (Arg7384.length < 6) return [Shen.type_func, shen_user_lambda7385, 6, Arg7384];
  var Arg7384_0 = Arg7384[0], Arg7384_1 = Arg7384[1], Arg7384_2 = Arg7384[2], Arg7384_3 = Arg7384[3], Arg7384_4 = Arg7384[4], Arg7384_5 = Arg7384[5];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10;
  return ((R0 = Shen.call(Shen.fns["shen-catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7384_0, Arg7384_4])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7384_2, Arg7384_4])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg7384_3, Arg7384_1, Arg7384_4, Arg7384_5])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R1, [], Arg7384_4]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R2 = Shen.call(Shen.fns["unify!"], [Arg7384_3, Arg7384_1, Arg7384_4, Arg7384_5]))),
  Shen.call(Shen.fns["shen-unbindv"], [R1, Arg7384_4]),
  (R1 = R2))
  : (R1 = false))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7384_0, Arg7384_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7384_1, Arg7384_4])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7384_4])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R3[1], Arg7384_4])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [R3[2], Arg7384_4])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R3 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen-lazyderef"], [R5[2], Arg7384_4])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7384_2, Arg7384_4])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen-lazyderef"], [R5[1], Arg7384_4])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R7 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen-lazyderef"], [R6[2], Arg7384_4])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R8 = Shen.call(Shen.fns["shen-lazyderef"], [R6[1], Arg7384_4])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R8)))
  ? ((R8 = Shen.call(Shen.fns["shen-lazyderef"], [R6[2], Arg7384_4])),
  ((Shen.is_type(R8, Shen.type_cons))
  ? ((R6 = R8[1]),
  (R8 = Shen.call(Shen.fns["shen-lazyderef"], [R8[2], Arg7384_4])),
  ((Shen.empty$question$(R8))
  ? ((R8 = R5[2]),
  (R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  Shen.call(Shen.fns["unify!"], [R6, R4, Arg7384_4, (new Shen.Freeze([R4, R2, R7, R6, R5, R0, R1, R3, R8, Arg7384_3, Arg7384_4, Arg7384_5], function(Arg7386) {
  var Arg7386_0 = Arg7386[0], Arg7386_1 = Arg7386[1], Arg7386_2 = Arg7386[2], Arg7386_3 = Arg7386[3], Arg7386_4 = Arg7386[4], Arg7386_5 = Arg7386[5], Arg7386_6 = Arg7386[6], Arg7386_7 = Arg7386[7], Arg7386_8 = Arg7386[8], Arg7386_9 = Arg7386[9], Arg7386_10 = Arg7386[10], Arg7386_11 = Arg7386[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7386_2, Arg7386_1, Arg7386_10, (new Shen.Freeze([Arg7386_1, Arg7386_2, Arg7386_3, Arg7386_4, Arg7386_5, Arg7386_6, Arg7386_7, Arg7386_8, Arg7386_9, Arg7386_10, Arg7386_11], function(Arg7388) {
  var Arg7388_0 = Arg7388[0], Arg7388_1 = Arg7388[1], Arg7388_2 = Arg7388[2], Arg7388_3 = Arg7388[3], Arg7388_4 = Arg7388[4], Arg7388_5 = Arg7388[5], Arg7388_6 = Arg7388[6], Arg7388_7 = Arg7388[7], Arg7388_8 = Arg7388[8], Arg7388_9 = Arg7388[9], Arg7388_10 = Arg7388[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7388_1, Arg7388_3, Arg7388_9, (new Shen.Freeze([Arg7388_1, Arg7388_2, Arg7388_3, Arg7388_4, Arg7388_5, Arg7388_6, Arg7388_7, Arg7388_8, Arg7388_9, Arg7388_10], function(Arg7390) {
  var Arg7390_0 = Arg7390[0], Arg7390_1 = Arg7390[1], Arg7390_2 = Arg7390[2], Arg7390_3 = Arg7390[3], Arg7390_4 = Arg7390[4], Arg7390_5 = Arg7390[5], Arg7390_6 = Arg7390[6], Arg7390_7 = Arg7390[7], Arg7390_8 = Arg7390[8], Arg7390_9 = Arg7390[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7390_3, Arg7390_8, (new Shen.Freeze([Arg7390_0, Arg7390_1, Arg7390_2, Arg7390_3, Arg7390_4, Arg7390_5, Arg7390_6, Arg7390_7, Arg7390_8, Arg7390_9], function(Arg7392) {
  var Arg7392_0 = Arg7392[0], Arg7392_1 = Arg7392[1], Arg7392_2 = Arg7392[2], Arg7392_3 = Arg7392[3], Arg7392_4 = Arg7392[4], Arg7392_5 = Arg7392[5], Arg7392_6 = Arg7392[6], Arg7392_7 = Arg7392[7], Arg7392_8 = Arg7392[8], Arg7392_9 = Arg7392[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7392_0, Arg7392_1, Arg7392_2, Arg7392_8, (new Shen.Freeze([Arg7392_0, Arg7392_1, Arg7392_2, Arg7392_3, Arg7392_4, Arg7392_5, Arg7392_6, Arg7392_7, Arg7392_8, Arg7392_9], function(Arg7394) {
  var Arg7394_0 = Arg7394[0], Arg7394_1 = Arg7394[1], Arg7394_2 = Arg7394[2], Arg7394_3 = Arg7394[3], Arg7394_4 = Arg7394[4], Arg7394_5 = Arg7394[5], Arg7394_6 = Arg7394[6], Arg7394_7 = Arg7394[7], Arg7394_8 = Arg7394[8], Arg7394_9 = Arg7394[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7394_3, Arg7394_8, (new Shen.Freeze([Arg7394_3, Arg7394_4, Arg7394_5, Arg7394_6, Arg7394_7, Arg7394_8, Arg7394_9], function(Arg7396) {
  var Arg7396_0 = Arg7396[0], Arg7396_1 = Arg7396[1], Arg7396_2 = Arg7396[2], Arg7396_3 = Arg7396[3], Arg7396_4 = Arg7396[4], Arg7396_5 = Arg7396[5], Arg7396_6 = Arg7396[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-patterns"], [Arg7396_1, Arg7396_2, Arg7396_3, Arg7396_4, Arg7396_5, Arg7396_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R8]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R8, [], Arg7384_4]),
  ((R5 = R5[2]),
  (R9 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [R6, R4, Arg7384_4, (new Shen.Freeze([R4, R2, R7, R6, R9, R0, R1, R3, R5, Arg7384_3, Arg7384_4, Arg7384_5, R8, Arg7384_4], function(Arg7398) {
  var Arg7398_0 = Arg7398[0], Arg7398_1 = Arg7398[1], Arg7398_2 = Arg7398[2], Arg7398_3 = Arg7398[3], Arg7398_4 = Arg7398[4], Arg7398_5 = Arg7398[5], Arg7398_6 = Arg7398[6], Arg7398_7 = Arg7398[7], Arg7398_8 = Arg7398[8], Arg7398_9 = Arg7398[9], Arg7398_10 = Arg7398[10], Arg7398_11 = Arg7398[11], Arg7398_12 = Arg7398[12], Arg7398_13 = Arg7398[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7398_2, Arg7398_1, Arg7398_10, (new Shen.Freeze([Arg7398_1, Arg7398_2, Arg7398_3, Arg7398_4, Arg7398_5, Arg7398_6, Arg7398_7, Arg7398_8, Arg7398_9, Arg7398_10, Arg7398_11], function(Arg7400) {
  var Arg7400_0 = Arg7400[0], Arg7400_1 = Arg7400[1], Arg7400_2 = Arg7400[2], Arg7400_3 = Arg7400[3], Arg7400_4 = Arg7400[4], Arg7400_5 = Arg7400[5], Arg7400_6 = Arg7400[6], Arg7400_7 = Arg7400[7], Arg7400_8 = Arg7400[8], Arg7400_9 = Arg7400[9], Arg7400_10 = Arg7400[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7400_1, Arg7400_3, Arg7400_9, (new Shen.Freeze([Arg7400_1, Arg7400_2, Arg7400_3, Arg7400_4, Arg7400_5, Arg7400_6, Arg7400_7, Arg7400_8, Arg7400_9, Arg7400_10], function(Arg7402) {
  var Arg7402_0 = Arg7402[0], Arg7402_1 = Arg7402[1], Arg7402_2 = Arg7402[2], Arg7402_3 = Arg7402[3], Arg7402_4 = Arg7402[4], Arg7402_5 = Arg7402[5], Arg7402_6 = Arg7402[6], Arg7402_7 = Arg7402[7], Arg7402_8 = Arg7402[8], Arg7402_9 = Arg7402[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7402_3, Arg7402_8, (new Shen.Freeze([Arg7402_0, Arg7402_1, Arg7402_2, Arg7402_3, Arg7402_4, Arg7402_5, Arg7402_6, Arg7402_7, Arg7402_8, Arg7402_9], function(Arg7404) {
  var Arg7404_0 = Arg7404[0], Arg7404_1 = Arg7404[1], Arg7404_2 = Arg7404[2], Arg7404_3 = Arg7404[3], Arg7404_4 = Arg7404[4], Arg7404_5 = Arg7404[5], Arg7404_6 = Arg7404[6], Arg7404_7 = Arg7404[7], Arg7404_8 = Arg7404[8], Arg7404_9 = Arg7404[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7404_0, Arg7404_1, Arg7404_2, Arg7404_8, (new Shen.Freeze([Arg7404_0, Arg7404_1, Arg7404_2, Arg7404_3, Arg7404_4, Arg7404_5, Arg7404_6, Arg7404_7, Arg7404_8, Arg7404_9], function(Arg7406) {
  var Arg7406_0 = Arg7406[0], Arg7406_1 = Arg7406[1], Arg7406_2 = Arg7406[2], Arg7406_3 = Arg7406[3], Arg7406_4 = Arg7406[4], Arg7406_5 = Arg7406[5], Arg7406_6 = Arg7406[6], Arg7406_7 = Arg7406[7], Arg7406_8 = Arg7406[8], Arg7406_9 = Arg7406[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7406_3, Arg7406_8, (new Shen.Freeze([Arg7406_3, Arg7406_4, Arg7406_5, Arg7406_6, Arg7406_7, Arg7406_8, Arg7406_9], function(Arg7408) {
  var Arg7408_0 = Arg7408[0], Arg7408_1 = Arg7408[1], Arg7408_2 = Arg7408[2], Arg7408_3 = Arg7408[3], Arg7408_4 = Arg7408[4], Arg7408_5 = Arg7408[5], Arg7408_6 = Arg7408[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-patterns"], [Arg7408_1, Arg7408_2, Arg7408_3, Arg7408_4, Arg7408_5, Arg7408_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R8, Arg7384_4]),
  R7)
  : false)))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R8]))
  ? ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-bindv"], [R8, [Shen.type_cons, R6, []], Arg7384_4]),
  ((R5 = R5[2]),
  (R9 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [R6, R4, Arg7384_4, (new Shen.Freeze([R4, R2, R7, R6, R9, R0, R1, R3, R5, Arg7384_3, Arg7384_4, Arg7384_5, R8, Arg7384_4], function(Arg7410) {
  var Arg7410_0 = Arg7410[0], Arg7410_1 = Arg7410[1], Arg7410_2 = Arg7410[2], Arg7410_3 = Arg7410[3], Arg7410_4 = Arg7410[4], Arg7410_5 = Arg7410[5], Arg7410_6 = Arg7410[6], Arg7410_7 = Arg7410[7], Arg7410_8 = Arg7410[8], Arg7410_9 = Arg7410[9], Arg7410_10 = Arg7410[10], Arg7410_11 = Arg7410[11], Arg7410_12 = Arg7410[12], Arg7410_13 = Arg7410[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7410_2, Arg7410_1, Arg7410_10, (new Shen.Freeze([Arg7410_1, Arg7410_2, Arg7410_3, Arg7410_4, Arg7410_5, Arg7410_6, Arg7410_7, Arg7410_8, Arg7410_9, Arg7410_10, Arg7410_11], function(Arg7412) {
  var Arg7412_0 = Arg7412[0], Arg7412_1 = Arg7412[1], Arg7412_2 = Arg7412[2], Arg7412_3 = Arg7412[3], Arg7412_4 = Arg7412[4], Arg7412_5 = Arg7412[5], Arg7412_6 = Arg7412[6], Arg7412_7 = Arg7412[7], Arg7412_8 = Arg7412[8], Arg7412_9 = Arg7412[9], Arg7412_10 = Arg7412[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7412_1, Arg7412_3, Arg7412_9, (new Shen.Freeze([Arg7412_1, Arg7412_2, Arg7412_3, Arg7412_4, Arg7412_5, Arg7412_6, Arg7412_7, Arg7412_8, Arg7412_9, Arg7412_10], function(Arg7414) {
  var Arg7414_0 = Arg7414[0], Arg7414_1 = Arg7414[1], Arg7414_2 = Arg7414[2], Arg7414_3 = Arg7414[3], Arg7414_4 = Arg7414[4], Arg7414_5 = Arg7414[5], Arg7414_6 = Arg7414[6], Arg7414_7 = Arg7414[7], Arg7414_8 = Arg7414[8], Arg7414_9 = Arg7414[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7414_3, Arg7414_8, (new Shen.Freeze([Arg7414_0, Arg7414_1, Arg7414_2, Arg7414_3, Arg7414_4, Arg7414_5, Arg7414_6, Arg7414_7, Arg7414_8, Arg7414_9], function(Arg7416) {
  var Arg7416_0 = Arg7416[0], Arg7416_1 = Arg7416[1], Arg7416_2 = Arg7416[2], Arg7416_3 = Arg7416[3], Arg7416_4 = Arg7416[4], Arg7416_5 = Arg7416[5], Arg7416_6 = Arg7416[6], Arg7416_7 = Arg7416[7], Arg7416_8 = Arg7416[8], Arg7416_9 = Arg7416[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7416_0, Arg7416_1, Arg7416_2, Arg7416_8, (new Shen.Freeze([Arg7416_0, Arg7416_1, Arg7416_2, Arg7416_3, Arg7416_4, Arg7416_5, Arg7416_6, Arg7416_7, Arg7416_8, Arg7416_9], function(Arg7418) {
  var Arg7418_0 = Arg7418[0], Arg7418_1 = Arg7418[1], Arg7418_2 = Arg7418[2], Arg7418_3 = Arg7418[3], Arg7418_4 = Arg7418[4], Arg7418_5 = Arg7418[5], Arg7418_6 = Arg7418[6], Arg7418_7 = Arg7418[7], Arg7418_8 = Arg7418[8], Arg7418_9 = Arg7418[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7418_3, Arg7418_8, (new Shen.Freeze([Arg7418_3, Arg7418_4, Arg7418_5, Arg7418_6, Arg7418_7, Arg7418_8, Arg7418_9], function(Arg7420) {
  var Arg7420_0 = Arg7420[0], Arg7420_1 = Arg7420[1], Arg7420_2 = Arg7420[2], Arg7420_3 = Arg7420[3], Arg7420_4 = Arg7420[4], Arg7420_5 = Arg7420[5], Arg7420_6 = Arg7420[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-patterns"], [Arg7420_1, Arg7420_2, Arg7420_3, Arg7420_4, Arg7420_5, Arg7420_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R8, Arg7384_4]),
  R7)
  : false)))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R8]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R8, [Shen.type_symbol, ":"], Arg7384_4]),
  ((R6 = Shen.call(Shen.fns["shen-lazyderef"], [R6[2], Arg7384_4])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R9 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen-lazyderef"], [R6[2], Arg7384_4])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R5[2]),
  (R5 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [R9, R4, Arg7384_4, (new Shen.Freeze([R4, R2, R7, R9, R5, R0, R1, R3, R6, Arg7384_3, Arg7384_4, Arg7384_5, R8, Arg7384_4], function(Arg7422) {
  var Arg7422_0 = Arg7422[0], Arg7422_1 = Arg7422[1], Arg7422_2 = Arg7422[2], Arg7422_3 = Arg7422[3], Arg7422_4 = Arg7422[4], Arg7422_5 = Arg7422[5], Arg7422_6 = Arg7422[6], Arg7422_7 = Arg7422[7], Arg7422_8 = Arg7422[8], Arg7422_9 = Arg7422[9], Arg7422_10 = Arg7422[10], Arg7422_11 = Arg7422[11], Arg7422_12 = Arg7422[12], Arg7422_13 = Arg7422[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7422_2, Arg7422_1, Arg7422_10, (new Shen.Freeze([Arg7422_1, Arg7422_2, Arg7422_3, Arg7422_4, Arg7422_5, Arg7422_6, Arg7422_7, Arg7422_8, Arg7422_9, Arg7422_10, Arg7422_11], function(Arg7424) {
  var Arg7424_0 = Arg7424[0], Arg7424_1 = Arg7424[1], Arg7424_2 = Arg7424[2], Arg7424_3 = Arg7424[3], Arg7424_4 = Arg7424[4], Arg7424_5 = Arg7424[5], Arg7424_6 = Arg7424[6], Arg7424_7 = Arg7424[7], Arg7424_8 = Arg7424[8], Arg7424_9 = Arg7424[9], Arg7424_10 = Arg7424[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7424_1, Arg7424_3, Arg7424_9, (new Shen.Freeze([Arg7424_1, Arg7424_2, Arg7424_3, Arg7424_4, Arg7424_5, Arg7424_6, Arg7424_7, Arg7424_8, Arg7424_9, Arg7424_10], function(Arg7426) {
  var Arg7426_0 = Arg7426[0], Arg7426_1 = Arg7426[1], Arg7426_2 = Arg7426[2], Arg7426_3 = Arg7426[3], Arg7426_4 = Arg7426[4], Arg7426_5 = Arg7426[5], Arg7426_6 = Arg7426[6], Arg7426_7 = Arg7426[7], Arg7426_8 = Arg7426[8], Arg7426_9 = Arg7426[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7426_3, Arg7426_8, (new Shen.Freeze([Arg7426_0, Arg7426_1, Arg7426_2, Arg7426_3, Arg7426_4, Arg7426_5, Arg7426_6, Arg7426_7, Arg7426_8, Arg7426_9], function(Arg7428) {
  var Arg7428_0 = Arg7428[0], Arg7428_1 = Arg7428[1], Arg7428_2 = Arg7428[2], Arg7428_3 = Arg7428[3], Arg7428_4 = Arg7428[4], Arg7428_5 = Arg7428[5], Arg7428_6 = Arg7428[6], Arg7428_7 = Arg7428[7], Arg7428_8 = Arg7428[8], Arg7428_9 = Arg7428[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7428_0, Arg7428_1, Arg7428_2, Arg7428_8, (new Shen.Freeze([Arg7428_0, Arg7428_1, Arg7428_2, Arg7428_3, Arg7428_4, Arg7428_5, Arg7428_6, Arg7428_7, Arg7428_8, Arg7428_9], function(Arg7430) {
  var Arg7430_0 = Arg7430[0], Arg7430_1 = Arg7430[1], Arg7430_2 = Arg7430[2], Arg7430_3 = Arg7430[3], Arg7430_4 = Arg7430[4], Arg7430_5 = Arg7430[5], Arg7430_6 = Arg7430[6], Arg7430_7 = Arg7430[7], Arg7430_8 = Arg7430[8], Arg7430_9 = Arg7430[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7430_3, Arg7430_8, (new Shen.Freeze([Arg7430_3, Arg7430_4, Arg7430_5, Arg7430_6, Arg7430_7, Arg7430_8, Arg7430_9], function(Arg7432) {
  var Arg7432_0 = Arg7432[0], Arg7432_1 = Arg7432[1], Arg7432_2 = Arg7432[2], Arg7432_3 = Arg7432[3], Arg7432_4 = Arg7432[4], Arg7432_5 = Arg7432[5], Arg7432_6 = Arg7432[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-patterns"], [Arg7432_1, Arg7432_2, Arg7432_3, Arg7432_4, Arg7432_5, Arg7432_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R6, [], Arg7384_4]),
  ((R5 = R5[2]),
  (R10 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R9 = Shen.call(Shen.fns["unify!"], [R9, R4, Arg7384_4, (new Shen.Freeze([R4, R2, R7, R9, R10, R0, R1, R3, R5, Arg7384_3, Arg7384_4, Arg7384_5, R6, Arg7384_4, R8, Arg7384_4], function(Arg7434) {
  var Arg7434_0 = Arg7434[0], Arg7434_1 = Arg7434[1], Arg7434_2 = Arg7434[2], Arg7434_3 = Arg7434[3], Arg7434_4 = Arg7434[4], Arg7434_5 = Arg7434[5], Arg7434_6 = Arg7434[6], Arg7434_7 = Arg7434[7], Arg7434_8 = Arg7434[8], Arg7434_9 = Arg7434[9], Arg7434_10 = Arg7434[10], Arg7434_11 = Arg7434[11], Arg7434_12 = Arg7434[12], Arg7434_13 = Arg7434[13], Arg7434_14 = Arg7434[14], Arg7434_15 = Arg7434[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7434_2, Arg7434_1, Arg7434_10, (new Shen.Freeze([Arg7434_1, Arg7434_2, Arg7434_3, Arg7434_4, Arg7434_5, Arg7434_6, Arg7434_7, Arg7434_8, Arg7434_9, Arg7434_10, Arg7434_11], function(Arg7436) {
  var Arg7436_0 = Arg7436[0], Arg7436_1 = Arg7436[1], Arg7436_2 = Arg7436[2], Arg7436_3 = Arg7436[3], Arg7436_4 = Arg7436[4], Arg7436_5 = Arg7436[5], Arg7436_6 = Arg7436[6], Arg7436_7 = Arg7436[7], Arg7436_8 = Arg7436[8], Arg7436_9 = Arg7436[9], Arg7436_10 = Arg7436[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7436_1, Arg7436_3, Arg7436_9, (new Shen.Freeze([Arg7436_1, Arg7436_2, Arg7436_3, Arg7436_4, Arg7436_5, Arg7436_6, Arg7436_7, Arg7436_8, Arg7436_9, Arg7436_10], function(Arg7438) {
  var Arg7438_0 = Arg7438[0], Arg7438_1 = Arg7438[1], Arg7438_2 = Arg7438[2], Arg7438_3 = Arg7438[3], Arg7438_4 = Arg7438[4], Arg7438_5 = Arg7438[5], Arg7438_6 = Arg7438[6], Arg7438_7 = Arg7438[7], Arg7438_8 = Arg7438[8], Arg7438_9 = Arg7438[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7438_3, Arg7438_8, (new Shen.Freeze([Arg7438_0, Arg7438_1, Arg7438_2, Arg7438_3, Arg7438_4, Arg7438_5, Arg7438_6, Arg7438_7, Arg7438_8, Arg7438_9], function(Arg7440) {
  var Arg7440_0 = Arg7440[0], Arg7440_1 = Arg7440[1], Arg7440_2 = Arg7440[2], Arg7440_3 = Arg7440[3], Arg7440_4 = Arg7440[4], Arg7440_5 = Arg7440[5], Arg7440_6 = Arg7440[6], Arg7440_7 = Arg7440[7], Arg7440_8 = Arg7440[8], Arg7440_9 = Arg7440[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7440_0, Arg7440_1, Arg7440_2, Arg7440_8, (new Shen.Freeze([Arg7440_0, Arg7440_1, Arg7440_2, Arg7440_3, Arg7440_4, Arg7440_5, Arg7440_6, Arg7440_7, Arg7440_8, Arg7440_9], function(Arg7442) {
  var Arg7442_0 = Arg7442[0], Arg7442_1 = Arg7442[1], Arg7442_2 = Arg7442[2], Arg7442_3 = Arg7442[3], Arg7442_4 = Arg7442[4], Arg7442_5 = Arg7442[5], Arg7442_6 = Arg7442[6], Arg7442_7 = Arg7442[7], Arg7442_8 = Arg7442[8], Arg7442_9 = Arg7442[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7442_3, Arg7442_8, (new Shen.Freeze([Arg7442_3, Arg7442_4, Arg7442_5, Arg7442_6, Arg7442_7, Arg7442_8, Arg7442_9], function(Arg7444) {
  var Arg7444_0 = Arg7444[0], Arg7444_1 = Arg7444[1], Arg7444_2 = Arg7444[2], Arg7444_3 = Arg7444[3], Arg7444_4 = Arg7444[4], Arg7444_5 = Arg7444[5], Arg7444_6 = Arg7444[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-patterns"], [Arg7444_1, Arg7444_2, Arg7444_3, Arg7444_4, Arg7444_5, Arg7444_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R6, Arg7384_4]),
  (R7 = R9))
  : (R7 = false))))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R6]))
  ? ((R9 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-bindv"], [R6, [Shen.type_cons, R9, []], Arg7384_4]),
  ((R5 = R5[2]),
  (R10 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R9 = Shen.call(Shen.fns["unify!"], [R9, R4, Arg7384_4, (new Shen.Freeze([R4, R2, R7, R9, R10, R0, R1, R3, R5, Arg7384_3, Arg7384_4, Arg7384_5, R6, Arg7384_4, R8, Arg7384_4], function(Arg7446) {
  var Arg7446_0 = Arg7446[0], Arg7446_1 = Arg7446[1], Arg7446_2 = Arg7446[2], Arg7446_3 = Arg7446[3], Arg7446_4 = Arg7446[4], Arg7446_5 = Arg7446[5], Arg7446_6 = Arg7446[6], Arg7446_7 = Arg7446[7], Arg7446_8 = Arg7446[8], Arg7446_9 = Arg7446[9], Arg7446_10 = Arg7446[10], Arg7446_11 = Arg7446[11], Arg7446_12 = Arg7446[12], Arg7446_13 = Arg7446[13], Arg7446_14 = Arg7446[14], Arg7446_15 = Arg7446[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7446_2, Arg7446_1, Arg7446_10, (new Shen.Freeze([Arg7446_1, Arg7446_2, Arg7446_3, Arg7446_4, Arg7446_5, Arg7446_6, Arg7446_7, Arg7446_8, Arg7446_9, Arg7446_10, Arg7446_11], function(Arg7448) {
  var Arg7448_0 = Arg7448[0], Arg7448_1 = Arg7448[1], Arg7448_2 = Arg7448[2], Arg7448_3 = Arg7448[3], Arg7448_4 = Arg7448[4], Arg7448_5 = Arg7448[5], Arg7448_6 = Arg7448[6], Arg7448_7 = Arg7448[7], Arg7448_8 = Arg7448[8], Arg7448_9 = Arg7448[9], Arg7448_10 = Arg7448[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7448_1, Arg7448_3, Arg7448_9, (new Shen.Freeze([Arg7448_1, Arg7448_2, Arg7448_3, Arg7448_4, Arg7448_5, Arg7448_6, Arg7448_7, Arg7448_8, Arg7448_9, Arg7448_10], function(Arg7450) {
  var Arg7450_0 = Arg7450[0], Arg7450_1 = Arg7450[1], Arg7450_2 = Arg7450[2], Arg7450_3 = Arg7450[3], Arg7450_4 = Arg7450[4], Arg7450_5 = Arg7450[5], Arg7450_6 = Arg7450[6], Arg7450_7 = Arg7450[7], Arg7450_8 = Arg7450[8], Arg7450_9 = Arg7450[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7450_3, Arg7450_8, (new Shen.Freeze([Arg7450_0, Arg7450_1, Arg7450_2, Arg7450_3, Arg7450_4, Arg7450_5, Arg7450_6, Arg7450_7, Arg7450_8, Arg7450_9], function(Arg7452) {
  var Arg7452_0 = Arg7452[0], Arg7452_1 = Arg7452[1], Arg7452_2 = Arg7452[2], Arg7452_3 = Arg7452[3], Arg7452_4 = Arg7452[4], Arg7452_5 = Arg7452[5], Arg7452_6 = Arg7452[6], Arg7452_7 = Arg7452[7], Arg7452_8 = Arg7452[8], Arg7452_9 = Arg7452[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7452_0, Arg7452_1, Arg7452_2, Arg7452_8, (new Shen.Freeze([Arg7452_0, Arg7452_1, Arg7452_2, Arg7452_3, Arg7452_4, Arg7452_5, Arg7452_6, Arg7452_7, Arg7452_8, Arg7452_9], function(Arg7454) {
  var Arg7454_0 = Arg7454[0], Arg7454_1 = Arg7454[1], Arg7454_2 = Arg7454[2], Arg7454_3 = Arg7454[3], Arg7454_4 = Arg7454[4], Arg7454_5 = Arg7454[5], Arg7454_6 = Arg7454[6], Arg7454_7 = Arg7454[7], Arg7454_8 = Arg7454[8], Arg7454_9 = Arg7454[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7454_3, Arg7454_8, (new Shen.Freeze([Arg7454_3, Arg7454_4, Arg7454_5, Arg7454_6, Arg7454_7, Arg7454_8, Arg7454_9], function(Arg7456) {
  var Arg7456_0 = Arg7456[0], Arg7456_1 = Arg7456[1], Arg7456_2 = Arg7456[2], Arg7456_3 = Arg7456[3], Arg7456_4 = Arg7456[4], Arg7456_5 = Arg7456[5], Arg7456_6 = Arg7456[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-patterns"], [Arg7456_1, Arg7456_2, Arg7456_3, Arg7456_4, Arg7456_5, Arg7456_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R6, Arg7384_4]),
  (R7 = R9))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen-unbindv"], [R8, Arg7384_4]),
  R7)
  : false)))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R6]))
  ? ((R8 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-bindv"], [R6, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R8, []]], Arg7384_4]),
  ((R5 = R5[2]),
  (R9 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R8 = Shen.call(Shen.fns["unify!"], [R8, R4, Arg7384_4, (new Shen.Freeze([R4, R2, R7, R8, R9, R0, R1, R3, R5, Arg7384_3, Arg7384_4, Arg7384_5, R6, Arg7384_4], function(Arg7458) {
  var Arg7458_0 = Arg7458[0], Arg7458_1 = Arg7458[1], Arg7458_2 = Arg7458[2], Arg7458_3 = Arg7458[3], Arg7458_4 = Arg7458[4], Arg7458_5 = Arg7458[5], Arg7458_6 = Arg7458[6], Arg7458_7 = Arg7458[7], Arg7458_8 = Arg7458[8], Arg7458_9 = Arg7458[9], Arg7458_10 = Arg7458[10], Arg7458_11 = Arg7458[11], Arg7458_12 = Arg7458[12], Arg7458_13 = Arg7458[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7458_2, Arg7458_1, Arg7458_10, (new Shen.Freeze([Arg7458_1, Arg7458_2, Arg7458_3, Arg7458_4, Arg7458_5, Arg7458_6, Arg7458_7, Arg7458_8, Arg7458_9, Arg7458_10, Arg7458_11], function(Arg7460) {
  var Arg7460_0 = Arg7460[0], Arg7460_1 = Arg7460[1], Arg7460_2 = Arg7460[2], Arg7460_3 = Arg7460[3], Arg7460_4 = Arg7460[4], Arg7460_5 = Arg7460[5], Arg7460_6 = Arg7460[6], Arg7460_7 = Arg7460[7], Arg7460_8 = Arg7460[8], Arg7460_9 = Arg7460[9], Arg7460_10 = Arg7460[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7460_1, Arg7460_3, Arg7460_9, (new Shen.Freeze([Arg7460_1, Arg7460_2, Arg7460_3, Arg7460_4, Arg7460_5, Arg7460_6, Arg7460_7, Arg7460_8, Arg7460_9, Arg7460_10], function(Arg7462) {
  var Arg7462_0 = Arg7462[0], Arg7462_1 = Arg7462[1], Arg7462_2 = Arg7462[2], Arg7462_3 = Arg7462[3], Arg7462_4 = Arg7462[4], Arg7462_5 = Arg7462[5], Arg7462_6 = Arg7462[6], Arg7462_7 = Arg7462[7], Arg7462_8 = Arg7462[8], Arg7462_9 = Arg7462[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7462_3, Arg7462_8, (new Shen.Freeze([Arg7462_0, Arg7462_1, Arg7462_2, Arg7462_3, Arg7462_4, Arg7462_5, Arg7462_6, Arg7462_7, Arg7462_8, Arg7462_9], function(Arg7464) {
  var Arg7464_0 = Arg7464[0], Arg7464_1 = Arg7464[1], Arg7464_2 = Arg7464[2], Arg7464_3 = Arg7464[3], Arg7464_4 = Arg7464[4], Arg7464_5 = Arg7464[5], Arg7464_6 = Arg7464[6], Arg7464_7 = Arg7464[7], Arg7464_8 = Arg7464[8], Arg7464_9 = Arg7464[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7464_0, Arg7464_1, Arg7464_2, Arg7464_8, (new Shen.Freeze([Arg7464_0, Arg7464_1, Arg7464_2, Arg7464_3, Arg7464_4, Arg7464_5, Arg7464_6, Arg7464_7, Arg7464_8, Arg7464_9], function(Arg7466) {
  var Arg7466_0 = Arg7466[0], Arg7466_1 = Arg7466[1], Arg7466_2 = Arg7466[2], Arg7466_3 = Arg7466[3], Arg7466_4 = Arg7466[4], Arg7466_5 = Arg7466[5], Arg7466_6 = Arg7466[6], Arg7466_7 = Arg7466[7], Arg7466_8 = Arg7466[8], Arg7466_9 = Arg7466[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7466_3, Arg7466_8, (new Shen.Freeze([Arg7466_3, Arg7466_4, Arg7466_5, Arg7466_6, Arg7466_7, Arg7466_8, Arg7466_9], function(Arg7468) {
  var Arg7468_0 = Arg7468[0], Arg7468_1 = Arg7468[1], Arg7468_2 = Arg7468[2], Arg7468_3 = Arg7468[3], Arg7468_4 = Arg7468[4], Arg7468_5 = Arg7468[5], Arg7468_6 = Arg7468[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-patterns"], [Arg7468_1, Arg7468_2, Arg7468_3, Arg7468_4, Arg7468_5, Arg7468_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R6, Arg7384_4]),
  R8)
  : false)))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R6]))
  ? ((R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  (R8 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-bindv"], [R6, [Shen.type_cons, R7, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R8, []]]], Arg7384_4]),
  ((R5 = R5[2]),
  (R9 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R8 = Shen.call(Shen.fns["unify!"], [R8, R4, Arg7384_4, (new Shen.Freeze([R4, R2, R7, R8, R9, R0, R1, R3, R5, Arg7384_3, Arg7384_4, Arg7384_5, R6, Arg7384_4], function(Arg7470) {
  var Arg7470_0 = Arg7470[0], Arg7470_1 = Arg7470[1], Arg7470_2 = Arg7470[2], Arg7470_3 = Arg7470[3], Arg7470_4 = Arg7470[4], Arg7470_5 = Arg7470[5], Arg7470_6 = Arg7470[6], Arg7470_7 = Arg7470[7], Arg7470_8 = Arg7470[8], Arg7470_9 = Arg7470[9], Arg7470_10 = Arg7470[10], Arg7470_11 = Arg7470[11], Arg7470_12 = Arg7470[12], Arg7470_13 = Arg7470[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7470_2, Arg7470_1, Arg7470_10, (new Shen.Freeze([Arg7470_1, Arg7470_2, Arg7470_3, Arg7470_4, Arg7470_5, Arg7470_6, Arg7470_7, Arg7470_8, Arg7470_9, Arg7470_10, Arg7470_11], function(Arg7472) {
  var Arg7472_0 = Arg7472[0], Arg7472_1 = Arg7472[1], Arg7472_2 = Arg7472[2], Arg7472_3 = Arg7472[3], Arg7472_4 = Arg7472[4], Arg7472_5 = Arg7472[5], Arg7472_6 = Arg7472[6], Arg7472_7 = Arg7472[7], Arg7472_8 = Arg7472[8], Arg7472_9 = Arg7472[9], Arg7472_10 = Arg7472[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7472_1, Arg7472_3, Arg7472_9, (new Shen.Freeze([Arg7472_1, Arg7472_2, Arg7472_3, Arg7472_4, Arg7472_5, Arg7472_6, Arg7472_7, Arg7472_8, Arg7472_9, Arg7472_10], function(Arg7474) {
  var Arg7474_0 = Arg7474[0], Arg7474_1 = Arg7474[1], Arg7474_2 = Arg7474[2], Arg7474_3 = Arg7474[3], Arg7474_4 = Arg7474[4], Arg7474_5 = Arg7474[5], Arg7474_6 = Arg7474[6], Arg7474_7 = Arg7474[7], Arg7474_8 = Arg7474[8], Arg7474_9 = Arg7474[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7474_3, Arg7474_8, (new Shen.Freeze([Arg7474_0, Arg7474_1, Arg7474_2, Arg7474_3, Arg7474_4, Arg7474_5, Arg7474_6, Arg7474_7, Arg7474_8, Arg7474_9], function(Arg7476) {
  var Arg7476_0 = Arg7476[0], Arg7476_1 = Arg7476[1], Arg7476_2 = Arg7476[2], Arg7476_3 = Arg7476[3], Arg7476_4 = Arg7476[4], Arg7476_5 = Arg7476[5], Arg7476_6 = Arg7476[6], Arg7476_7 = Arg7476[7], Arg7476_8 = Arg7476[8], Arg7476_9 = Arg7476[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7476_0, Arg7476_1, Arg7476_2, Arg7476_8, (new Shen.Freeze([Arg7476_0, Arg7476_1, Arg7476_2, Arg7476_3, Arg7476_4, Arg7476_5, Arg7476_6, Arg7476_7, Arg7476_8, Arg7476_9], function(Arg7478) {
  var Arg7478_0 = Arg7478[0], Arg7478_1 = Arg7478[1], Arg7478_2 = Arg7478[2], Arg7478_3 = Arg7478[3], Arg7478_4 = Arg7478[4], Arg7478_5 = Arg7478[5], Arg7478_6 = Arg7478[6], Arg7478_7 = Arg7478[7], Arg7478_8 = Arg7478[8], Arg7478_9 = Arg7478[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7478_3, Arg7478_8, (new Shen.Freeze([Arg7478_3, Arg7478_4, Arg7478_5, Arg7478_6, Arg7478_7, Arg7478_8, Arg7478_9], function(Arg7480) {
  var Arg7480_0 = Arg7480[0], Arg7480_1 = Arg7480[1], Arg7480_2 = Arg7480[2], Arg7480_3 = Arg7480[3], Arg7480_4 = Arg7480[4], Arg7480_5 = Arg7480[5], Arg7480_6 = Arg7480[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-patterns"], [Arg7480_1, Arg7480_2, Arg7480_3, Arg7480_4, Arg7480_5, Arg7480_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R6, Arg7384_4]),
  R8)
  : false)))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R5]))
  ? ((R6 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  (R7 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  (R8 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-bindv"], [R5, [Shen.type_cons, [Shen.type_cons, R6, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R7, []]]], R8], Arg7384_4]),
  ((R9 = Shen.call(Shen.fns["shen-newpv"], [Arg7384_4])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R8 = Shen.call(Shen.fns["unify!"], [R7, R4, Arg7384_4, (new Shen.Freeze([R4, R2, R6, R7, R9, R0, R1, R3, R8, Arg7384_3, Arg7384_4, Arg7384_5, R5, Arg7384_4], function(Arg7482) {
  var Arg7482_0 = Arg7482[0], Arg7482_1 = Arg7482[1], Arg7482_2 = Arg7482[2], Arg7482_3 = Arg7482[3], Arg7482_4 = Arg7482[4], Arg7482_5 = Arg7482[5], Arg7482_6 = Arg7482[6], Arg7482_7 = Arg7482[7], Arg7482_8 = Arg7482[8], Arg7482_9 = Arg7482[9], Arg7482_10 = Arg7482[10], Arg7482_11 = Arg7482[11], Arg7482_12 = Arg7482[12], Arg7482_13 = Arg7482[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg7482_2, Arg7482_1, Arg7482_10, (new Shen.Freeze([Arg7482_1, Arg7482_2, Arg7482_3, Arg7482_4, Arg7482_5, Arg7482_6, Arg7482_7, Arg7482_8, Arg7482_9, Arg7482_10, Arg7482_11], function(Arg7484) {
  var Arg7484_0 = Arg7484[0], Arg7484_1 = Arg7484[1], Arg7484_2 = Arg7484[2], Arg7484_3 = Arg7484[3], Arg7484_4 = Arg7484[4], Arg7484_5 = Arg7484[5], Arg7484_6 = Arg7484[6], Arg7484_7 = Arg7484[7], Arg7484_8 = Arg7484[8], Arg7484_9 = Arg7484[9], Arg7484_10 = Arg7484[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7484_1, Arg7484_3, Arg7484_9, (new Shen.Freeze([Arg7484_1, Arg7484_2, Arg7484_3, Arg7484_4, Arg7484_5, Arg7484_6, Arg7484_7, Arg7484_8, Arg7484_9, Arg7484_10], function(Arg7486) {
  var Arg7486_0 = Arg7486[0], Arg7486_1 = Arg7486[1], Arg7486_2 = Arg7486[2], Arg7486_3 = Arg7486[3], Arg7486_4 = Arg7486[4], Arg7486_5 = Arg7486[5], Arg7486_6 = Arg7486[6], Arg7486_7 = Arg7486[7], Arg7486_8 = Arg7486[8], Arg7486_9 = Arg7486[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7486_3, Arg7486_8, (new Shen.Freeze([Arg7486_0, Arg7486_1, Arg7486_2, Arg7486_3, Arg7486_4, Arg7486_5, Arg7486_6, Arg7486_7, Arg7486_8, Arg7486_9], function(Arg7488) {
  var Arg7488_0 = Arg7488[0], Arg7488_1 = Arg7488[1], Arg7488_2 = Arg7488[2], Arg7488_3 = Arg7488[3], Arg7488_4 = Arg7488[4], Arg7488_5 = Arg7488[5], Arg7488_6 = Arg7488[6], Arg7488_7 = Arg7488[7], Arg7488_8 = Arg7488[8], Arg7488_9 = Arg7488[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-th*"], [Arg7488_0, Arg7488_1, Arg7488_2, Arg7488_8, (new Shen.Freeze([Arg7488_0, Arg7488_1, Arg7488_2, Arg7488_3, Arg7488_4, Arg7488_5, Arg7488_6, Arg7488_7, Arg7488_8, Arg7488_9], function(Arg7490) {
  var Arg7490_0 = Arg7490[0], Arg7490_1 = Arg7490[1], Arg7490_2 = Arg7490[2], Arg7490_3 = Arg7490[3], Arg7490_4 = Arg7490[4], Arg7490_5 = Arg7490[5], Arg7490_6 = Arg7490[6], Arg7490_7 = Arg7490[7], Arg7490_8 = Arg7490[8], Arg7490_9 = Arg7490[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7490_3, Arg7490_8, (new Shen.Freeze([Arg7490_3, Arg7490_4, Arg7490_5, Arg7490_6, Arg7490_7, Arg7490_8, Arg7490_9], function(Arg7492) {
  var Arg7492_0 = Arg7492[0], Arg7492_1 = Arg7492[1], Arg7492_2 = Arg7492[2], Arg7492_3 = Arg7492[3], Arg7492_4 = Arg7492[4], Arg7492_5 = Arg7492[5], Arg7492_6 = Arg7492[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-patterns"], [Arg7492_1, Arg7492_2, Arg7492_3, Arg7492_4, Arg7492_5, Arg7492_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen-unbindv"], [R5, Arg7384_4]),
  R8)
  : false)))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))},
  6,
  [],
  "shen-t*-patterns"];






Shen.fns["shen-t*-assume"] = [Shen.type_func,
  function shen_user_lambda7495(Arg7494) {
  if (Arg7494.length < 4) return [Shen.type_func, shen_user_lambda7495, 4, Arg7494];
  var Arg7494_0 = Arg7494[0], Arg7494_1 = Arg7494[1], Arg7494_2 = Arg7494[2], Arg7494_3 = Arg7494[3];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen-catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7494_0, Arg7494_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen-newpv"], [Arg7494_2])),
  (R4 = Shen.call(Shen.fns["shen-newpv"], [Arg7494_2])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["cut"], [R0, Arg7494_2, (new Shen.Freeze([R0, R2, R1, Arg7494_1, R3, R4, Arg7494_2, Arg7494_3, Arg7494_0, Arg7494_1, Arg7494_3, Arg7494_2], function(Arg7496) {
  var Arg7496_0 = Arg7496[0], Arg7496_1 = Arg7496[1], Arg7496_2 = Arg7496[2], Arg7496_3 = Arg7496[3], Arg7496_4 = Arg7496[4], Arg7496_5 = Arg7496[5], Arg7496_6 = Arg7496[6], Arg7496_7 = Arg7496[7], Arg7496_8 = Arg7496[8], Arg7496_9 = Arg7496[9], Arg7496_10 = Arg7496[10], Arg7496_11 = Arg7496[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7496_1, Arg7496_4, Arg7496_6, (new Shen.Freeze([Arg7496_1, Arg7496_2, Arg7496_3, Arg7496_4, Arg7496_5, Arg7496_6, Arg7496_7], function(Arg7498) {
  var Arg7498_0 = Arg7498[0], Arg7498_1 = Arg7498[1], Arg7498_2 = Arg7498[2], Arg7498_3 = Arg7498[3], Arg7498_4 = Arg7498[4], Arg7498_5 = Arg7498[5], Arg7498_6 = Arg7498[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-t*-assume"], [Arg7498_1, Arg7498_4, Arg7498_5, (new Shen.Freeze([Arg7498_1, Arg7498_2, Arg7498_3, Arg7498_4, Arg7498_5, Arg7498_6], function(Arg7500) {
  var Arg7500_0 = Arg7500[0], Arg7500_1 = Arg7500[1], Arg7500_2 = Arg7500[2], Arg7500_3 = Arg7500[3], Arg7500_4 = Arg7500[4], Arg7500_5 = Arg7500[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7500_1, Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7500_2, Arg7500_4]), Shen.call(Shen.fns["shen-lazyderef"], [Arg7500_3, Arg7500_4])]), Arg7500_4, Arg7500_5]);});})}))]);});})}))]);});})}))])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen-newpv"], [Arg7494_2])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen-placeholder?"], [Shen.call(Shen.fns["shen-lazyderef"], [Arg7494_0, Arg7494_2])]), Arg7494_2, (new Shen.Freeze([Arg7494_1, Arg7494_0, R0, Arg7494_2, Arg7494_3, Arg7494_1, Arg7494_3, Arg7494_2], function(Arg7502) {
  var Arg7502_0 = Arg7502[0], Arg7502_1 = Arg7502[1], Arg7502_2 = Arg7502[2], Arg7502_3 = Arg7502[3], Arg7502_4 = Arg7502[4], Arg7502_5 = Arg7502[5], Arg7502_6 = Arg7502[6], Arg7502_7 = Arg7502[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7502_0, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [Arg7502_1, Arg7502_3]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [Arg7502_2, Arg7502_3]), []]]], []], Arg7502_3, Arg7502_4]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7494_1, Arg7494_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  Shen.unwind_tail(Shen.thaw(Arg7494_3)))
  : ((Shen.call(Shen.fns["shen-pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen-bindv"], [R0, [], Arg7494_2]),
  (Shen.call(Shen.fns["shen-incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg7494_3)))),
  Shen.call(Shen.fns["shen-unbindv"], [R0, Arg7494_2]),
  R1)
  : false)))
  : R0))
  : R0))]);}))},
  4,
  [],
  "shen-t*-assume"];






Shen.fns["shen-conc"] = [Shen.type_func,
  function shen_user_lambda7505(Arg7504) {
  if (Arg7504.length < 5) return [Shen.type_func, shen_user_lambda7505, 5, Arg7504];
  var Arg7504_0 = Arg7504[0], Arg7504_1 = Arg7504[1], Arg7504_2 = Arg7504[2], Arg7504_3 = Arg7504[3], Arg7504_4 = Arg7504[4];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7504_0, Arg7504_3])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg7504_2, Shen.call(Shen.fns["shen-lazyderef"], [Arg7504_1, Arg7504_3]), Arg7504_3, Arg7504_4])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen-lazyderef"], [Arg7504_0, Arg7504_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen-newpv"], [Arg7504_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7504_2, [Shen.type_cons, Shen.call(Shen.fns["shen-lazyderef"], [R1, Arg7504_3]), Shen.call(Shen.fns["shen-lazyderef"], [R2, Arg7504_3])], Arg7504_3, (new Shen.Freeze([Arg7504_2, R1, R0, Arg7504_1, R2, Arg7504_3, Arg7504_4], function(Arg7506) {
  var Arg7506_0 = Arg7506[0], Arg7506_1 = Arg7506[1], Arg7506_2 = Arg7506[2], Arg7506_3 = Arg7506[3], Arg7506_4 = Arg7506[4], Arg7506_5 = Arg7506[5], Arg7506_6 = Arg7506[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-conc"], [Arg7506_2, Arg7506_3, Arg7506_4, Arg7506_5, Arg7506_6]);});})}))]);}))
  : false))
  : R0))},
  5,
  [],
  "shen-conc"];






Shen.fns["shen-findallhelp"] = [Shen.type_func,
  function shen_user_lambda7509(Arg7508) {
  if (Arg7508.length < 6) return [Shen.type_func, shen_user_lambda7509, 6, Arg7508];
  var Arg7508_0 = Arg7508[0], Arg7508_1 = Arg7508[1], Arg7508_2 = Arg7508[2], Arg7508_3 = Arg7508[3], Arg7508_4 = Arg7508[4], Arg7508_5 = Arg7508[5];
  var R0;
  return ((Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [Arg7508_1, Arg7508_4, (new Shen.Freeze([Arg7508_1, Arg7508_0, Arg7508_2, Arg7508_3, Arg7508_4, Arg7508_5], function(Arg7510) {
  var Arg7510_0 = Arg7510[0], Arg7510_1 = Arg7510[1], Arg7510_2 = Arg7510[2], Arg7510_3 = Arg7510[3], Arg7510_4 = Arg7510[4], Arg7510_5 = Arg7510[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-remember"], [Arg7510_3, Arg7510_1, Arg7510_4, (new Shen.Freeze([Arg7510_3, Arg7510_1, Arg7510_4, Arg7510_5], function(Arg7512) {
  var Arg7512_0 = Arg7512[0], Arg7512_1 = Arg7512[1], Arg7512_2 = Arg7512[2], Arg7512_3 = Arg7512[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg7512_2, Arg7512_3]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7508_2, (Shen.globals[Shen.call(Shen.fns["shen-lazyderef"], [Arg7508_3, Arg7508_4])[1]]), Arg7508_4, Arg7508_5]);}))
  : R0))},
  6,
  [],
  "shen-findallhelp"];






Shen.fns["shen-remember"] = [Shen.type_func,
  function shen_user_lambda7515(Arg7514) {
  if (Arg7514.length < 4) return [Shen.type_func, shen_user_lambda7515, 4, Arg7514];
  var Arg7514_0 = Arg7514[0], Arg7514_1 = Arg7514[1], Arg7514_2 = Arg7514[2], Arg7514_3 = Arg7514[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-newpv"], [Arg7514_2])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, (Shen.globals[Shen.call(Shen.fns["shen-deref"], [Arg7514_0, Arg7514_2])[1]] = [Shen.type_cons, Shen.call(Shen.fns["shen-deref"], [Arg7514_1, Arg7514_2]), (Shen.globals[Shen.call(Shen.fns["shen-deref"], [Arg7514_0, Arg7514_2])[1]])]), Arg7514_2, Arg7514_3]);}))},
  4,
  [],
  "shen-remember"];






Shen.fns["findall"] = [Shen.type_func,
  function shen_user_lambda7517(Arg7516) {
  if (Arg7516.length < 5) return [Shen.type_func, shen_user_lambda7517, 5, Arg7516];
  var Arg7516_0 = Arg7516[0], Arg7516_1 = Arg7516[1], Arg7516_2 = Arg7516[2], Arg7516_3 = Arg7516[3], Arg7516_4 = Arg7516[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen-newpv"], [Arg7516_3])),
  (R1 = Shen.call(Shen.fns["shen-newpv"], [Arg7516_3])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R1, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "a"]]), Arg7516_3, (new Shen.Freeze([R0, Arg7516_0, Arg7516_1, Arg7516_2, R1, Arg7516_3, Arg7516_4], function(Arg7518) {
  var Arg7518_0 = Arg7518[0], Arg7518_1 = Arg7518[1], Arg7518_2 = Arg7518[2], Arg7518_3 = Arg7518[3], Arg7518_4 = Arg7518[4], Arg7518_5 = Arg7518[5], Arg7518_6 = Arg7518[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7518_0, (Shen.globals[Shen.call(Shen.fns["shen-lazyderef"], [Arg7518_4, Arg7518_5])[1]] = []), Arg7518_5, (new Shen.Freeze([Arg7518_0, Arg7518_1, Arg7518_2, Arg7518_3, Arg7518_4, Arg7518_5, Arg7518_6], function(Arg7520) {
  var Arg7520_0 = Arg7520[0], Arg7520_1 = Arg7520[1], Arg7520_2 = Arg7520[2], Arg7520_3 = Arg7520[3], Arg7520_4 = Arg7520[4], Arg7520_5 = Arg7520[5], Arg7520_6 = Arg7520[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-findallhelp"], [Arg7520_1, Arg7520_2, Arg7520_3, Arg7520_4, Arg7520_5, Arg7520_6]);});})}))]);});})}))]);}))},
  5,
  [],
  "findall"];






Shen.fns["shen-findallhelp"] = [Shen.type_func,
  function shen_user_lambda7523(Arg7522) {
  if (Arg7522.length < 6) return [Shen.type_func, shen_user_lambda7523, 6, Arg7522];
  var Arg7522_0 = Arg7522[0], Arg7522_1 = Arg7522[1], Arg7522_2 = Arg7522[2], Arg7522_3 = Arg7522[3], Arg7522_4 = Arg7522[4], Arg7522_5 = Arg7522[5];
  var R0;
  return ((Shen.call(Shen.fns["shen-incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [Arg7522_1, Arg7522_4, (new Shen.Freeze([Arg7522_1, Arg7522_0, Arg7522_2, Arg7522_3, Arg7522_4, Arg7522_5], function(Arg7524) {
  var Arg7524_0 = Arg7524[0], Arg7524_1 = Arg7524[1], Arg7524_2 = Arg7524[2], Arg7524_3 = Arg7524[3], Arg7524_4 = Arg7524[4], Arg7524_5 = Arg7524[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen-remember"], [Arg7524_3, Arg7524_1, Arg7524_4, (new Shen.Freeze([Arg7524_3, Arg7524_1, Arg7524_4, Arg7524_5], function(Arg7526) {
  var Arg7526_0 = Arg7526[0], Arg7526_1 = Arg7526[1], Arg7526_2 = Arg7526[2], Arg7526_3 = Arg7526[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg7526_2, Arg7526_3]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7522_2, (Shen.globals[Shen.call(Shen.fns["shen-lazyderef"], [Arg7522_3, Arg7522_4])[1]]), Arg7522_4, Arg7522_5]);}))
  : R0))},
  6,
  [],
  "shen-findallhelp"];






Shen.fns["shen-remember"] = [Shen.type_func,
  function shen_user_lambda7529(Arg7528) {
  if (Arg7528.length < 4) return [Shen.type_func, shen_user_lambda7529, 4, Arg7528];
  var Arg7528_0 = Arg7528[0], Arg7528_1 = Arg7528[1], Arg7528_2 = Arg7528[2], Arg7528_3 = Arg7528[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-newpv"], [Arg7528_2])),
  Shen.call(Shen.fns["shen-incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, (Shen.globals[Shen.call(Shen.fns["shen-deref"], [Arg7528_0, Arg7528_2])[1]] = [Shen.type_cons, Shen.call(Shen.fns["shen-deref"], [Arg7528_1, Arg7528_2]), (Shen.globals[Shen.call(Shen.fns["shen-deref"], [Arg7528_0, Arg7528_2])[1]])]), Arg7528_2, Arg7528_3]);}))},
  4,
  [],
  "shen-remember"];












Shen.fns["shen-shen"] = [Shen.type_func,
  function shen_user_lambda6944(Arg6943) {
  if (Arg6943.length < 0) return [Shen.type_func, shen_user_lambda6944, 0, Arg6943];
  return (Shen.call(Shen.fns["shen-credits"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen-loop"], []);}))},
  0,
  [],
  "shen-shen"];






Shen.fns["shen-loop"] = [Shen.type_func,
  function shen_user_lambda6946(Arg6945) {
  if (Arg6945.length < 0) return [Shen.type_func, shen_user_lambda6946, 0, Arg6945];
  return (Shen.call(Shen.fns["shen-initialise_environment"], []),
  Shen.call(Shen.fns["shen-prompt"], []),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen-read-evaluate-print"], []);}, [Shen.type_func,
  function shen_user_lambda6948(Arg6947) {
  if (Arg6947.length < 1) return [Shen.type_func, shen_user_lambda6948, 1, Arg6947];
  var Arg6947_0 = Arg6947[0];
  return (function() {
  return Shen.pr(Shen.error_to_string(Arg6947_0), (Shen.globals["*stoutput*"]));})},
  1,
  []]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-loop"], []);}))},
  0,
  [],
  "shen-loop"];






Shen.fns["version"] = [Shen.type_func,
  function shen_user_lambda6950(Arg6949) {
  if (Arg6949.length < 1) return [Shen.type_func, shen_user_lambda6950, 1, Arg6949];
  var Arg6949_0 = Arg6949[0];
  return (Shen.globals["*version*"] = Arg6949_0)},
  1,
  [],
  "version"];






Shen.fns["shen-toplevel-6952"] = [Shen.type_func,
  function shen_user_lambda6953(Arg6951) {
  if (Arg6951.length < 0) return [Shen.type_func, shen_user_lambda6953, 0, Arg6951];
  return (function() {
  return Shen.call_tail(Shen.fns["version"], ["version 7.1"]);})},
  0,
  [],
  "shen-toplevel-6952"];

Shen.call_toplevel("shen-toplevel-6952")






Shen.fns["shen-credits"] = [Shen.type_func,
  function shen_user_lambda6955(Arg6954) {
  if (Arg6954.length < 0) return [Shen.type_func, shen_user_lambda6955, 0, Arg6954];
  return (Shen.call(Shen.fns["intoutput"], ["~%Shen 2010, copyright (C) 2010 Mark Tarver~%", []]),
  Shen.call(Shen.fns["intoutput"], ["www.shenlanguage.org, ~A~%", [Shen.fns['shen-tuple'], (Shen.globals["*version*"]), []]]),
  Shen.call(Shen.fns["intoutput"], ["running under ~A, implementation: ~A", [Shen.fns['shen-tuple'], (Shen.globals["*language*"]), [Shen.fns['shen-tuple'], (Shen.globals["*implementation*"]), []]]]),
  (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["~%port ~A ported by ~A~%", [Shen.fns['shen-tuple'], (Shen.globals["*port*"]), [Shen.fns['shen-tuple'], (Shen.globals["*porters*"]), []]]]);}))},
  0,
  [],
  "shen-credits"];






Shen.fns["shen-initialise_environment"] = [Shen.type_func,
  function shen_user_lambda6957(Arg6956) {
  if (Arg6956.length < 0) return [Shen.type_func, shen_user_lambda6957, 0, Arg6956];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-multiple-set"], [[Shen.type_cons, [Shen.type_symbol, "shen-*call*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen-*infs*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen-*process-counter*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen-*catch*"], [Shen.type_cons, 0, []]]]]]]]]]);})},
  0,
  [],
  "shen-initialise_environment"];






Shen.fns["shen-multiple-set"] = [Shen.type_func,
  function shen_user_lambda6959(Arg6958) {
  if (Arg6958.length < 1) return [Shen.type_func, shen_user_lambda6959, 1, Arg6958];
  var Arg6958_0 = Arg6958[0];
  return ((Shen.empty$question$(Arg6958_0))
  ? []
  : (((Shen.is_type(Arg6958_0, Shen.type_cons) && Shen.is_type(Arg6958_0[2], Shen.type_cons)))
  ? ((Shen.globals[Arg6958_0[1][1]] = Arg6958_0[2][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-multiple-set"], [Arg6958_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-multiple-set"]]);})))},
  1,
  [],
  "shen-multiple-set"];






Shen.fns["destroy"] = [Shen.type_func,
  function shen_user_lambda6961(Arg6960) {
  if (Arg6960.length < 1) return [Shen.type_func, shen_user_lambda6961, 1, Arg6960];
  var Arg6960_0 = Arg6960[0];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg6960_0, []]);})},
  1,
  [],
  "destroy"];






Shen.fns["shen-toplevel-6963"] = [Shen.type_func,
  function shen_user_lambda6964(Arg6962) {
  if (Arg6962.length < 0) return [Shen.type_func, shen_user_lambda6964, 0, Arg6962];
  return (Shen.globals["shen-*history*"] = [])},
  0,
  [],
  "shen-toplevel-6963"];

Shen.call_toplevel("shen-toplevel-6963")






Shen.fns["shen-read-evaluate-print"] = [Shen.type_func,
  function shen_user_lambda6966(Arg6965) {
  if (Arg6965.length < 0) return [Shen.type_func, shen_user_lambda6966, 0, Arg6965];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen-toplineread"], [])),
  (R1 = (Shen.globals["shen-*history*"])),
  (R0 = Shen.call(Shen.fns["shen-retrieve-from-history-if-needed"], [R0, R1])),
  Shen.call(Shen.fns["shen-update_history"], [R0, R1]),
  (R1 = Shen.call(Shen.fns["fst"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen-toplevel"], [R1]);}))},
  0,
  [],
  "shen-read-evaluate-print"];






Shen.fns["shen-retrieve-from-history-if-needed"] = [Shen.type_func,
  function shen_user_lambda6968(Arg6967) {
  if (Arg6967.length < 2) return [Shen.type_func, shen_user_lambda6968, 2, Arg6967];
  var Arg6967_0 = Arg6967[0], Arg6967_1 = Arg6967[1];
  var R0;
  return (((Shen.is_type(Arg6967_0, Shen.fns['shen-tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg6967_0]), Shen.type_cons) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg6967_0])[2], Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg6967_0])[2][2]) && (Shen.is_type(Arg6967_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg6967_0])[1], Shen.call(Shen.fns["shen-exclamation"], []))) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg6967_0])[2][1], Shen.call(Shen.fns["shen-exclamation"], []))))))))))
  ? (Shen.call(Shen.fns["shen-prbytes"], [Shen.call(Shen.fns["snd"], [Arg6967_1[1]])]),
  Arg6967_1[1])
  : (((Shen.is_type(Arg6967_0, Shen.fns['shen-tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg6967_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg6967_0])[1], Shen.call(Shen.fns["shen-exclamation"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen-make-key"], [Shen.call(Shen.fns["snd"], [Arg6967_0])[2], Arg6967_1])),
  (R0 = Shen.call(Shen.fns["head"], [Shen.call(Shen.fns["shen-find-past-inputs"], [R0, Arg6967_1])])),
  Shen.call(Shen.fns["shen-prbytes"], [Shen.call(Shen.fns["snd"], [R0])]),
  R0)
  : (((Shen.is_type(Arg6967_0, Shen.fns['shen-tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg6967_0]), Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg6967_0])[2]) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg6967_0])[1], Shen.call(Shen.fns["shen-percent"], [])))))))
  ? (Shen.call(Shen.fns["shen-print-past-inputs"], [[Shen.type_func,
  function shen_user_lambda6970(Arg6969) {
  if (Arg6969.length < 1) return [Shen.type_func, shen_user_lambda6970, 1, Arg6969];
  var Arg6969_0 = Arg6969[0];
  return true},
  1,
  []], Shen.call(Shen.fns["reverse"], [Arg6967_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : (((Shen.is_type(Arg6967_0, Shen.fns['shen-tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg6967_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg6967_0])[1], Shen.call(Shen.fns["shen-percent"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen-make-key"], [Shen.call(Shen.fns["snd"], [Arg6967_0])[2], Arg6967_1])),
  Shen.call(Shen.fns["shen-print-past-inputs"], [R0, Shen.call(Shen.fns["reverse"], [Arg6967_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : Arg6967_0))))},
  2,
  [],
  "shen-retrieve-from-history-if-needed"];






Shen.fns["shen-percent"] = [Shen.type_func,
  function shen_user_lambda6972(Arg6971) {
  if (Arg6971.length < 0) return [Shen.type_func, shen_user_lambda6972, 0, Arg6971];
  return 37},
  0,
  [],
  "shen-percent"];






Shen.fns["shen-exclamation"] = [Shen.type_func,
  function shen_user_lambda6974(Arg6973) {
  if (Arg6973.length < 0) return [Shen.type_func, shen_user_lambda6974, 0, Arg6973];
  return 33},
  0,
  [],
  "shen-exclamation"];






Shen.fns["shen-prbytes"] = [Shen.type_func,
  function shen_user_lambda6976(Arg6975) {
  if (Arg6975.length < 1) return [Shen.type_func, shen_user_lambda6976, 1, Arg6975];
  var Arg6975_0 = Arg6975[0];
  return (Shen.call(Shen.fns["map"], [[Shen.type_func,
  function shen_user_lambda6978(Arg6977) {
  if (Arg6977.length < 1) return [Shen.type_func, shen_user_lambda6978, 1, Arg6977];
  var Arg6977_0 = Arg6977[0];
  return (function() {
  return Shen.pr(Shen.n_$gt$string(Arg6977_0), Shen.call(Shen.fns["stinput"], [0]));})},
  1,
  []], Arg6975_0]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))},
  1,
  [],
  "shen-prbytes"];






Shen.fns["shen-update_history"] = [Shen.type_func,
  function shen_user_lambda6980(Arg6979) {
  if (Arg6979.length < 2) return [Shen.type_func, shen_user_lambda6980, 2, Arg6979];
  var Arg6979_0 = Arg6979[0], Arg6979_1 = Arg6979[1];
  return (Shen.globals["shen-*history*"] = [Shen.type_cons, Arg6979_0, Arg6979_1])},
  2,
  [],
  "shen-update_history"];






Shen.fns["shen-toplineread"] = [Shen.type_func,
  function shen_user_lambda6982(Arg6981) {
  if (Arg6981.length < 0) return [Shen.type_func, shen_user_lambda6982, 0, Arg6981];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), []]);})},
  0,
  [],
  "shen-toplineread"];






Shen.fns["shen-toplineread_loop"] = [Shen.type_func,
  function shen_user_lambda6984(Arg6983) {
  if (Arg6983.length < 2) return [Shen.type_func, shen_user_lambda6984, 2, Arg6983];
  var Arg6983_0 = Arg6983[0], Arg6983_1 = Arg6983[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6983_0, Shen.call(Shen.fns["shen-hat"], []))))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["line read aborted", []]);})
  : ((Shen.call(Shen.fns["element?"], [Arg6983_0, [Shen.type_cons, Shen.call(Shen.fns["shen-newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen-carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func,
  function shen_user_lambda6986(Arg6985) {
  if (Arg6985.length < 1) return [Shen.type_func, shen_user_lambda6986, 1, Arg6985];
  var Arg6985_0 = Arg6985[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-<st_input>"], [Arg6985_0]);})},
  1,
  []], Arg6983_1, []])),
  (((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), Shen.call(Shen.fns["append"], [Arg6983_1, [Shen.type_cons, Arg6983_0, []]])]);})
  : [Shen.fns['shen-tuple'], R0, Arg6983_1]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [0])), Shen.call(Shen.fns["append"], [Arg6983_1, [Shen.type_cons, Arg6983_0, []]])]);})))},
  2,
  [],
  "shen-toplineread_loop"];






Shen.fns["shen-hat"] = [Shen.type_func,
  function shen_user_lambda6988(Arg6987) {
  if (Arg6987.length < 0) return [Shen.type_func, shen_user_lambda6988, 0, Arg6987];
  return 94},
  0,
  [],
  "shen-hat"];






Shen.fns["shen-newline"] = [Shen.type_func,
  function shen_user_lambda6990(Arg6989) {
  if (Arg6989.length < 0) return [Shen.type_func, shen_user_lambda6990, 0, Arg6989];
  return 10},
  0,
  [],
  "shen-newline"];






Shen.fns["shen-carriage-return"] = [Shen.type_func,
  function shen_user_lambda6992(Arg6991) {
  if (Arg6991.length < 0) return [Shen.type_func, shen_user_lambda6992, 0, Arg6991];
  return 13},
  0,
  [],
  "shen-carriage-return"];






Shen.fns["tc"] = [Shen.type_func,
  function shen_user_lambda6994(Arg6993) {
  if (Arg6993.length < 1) return [Shen.type_func, shen_user_lambda6994, 1, Arg6993];
  var Arg6993_0 = Arg6993[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6993_0)))
  ? (Shen.globals["shen-*tc*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6993_0)))
  ? (Shen.globals["shen-*tc*"] = false)
  : (function() {
  return Shen.call_tail(Shen.fns["interror"], ["tc expects a + or -", []]);})))},
  1,
  [],
  "tc"];






Shen.fns["shen-prompt"] = [Shen.type_func,
  function shen_user_lambda6996(Arg6995) {
  if (Arg6995.length < 0) return [Shen.type_func, shen_user_lambda6996, 0, Arg6995];
  return (((Shen.globals["shen-*tc*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["~%~%(~A+) ", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["length"], [(Shen.globals["shen-*history*"])]), []]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["~%~%(~A-) ", [Shen.fns['shen-tuple'], Shen.call(Shen.fns["length"], [(Shen.globals["shen-*history*"])]), []]]);}))},
  0,
  [],
  "shen-prompt"];






Shen.fns["shen-toplevel"] = [Shen.type_func,
  function shen_user_lambda6998(Arg6997) {
  if (Arg6997.length < 1) return [Shen.type_func, shen_user_lambda6998, 1, Arg6997];
  var Arg6997_0 = Arg6997[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-toplevel_evaluate"], [Arg6997_0, (Shen.globals["shen-*tc*"])]);})},
  1,
  [],
  "shen-toplevel"];






Shen.fns["shen-find-past-inputs"] = [Shen.type_func,
  function shen_user_lambda7000(Arg6999) {
  if (Arg6999.length < 2) return [Shen.type_func, shen_user_lambda7000, 2, Arg6999];
  var Arg6999_0 = Arg6999[0], Arg6999_1 = Arg6999[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen-find"], [Arg6999_0, Arg6999_1])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["input not found~%", []]);})
  : R0))},
  2,
  [],
  "shen-find-past-inputs"];






Shen.fns["shen-make-key"] = [Shen.type_func,
  function shen_user_lambda7002(Arg7001) {
  if (Arg7001.length < 2) return [Shen.type_func, shen_user_lambda7002, 2, Arg7001];
  var Arg7001_0 = Arg7001[0], Arg7001_1 = Arg7001[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func,
  function shen_user_lambda7004(Arg7003) {
  if (Arg7003.length < 1) return [Shen.type_func, shen_user_lambda7004, 1, Arg7003];
  var Arg7003_0 = Arg7003[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-<st_input>"], [Arg7003_0]);})},
  1,
  []], Arg7001_0, []])[1]),
  ((Shen.call(Shen.fns["integer?"], [R0]))
  ? [Shen.type_func,
  function shen_user_lambda7006(Arg7005) {
  if (Arg7005.length < 3) return [Shen.type_func, shen_user_lambda7006, 3, Arg7005];
  var Arg7005_0 = Arg7005[0], Arg7005_1 = Arg7005[1], Arg7005_2 = Arg7005[2];
  return Shen.$eq$(Arg7005_2, Shen.call(Shen.fns["nth"], [(Arg7005_0 + 1), Shen.call(Shen.fns["reverse"], [Arg7005_1])]))},
  3,
  [R0, Arg7001_1]]
  : [Shen.type_func,
  function shen_user_lambda7008(Arg7007) {
  if (Arg7007.length < 2) return [Shen.type_func, shen_user_lambda7008, 2, Arg7007];
  var Arg7007_0 = Arg7007[0], Arg7007_1 = Arg7007[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-prefix?"], [Arg7007_0, Shen.call(Shen.fns["shen-trim-gubbins"], [Shen.call(Shen.fns["snd"], [Arg7007_1])])]);})},
  2,
  [Arg7001_0]]))},
  2,
  [],
  "shen-make-key"];






Shen.fns["shen-trim-gubbins"] = [Shen.type_func,
  function shen_user_lambda7010(Arg7009) {
  if (Arg7009.length < 1) return [Shen.type_func, shen_user_lambda7010, 1, Arg7009];
  var Arg7009_0 = Arg7009[0];
  return (((Shen.is_type(Arg7009_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7009_0[1], Shen.call(Shen.fns["shen-space"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-trim-gubbins"], [Arg7009_0[2]]);})
  : (((Shen.is_type(Arg7009_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7009_0[1], Shen.call(Shen.fns["shen-newline"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-trim-gubbins"], [Arg7009_0[2]]);})
  : (((Shen.is_type(Arg7009_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7009_0[1], Shen.call(Shen.fns["shen-carriage-return"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-trim-gubbins"], [Arg7009_0[2]]);})
  : (((Shen.is_type(Arg7009_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7009_0[1], Shen.call(Shen.fns["shen-tab"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-trim-gubbins"], [Arg7009_0[2]]);})
  : (((Shen.is_type(Arg7009_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7009_0[1], Shen.call(Shen.fns["shen-left-round"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-trim-gubbins"], [Arg7009_0[2]]);})
  : Arg7009_0)))))},
  1,
  [],
  "shen-trim-gubbins"];






Shen.fns["shen-space"] = [Shen.type_func,
  function shen_user_lambda7012(Arg7011) {
  if (Arg7011.length < 0) return [Shen.type_func, shen_user_lambda7012, 0, Arg7011];
  return 32},
  0,
  [],
  "shen-space"];






Shen.fns["shen-tab"] = [Shen.type_func,
  function shen_user_lambda7014(Arg7013) {
  if (Arg7013.length < 0) return [Shen.type_func, shen_user_lambda7014, 0, Arg7013];
  return 9},
  0,
  [],
  "shen-tab"];






Shen.fns["shen-left-round"] = [Shen.type_func,
  function shen_user_lambda7016(Arg7015) {
  if (Arg7015.length < 0) return [Shen.type_func, shen_user_lambda7016, 0, Arg7015];
  return 40},
  0,
  [],
  "shen-left-round"];






Shen.fns["shen-find"] = [Shen.type_func,
  function shen_user_lambda7018(Arg7017) {
  if (Arg7017.length < 2) return [Shen.type_func, shen_user_lambda7018, 2, Arg7017];
  var Arg7017_0 = Arg7017[0], Arg7017_1 = Arg7017[1];
  return ((Shen.empty$question$(Arg7017_1))
  ? []
  : (((Shen.is_type(Arg7017_1, Shen.type_cons) && Shen.call(Arg7017_0, [Arg7017_1[1]])))
  ? [Shen.type_cons, Arg7017_1[1], Shen.call(Shen.fns["shen-find"], [Arg7017_0, Arg7017_1[2]])]
  : ((Shen.is_type(Arg7017_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-find"], [Arg7017_0, Arg7017_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-find"]]);}))))},
  2,
  [],
  "shen-find"];






Shen.fns["shen-prefix?"] = [Shen.type_func,
  function shen_user_lambda7020(Arg7019) {
  if (Arg7019.length < 2) return [Shen.type_func, shen_user_lambda7020, 2, Arg7019];
  var Arg7019_0 = Arg7019[0], Arg7019_1 = Arg7019[1];
  return ((Shen.empty$question$(Arg7019_0))
  ? true
  : (((Shen.is_type(Arg7019_0, Shen.type_cons) && (Shen.is_type(Arg7019_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7019_1[1], Arg7019_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-prefix?"], [Arg7019_0[2], Arg7019_1[2]]);})
  : false))},
  2,
  [],
  "shen-prefix?"];






Shen.fns["shen-print-past-inputs"] = [Shen.type_func,
  function shen_user_lambda7022(Arg7021) {
  if (Arg7021.length < 3) return [Shen.type_func, shen_user_lambda7022, 3, Arg7021];
  var Arg7021_0 = Arg7021[0], Arg7021_1 = Arg7021[1], Arg7021_2 = Arg7021[2];
  return ((Shen.empty$question$(Arg7021_1))
  ? [Shen.type_symbol, "_"]
  : (((Shen.is_type(Arg7021_1, Shen.type_cons) && (!Shen.call(Arg7021_0, [Arg7021_1[1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-print-past-inputs"], [Arg7021_0, Arg7021_1[2], (Arg7021_2 + 1)]);})
  : (((Shen.is_type(Arg7021_1, Shen.type_cons) && Shen.is_type(Arg7021_1[1], Shen.fns['shen-tuple'])))
  ? (Shen.call(Shen.fns["intoutput"], ["~A. ", [Shen.fns['shen-tuple'], Arg7021_2, []]]),
  Shen.call(Shen.fns["shen-prbytes"], [Shen.call(Shen.fns["snd"], [Arg7021_1[1]])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-print-past-inputs"], [Arg7021_0, Arg7021_1[2], (Arg7021_2 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-print-past-inputs"]]);}))))},
  3,
  [],
  "shen-print-past-inputs"];






Shen.fns["shen-toplevel_evaluate"] = [Shen.type_func,
  function shen_user_lambda7024(Arg7023) {
  if (Arg7023.length < 2) return [Shen.type_func, shen_user_lambda7024, 2, Arg7023];
  var Arg7023_0 = Arg7023[0], Arg7023_1 = Arg7023[1];
  var R0;
  return (((Shen.is_type(Arg7023_0, Shen.type_cons) && (Shen.is_type(Arg7023_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg7023_0[2][1])) && (Shen.is_type(Arg7023_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7023_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7023_1))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-typecheck-and-evaluate"], [Arg7023_0[1], Arg7023_0[2][2][1]]);})
  : (((Shen.is_type(Arg7023_0, Shen.type_cons) && Shen.is_type(Arg7023_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen-toplevel_evaluate"], [[Shen.type_cons, Arg7023_0[1], []], Arg7023_1]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen-toplevel_evaluate"], [Arg7023_0[2], Arg7023_1]);}))
  : (((Shen.is_type(Arg7023_0, Shen.type_cons) && (Shen.empty$question$(Arg7023_0[2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7023_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-typecheck-and-evaluate"], [Arg7023_0[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);})
  : (((Shen.is_type(Arg7023_0, Shen.type_cons) && (Shen.empty$question$(Arg7023_0[2]) && Shen.unwind_tail(Shen.$eq$(false, Arg7023_1)))))
  ? ((R0 = Shen.call(Shen.fns["shen-eval-without-macros"], [Arg7023_0[1]])),
  (function() {
  return Shen.call_tail(Shen.fns["print"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-toplevel_evaluate"]]);})))))},
  2,
  [],
  "shen-toplevel_evaluate"];






Shen.fns["shen-typecheck-and-evaluate"] = [Shen.type_func,
  function shen_user_lambda7026(Arg7025) {
  if (Arg7025.length < 2) return [Shen.type_func, shen_user_lambda7026, 2, Arg7025];
  var Arg7025_0 = Arg7025[0], Arg7025_1 = Arg7025[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen-typecheck"], [Arg7025_0, Arg7025_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (function() {
  return Shen.call_tail(Shen.fns["interror"], ["type error~%", []]);})
  : ((R1 = Shen.call(Shen.fns["shen-eval-without-macros"], [Arg7025_0])),
  (R0 = Shen.call(Shen.fns["shen-pretty-type"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["intoutput"], ["~S : ~R", [Shen.fns['shen-tuple'], R1, [Shen.fns['shen-tuple'], R0, []]]]);}))))},
  2,
  [],
  "shen-typecheck-and-evaluate"];






Shen.fns["shen-pretty-type"] = [Shen.type_func,
  function shen_user_lambda7028(Arg7027) {
  if (Arg7027.length < 1) return [Shen.type_func, shen_user_lambda7028, 1, Arg7027];
  var Arg7027_0 = Arg7027[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen-mult_subst"], [(Shen.globals["shen-*alphabet*"]), Shen.call(Shen.fns["shen-extract-pvars"], [Arg7027_0]), Arg7027_0]);})},
  1,
  [],
  "shen-pretty-type"];






Shen.fns["shen-extract-pvars"] = [Shen.type_func,
  function shen_user_lambda7030(Arg7029) {
  if (Arg7029.length < 1) return [Shen.type_func, shen_user_lambda7030, 1, Arg7029];
  var Arg7029_0 = Arg7029[0];
  return ((Shen.call(Shen.fns["shen-pvar?"], [Arg7029_0]))
  ? [Shen.type_cons, Arg7029_0, []]
  : ((Shen.is_type(Arg7029_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen-extract-pvars"], [Arg7029_0[1]]), Shen.call(Shen.fns["shen-extract-pvars"], [Arg7029_0[2]])]);})
  : []))},
  1,
  [],
  "shen-extract-pvars"];






Shen.fns["shen-mult_subst"] = [Shen.type_func,
  function shen_user_lambda7032(Arg7031) {
  if (Arg7031.length < 3) return [Shen.type_func, shen_user_lambda7032, 3, Arg7031];
  var Arg7031_0 = Arg7031[0], Arg7031_1 = Arg7031[1], Arg7031_2 = Arg7031[2];
  return ((Shen.empty$question$(Arg7031_0))
  ? Arg7031_2
  : ((Shen.empty$question$(Arg7031_1))
  ? Arg7031_2
  : (((Shen.is_type(Arg7031_0, Shen.type_cons) && Shen.is_type(Arg7031_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen-mult_subst"], [Arg7031_0[2], Arg7031_1[2], Shen.call(Shen.fns["subst"], [Arg7031_0[1], Arg7031_1[1], Arg7031_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen-sys-error"], [[Shen.type_symbol, "shen-mult_subst"]]);}))))},
  3,
  [],
  "shen-mult_subst"];




