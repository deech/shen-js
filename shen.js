/*
The License
-----------
The user is free to produce commercial applications with the software, to
distribute these applications in source or binary form, and to charge monies
for them as he sees fit and in concordance with the laws of the land subject
to the following license.

1. The license applies to all the software and all derived software and must
   appear on such.

2. It is illegal to distribute the software without this license attached to
   it and use of the software implies agreement with the license as such. It
   is illegal for anyone who is not the copyright holder to tamper with or
   change the license.

3. Neither the names of Lambda Associates or the copyright holder may be used
   to endorse or promote products built using the software without specific
   prior written permission from the copyright holder.

4. That possession of this license does not confer on the copyright holder any
   special contractual obligation towards the user. That in no event shall the
   copyright holder be liable for any direct, indirect, incidental, special,
   exemplary or consequential damages (including but not limited to
   procurement of substitute goods or services, loss of use, data, or profits;
   or business interruption), however caused and on any theory of liability,
   whether in contract, strict liability or tort (including negligence)
   arising in any way out of the use of the software, even if advised of the
   possibility of such damage.

5. It is permitted for the user to change the software, for the purpose of
   improving performance, correcting an error, or porting to a new platform,
   and distribute the modified version of Shen (hereafter the modified
   version) provided the resulting program conforms in all respects to the
   Shen standard and is issued under that title. The user must make it clear
   with his distribution that he/she is the author of the changes and what
   these changes are and why.

6. Derived versions of this software in whatever form are subject to the same
   restrictions. In particular it is not permitted to make derived copies of
   this software which do not conform to the Shen standard or appear under a
   different title.

7. It is permitted to distribute versions of Shen which incorporate libraries,
   graphics or other facilities which are not part of the Shen standard.

For an explication of this license see
[http://www.lambdassociates.org/News/june11/license.htm] which explains this
license in full.
*/

Shen = {}

Shen.globals = {}

Shen.globals["*language*"] = "Javascript"
Shen.globals["*implementation*"] = "cli"
Shen.globals["*port*"] = Shen.version = "0.10.2"
Shen.globals["*porters*"] = Shen.author = "Ramil Farkhshatov"

Shen.Tag = function(name) {
  this.toString = function() {
    return "#<Shen.Tag " + name + ">"
  }
}

Shen.fail_obj = new Shen.Tag('fail_obj')
Shen.fns = {}

Shen.type_func = new Shen.Tag('func')
Shen.type_symbol = new Shen.Tag('sym')
Shen.type_cons = new Shen.Tag('cons')
Shen.type_stream_in = new Shen.Tag('stream_in')
Shen.type_stream_out = new Shen.Tag('stream_out')
Shen.type_stream_inout = new Shen.Tag('stream_inout')
Shen.type_error = new Shen.Tag('error')

Shen.Freeze = function(vars, fn) {
  this.vars = vars
  this.fn = fn
}

Shen.mkfunction = function(name, nargs, fn) {
  var x = [Shen.type_func, fn, nargs, [], name]
  Shen.fns[name] = x
  return x
}

Shen.call_tail = function(x, args) {
  var j = 0, nargs = args.length
  for (;;) {
    if (typeof(x) == "function") {
      x = x([args[j++]])
    } else if (x[0] == Shen.type_func) {
      var c = x[3], n = c.length, k = x[2], a
      if (!j && !n && nargs <= k) {
        a = args
        j += nargs
      } else {
        k = (k > n + nargs) ? n + nargs : k
        a = new Array(k)

        for (var i = 0; i < n; ++i)
          a[i] = c[i]
        for (;i < k && j < nargs; ++j, ++i)
          a[i] = args[j]
      }
      x = (x[1])(a)
    } else if (x[0] == Shen.type_symbol) {
      x = Shen.get_fn(x)
    } else
      return Shen.error("Shen.call: Wrong function: '" + x + "'")
    if (j >= nargs)
      return x
    while (typeof(x) == "function")
      x = x()
  }
  return x
}

Shen.call = function(x, args) {
  var x = Shen.call_tail(x, args)
  while (typeof(x) == "function")
    x = x()
  return x
}

Shen.call_by_name = function(x, args) {
  return Shen.call(Shen.fns[x], args)
}

Shen.call_toplevel = function(fn) {
  return Shen.call(fn, [])
}

Shen.unwind_tail = function(x) {
  while(typeof(x) == "function")
    x = x()
  return x
}

Shen.get_fn = function(x) {
  if (typeof(x) == "function")
    Shen.error("passed function into get_fn")
  switch (x[0]) {
  case Shen.type_func: return x
  case Shen.type_symbol:
    var v = Shen.fns[x[1]]
    if (v != undefined)
      return v
    Shen.error("Cannot find '" + x[1] + "'")
    return Shen.fail_obj
  }
  throw new Error("function " + x[1] + " not found")
}

Shen.thaw = function(f) {
  return f.fn(f.vars)
}

Shen.error = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts("# err: " + s + "\n")
  throw new Error(s);
  return Shen.fail_obj
}

Shen.error_to_string = function(s) {
  var stack = s.stack;
  var show = (stack !== undefined);
  show &= Shen.is_true(Shen.globals["shenjs.*show-error-stack*"]);
  return (show) ? ("" + s + " " + stack) : ("" + s);
}

Shen.get_time = function(x) {
  return (new Date()).getTime() / 1000.0
}

Shen.simple_error = Shen.error
Shen.log_eq = false

Shen.trap_error = function(fn, handler) {
  try {
    return fn()
  } catch (e) {
    return Shen.call(handler, [e])
  }
}

Shen.notrap_error = function(fn, handler) {
  return fn()
}

Shen.equal_boolean = function(b, x) {
  return ((x instanceof Array)
          && x[0] == Shen.type_symbol
          && ((x[1] == "true" && b === true)
              || (x[1] == "false" && b === false)))
}

Shen.equal_function = function(f, x) {
  return (x[0] == Shen.type_symbol && f[0] == Shen.type_func && x[1] == f[4])
}

Shen.$eq$ = function(x, y) {
  if (x === y)
    return true
  var tx = typeof(x), ty = typeof(y)
  if (tx != ty)
    return ((tx == "boolean" && Shen.equal_boolean(x, y))
            || (ty == "boolean" && Shen.equal_boolean(y, x)))
  switch (tx) {
  case "number":
  case "boolean":
  case "function":
  case "string":
    return x == y;

  case "object":
    if (x == y)
      return true

    if ((x instanceof Array) ^ (y instanceof Array))
      return false

    if (Shen.equal_function(x, y) || Shen.equal_function(y, x))
      return true
    if (x.length != y.length)
      return false
    if (x.length == 0)
      return true
    if (x == Shen.fail_obj && y == Shen.fail_obj)
      return true
    if (x[0] != y[0])
      return false
    switch (x[0]) {
    case Shen.type_func:
     if (x[1] != y[1] || x[2] != y[2])
        return false
      var n = x[3].length
      if (n != y[3].length)
        return false
      for (var i = 0; i < n; ++i)
        if (x[3][i] != y[3][i])
          return false
      return true
    case Shen.type_symbol: return x[1] == y[1];
    case Shen.type_cons:
      var r = Shen.$eq$(x[1], y[1])
      while (typeof(r) == "function")
        r = r()
      if (!r)
        return false
      return (function() {
        var r = Shen.$eq$(x[2], y[2])
        while (typeof(r) == "function")
          r = r()
        return r
      });
    case Shen.type_stream_out:
    case Shen.type_stream_in: return x[1] == y[1] && x[2] == y[2];
    default:
      for (var i = 1; i < x.length; ++i) {
        var r = Shen.$eq$(x[i], y[i])
        while (typeof(r) == "function")
          r = r()
        if (!r)
          return false;
      }
      return true;
    }
    break;
  default: return false;
  }
}

Shen.empty$question$ = function(x) {
  return ((x instanceof Array) && !x.length)
}

Shen.is_type = function(x, type) {
  if (type == Shen.type_symbol && (x === true || x === false))
    return true
  return ((x instanceof Array) && x[0] == type)
}

Shen.boolean$question$ = function(x) {
  return (typeof(x) == "boolean") || (Shen.is_type(x, Shen.type_symbol)
                                      && (x[1] == "true" || x[1] == "false"))
}

Shen.vector$question$ = function(x) {
  return ((x instanceof Array) && x[0] > 0)
}

Shen.absvector$question$ = function(x) {
  return ((x instanceof Array) && x.length > 0
          && (!(x[0] instanceof Shen.Tag)))
}

Shen.absvector = function(n) {
  var ret = new Array(n)
  for (var i = 0; i < n; ++i)
    ret[i] = Shen.fail_obj
  return ret
}

Shen.dbg_princ = function(s, x) {
  dbg_print(" " + s + x)
  return x
}

Shen.dbg_print = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts(s + "\n")
}

Shen.is_true = function(x) {
  return x != false || ((x instanceof Array)
                        && (x[0] == Shen.type_symbol)
                        && (x[1] != "false"))
}

Shen.absvector_ref = function(x, i) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  return x[i]
}

Shen.absvector_set = function(x, i, v) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  x[i] = v
  return x
}

Shen.value = function(x) {
  var y = Shen.globals[s[1]]
  if (y === undefined)
    Shen.error("The variable " + x + " is unbound.")
  else
    return y
}

Shen.vector = function(n) {
  var r = new Array(n + 1)
  r[0] = n
  for (var i = 1; i <= n; ++i)
    r[i] = Shen.fail_obj
  return r
}

Shen.esc = function(x) {
  var ret = ""
  for (var i = 0; i < x.length; ++i)
    switch (x[i]) {
      case '"': ret += '\\"'; break;
      default: ret += x[i]; break
    }
  return ret
}

Shen.str = function(x) {
  var err = " is not an atom in Shen; str cannot print it to a string."
  switch (typeof(x)) {
    case "string": return "\"" + Shen.esc(x) + "\""
    case "number":
    case "boolean": return "" + x
    case "function":
      return "#<function>"
    case "object":
      if (x == Shen.fail_obj)
        return "fail!"
      if (x instanceof Array) {
        if (x.length <= 0) {
          Shen.error("[]" + err)
          return Shen.fail_obj
        }
        switch (x[0]) {
          case Shen.type_symbol: return x[1]
          case Shen.type_func:
            if (!x[3].length && x[4] != undefined)
              return x[4]
            if (Shen.is_true(Shen.globals['shenjs.*show-func-js*']))
              Shen.io.puts("\n func: " + x + "\n\n")
            return (x[3].length == 0) ? "#<function>" : "#<closure>"
        }
      }
  }
  Shen.error([x + err])
  return Shen.fail_obj
}

Shen.intern = function(x) {
  switch (x) {
  case "true": return true
  case "false": return false
  default: return [Shen.type_symbol, x]
  }
}

Shen.tlstr = function(x) {
  if (x == "")
    return [Shen.type_symbol, "shen_eos"]
  return x.substring(1, x.length)
}

Shen.n_$gt$string = function(x) {
  return String.fromCharCode(x)
}

Shen.string_$gt$n = function(x) {
  return x.charCodeAt(0)
}

Shen.eval_kl = function(x) {
  var log = false
  if (Shen.is_true(Shen.globals['shenjs.*show-eval-js*']))
    log = true
  if (log)
    Shen.io.puts("# eval-kl[KL]: " + "\n" + Shen.shenstr(x) + "\n\n")
  var js = Shen.call_by_name("js-from-kl", [x])
  if (log)
    Shen.io.puts("eval-kl[JS]:\n" + js + "\n\n")
  var ret = eval(js)
  if (log)
    Shen.io.puts("eval-kl => '" + ret + "'\n\n")
  if (ret === undefined)
    Shen.error("evaluated '" + js + "' to undefined")
  return ret
}

Shen.eval_string = function(str) {
  var x = Shen.call_by_name("read-from-string", [str])
  if (Shen.empty$question$(x))
    return []
  if (!Shen.is_type(x, Shen.type_cons)) {
    Shen.error("Broken read-from-string return value")
    return Shen.fail_obj
  }
  var js = Shen.call_by_name("js-from-shen", [x[1]])
  return eval(js)
}

Shen.mkfunction("shenjs.load", 1, function self(x) {
  if (x.length < 1) return [Shen.type_func, self, 1, x]
  return (function() {
    load(x)
    return []
  })
})

Shen.file_instream_get = function(stream, s, pos) {
  if (s.length <= pos) {
    stream[1] = (function() {return -1})
    return -1
  }
  stream[1] = (function() {
    return Shen.file_instream_get(stream, s, pos + 1)
  })
  return s.charCodeAt(pos)
}

Shen.read_byte = function(stream) {
 switch (stream[0]) {
    case Shen.type_stream_in: return stream[1]()
    case Shen.type_stream_inout: return Shen.read_byte(stream[1])
    default:
      Shen.error("read-byte: Wrong stream type.")
      return -1;
  }
}

Shen.write_byte = function(byte, stream) {
 switch (stream[0]) {
    case Shen.type_stream_out: stream[1](byte); break;
    case Shen.type_stream_inout: Shen.write_byte(byte, stream[2]); break;
    default: Shen.error("write-byte: Wrong stream type.")
  }
  return []
}

Shen.close = function(stream) {
  switch (stream[0]) {
    case Shen.type_stream_in:
      stream[2]()
      stream[1] = (function() {return -1});
      break;
    case Shen.type_stream_out:
      stream[2]()
      stream[1] = (function(_) {return []});
      break;
    case Shen.type_stream_inout:
      Shen.close(stream[1])
      Shen.close(stream[2])
      break;
  }
  return []
}

Shen.repl_write_byte = function(byte) {
  Shen.io.puts(String.fromCharCode(byte))
}

Shen.repl_read_byte = function (stream, s, pos) {
  if (s == null) {
    stream[1] = (function() {return -1})
    quit()
    return -1
  } else if (pos >= s.length) {
    stream[1] = (function() {
      return Shen.repl_read_byte(stream, Shen.io.gets(), 0)
    })
    return Shen.call_by_name("shen.newline", [])
  } else {
    stream[1] = (function() {
      return Shen.repl_read_byte(stream, s, pos + 1)
    })
  }
  return s.charCodeAt(pos)
}

Shen.pr = function(s, stream) {
  for (i = 0; i < s.length; ++i)
    Shen.write_byte(s.charCodeAt(i), stream)
  return s
}

Shen.shenstr = function(x) {
  return Shen.call_by_name("shen.app", [x, "", [Shen.type_symbol, "shen.s"]])
}

Shen.mkfunction("shenjs.exit", 1, function self(x) {quit()})
Shen.globals["js.skip-internals"] = true

Shen.globals["shenjs.*show-error-js*"] = false
Shen.globals["shenjs.*show-error-stack*"] = false
Shen.globals["shenjs.*show-eval-js*"] = false
Shen.globals["shenjs.*show-func-js*"] = false
Shen.globals["shenjs.*dbg-js*"] = false
Shen.globals["*home-directory*"] = ""

/* dummy functions to bypass defstruct's declarations */
Shen.mkfunction("shen.process-datatype", 2, function(_) {return []})
Shen.mkfunction("compile", 3, function(_) {return []})
Shen.mkfunction("declare", 2, function(_) {return []})

Shen.console_io = {
  open: function(type, name, dir) {
    if (type[1] != "file")
      return Shen.fail_obj
    var filename = Shen.globals["*home-directory*"] + name
    if (dir[1] == "in") {
      try {
        var s = read(filename)
      } catch(e) {
        Shen.error(e)
        return Shen.fail_obj
      }
      var stream = [Shen.type_stream_in, null, function(){}]
      stream[1] = (function() {
        return Shen.file_instream_get(stream, s, 0)
      })
      return stream
    } else if (dir[1] == "out") {
      Shen.error("Writing files is not supported in cli interpreter")
      return Shen.fail_obj
    }
    Shen.error("Unsupported open flags")
    return Shen.fail_obj
  },

  init: function() {
    try {
      this.puts = putstr;
    } catch (e) {
      this.puts = write;
    }
    this.gets = readline;
    var fout = [Shen.type_stream_out,
                function(byte) {return Shen.repl_write_byte(byte)},
                function() {}]
    Shen.globals["*stoutput*"] = fout
    
    var fin = [Shen.type_stream_in, null, quit]
    fin[1] = (function() {
      return Shen.repl_read_byte(fin, Shen.io.gets(), 0)
    })
    
    var finout = [Shen.type_stream_inout, fin, fout]
    Shen.globals["*stinput*"] = finout
  }
}

Shen.init = function(conf) {
  Shen.io = conf.io
  Shen.io.init()
  function assert_io(func) {
    if (Shen.io[func] === undefined)
      throw new Error("Shen: IO has no method " + func)
  }
  assert_io('gets')
  assert_io('puts')
  assert_io('open')
  if (conf.start_repl)
    Shen.call_by_name("shen.shen", [])
}

Shen.console_repl = function () {
  Shen.init({io: Shen.console_io, start_repl: true})
}

try {
  module.exports = Shen
} catch (e) {}


Shen.fns["hd"] = [Shen.type_func, function shen_user_lambda5620(Arg5619) {
  if (Arg5619.length < 1) return [Shen.type_func, shen_user_lambda5620, 1, Arg5619];
  var Arg5619_0 = Arg5619[0];
  return Arg5619_0[1]}, 1, [], "hd"];






Shen.fns["tl"] = [Shen.type_func, function shen_user_lambda5622(Arg5621) {
  if (Arg5621.length < 1) return [Shen.type_func, shen_user_lambda5622, 1, Arg5621];
  var Arg5621_0 = Arg5621[0];
  return Arg5621_0[2]}, 1, [], "tl"];






Shen.fns["not"] = [Shen.type_func, function shen_user_lambda5624(Arg5623) {
  if (Arg5623.length < 1) return [Shen.type_func, shen_user_lambda5624, 1, Arg5623];
  var Arg5623_0 = Arg5623[0];
  return (!Arg5623_0)}, 1, [], "not"];






Shen.fns["thaw"] = [Shen.type_func, function shen_user_lambda5626(Arg5625) {
  if (Arg5625.length < 1) return [Shen.type_func, shen_user_lambda5626, 1, Arg5625];
  var Arg5625_0 = Arg5625[0];
  return Shen.thaw(Arg5625_0)}, 1, [], "thaw"];






Shen.fns["string?"] = [Shen.type_func, function shen_user_lambda5628(Arg5627) {
  if (Arg5627.length < 1) return [Shen.type_func, shen_user_lambda5628, 1, Arg5627];
  var Arg5627_0 = Arg5627[0];
  return (typeof(Arg5627_0) == 'string')}, 1, [], "string?"];






Shen.fns["number?"] = [Shen.type_func, function shen_user_lambda5630(Arg5629) {
  if (Arg5629.length < 1) return [Shen.type_func, shen_user_lambda5630, 1, Arg5629];
  var Arg5629_0 = Arg5629[0];
  return (typeof(Arg5629_0) == 'number')}, 1, [], "number?"];






Shen.fns["symbol?"] = [Shen.type_func, function shen_user_lambda5632(Arg5631) {
  if (Arg5631.length < 1) return [Shen.type_func, shen_user_lambda5632, 1, Arg5631];
  var Arg5631_0 = Arg5631[0];
  return Shen.is_type(Arg5631_0, Shen.type_symbol)}, 1, [], "symbol?"];






Shen.fns["cons?"] = [Shen.type_func, function shen_user_lambda5634(Arg5633) {
  if (Arg5633.length < 1) return [Shen.type_func, shen_user_lambda5634, 1, Arg5633];
  var Arg5633_0 = Arg5633[0];
  return Shen.is_type(Arg5633_0, Shen.type_cons)}, 1, [], "cons?"];






Shen.fns["vector?"] = [Shen.type_func, function shen_user_lambda5636(Arg5635) {
  if (Arg5635.length < 1) return [Shen.type_func, shen_user_lambda5636, 1, Arg5635];
  var Arg5635_0 = Arg5635[0];
  return (function() {
  return Shen.vector$question$(Arg5635_0);})}, 1, [], "vector?"];






Shen.fns["absvector?"] = [Shen.type_func, function shen_user_lambda5638(Arg5637) {
  if (Arg5637.length < 1) return [Shen.type_func, shen_user_lambda5638, 1, Arg5637];
  var Arg5637_0 = Arg5637[0];
  return (function() {
  return Shen.absvector$question$(Arg5637_0);})}, 1, [], "absvector?"];






Shen.fns["value"] = [Shen.type_func, function shen_user_lambda5640(Arg5639) {
  if (Arg5639.length < 1) return [Shen.type_func, shen_user_lambda5640, 1, Arg5639];
  var Arg5639_0 = Arg5639[0];
  return (Shen.globals[Arg5639_0[1]])}, 1, [], "value"];






Shen.fns["intern"] = [Shen.type_func, function shen_user_lambda5642(Arg5641) {
  if (Arg5641.length < 1) return [Shen.type_func, shen_user_lambda5642, 1, Arg5641];
  var Arg5641_0 = Arg5641[0];
  return (function() {
  return Shen.intern(Arg5641_0);})}, 1, [], "intern"];






Shen.fns["vector"] = [Shen.type_func, function shen_user_lambda5644(Arg5643) {
  if (Arg5643.length < 1) return [Shen.type_func, shen_user_lambda5644, 1, Arg5643];
  var Arg5643_0 = Arg5643[0];
  return (function() {
  return Shen.vector(Arg5643_0);})}, 1, [], "vector"];






Shen.fns["read-byte"] = [Shen.type_func, function shen_user_lambda5646(Arg5645) {
  if (Arg5645.length < 1) return [Shen.type_func, shen_user_lambda5646, 1, Arg5645];
  var Arg5645_0 = Arg5645[0];
  return (function() {
  return Shen.read_byte(Arg5645_0);})}, 1, [], "read-byte"];






Shen.fns["close"] = [Shen.type_func, function shen_user_lambda5648(Arg5647) {
  if (Arg5647.length < 1) return [Shen.type_func, shen_user_lambda5648, 1, Arg5647];
  var Arg5647_0 = Arg5647[0];
  return (function() {
  return Shen.close(Arg5647_0);})}, 1, [], "close"];






Shen.fns["absvector"] = [Shen.type_func, function shen_user_lambda5650(Arg5649) {
  if (Arg5649.length < 1) return [Shen.type_func, shen_user_lambda5650, 1, Arg5649];
  var Arg5649_0 = Arg5649[0];
  return (function() {
  return Shen.absvector(Arg5649_0);})}, 1, [], "absvector"];






Shen.fns["str"] = [Shen.type_func, function shen_user_lambda5652(Arg5651) {
  if (Arg5651.length < 1) return [Shen.type_func, shen_user_lambda5652, 1, Arg5651];
  var Arg5651_0 = Arg5651[0];
  return (function() {
  return Shen.str(Arg5651_0);})}, 1, [], "str"];






Shen.fns["tlstr"] = [Shen.type_func, function shen_user_lambda5654(Arg5653) {
  if (Arg5653.length < 1) return [Shen.type_func, shen_user_lambda5654, 1, Arg5653];
  var Arg5653_0 = Arg5653[0];
  return (function() {
  return Shen.tlstr(Arg5653_0);})}, 1, [], "tlstr"];






Shen.fns["n->string"] = [Shen.type_func, function shen_user_lambda5656(Arg5655) {
  if (Arg5655.length < 1) return [Shen.type_func, shen_user_lambda5656, 1, Arg5655];
  var Arg5655_0 = Arg5655[0];
  return (function() {
  return Shen.n_$gt$string(Arg5655_0);})}, 1, [], "n->string"];






Shen.fns["string->n"] = [Shen.type_func, function shen_user_lambda5658(Arg5657) {
  if (Arg5657.length < 1) return [Shen.type_func, shen_user_lambda5658, 1, Arg5657];
  var Arg5657_0 = Arg5657[0];
  return (function() {
  return Shen.string_$gt$n(Arg5657_0);})}, 1, [], "string->n"];






Shen.fns["empty?"] = [Shen.type_func, function shen_user_lambda5660(Arg5659) {
  if (Arg5659.length < 1) return [Shen.type_func, shen_user_lambda5660, 1, Arg5659];
  var Arg5659_0 = Arg5659[0];
  return (function() {
  return Shen.empty$question$(Arg5659_0);})}, 1, [], "empty?"];






Shen.fns["get-time"] = [Shen.type_func, function shen_user_lambda5662(Arg5661) {
  if (Arg5661.length < 1) return [Shen.type_func, shen_user_lambda5662, 1, Arg5661];
  var Arg5661_0 = Arg5661[0];
  return (function() {
  return Shen.get_time(Arg5661_0);})}, 1, [], "get-time"];






Shen.fns["error"] = [Shen.type_func, function shen_user_lambda5664(Arg5663) {
  if (Arg5663.length < 1) return [Shen.type_func, shen_user_lambda5664, 1, Arg5663];
  var Arg5663_0 = Arg5663[0];
  return (function() {
  return Shen.error(Arg5663_0);})}, 1, [], "error"];






Shen.fns["simple-error"] = [Shen.type_func, function shen_user_lambda5666(Arg5665) {
  if (Arg5665.length < 1) return [Shen.type_func, shen_user_lambda5666, 1, Arg5665];
  var Arg5665_0 = Arg5665[0];
  return (function() {
  return Shen.simple_error(Arg5665_0);})}, 1, [], "simple-error"];






Shen.fns["eval-kl"] = [Shen.type_func, function shen_user_lambda5668(Arg5667) {
  if (Arg5667.length < 1) return [Shen.type_func, shen_user_lambda5668, 1, Arg5667];
  var Arg5667_0 = Arg5667[0];
  return (function() {
  return Shen.eval_kl(Arg5667_0);})}, 1, [], "eval-kl"];






Shen.fns["error-to-string"] = [Shen.type_func, function shen_user_lambda5670(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5670, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (function() {
  return Shen.error_to_string(Arg5669_0);})}, 1, [], "error-to-string"];






Shen.fns["js.call-js"] = [Shen.type_func, function shen_user_lambda5672(Arg5671) {
  if (Arg5671.length < 1) return [Shen.type_func, shen_user_lambda5672, 1, Arg5671];
  var Arg5671_0 = Arg5671[0];
  return (function() {
  return Shen.js$dot$call_js(Arg5671_0);})}, 1, [], "js.call-js"];






Shen.fns["+"] = [Shen.type_func, function shen_user_lambda5674(Arg5673) {
  if (Arg5673.length < 2) return [Shen.type_func, shen_user_lambda5674, 2, Arg5673];
  var Arg5673_0 = Arg5673[0], Arg5673_1 = Arg5673[1];
  return (Arg5673_0 + Arg5673_1)}, 2, [], "+"];






Shen.fns["-"] = [Shen.type_func, function shen_user_lambda5676(Arg5675) {
  if (Arg5675.length < 2) return [Shen.type_func, shen_user_lambda5676, 2, Arg5675];
  var Arg5675_0 = Arg5675[0], Arg5675_1 = Arg5675[1];
  return (Arg5675_0 - Arg5675_1)}, 2, [], "-"];






Shen.fns["*"] = [Shen.type_func, function shen_user_lambda5678(Arg5677) {
  if (Arg5677.length < 2) return [Shen.type_func, shen_user_lambda5678, 2, Arg5677];
  var Arg5677_0 = Arg5677[0], Arg5677_1 = Arg5677[1];
  return (Arg5677_0 * Arg5677_1)}, 2, [], "*"];






Shen.fns["/"] = [Shen.type_func, function shen_user_lambda5680(Arg5679) {
  if (Arg5679.length < 2) return [Shen.type_func, shen_user_lambda5680, 2, Arg5679];
  var Arg5679_0 = Arg5679[0], Arg5679_1 = Arg5679[1];
  return (Arg5679_0 / Arg5679_1)}, 2, [], "/"];






Shen.fns["and"] = [Shen.type_func, function shen_user_lambda5682(Arg5681) {
  if (Arg5681.length < 2) return [Shen.type_func, shen_user_lambda5682, 2, Arg5681];
  var Arg5681_0 = Arg5681[0], Arg5681_1 = Arg5681[1];
  return (Arg5681_0 && Arg5681_1)}, 2, [], "and"];






Shen.fns["or"] = [Shen.type_func, function shen_user_lambda5684(Arg5683) {
  if (Arg5683.length < 2) return [Shen.type_func, shen_user_lambda5684, 2, Arg5683];
  var Arg5683_0 = Arg5683[0], Arg5683_1 = Arg5683[1];
  return (Arg5683_0 || Arg5683_1)}, 2, [], "or"];






Shen.fns["="] = [Shen.type_func, function shen_user_lambda5686(Arg5685) {
  if (Arg5685.length < 2) return [Shen.type_func, shen_user_lambda5686, 2, Arg5685];
  var Arg5685_0 = Arg5685[0], Arg5685_1 = Arg5685[1];
  return Shen.$eq$(Arg5685_0, Arg5685_1)}, 2, [], "="];






Shen.fns[">"] = [Shen.type_func, function shen_user_lambda5688(Arg5687) {
  if (Arg5687.length < 2) return [Shen.type_func, shen_user_lambda5688, 2, Arg5687];
  var Arg5687_0 = Arg5687[0], Arg5687_1 = Arg5687[1];
  return (Arg5687_0 > Arg5687_1)}, 2, [], ">"];






Shen.fns[">="] = [Shen.type_func, function shen_user_lambda5690(Arg5689) {
  if (Arg5689.length < 2) return [Shen.type_func, shen_user_lambda5690, 2, Arg5689];
  var Arg5689_0 = Arg5689[0], Arg5689_1 = Arg5689[1];
  return (Arg5689_0 >= Arg5689_1)}, 2, [], ">="];






Shen.fns["<"] = [Shen.type_func, function shen_user_lambda5692(Arg5691) {
  if (Arg5691.length < 2) return [Shen.type_func, shen_user_lambda5692, 2, Arg5691];
  var Arg5691_0 = Arg5691[0], Arg5691_1 = Arg5691[1];
  return (Arg5691_0 < Arg5691_1)}, 2, [], "<"];






Shen.fns["<="] = [Shen.type_func, function shen_user_lambda5694(Arg5693) {
  if (Arg5693.length < 2) return [Shen.type_func, shen_user_lambda5694, 2, Arg5693];
  var Arg5693_0 = Arg5693[0], Arg5693_1 = Arg5693[1];
  return (Arg5693_0 <= Arg5693_1)}, 2, [], "<="];






Shen.fns["cons"] = [Shen.type_func, function shen_user_lambda5696(Arg5695) {
  if (Arg5695.length < 2) return [Shen.type_func, shen_user_lambda5696, 2, Arg5695];
  var Arg5695_0 = Arg5695[0], Arg5695_1 = Arg5695[1];
  return [Shen.type_cons, Arg5695_0, Arg5695_1]}, 2, [], "cons"];






Shen.fns["set"] = [Shen.type_func, function shen_user_lambda5698(Arg5697) {
  if (Arg5697.length < 2) return [Shen.type_func, shen_user_lambda5698, 2, Arg5697];
  var Arg5697_0 = Arg5697[0], Arg5697_1 = Arg5697[1];
  return (Shen.globals[Arg5697_0[1]] = Arg5697_1)}, 2, [], "set"];






Shen.fns["<-address"] = [Shen.type_func, function shen_user_lambda5700(Arg5699) {
  if (Arg5699.length < 2) return [Shen.type_func, shen_user_lambda5700, 2, Arg5699];
  var Arg5699_0 = Arg5699[0], Arg5699_1 = Arg5699[1];
  return Shen.absvector_ref(Arg5699_0, Arg5699_1)}, 2, [], "<-address"];






Shen.fns["cn"] = [Shen.type_func, function shen_user_lambda5702(Arg5701) {
  if (Arg5701.length < 2) return [Shen.type_func, shen_user_lambda5702, 2, Arg5701];
  var Arg5701_0 = Arg5701[0], Arg5701_1 = Arg5701[1];
  return (Arg5701_0 + Arg5701_1)}, 2, [], "cn"];






Shen.fns["pos"] = [Shen.type_func, function shen_user_lambda5704(Arg5703) {
  if (Arg5703.length < 2) return [Shen.type_func, shen_user_lambda5704, 2, Arg5703];
  var Arg5703_0 = Arg5703[0], Arg5703_1 = Arg5703[1];
  return Arg5703_0[Arg5703_1]}, 2, [], "pos"];






Shen.fns["@p"] = [Shen.type_func, function shen_user_lambda5706(Arg5705) {
  if (Arg5705.length < 2) return [Shen.type_func, shen_user_lambda5706, 2, Arg5705];
  var Arg5705_0 = Arg5705[0], Arg5705_1 = Arg5705[1];
  return [Shen.fns['shen.tuple'], Arg5705_0, Arg5705_1]}, 2, [], "@p"];






Shen.fns["pr"] = [Shen.type_func, function shen_user_lambda5708(Arg5707) {
  if (Arg5707.length < 2) return [Shen.type_func, shen_user_lambda5708, 2, Arg5707];
  var Arg5707_0 = Arg5707[0], Arg5707_1 = Arg5707[1];
  return (function() {
  return Shen.pr(Arg5707_0, Arg5707_1);})}, 2, [], "pr"];






Shen.fns["address->"] = [Shen.type_func, function shen_user_lambda5710(Arg5709) {
  if (Arg5709.length < 3) return [Shen.type_func, shen_user_lambda5710, 3, Arg5709];
  var Arg5709_0 = Arg5709[0], Arg5709_1 = Arg5709[1], Arg5709_2 = Arg5709[2];
  return Shen.absvector_set(Arg5709_0, Arg5709_1, Arg5709_2)}, 3, [], "address->"];






Shen.fns["open"] = [Shen.type_func, function shen_user_lambda5712(Arg5711) {
  if (Arg5711.length < 3) return [Shen.type_func, shen_user_lambda5712, 3, Arg5711];
  var Arg5711_0 = Arg5711[0], Arg5711_1 = Arg5711[1], Arg5711_2 = Arg5711[2];
  return (function() {
  return Shen.open(Arg5711_0, Arg5711_1, Arg5711_2);})}, 3, [], "open"];






Shen.call_toplevel(function shen_toplevel3892(Arg3890) {
  if (Arg3890.length < 0) return [Shen.type_func, shen_toplevel3892, 0, Arg3890];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "reg-kl.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})});




Shen.fns["reg-kl.mk-context"] = [Shen.type_func, function shen_user_lambda3896(Arg3895) {
  if (Arg3895.length < 2) return [Shen.type_func, shen_user_lambda3896, 2, Arg3895];
  var Arg3895_0 = Arg3895[0], Arg3895_1 = Arg3895[1];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg3895_0, Shen.call(Shen.fns["@v"], [Arg3895_1, Shen.vector(0)])]);})}, 2, [], "reg-kl.mk-context"];





Shen.fns["reg-kl.context-nregs->"] = [Shen.type_func, function shen_user_lambda3900(Arg3899) {
  if (Arg3899.length < 2) return [Shen.type_func, shen_user_lambda3900, 2, Arg3899];
  var Arg3899_0 = Arg3899[0], Arg3899_1 = Arg3899[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg3899_0, 2, Arg3899_1]);})}, 2, [], "reg-kl.context-nregs->"];





Shen.fns["reg-kl.context-toplevel->"] = [Shen.type_func, function shen_user_lambda3904(Arg3903) {
  if (Arg3903.length < 2) return [Shen.type_func, shen_user_lambda3904, 2, Arg3903];
  var Arg3903_0 = Arg3903[0], Arg3903_1 = Arg3903[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg3903_0, 1, Arg3903_1]);})}, 2, [], "reg-kl.context-toplevel->"];





Shen.fns["reg-kl.context-nregs"] = [Shen.type_func, function shen_user_lambda3907(Arg3906) {
  if (Arg3906.length < 1) return [Shen.type_func, shen_user_lambda3907, 1, Arg3906];
  var Arg3906_0 = Arg3906[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg3906_0, 2]);})}, 1, [], "reg-kl.context-nregs"];





Shen.fns["reg-kl.context-toplevel"] = [Shen.type_func, function shen_user_lambda3910(Arg3909) {
  if (Arg3909.length < 1) return [Shen.type_func, shen_user_lambda3910, 1, Arg3909];
  var Arg3909_0 = Arg3909[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg3909_0, 1]);})}, 1, [], "reg-kl.context-toplevel"];





Shen.fns["reg-kl.var-idx-aux"] = [Shen.type_func, function shen_user_lambda3920(Arg3919) {
  if (Arg3919.length < 3) return [Shen.type_func, shen_user_lambda3920, 3, Arg3919];
  var Arg3919_0 = Arg3919[0], Arg3919_1 = Arg3919[1], Arg3919_2 = Arg3919[2];
  return ((Shen.empty$question$(Arg3919_2))
  ? (function() {
  return Shen.simple_error(("Unknown var: " + Shen.call(Shen.fns["shen.app"], [Arg3919_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (((Shen.is_type(Arg3919_2, Shen.type_cons) && (Shen.is_type(Arg3919_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3919_2[1][1], Arg3919_0)))))
  ? Arg3919_2[1][2]
  : ((Shen.is_type(Arg3919_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-idx-aux"], [Arg3919_0, (Arg3919_1 + 1), Arg3919_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.var-idx-aux"]]);}))))}, 3, [], "reg-kl.var-idx-aux"];





Shen.fns["reg-kl.var-idx"] = [Shen.type_func, function shen_user_lambda3924(Arg3923) {
  if (Arg3923.length < 2) return [Shen.type_func, shen_user_lambda3924, 2, Arg3923];
  var Arg3923_0 = Arg3923[0], Arg3923_1 = Arg3923[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-idx-aux"], [Arg3923_0, 0, Arg3923_1]);})}, 2, [], "reg-kl.var-idx"];





Shen.fns["reg-kl.new-var-idx-aux"] = [Shen.type_func, function shen_user_lambda3937(Arg3936) {
  if (Arg3936.length < 3) return [Shen.type_func, shen_user_lambda3937, 3, Arg3936];
  var Arg3936_0 = Arg3936[0], Arg3936_1 = Arg3936[1], Arg3936_2 = Arg3936[2];
  return ((Shen.empty$question$(Arg3936_2))
  ? Arg3936_1
  : (((Shen.is_type(Arg3936_2, Shen.type_cons) && (Shen.is_type(Arg3936_2[1], Shen.type_cons) && (Arg3936_2[1][2] < 0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3936_0, Arg3936_1, Arg3936_2[2]]);})
  : (((Shen.is_type(Arg3936_2, Shen.type_cons) && (Shen.is_type(Arg3936_2[1], Shen.type_cons) && (Arg3936_2[1][2] >= Arg3936_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3936_0, (Arg3936_2[1][2] + 1), Arg3936_2[2]]);})
  : ((Shen.is_type(Arg3936_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3936_0, Arg3936_1, Arg3936_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.new-var-idx-aux"]]);})))))}, 3, [], "reg-kl.new-var-idx-aux"];





Shen.fns["reg-kl.new-var-idx"] = [Shen.type_func, function shen_user_lambda3941(Arg3940) {
  if (Arg3940.length < 2) return [Shen.type_func, shen_user_lambda3941, 2, Arg3940];
  var Arg3940_0 = Arg3940[0], Arg3940_1 = Arg3940[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3940_0, 0, Arg3940_1]);})}, 2, [], "reg-kl.new-var-idx"];





Shen.fns["reg-kl.var-defined?"] = [Shen.type_func, function shen_user_lambda3959(Arg3958) {
  if (Arg3958.length < 2) return [Shen.type_func, shen_user_lambda3959, 2, Arg3958];
  var Arg3958_0 = Arg3958[0], Arg3958_1 = Arg3958[1];
  return ((Shen.empty$question$(Arg3958_1))
  ? false
  : (((Shen.is_type(Arg3958_1, Shen.type_cons) && (Shen.is_type(Arg3958_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3958_1[1][1], Arg3958_0)))))
  ? true
  : (((Shen.is_type(Arg3958_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3958_1[1], Arg3958_0))))
  ? true
  : ((Shen.is_type(Arg3958_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-defined?"], [Arg3958_0, Arg3958_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.var-defined?"]]);})))))}, 2, [], "reg-kl.var-defined?"];





Shen.fns["reg-kl.used-vars-aux"] = [Shen.type_func, function shen_user_lambda3977(Arg3976) {
  if (Arg3976.length < 4) return [Shen.type_func, shen_user_lambda3977, 4, Arg3976];
  var Arg3976_0 = Arg3976[0], Arg3976_1 = Arg3976[1], Arg3976_2 = Arg3976[2], Arg3976_3 = Arg3976[3];
  var R0;
  return (((Shen.is_type(Arg3976_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg3976_0[1])) && (Shen.is_type(Arg3976_0[2], Shen.type_cons) && (Shen.is_type(Arg3976_0[2][2], Shen.type_cons) && (Shen.is_type(Arg3976_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg3976_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3976_0[2][2][2][1], Arg3976_1, [Shen.type_cons, Arg3976_0[2][1], Arg3976_2], Arg3976_3])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3976_0[2][2][1], Arg3976_1, Arg3976_2, R0]);}))
  : (((Shen.is_type(Arg3976_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg3976_0[1])) && (Shen.is_type(Arg3976_0[2], Shen.type_cons) && (Shen.is_type(Arg3976_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg3976_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3976_0[2][2][1], Arg3976_1, [Shen.type_cons, Arg3976_0[2][1], Arg3976_2], Arg3976_3]);})
  : ((Shen.is_type(Arg3976_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3976_0[1], Arg3976_1, Arg3976_2, Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3976_0[2], Arg3976_1, Arg3976_2, Arg3976_3])]);})
  : (((Shen.is_type(Arg3976_0, Shen.type_symbol) && ((!Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg3976_0, Arg3976_2])) && Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg3976_0, Arg3976_1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["adjoin"], [Arg3976_0, Arg3976_3]);})
  : Arg3976_3))))}, 4, [], "reg-kl.used-vars-aux"];





Shen.fns["reg-kl.used-vars"] = [Shen.type_func, function shen_user_lambda3981(Arg3980) {
  if (Arg3980.length < 2) return [Shen.type_func, shen_user_lambda3981, 2, Arg3980];
  var Arg3980_0 = Arg3980[0], Arg3980_1 = Arg3980[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3980_0, Arg3980_1, [], []]);})}, 2, [], "reg-kl.used-vars"];





Shen.fns["reg-kl.remove-do"] = [Shen.type_func, function shen_user_lambda3984(Arg3983) {
  if (Arg3983.length < 1) return [Shen.type_func, shen_user_lambda3984, 1, Arg3983];
  var Arg3983_0 = Arg3983[0];
  return (((Shen.is_type(Arg3983_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg3983_0[1]))))
  ? Arg3983_0[2]
  : [Shen.type_cons, Arg3983_0, []])}, 1, [], "reg-kl.remove-do"];





Shen.fns["reg-kl.remove-duplicates-aux"] = [Shen.type_func, function shen_user_lambda3988(Arg3987) {
  if (Arg3987.length < 2) return [Shen.type_func, shen_user_lambda3988, 2, Arg3987];
  var Arg3987_0 = Arg3987[0], Arg3987_1 = Arg3987[1];
  return ((Shen.empty$question$(Arg3987_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg3987_1]);})
  : ((Shen.is_type(Arg3987_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.remove-duplicates-aux"], [Arg3987_0[2], Shen.call(Shen.fns["adjoin"], [Arg3987_0[1], Arg3987_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.remove-duplicates-aux"]]);})))}, 2, [], "reg-kl.remove-duplicates-aux"];





Shen.fns["reg-kl.remove-duplicates"] = [Shen.type_func, function shen_user_lambda3991(Arg3990) {
  if (Arg3990.length < 1) return [Shen.type_func, shen_user_lambda3991, 1, Arg3990];
  var Arg3990_0 = Arg3990[0];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.remove-duplicates-aux"], [Arg3990_0, []]);})}, 1, [], "reg-kl.remove-duplicates"];





Shen.fns["reg-kl.used-vars-cascade-aux"] = [Shen.type_func, function shen_user_lambda4001(Arg4000) {
  if (Arg4000.length < 4) return [Shen.type_func, shen_user_lambda4001, 4, Arg4000];
  var Arg4000_0 = Arg4000[0], Arg4000_1 = Arg4000[1], Arg4000_2 = Arg4000[2], Arg4000_3 = Arg4000[3];
  var R0;
  return ((Shen.empty$question$(Arg4000_0))
  ? Arg4000_3
  : ((Shen.is_type(Arg4000_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4000_0[1], Arg4000_1, [], Arg4000_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-cascade-aux"], [Arg4000_0[2], Arg4000_1, R0, [Shen.type_cons, R0, Arg4000_3]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.used-vars-cascade-aux"]]);})))}, 4, [], "reg-kl.used-vars-cascade-aux"];





Shen.fns["reg-kl.used-vars-cascade"] = [Shen.type_func, function shen_user_lambda4006(Arg4005) {
  if (Arg4005.length < 3) return [Shen.type_func, shen_user_lambda4006, 3, Arg4005];
  var Arg4005_0 = Arg4005[0], Arg4005_1 = Arg4005[1], Arg4005_2 = Arg4005[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-cascade-aux"], [Shen.call(Shen.fns["reverse"], [Arg4005_0]), Arg4005_1, Arg4005_2, []]);})}, 3, [], "reg-kl.used-vars-cascade"];





Shen.fns["reg-kl.mk-shen-set-reg"] = [Shen.type_func, function shen_user_lambda4011(Arg4010) {
  if (Arg4010.length < 2) return [Shen.type_func, shen_user_lambda4011, 2, Arg4010];
  var Arg4010_0 = Arg4010[0], Arg4010_1 = Arg4010[1];
  return (((Arg4010_0 < 0))
  ? (function() {
  return Shen.simple_error("Cannot set function argument\x0a");})
  : [Shen.type_cons, [Shen.type_symbol, "shen-set-reg!"], [Shen.type_cons, Arg4010_0, [Shen.type_cons, Arg4010_1, []]]])}, 2, [], "reg-kl.mk-shen-set-reg"];





Shen.fns["reg-kl.mk-shen-get-reg"] = [Shen.type_func, function shen_user_lambda4014(Arg4013) {
  if (Arg4013.length < 1) return [Shen.type_func, shen_user_lambda4014, 1, Arg4013];
  var Arg4013_0 = Arg4013[0];
  return (((Arg4013_0 < 0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-get-arg"], [Shen.type_cons, ((0 - Arg4013_0) - 1), []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen-get-reg"], [Shen.type_cons, Arg4013_0, []]])}, 1, [], "reg-kl.mk-shen-get-reg"];





Shen.fns["reg-kl.reuse-idx"] = [Shen.type_func, function shen_user_lambda4023(Arg4022) {
  if (Arg4022.length < 2) return [Shen.type_func, shen_user_lambda4023, 2, Arg4022];
  var Arg4022_0 = Arg4022[0], Arg4022_1 = Arg4022[1];
  return ((Shen.empty$question$(Arg4022_1))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg4022_1, Shen.type_cons) && (Shen.is_type(Arg4022_1[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Arg4022_1[1][1], Arg4022_0)) && (Arg4022_1[1][2] >= 0)))))
  ? Arg4022_1[1][2]
  : ((Shen.is_type(Arg4022_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.reuse-idx"], [Arg4022_0, Arg4022_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.reuse-idx"]]);}))))}, 2, [], "reg-kl.reuse-idx"];





Shen.fns["reg-kl.new-var-idx-or-reuse"] = [Shen.type_func, function shen_user_lambda4028(Arg4027) {
  if (Arg4027.length < 3) return [Shen.type_func, shen_user_lambda4028, 3, Arg4027];
  var Arg4027_0 = Arg4027[0], Arg4027_1 = Arg4027[1], Arg4027_2 = Arg4027[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg4027_2))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx"], [Arg4027_0, Arg4027_1]);})
  : ((R0 = (new Shen.Freeze([Arg4027_0, Arg4027_2, Arg4027_1], function(Arg4029) {
  var Arg4029_0 = Arg4029[0], Arg4029_1 = Arg4029[1], Arg4029_2 = Arg4029[2];
  return (function() {
  return ((Shen.is_type(Arg4029_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-or-reuse"], [Arg4029_0, Arg4029_2, Arg4029_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.new-var-idx-or-reuse"]]);}));})}))),
  ((Shen.is_type(Arg4027_2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["reg-kl.reuse-idx"], [Arg4027_2[1], Arg4027_1])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))}, 3, [], "reg-kl.new-var-idx-or-reuse"];





Shen.fns["reg-kl.add-var-aux"] = [Shen.type_func, function shen_user_lambda4037(Arg4036) {
  if (Arg4036.length < 4) return [Shen.type_func, shen_user_lambda4037, 4, Arg4036];
  var Arg4036_0 = Arg4036[0], Arg4036_1 = Arg4036[1], Arg4036_2 = Arg4036[2], Arg4036_3 = Arg4036[3];
  return ((Shen.empty$question$(Arg4036_2))
  ? [Shen.type_cons, [Shen.type_cons, Arg4036_0, Arg4036_1], Shen.call(Shen.fns["reverse"], [Arg4036_3])]
  : (((Shen.is_type(Arg4036_2, Shen.type_cons) && (Shen.is_type(Arg4036_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4036_2[1][2], Arg4036_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["reverse"], [[Shen.type_cons, [Shen.type_cons, Arg4036_0, Arg4036_2[1][2]], Arg4036_3]]), Arg4036_2[2]]);})
  : ((Shen.is_type(Arg4036_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.add-var-aux"], [Arg4036_0, Arg4036_1, Arg4036_2[2], [Shen.type_cons, Arg4036_2[1], Arg4036_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.add-var-aux"]]);}))))}, 4, [], "reg-kl.add-var-aux"];





Shen.fns["reg-kl.add-var"] = [Shen.type_func, function shen_user_lambda4042(Arg4041) {
  if (Arg4041.length < 3) return [Shen.type_func, shen_user_lambda4042, 3, Arg4041];
  var Arg4041_0 = Arg4041[0], Arg4041_1 = Arg4041[1], Arg4041_2 = Arg4041[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.add-var-aux"], [Arg4041_0, Arg4041_1, Arg4041_2, []]);})}, 3, [], "reg-kl.add-var"];





Shen.fns["reg-kl.max"] = [Shen.type_func, function shen_user_lambda4050(Arg4049) {
  if (Arg4049.length < 2) return [Shen.type_func, shen_user_lambda4050, 2, Arg4049];
  var Arg4049_0 = Arg4049[0], Arg4049_1 = Arg4049[1];
  return (((Arg4049_0 > Arg4049_1))
  ? Arg4049_0
  : Arg4049_1)}, 2, [], "reg-kl.max"];





Shen.fns["reg-kl.setreg-unexpr"] = [Shen.type_func, function shen_user_lambda4055(Arg4054) {
  if (Arg4054.length < 3) return [Shen.type_func, shen_user_lambda4055, 3, Arg4054];
  var Arg4054_0 = Arg4054[0], Arg4054_1 = Arg4054[1], Arg4054_2 = Arg4054[2];
  return (((Shen.is_type(Arg4054_1, Shen.type_cons) && Shen.empty$question$(Arg4054_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4054_0, Arg4054_1[1]]), Arg4054_2]]);})
  : ((Shen.is_type(Arg4054_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.setreg-unexpr"], [Arg4054_0, Arg4054_1[2], [Shen.type_cons, Arg4054_1[1], Arg4054_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4054_0, Arg4054_1]);})))}, 3, [], "reg-kl.setreg-unexpr"];





Shen.fns["reg-kl.setreg-do-expr"] = [Shen.type_func, function shen_user_lambda4064(Arg4063) {
  if (Arg4063.length < 3) return [Shen.type_func, shen_user_lambda4064, 3, Arg4063];
  var Arg4063_0 = Arg4063[0], Arg4063_1 = Arg4063[1], Arg4063_2 = Arg4063[2];
  return ((Shen.empty$question$(Arg4063_1))
  ? (function() {
  return Shen.simple_error("Broken `do` expression.");})
  : (((Shen.is_type(Arg4063_1, Shen.type_cons) && Shen.empty$question$(Arg4063_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4063_0, Arg4063_1[1]]), Arg4063_2]]);})
  : ((Shen.is_type(Arg4063_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.setreg-do-expr"], [Arg4063_0, Arg4063_1[2], [Shen.type_cons, Arg4063_1[1], Arg4063_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.setreg-do-expr"]]);}))))}, 3, [], "reg-kl.setreg-do-expr"];





Shen.fns["reg-kl.mk-shen-set-reg-unexpr"] = [Shen.type_func, function shen_user_lambda4068(Arg4067) {
  if (Arg4067.length < 2) return [Shen.type_func, shen_user_lambda4068, 2, Arg4067];
  var Arg4067_0 = Arg4067[0], Arg4067_1 = Arg4067[1];
  var R0, R1;
  return (((Shen.is_type(Arg4067_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4067_1[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["reg-kl.setreg-do-expr"], [Arg4067_0, Arg4067_1[2], []])]
  : (((Shen.is_type(Arg4067_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4067_1[1])) && (Shen.is_type(Arg4067_1[2], Shen.type_cons) && (Shen.is_type(Arg4067_1[2][2], Shen.type_cons) && (Shen.is_type(Arg4067_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4067_1[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4067_0, Arg4067_1[2][2][1]])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4067_0, Arg4067_1[2][2][2][1]])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4067_1[2][1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4067_0, Arg4067_1]);})))}, 2, [], "reg-kl.mk-shen-set-reg-unexpr"];





Shen.fns["reg-kl.walk-let-expr"] = [Shen.type_func, function shen_user_lambda4086(Arg4085) {
  if (Arg4085.length < 8) return [Shen.type_func, shen_user_lambda4086, 8, Arg4085];
  var Arg4085_0 = Arg4085[0], Arg4085_1 = Arg4085[1], Arg4085_2 = Arg4085[2], Arg4085_3 = Arg4085[3], Arg4085_4 = Arg4085[4], Arg4085_5 = Arg4085[5], Arg4085_6 = Arg4085[6], Arg4085_7 = Arg4085[7];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4085_7)))
  ? ((R0 = Shen.call(Shen.fns["remove"], [Arg4085_0, Arg4085_3])),
  (R0 = Shen.call(Shen.fns["append"], [R0, Arg4085_5])),
  (R1 = Shen.call(Shen.fns["difference"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "head"], Arg4085_2]), R0])),
  (R1 = Shen.call(Shen.fns["reg-kl.new-var-idx-or-reuse"], [Arg4085_0, Arg4085_2, R1])),
  Shen.call(Shen.fns["reg-kl.context-nregs->"], [Arg4085_6, Shen.call(Shen.fns["reg-kl.max"], [(R1 + 1), Shen.call(Shen.fns["reg-kl.context-nregs"], [Arg4085_6])])]),
  (R2 = Shen.call(Shen.fns["reg-kl.add-var"], [Arg4085_0, R1, Arg4085_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4085_1, Arg4085_2, Arg4085_4, R0, Arg4085_6])),
  [Shen.fns['shen.tuple'], Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [R1, R0]), R2])
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4085_7)))
  ? [Shen.fns['shen.tuple'], Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4085_1, Arg4085_2, Arg4085_4, Arg4085_5, Arg4085_6]), Arg4085_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-let-expr"]]);})))}, 8, [], "reg-kl.walk-let-expr"];





Shen.fns["reg-kl.walk-let"] = [Shen.type_func, function shen_user_lambda4095(Arg4094) {
  if (Arg4094.length < 7) return [Shen.type_func, shen_user_lambda4095, 7, Arg4094];
  var Arg4094_0 = Arg4094[0], Arg4094_1 = Arg4094[1], Arg4094_2 = Arg4094[2], Arg4094_3 = Arg4094[3], Arg4094_4 = Arg4094[4], Arg4094_5 = Arg4094[5], Arg4094_6 = Arg4094[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [Arg4094_2, [Shen.type_cons, Arg4094_0, Arg4094_3]])),
  (R1 = Shen.call(Shen.fns["element?"], [Arg4094_0, R0])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk-let-expr"], [Arg4094_0, Arg4094_1, Arg4094_3, R0, Arg4094_4, Arg4094_5, Arg4094_6, R1])),
  (R2 = Shen.call(Shen.fns["fst"], [R1])),
  (R1 = Shen.call(Shen.fns["snd"], [R1])),
  (R1 = Shen.call(Shen.fns["reg-kl.remove-do"], [Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4094_2, R1, Shen.call(Shen.fns["append"], [R0, Arg4094_5]), Arg4094_5, Arg4094_6])])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? (R2 = [Shen.type_cons, R2, R1])
  : (R2 = R1)),
  [Shen.type_cons, [Shen.type_symbol, "do"], R2])}, 7, [], "reg-kl.walk-let"];





Shen.fns["reg-kl.walk-do-aux"] = [Shen.type_func, function shen_user_lambda4109(Arg4108) {
  if (Arg4108.length < 6) return [Shen.type_func, shen_user_lambda4109, 6, Arg4108];
  var Arg4108_0 = Arg4108[0], Arg4108_1 = Arg4108[1], Arg4108_2 = Arg4108[2], Arg4108_3 = Arg4108[3], Arg4108_4 = Arg4108[4], Arg4108_5 = Arg4108[5];
  var R0, R1;
  return (((Shen.empty$question$(Arg4108_0) && Shen.empty$question$(Arg4108_2)))
  ? Arg4108_5
  : (((Shen.is_type(Arg4108_0, Shen.type_cons) && (Shen.empty$question$(Arg4108_0[2]) && (Shen.is_type(Arg4108_2, Shen.type_cons) && Shen.empty$question$(Arg4108_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4108_0[1], Arg4108_1, Arg4108_2[1], Arg4108_3, Arg4108_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4108_5, Shen.call(Shen.fns["reg-kl.remove-do"], [R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do-aux"], [[], Arg4108_1, [], Arg4108_3, Arg4108_4, R0]);}))
  : (((Shen.is_type(Arg4108_0, Shen.type_cons) && (Shen.is_type(Arg4108_2, Shen.type_cons) && Shen.is_type(Arg4108_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4108_0[1], Arg4108_1, Arg4108_2[1], Arg4108_2[2][1], Arg4108_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4108_5, Shen.call(Shen.fns["reg-kl.remove-do"], [R0])])),
  (R1 = Arg4108_2[2]),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do-aux"], [Arg4108_0[2], Arg4108_1, R1, Arg4108_3, Arg4108_4, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-do-aux"]]);}))))}, 6, [], "reg-kl.walk-do-aux"];





Shen.fns["reg-kl.walk-do"] = [Shen.type_func, function shen_user_lambda4116(Arg4115) {
  if (Arg4115.length < 5) return [Shen.type_func, shen_user_lambda4116, 5, Arg4115];
  var Arg4115_0 = Arg4115[0], Arg4115_1 = Arg4115[1], Arg4115_2 = Arg4115[2], Arg4115_3 = Arg4115[3], Arg4115_4 = Arg4115[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-cascade"], [Arg4115_0, Arg4115_1, Arg4115_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-do-aux"], [Arg4115_0, Arg4115_1, R0, Arg4115_3, Arg4115_4, []])),
  [Shen.type_cons, [Shen.type_symbol, "do"], R0])}, 5, [], "reg-kl.walk-do"];





Shen.fns["reg-kl.walk-apply-aux"] = [Shen.type_func, function shen_user_lambda4130(Arg4129) {
  if (Arg4129.length < 6) return [Shen.type_func, shen_user_lambda4130, 6, Arg4129];
  var Arg4129_0 = Arg4129[0], Arg4129_1 = Arg4129[1], Arg4129_2 = Arg4129[2], Arg4129_3 = Arg4129[3], Arg4129_4 = Arg4129[4], Arg4129_5 = Arg4129[5];
  var R0;
  return (((Shen.empty$question$(Arg4129_0) && Shen.empty$question$(Arg4129_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4129_5]);})
  : (((Shen.is_type(Arg4129_0, Shen.type_cons) && (Shen.empty$question$(Arg4129_0[2]) && (Shen.is_type(Arg4129_2, Shen.type_cons) && Shen.empty$question$(Arg4129_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4129_0[1], Arg4129_1, Arg4129_2[1], Arg4129_3, Arg4129_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [[], Arg4129_1, [], Arg4129_3, Arg4129_4, [Shen.type_cons, R0, Arg4129_5]]);}))
  : (((Shen.is_type(Arg4129_0, Shen.type_cons) && (Shen.is_type(Arg4129_2, Shen.type_cons) && Shen.is_type(Arg4129_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4129_0[1], Arg4129_1, Arg4129_2[1], Arg4129_2[2][1], Arg4129_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [Arg4129_0[2], Arg4129_1, Arg4129_2[2], Arg4129_3, Arg4129_4, [Shen.type_cons, R0, Arg4129_5]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-apply-aux"]]);}))))}, 6, [], "reg-kl.walk-apply-aux"];





Shen.fns["reg-kl.walk-apply"] = [Shen.type_func, function shen_user_lambda4137(Arg4136) {
  if (Arg4136.length < 5) return [Shen.type_func, shen_user_lambda4137, 5, Arg4136];
  var Arg4136_0 = Arg4136[0], Arg4136_1 = Arg4136[1], Arg4136_2 = Arg4136[2], Arg4136_3 = Arg4136[3], Arg4136_4 = Arg4136[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-cascade"], [Arg4136_0, Arg4136_1, Arg4136_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [Arg4136_0, Arg4136_1, R0, Arg4136_3, Arg4136_4, []]);}))}, 5, [], "reg-kl.walk-apply"];





Shen.fns["reg-kl.walk-if"] = [Shen.type_func, function shen_user_lambda4146(Arg4145) {
  if (Arg4145.length < 7) return [Shen.type_func, shen_user_lambda4146, 7, Arg4145];
  var Arg4145_0 = Arg4145[0], Arg4145_1 = Arg4145[1], Arg4145_2 = Arg4145[2], Arg4145_3 = Arg4145[3], Arg4145_4 = Arg4145[4], Arg4145_5 = Arg4145[5], Arg4145_6 = Arg4145[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4145_1, Arg4145_3, [], Arg4145_5])),
  (R1 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4145_2, Arg4145_3, [], Arg4145_5])),
  (R2 = Shen.call(Shen.fns["append"], [R0, R1])),
  (R2 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4145_0, Arg4145_3, Arg4145_4, R2, Arg4145_6])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4145_1, Arg4145_3, R0, Arg4145_5, Arg4145_6])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4145_2, Arg4145_3, R1, Arg4145_5, Arg4145_6])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R2, [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])}, 7, [], "reg-kl.walk-if"];





Shen.fns["reg-kl.walk-cond"] = [Shen.type_func, function shen_user_lambda4161(Arg4160) {
  if (Arg4160.length < 5) return [Shen.type_func, shen_user_lambda4161, 5, Arg4160];
  var Arg4160_0 = Arg4160[0], Arg4160_1 = Arg4160[1], Arg4160_2 = Arg4160[2], Arg4160_3 = Arg4160[3], Arg4160_4 = Arg4160[4];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4160_0))
  ? [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "error: cond failure", []]]
  : (((Shen.is_type(Arg4160_0, Shen.type_cons) && (Shen.is_type(Arg4160_0[1], Shen.type_cons) && (Shen.is_type(Arg4160_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4160_0[1][2][2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4160_0[1][2][1], Arg4160_1, [], Arg4160_3])),
  (R1 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4160_0[2], Arg4160_1, [], Arg4160_3])),
  (R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4160_0[1][1], Arg4160_1, [], Shen.call(Shen.fns["append"], [R0, R1])])),
  (R2 = Shen.call(Shen.fns["reg-kl.walk-cond"], [Arg4160_0[2], Arg4160_1, Arg4160_2, Arg4160_3, Arg4160_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-if"], [Arg4160_0[1][1], Arg4160_0[1][2][1], R2, Arg4160_1, R0, R1, Arg4160_4]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-cond"]]);})))}, 5, [], "reg-kl.walk-cond"];





Shen.fns["reg-kl.mk-closure-args-init"] = [Shen.type_func, function shen_user_lambda4168(Arg4167) {
  if (Arg4167.length < 3) return [Shen.type_func, shen_user_lambda4168, 3, Arg4167];
  var Arg4167_0 = Arg4167[0], Arg4167_1 = Arg4167[1], Arg4167_2 = Arg4167[2];
  var R0;
  return ((Shen.empty$question$(Arg4167_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4167_2]);})
  : ((Shen.is_type(Arg4167_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl.var-idx"], [Arg4167_0[1], Arg4167_1])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-closure-args-init"], [Arg4167_0[2], Arg4167_1, [Shen.type_cons, R0, Arg4167_2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-closure-args-init"]]);})))}, 3, [], "reg-kl.mk-closure-args-init"];





Shen.fns["reg-kl.mk-closure-env"] = [Shen.type_func, function shen_user_lambda4172(Arg4171) {
  if (Arg4171.length < 2) return [Shen.type_func, shen_user_lambda4172, 2, Arg4171];
  var Arg4171_0 = Arg4171[0], Arg4171_1 = Arg4171[1];
  return ((Shen.empty$question$(Arg4171_0))
  ? Arg4171_1
  : ((Shen.is_type(Arg4171_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-closure-env"], [Arg4171_0[2], [Shen.type_cons, [Shen.type_cons, Arg4171_0[1], Shen.call(Shen.fns["reg-kl.new-var-idx"], [Arg4171_0[1], Arg4171_1])], Arg4171_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-closure-env"]]);})))}, 2, [], "reg-kl.mk-closure-env"];





Shen.fns["reg-kl.mk-closure-list"] = [Shen.type_func, function shen_user_lambda4179(Arg4178) {
  if (Arg4178.length < 5) return [Shen.type_func, shen_user_lambda4179, 5, Arg4178];
  var Arg4178_0 = Arg4178[0], Arg4178_1 = Arg4178[1], Arg4178_2 = Arg4178[2], Arg4178_3 = Arg4178[3], Arg4178_4 = Arg4178[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-closure-env"], [Arg4178_3, []])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-args-init"], [Arg4178_3, Arg4178_2, []])),
  (R0 = Shen.call(Shen.fns["reg-kl.mk-function-kl"], [Arg4178_0, Arg4178_1, R0, Arg4178_4])),
  [Shen.type_cons, R1, [Shen.type_cons, R0, []]])}, 5, [], "reg-kl.mk-closure-list"];





Shen.fns["reg-kl.walk-lambda-aux"] = [Shen.type_func, function shen_user_lambda4187(Arg4186) {
  if (Arg4186.length < 6) return [Shen.type_func, shen_user_lambda4187, 6, Arg4186];
  var Arg4186_0 = Arg4186[0], Arg4186_1 = Arg4186[1], Arg4186_2 = Arg4186[2], Arg4186_3 = Arg4186[3], Arg4186_4 = Arg4186[4], Arg4186_5 = Arg4186[5];
  var R0, R1;
  return (((Shen.is_type(Arg4186_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4186_1[1])) && (Shen.is_type(Arg4186_1[2], Shen.type_cons) && (Shen.is_type(Arg4186_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg4186_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-lambda-aux"], [Arg4186_1[2][1], Arg4186_1[2][2][1], [Shen.type_cons, Arg4186_0, Arg4186_2], Arg4186_3, Arg4186_4, Arg4186_5]);})
  : ((R0 = Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4186_0, Arg4186_2]])),
  (R1 = Shen.call(Shen.fns["append"], [Arg4186_4, Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4186_0, R0]])])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-list"], [R1, Arg4186_1, Arg4186_3, Arg4186_4, Arg4186_5])),
  [Shen.type_cons, [Shen.type_symbol, "shen-closure"], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [Arg4186_5]), R1]]]))}, 6, [], "reg-kl.walk-lambda-aux"];





Shen.fns["reg-kl.walk-lambda"] = [Shen.type_func, function shen_user_lambda4194(Arg4193) {
  if (Arg4193.length < 5) return [Shen.type_func, shen_user_lambda4194, 5, Arg4193];
  var Arg4193_0 = Arg4193[0], Arg4193_1 = Arg4193[1], Arg4193_2 = Arg4193[2], Arg4193_3 = Arg4193[3], Arg4193_4 = Arg4193[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [[Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg4193_0, [Shen.type_cons, Arg4193_1, []]]], Arg4193_3])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4193_4]), 0])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-lambda-aux"], [Arg4193_0, Arg4193_1, Arg4193_2, Arg4193_3, R0, R1])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4193_4, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R1])]),
  R0)}, 5, [], "reg-kl.walk-lambda"];





Shen.fns["reg-kl.walk-freeze"] = [Shen.type_func, function shen_user_lambda4200(Arg4199) {
  if (Arg4199.length < 4) return [Shen.type_func, shen_user_lambda4200, 4, Arg4199];
  var Arg4199_0 = Arg4199[0], Arg4199_1 = Arg4199[1], Arg4199_2 = Arg4199[2], Arg4199_3 = Arg4199[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4199_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-list"], [Arg4199_2, Arg4199_0, Arg4199_1, Arg4199_2, R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4199_3, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "shen-freeze"], [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [R0]), R1]])}, 4, [], "reg-kl.walk-freeze"];





Shen.fns["reg-kl.lift-defun"] = [Shen.type_func, function shen_user_lambda4206(Arg4205) {
  if (Arg4205.length < 4) return [Shen.type_func, shen_user_lambda4206, 4, Arg4205];
  var Arg4205_0 = Arg4205[0], Arg4205_1 = Arg4205[1], Arg4205_2 = Arg4205[2], Arg4205_3 = Arg4205[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4205_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-kl"], [Arg4205_0, Arg4205_1, Arg4205_2, [], R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4205_3, [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]]),
  [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, Arg4205_0, []]])}, 4, [], "reg-kl.lift-defun"];





Shen.fns["reg-kl.walk-expr"] = [Shen.type_func, function shen_user_lambda4244(Arg4243) {
  if (Arg4243.length < 5) return [Shen.type_func, shen_user_lambda4244, 5, Arg4243];
  var Arg4243_0 = Arg4243[0], Arg4243_1 = Arg4243[1], Arg4243_2 = Arg4243[2], Arg4243_3 = Arg4243[3], Arg4243_4 = Arg4243[4];
  return (((Shen.is_type(Arg4243_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4243_0[1])) && (Shen.is_type(Arg4243_0[2], Shen.type_cons) && (Shen.is_type(Arg4243_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4243_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4243_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-let"], [Arg4243_0[2][1], Arg4243_0[2][2][1], Arg4243_0[2][2][2][1], Arg4243_1, Arg4243_2, Arg4243_3, Arg4243_4]);})
  : (((Shen.is_type(Arg4243_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4243_0[1])) && (Shen.is_type(Arg4243_0[2], Shen.type_cons) && (Shen.is_type(Arg4243_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4243_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4243_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-if"], [Arg4243_0[2][1], Arg4243_0[2][2][1], Arg4243_0[2][2][2][1], Arg4243_1, Arg4243_2, Arg4243_3, Arg4243_4]);})
  : (((Shen.is_type(Arg4243_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg4243_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-cond"], [Arg4243_0[2], Arg4243_1, Arg4243_2, Arg4243_3, Arg4243_4]);})
  : (((Shen.is_type(Arg4243_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4243_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do"], [Arg4243_0[2], Arg4243_1, Arg4243_2, Arg4243_3, Arg4243_4]);})
  : (((Shen.is_type(Arg4243_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4243_0[1])) && (Shen.is_type(Arg4243_0[2], Shen.type_cons) && (Shen.is_type(Arg4243_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4243_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-lambda"], [Arg4243_0[2][1], Arg4243_0[2][2][1], [], Arg4243_1, Arg4243_4]);})
  : (((Shen.is_type(Arg4243_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg4243_0[1])) && (Shen.is_type(Arg4243_0[2], Shen.type_cons) && Shen.empty$question$(Arg4243_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-freeze"], [Arg4243_0[2][1], Arg4243_1, Arg4243_2, Arg4243_4]);})
  : (((Shen.is_type(Arg4243_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4243_0[1])) && (Shen.is_type(Arg4243_0[2], Shen.type_cons) && (Shen.is_type(Arg4243_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4243_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4243_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.lift-defun"], [Arg4243_0[2][1], Arg4243_0[2][2][1], Arg4243_0[2][2][2][1], Arg4243_4]);})
  : ((Shen.is_type(Arg4243_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply"], [Arg4243_0, Arg4243_1, Arg4243_2, Arg4243_3, Arg4243_4]);})
  : (((Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg4243_0, Arg4243_1]) && Shen.is_type(Arg4243_0, Shen.type_symbol)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl.var-idx"], [Arg4243_0, Arg4243_1])]);})
  : Arg4243_0)))))))))}, 5, [], "reg-kl.walk-expr"];





Shen.fns["reg-kl.mk-defun-env"] = [Shen.type_func, function shen_user_lambda4249(Arg4248) {
  if (Arg4248.length < 3) return [Shen.type_func, shen_user_lambda4249, 3, Arg4248];
  var Arg4248_0 = Arg4248[0], Arg4248_1 = Arg4248[1], Arg4248_2 = Arg4248[2];
  return ((Shen.empty$question$(Arg4248_0))
  ? Arg4248_2
  : ((Shen.is_type(Arg4248_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-defun-env"], [Arg4248_0[2], (Arg4248_1 - 1), [Shen.type_cons, [Shen.type_cons, Arg4248_0[1], Arg4248_1], Arg4248_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-defun-env"]]);})))}, 3, [], "reg-kl.mk-defun-env"];





Shen.fns["reg-kl.mk-function-kl"] = [Shen.type_func, function shen_user_lambda4255(Arg4254) {
  if (Arg4254.length < 4) return [Shen.type_func, shen_user_lambda4255, 4, Arg4254];
  var Arg4254_0 = Arg4254[0], Arg4254_1 = Arg4254[1], Arg4254_2 = Arg4254[2], Arg4254_3 = Arg4254[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.remove-duplicates"], [Arg4254_0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-env"], [R0, -1, Arg4254_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [Arg4254_1, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-expr"], [Arg4254_1, R1, R0, [], Arg4254_3]);}))}, 4, [], "reg-kl.mk-function-kl"];





Shen.fns["reg-kl.defun-hdr"] = [Shen.type_func, function shen_user_lambda4258(Arg4257) {
  if (Arg4257.length < 1) return [Shen.type_func, shen_user_lambda4258, 1, Arg4257];
  var Arg4257_0 = Arg4257[0];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4257_0)))
  ? [Shen.type_symbol, "shen-toplevel"]
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4257_0)))
  ? [Shen.type_symbol, "shen-func"]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.defun-hdr"]]);})))}, 1, [], "reg-kl.defun-hdr"];





Shen.fns["reg-kl.mk-defun-kl"] = [Shen.type_func, function shen_user_lambda4266(Arg4265) {
  if (Arg4265.length < 6) return [Shen.type_func, shen_user_lambda4266, 6, Arg4265];
  var Arg4265_0 = Arg4265[0], Arg4265_1 = Arg4265[1], Arg4265_2 = Arg4265[2], Arg4265_3 = Arg4265[3], Arg4265_4 = Arg4265[4], Arg4265_5 = Arg4265[5];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4265_5]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-function-kl"], [Arg4265_1, Arg4265_2, Arg4265_3, R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4265_5, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]),
  [Shen.type_cons, Shen.call(Shen.fns["reg-kl.defun-hdr"], [Arg4265_4]), [Shen.type_cons, Arg4265_0, [Shen.type_cons, Arg4265_1, [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [R0]), [Shen.type_cons, R1, []]]]]])}, 6, [], "reg-kl.mk-defun-kl"];





Shen.fns["reg-kl.walk-defun"] = [Shen.type_func, function shen_user_lambda4273(Arg4272) {
  if (Arg4272.length < 5) return [Shen.type_func, shen_user_lambda4273, 5, Arg4272];
  var Arg4272_0 = Arg4272[0], Arg4272_1 = Arg4272[1], Arg4272_2 = Arg4272[2], Arg4272_3 = Arg4272[3], Arg4272_4 = Arg4272[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Arg4272_4, 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-kl"], [Arg4272_0, Arg4272_1, Arg4272_2, [], Arg4272_3, R0])),
  [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])])}, 5, [], "reg-kl.walk-defun"];





Shen.fns["reg-kl.walk-toplevel"] = [Shen.type_func, function shen_user_lambda4282(Arg4281) {
  if (Arg4281.length < 3) return [Shen.type_func, shen_user_lambda4282, 3, Arg4281];
  var Arg4281_0 = Arg4281[0], Arg4281_1 = Arg4281[1], Arg4281_2 = Arg4281[2];
  var R0;
  return (((Shen.is_type(Arg4281_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4281_0[1])) && (Shen.is_type(Arg4281_0[2], Shen.type_cons) && (Shen.is_type(Arg4281_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4281_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4281_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-defun"], [Arg4281_0[2][1], Arg4281_0[2][2][1], Arg4281_0[2][2][2][1], false, Arg4281_2]);})
  : ((Shen.is_type(Arg4281_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "reg-kl.shen-toplevel-"]])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-defun"], [R0, [], Arg4281_0, true, Arg4281_2]);}))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4281_1)))
  ? Arg4281_2
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4281_1)))
  ? [Shen.type_cons, Arg4281_0, Arg4281_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-toplevel"]]);})))))}, 3, [], "reg-kl.walk-toplevel"];





Shen.fns["reg-kl.walk-aux"] = [Shen.type_func, function shen_user_lambda4289(Arg4288) {
  if (Arg4288.length < 3) return [Shen.type_func, shen_user_lambda4289, 3, Arg4288];
  var Arg4288_0 = Arg4288[0], Arg4288_1 = Arg4288[1], Arg4288_2 = Arg4288[2];
  return ((Shen.empty$question$(Arg4288_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4288_2]);})
  : ((Shen.is_type(Arg4288_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-aux"], [Arg4288_0[2], Arg4288_1, Shen.call(Shen.fns["reg-kl.walk-toplevel"], [Arg4288_0[1], Arg4288_1, Arg4288_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-aux"]]);})))}, 3, [], "reg-kl.walk-aux"];





Shen.fns["reg-kl.walk"] = [Shen.type_func, function shen_user_lambda4293(Arg4292) {
  if (Arg4292.length < 2) return [Shen.type_func, shen_user_lambda4293, 2, Arg4292];
  var Arg4292_0 = Arg4292[0], Arg4292_1 = Arg4292[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-aux"], [Arg4292_0, Arg4292_1, []]);})}, 2, [], "reg-kl.walk"];





Shen.call_toplevel(function shen_toplevel4885(Arg4883) {
  if (Arg4883.length < 0) return [Shen.type_func, shen_toplevel4885, 0, Arg4883];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "js.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})});




Shen.fns["js.mk-context"] = [Shen.type_func, function shen_user_lambda4891(Arg4890) {
  if (Arg4890.length < 4) return [Shen.type_func, shen_user_lambda4891, 4, Arg4890];
  var Arg4890_0 = Arg4890[0], Arg4890_1 = Arg4890[1], Arg4890_2 = Arg4890[2], Arg4890_3 = Arg4890[3];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg4890_0, Shen.call(Shen.fns["@v"], [Arg4890_1, Shen.call(Shen.fns["@v"], [Arg4890_2, Shen.call(Shen.fns["@v"], [Arg4890_3, Shen.vector(0)])])])]);})}, 4, [], "js.mk-context"];





Shen.fns["js.context-varname->"] = [Shen.type_func, function shen_user_lambda4895(Arg4894) {
  if (Arg4894.length < 2) return [Shen.type_func, shen_user_lambda4895, 2, Arg4894];
  var Arg4894_0 = Arg4894[0], Arg4894_1 = Arg4894[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4894_0, 4, Arg4894_1]);})}, 2, [], "js.context-varname->"];





Shen.fns["js.context-argname->"] = [Shen.type_func, function shen_user_lambda4899(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4899, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4898_0, 3, Arg4898_1]);})}, 2, [], "js.context-argname->"];





Shen.fns["js.context-toplevel->"] = [Shen.type_func, function shen_user_lambda4903(Arg4902) {
  if (Arg4902.length < 2) return [Shen.type_func, shen_user_lambda4903, 2, Arg4902];
  var Arg4902_0 = Arg4902[0], Arg4902_1 = Arg4902[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4902_0, 2, Arg4902_1]);})}, 2, [], "js.context-toplevel->"];





Shen.fns["js.context-nregs->"] = [Shen.type_func, function shen_user_lambda4907(Arg4906) {
  if (Arg4906.length < 2) return [Shen.type_func, shen_user_lambda4907, 2, Arg4906];
  var Arg4906_0 = Arg4906[0], Arg4906_1 = Arg4906[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4906_0, 1, Arg4906_1]);})}, 2, [], "js.context-nregs->"];





Shen.fns["js.context-varname"] = [Shen.type_func, function shen_user_lambda4910(Arg4909) {
  if (Arg4909.length < 1) return [Shen.type_func, shen_user_lambda4910, 1, Arg4909];
  var Arg4909_0 = Arg4909[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4909_0, 4]);})}, 1, [], "js.context-varname"];





Shen.fns["js.context-argname"] = [Shen.type_func, function shen_user_lambda4913(Arg4912) {
  if (Arg4912.length < 1) return [Shen.type_func, shen_user_lambda4913, 1, Arg4912];
  var Arg4912_0 = Arg4912[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4912_0, 3]);})}, 1, [], "js.context-argname"];





Shen.fns["js.context-toplevel"] = [Shen.type_func, function shen_user_lambda4916(Arg4915) {
  if (Arg4915.length < 1) return [Shen.type_func, shen_user_lambda4916, 1, Arg4915];
  var Arg4915_0 = Arg4915[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4915_0, 2]);})}, 1, [], "js.context-toplevel"];





Shen.fns["js.context-nregs"] = [Shen.type_func, function shen_user_lambda4919(Arg4918) {
  if (Arg4918.length < 1) return [Shen.type_func, shen_user_lambda4919, 1, Arg4918];
  var Arg4918_0 = Arg4918[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4918_0, 1]);})}, 1, [], "js.context-nregs"];





Shen.fns["js.max"] = [Shen.type_func, function shen_user_lambda4927(Arg4926) {
  if (Arg4926.length < 2) return [Shen.type_func, shen_user_lambda4927, 2, Arg4926];
  var Arg4926_0 = Arg4926[0], Arg4926_1 = Arg4926[1];
  return (((Arg4926_0 > Arg4926_1))
  ? Arg4926_0
  : Arg4926_1)}, 2, [], "js.max"];





Shen.fns["js.str-js-from-shen*"] = [Shen.type_func, function shen_user_lambda4931(Arg4930) {
  if (Arg4930.length < 2) return [Shen.type_func, shen_user_lambda4931, 2, Arg4930];
  var Arg4930_0 = Arg4930[0], Arg4930_1 = Arg4930[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg4930_0)))
  ? Arg4930_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("-", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("_", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("$", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("'", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$quote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("`", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$bquote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("/", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$slash$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("*", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$asterisk$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("+", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$plus$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("%", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$percent$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("=", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$eq$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("?", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$question$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("!", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$excl$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$(">", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$gt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("<", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$lt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$(".", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$dot$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("|", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$bar$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("#", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$sharp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("~", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$tilde$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$(":", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$colon$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$(";", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$sc$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("@", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$at$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("&", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$amp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("{", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$cbraceopen$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]) && Shen.unwind_tail(Shen.$eq$("}", Arg4930_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + "$cbraceclose$")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg4930_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4930_0), (Arg4930_1 + Arg4930_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-js-from-shen*"]]);})))))))))))))))))))))))))))}, 2, [], "js.str-js-from-shen*"];





Shen.fns["js.str-js-from-shen"] = [Shen.type_func, function shen_user_lambda4934(Arg4933) {
  if (Arg4933.length < 1) return [Shen.type_func, shen_user_lambda4934, 1, Arg4933];
  var Arg4933_0 = Arg4933[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Arg4933_0, ""]);})}, 1, [], "js.str-js-from-shen"];





Shen.fns["js.sym-js-from-shen"] = [Shen.type_func, function shen_user_lambda4937(Arg4936) {
  if (Arg4936.length < 1) return [Shen.type_func, shen_user_lambda4937, 1, Arg4936];
  var Arg4936_0 = Arg4936[0];
  return (function() {
  return Shen.intern(Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg4936_0)]));})}, 1, [], "js.sym-js-from-shen"];





Shen.fns["js.backslash"] = [Shen.type_func, function shen_user_lambda4939(Arg4938) {
  if (Arg4938.length < 0) return [Shen.type_func, shen_user_lambda4939, 0, Arg4938];
  return (function() {
  return Shen.n_$gt$string(92);})}, 0, [], "js.backslash"];





Shen.fns["js.dquote"] = [Shen.type_func, function shen_user_lambda4941(Arg4940) {
  if (Arg4940.length < 0) return [Shen.type_func, shen_user_lambda4941, 0, Arg4940];
  return (function() {
  return Shen.n_$gt$string(34);})}, 0, [], "js.dquote"];





Shen.fns["js.esc-string"] = [Shen.type_func, function shen_user_lambda4945(Arg4944) {
  if (Arg4944.length < 2) return [Shen.type_func, shen_user_lambda4945, 2, Arg4944];
  var Arg4944_0 = Arg4944[0], Arg4944_1 = Arg4944[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg4944_0)))
  ? Arg4944_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4944_0]) && (Shen.unwind_tail(Shen.$eq$(Arg4944_0[0], Shen.call(Shen.fns["js.backslash"], []))) || Shen.unwind_tail(Shen.$eq$(Arg4944_0[0], Shen.call(Shen.fns["js.dquote"], []))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4944_0), (Arg4944_1 + (Shen.call(Shen.fns["js.backslash"], []) + Arg4944_0[0]))]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4944_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg4944_0[0]), 10))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4944_0), (Arg4944_1 + "\\x0a")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4944_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg4944_0[0]), 13))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4944_0), (Arg4944_1 + "\\x0d")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg4944_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4944_0), (Arg4944_1 + Arg4944_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.esc-string"]]);}))))))}, 2, [], "js.esc-string"];





Shen.fns["js.func-name"] = [Shen.type_func, function shen_user_lambda4948(Arg4947) {
  if (Arg4947.length < 1) return [Shen.type_func, shen_user_lambda4948, 1, Arg4947];
  var Arg4947_0 = Arg4947[0];
  return ((Shen.is_type(Arg4947_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4947_0]);})
  : Arg4947_0)}, 1, [], "js.func-name"];





Shen.fns["js.intfunc-name"] = [Shen.type_func, function shen_user_lambda4951(Arg4950) {
  if (Arg4950.length < 1) return [Shen.type_func, shen_user_lambda4951, 1, Arg4950];
  var Arg4950_0 = Arg4950[0];
  return (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg4950_0]) || (Shen.globals["shen.*installing-kl*"])))
  ? (function() {
  return Shen.intern(("Shen." + Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg4950_0)])));})
  : ((Shen.is_type(Arg4950_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4950_0]);})
  : Arg4950_0))}, 1, [], "js.intfunc-name"];





Shen.call_toplevel(function shen_toplevel4954(Arg4952) {
  if (Arg4952.length < 0) return [Shen.type_func, shen_toplevel4954, 0, Arg4952];
  return (Shen.globals["js.int-funcs"] = [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], []], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], []]], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "pr"], []]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]], []]]])});




Shen.call_toplevel(function shen_toplevel4957(Arg4955) {
  if (Arg4955.length < 0) return [Shen.type_func, shen_toplevel4957, 0, Arg4955];
  return (Shen.globals["js.internals"] = [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "js.write-byte"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]])});




Shen.call_toplevel(function shen_toplevel4960(Arg4958) {
  if (Arg4958.length < 0) return [Shen.type_func, shen_toplevel4960, 0, Arg4958];
  return (Shen.globals["js.tail-internals"] = [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]])});




Shen.fns["js.int-func-args*"] = [Shen.type_func, function shen_user_lambda4972(Arg4971) {
  if (Arg4971.length < 2) return [Shen.type_func, shen_user_lambda4972, 2, Arg4971];
  var Arg4971_0 = Arg4971[0], Arg4971_1 = Arg4971[1];
  return ((Shen.empty$question$(Arg4971_1))
  ? []
  : (((Shen.is_type(Arg4971_1, Shen.type_cons) && (Shen.is_type(Arg4971_1[1], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg4971_0, Arg4971_1[1][2]]))))
  ? Arg4971_1[1][1]
  : (((Shen.is_type(Arg4971_1, Shen.type_cons) && Shen.is_type(Arg4971_1[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg4971_0, Arg4971_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-func-args*"]]);}))))}, 2, [], "js.int-func-args*"];





Shen.fns["js.int-func-args"] = [Shen.type_func, function shen_user_lambda4975(Arg4974) {
  if (Arg4974.length < 1) return [Shen.type_func, shen_user_lambda4975, 1, Arg4974];
  var Arg4974_0 = Arg4974[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg4974_0, (Shen.globals["js.int-funcs"])]);})}, 1, [], "js.int-func-args"];





Shen.fns["js.int-func?"] = [Shen.type_func, function shen_user_lambda4978(Arg4977) {
  if (Arg4977.length < 1) return [Shen.type_func, shen_user_lambda4978, 1, Arg4977];
  var Arg4977_0 = Arg4977[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg4977_0)))
  ? true
  : (!Shen.empty$question$(Shen.call(Shen.fns["js.int-func-args"], [Arg4977_0]))))}, 1, [], "js.int-func?"];





Shen.fns["js.esc-obj"] = [Shen.type_func, function shen_user_lambda4981(Arg4980) {
  if (Arg4980.length < 1) return [Shen.type_func, shen_user_lambda4981, 1, Arg4980];
  var Arg4980_0 = Arg4980[0];
  return (((typeof(Arg4980_0) == 'string'))
  ? ("\"" + (Shen.call(Shen.fns["js.esc-string"], [Arg4980_0, ""]) + "\""))
  : ((Shen.is_type(Arg4980_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4980_0]);})
  : (function() {
  return Shen.simple_error(("Object " + Shen.call(Shen.fns["shen.app"], [Arg4980_0, " cannot be escaped", [Shen.type_symbol, "shen.r"]])));})))}, 1, [], "js.esc-obj"];





Shen.fns["js.str-join*"] = [Shen.type_func, function shen_user_lambda4986(Arg4985) {
  if (Arg4985.length < 3) return [Shen.type_func, shen_user_lambda4986, 3, Arg4985];
  var Arg4985_0 = Arg4985[0], Arg4985_1 = Arg4985[1], Arg4985_2 = Arg4985[2];
  return ((Shen.empty$question$(Arg4985_0))
  ? Arg4985_2
  : (((Shen.is_type(Arg4985_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("", Arg4985_2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4985_0[2], Arg4985_1, Shen.call(Shen.fns["shen.app"], [Arg4985_0[1], "", [Shen.type_symbol, "shen.a"]])]);})
  : ((Shen.is_type(Arg4985_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4985_0[2], Arg4985_1, (Arg4985_2 + (Arg4985_1 + Shen.call(Shen.fns["shen.app"], [Arg4985_0[1], "", [Shen.type_symbol, "shen.a"]])))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-join*"]]);}))))}, 3, [], "js.str-join*"];





Shen.fns["js.str-join"] = [Shen.type_func, function shen_user_lambda4990(Arg4989) {
  if (Arg4989.length < 2) return [Shen.type_func, shen_user_lambda4990, 2, Arg4989];
  var Arg4989_0 = Arg4989[0], Arg4989_1 = Arg4989[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4989_0, Arg4989_1, ""]);})}, 2, [], "js.str-join"];





Shen.fns["js.arg-list"] = [Shen.type_func, function shen_user_lambda4993(Arg4992) {
  if (Arg4992.length < 1) return [Shen.type_func, shen_user_lambda4993, 1, Arg4992];
  var Arg4992_0 = Arg4992[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join"], [Arg4992_0, ", "]);})}, 1, [], "js.arg-list"];





Shen.fns["js.arg-name"] = [Shen.type_func, function shen_user_lambda4997(Arg4996) {
  if (Arg4996.length < 2) return [Shen.type_func, shen_user_lambda4997, 2, Arg4996];
  var Arg4996_0 = Arg4996[0], Arg4996_1 = Arg4996[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg4996_1]), ("_" + Shen.call(Shen.fns["shen.app"], [Arg4996_0, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.arg-name"];





Shen.fns["js.tail-call-ret"] = [Shen.type_func, function shen_user_lambda5000(Arg4999) {
  if (Arg4999.length < 1) return [Shen.type_func, shen_user_lambda5000, 1, Arg4999];
  var Arg4999_0 = Arg4999[0];
  return ("(function() {\x0a  return " + Shen.call(Shen.fns["shen.app"], [Arg4999_0, ";})", [Shen.type_symbol, "shen.a"]]))}, 1, [], "js.tail-call-ret"];





Shen.fns["js.tail-call-expr"] = [Shen.type_func, function shen_user_lambda5004(Arg5003) {
  if (Arg5003.length < 2) return [Shen.type_func, shen_user_lambda5004, 2, Arg5003];
  var Arg5003_0 = Arg5003[0], Arg5003_1 = Arg5003[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5003_0, false, Arg5003_1]);})}, 2, [], "js.tail-call-expr"];





Shen.fns["js.cond-case"] = [Shen.type_func, function shen_user_lambda5008(Arg5007) {
  if (Arg5007.length < 2) return [Shen.type_func, shen_user_lambda5008, 2, Arg5007];
  var Arg5007_0 = Arg5007[0], Arg5007_1 = Arg5007[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-expr"], [Arg5007_0, Arg5007_1]);})}, 2, [], "js.cond-case"];





Shen.fns["js.emit-cond*"] = [Shen.type_func, function shen_user_lambda5013(Arg5012) {
  if (Arg5012.length < 3) return [Shen.type_func, shen_user_lambda5013, 3, Arg5012];
  var Arg5012_0 = Arg5012[0], Arg5012_1 = Arg5012[1], Arg5012_2 = Arg5012[2];
  return ((Shen.empty$question$(Arg5012_0))
  ? (function() {
  return Shen.simple_error("cond failure: no default branch");})
  : (((Shen.is_type(Arg5012_0, Shen.type_cons) && (Shen.is_type(Arg5012_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5012_0[1][1])) && (Shen.is_type(Arg5012_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5012_0[1][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5012_0[1][2][1], Arg5012_1, Arg5012_2]);})
  : (((Shen.is_type(Arg5012_0, Shen.type_cons) && (Shen.is_type(Arg5012_0[1], Shen.type_cons) && (Shen.is_type(Arg5012_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5012_0[1][2][2])))))
  ? ("((" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.cond-case"], [Arg5012_0[1][1], Arg5012_2]), (")\x0a  ? " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5012_0[1][2][1], Arg5012_1, Arg5012_2]), ("\x0a  : " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-cond*"], [Arg5012_0[2], Arg5012_1, Arg5012_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-cond*"]]);}))))}, 3, [], "js.emit-cond*"];





Shen.fns["js.emit-cond"] = [Shen.type_func, function shen_user_lambda5018(Arg5017) {
  if (Arg5017.length < 3) return [Shen.type_func, shen_user_lambda5018, 3, Arg5017];
  var Arg5017_0 = Arg5017[0], Arg5017_1 = Arg5017[1], Arg5017_2 = Arg5017[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond*"], [Arg5017_0, Arg5017_1, Arg5017_2]);})}, 3, [], "js.emit-cond"];





Shen.fns["js.emit-trap-error"] = [Shen.type_func, function shen_user_lambda5024(Arg5023) {
  if (Arg5023.length < 4) return [Shen.type_func, shen_user_lambda5024, 4, Arg5023];
  var Arg5023_0 = Arg5023[0], Arg5023_1 = Arg5023[1], Arg5023_2 = Arg5023[2], Arg5023_3 = Arg5023[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5023_2)))
  ? ((R0 = ("function() {return " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5023_0, false, Arg5023_3]), ";}", [Shen.type_symbol, "shen.a"]]))),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5023_1, false, Arg5023_3])),
  ("Shen.trap_error(" + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5023_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.emit-trap-error"], [Arg5023_0, Arg5023_1, false, Arg5023_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-trap-error"]]);})))}, 4, [], "js.emit-trap-error"];





Shen.fns["js.predicate-op"] = [Shen.type_func, function shen_user_lambda5068(Arg5067) {
  if (Arg5067.length < 4) return [Shen.type_func, shen_user_lambda5068, 4, Arg5067];
  var Arg5067_0 = Arg5067[0], Arg5067_1 = Arg5067[1], Arg5067_2 = Arg5067[2], Arg5067_3 = Arg5067[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5067_0)) && (typeof(Arg5067_1) == 'number')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5067_0)) && (typeof(Arg5067_1) == 'string')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5067_0)) && Shen.unwind_tail(Shen.$eq$(true, Arg5067_1))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5067_0)) && Shen.unwind_tail(Shen.$eq$(false, Arg5067_1))))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5067_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, Arg5067_1, []], Arg5067_2, Arg5067_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5067_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5067_1, false, Arg5067_3]), ") == 'string')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5067_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5067_1, false, Arg5067_3]), ") == 'number')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol?"], Arg5067_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5067_1, false, Arg5067_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_symbol", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons?"], Arg5067_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5067_1, false, Arg5067_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_cons", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tuple?"], Arg5067_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5067_1, false, Arg5067_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.fns['shen.tuple']", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector?"], Arg5067_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, Arg5067_1, []], Arg5067_2, Arg5067_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "empty?"], Arg5067_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5067_1, []], Arg5067_2, Arg5067_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "absvector?"], Arg5067_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, Arg5067_1, []], Arg5067_2, Arg5067_3]);})
  : Shen.fail_obj)))))))))))))}, 4, [], "js.predicate-op"];





Shen.fns["js.math-op"] = [Shen.type_func, function shen_user_lambda5098(Arg5097) {
  if (Arg5097.length < 4) return [Shen.type_func, shen_user_lambda5098, 4, Arg5097];
  var Arg5097_0 = Arg5097[0], Arg5097_1 = Arg5097[1], Arg5097_2 = Arg5097[2], Arg5097_3 = Arg5097[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5097_0)) && (Shen.is_type(Arg5097_1, Shen.type_cons) && (Shen.is_type(Arg5097_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5097_1[2][2]) && ((typeof(Arg5097_1[1]) == 'number') && (typeof(Arg5097_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5097_1[1] + Arg5097_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5097_0)) && (Shen.is_type(Arg5097_1, Shen.type_cons) && (Shen.is_type(Arg5097_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5097_1[2][2]) && ((typeof(Arg5097_1[1]) == 'number') && (typeof(Arg5097_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5097_1[1] - Arg5097_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5097_0)) && (Shen.is_type(Arg5097_1, Shen.type_cons) && (Shen.is_type(Arg5097_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5097_1[2][2]) && ((typeof(Arg5097_1[1]) == 'number') && (typeof(Arg5097_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5097_1[1] * Arg5097_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/"], Arg5097_0)) && (Shen.is_type(Arg5097_1, Shen.type_cons) && (Shen.is_type(Arg5097_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5097_1[2][2]) && ((typeof(Arg5097_1[1]) == 'number') && (typeof(Arg5097_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5097_1[1] / Arg5097_1[2][1]));})
  : (((Shen.is_type(Arg5097_1, Shen.type_cons) && (Shen.is_type(Arg5097_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5097_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5097_0, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], []]]]]])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5097_1[1], false, Arg5097_3]), (" " + Shen.call(Shen.fns["shen.app"], [Arg5097_0, (" " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5097_1[2][1], false, Arg5097_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))}, 4, [], "js.math-op"];





Shen.fns["js.equality-op"] = [Shen.type_func, function shen_user_lambda5121(Arg5120) {
  if (Arg5120.length < 3) return [Shen.type_func, shen_user_lambda5121, 3, Arg5120];
  var Arg5120_0 = Arg5120[0], Arg5120_1 = Arg5120[1], Arg5120_2 = Arg5120[2];
  return (((Shen.is_type(Arg5120_0, Shen.type_cons) && (Shen.is_type(Arg5120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5120_0[2][2]) && ((typeof(Arg5120_0[1]) == 'number') && (typeof(Arg5120_0[2][1]) == 'number'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5120_0[1], Arg5120_0[2][1])));})
  : (((Shen.is_type(Arg5120_0, Shen.type_cons) && (Shen.is_type(Arg5120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5120_0[2][2]) && ((typeof(Arg5120_0[1]) == 'string') && (typeof(Arg5120_0[2][1]) == 'string'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5120_0[1], Arg5120_0[2][1])));})
  : (((Shen.is_type(Arg5120_0, Shen.type_cons) && (Shen.is_type(Arg5120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5120_0[2][2]) && (Shen.boolean$question$(Arg5120_0[1]) && Shen.boolean$question$(Arg5120_0[2][1]))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5120_0[1], Arg5120_0[2][1])));})
  : (((Shen.is_type(Arg5120_0, Shen.type_cons) && (Shen.is_type(Arg5120_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5120_0[2][1]) && Shen.empty$question$(Arg5120_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5120_0[1], []], Arg5120_1, Arg5120_2]);})
  : (((Shen.is_type(Arg5120_0, Shen.type_cons) && (Shen.empty$question$(Arg5120_0[1]) && (Shen.is_type(Arg5120_0[2], Shen.type_cons) && Shen.empty$question$(Arg5120_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], Arg5120_0[2], Arg5120_1, Arg5120_2]);})
  : (((Shen.is_type(Arg5120_0, Shen.type_cons) && (Shen.is_type(Arg5120_0[2], Shen.type_cons) && Shen.empty$question$(Arg5120_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "="], Arg5120_0, Arg5120_1, Arg5120_2]);})
  : Shen.fail_obj))))))}, 3, [], "js.equality-op"];





Shen.fns["js.order-op"] = [Shen.type_func, function shen_user_lambda5144(Arg5143) {
  if (Arg5143.length < 4) return [Shen.type_func, shen_user_lambda5144, 4, Arg5143];
  var Arg5143_0 = Arg5143[0], Arg5143_1 = Arg5143[1], Arg5143_2 = Arg5143[2], Arg5143_3 = Arg5143[3];
  var R0, R1;
  return (((Shen.is_type(Arg5143_1, Shen.type_cons) && (Shen.is_type(Arg5143_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5143_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5143_0, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<="], []]]]]])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5143_1[1], false, Arg5143_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5143_1[2][1], false, Arg5143_3])),
  ("(" + Shen.call(Shen.fns["shen.app"], [R0, (" " + Shen.call(Shen.fns["shen.app"], [Arg5143_0, (" " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : Shen.fail_obj)}, 4, [], "js.order-op"];





Shen.fns["js.logic-op"] = [Shen.type_func, function shen_user_lambda5188(Arg5187) {
  if (Arg5187.length < 4) return [Shen.type_func, shen_user_lambda5188, 4, Arg5187];
  var Arg5187_0 = Arg5187[0], Arg5187_1 = Arg5187[1], Arg5187_2 = Arg5187[2], Arg5187_3 = Arg5187[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5187_0)) && (Shen.is_type(Arg5187_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5187_1[1])) && Shen.empty$question$(Arg5187_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5187_0)) && (Shen.is_type(Arg5187_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5187_1[1])) && Shen.empty$question$(Arg5187_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5187_0)) && (Shen.is_type(Arg5187_1, Shen.type_cons) && Shen.empty$question$(Arg5187_1[2]))))
  ? ("(!" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5187_1[1], false, Arg5187_3]), ")", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5187_0)) && (Shen.is_type(Arg5187_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5187_1[1])) && (Shen.is_type(Arg5187_1[2], Shen.type_cons) && Shen.empty$question$(Arg5187_1[2][2]))))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5187_0)) && (Shen.is_type(Arg5187_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5187_1[1])) && (Shen.is_type(Arg5187_1[2], Shen.type_cons) && Shen.empty$question$(Arg5187_1[2][2]))))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5187_0)) && (Shen.is_type(Arg5187_1, Shen.type_cons) && (Shen.is_type(Arg5187_1[2], Shen.type_cons) && Shen.empty$question$(Arg5187_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5187_1[1], false, Arg5187_3]), (" && " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5187_1[2][1], false, Arg5187_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5187_0)) && (Shen.is_type(Arg5187_1, Shen.type_cons) && (Shen.is_type(Arg5187_1[2], Shen.type_cons) && Shen.empty$question$(Arg5187_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5187_1[1], false, Arg5187_3]), (" || " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5187_1[2][1], false, Arg5187_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))))}, 4, [], "js.logic-op"];





Shen.fns["js.emit-set*"] = [Shen.type_func, function shen_user_lambda5194(Arg5193) {
  if (Arg5193.length < 4) return [Shen.type_func, shen_user_lambda5194, 4, Arg5193];
  var Arg5193_0 = Arg5193[0], Arg5193_1 = Arg5193[1], Arg5193_2 = Arg5193[2], Arg5193_3 = Arg5193[3];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5193_3)))
  ? ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5193_0)])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [Arg5193_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5193_3)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5193_0, false, Arg5193_2])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("[1]] = " + Shen.call(Shen.fns["shen.app"], [Arg5193_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-set*"]]);})))}, 4, [], "js.emit-set*"];





Shen.fns["js.emit-set"] = [Shen.type_func, function shen_user_lambda5199(Arg5198) {
  if (Arg5198.length < 3) return [Shen.type_func, shen_user_lambda5199, 3, Arg5198];
  var Arg5198_0 = Arg5198[0], Arg5198_1 = Arg5198[1], Arg5198_2 = Arg5198[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-set*"], [Arg5198_0, Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5198_1, false, Arg5198_2]), Arg5198_2, Shen.is_type(Arg5198_0, Shen.type_symbol)]);})}, 3, [], "js.emit-set"];





Shen.fns["js.emit-value"] = [Shen.type_func, function shen_user_lambda5204(Arg5203) {
  if (Arg5203.length < 3) return [Shen.type_func, shen_user_lambda5204, 3, Arg5203];
  var Arg5203_0 = Arg5203[0], Arg5203_1 = Arg5203[1], Arg5203_2 = Arg5203[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5203_2)))
  ? ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5203_0)]), "])", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5203_2)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5203_0, false, Arg5203_1])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, "[1]])", [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-value"]]);})))}, 3, [], "js.emit-value"];





Shen.fns["js.basic-op"] = [Shen.type_func, function shen_user_lambda5258(Arg5257) {
  if (Arg5257.length < 4) return [Shen.type_func, shen_user_lambda5258, 4, Arg5257];
  var Arg5257_0 = Arg5257[0], Arg5257_1 = Arg5257[1], Arg5257_2 = Arg5257[2], Arg5257_3 = Arg5257[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("true", Arg5257_1[1])) && Shen.empty$question$(Arg5257_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("false", Arg5257_1[1])) && Shen.empty$question$(Arg5257_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.empty$question$(Arg5257_1[2]) && (typeof(Arg5257_1[1]) == 'string')))))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Arg5257_1[1]]), "]", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && Shen.empty$question$(Arg5257_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "intern"], Arg5257_1, Arg5257_2, Arg5257_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.is_type(Arg5257_1[2], Shen.type_cons) && Shen.empty$question$(Arg5257_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[1], false, Arg5257_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[2][1], false, Arg5257_3])),
  ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.is_type(Arg5257_1[2], Shen.type_cons) && Shen.empty$question$(Arg5257_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[1], false, Arg5257_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[2][1], false, Arg5257_3])),
  ("[Shen.fns['shen.tuple'], " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.is_type(Arg5257_1[2], Shen.type_cons) && Shen.empty$question$(Arg5257_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set"], [Arg5257_1[1], Arg5257_1[2][1], Arg5257_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "value"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && Shen.empty$question$(Arg5257_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-value"], [Arg5257_1[1], Arg5257_3, Shen.is_type(Arg5257_1[1], Shen.type_symbol)]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "thaw"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && Shen.empty$question$(Arg5257_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-thaw"], [Arg5257_1[1], Arg5257_2, Arg5257_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && Shen.empty$question$(Arg5257_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[1], true, Arg5257_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "hd"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && Shen.empty$question$(Arg5257_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[1], false, Arg5257_3]), "[1]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tl"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && Shen.empty$question$(Arg5257_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[1], false, Arg5257_3]), "[2]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.is_type(Arg5257_1[2], Shen.type_cons) && Shen.empty$question$(Arg5257_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[1], false, Arg5257_3]), (" + " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[2][1], false, Arg5257_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pos"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.is_type(Arg5257_1[2], Shen.type_cons) && Shen.empty$question$(Arg5257_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[1], false, Arg5257_3]), ("[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[2][1], false, Arg5257_3]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "address->"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.is_type(Arg5257_1[2], Shen.type_cons) && (Shen.is_type(Arg5257_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg5257_1[2][2][2]))))))
  ? ("Shen.absvector_set(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[1], false, Arg5257_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[2][1], false, Arg5257_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[2][2][1], false, Arg5257_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-address"], Arg5257_0)) && (Shen.is_type(Arg5257_1, Shen.type_cons) && (Shen.is_type(Arg5257_1[2], Shen.type_cons) && Shen.empty$question$(Arg5257_1[2][2])))))
  ? ("Shen.absvector_ref(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[1], false, Arg5257_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5257_1[2][1], false, Arg5257_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj))))))))))))))))}, 4, [], "js.basic-op"];





Shen.fns["js.int-funcall*"] = [Shen.type_func, function shen_user_lambda5265(Arg5264) {
  if (Arg5264.length < 5) return [Shen.type_func, shen_user_lambda5265, 5, Arg5264];
  var Arg5264_0 = Arg5264[0], Arg5264_1 = Arg5264[1], Arg5264_2 = Arg5264[2], Arg5264_3 = Arg5264[3], Arg5264_4 = Arg5264[4];
  var R0;
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg5264_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5264_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5264_0, Arg5264_1, false, false, Arg5264_4]);})
  : (((Shen.unwind_tail(Shen.$eq$(true, Arg5264_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5264_3))))
  ? ((R0 = Shen.call(Shen.fns["js.int-funcall*"], [Arg5264_0, Arg5264_1, false, false, Arg5264_4])),
  ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5264_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5264_3))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5267(Arg5266) {
  if (Arg5266.length < 2) return [Shen.type_func, shen_user_lambda5267, 2, Arg5266];
  var Arg5266_0 = Arg5266[0], Arg5266_1 = Arg5266[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5266_1, false, Arg5266_0]);})}, 2, [Arg5264_4], undefined], Arg5264_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.intfunc-name"], [Arg5264_0]), ("(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);}))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5264_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5264_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.int-funcall*"], [Arg5264_0, Arg5264_1, false, false, Arg5264_4])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-funcall*"]]);})))))}, 5, [], "js.int-funcall*"];





Shen.fns["js.int-funcall"] = [Shen.type_func, function shen_user_lambda5273(Arg5272) {
  if (Arg5272.length < 4) return [Shen.type_func, shen_user_lambda5273, 4, Arg5272];
  var Arg5272_0 = Arg5272[0], Arg5272_1 = Arg5272[1], Arg5272_2 = Arg5272[2], Arg5272_3 = Arg5272[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["element?"], [Arg5272_0, (Shen.globals["js.tail-internals"])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5272_0, Arg5272_1, R0, Arg5272_2, Arg5272_3]);}))}, 4, [], "js.int-funcall"];





Shen.fns["js.int-curry"] = [Shen.type_func, function shen_user_lambda5279(Arg5278) {
  if (Arg5278.length < 4) return [Shen.type_func, shen_user_lambda5279, 4, Arg5278];
  var Arg5278_0 = Arg5278[0], Arg5278_1 = Arg5278[1], Arg5278_2 = Arg5278[2], Arg5278_3 = Arg5278[3];
  var R0, R1;
  return ((R0 = ("Shen.fns[\"" + Shen.call(Shen.fns["shen.app"], [Arg5278_0, "\"][1]", [Shen.type_symbol, "shen.a"]]))),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5281(Arg5280) {
  if (Arg5280.length < 2) return [Shen.type_func, shen_user_lambda5281, 2, Arg5280];
  var Arg5280_0 = Arg5280[0], Arg5280_1 = Arg5280[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5280_1, false, Arg5280_0]);})}, 2, [Arg5278_3], undefined], Arg5278_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [Shen.call(Shen.fns["length"], [Arg5278_1]), R0, R1, []]);}))}, 4, [], "js.int-curry"];





Shen.fns["js.internal-op*"] = [Shen.type_func, function shen_user_lambda5292(Arg5291) {
  if (Arg5291.length < 5) return [Shen.type_func, shen_user_lambda5292, 5, Arg5291];
  var Arg5291_0 = Arg5291[0], Arg5291_1 = Arg5291[1], Arg5291_2 = Arg5291[2], Arg5291_3 = Arg5291[3], Arg5291_4 = Arg5291[4];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg5291_1]), Shen.call(Shen.fns["length"], [Arg5291_2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [Arg5291_0, Arg5291_2, Arg5291_3, Arg5291_4]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.int-curry"], [Arg5291_0, Arg5291_1, Arg5291_2, Arg5291_4]);}))}, 5, [], "js.internal-op*"];





Shen.fns["js.internal-op"] = [Shen.type_func, function shen_user_lambda5298(Arg5297) {
  if (Arg5297.length < 4) return [Shen.type_func, shen_user_lambda5298, 4, Arg5297];
  var Arg5297_0 = Arg5297[0], Arg5297_1 = Arg5297[1], Arg5297_2 = Arg5297[2], Arg5297_3 = Arg5297[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.int-func-args"], [Arg5297_0])),
  Shen.call(Shen.fns["js.intfunc-name"], [Arg5297_0]),
  ((Shen.empty$question$(R0))
  ? Shen.fail_obj
  : (function() {
  return Shen.call_tail(Shen.fns["js.internal-op*"], [Arg5297_0, R0, Arg5297_1, Arg5297_2, Arg5297_3]);})))}, 4, [], "js.internal-op"];





Shen.fns["js.emit-do"] = [Shen.type_func, function shen_user_lambda5304(Arg5303) {
  if (Arg5303.length < 4) return [Shen.type_func, shen_user_lambda5304, 4, Arg5303];
  var Arg5303_0 = Arg5303[0], Arg5303_1 = Arg5303[1], Arg5303_2 = Arg5303[2], Arg5303_3 = Arg5303[3];
  var R0, R1;
  return (((Shen.is_type(Arg5303_0, Shen.type_cons) && Shen.empty$question$(Arg5303_0[2])))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5306(Arg5305) {
  if (Arg5305.length < 2) return [Shen.type_func, shen_user_lambda5306, 2, Arg5305];
  var Arg5305_0 = Arg5305[0], Arg5305_1 = Arg5305[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5305_1, false, Arg5305_0]);})}, 2, [Arg5303_2], undefined], Shen.call(Shen.fns["reverse"], [Arg5303_3])])),
  (R1 = ",\x0a  "),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.str-join"], [R0, R1]), (",\x0a  " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5303_0[1], Arg5303_1, Arg5303_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.is_type(Arg5303_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5303_0[2], Arg5303_1, Arg5303_2, [Shen.type_cons, Arg5303_0[1], Arg5303_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-do"]]);})))}, 4, [], "js.emit-do"];





Shen.fns["js.std-op"] = [Shen.type_func, function shen_user_lambda5332(Arg5331) {
  if (Arg5331.length < 4) return [Shen.type_func, shen_user_lambda5332, 4, Arg5331];
  var Arg5331_0 = Arg5331[0], Arg5331_1 = Arg5331[1], Arg5331_2 = Arg5331[2], Arg5331_3 = Arg5331[3];
  var R0, R1;
  return ((R0 = (new Shen.Freeze([Arg5331_0, Arg5331_1, Arg5331_2, Arg5331_3], function(Arg5333) {
  var Arg5333_0 = Arg5333[0], Arg5333_1 = Arg5333[1], Arg5333_2 = Arg5333[2], Arg5333_3 = Arg5333[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js.math-op"], [Arg5333_0, Arg5333_1, Arg5333_2, Arg5333_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5333_0, Arg5333_1, Arg5333_2, Arg5333_3], function(Arg5335) {
  var Arg5335_0 = Arg5335[0], Arg5335_1 = Arg5335[1], Arg5335_2 = Arg5335[2], Arg5335_3 = Arg5335[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js.logic-op"], [Arg5335_0, Arg5335_1, Arg5335_2, Arg5335_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.order-op"], [Arg5335_0, Arg5335_1, Arg5335_2, Arg5335_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.basic-op"], [Arg5335_0, Arg5335_1, Arg5335_2, Arg5335_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5335_0, Arg5335_1, Arg5335_2, Arg5335_3], function(Arg5337) {
  var Arg5337_0 = Arg5337[0], Arg5337_1 = Arg5337[1], Arg5337_2 = Arg5337[2], Arg5337_3 = Arg5337[3];
  return (function() {
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "trap-error"], Arg5337_0)) && (Shen.is_type(Arg5337_1, Shen.type_cons) && (Shen.is_type(Arg5337_1[2], Shen.type_cons) && Shen.empty$question$(Arg5337_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-trap-error"], [Arg5337_1[1], Arg5337_1[2][1], Arg5337_2, Arg5337_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg5337_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5337_1, Arg5337_2, Arg5337_3, []]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5337_0)) && Shen.empty$question$(Arg5337_1)))
  ? "Shen.fail_obj"
  : Shen.fail_obj)));})}))),
  ((Shen.is_type(Arg5335_0, Shen.type_symbol))
  ? ((R3 = Shen.call(Shen.fns["js.internal-op"], [Arg5335_0, Arg5335_1, Arg5335_2, Arg5335_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4))
  : R4))
  : R4));})}))),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg5333_0)))
  ? ((R3 = Shen.call(Shen.fns["js.equality-op"], [Arg5333_1, Arg5333_2, Arg5333_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4));})}))),
  (((Shen.is_type(Arg5331_1, Shen.type_cons) && Shen.empty$question$(Arg5331_1[2])))
  ? ((R1 = Shen.call(Shen.fns["js.predicate-op"], [Arg5331_0, Arg5331_1[1], Arg5331_2, Arg5331_3])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))}, 4, [], "js.std-op"];





Shen.fns["js.mk-regs-aux"] = [Shen.type_func, function shen_user_lambda5350(Arg5349) {
  if (Arg5349.length < 5) return [Shen.type_func, shen_user_lambda5350, 5, Arg5349];
  var Arg5349_0 = Arg5349[0], Arg5349_1 = Arg5349[1], Arg5349_2 = Arg5349[2], Arg5349_3 = Arg5349[3], Arg5349_4 = Arg5349[4];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5349_1, Arg5349_0)))
  ? Arg5349_4
  : ((R0 = Shen.call(Shen.fns["@s"], [Arg5349_4, Shen.call(Shen.fns["@s"], [Arg5349_3, Shen.call(Shen.fns["@s"], [Shen.str(Shen.call(Shen.fns["js.context-varname"], [Arg5349_2])), Shen.str(Arg5349_0)])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [(Arg5349_0 + 1), Arg5349_1, Arg5349_2, ", ", R0]);})))}, 5, [], "js.mk-regs-aux"];





Shen.fns["js.mk-regs"] = [Shen.type_func, function shen_user_lambda5353(Arg5352) {
  if (Arg5352.length < 1) return [Shen.type_func, shen_user_lambda5353, 1, Arg5352];
  var Arg5352_0 = Arg5352[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [0, Shen.call(Shen.fns["js.context-nregs"], [Arg5352_0]), Arg5352_0, "var ", ""]);})}, 1, [], "js.mk-regs"];





Shen.fns["js.mk-regs-str"] = [Shen.type_func, function shen_user_lambda5356(Arg5355) {
  if (Arg5355.length < 1) return [Shen.type_func, shen_user_lambda5356, 1, Arg5355];
  var Arg5355_0 = Arg5355[0];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["js.context-nregs"], [Arg5355_0]), 0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-regs"], [Arg5355_0]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 1, [], "js.mk-regs-str"];





Shen.fns["js.mk-args-str-aux"] = [Shen.type_func, function shen_user_lambda5368(Arg5367) {
  if (Arg5367.length < 5) return [Shen.type_func, shen_user_lambda5368, 5, Arg5367];
  var Arg5367_0 = Arg5367[0], Arg5367_1 = Arg5367[1], Arg5367_2 = Arg5367[2], Arg5367_3 = Arg5367[3], Arg5367_4 = Arg5367[4];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5367_1, Arg5367_0)))
  ? Arg5367_4
  : ((R0 = "~A~A~A = ~A[~A]"),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5367_2])),
  (R2 = Shen.call(Shen.fns["js.arg-name"], [Arg5367_1, Arg5367_2])),
  (R2 = Shen.call(Shen.fns["shen.insert"], [Arg5367_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [Arg5367_3, Shen.call(Shen.fns["shen.insert"], [Arg5367_4, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-args-str-aux"], [Arg5367_0, (Arg5367_1 + 1), Arg5367_2, ", ", R2]);})))}, 5, [], "js.mk-args-str-aux"];





Shen.fns["js.mk-args-str"] = [Shen.type_func, function shen_user_lambda5374(Arg5373) {
  if (Arg5373.length < 2) return [Shen.type_func, shen_user_lambda5374, 2, Arg5373];
  var Arg5373_0 = Arg5373[0], Arg5373_1 = Arg5373[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5373_0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-args-str-aux"], [Arg5373_0, 0, Arg5373_1, "var ", ""]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 2, [], "js.mk-args-str"];





Shen.fns["js.emit-func-obj"] = [Shen.type_func, function shen_user_lambda5380(Arg5379) {
  if (Arg5379.length < 4) return [Shen.type_func, shen_user_lambda5380, 4, Arg5379];
  var Arg5379_0 = Arg5379[0], Arg5379_1 = Arg5379[1], Arg5379_2 = Arg5379[2], Arg5379_3 = Arg5379[3];
  var R0, R1;
  return ((((Shen.unwind_tail(Shen.$eq$(Arg5379_3, "")) || Shen.empty$question$(Arg5379_3)))
  ? (R0 = "undefined")
  : (R0 = Arg5379_3)),
  (R1 = Shen.call(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [Arg5379_2, ", "]), "]"])])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], ["S", Shen.call(Shen.fns["@s"], ["h", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], [".", Shen.call(Shen.fns["@s"], ["t", Shen.call(Shen.fns["@s"], ["y", Shen.call(Shen.fns["@s"], ["p", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["_", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["c", Shen.call(Shen.fns["@s"], [",", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [[Shen.type_cons, Arg5379_1, [Shen.type_cons, Shen.str(Arg5379_0), [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]], ", "]), "]"])])])])])])])])])])])])])])])])])]);}))}, 4, [], "js.emit-func-obj"];





Shen.fns["js.emit-func-closure"] = [Shen.type_func, function shen_user_lambda5385(Arg5384) {
  if (Arg5384.length < 3) return [Shen.type_func, shen_user_lambda5385, 3, Arg5384];
  var Arg5384_0 = Arg5384[0], Arg5384_1 = Arg5384[1], Arg5384_2 = Arg5384[2];
  var R0, R1;
  return ((R0 = "[~A, ~A, ~A, ~A]"),
  (R1 = "Shen.type_func"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [Arg5384_2, Shen.call(Shen.fns["shen.insert"], [Arg5384_0, Shen.call(Shen.fns["shen.insert"], [Arg5384_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])]);}))}, 3, [], "js.emit-func-closure"];





Shen.fns["js.emit-func-body"] = [Shen.type_func, function shen_user_lambda5391(Arg5390) {
  if (Arg5390.length < 4) return [Shen.type_func, shen_user_lambda5391, 4, Arg5390];
  var Arg5390_0 = Arg5390[0], Arg5390_1 = Arg5390[1], Arg5390_2 = Arg5390[2], Arg5390_3 = Arg5390[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.func-name"], [Arg5390_0])),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5390_3])),
  (R2 = Shen.call(Shen.fns["js.emit-func-closure"], [Arg5390_1, R0, R1])),
  (R2 = ("if (" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg5390_3]), (".length < " + Shen.call(Shen.fns["shen.app"], [Arg5390_1, (") return " + Shen.call(Shen.fns["shen.app"], [R2, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))),
  (R3 = "function ~A(~A) {~%  ~A;~%  ~A~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5390_2, true, Arg5390_3])),
  (R5 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5390_3])),
  (R6 = Shen.call(Shen.fns["js.mk-args-str"], [Arg5390_1, Arg5390_3])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R5, Shen.call(Shen.fns["shen.insert"], [R6, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.proc-nl"], [R3])])])])])])]);}))}, 4, [], "js.emit-func-body"];





Shen.fns["js.emit-mk-func"] = [Shen.type_func, function shen_user_lambda5397(Arg5396) {
  if (Arg5396.length < 4) return [Shen.type_func, shen_user_lambda5397, 4, Arg5396];
  var Arg5396_0 = Arg5396[0], Arg5396_1 = Arg5396[1], Arg5396_2 = Arg5396[2], Arg5396_3 = Arg5396[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5396_0)])),
  Shen.call(Shen.fns["js.func-name"], [Arg5396_0]),
  (R1 = Shen.call(Shen.fns["length"], [Arg5396_1])),
  (R2 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R2 = Shen.call(Shen.fns["js.emit-func-body"], [R2, R1, Arg5396_2, Arg5396_3])),
  (R2 = Shen.call(Shen.fns["js.emit-func-obj"], [R1, R2, [], R0])),
  ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [R2, ";\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))}, 4, [], "js.emit-mk-func"];





Shen.fns["js.emit-mk-closure"] = [Shen.type_func, function shen_user_lambda5403(Arg5402) {
  if (Arg5402.length < 4) return [Shen.type_func, shen_user_lambda5403, 4, Arg5402];
  var Arg5402_0 = Arg5402[0], Arg5402_1 = Arg5402[1], Arg5402_2 = Arg5402[2], Arg5402_3 = Arg5402[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5402_3])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R2 = (Shen.call(Shen.fns["length"], [Arg5402_1]) + Shen.call(Shen.fns["length"], [Arg5402_0]))),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  (R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [R0, R2, Arg5402_2, R1])),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5402_3, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5405(Arg5404) {
  if (Arg5404.length < 2) return [Shen.type_func, shen_user_lambda5405, 2, Arg5404];
  var Arg5404_0 = Arg5404[0], Arg5404_1 = Arg5404[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5404_1, false, Arg5404_0]);})}, 2, [Arg5402_3], undefined], Arg5402_1])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [R2, R0, R1, []]);}))}, 4, [], "js.emit-mk-closure"];





Shen.fns["js.emit-mk-toplevel"] = [Shen.type_func, function shen_user_lambda5409(Arg5408) {
  if (Arg5408.length < 2) return [Shen.type_func, shen_user_lambda5409, 2, Arg5408];
  var Arg5408_0 = Arg5408[0], Arg5408_1 = Arg5408[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-toplevel"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [R0, 0, Arg5408_0, Arg5408_1])),
  ("Shen.call_toplevel(" + (R0 + ");")))}, 2, [], "js.emit-mk-toplevel"];





Shen.fns["js.emit-freeze"] = [Shen.type_func, function shen_user_lambda5414(Arg5413) {
  if (Arg5413.length < 3) return [Shen.type_func, shen_user_lambda5414, 3, Arg5413];
  var Arg5413_0 = Arg5413[0], Arg5413_1 = Arg5413[1], Arg5413_2 = Arg5413[2];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5413_2])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]]),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5413_2, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5416(Arg5415) {
  if (Arg5415.length < 2) return [Shen.type_func, shen_user_lambda5416, 2, Arg5415];
  var Arg5415_0 = Arg5415[0], Arg5415_1 = Arg5415[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5415_1, false, Arg5415_0]);})}, 2, [Arg5413_2], undefined], Arg5413_0])),
  (R2 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R3 = Shen.call(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5413_1, true, R1])])),
  (R0 = Shen.call(Shen.fns["js.mk-args-str"], [Shen.call(Shen.fns["length"], [R0]), R1])),
  (R4 = "function(~A) {~%  ~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["shen.insert"], [R3, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.insert"], [Shen.call(Shen.fns["js.context-argname"], [R1]), Shen.call(Shen.fns["shen.proc-nl"], [R4])])])])),
  (R3 = "(new Shen.Freeze([~A], ~A))"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.proc-nl"], [R3])])]);}))}, 3, [], "js.emit-freeze"];





Shen.fns["js.emit-thaw"] = [Shen.type_func, function shen_user_lambda5421(Arg5420) {
  if (Arg5420.length < 3) return [Shen.type_func, shen_user_lambda5421, 3, Arg5420];
  var Arg5420_0 = Arg5420[0], Arg5420_1 = Arg5420[1], Arg5420_2 = Arg5420[2];
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5420_1)))
  ? ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-thaw"], [Arg5420_0, true, Arg5420_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5420_1)))
  ? ("Shen.thaw(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5420_0, false, Arg5420_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-thaw"]]);})))}, 3, [], "js.emit-thaw"];





Shen.fns["js.emit-get-arg"] = [Shen.type_func, function shen_user_lambda5425(Arg5424) {
  if (Arg5424.length < 2) return [Shen.type_func, shen_user_lambda5425, 2, Arg5424];
  var Arg5424_0 = Arg5424[0], Arg5424_1 = Arg5424[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.arg-name"], [Arg5424_0, Arg5424_1]);})}, 2, [], "js.emit-get-arg"];





Shen.fns["js.emit-set-reg"] = [Shen.type_func, function shen_user_lambda5430(Arg5429) {
  if (Arg5429.length < 3) return [Shen.type_func, shen_user_lambda5430, 3, Arg5429];
  var Arg5429_0 = Arg5429[0], Arg5429_1 = Arg5429[1], Arg5429_2 = Arg5429[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5429_1, false, Arg5429_2])),
  Shen.call(Shen.fns["js.context-nregs->"], [Arg5429_2, Shen.call(Shen.fns["js.max"], [(Arg5429_0 + 1), Shen.call(Shen.fns["js.context-nregs"], [Arg5429_2])])]),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5429_2]), Shen.call(Shen.fns["shen.app"], [Arg5429_0, (" = " + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])))}, 3, [], "js.emit-set-reg"];





Shen.fns["js.emit-get-reg"] = [Shen.type_func, function shen_user_lambda5434(Arg5433) {
  if (Arg5433.length < 2) return [Shen.type_func, shen_user_lambda5434, 2, Arg5433];
  var Arg5433_0 = Arg5433[0], Arg5433_1 = Arg5433[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5433_1]), Shen.call(Shen.fns["shen.app"], [Arg5433_0, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.emit-get-reg"];





Shen.fns["js.func-arg"] = [Shen.type_func, function shen_user_lambda5438(Arg5437) {
  if (Arg5437.length < 2) return [Shen.type_func, shen_user_lambda5438, 2, Arg5437];
  var Arg5437_0 = Arg5437[0], Arg5437_1 = Arg5437[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5437_1, false, Arg5437_0]);})}, 2, [], "js.func-arg"];





Shen.fns["js.emit-funcall*"] = [Shen.type_func, function shen_user_lambda5444(Arg5443) {
  if (Arg5443.length < 4) return [Shen.type_func, shen_user_lambda5444, 4, Arg5443];
  var Arg5443_0 = Arg5443[0], Arg5443_1 = Arg5443[1], Arg5443_2 = Arg5443[2], Arg5443_3 = Arg5443[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5443_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5446(Arg5445) {
  if (Arg5445.length < 2) return [Shen.type_func, shen_user_lambda5446, 2, Arg5445];
  var Arg5445_0 = Arg5445[0], Arg5445_1 = Arg5445[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5445_1, false, Arg5445_0]);})}, 2, [Arg5443_3], undefined], Arg5443_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R1 = "Shen.call_tail"),
  (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["shen.app"], [R1, ("(" + Shen.call(Shen.fns["shen.app"], [Arg5443_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])]);}))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5443_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5448(Arg5447) {
  if (Arg5447.length < 2) return [Shen.type_func, shen_user_lambda5448, 2, Arg5447];
  var Arg5447_0 = Arg5447[0], Arg5447_1 = Arg5447[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5447_1, false, Arg5447_0]);})}, 2, [Arg5443_3], undefined], Arg5443_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  ("Shen.call(" + Shen.call(Shen.fns["shen.app"], [Arg5443_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-funcall*"]]);})))}, 4, [], "js.emit-funcall*"];





Shen.fns["js.emit-funcall"] = [Shen.type_func, function shen_user_lambda5454(Arg5453) {
  if (Arg5453.length < 4) return [Shen.type_func, shen_user_lambda5454, 4, Arg5453];
  var Arg5453_0 = Arg5453[0], Arg5453_1 = Arg5453[1], Arg5453_2 = Arg5453[2], Arg5453_3 = Arg5453[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5453_0)])),
  (R0 = ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, "]", [Shen.type_symbol, "shen.a"]]))),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R0, Arg5453_1, Arg5453_2, Arg5453_3]);}))}, 4, [], "js.emit-funcall"];





Shen.fns["js.js-from-kl-expr"] = [Shen.type_func, function shen_user_lambda5459(Arg5458) {
  if (Arg5458.length < 3) return [Shen.type_func, shen_user_lambda5459, 3, Arg5458];
  var Arg5458_0 = Arg5458[0], Arg5458_1 = Arg5458[1], Arg5458_2 = Arg5458[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr*"], [Arg5458_0, Arg5458_1, Arg5458_2])),
  (((typeof(R0) == 'string'))
  ? R0
  : (function() {
  return Shen.simple_error(("ERROR: expr " + Shen.call(Shen.fns["shen.app"], [Arg5458_0, (" => " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]])));})))}, 3, [], "js.js-from-kl-expr"];





Shen.fns["js.js-from-kl-expr*"] = [Shen.type_func, function shen_user_lambda5526(Arg5525) {
  if (Arg5525.length < 3) return [Shen.type_func, shen_user_lambda5526, 3, Arg5525];
  var Arg5525_0 = Arg5525[0], Arg5525_1 = Arg5525[1], Arg5525_2 = Arg5525[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg5525_0))
  ? "[]"
  : (((typeof(Arg5525_0) == 'number'))
  ? (function() {
  return Shen.str(Arg5525_0);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg5525_0, Shen.fail_obj)))
  ? "shen_fail_obj"
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5525_0)))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5525_0)))
  ? "false"
  : ((Shen.is_type(Arg5525_0, Shen.type_symbol))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.str(Arg5525_0), "]", [Shen.type_symbol, "shen.s"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bar!"], Arg5525_0)))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], ["|", "]", [Shen.type_symbol, "shen.s"]]))
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2][2]))))))
  ? ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5525_0[2][1], false, Arg5525_2]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5525_0[2][2][1], false, Arg5525_2]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5525_0[2][1], Arg5525_1, Arg5525_2]);})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg5525_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [Arg5525_0[2], Arg5525_1, Arg5525_2]);})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [[Shen.type_cons, [Shen.type_cons, Arg5525_0[2][1], [Shen.type_cons, Arg5525_0[2][2][1], []]], [Shen.type_cons, [Shen.type_cons, true, Arg5525_0[2][2][2]], []]], Arg5525_1, Arg5525_2]);})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2])))))
  ? (function() {
  return Shen.simple_error("Wrong freeze code!");})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-freeze"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-freeze"], [Arg5525_0[2][2][1], Arg5525_0[2][2][2][1], Arg5525_2]);})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-arg"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-arg"], [Arg5525_0[2][1], Arg5525_2]);})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-reg"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-reg"], [Arg5525_0[2][1], Arg5525_2]);})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-set-reg!"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set-reg"], [Arg5525_0[2][1], Arg5525_0[2][2][1], Arg5525_2]);})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-func"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-func"], [Arg5525_0[2][1], Arg5525_0[2][2][1], Arg5525_0[2][2][2][2][1], Arg5525_2]);})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-closure"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-closure"], [Arg5525_0[2][1], Arg5525_0[2][2][2][1], Arg5525_0[2][2][2][2][1], Arg5525_2]);})
  : (((Shen.is_type(Arg5525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-toplevel"], Arg5525_0[1])) && (Shen.is_type(Arg5525_0[2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5525_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5525_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-toplevel"], [Arg5525_0[2][2][2][2][1], Arg5525_2]);})
  : ((R0 = (new Shen.Freeze([Arg5525_0, Arg5525_1, Arg5525_2], function(Arg5527) {
  var Arg5527_0 = Arg5527[0], Arg5527_1 = Arg5527[1], Arg5527_2 = Arg5527[2];
  return (function() {
  return (((Shen.is_type(Arg5527_0, Shen.type_cons) && Shen.is_type(Arg5527_0[1], Shen.type_cons)))
  ? ((R3 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5527_0[1], false, Arg5527_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R3, Arg5527_0[2], Arg5527_1, Arg5527_2]);}))
  : ((Shen.is_type(Arg5527_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall"], [Arg5527_0[1], Arg5527_0[2], Arg5527_1, Arg5527_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.esc-obj"], [Arg5527_0]);})));})}))),
  ((Shen.is_type(Arg5525_0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["js.std-op"], [Arg5525_0[1], Arg5525_0[2], Arg5525_1, Arg5525_2])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))))))))))))))))))))}, 3, [], "js.js-from-kl-expr*"];





Shen.fns["js.js-from-kl-toplevel-expr"] = [Shen.type_func, function shen_user_lambda5532(Arg5531) {
  if (Arg5531.length < 2) return [Shen.type_func, shen_user_lambda5532, 2, Arg5531];
  var Arg5531_0 = Arg5531[0], Arg5531_1 = Arg5531[1];
  var R0, R1;
  return (((typeof(Arg5531_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5531_0, false, Arg5531_1]), ";\x0a", [Shen.type_symbol, "shen.a"]]);})
  : ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5531_0, false, Arg5531_1])),
  (R1 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5531_1])),
  (((Shen.call(Shen.fns["js.context-nregs"], [Arg5531_1]) > 0))
  ? ("((function() {\x0a  " + Shen.call(Shen.fns["shen.app"], [R1, ("return " + Shen.call(Shen.fns["shen.app"], [R0, "})());\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [R0, ";", [Shen.type_symbol, "shen.a"]]);}))))}, 2, [], "js.js-from-kl-toplevel-expr"];





Shen.fns["js.js-from-kl-toplevel"] = [Shen.type_func, function shen_user_lambda5552(Arg5551) {
  if (Arg5551.length < 3) return [Shen.type_func, shen_user_lambda5552, 3, Arg5551];
  var Arg5551_0 = Arg5551[0], Arg5551_1 = Arg5551[1], Arg5551_2 = Arg5551[2];
  return (((Shen.is_type(Arg5551_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5551_0[1])) && (Shen.is_type(Arg5551_0[2], Shen.type_cons) && (Shen.is_type(Arg5551_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5551_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.emit-set"], [Arg5551_0[2][1], Arg5551_0[2][2][1], Arg5551_2]), ";\x0a"]);})
  : (((Shen.is_type(Arg5551_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-func"], Arg5551_0[1])) && (Shen.is_type(Arg5551_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5551_1)) && Shen.call(Shen.fns["js.int-func?"], [Arg5551_0[2][1]]))))))
  ? ""
  : (((Shen.is_type(Arg5551_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-func"], Arg5551_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5551_0, true, Arg5551_2]);})
  : (((Shen.is_type(Arg5551_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-toplevel"], Arg5551_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5551_0, true, Arg5551_2]);})
  : (((Shen.is_type(Arg5551_0, Shen.type_cons) && (Shen.empty$question$(Arg5551_0[2]) && Shen.is_type(Arg5551_0[1], Shen.type_symbol))))
  ? ("Shen.call_toplevel(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5551_0[1])]), ")\x0a", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5551_0, Shen.type_cons) && Shen.empty$question$(Arg5551_0[2])))
  ? (function() {
  return Shen.simple_error(("Unexpected toplevel expression: " + Shen.call(Shen.fns["shen.app"], [Arg5551_0[1], "\x0a", [Shen.type_symbol, "shen.r"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-expr"], [Arg5551_0, Arg5551_2]);})))))))}, 3, [], "js.js-from-kl-toplevel"];





Shen.fns["js.js-from-kl-toplevel-forms"] = [Shen.type_func, function shen_user_lambda5560(Arg5559) {
  if (Arg5559.length < 4) return [Shen.type_func, shen_user_lambda5560, 4, Arg5559];
  var Arg5559_0 = Arg5559[0], Arg5559_1 = Arg5559[1], Arg5559_2 = Arg5559[2], Arg5559_3 = Arg5559[3];
  var R0;
  return ((Shen.empty$question$(Arg5559_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [Arg5559_2]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [Arg5559_3, "\x0a"])])]);})
  : ((Shen.is_type(Arg5559_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-toplevel"], [Arg5559_0[1], Arg5559_1, Arg5559_2])),
  (R0 = (Arg5559_3 + (R0 + "\x0a"))),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-forms"], [Arg5559_0[2], Arg5559_1, Arg5559_2, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.js-from-kl-toplevel-forms"]]);})))}, 4, [], "js.js-from-kl-toplevel-forms"];





Shen.fns["js.js-from-kl*"] = [Shen.type_func, function shen_user_lambda5565(Arg5564) {
  if (Arg5564.length < 3) return [Shen.type_func, shen_user_lambda5565, 3, Arg5564];
  var Arg5564_0 = Arg5564[0], Arg5564_1 = Arg5564[1], Arg5564_2 = Arg5564[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel"], [Arg5564_0, Arg5564_1, Arg5564_2]);})}, 3, [], "js.js-from-kl*"];





Shen.fns["js-from-kl"] = [Shen.type_func, function shen_user_lambda5568(Arg5567) {
  if (Arg5567.length < 1) return [Shen.type_func, shen_user_lambda5568, 1, Arg5567];
  var Arg5567_0 = Arg5567[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk"], [[Shen.type_cons, Arg5567_0, []], false])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-toplevel-forms"], [R1, (Shen.globals["js.skip-internals"]), R0, ""])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [R0]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [R1, "\x0a"])])]);}))}, 1, [], "js-from-kl"];





Shen.fns["js.js-from-kl-all"] = [Shen.type_func, function shen_user_lambda5571(Arg5570) {
  if (Arg5570.length < 1) return [Shen.type_func, shen_user_lambda5571, 1, Arg5570];
  var Arg5570_0 = Arg5570[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.walk"], [Arg5570_0, false])),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-all"], [R0, (Shen.globals["js.skip-internals"]), R1, ""]);}))}, 1, [], "js.js-from-kl-all"];





Shen.call_toplevel(function shen_toplevel5574(Arg5572) {
  if (Arg5572.length < 0) return [Shen.type_func, shen_toplevel5574, 0, Arg5572];
  return (Shen.globals["js.skip-internals"] = true)});




Shen.fns["js.dump-exprs-to-file"] = [Shen.type_func, function shen_user_lambda5580(Arg5579) {
  if (Arg5579.length < 2) return [Shen.type_func, shen_user_lambda5580, 2, Arg5579];
  var Arg5579_0 = Arg5579[0], Arg5579_1 = Arg5579[1];
  var R0;
  return ((Shen.empty$question$(Arg5579_0))
  ? true
  : ((Shen.is_type(Arg5579_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.kl-from-shen"], [Arg5579_0[1]])),
  (R0 = Shen.call(Shen.fns["js-from-kl"], [R0])),
  (((typeof(R0) == 'string'))
  ? [Shen.type_symbol, "_"]
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a string", [Shen.type_symbol, "shen.a"]]))),
  Shen.pr(R0, Arg5579_1),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-exprs-to-file"], [Arg5579_0[2], Arg5579_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.dump-exprs-to-file"]]);})))}, 2, [], "js.dump-exprs-to-file"];





Shen.fns["js.dump-to-file"] = [Shen.type_func, function shen_user_lambda5584(Arg5583) {
  if (Arg5583.length < 2) return [Shen.type_func, shen_user_lambda5584, 2, Arg5583];
  var Arg5583_0 = Arg5583[0], Arg5583_1 = Arg5583[1];
  var R0;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg5583_1, [Shen.type_symbol, "out"])),
  Shen.call(Shen.fns["js.dump-exprs-to-file"], [Arg5583_0, R0]),
  Shen.close(R0),
  true)}, 2, [], "js.dump-to-file"];





Shen.fns["js.kl-from-shen"] = [Shen.type_func, function shen_user_lambda5587(Arg5586) {
  if (Arg5586.length < 1) return [Shen.type_func, shen_user_lambda5587, 1, Arg5586];
  var Arg5586_0 = Arg5586[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda5589(Arg5588) {
  if (Arg5588.length < 1) return [Shen.type_func, shen_user_lambda5589, 1, Arg5588];
  var Arg5588_0 = Arg5588[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg5588_0]);})}, 1, [], undefined], Arg5586_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["js.package-contents"], [R0]))
  : (R0 = R0)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.elim-define"], [Shen.call(Shen.fns["shen.proc-input+"], [R0])]);}))}, 1, [], "js.kl-from-shen"];





Shen.fns["js-from-shen"] = [Shen.type_func, function shen_user_lambda5592(Arg5591) {
  if (Arg5591.length < 1) return [Shen.type_func, shen_user_lambda5592, 1, Arg5591];
  var Arg5591_0 = Arg5591[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js-from-kl"], [Shen.call(Shen.fns["js.kl-from-shen"], [Arg5591_0])]);})}, 1, [], "js-from-shen"];





Shen.call_toplevel(function shen_toplevel5595(Arg5593) {
  if (Arg5593.length < 0) return [Shen.type_func, shen_toplevel5595, 0, Arg5593];
  return (Shen.globals["js.*silence*"] = false)});




Shen.fns["js.dump"] = [Shen.type_func, function shen_user_lambda5600(Arg5599) {
  if (Arg5599.length < 3) return [Shen.type_func, shen_user_lambda5600, 3, Arg5599];
  var Arg5599_0 = Arg5599[0], Arg5599_1 = Arg5599[1], Arg5599_2 = Arg5599[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.app"], [Arg5599_2, Shen.call(Shen.fns["shen.app"], [Arg5599_1, ".js", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R1 = Shen.call(Shen.fns["shen.app"], [Arg5599_0, Shen.call(Shen.fns["shen.app"], [Arg5599_1, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R2 = Shen.call(Shen.fns["read-file"], [R1])),
  (((Shen.globals["js.*silence*"]))
  ? [Shen.type_symbol, "_"]
  : Shen.call(Shen.fns["shen.prhush"], [("== " + Shen.call(Shen.fns["shen.app"], [R1, (" -> " + Shen.call(Shen.fns["shen.app"], [R0, "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-to-file"], [R2, R0]);}))}, 3, [], "js.dump"];





Shen.call_toplevel(function shen_toplevel5603(Arg5601) {
  if (Arg5601.length < 0) return [Shen.type_func, shen_toplevel5603, 0, Arg5601];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "js.dump"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel5606(Arg5604) {
  if (Arg5604.length < 0) return [Shen.type_func, shen_toplevel5606, 0, Arg5604];
  return ((Shen.trap_error(function() {return (Shen.call(Shen.fns["register-dumper"], []),
  true);}, [Shen.type_func, function shen_user_lambda5608(Arg5607) {
  if (Arg5607.length < 1) return [Shen.type_func, shen_user_lambda5608, 1, Arg5607];
  var Arg5607_0 = Arg5607[0];
  return false}, 1, [], undefined]))
  ? (function() {
  return Shen.call_tail(Shen.fns["register-dumper"], [[Shen.type_symbol, "javascript"], [Shen.type_symbol, "all"], [Shen.type_symbol, "js.dump"]]);})
  : [Shen.type_symbol, "_"])});




Shen.fns["shenjs.repl-split-input-aux"] = [Shen.type_func, function shen_user_lambda5613(Arg5612) {
  if (Arg5612.length < 3) return [Shen.type_func, shen_user_lambda5613, 3, Arg5612];
  var Arg5612_0 = Arg5612[0], Arg5612_1 = Arg5612[1], Arg5612_2 = Arg5612[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5612_0))
  ? Arg5612_2
  : ((Shen.is_type(Arg5612_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg5612_0[1], Arg5612_1]),
  (R1 = Shen.call(Shen.fns["reverse"], [R0])),
  (R2 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R1, [Shen.type_func, function shen_user_lambda5615(Arg5614) {
  if (Arg5614.length < 1) return [Shen.type_func, shen_user_lambda5615, 1, Arg5614];
  var Arg5614_0 = Arg5614[0];
  return Shen.fail_obj}, 1, [], undefined]])),
  (function() {
  return Shen.call_tail(Shen.fns["shenjs.repl-split-input-aux"], [Arg5612_0[2], R0, (((Shen.unwind_tail(Shen.$eq$(R2, Shen.fail_obj)) || Shen.empty$question$(R2)))
  ? Arg5612_2
  : [Shen.fns['shen.tuple'], R1, Arg5612_0[2]])]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shenjs.repl-split-input-aux"]]);})))}, 3, [], "shenjs.repl-split-input-aux"];





Shen.fns["shenjs.repl-split-input"] = [Shen.type_func, function shen_user_lambda5618(Arg5617) {
  if (Arg5617.length < 1) return [Shen.type_func, shen_user_lambda5618, 1, Arg5617];
  var Arg5617_0 = Arg5617[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shenjs.repl-split-input-aux"], [Arg5617_0, [], []]);})}, 1, [], "shenjs.repl-split-input"];










Shen.fns["shen.shen->kl"] = [Shen.type_func, function shen_user_lambda6236(Arg6235) {
  if (Arg6235.length < 2) return [Shen.type_func, shen_user_lambda6236, 2, Arg6235];
  var Arg6235_0 = Arg6235[0], Arg6235_1 = Arg6235[1];
  return (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<define>"], [Shen.type_cons, Arg6235_0, Arg6235_1], [Shen.type_func, function shen_user_lambda6238(Arg6237) {
  if (Arg6237.length < 2) return [Shen.type_func, shen_user_lambda6238, 2, Arg6237];
  var Arg6237_0 = Arg6237[0], Arg6237_1 = Arg6237[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.shen-syntax-error"], [Arg6237_0, Arg6237_1]);})}, 2, [Arg6235_0], undefined]]);})}, 2, [], "shen.shen->kl"];





Shen.fns["shen.shen-syntax-error"] = [Shen.type_func, function shen_user_lambda6240(Arg6239) {
  if (Arg6239.length < 2) return [Shen.type_func, shen_user_lambda6240, 2, Arg6239];
  var Arg6239_0 = Arg6239[0], Arg6239_1 = Arg6239[1];
  return (function() {
  return Shen.simple_error(("syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6239_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6239_1]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})}, 2, [], "shen.shen-syntax-error"];





Shen.fns["shen.<define>"] = [Shen.type_func, function shen_user_lambda6242(Arg6241) {
  if (Arg6241.length < 1) return [Shen.type_func, shen_user_lambda6242, 1, Arg6241];
  var Arg6241_0 = Arg6241[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6241_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<signature>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6241_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<define>"];





Shen.fns["shen.<name>"] = [Shen.type_func, function shen_user_lambda6244(Arg6243) {
  if (Arg6243.length < 1) return [Shen.type_func, shen_user_lambda6244, 1, Arg6243];
  var Arg6243_0 = Arg6243[0];
  var R0;
  return (((Shen.is_type(Arg6243_0[1], Shen.type_cons))
  ? ((R0 = Arg6243_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6243_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6243_0])])[1], (((Shen.is_type(R0, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.sysfunc?"], [R0]))))
  ? R0
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a legitimate function name.\x0a", [Shen.type_symbol, "shen.a"]])))])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<name>"];





Shen.fns["shen.sysfunc?"] = [Shen.type_func, function shen_user_lambda6246(Arg6245) {
  if (Arg6245.length < 1) return [Shen.type_func, shen_user_lambda6246, 1, Arg6245];
  var Arg6245_0 = Arg6245[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6245_0, Shen.call(Shen.fns["get"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])]);})}, 1, [], "shen.sysfunc?"];





Shen.fns["shen.<signature>"] = [Shen.type_func, function shen_user_lambda6248(Arg6247) {
  if (Arg6247.length < 1) return [Shen.type_func, shen_user_lambda6248, 1, Arg6247];
  var Arg6247_0 = Arg6247[0];
  var R0;
  return ((((Shen.is_type(Arg6247_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg6247_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6247_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6247_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])[1], Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])])]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<signature>"];





Shen.fns["shen.curry-type"] = [Shen.type_func, function shen_user_lambda6250(Arg6249) {
  if (Arg6249.length < 1) return [Shen.type_func, shen_user_lambda6250, 1, Arg6249];
  var Arg6249_0 = Arg6249[0];
  return (((Shen.is_type(Arg6249_0, Shen.type_cons) && (Shen.is_type(Arg6249_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6249_0[2][1])) && (Shen.is_type(Arg6249_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6249_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6249_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6249_0[1], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg6249_0[2][2], []]]]]);})
  : (((Shen.is_type(Arg6249_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6249_0[1])) && (Shen.is_type(Arg6249_0[2], Shen.type_cons) && (Shen.is_type(Arg6249_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6249_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.curry-type"], [Arg6249_0[2][1]]), []]]
  : (((Shen.is_type(Arg6249_0, Shen.type_cons) && (Shen.is_type(Arg6249_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6249_0[2][1])) && (Shen.is_type(Arg6249_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6249_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6249_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6249_0[1], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, Arg6249_0[2][2], []]]]]);})
  : ((Shen.is_type(Arg6249_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.curry-type"], Arg6249_0]);})
  : Arg6249_0))))}, 1, [], "shen.curry-type"];





Shen.fns["shen.<signature-help>"] = [Shen.type_func, function shen_user_lambda6252(Arg6251) {
  if (Arg6251.length < 1) return [Shen.type_func, shen_user_lambda6252, 1, Arg6251];
  var Arg6251_0 = Arg6251[0];
  var R0, R1;
  return (((Shen.is_type(Arg6251_0[1], Shen.type_cons))
  ? ((R0 = Arg6251_0[1][1]),
  (R1 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6251_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6251_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "}"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, R0, Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6251_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<signature-help>"];





Shen.fns["shen.<rules>"] = [Shen.type_func, function shen_user_lambda6254(Arg6253) {
  if (Arg6253.length < 1) return [Shen.type_func, shen_user_lambda6254, 1, Arg6253];
  var Arg6253_0 = Arg6253[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6253_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6253_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<rules>"];





Shen.fns["shen.<rule>"] = [Shen.type_func, function shen_user_lambda6256(Arg6255) {
  if (Arg6255.length < 1) return [Shen.type_func, shen_user_lambda6256, 1, Arg6255];
  var Arg6255_0 = Arg6255[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6255_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6255_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6255_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6255_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<rule>"];





Shen.fns["shen.fail_if"] = [Shen.type_func, function shen_user_lambda6258(Arg6257) {
  if (Arg6257.length < 2) return [Shen.type_func, shen_user_lambda6258, 2, Arg6257];
  var Arg6257_0 = Arg6257[0], Arg6257_1 = Arg6257[1];
  return ((Shen.call(Arg6257_0, [Arg6257_1]))
  ? Shen.fail_obj
  : Arg6257_1)}, 2, [], "shen.fail_if"];





Shen.fns["shen.succeeds?"] = [Shen.type_func, function shen_user_lambda6260(Arg6259) {
  if (Arg6259.length < 1) return [Shen.type_func, shen_user_lambda6260, 1, Arg6259];
  var Arg6259_0 = Arg6259[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6259_0, Shen.fail_obj)))
  ? false
  : true)}, 1, [], "shen.succeeds?"];





Shen.fns["shen.<patterns>"] = [Shen.type_func, function shen_user_lambda6262(Arg6261) {
  if (Arg6261.length < 1) return [Shen.type_func, shen_user_lambda6262, 1, Arg6261];
  var Arg6261_0 = Arg6261[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6261_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<patterns>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6261_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<patterns>"];





Shen.fns["shen.<pattern>"] = [Shen.type_func, function shen_user_lambda6264(Arg6263) {
  if (Arg6263.length < 1) return [Shen.type_func, shen_user_lambda6264, 1, Arg6263];
  var Arg6263_0 = Arg6263[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6263_0[1], Shen.type_cons) && Shen.is_type(Arg6263_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6263_0[1], Shen.type_cons) && Shen.is_type(Arg6263_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6263_0[1], Shen.type_cons) && Shen.is_type(Arg6263_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6263_0[1], Shen.type_cons) && Shen.is_type(Arg6263_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6263_0[1], Shen.type_cons) && Shen.is_type(Arg6263_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][1]))))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(0, Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])])])[1][1]))))
  ? Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])])])])])[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]])])
  : Shen.fail_obj)
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6263_0[1], Shen.type_cons))
  ? ((R0 = Arg6263_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6263_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6263_0])])[1], Shen.call(Shen.fns["shen.constructor-error"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<simple_pattern>"], [Arg6263_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<pattern>"];





Shen.fns["shen.constructor-error"] = [Shen.type_func, function shen_user_lambda6266(Arg6265) {
  if (Arg6265.length < 1) return [Shen.type_func, shen_user_lambda6266, 1, Arg6265];
  var Arg6265_0 = Arg6265[0];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6265_0, " is not a legitimate constructor\x0a", [Shen.type_symbol, "shen.a"]]));})}, 1, [], "shen.constructor-error"];





Shen.fns["shen.<simple_pattern>"] = [Shen.type_func, function shen_user_lambda6268(Arg6267) {
  if (Arg6267.length < 1) return [Shen.type_func, shen_user_lambda6268, 1, Arg6267];
  var Arg6267_0 = Arg6267[0];
  var R0;
  return (((Shen.is_type(Arg6267_0[1], Shen.type_cons))
  ? ((R0 = Arg6267_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "_"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6267_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6267_0])])[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Parse_Y"]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6267_0[1], Shen.type_cons))
  ? ((R0 = Arg6267_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<-"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6267_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6267_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<simple_pattern>"];





Shen.fns["shen.<pattern1>"] = [Shen.type_func, function shen_user_lambda6270(Arg6269) {
  if (Arg6269.length < 1) return [Shen.type_func, shen_user_lambda6270, 1, Arg6269];
  var Arg6269_0 = Arg6269[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6269_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern1>"];





Shen.fns["shen.<pattern2>"] = [Shen.type_func, function shen_user_lambda6272(Arg6271) {
  if (Arg6271.length < 1) return [Shen.type_func, shen_user_lambda6272, 1, Arg6271];
  var Arg6271_0 = Arg6271[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6271_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern2>"];





Shen.fns["shen.<action>"] = [Shen.type_func, function shen_user_lambda6274(Arg6273) {
  if (Arg6273.length < 1) return [Shen.type_func, shen_user_lambda6274, 1, Arg6273];
  var Arg6273_0 = Arg6273[0];
  var R0;
  return (((Shen.is_type(Arg6273_0[1], Shen.type_cons))
  ? ((R0 = Arg6273_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6273_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6273_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<action>"];





Shen.fns["shen.<guard>"] = [Shen.type_func, function shen_user_lambda6276(Arg6275) {
  if (Arg6275.length < 1) return [Shen.type_func, shen_user_lambda6276, 1, Arg6275];
  var Arg6275_0 = Arg6275[0];
  var R0;
  return (((Shen.is_type(Arg6275_0[1], Shen.type_cons))
  ? ((R0 = Arg6275_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6275_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6275_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<guard>"];





Shen.fns["shen.compile_to_machine_code"] = [Shen.type_func, function shen_user_lambda6278(Arg6277) {
  if (Arg6277.length < 2) return [Shen.type_func, shen_user_lambda6278, 2, Arg6277];
  var Arg6277_0 = Arg6277[0], Arg6277_1 = Arg6277[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compile_to_lambda+"], [Arg6277_0, Arg6277_1])),
  (R0 = Shen.call(Shen.fns["shen.compile_to_kl"], [Arg6277_0, R0])),
  Shen.call(Shen.fns["shen.record-source"], [Arg6277_0, R0]),
  R0)}, 2, [], "shen.compile_to_machine_code"];





Shen.fns["shen.record-source"] = [Shen.type_func, function shen_user_lambda6280(Arg6279) {
  if (Arg6279.length < 2) return [Shen.type_func, shen_user_lambda6280, 2, Arg6279];
  var Arg6279_0 = Arg6279[0], Arg6279_1 = Arg6279[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6279_0, [Shen.type_symbol, "shen.source"], Arg6279_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-source"];





Shen.fns["shen.compile_to_lambda+"] = [Shen.type_func, function shen_user_lambda6282(Arg6281) {
  if (Arg6281.length < 2) return [Shen.type_func, shen_user_lambda6282, 2, Arg6281];
  var Arg6281_0 = Arg6281[0], Arg6281_1 = Arg6281[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.aritycheck"], [Arg6281_0, Arg6281_1])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6284(Arg6283) {
  if (Arg6283.length < 2) return [Shen.type_func, shen_user_lambda6284, 2, Arg6283];
  var Arg6283_0 = Arg6283[0], Arg6283_1 = Arg6283[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_check"], [Arg6283_0, Arg6283_1]);})}, 2, [Arg6281_0], undefined], Arg6281_1]),
  (R0 = Shen.call(Shen.fns["shen.parameters"], [R0])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.strip-protect"], Arg6281_1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.abstract_rule"], R1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6286(Arg6285) {
  if (Arg6285.length < 2) return [Shen.type_func, shen_user_lambda6286, 2, Arg6285];
  var Arg6285_0 = Arg6285[0], Arg6285_1 = Arg6285[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6285_0, Arg6285_1]);})}, 2, [R0], undefined], R1])),
  [Shen.type_cons, R0, [Shen.type_cons, R1, []]])}, 2, [], "shen.compile_to_lambda+"];





Shen.fns["shen.free_variable_check"] = [Shen.type_func, function shen_user_lambda6288(Arg6287) {
  if (Arg6287.length < 2) return [Shen.type_func, shen_user_lambda6288, 2, Arg6287];
  var Arg6287_0 = Arg6287[0], Arg6287_1 = Arg6287[1];
  var R0;
  return (((Shen.is_type(Arg6287_1, Shen.type_cons) && (Shen.is_type(Arg6287_1[2], Shen.type_cons) && Shen.empty$question$(Arg6287_1[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6287_1[1]])),
  (R0 = Shen.call(Shen.fns["shen.extract_free_vars"], [R0, Arg6287_1[2][1]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_warnings"], [Arg6287_0, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.free_variable_check"]]);}))}, 2, [], "shen.free_variable_check"];





Shen.fns["shen.extract_vars"] = [Shen.type_func, function shen_user_lambda6290(Arg6289) {
  if (Arg6289.length < 1) return [Shen.type_func, shen_user_lambda6290, 1, Arg6289];
  var Arg6289_0 = Arg6289[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6289_0]))
  ? [Shen.type_cons, Arg6289_0, []]
  : ((Shen.is_type(Arg6289_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_vars"], [Arg6289_0[1]]), Shen.call(Shen.fns["shen.extract_vars"], [Arg6289_0[2]])]);})
  : []))}, 1, [], "shen.extract_vars"];





Shen.fns["shen.extract_free_vars"] = [Shen.type_func, function shen_user_lambda6292(Arg6291) {
  if (Arg6291.length < 2) return [Shen.type_func, shen_user_lambda6292, 2, Arg6291];
  var Arg6291_0 = Arg6291[0], Arg6291_1 = Arg6291[1];
  return (((Shen.is_type(Arg6291_1, Shen.type_cons) && (Shen.is_type(Arg6291_1[2], Shen.type_cons) && (Shen.empty$question$(Arg6291_1[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6291_1[1], [Shen.type_symbol, "protect"]))))))
  ? []
  : (((Shen.call(Shen.fns["variable?"], [Arg6291_1]) && (!Shen.call(Shen.fns["element?"], [Arg6291_1, Arg6291_0]))))
  ? [Shen.type_cons, Arg6291_1, []]
  : (((Shen.is_type(Arg6291_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg6291_1[1])) && (Shen.is_type(Arg6291_1[2], Shen.type_cons) && (Shen.is_type(Arg6291_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg6291_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6291_1[2][1], Arg6291_0], Arg6291_1[2][2][1]]);})
  : (((Shen.is_type(Arg6291_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6291_1[1])) && (Shen.is_type(Arg6291_1[2], Shen.type_cons) && (Shen.is_type(Arg6291_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6291_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6291_1[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6291_0, Arg6291_1[2][2][1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6291_1[2][1], Arg6291_0], Arg6291_1[2][2][2][1]])]);})
  : ((Shen.is_type(Arg6291_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6291_0, Arg6291_1[1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6291_0, Arg6291_1[2]])]);})
  : [])))))}, 2, [], "shen.extract_free_vars"];





Shen.fns["shen.free_variable_warnings"] = [Shen.type_func, function shen_user_lambda6294(Arg6293) {
  if (Arg6293.length < 2) return [Shen.type_func, shen_user_lambda6294, 2, Arg6293];
  var Arg6293_0 = Arg6293[0], Arg6293_1 = Arg6293[1];
  return ((Shen.empty$question$(Arg6293_1))
  ? [Shen.type_symbol, "_"]
  : (function() {
  return Shen.simple_error(("error: the following variables are free in " + Shen.call(Shen.fns["shen.app"], [Arg6293_0, (": " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.list_variables"], [Arg6293_1]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.free_variable_warnings"];





Shen.fns["shen.list_variables"] = [Shen.type_func, function shen_user_lambda6296(Arg6295) {
  if (Arg6295.length < 1) return [Shen.type_func, shen_user_lambda6296, 1, Arg6295];
  var Arg6295_0 = Arg6295[0];
  return (((Shen.is_type(Arg6295_0, Shen.type_cons) && Shen.empty$question$(Arg6295_0[2])))
  ? (Shen.str(Arg6295_0[1]) + ".")
  : ((Shen.is_type(Arg6295_0, Shen.type_cons))
  ? (Shen.str(Arg6295_0[1]) + (", " + Shen.call(Shen.fns["shen.list_variables"], [Arg6295_0[2]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.list_variables"]]);})))}, 1, [], "shen.list_variables"];





Shen.fns["shen.strip-protect"] = [Shen.type_func, function shen_user_lambda6298(Arg6297) {
  if (Arg6297.length < 1) return [Shen.type_func, shen_user_lambda6298, 1, Arg6297];
  var Arg6297_0 = Arg6297[0];
  return (((Shen.is_type(Arg6297_0, Shen.type_cons) && (Shen.is_type(Arg6297_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6297_0[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6297_0[1], [Shen.type_symbol, "protect"]))))))
  ? Arg6297_0[2][1]
  : ((Shen.is_type(Arg6297_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.strip-protect"], [Arg6297_0[1]]), Shen.call(Shen.fns["shen.strip-protect"], [Arg6297_0[2]])]
  : Arg6297_0))}, 1, [], "shen.strip-protect"];





Shen.fns["shen.linearise"] = [Shen.type_func, function shen_user_lambda6300(Arg6299) {
  if (Arg6299.length < 1) return [Shen.type_func, shen_user_lambda6300, 1, Arg6299];
  var Arg6299_0 = Arg6299[0];
  return (((Shen.is_type(Arg6299_0, Shen.type_cons) && (Shen.is_type(Arg6299_0[2], Shen.type_cons) && Shen.empty$question$(Arg6299_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Shen.call(Shen.fns["shen.flatten"], [Arg6299_0[1]]), Arg6299_0[1], Arg6299_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise"]]);}))}, 1, [], "shen.linearise"];





Shen.fns["shen.flatten"] = [Shen.type_func, function shen_user_lambda6302(Arg6301) {
  if (Arg6301.length < 1) return [Shen.type_func, shen_user_lambda6302, 1, Arg6301];
  var Arg6301_0 = Arg6301[0];
  return ((Shen.empty$question$(Arg6301_0))
  ? []
  : ((Shen.is_type(Arg6301_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.flatten"], [Arg6301_0[1]]), Shen.call(Shen.fns["shen.flatten"], [Arg6301_0[2]])]);})
  : [Shen.type_cons, Arg6301_0, []]))}, 1, [], "shen.flatten"];





Shen.fns["shen.linearise_help"] = [Shen.type_func, function shen_user_lambda6304(Arg6303) {
  if (Arg6303.length < 3) return [Shen.type_func, shen_user_lambda6304, 3, Arg6303];
  var Arg6303_0 = Arg6303[0], Arg6303_1 = Arg6303[1], Arg6303_2 = Arg6303[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6303_0))
  ? [Shen.type_cons, Arg6303_1, [Shen.type_cons, Arg6303_2, []]]
  : ((Shen.is_type(Arg6303_0, Shen.type_cons))
  ? (((Shen.call(Shen.fns["variable?"], [Arg6303_0[1]]) && Shen.call(Shen.fns["element?"], [Arg6303_0[1], Arg6303_0[2]])))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [Arg6303_0[1]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6303_0[1], [Shen.type_cons, R0, []]]], [Shen.type_cons, Arg6303_2, []]]]),
  (R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6303_0[1], R0, Arg6303_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6303_0[2], R0, R1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6303_0[2], Arg6303_1, Arg6303_2]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise_help"]]);})))}, 3, [], "shen.linearise_help"];





Shen.fns["shen.linearise_X"] = [Shen.type_func, function shen_user_lambda6306(Arg6305) {
  if (Arg6305.length < 3) return [Shen.type_func, shen_user_lambda6306, 3, Arg6305];
  var Arg6305_0 = Arg6305[0], Arg6305_1 = Arg6305[1], Arg6305_2 = Arg6305[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6305_2, Arg6305_0)))
  ? Arg6305_1
  : ((Shen.is_type(Arg6305_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6305_0, Arg6305_1, Arg6305_2[1]])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Arg6305_2[1])))
  ? [Shen.type_cons, Arg6305_2[1], Shen.call(Shen.fns["shen.linearise_X"], [Arg6305_0, Arg6305_1, Arg6305_2[2]])]
  : [Shen.type_cons, R0, Arg6305_2[2]]))
  : Arg6305_2))}, 3, [], "shen.linearise_X"];





Shen.fns["shen.aritycheck"] = [Shen.type_func, function shen_user_lambda6308(Arg6307) {
  if (Arg6307.length < 2) return [Shen.type_func, shen_user_lambda6308, 2, Arg6307];
  var Arg6307_0 = Arg6307[0], Arg6307_1 = Arg6307[1];
  return (((Shen.is_type(Arg6307_1, Shen.type_cons) && (Shen.is_type(Arg6307_1[1], Shen.type_cons) && (Shen.is_type(Arg6307_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6307_1[1][2][2]) && Shen.empty$question$(Arg6307_1[2]))))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6307_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck-name"], [Arg6307_0, Shen.call(Shen.fns["arity"], [Arg6307_0]), Shen.call(Shen.fns["length"], [Arg6307_1[1][1]])]);}))
  : (((Shen.is_type(Arg6307_1, Shen.type_cons) && (Shen.is_type(Arg6307_1[1], Shen.type_cons) && (Shen.is_type(Arg6307_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6307_1[1][2][2]) && (Shen.is_type(Arg6307_1[2], Shen.type_cons) && (Shen.is_type(Arg6307_1[2][1], Shen.type_cons) && (Shen.is_type(Arg6307_1[2][1][2], Shen.type_cons) && Shen.empty$question$(Arg6307_1[2][1][2][2])))))))))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6307_1[1][1]]), Shen.call(Shen.fns["length"], [Arg6307_1[2][1][1]]))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6307_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck"], [Arg6307_0, Arg6307_1[2]]);}))
  : (function() {
  return Shen.simple_error(("arity error in " + Shen.call(Shen.fns["shen.app"], [Arg6307_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aritycheck"]]);})))}, 2, [], "shen.aritycheck"];





Shen.fns["shen.aritycheck-name"] = [Shen.type_func, function shen_user_lambda6310(Arg6309) {
  if (Arg6309.length < 3) return [Shen.type_func, shen_user_lambda6310, 3, Arg6309];
  var Arg6309_0 = Arg6309[0], Arg6309_1 = Arg6309[1], Arg6309_2 = Arg6309[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6309_1)))
  ? Arg6309_2
  : ((Shen.unwind_tail(Shen.$eq$(Arg6309_2, Arg6309_1)))
  ? Arg6309_2
  : (Shen.call(Shen.fns["shen.prhush"], [("\x0awarning: changing the arity of " + Shen.call(Shen.fns["shen.app"], [Arg6309_0, " can cause errors.\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  Arg6309_2)))}, 3, [], "shen.aritycheck-name"];





Shen.fns["shen.aritycheck-action"] = [Shen.type_func, function shen_user_lambda6312(Arg6311) {
  if (Arg6311.length < 1) return [Shen.type_func, shen_user_lambda6312, 1, Arg6311];
  var Arg6311_0 = Arg6311[0];
  return ((Shen.is_type(Arg6311_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.aah"], [Arg6311_0[1], Arg6311_0[2]]),
  (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.aritycheck-action"], Arg6311_0]);}))
  : [Shen.type_symbol, "shen.skip"])}, 1, [], "shen.aritycheck-action"];





Shen.fns["shen.aah"] = [Shen.type_func, function shen_user_lambda6314(Arg6313) {
  if (Arg6313.length < 2) return [Shen.type_func, shen_user_lambda6314, 2, Arg6313];
  var Arg6313_0 = Arg6313[0], Arg6313_1 = Arg6313[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["arity"], [Arg6313_0])),
  (R1 = Shen.call(Shen.fns["length"], [Arg6313_1])),
  ((((R0 > -1) && (R1 > R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("warning: " + Shen.call(Shen.fns["shen.app"], [Arg6313_0, (" might not like " + Shen.call(Shen.fns["shen.app"], [R1, (" argument" + Shen.call(Shen.fns["shen.app"], [(((R1 > 1))
  ? "s"
  : ""), ".\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})
  : [Shen.type_symbol, "shen.skip"]))}, 2, [], "shen.aah"];





Shen.fns["shen.abstract_rule"] = [Shen.type_func, function shen_user_lambda6316(Arg6315) {
  if (Arg6315.length < 1) return [Shen.type_func, shen_user_lambda6316, 1, Arg6315];
  var Arg6315_0 = Arg6315[0];
  return (((Shen.is_type(Arg6315_0, Shen.type_cons) && (Shen.is_type(Arg6315_0[2], Shen.type_cons) && Shen.empty$question$(Arg6315_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.abstraction_build"], [Arg6315_0[1], Arg6315_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstract_rule"]]);}))}, 1, [], "shen.abstract_rule"];





Shen.fns["shen.abstraction_build"] = [Shen.type_func, function shen_user_lambda6318(Arg6317) {
  if (Arg6317.length < 2) return [Shen.type_func, shen_user_lambda6318, 2, Arg6317];
  var Arg6317_0 = Arg6317[0], Arg6317_1 = Arg6317[1];
  return ((Shen.empty$question$(Arg6317_0))
  ? Arg6317_1
  : ((Shen.is_type(Arg6317_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6317_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.abstraction_build"], [Arg6317_0[2], Arg6317_1]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstraction_build"]]);})))}, 2, [], "shen.abstraction_build"];





Shen.fns["shen.parameters"] = [Shen.type_func, function shen_user_lambda6320(Arg6319) {
  if (Arg6319.length < 1) return [Shen.type_func, shen_user_lambda6320, 1, Arg6319];
  var Arg6319_0 = Arg6319[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6319_0)))
  ? []
  : [Shen.type_cons, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]), Shen.call(Shen.fns["shen.parameters"], [(Arg6319_0 - 1)])])}, 1, [], "shen.parameters"];





Shen.fns["shen.application_build"] = [Shen.type_func, function shen_user_lambda6322(Arg6321) {
  if (Arg6321.length < 2) return [Shen.type_func, shen_user_lambda6322, 2, Arg6321];
  var Arg6321_0 = Arg6321[0], Arg6321_1 = Arg6321[1];
  return ((Shen.empty$question$(Arg6321_0))
  ? Arg6321_1
  : ((Shen.is_type(Arg6321_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6321_0[2], [Shen.type_cons, Arg6321_1, [Shen.type_cons, Arg6321_0[1], []]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.application_build"]]);})))}, 2, [], "shen.application_build"];





Shen.fns["shen.compile_to_kl"] = [Shen.type_func, function shen_user_lambda6324(Arg6323) {
  if (Arg6323.length < 2) return [Shen.type_func, shen_user_lambda6324, 2, Arg6323];
  var Arg6323_0 = Arg6323[0], Arg6323_1 = Arg6323[1];
  var R0;
  return (((Shen.is_type(Arg6323_1, Shen.type_cons) && (Shen.is_type(Arg6323_1[2], Shen.type_cons) && Shen.empty$question$(Arg6323_1[2][2]))))
  ? (Shen.call(Shen.fns["shen.store-arity"], [Arg6323_0, Shen.call(Shen.fns["length"], [Arg6323_1[1]])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.reduce"], Arg6323_1[2][1]])),
  (R0 = Shen.call(Shen.fns["shen.cond-expression"], [Arg6323_0, Arg6323_1[1], R0])),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg6323_0, [Shen.type_cons, Arg6323_1[1], [Shen.type_cons, R0, []]]]]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compile_to_kl"]]);}))}, 2, [], "shen.compile_to_kl"];





Shen.fns["shen.store-arity"] = [Shen.type_func, function shen_user_lambda6326(Arg6325) {
  if (Arg6325.length < 2) return [Shen.type_func, shen_user_lambda6326, 2, Arg6325];
  var Arg6325_0 = Arg6325[0], Arg6325_1 = Arg6325[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6325_0, [Shen.type_symbol, "arity"], Arg6325_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.store-arity"];





Shen.fns["shen.reduce"] = [Shen.type_func, function shen_user_lambda6328(Arg6327) {
  if (Arg6327.length < 1) return [Shen.type_func, shen_user_lambda6328, 1, Arg6327];
  var Arg6327_0 = Arg6327[0];
  var R0;
  return ((Shen.globals["shen.*teststack*"] = []),
  (R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6327_0])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "shen.tests"], Shen.call(Shen.fns["reverse"], [(Shen.globals["shen.*teststack*"])])]], [Shen.type_cons, R0, []]])}, 1, [], "shen.reduce"];





Shen.fns["shen.reduce_help"] = [Shen.type_func, function shen_user_lambda6330(Arg6329) {
  if (Arg6329.length < 1) return [Shen.type_func, shen_user_lambda6330, 1, Arg6329];
  var Arg6329_0 = Arg6329[0];
  var R0;
  return (((Shen.is_type(Arg6329_0, Shen.type_cons) && (Shen.is_type(Arg6329_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6329_0[1][1])) && (Shen.is_type(Arg6329_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6329_0[1][2][1][1])) && (Shen.is_type(Arg6329_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6329_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][2][2]) && (Shen.is_type(Arg6329_0[2], Shen.type_cons) && Shen.empty$question$(Arg6329_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "cons?"], Arg6329_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6329_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6329_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6329_0[2][1], Arg6329_0[1][2][1], Arg6329_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6329_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6329_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6329_0, Shen.type_cons) && (Shen.is_type(Arg6329_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6329_0[1][1])) && (Shen.is_type(Arg6329_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg6329_0[1][2][1][1])) && (Shen.is_type(Arg6329_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6329_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][2][2]) && (Shen.is_type(Arg6329_0[2], Shen.type_cons) && Shen.empty$question$(Arg6329_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "tuple?"], Arg6329_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6329_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6329_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6329_0[2][1], Arg6329_0[1][2][1], Arg6329_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], Arg6329_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], Arg6329_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6329_0, Shen.type_cons) && (Shen.is_type(Arg6329_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6329_0[1][1])) && (Shen.is_type(Arg6329_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Arg6329_0[1][2][1][1])) && (Shen.is_type(Arg6329_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6329_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][2][2]) && (Shen.is_type(Arg6329_0[2], Shen.type_cons) && Shen.empty$question$(Arg6329_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+vector?"], Arg6329_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6329_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6329_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6329_0[2][1], Arg6329_0[1][2][1], Arg6329_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hdv"], Arg6329_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlv"], Arg6329_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6329_0, Shen.type_cons) && (Shen.is_type(Arg6329_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6329_0[1][1])) && (Shen.is_type(Arg6329_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6329_0[1][2][1][1])) && (Shen.is_type(Arg6329_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6329_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][2][2]) && (Shen.is_type(Arg6329_0[2], Shen.type_cons) && Shen.empty$question$(Arg6329_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+string?"], Arg6329_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6329_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6329_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6329_0[2][1], Arg6329_0[1][2][1], Arg6329_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, Arg6329_0[2][1], [Shen.type_cons, 0, []]]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlstr"], Arg6329_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6329_0, Shen.type_cons) && (Shen.is_type(Arg6329_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6329_0[1][1])) && (Shen.is_type(Arg6329_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][2][2]) && (Shen.is_type(Arg6329_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[2][2]) && (!Shen.call(Shen.fns["variable?"], [Arg6329_0[1][2][1]])))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6329_0[1][2][1], Arg6329_0[2]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6329_0[1][2][2][1]]);}))
  : (((Shen.is_type(Arg6329_0, Shen.type_cons) && (Shen.is_type(Arg6329_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6329_0[1][1])) && (Shen.is_type(Arg6329_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6329_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6329_0[1][2][2][2]) && (Shen.is_type(Arg6329_0[2], Shen.type_cons) && Shen.empty$question$(Arg6329_0[2][2])))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Shen.call(Shen.fns["shen.ebr"], [Arg6329_0[2][1], Arg6329_0[1][2][1], Arg6329_0[1][2][2][1]])]);})
  : (((Shen.is_type(Arg6329_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6329_0[1])) && (Shen.is_type(Arg6329_0[2], Shen.type_cons) && (Shen.is_type(Arg6329_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6329_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [Arg6329_0[2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6329_0[2][2][1]]);}))
  : (((Shen.is_type(Arg6329_0, Shen.type_cons) && (Shen.is_type(Arg6329_0[2], Shen.type_cons) && Shen.empty$question$(Arg6329_0[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6329_0[1]])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6329_0[1], R0)))
  ? Arg6329_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [[Shen.type_cons, R0, Arg6329_0[2]]]);})))
  : Arg6329_0))))))))}, 1, [], "shen.reduce_help"];





Shen.fns["shen.+string?"] = [Shen.type_func, function shen_user_lambda6332(Arg6331) {
  if (Arg6331.length < 1) return [Shen.type_func, shen_user_lambda6332, 1, Arg6331];
  var Arg6331_0 = Arg6331[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6331_0)))
  ? false
  : (typeof(Arg6331_0) == 'string'))}, 1, [], "shen.+string?"];





Shen.fns["shen.+vector"] = [Shen.type_func, function shen_user_lambda6334(Arg6333) {
  if (Arg6333.length < 1) return [Shen.type_func, shen_user_lambda6334, 1, Arg6333];
  var Arg6333_0 = Arg6333[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6333_0, Shen.vector(0))))
  ? false
  : (function() {
  return Shen.vector$question$(Arg6333_0);}))}, 1, [], "shen.+vector"];





Shen.fns["shen.ebr"] = [Shen.type_func, function shen_user_lambda6336(Arg6335) {
  if (Arg6335.length < 3) return [Shen.type_func, shen_user_lambda6336, 3, Arg6335];
  var Arg6335_0 = Arg6335[0], Arg6335_1 = Arg6335[1], Arg6335_2 = Arg6335[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6335_2, Arg6335_1)))
  ? Arg6335_0
  : (((Shen.is_type(Arg6335_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6335_2[1])) && (Shen.is_type(Arg6335_2[2], Shen.type_cons) && (Shen.is_type(Arg6335_2[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6335_2[2][2][2]) && (Shen.call(Shen.fns["occurrences"], [Arg6335_1, Arg6335_2[2][1]]) > 0)))))))
  ? Arg6335_2
  : (((Shen.is_type(Arg6335_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6335_2[1])) && (Shen.is_type(Arg6335_2[2], Shen.type_cons) && (Shen.is_type(Arg6335_2[2][2], Shen.type_cons) && (Shen.is_type(Arg6335_2[2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6335_2[2][2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6335_2[2][1], Arg6335_1)))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6335_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6335_0, Arg6335_2[2][1], Arg6335_2[2][2][1]]), Arg6335_2[2][2][2]]]]
  : ((Shen.is_type(Arg6335_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6335_0, Arg6335_1, Arg6335_2[1]]), Shen.call(Shen.fns["shen.ebr"], [Arg6335_0, Arg6335_1, Arg6335_2[2]])]
  : Arg6335_2))))}, 3, [], "shen.ebr"];





Shen.fns["shen.add_test"] = [Shen.type_func, function shen_user_lambda6338(Arg6337) {
  if (Arg6337.length < 1) return [Shen.type_func, shen_user_lambda6338, 1, Arg6337];
  var Arg6337_0 = Arg6337[0];
  return (Shen.globals["shen.*teststack*"] = [Shen.type_cons, Arg6337_0, (Shen.globals["shen.*teststack*"])])}, 1, [], "shen.add_test"];





Shen.fns["shen.cond-expression"] = [Shen.type_func, function shen_user_lambda6340(Arg6339) {
  if (Arg6339.length < 3) return [Shen.type_func, shen_user_lambda6340, 3, Arg6339];
  var Arg6339_0 = Arg6339[0], Arg6339_1 = Arg6339[1], Arg6339_2 = Arg6339[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.err-condition"], [Arg6339_0])),
  (R0 = Shen.call(Shen.fns["shen.case-form"], [Arg6339_2, R0])),
  (R0 = Shen.call(Shen.fns["shen.encode-choices"], [R0, Arg6339_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cond-form"], [R0]);}))}, 3, [], "shen.cond-expression"];





Shen.fns["shen.cond-form"] = [Shen.type_func, function shen_user_lambda6342(Arg6341) {
  if (Arg6341.length < 1) return [Shen.type_func, shen_user_lambda6342, 1, Arg6341];
  var Arg6341_0 = Arg6341[0];
  return (((Shen.is_type(Arg6341_0, Shen.type_cons) && (Shen.is_type(Arg6341_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6341_0[1][1])) && (Shen.is_type(Arg6341_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6341_0[1][2][2]))))))
  ? Arg6341_0[1][2][1]
  : [Shen.type_cons, [Shen.type_symbol, "cond"], Arg6341_0])}, 1, [], "shen.cond-form"];





Shen.fns["shen.encode-choices"] = [Shen.type_func, function shen_user_lambda6344(Arg6343) {
  if (Arg6343.length < 2) return [Shen.type_func, shen_user_lambda6344, 2, Arg6343];
  var Arg6343_0 = Arg6343[0], Arg6343_1 = Arg6343[1];
  return ((Shen.empty$question$(Arg6343_0))
  ? []
  : (((Shen.is_type(Arg6343_0, Shen.type_cons) && (Shen.is_type(Arg6343_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6343_0[1][1])) && (Shen.is_type(Arg6343_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6343_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6343_0[1][2][1][1])) && (Shen.is_type(Arg6343_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6343_0[1][2][1][2][2]) && (Shen.empty$question$(Arg6343_0[1][2][2]) && Shen.empty$question$(Arg6343_0[2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6343_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.sys-error"], [Shen.type_cons, Arg6343_1, []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6343_1, []]]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6343_0, Shen.type_cons) && (Shen.is_type(Arg6343_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6343_0[1][1])) && (Shen.is_type(Arg6343_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6343_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6343_0[1][2][1][1])) && (Shen.is_type(Arg6343_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6343_0[1][2][1][2][2]) && Shen.empty$question$(Arg6343_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6343_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6343_0[2], Arg6343_1])]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6343_0, Shen.type_cons) && (Shen.is_type(Arg6343_0[1], Shen.type_cons) && (Shen.is_type(Arg6343_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6343_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6343_0[1][2][1][1])) && (Shen.is_type(Arg6343_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6343_0[1][2][1][2][2]) && Shen.empty$question$(Arg6343_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6343_0[2], Arg6343_1])]), []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6343_0[1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6343_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6343_0, Shen.type_cons) && (Shen.is_type(Arg6343_0[1], Shen.type_cons) && (Shen.is_type(Arg6343_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6343_0[1][2][2])))))
  ? [Shen.type_cons, Arg6343_0[1], Shen.call(Shen.fns["shen.encode-choices"], [Arg6343_0[2], Arg6343_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.encode-choices"]]);}))))))}, 2, [], "shen.encode-choices"];





Shen.fns["shen.case-form"] = [Shen.type_func, function shen_user_lambda6346(Arg6345) {
  if (Arg6345.length < 2) return [Shen.type_func, shen_user_lambda6346, 2, Arg6345];
  var Arg6345_0 = Arg6345[0], Arg6345_1 = Arg6345[1];
  return ((Shen.empty$question$(Arg6345_0))
  ? [Shen.type_cons, Arg6345_1, []]
  : (((Shen.is_type(Arg6345_0, Shen.type_cons) && (Shen.is_type(Arg6345_0[1], Shen.type_cons) && (Shen.is_type(Arg6345_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6345_0[1][1][1])) && (Shen.is_type(Arg6345_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6345_0[1][1][2][1])) && (Shen.empty$question$(Arg6345_0[1][1][2][2]) && (Shen.is_type(Arg6345_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6345_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6345_0[1][2][1][1])) && (Shen.is_type(Arg6345_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6345_0[1][2][1][2][2]) && Shen.empty$question$(Arg6345_0[1][2][2]))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6345_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6345_0[2], Arg6345_1])]
  : (((Shen.is_type(Arg6345_0, Shen.type_cons) && (Shen.is_type(Arg6345_0[1], Shen.type_cons) && (Shen.is_type(Arg6345_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6345_0[1][1][1])) && (Shen.is_type(Arg6345_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6345_0[1][1][2][1])) && (Shen.empty$question$(Arg6345_0[1][1][2][2]) && (Shen.is_type(Arg6345_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6345_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6345_0[1][2]], []]
  : (((Shen.is_type(Arg6345_0, Shen.type_cons) && (Shen.is_type(Arg6345_0[1], Shen.type_cons) && (Shen.is_type(Arg6345_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6345_0[1][1][1])) && (Shen.is_type(Arg6345_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6345_0[1][1][2][1])) && (Shen.is_type(Arg6345_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6345_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6345_0[1][1][2][2]]), Arg6345_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6345_0[2], Arg6345_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.case-form"]]);})))))}, 2, [], "shen.case-form"];





Shen.fns["shen.embed-and"] = [Shen.type_func, function shen_user_lambda6348(Arg6347) {
  if (Arg6347.length < 1) return [Shen.type_func, shen_user_lambda6348, 1, Arg6347];
  var Arg6347_0 = Arg6347[0];
  return (((Shen.is_type(Arg6347_0, Shen.type_cons) && Shen.empty$question$(Arg6347_0[2])))
  ? Arg6347_0[1]
  : ((Shen.is_type(Arg6347_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, Arg6347_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6347_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.embed-and"]]);})))}, 1, [], "shen.embed-and"];





Shen.fns["shen.err-condition"] = [Shen.type_func, function shen_user_lambda6350(Arg6349) {
  if (Arg6349.length < 1) return [Shen.type_func, shen_user_lambda6350, 1, Arg6349];
  var Arg6349_0 = Arg6349[0];
  return [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6349_0, []]], []]]}, 1, [], "shen.err-condition"];





Shen.fns["shen.sys-error"] = [Shen.type_func, function shen_user_lambda6352(Arg6351) {
  if (Arg6351.length < 1) return [Shen.type_func, shen_user_lambda6352, 1, Arg6351];
  var Arg6351_0 = Arg6351[0];
  return (function() {
  return Shen.simple_error(("system function " + Shen.call(Shen.fns["shen.app"], [Arg6351_0, ": unexpected argument\x0a", [Shen.type_symbol, "shen.a"]])));})}, 1, [], "shen.sys-error"];















Shen.fns["eval"] = [Shen.type_func, function shen_user_lambda7019(Arg7018) {
  if (Arg7018.length < 1) return [Shen.type_func, shen_user_lambda7019, 1, Arg7018];
  var Arg7018_0 = Arg7018[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda7021(Arg7020) {
  if (Arg7020.length < 1) return [Shen.type_func, shen_user_lambda7021, 1, Arg7020];
  var Arg7020_0 = Arg7020[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg7020_0]);})}, 1, [], undefined], Arg7018_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.eval-without-macros"], Shen.call(Shen.fns["shen.package-contents"], [R0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.eval-without-macros"], [R0]);})))}, 1, [], "eval"];





Shen.fns["shen.eval-without-macros"] = [Shen.type_func, function shen_user_lambda7023(Arg7022) {
  if (Arg7022.length < 1) return [Shen.type_func, shen_user_lambda7023, 1, Arg7022];
  var Arg7022_0 = Arg7022[0];
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["shen.elim-define"], [Shen.call(Shen.fns["shen.proc-input+"], [Arg7022_0])]));})}, 1, [], "shen.eval-without-macros"];





Shen.fns["shen.proc-input+"] = [Shen.type_func, function shen_user_lambda7025(Arg7024) {
  if (Arg7024.length < 1) return [Shen.type_func, shen_user_lambda7025, 1, Arg7024];
  var Arg7024_0 = Arg7024[0];
  return (((Shen.is_type(Arg7024_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg7024_0[1])) && (Shen.is_type(Arg7024_0[2], Shen.type_cons) && (Shen.is_type(Arg7024_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7024_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Arg7024_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7024_0[2][2][1]]), []]]]
  : ((Shen.is_type(Arg7024_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.proc-input+"], Arg7024_0]);})
  : Arg7024_0))}, 1, [], "shen.proc-input+"];





Shen.fns["shen.elim-define"] = [Shen.type_func, function shen_user_lambda7027(Arg7026) {
  if (Arg7026.length < 1) return [Shen.type_func, shen_user_lambda7027, 1, Arg7026];
  var Arg7026_0 = Arg7026[0];
  return (((Shen.is_type(Arg7026_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg7026_0[1])) && Shen.is_type(Arg7026_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.shen->kl"], [Arg7026_0[2][1], Arg7026_0[2][2]]);})
  : (((Shen.is_type(Arg7026_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7026_0[1])) && Shen.is_type(Arg7026_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.elim-define"], [Shen.call(Shen.fns["shen.yacc"], [Arg7026_0])]);})
  : ((Shen.is_type(Arg7026_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.elim-define"], Arg7026_0]);})
  : Arg7026_0)))}, 1, [], "shen.elim-define"];





Shen.fns["shen.packaged?"] = [Shen.type_func, function shen_user_lambda7029(Arg7028) {
  if (Arg7028.length < 1) return [Shen.type_func, shen_user_lambda7029, 1, Arg7028];
  var Arg7028_0 = Arg7028[0];
  return (((Shen.is_type(Arg7028_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7028_0[1])) && (Shen.is_type(Arg7028_0[2], Shen.type_cons) && Shen.is_type(Arg7028_0[2][2], Shen.type_cons)))))
  ? true
  : false)}, 1, [], "shen.packaged?"];





Shen.fns["external"] = [Shen.type_func, function shen_user_lambda7031(Arg7030) {
  if (Arg7030.length < 1) return [Shen.type_func, shen_user_lambda7031, 1, Arg7030];
  var Arg7030_0 = Arg7030[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7030_0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7033(Arg7032) {
  if (Arg7032.length < 2) return [Shen.type_func, shen_user_lambda7033, 2, Arg7032];
  var Arg7032_0 = Arg7032[0], Arg7032_1 = Arg7032[1];
  return (function() {
  return Shen.simple_error(("package " + Shen.call(Shen.fns["shen.app"], [Arg7032_0, " has not been used.\x0a", [Shen.type_symbol, "shen.a"]])));})}, 2, [Arg7030_0], undefined]);})}, 1, [], "external"];





Shen.fns["shen.package-contents"] = [Shen.type_func, function shen_user_lambda7035(Arg7034) {
  if (Arg7034.length < 1) return [Shen.type_func, shen_user_lambda7035, 1, Arg7034];
  var Arg7034_0 = Arg7034[0];
  return (((Shen.is_type(Arg7034_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7034_0[1])) && (Shen.is_type(Arg7034_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg7034_0[2][1])) && Shen.is_type(Arg7034_0[2][2], Shen.type_cons))))))
  ? Arg7034_0[2][2][2]
  : (((Shen.is_type(Arg7034_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7034_0[1])) && (Shen.is_type(Arg7034_0[2], Shen.type_cons) && Shen.is_type(Arg7034_0[2][2], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.packageh"], [Arg7034_0[2][1], Arg7034_0[2][2][1], Arg7034_0[2][2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.package-contents"]]);})))}, 1, [], "shen.package-contents"];





Shen.fns["shen.walk"] = [Shen.type_func, function shen_user_lambda7037(Arg7036) {
  if (Arg7036.length < 2) return [Shen.type_func, shen_user_lambda7037, 2, Arg7036];
  var Arg7036_0 = Arg7036[0], Arg7036_1 = Arg7036[1];
  return ((Shen.is_type(Arg7036_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Arg7036_0, [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7039(Arg7038) {
  if (Arg7038.length < 2) return [Shen.type_func, shen_user_lambda7039, 2, Arg7038];
  var Arg7038_0 = Arg7038[0], Arg7038_1 = Arg7038[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [Arg7038_0, Arg7038_1]);})}, 2, [Arg7036_0], undefined], Arg7036_1])]);})
  : (function() {
  return Shen.call_tail(Arg7036_0, [Arg7036_1]);}))}, 2, [], "shen.walk"];





Shen.fns["compile"] = [Shen.type_func, function shen_user_lambda7041(Arg7040) {
  if (Arg7040.length < 3) return [Shen.type_func, shen_user_lambda7041, 3, Arg7040];
  var Arg7040_0 = Arg7040[0], Arg7040_1 = Arg7040[1], Arg7040_2 = Arg7040[2];
  var R0;
  return ((R0 = Shen.call(Arg7040_0, [[Shen.type_cons, Arg7040_1, [Shen.type_cons, [], []]]])),
  (((Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0)) || (!Shen.empty$question$(R0[1]))))
  ? (function() {
  return Shen.call_tail(Arg7040_2, [R0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.hdtl"], [R0]);})))}, 3, [], "compile"];





Shen.fns["fail-if"] = [Shen.type_func, function shen_user_lambda7043(Arg7042) {
  if (Arg7042.length < 2) return [Shen.type_func, shen_user_lambda7043, 2, Arg7042];
  var Arg7042_0 = Arg7042[0], Arg7042_1 = Arg7042[1];
  return ((Shen.call(Arg7042_0, [Arg7042_1]))
  ? Shen.fail_obj
  : Arg7042_1)}, 2, [], "fail-if"];





Shen.fns["@s"] = [Shen.type_func, function shen_user_lambda7045(Arg7044) {
  if (Arg7044.length < 2) return [Shen.type_func, shen_user_lambda7045, 2, Arg7044];
  var Arg7044_0 = Arg7044[0], Arg7044_1 = Arg7044[1];
  return (Arg7044_0 + Arg7044_1)}, 2, [], "@s"];





Shen.fns["tc?"] = [Shen.type_func, function shen_user_lambda7047(Arg7046) {
  if (Arg7046.length < 1) return [Shen.type_func, shen_user_lambda7047, 1, Arg7046];
  var Arg7046_0 = Arg7046[0];
  return (Shen.globals["shen.*tc*"])}, 1, [], "tc?"];





Shen.fns["ps"] = [Shen.type_func, function shen_user_lambda7049(Arg7048) {
  if (Arg7048.length < 1) return [Shen.type_func, shen_user_lambda7049, 1, Arg7048];
  var Arg7048_0 = Arg7048[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7048_0, [Shen.type_symbol, "shen.source"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7051(Arg7050) {
  if (Arg7050.length < 2) return [Shen.type_func, shen_user_lambda7051, 2, Arg7050];
  var Arg7050_0 = Arg7050[0], Arg7050_1 = Arg7050[1];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7050_0, " not found.\x0a", [Shen.type_symbol, "shen.a"]]));})}, 2, [Arg7048_0], undefined]);})}, 1, [], "ps"];





Shen.fns["stinput"] = [Shen.type_func, function shen_user_lambda7053(Arg7052) {
  if (Arg7052.length < 0) return [Shen.type_func, shen_user_lambda7053, 0, Arg7052];
  return (Shen.globals["*stinput*"])}, 0, [], "stinput"];





Shen.fns["shen.+vector?"] = [Shen.type_func, function shen_user_lambda7055(Arg7054) {
  if (Arg7054.length < 1) return [Shen.type_func, shen_user_lambda7055, 1, Arg7054];
  var Arg7054_0 = Arg7054[0];
  return (Shen.absvector$question$(Arg7054_0) && (Shen.absvector_ref(Arg7054_0, 0) > 0))}, 1, [], "shen.+vector?"];










Shen.fns["shen.fillvector"] = [Shen.type_func, function shen_user_lambda7058(Arg7057) {
  if (Arg7057.length < 4) return [Shen.type_func, shen_user_lambda7058, 4, Arg7057];
  var Arg7057_0 = Arg7057[0], Arg7057_1 = Arg7057[1], Arg7057_2 = Arg7057[2], Arg7057_3 = Arg7057[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7057_2, Arg7057_1)))
  ? Shen.absvector_set(Arg7057_0, Arg7057_2, Arg7057_3)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fillvector"], [Shen.absvector_set(Arg7057_0, Arg7057_1, Arg7057_3), (1 + Arg7057_1), Arg7057_2, Arg7057_3]);}))}, 4, [], "shen.fillvector"];










Shen.fns["vector->"] = [Shen.type_func, function shen_user_lambda7061(Arg7060) {
  if (Arg7060.length < 3) return [Shen.type_func, shen_user_lambda7061, 3, Arg7060];
  var Arg7060_0 = Arg7060[0], Arg7060_1 = Arg7060[1], Arg7060_2 = Arg7060[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7060_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : Shen.absvector_set(Arg7060_0, Arg7060_1, Arg7060_2))}, 3, [], "vector->"];





Shen.fns["<-vector"] = [Shen.type_func, function shen_user_lambda7063(Arg7062) {
  if (Arg7062.length < 2) return [Shen.type_func, shen_user_lambda7063, 2, Arg7062];
  var Arg7062_0 = Arg7062[0], Arg7062_1 = Arg7062[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7062_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : ((R0 = Shen.absvector_ref(Arg7062_0, Arg7062_1)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error("vector element not found\x0a");})
  : R0)))}, 2, [], "<-vector"];





Shen.fns["shen.posint?"] = [Shen.type_func, function shen_user_lambda7065(Arg7064) {
  if (Arg7064.length < 1) return [Shen.type_func, shen_user_lambda7065, 1, Arg7064];
  var Arg7064_0 = Arg7064[0];
  return (Shen.call(Shen.fns["integer?"], [Arg7064_0]) && (Arg7064_0 >= 0))}, 1, [], "shen.posint?"];





Shen.fns["limit"] = [Shen.type_func, function shen_user_lambda7067(Arg7066) {
  if (Arg7066.length < 1) return [Shen.type_func, shen_user_lambda7067, 1, Arg7066];
  var Arg7066_0 = Arg7066[0];
  return Shen.absvector_ref(Arg7066_0, 0)}, 1, [], "limit"];










Shen.fns["shen.analyse-symbol?"] = [Shen.type_func, function shen_user_lambda7070(Arg7069) {
  if (Arg7069.length < 1) return [Shen.type_func, shen_user_lambda7070, 1, Arg7069];
  var Arg7069_0 = Arg7069[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7069_0]))
  ? (Shen.call(Shen.fns["shen.alpha?"], [Arg7069_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7069_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-symbol?"]]);}))}, 1, [], "shen.analyse-symbol?"];





Shen.fns["shen.alpha?"] = [Shen.type_func, function shen_user_lambda7072(Arg7071) {
  if (Arg7071.length < 1) return [Shen.type_func, shen_user_lambda7072, 1, Arg7071];
  var Arg7071_0 = Arg7071[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7071_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", [Shen.type_cons, "a", [Shen.type_cons, "b", [Shen.type_cons, "c", [Shen.type_cons, "d", [Shen.type_cons, "e", [Shen.type_cons, "f", [Shen.type_cons, "g", [Shen.type_cons, "h", [Shen.type_cons, "i", [Shen.type_cons, "j", [Shen.type_cons, "k", [Shen.type_cons, "l", [Shen.type_cons, "m", [Shen.type_cons, "n", [Shen.type_cons, "o", [Shen.type_cons, "p", [Shen.type_cons, "q", [Shen.type_cons, "r", [Shen.type_cons, "s", [Shen.type_cons, "t", [Shen.type_cons, "u", [Shen.type_cons, "v", [Shen.type_cons, "w", [Shen.type_cons, "x", [Shen.type_cons, "y", [Shen.type_cons, "z", [Shen.type_cons, "=", [Shen.type_cons, "*", [Shen.type_cons, "/", [Shen.type_cons, "+", [Shen.type_cons, "-", [Shen.type_cons, "_", [Shen.type_cons, "?", [Shen.type_cons, "$", [Shen.type_cons, "!", [Shen.type_cons, "@", [Shen.type_cons, "~", [Shen.type_cons, ">", [Shen.type_cons, "<", [Shen.type_cons, "&", [Shen.type_cons, "%", [Shen.type_cons, "{", [Shen.type_cons, "}", [Shen.type_cons, ":", [Shen.type_cons, ";", [Shen.type_cons, "`", [Shen.type_cons, "#", [Shen.type_cons, "'", [Shen.type_cons, ".", []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.alpha?"];





Shen.fns["shen.alphanums?"] = [Shen.type_func, function shen_user_lambda7074(Arg7073) {
  if (Arg7073.length < 1) return [Shen.type_func, shen_user_lambda7074, 1, Arg7073];
  var Arg7073_0 = Arg7073[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7073_0)))
  ? true
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7073_0]))
  ? (Shen.call(Shen.fns["shen.alphanum?"], [Arg7073_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7073_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.alphanums?"]]);})))}, 1, [], "shen.alphanums?"];





Shen.fns["shen.alphanum?"] = [Shen.type_func, function shen_user_lambda7076(Arg7075) {
  if (Arg7075.length < 1) return [Shen.type_func, shen_user_lambda7076, 1, Arg7075];
  var Arg7075_0 = Arg7075[0];
  return (Shen.call(Shen.fns["shen.alpha?"], [Arg7075_0]) || Shen.call(Shen.fns["shen.digit?"], [Arg7075_0]))}, 1, [], "shen.alphanum?"];





Shen.fns["shen.digit?"] = [Shen.type_func, function shen_user_lambda7078(Arg7077) {
  if (Arg7077.length < 1) return [Shen.type_func, shen_user_lambda7078, 1, Arg7077];
  var Arg7077_0 = Arg7077[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7077_0, [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]);})}, 1, [], "shen.digit?"];





Shen.fns["variable?"] = [Shen.type_func, function shen_user_lambda7080(Arg7079) {
  if (Arg7079.length < 1) return [Shen.type_func, shen_user_lambda7080, 1, Arg7079];
  var Arg7079_0 = Arg7079[0];
  var R0;
  return (((Shen.boolean$question$(Arg7079_0) || ((typeof(Arg7079_0) == 'number') || (typeof(Arg7079_0) == 'string'))))
  ? false
  : (function() {
  return Shen.trap_error(function() {return ((R0 = Shen.str(Arg7079_0)),
  Shen.call(Shen.fns["shen.analyse-variable?"], [R0]));}, [Shen.type_func, function shen_user_lambda7082(Arg7081) {
  if (Arg7081.length < 1) return [Shen.type_func, shen_user_lambda7082, 1, Arg7081];
  var Arg7081_0 = Arg7081[0];
  return false}, 1, [], undefined]);}))}, 1, [], "variable?"];





Shen.fns["shen.analyse-variable?"] = [Shen.type_func, function shen_user_lambda7084(Arg7083) {
  if (Arg7083.length < 1) return [Shen.type_func, shen_user_lambda7084, 1, Arg7083];
  var Arg7083_0 = Arg7083[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7083_0]))
  ? (Shen.call(Shen.fns["shen.uppercase?"], [Arg7083_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7083_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-variable?"]]);}))}, 1, [], "shen.analyse-variable?"];





Shen.fns["shen.uppercase?"] = [Shen.type_func, function shen_user_lambda7086(Arg7085) {
  if (Arg7085.length < 1) return [Shen.type_func, shen_user_lambda7086, 1, Arg7085];
  var Arg7085_0 = Arg7085[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7085_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", []]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.uppercase?"];





Shen.fns["gensym"] = [Shen.type_func, function shen_user_lambda7088(Arg7087) {
  if (Arg7087.length < 1) return [Shen.type_func, shen_user_lambda7088, 1, Arg7087];
  var Arg7087_0 = Arg7087[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg7087_0, (Shen.globals["shen.*gensym*"] = (1 + (Shen.globals["shen.*gensym*"])))]);})}, 1, [], "gensym"];





Shen.fns["concat"] = [Shen.type_func, function shen_user_lambda7090(Arg7089) {
  if (Arg7089.length < 2) return [Shen.type_func, shen_user_lambda7090, 2, Arg7089];
  var Arg7089_0 = Arg7089[0], Arg7089_1 = Arg7089[1];
  return (function() {
  return Shen.intern((Shen.str(Arg7089_0) + Shen.str(Arg7089_1)));})}, 2, [], "concat"];










Shen.fns["fst"] = [Shen.type_func, function shen_user_lambda7093(Arg7092) {
  if (Arg7092.length < 1) return [Shen.type_func, shen_user_lambda7093, 1, Arg7092];
  var Arg7092_0 = Arg7092[0];
  return Shen.absvector_ref(Arg7092_0, 1)}, 1, [], "fst"];





Shen.fns["snd"] = [Shen.type_func, function shen_user_lambda7095(Arg7094) {
  if (Arg7094.length < 1) return [Shen.type_func, shen_user_lambda7095, 1, Arg7094];
  var Arg7094_0 = Arg7094[0];
  return Shen.absvector_ref(Arg7094_0, 2)}, 1, [], "snd"];





Shen.fns["tuple?"] = [Shen.type_func, function shen_user_lambda7097(Arg7096) {
  if (Arg7096.length < 1) return [Shen.type_func, shen_user_lambda7097, 1, Arg7096];
  var Arg7096_0 = Arg7096[0];
  return (function() {
  return Shen.trap_error(function() {return (Shen.absvector$question$(Arg7096_0) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tuple"], Shen.absvector_ref(Arg7096_0, 0))));}, [Shen.type_func, function shen_user_lambda7099(Arg7098) {
  if (Arg7098.length < 1) return [Shen.type_func, shen_user_lambda7099, 1, Arg7098];
  var Arg7098_0 = Arg7098[0];
  return false}, 1, [], undefined]);})}, 1, [], "tuple?"];





Shen.fns["append"] = [Shen.type_func, function shen_user_lambda7101(Arg7100) {
  if (Arg7100.length < 2) return [Shen.type_func, shen_user_lambda7101, 2, Arg7100];
  var Arg7100_0 = Arg7100[0], Arg7100_1 = Arg7100[1];
  return ((Shen.empty$question$(Arg7100_0))
  ? Arg7100_1
  : ((Shen.is_type(Arg7100_0, Shen.type_cons))
  ? [Shen.type_cons, Arg7100_0[1], Shen.call(Shen.fns["append"], [Arg7100_0[2], Arg7100_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "append"]]);})))}, 2, [], "append"];





Shen.fns["@v"] = [Shen.type_func, function shen_user_lambda7103(Arg7102) {
  if (Arg7102.length < 2) return [Shen.type_func, shen_user_lambda7103, 2, Arg7102];
  var Arg7102_0 = Arg7102[0], Arg7102_1 = Arg7102[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7102_1])),
  (R1 = Shen.vector((R0 + 1))),
  (R1 = Shen.call(Shen.fns["vector->"], [R1, 1, Arg7102_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? R1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7102_1, 1, R0, R1]);})))}, 2, [], "@v"];





Shen.fns["shen.@v-help"] = [Shen.type_func, function shen_user_lambda7105(Arg7104) {
  if (Arg7104.length < 4) return [Shen.type_func, shen_user_lambda7105, 4, Arg7104];
  var Arg7104_0 = Arg7104[0], Arg7104_1 = Arg7104[1], Arg7104_2 = Arg7104[2], Arg7104_3 = Arg7104[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7104_2, Arg7104_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7104_0, Arg7104_3, Arg7104_2, (Arg7104_2 + 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7104_0, (Arg7104_1 + 1), Arg7104_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7104_0, Arg7104_3, Arg7104_1, (Arg7104_1 + 1)])]);}))}, 4, [], "shen.@v-help"];





Shen.fns["shen.copyfromvector"] = [Shen.type_func, function shen_user_lambda7107(Arg7106) {
  if (Arg7106.length < 4) return [Shen.type_func, shen_user_lambda7107, 4, Arg7106];
  var Arg7106_0 = Arg7106[0], Arg7106_1 = Arg7106[1], Arg7106_2 = Arg7106[2], Arg7106_3 = Arg7106[3];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["vector->"], [Arg7106_1, Arg7106_3, Shen.call(Shen.fns["<-vector"], [Arg7106_0, Arg7106_2])]);}, [Shen.type_func, function shen_user_lambda7109(Arg7108) {
  if (Arg7108.length < 2) return [Shen.type_func, shen_user_lambda7109, 2, Arg7108];
  var Arg7108_0 = Arg7108[0], Arg7108_1 = Arg7108[1];
  return Arg7108_0}, 2, [Arg7106_1], undefined]);})}, 4, [], "shen.copyfromvector"];





Shen.fns["hdv"] = [Shen.type_func, function shen_user_lambda7111(Arg7110) {
  if (Arg7110.length < 1) return [Shen.type_func, shen_user_lambda7111, 1, Arg7110];
  var Arg7110_0 = Arg7110[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7110_0, 1]);}, [Shen.type_func, function shen_user_lambda7113(Arg7112) {
  if (Arg7112.length < 2) return [Shen.type_func, shen_user_lambda7113, 2, Arg7112];
  var Arg7112_0 = Arg7112[0], Arg7112_1 = Arg7112[1];
  return (function() {
  return Shen.simple_error(("hdv needs a non-empty vector as an argument; not " + Shen.call(Shen.fns["shen.app"], [Arg7112_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})}, 2, [Arg7110_0], undefined]);})}, 1, [], "hdv"];





Shen.fns["tlv"] = [Shen.type_func, function shen_user_lambda7115(Arg7114) {
  if (Arg7114.length < 1) return [Shen.type_func, shen_user_lambda7115, 1, Arg7114];
  var Arg7114_0 = Arg7114[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7114_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? (function() {
  return Shen.simple_error("cannot take the tail of the empty vector\x0a");})
  : ((Shen.unwind_tail(Shen.$eq$(R0, 1)))
  ? (function() {
  return Shen.vector(0);})
  : (Shen.vector((R0 - 1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7114_0, 2, R0, Shen.vector((R0 - 1))]);})))))}, 1, [], "tlv"];





Shen.fns["shen.tlv-help"] = [Shen.type_func, function shen_user_lambda7117(Arg7116) {
  if (Arg7116.length < 4) return [Shen.type_func, shen_user_lambda7117, 4, Arg7116];
  var Arg7116_0 = Arg7116[0], Arg7116_1 = Arg7116[1], Arg7116_2 = Arg7116[2], Arg7116_3 = Arg7116[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7116_2, Arg7116_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7116_0, Arg7116_3, Arg7116_2, (Arg7116_2 - 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7116_0, (Arg7116_1 + 1), Arg7116_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7116_0, Arg7116_3, Arg7116_1, (Arg7116_1 - 1)])]);}))}, 4, [], "shen.tlv-help"];





Shen.fns["assoc"] = [Shen.type_func, function shen_user_lambda7119(Arg7118) {
  if (Arg7118.length < 2) return [Shen.type_func, shen_user_lambda7119, 2, Arg7118];
  var Arg7118_0 = Arg7118[0], Arg7118_1 = Arg7118[1];
  return ((Shen.empty$question$(Arg7118_1))
  ? []
  : (((Shen.is_type(Arg7118_1, Shen.type_cons) && (Shen.is_type(Arg7118_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7118_1[1][1], Arg7118_0)))))
  ? Arg7118_1[1]
  : ((Shen.is_type(Arg7118_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["assoc"], [Arg7118_0, Arg7118_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "assoc"]]);}))))}, 2, [], "assoc"];





Shen.fns["boolean?"] = [Shen.type_func, function shen_user_lambda7121(Arg7120) {
  if (Arg7120.length < 1) return [Shen.type_func, shen_user_lambda7121, 1, Arg7120];
  var Arg7120_0 = Arg7120[0];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg7120_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg7120_0)))
  ? true
  : false))}, 1, [], "boolean?"];





Shen.fns["nl"] = [Shen.type_func, function shen_user_lambda7123(Arg7122) {
  if (Arg7122.length < 1) return [Shen.type_func, shen_user_lambda7123, 1, Arg7122];
  var Arg7122_0 = Arg7122[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7122_0)))
  ? 0
  : (Shen.call(Shen.fns["shen.prhush"], ["\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [(Arg7122_0 - 1)]);})))}, 1, [], "nl"];





Shen.fns["difference"] = [Shen.type_func, function shen_user_lambda7125(Arg7124) {
  if (Arg7124.length < 2) return [Shen.type_func, shen_user_lambda7125, 2, Arg7124];
  var Arg7124_0 = Arg7124[0], Arg7124_1 = Arg7124[1];
  return ((Shen.empty$question$(Arg7124_0))
  ? []
  : ((Shen.is_type(Arg7124_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7124_0[1], Arg7124_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["difference"], [Arg7124_0[2], Arg7124_1]);})
  : [Shen.type_cons, Arg7124_0[1], Shen.call(Shen.fns["difference"], [Arg7124_0[2], Arg7124_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "difference"]]);})))}, 2, [], "difference"];





Shen.fns["do"] = [Shen.type_func, function shen_user_lambda7127(Arg7126) {
  if (Arg7126.length < 2) return [Shen.type_func, shen_user_lambda7127, 2, Arg7126];
  var Arg7126_0 = Arg7126[0], Arg7126_1 = Arg7126[1];
  return Arg7126_1}, 2, [], "do"];





Shen.fns["element?"] = [Shen.type_func, function shen_user_lambda7129(Arg7128) {
  if (Arg7128.length < 2) return [Shen.type_func, shen_user_lambda7129, 2, Arg7128];
  var Arg7128_0 = Arg7128[0], Arg7128_1 = Arg7128[1];
  return ((Shen.empty$question$(Arg7128_1))
  ? false
  : (((Shen.is_type(Arg7128_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7128_1[1], Arg7128_0))))
  ? true
  : ((Shen.is_type(Arg7128_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7128_0, Arg7128_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "element?"]]);}))))}, 2, [], "element?"];










Shen.fns["fix"] = [Shen.type_func, function shen_user_lambda7132(Arg7131) {
  if (Arg7131.length < 2) return [Shen.type_func, shen_user_lambda7132, 2, Arg7131];
  var Arg7131_0 = Arg7131[0], Arg7131_1 = Arg7131[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7131_0, Arg7131_1, Shen.call(Arg7131_0, [Arg7131_1])]);})}, 2, [], "fix"];





Shen.fns["shen.fix-help"] = [Shen.type_func, function shen_user_lambda7134(Arg7133) {
  if (Arg7133.length < 3) return [Shen.type_func, shen_user_lambda7134, 3, Arg7133];
  var Arg7133_0 = Arg7133[0], Arg7133_1 = Arg7133[1], Arg7133_2 = Arg7133[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7133_2, Arg7133_1)))
  ? Arg7133_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7133_0, Arg7133_2, Shen.call(Arg7133_0, [Arg7133_2])]);}))}, 3, [], "shen.fix-help"];





Shen.fns["put"] = [Shen.type_func, function shen_user_lambda7136(Arg7135) {
  if (Arg7135.length < 4) return [Shen.type_func, shen_user_lambda7136, 4, Arg7135];
  var Arg7135_0 = Arg7135[0], Arg7135_1 = Arg7135[1], Arg7135_2 = Arg7135[2], Arg7135_3 = Arg7135[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7135_0, Shen.call(Shen.fns["limit"], [Arg7135_3])])),
  (R1 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7135_3, R0]);}, [Shen.type_func, function shen_user_lambda7138(Arg7137) {
  if (Arg7137.length < 1) return [Shen.type_func, shen_user_lambda7138, 1, Arg7137];
  var Arg7137_0 = Arg7137[0];
  return []}, 1, [], undefined])),
  Shen.call(Shen.fns["vector->"], [Arg7135_3, R0, Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7135_0, Arg7135_1, Arg7135_2, R1])]),
  Arg7135_2)}, 4, [], "put"];





Shen.fns["shen.change-pointer-value"] = [Shen.type_func, function shen_user_lambda7140(Arg7139) {
  if (Arg7139.length < 4) return [Shen.type_func, shen_user_lambda7140, 4, Arg7139];
  var Arg7139_0 = Arg7139[0], Arg7139_1 = Arg7139[1], Arg7139_2 = Arg7139[2], Arg7139_3 = Arg7139[3];
  return ((Shen.empty$question$(Arg7139_3))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg7139_0, [Shen.type_cons, Arg7139_1, []]], Arg7139_2], []]
  : (((Shen.is_type(Arg7139_3, Shen.type_cons) && (Shen.is_type(Arg7139_3[1], Shen.type_cons) && (Shen.is_type(Arg7139_3[1][1], Shen.type_cons) && (Shen.is_type(Arg7139_3[1][1][2], Shen.type_cons) && (Shen.empty$question$(Arg7139_3[1][1][2][2]) && (Shen.unwind_tail(Shen.$eq$(Arg7139_3[1][1][2][1], Arg7139_1)) && Shen.unwind_tail(Shen.$eq$(Arg7139_3[1][1][1], Arg7139_0)))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg7139_3[1][1], Arg7139_2], Arg7139_3[2]]
  : ((Shen.is_type(Arg7139_3, Shen.type_cons))
  ? [Shen.type_cons, Arg7139_3[1], Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7139_0, Arg7139_1, Arg7139_2, Arg7139_3[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.change-pointer-value"]]);}))))}, 4, [], "shen.change-pointer-value"];





Shen.fns["get"] = [Shen.type_func, function shen_user_lambda7142(Arg7141) {
  if (Arg7141.length < 3) return [Shen.type_func, shen_user_lambda7142, 3, Arg7141];
  var Arg7141_0 = Arg7141[0], Arg7141_1 = Arg7141[1], Arg7141_2 = Arg7141[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7141_0, Shen.call(Shen.fns["limit"], [Arg7141_2])])),
  (R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7141_2, R0]);}, [Shen.type_func, function shen_user_lambda7144(Arg7143) {
  if (Arg7143.length < 1) return [Shen.type_func, shen_user_lambda7144, 1, Arg7143];
  var Arg7143_0 = Arg7143[0];
  return (function() {
  return Shen.simple_error("pointer not found\x0a");})}, 1, [], undefined])),
  (R0 = Shen.call(Shen.fns["assoc"], [[Shen.type_cons, Arg7141_0, [Shen.type_cons, Arg7141_1, []]], R0])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("value not found\x0a");})
  : R0[2]))}, 3, [], "get"];





Shen.fns["hash"] = [Shen.type_func, function shen_user_lambda7146(Arg7145) {
  if (Arg7145.length < 2) return [Shen.type_func, shen_user_lambda7146, 2, Arg7145];
  var Arg7145_0 = Arg7145[0], Arg7145_1 = Arg7145[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.mod"], [Shen.call(Shen.fns["shen.sum"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7148(Arg7147) {
  if (Arg7147.length < 1) return [Shen.type_func, shen_user_lambda7148, 1, Arg7147];
  var Arg7147_0 = Arg7147[0];
  return (function() {
  return Shen.string_$gt$n(Arg7147_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg7145_0])])]), Arg7145_1])),
  ((Shen.unwind_tail(Shen.$eq$(0, R0)))
  ? 1
  : R0))}, 2, [], "hash"];





Shen.fns["shen.mod"] = [Shen.type_func, function shen_user_lambda7150(Arg7149) {
  if (Arg7149.length < 2) return [Shen.type_func, shen_user_lambda7150, 2, Arg7149];
  var Arg7149_0 = Arg7149[0], Arg7149_1 = Arg7149[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7149_0, Shen.call(Shen.fns["shen.multiples"], [Arg7149_0, [Shen.type_cons, Arg7149_1, []]])]);})}, 2, [], "shen.mod"];





Shen.fns["shen.multiples"] = [Shen.type_func, function shen_user_lambda7152(Arg7151) {
  if (Arg7151.length < 2) return [Shen.type_func, shen_user_lambda7152, 2, Arg7151];
  var Arg7151_0 = Arg7151[0], Arg7151_1 = Arg7151[1];
  return (((Shen.is_type(Arg7151_1, Shen.type_cons) && (Arg7151_1[1] > Arg7151_0)))
  ? Arg7151_1[2]
  : ((Shen.is_type(Arg7151_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.multiples"], [Arg7151_0, [Shen.type_cons, (2 * Arg7151_1[1]), Arg7151_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiples"]]);})))}, 2, [], "shen.multiples"];





Shen.fns["shen.modh"] = [Shen.type_func, function shen_user_lambda7154(Arg7153) {
  if (Arg7153.length < 2) return [Shen.type_func, shen_user_lambda7154, 2, Arg7153];
  var Arg7153_0 = Arg7153[0], Arg7153_1 = Arg7153[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7153_0)))
  ? 0
  : ((Shen.empty$question$(Arg7153_1))
  ? Arg7153_0
  : (((Shen.is_type(Arg7153_1, Shen.type_cons) && (Arg7153_1[1] > Arg7153_0)))
  ? ((Shen.empty$question$(Arg7153_1[2]))
  ? Arg7153_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7153_0, Arg7153_1[2]]);}))
  : ((Shen.is_type(Arg7153_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [(Arg7153_0 - Arg7153_1[1]), Arg7153_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.modh"]]);})))))}, 2, [], "shen.modh"];





Shen.fns["shen.sum"] = [Shen.type_func, function shen_user_lambda7156(Arg7155) {
  if (Arg7155.length < 1) return [Shen.type_func, shen_user_lambda7156, 1, Arg7155];
  var Arg7155_0 = Arg7155[0];
  return ((Shen.empty$question$(Arg7155_0))
  ? 0
  : ((Shen.is_type(Arg7155_0, Shen.type_cons))
  ? (Arg7155_0[1] + Shen.call(Shen.fns["shen.sum"], [Arg7155_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.sum"]]);})))}, 1, [], "shen.sum"];





Shen.fns["head"] = [Shen.type_func, function shen_user_lambda7158(Arg7157) {
  if (Arg7157.length < 1) return [Shen.type_func, shen_user_lambda7158, 1, Arg7157];
  var Arg7157_0 = Arg7157[0];
  return ((Shen.is_type(Arg7157_0, Shen.type_cons))
  ? Arg7157_0[1]
  : (function() {
  return Shen.simple_error("head expects a non-empty list");}))}, 1, [], "head"];





Shen.fns["tail"] = [Shen.type_func, function shen_user_lambda7160(Arg7159) {
  if (Arg7159.length < 1) return [Shen.type_func, shen_user_lambda7160, 1, Arg7159];
  var Arg7159_0 = Arg7159[0];
  return ((Shen.is_type(Arg7159_0, Shen.type_cons))
  ? Arg7159_0[2]
  : (function() {
  return Shen.simple_error("tail expects a non-empty list");}))}, 1, [], "tail"];





Shen.fns["hdstr"] = [Shen.type_func, function shen_user_lambda7162(Arg7161) {
  if (Arg7161.length < 1) return [Shen.type_func, shen_user_lambda7162, 1, Arg7161];
  var Arg7161_0 = Arg7161[0];
  return Arg7161_0[0]}, 1, [], "hdstr"];





Shen.fns["intersection"] = [Shen.type_func, function shen_user_lambda7164(Arg7163) {
  if (Arg7163.length < 2) return [Shen.type_func, shen_user_lambda7164, 2, Arg7163];
  var Arg7163_0 = Arg7163[0], Arg7163_1 = Arg7163[1];
  return ((Shen.empty$question$(Arg7163_0))
  ? []
  : ((Shen.is_type(Arg7163_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7163_0[1], Arg7163_1]))
  ? [Shen.type_cons, Arg7163_0[1], Shen.call(Shen.fns["intersection"], [Arg7163_0[2], Arg7163_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["intersection"], [Arg7163_0[2], Arg7163_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "intersection"]]);})))}, 2, [], "intersection"];





Shen.fns["reverse"] = [Shen.type_func, function shen_user_lambda7166(Arg7165) {
  if (Arg7165.length < 1) return [Shen.type_func, shen_user_lambda7166, 1, Arg7165];
  var Arg7165_0 = Arg7165[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7165_0, []]);})}, 1, [], "reverse"];





Shen.fns["shen.reverse_help"] = [Shen.type_func, function shen_user_lambda7168(Arg7167) {
  if (Arg7167.length < 2) return [Shen.type_func, shen_user_lambda7168, 2, Arg7167];
  var Arg7167_0 = Arg7167[0], Arg7167_1 = Arg7167[1];
  return ((Shen.empty$question$(Arg7167_0))
  ? Arg7167_1
  : ((Shen.is_type(Arg7167_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7167_0[2], [Shen.type_cons, Arg7167_0[1], Arg7167_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.reverse_help"]]);})))}, 2, [], "shen.reverse_help"];





Shen.fns["union"] = [Shen.type_func, function shen_user_lambda7170(Arg7169) {
  if (Arg7169.length < 2) return [Shen.type_func, shen_user_lambda7170, 2, Arg7169];
  var Arg7169_0 = Arg7169[0], Arg7169_1 = Arg7169[1];
  return ((Shen.empty$question$(Arg7169_0))
  ? Arg7169_1
  : ((Shen.is_type(Arg7169_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7169_0[1], Arg7169_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Arg7169_0[2], Arg7169_1]);})
  : [Shen.type_cons, Arg7169_0[1], Shen.call(Shen.fns["union"], [Arg7169_0[2], Arg7169_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "union"]]);})))}, 2, [], "union"];





Shen.fns["y-or-n?"] = [Shen.type_func, function shen_user_lambda7172(Arg7171) {
  if (Arg7171.length < 1) return [Shen.type_func, shen_user_lambda7172, 1, Arg7171];
  var Arg7171_0 = Arg7171[0];
  var R0;
  return (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg7171_0]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [" (y/n) ", Shen.call(Shen.fns["stoutput"], [])]),
  (R0 = Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["input"], []), "", [Shen.type_symbol, "shen.s"]])),
  ((Shen.unwind_tail(Shen.$eq$("y", R0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$("n", R0)))
  ? false
  : (Shen.call(Shen.fns["shen.prhush"], ["please answer y or n\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["y-or-n?"], [Arg7171_0]);})))))}, 1, [], "y-or-n?"];










Shen.fns["subst"] = [Shen.type_func, function shen_user_lambda7175(Arg7174) {
  if (Arg7174.length < 3) return [Shen.type_func, shen_user_lambda7175, 3, Arg7174];
  var Arg7174_0 = Arg7174[0], Arg7174_1 = Arg7174[1], Arg7174_2 = Arg7174[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7174_2, Arg7174_1)))
  ? Arg7174_0
  : ((Shen.is_type(Arg7174_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["subst"], [Arg7174_0, Arg7174_1, Arg7174_2[1]]), Shen.call(Shen.fns["subst"], [Arg7174_0, Arg7174_1, Arg7174_2[2]])]
  : Arg7174_2))}, 3, [], "subst"];





Shen.fns["explode"] = [Shen.type_func, function shen_user_lambda7177(Arg7176) {
  if (Arg7176.length < 1) return [Shen.type_func, shen_user_lambda7177, 1, Arg7176];
  var Arg7176_0 = Arg7176[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.explode-h"], [Shen.call(Shen.fns["shen.app"], [Arg7176_0, "", [Shen.type_symbol, "shen.a"]])]);})}, 1, [], "explode"];





Shen.fns["shen.explode-h"] = [Shen.type_func, function shen_user_lambda7179(Arg7178) {
  if (Arg7178.length < 1) return [Shen.type_func, shen_user_lambda7179, 1, Arg7178];
  var Arg7178_0 = Arg7178[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7178_0)))
  ? []
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7178_0]))
  ? [Shen.type_cons, Arg7178_0[0], Shen.call(Shen.fns["shen.explode-h"], [Shen.tlstr(Arg7178_0)])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explode-h"]]);})))}, 1, [], "shen.explode-h"];





Shen.fns["cd"] = [Shen.type_func, function shen_user_lambda7181(Arg7180) {
  if (Arg7180.length < 1) return [Shen.type_func, shen_user_lambda7181, 1, Arg7180];
  var Arg7180_0 = Arg7180[0];
  return (Shen.globals["*home-directory*"] = ((Shen.unwind_tail(Shen.$eq$(Arg7180_0, "")))
  ? ""
  : Shen.call(Shen.fns["shen.app"], [Arg7180_0, "/", [Shen.type_symbol, "shen.a"]])))}, 1, [], "cd"];





Shen.fns["map"] = [Shen.type_func, function shen_user_lambda7183(Arg7182) {
  if (Arg7182.length < 2) return [Shen.type_func, shen_user_lambda7183, 2, Arg7182];
  var Arg7182_0 = Arg7182[0], Arg7182_1 = Arg7182[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7182_0, Arg7182_1, []]);})}, 2, [], "map"];





Shen.fns["shen.map-h"] = [Shen.type_func, function shen_user_lambda7185(Arg7184) {
  if (Arg7184.length < 3) return [Shen.type_func, shen_user_lambda7185, 3, Arg7184];
  var Arg7184_0 = Arg7184[0], Arg7184_1 = Arg7184[1], Arg7184_2 = Arg7184[2];
  return ((Shen.empty$question$(Arg7184_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg7184_2]);})
  : ((Shen.is_type(Arg7184_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7184_0, Arg7184_1[2], [Shen.type_cons, Shen.call(Arg7184_0, [Arg7184_1[1]]), Arg7184_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.map-h"]]);})))}, 3, [], "shen.map-h"];





Shen.fns["length"] = [Shen.type_func, function shen_user_lambda7187(Arg7186) {
  if (Arg7186.length < 1) return [Shen.type_func, shen_user_lambda7187, 1, Arg7186];
  var Arg7186_0 = Arg7186[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7186_0, 0]);})}, 1, [], "length"];





Shen.fns["shen.length-h"] = [Shen.type_func, function shen_user_lambda7189(Arg7188) {
  if (Arg7188.length < 2) return [Shen.type_func, shen_user_lambda7189, 2, Arg7188];
  var Arg7188_0 = Arg7188[0], Arg7188_1 = Arg7188[1];
  return ((Shen.empty$question$(Arg7188_0))
  ? Arg7188_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7188_0[2], (Arg7188_1 + 1)]);}))}, 2, [], "shen.length-h"];





Shen.fns["occurrences"] = [Shen.type_func, function shen_user_lambda7191(Arg7190) {
  if (Arg7190.length < 2) return [Shen.type_func, shen_user_lambda7191, 2, Arg7190];
  var Arg7190_0 = Arg7190[0], Arg7190_1 = Arg7190[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7190_1, Arg7190_0)))
  ? 1
  : ((Shen.is_type(Arg7190_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["occurrences"], [Arg7190_0, Arg7190_1[1]]) + Shen.call(Shen.fns["occurrences"], [Arg7190_0, Arg7190_1[2]]))
  : 0))}, 2, [], "occurrences"];





Shen.fns["nth"] = [Shen.type_func, function shen_user_lambda7193(Arg7192) {
  if (Arg7192.length < 2) return [Shen.type_func, shen_user_lambda7193, 2, Arg7192];
  var Arg7192_0 = Arg7192[0], Arg7192_1 = Arg7192[1];
  return (((Shen.unwind_tail(Shen.$eq$(1, Arg7192_0)) && Shen.is_type(Arg7192_1, Shen.type_cons)))
  ? Arg7192_1[1]
  : ((Shen.is_type(Arg7192_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["nth"], [(Arg7192_0 - 1), Arg7192_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "nth"]]);})))}, 2, [], "nth"];





Shen.fns["integer?"] = [Shen.type_func, function shen_user_lambda7195(Arg7194) {
  if (Arg7194.length < 1) return [Shen.type_func, shen_user_lambda7195, 1, Arg7194];
  var Arg7194_0 = Arg7194[0];
  var R0;
  return ((typeof(Arg7194_0) == 'number') && ((R0 = Shen.call(Shen.fns["shen.abs"], [Arg7194_0])),
  Shen.call(Shen.fns["shen.integer-test?"], [R0, Shen.call(Shen.fns["shen.magless"], [R0, 1])])))}, 1, [], "integer?"];





Shen.fns["shen.abs"] = [Shen.type_func, function shen_user_lambda7197(Arg7196) {
  if (Arg7196.length < 1) return [Shen.type_func, shen_user_lambda7197, 1, Arg7196];
  var Arg7196_0 = Arg7196[0];
  return (((Arg7196_0 > 0))
  ? Arg7196_0
  : (0 - Arg7196_0))}, 1, [], "shen.abs"];





Shen.fns["shen.magless"] = [Shen.type_func, function shen_user_lambda7199(Arg7198) {
  if (Arg7198.length < 2) return [Shen.type_func, shen_user_lambda7199, 2, Arg7198];
  var Arg7198_0 = Arg7198[0], Arg7198_1 = Arg7198[1];
  var R0;
  return ((R0 = (Arg7198_1 * 2)),
  (((R0 > Arg7198_0))
  ? Arg7198_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.magless"], [Arg7198_0, R0]);})))}, 2, [], "shen.magless"];





Shen.fns["shen.integer-test?"] = [Shen.type_func, function shen_user_lambda7201(Arg7200) {
  if (Arg7200.length < 2) return [Shen.type_func, shen_user_lambda7201, 2, Arg7200];
  var Arg7200_0 = Arg7200[0], Arg7200_1 = Arg7200[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7200_0)))
  ? true
  : (((1 > Arg7200_0))
  ? false
  : ((R0 = (Arg7200_0 - Arg7200_1)),
  (((0 > R0))
  ? (function() {
  return Shen.call_tail(Shen.fns["integer?"], [Arg7200_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.integer-test?"], [R0, Arg7200_1]);})))))}, 2, [], "shen.integer-test?"];





Shen.fns["mapcan"] = [Shen.type_func, function shen_user_lambda7203(Arg7202) {
  if (Arg7202.length < 2) return [Shen.type_func, shen_user_lambda7203, 2, Arg7202];
  var Arg7202_0 = Arg7202[0], Arg7202_1 = Arg7202[1];
  return ((Shen.empty$question$(Arg7202_1))
  ? []
  : ((Shen.is_type(Arg7202_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Arg7202_0, [Arg7202_1[1]]), Shen.call(Shen.fns["mapcan"], [Arg7202_0, Arg7202_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "mapcan"]]);})))}, 2, [], "mapcan"];





Shen.fns["read-file-as-bytelist"] = [Shen.type_func, function shen_user_lambda7205(Arg7204) {
  if (Arg7204.length < 1) return [Shen.type_func, shen_user_lambda7205, 1, Arg7204];
  var Arg7204_0 = Arg7204[0];
  var R0, R1;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg7204_0, [Shen.type_symbol, "in"])),
  (R1 = Shen.read_byte(R0)),
  (R1 = Shen.call(Shen.fns["shen.read-file-as-bytelist-help"], [R0, R1, []])),
  Shen.close(R0),
  (function() {
  return Shen.call_tail(Shen.fns["reverse"], [R1]);}))}, 1, [], "read-file-as-bytelist"];





Shen.fns["shen.read-file-as-bytelist-help"] = [Shen.type_func, function shen_user_lambda7207(Arg7206) {
  if (Arg7206.length < 3) return [Shen.type_func, shen_user_lambda7207, 3, Arg7206];
  var Arg7206_0 = Arg7206[0], Arg7206_1 = Arg7206[1], Arg7206_2 = Arg7206[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7206_1)))
  ? Arg7206_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.read-file-as-bytelist-help"], [Arg7206_0, Shen.read_byte(Arg7206_0), [Shen.type_cons, Arg7206_1, Arg7206_2]]);}))}, 3, [], "shen.read-file-as-bytelist-help"];





Shen.fns["read-file-as-string"] = [Shen.type_func, function shen_user_lambda7209(Arg7208) {
  if (Arg7208.length < 1) return [Shen.type_func, shen_user_lambda7209, 1, Arg7208];
  var Arg7208_0 = Arg7208[0];
  var R0;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg7208_0, [Shen.type_symbol, "in"])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [R0, Shen.read_byte(R0), ""]);}))}, 1, [], "read-file-as-string"];





Shen.fns["shen.rfas-h"] = [Shen.type_func, function shen_user_lambda7211(Arg7210) {
  if (Arg7210.length < 3) return [Shen.type_func, shen_user_lambda7211, 3, Arg7210];
  var Arg7210_0 = Arg7210[0], Arg7210_1 = Arg7210[1], Arg7210_2 = Arg7210[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7210_1)))
  ? (Shen.close(Arg7210_0),
  Arg7210_2)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [Arg7210_0, Shen.read_byte(Arg7210_0), (Arg7210_2 + Shen.n_$gt$string(Arg7210_1))]);}))}, 3, [], "shen.rfas-h"];





Shen.fns["=="] = [Shen.type_func, function shen_user_lambda7213(Arg7212) {
  if (Arg7212.length < 2) return [Shen.type_func, shen_user_lambda7213, 2, Arg7212];
  var Arg7212_0 = Arg7212[0], Arg7212_1 = Arg7212[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7212_1, Arg7212_0)))
  ? true
  : false)}, 2, [], "=="];





Shen.fns["abort"] = [Shen.type_func, function shen_user_lambda7215(Arg7214) {
  if (Arg7214.length < 0) return [Shen.type_func, shen_user_lambda7215, 0, Arg7214];
  return (function() {
  return Shen.simple_error("");})}, 0, [], "abort"];





Shen.fns["read"] = [Shen.type_func, function shen_user_lambda7217(Arg7216) {
  if (Arg7216.length < 0) return [Shen.type_func, shen_user_lambda7217, 0, Arg7216];
  return Shen.call(Shen.fns["lineread"], [])[1]}, 0, [], "read"];





Shen.fns["input"] = [Shen.type_func, function shen_user_lambda7219(Arg7218) {
  if (Arg7218.length < 0) return [Shen.type_func, shen_user_lambda7219, 0, Arg7218];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["read"], [])]);})}, 0, [], "input"];





Shen.fns["input+"] = [Shen.type_func, function shen_user_lambda7221(Arg7220) {
  if (Arg7220.length < 2) return [Shen.type_func, shen_user_lambda7221, 2, Arg7220];
  var Arg7220_0 = Arg7220[0], Arg7220_1 = Arg7220[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["read"], [])),
  (R1 = Shen.call(Shen.fns["shen.typecheck"], [R0, Arg7220_1])),
  ((Shen.unwind_tail(Shen.$eq$(false, R1)))
  ? (Shen.call(Shen.fns["shen.prhush"], [("input is not of type " + Shen.call(Shen.fns["shen.app"], [Arg7220_1, ": please re-enter ", [Shen.type_symbol, "shen.r"]])), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["input+"], [[Shen.type_symbol, ":"], Arg7220_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["eval"], [R0]);})))}, 2, [], "input+"];





Shen.fns["bound?"] = [Shen.type_func, function shen_user_lambda7223(Arg7222) {
  if (Arg7222.length < 1) return [Shen.type_func, shen_user_lambda7223, 1, Arg7222];
  var Arg7222_0 = Arg7222[0];
  var R0;
  return (Shen.is_type(Arg7222_0, Shen.type_symbol) && ((R0 = Shen.trap_error(function() {return (Shen.globals[Arg7222_0[1]]);}, [Shen.type_func, function shen_user_lambda7225(Arg7224) {
  if (Arg7224.length < 1) return [Shen.type_func, shen_user_lambda7225, 1, Arg7224];
  var Arg7224_0 = Arg7224[0];
  return [Shen.type_symbol, "shen.this-symbol-is-unbound"]}, 1, [], undefined])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.this-symbol-is-unbound"])))
  ? false
  : true)))}, 1, [], "bound?"];





Shen.fns["shen.string->bytes"] = [Shen.type_func, function shen_user_lambda7227(Arg7226) {
  if (Arg7226.length < 1) return [Shen.type_func, shen_user_lambda7227, 1, Arg7226];
  var Arg7226_0 = Arg7226[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7226_0)))
  ? []
  : [Shen.type_cons, Shen.string_$gt$n(Arg7226_0[0]), Shen.call(Shen.fns["shen.string->bytes"], [Shen.tlstr(Arg7226_0)])])}, 1, [], "shen.string->bytes"];





Shen.fns["maxinferences"] = [Shen.type_func, function shen_user_lambda7229(Arg7228) {
  if (Arg7228.length < 1) return [Shen.type_func, shen_user_lambda7229, 1, Arg7228];
  var Arg7228_0 = Arg7228[0];
  return (Shen.globals["shen.*maxinferences*"] = Arg7228_0)}, 1, [], "maxinferences"];





Shen.fns["inferences"] = [Shen.type_func, function shen_user_lambda7231(Arg7230) {
  if (Arg7230.length < 0) return [Shen.type_func, shen_user_lambda7231, 0, Arg7230];
  return (Shen.globals["shen.*infs*"])}, 0, [], "inferences"];





Shen.fns["protect"] = [Shen.type_func, function shen_user_lambda7233(Arg7232) {
  if (Arg7232.length < 1) return [Shen.type_func, shen_user_lambda7233, 1, Arg7232];
  var Arg7232_0 = Arg7232[0];
  return Arg7232_0}, 1, [], "protect"];





Shen.fns["stoutput"] = [Shen.type_func, function shen_user_lambda7235(Arg7234) {
  if (Arg7234.length < 0) return [Shen.type_func, shen_user_lambda7235, 0, Arg7234];
  return (Shen.globals["*stoutput*"])}, 0, [], "stoutput"];





Shen.fns["string->symbol"] = [Shen.type_func, function shen_user_lambda7237(Arg7236) {
  if (Arg7236.length < 1) return [Shen.type_func, shen_user_lambda7237, 1, Arg7236];
  var Arg7236_0 = Arg7236[0];
  var R0;
  return ((R0 = Shen.intern(Arg7236_0)),
  ((Shen.is_type(R0, Shen.type_symbol))
  ? R0
  : (function() {
  return Shen.simple_error(("cannot intern " + Shen.call(Shen.fns["shen.app"], [Arg7236_0, " to a symbol", [Shen.type_symbol, "shen.s"]])));})))}, 1, [], "string->symbol"];










Shen.fns["shen.datatype-error"] = [Shen.type_func, function shen_user_lambda6913(Arg6912) {
  if (Arg6912.length < 1) return [Shen.type_func, shen_user_lambda6913, 1, Arg6912];
  var Arg6912_0 = Arg6912[0];
  return (((Shen.is_type(Arg6912_0, Shen.type_cons) && (Shen.is_type(Arg6912_0[2], Shen.type_cons) && Shen.empty$question$(Arg6912_0[2][2]))))
  ? (function() {
  return Shen.simple_error(("datatype syntax error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6912_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.datatype-error"]]);}))}, 1, [], "shen.datatype-error"];





Shen.fns["shen.<datatype-rules>"] = [Shen.type_func, function shen_user_lambda6915(Arg6914) {
  if (Arg6914.length < 1) return [Shen.type_func, shen_user_lambda6915, 1, Arg6914];
  var Arg6914_0 = Arg6914[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<datatype-rule>"], [Arg6914_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<datatype-rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6914_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rules>"];





Shen.fns["shen.<datatype-rule>"] = [Shen.type_func, function shen_user_lambda6917(Arg6916) {
  if (Arg6916.length < 1) return [Shen.type_func, shen_user_lambda6917, 1, Arg6916];
  var Arg6916_0 = Arg6916[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6916_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<singleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.single"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6916_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<doubleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.double"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rule>"];





Shen.fns["shen.<side-conditions>"] = [Shen.type_func, function shen_user_lambda6919(Arg6918) {
  if (Arg6918.length < 1) return [Shen.type_func, shen_user_lambda6919, 1, Arg6918];
  var Arg6918_0 = Arg6918[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<side-condition>"], [Arg6918_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<side-conditions>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6918_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-conditions>"];





Shen.fns["shen.<side-condition>"] = [Shen.type_func, function shen_user_lambda6921(Arg6920) {
  if (Arg6920.length < 1) return [Shen.type_func, shen_user_lambda6921, 1, Arg6920];
  var Arg6920_0 = Arg6920[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6920_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6920_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<expr>"], [Shen.call(Shen.fns["shen.pair"], [Arg6920_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6920_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6920_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6920_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<variable?>"], [Shen.call(Shen.fns["shen.pair"], [Arg6920_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6920_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<expr>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-condition>"];





Shen.fns["shen.<variable?>"] = [Shen.type_func, function shen_user_lambda6923(Arg6922) {
  if (Arg6922.length < 1) return [Shen.type_func, shen_user_lambda6923, 1, Arg6922];
  var Arg6922_0 = Arg6922[0];
  var R0;
  return (((Shen.is_type(Arg6922_0[1], Shen.type_cons))
  ? ((R0 = Arg6922_0[1][1]),
  ((Shen.call(Shen.fns["variable?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6922_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6922_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<variable?>"];





Shen.fns["shen.<expr>"] = [Shen.type_func, function shen_user_lambda6925(Arg6924) {
  if (Arg6924.length < 1) return [Shen.type_func, shen_user_lambda6925, 1, Arg6924];
  var Arg6924_0 = Arg6924[0];
  var R0;
  return (((Shen.is_type(Arg6924_0[1], Shen.type_cons))
  ? ((R0 = Arg6924_0[1][1]),
  (((!(Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]) || (Shen.call(Shen.fns["shen.singleunderline?"], [R0]) || Shen.call(Shen.fns["shen.doubleunderline?"], [R0])))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6924_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6924_0])])[1], Shen.call(Shen.fns["shen.remove-bar"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<expr>"];





Shen.fns["shen.remove-bar"] = [Shen.type_func, function shen_user_lambda6927(Arg6926) {
  if (Arg6926.length < 1) return [Shen.type_func, shen_user_lambda6927, 1, Arg6926];
  var Arg6926_0 = Arg6926[0];
  return (((Shen.is_type(Arg6926_0, Shen.type_cons) && (Shen.is_type(Arg6926_0[2], Shen.type_cons) && (Shen.is_type(Arg6926_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6926_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6926_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, Arg6926_0[1], Arg6926_0[2][2][1]]
  : ((Shen.is_type(Arg6926_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove-bar"], [Arg6926_0[1]]), Shen.call(Shen.fns["shen.remove-bar"], [Arg6926_0[2]])]
  : Arg6926_0))}, 1, [], "shen.remove-bar"];





Shen.fns["shen.<premises>"] = [Shen.type_func, function shen_user_lambda6929(Arg6928) {
  if (Arg6928.length < 1) return [Shen.type_func, shen_user_lambda6929, 1, Arg6928];
  var Arg6928_0 = Arg6928[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<premise>"], [Arg6928_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6928_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<premises>"];





Shen.fns["shen.<semicolon-symbol>"] = [Shen.type_func, function shen_user_lambda6931(Arg6930) {
  if (Arg6930.length < 1) return [Shen.type_func, shen_user_lambda6931, 1, Arg6930];
  var Arg6930_0 = Arg6930[0];
  var R0;
  return (((Shen.is_type(Arg6930_0[1], Shen.type_cons))
  ? ((R0 = Arg6930_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6930_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6930_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon-symbol>"];





Shen.fns["shen.<premise>"] = [Shen.type_func, function shen_user_lambda6933(Arg6932) {
  if (Arg6932.length < 1) return [Shen.type_func, shen_user_lambda6933, 1, Arg6932];
  var Arg6932_0 = Arg6932[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6932_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6932_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6932_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6932_0])])[1], [Shen.type_symbol, "!"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6932_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6932_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<premise>"];





Shen.fns["shen.<conclusion>"] = [Shen.type_func, function shen_user_lambda6935(Arg6934) {
  if (Arg6934.length < 1) return [Shen.type_func, shen_user_lambda6935, 1, Arg6934];
  var Arg6934_0 = Arg6934[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6934_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6934_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<conclusion>"];





Shen.fns["shen.sequent"] = [Shen.type_func, function shen_user_lambda6937(Arg6936) {
  if (Arg6936.length < 2) return [Shen.type_func, shen_user_lambda6937, 2, Arg6936];
  var Arg6936_0 = Arg6936[0], Arg6936_1 = Arg6936[1];
  return [Shen.fns['shen.tuple'], Arg6936_0, Arg6936_1]}, 2, [], "shen.sequent"];





Shen.fns["shen.<formulae>"] = [Shen.type_func, function shen_user_lambda6939(Arg6938) {
  if (Arg6938.length < 1) return [Shen.type_func, shen_user_lambda6939, 1, Arg6938];
  var Arg6938_0 = Arg6938[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6938_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<comma-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formulae>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6938_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6938_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<formulae>"];





Shen.fns["shen.<comma-symbol>"] = [Shen.type_func, function shen_user_lambda6941(Arg6940) {
  if (Arg6940.length < 1) return [Shen.type_func, shen_user_lambda6941, 1, Arg6940];
  var Arg6940_0 = Arg6940[0];
  var R0;
  return (((Shen.is_type(Arg6940_0[1], Shen.type_cons))
  ? ((R0 = Arg6940_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ","])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6940_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6940_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma-symbol>"];





Shen.fns["shen.<formula>"] = [Shen.type_func, function shen_user_lambda6943(Arg6942) {
  if (Arg6942.length < 1) return [Shen.type_func, shen_user_lambda6943, 1, Arg6942];
  var Arg6942_0 = Arg6942[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6942_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<type>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.hdtl"], [R1])]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6942_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<formula>"];





Shen.fns["shen.<type>"] = [Shen.type_func, function shen_user_lambda6945(Arg6944) {
  if (Arg6944.length < 1) return [Shen.type_func, shen_user_lambda6945, 1, Arg6944];
  var Arg6944_0 = Arg6944[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6944_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<type>"];





Shen.fns["shen.<doubleunderline>"] = [Shen.type_func, function shen_user_lambda6947(Arg6946) {
  if (Arg6946.length < 1) return [Shen.type_func, shen_user_lambda6947, 1, Arg6946];
  var Arg6946_0 = Arg6946[0];
  var R0;
  return (((Shen.is_type(Arg6946_0[1], Shen.type_cons))
  ? ((R0 = Arg6946_0[1][1]),
  ((Shen.call(Shen.fns["shen.doubleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6946_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6946_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<doubleunderline>"];





Shen.fns["shen.<singleunderline>"] = [Shen.type_func, function shen_user_lambda6949(Arg6948) {
  if (Arg6948.length < 1) return [Shen.type_func, shen_user_lambda6949, 1, Arg6948];
  var Arg6948_0 = Arg6948[0];
  var R0;
  return (((Shen.is_type(Arg6948_0[1], Shen.type_cons))
  ? ((R0 = Arg6948_0[1][1]),
  ((Shen.call(Shen.fns["shen.singleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6948_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6948_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<singleunderline>"];





Shen.fns["shen.singleunderline?"] = [Shen.type_func, function shen_user_lambda6951(Arg6950) {
  if (Arg6950.length < 1) return [Shen.type_func, shen_user_lambda6951, 1, Arg6950];
  var Arg6950_0 = Arg6950[0];
  return (Shen.is_type(Arg6950_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.sh?"], [Shen.str(Arg6950_0)]))}, 1, [], "shen.singleunderline?"];





Shen.fns["shen.sh?"] = [Shen.type_func, function shen_user_lambda6953(Arg6952) {
  if (Arg6952.length < 1) return [Shen.type_func, shen_user_lambda6953, 1, Arg6952];
  var Arg6952_0 = Arg6952[0];
  return ((Shen.unwind_tail(Shen.$eq$("_", Arg6952_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6952_0[0], "_")) && Shen.call(Shen.fns["shen.sh?"], [Shen.tlstr(Arg6952_0)])))}, 1, [], "shen.sh?"];





Shen.fns["shen.doubleunderline?"] = [Shen.type_func, function shen_user_lambda6955(Arg6954) {
  if (Arg6954.length < 1) return [Shen.type_func, shen_user_lambda6955, 1, Arg6954];
  var Arg6954_0 = Arg6954[0];
  return (Shen.is_type(Arg6954_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.dh?"], [Shen.str(Arg6954_0)]))}, 1, [], "shen.doubleunderline?"];





Shen.fns["shen.dh?"] = [Shen.type_func, function shen_user_lambda6957(Arg6956) {
  if (Arg6956.length < 1) return [Shen.type_func, shen_user_lambda6957, 1, Arg6956];
  var Arg6956_0 = Arg6956[0];
  return ((Shen.unwind_tail(Shen.$eq$("=", Arg6956_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6956_0[0], "=")) && Shen.call(Shen.fns["shen.dh?"], [Shen.tlstr(Arg6956_0)])))}, 1, [], "shen.dh?"];





Shen.fns["shen.process-datatype"] = [Shen.type_func, function shen_user_lambda6959(Arg6958) {
  if (Arg6958.length < 2) return [Shen.type_func, shen_user_lambda6959, 2, Arg6958];
  var Arg6958_0 = Arg6958[0], Arg6958_1 = Arg6958[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember-datatype"], [Shen.call(Shen.fns["shen.s-prolog"], [Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg6958_0, Arg6958_1])])]);})}, 2, [], "shen.process-datatype"];





Shen.fns["shen.remember-datatype"] = [Shen.type_func, function shen_user_lambda6961(Arg6960) {
  if (Arg6960.length < 1) return [Shen.type_func, shen_user_lambda6961, 1, Arg6960];
  var Arg6960_0 = Arg6960[0];
  return ((Shen.is_type(Arg6960_0, Shen.type_cons))
  ? ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6960_0[1], (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*alldatatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6960_0[1], (Shen.globals["shen.*alldatatypes*"])])),
  Arg6960_0[1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remember-datatype"]]);}))}, 1, [], "shen.remember-datatype"];





Shen.fns["shen.rules->horn-clauses"] = [Shen.type_func, function shen_user_lambda6963(Arg6962) {
  if (Arg6962.length < 2) return [Shen.type_func, shen_user_lambda6963, 2, Arg6962];
  var Arg6962_0 = Arg6962[0], Arg6962_1 = Arg6962[1];
  return ((Shen.empty$question$(Arg6962_1))
  ? []
  : (((Shen.is_type(Arg6962_1, Shen.type_cons) && (Shen.is_type(Arg6962_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.single"], Shen.call(Shen.fns["fst"], [Arg6962_1[1]]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause"], [Arg6962_0, Shen.call(Shen.fns["snd"], [Arg6962_1[1]])]), Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg6962_0, Arg6962_1[2]])]
  : (((Shen.is_type(Arg6962_1, Shen.type_cons) && (Shen.is_type(Arg6962_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.double"], Shen.call(Shen.fns["fst"], [Arg6962_1[1]]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.rules->horn-clauses"], [Arg6962_0, Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.double->singles"], [Shen.call(Shen.fns["snd"], [Arg6962_1[1]])]), Arg6962_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rules->horn-clauses"]]);}))))}, 2, [], "shen.rules->horn-clauses"];





Shen.fns["shen.double->singles"] = [Shen.type_func, function shen_user_lambda6965(Arg6964) {
  if (Arg6964.length < 1) return [Shen.type_func, shen_user_lambda6965, 1, Arg6964];
  var Arg6964_0 = Arg6964[0];
  return [Shen.type_cons, Shen.call(Shen.fns["shen.right-rule"], [Arg6964_0]), [Shen.type_cons, Shen.call(Shen.fns["shen.left-rule"], [Arg6964_0]), []]]}, 1, [], "shen.double->singles"];





Shen.fns["shen.right-rule"] = [Shen.type_func, function shen_user_lambda6967(Arg6966) {
  if (Arg6966.length < 1) return [Shen.type_func, shen_user_lambda6967, 1, Arg6966];
  var Arg6966_0 = Arg6966[0];
  return [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], Arg6966_0]}, 1, [], "shen.right-rule"];





Shen.fns["shen.left-rule"] = [Shen.type_func, function shen_user_lambda6969(Arg6968) {
  if (Arg6968.length < 1) return [Shen.type_func, shen_user_lambda6969, 1, Arg6968];
  var Arg6968_0 = Arg6968[0];
  var R0, R1;
  return (((Shen.is_type(Arg6968_0, Shen.type_cons) && (Shen.is_type(Arg6968_0[2], Shen.type_cons) && (Shen.is_type(Arg6968_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6968_0[2][2][1], Shen.fns['shen.tuple']) && (Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6968_0[2][2][1]])) && Shen.empty$question$(Arg6968_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Qv"]])),
  (R1 = [Shen.fns['shen.tuple'], [Shen.type_cons, Shen.call(Shen.fns["snd"], [Arg6968_0[2][2][1]]), []], R0]),
  (R0 = [Shen.type_cons, [Shen.fns['shen.tuple'], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.right->left"], Arg6968_0[2][1]]), R0], []]),
  [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], [Shen.type_cons, Arg6968_0[1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.left-rule"]]);}))}, 1, [], "shen.left-rule"];





Shen.fns["shen.right->left"] = [Shen.type_func, function shen_user_lambda6971(Arg6970) {
  if (Arg6970.length < 1) return [Shen.type_func, shen_user_lambda6971, 1, Arg6970];
  var Arg6970_0 = Arg6970[0];
  return (((Shen.is_type(Arg6970_0, Shen.fns['shen.tuple']) && Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6970_0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["snd"], [Arg6970_0]);})
  : (function() {
  return Shen.simple_error("syntax error with ==========\x0a");}))}, 1, [], "shen.right->left"];





Shen.fns["shen.rule->horn-clause"] = [Shen.type_func, function shen_user_lambda6973(Arg6972) {
  if (Arg6972.length < 2) return [Shen.type_func, shen_user_lambda6973, 2, Arg6972];
  var Arg6972_0 = Arg6972[0], Arg6972_1 = Arg6972[1];
  return (((Shen.is_type(Arg6972_1, Shen.type_cons) && (Shen.is_type(Arg6972_1[2], Shen.type_cons) && (Shen.is_type(Arg6972_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6972_1[2][2][1], Shen.fns['shen.tuple']) && Shen.empty$question$(Arg6972_1[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-head"], [Arg6972_0, Shen.call(Shen.fns["snd"], [Arg6972_1[2][2][1]])]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-body"], [Arg6972_1[1], Arg6972_1[2][1], Shen.call(Shen.fns["fst"], [Arg6972_1[2][2][1]])]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rule->horn-clause"]]);}))}, 2, [], "shen.rule->horn-clause"];





Shen.fns["shen.rule->horn-clause-head"] = [Shen.type_func, function shen_user_lambda6975(Arg6974) {
  if (Arg6974.length < 2) return [Shen.type_func, shen_user_lambda6975, 2, Arg6974];
  var Arg6974_0 = Arg6974[0], Arg6974_1 = Arg6974[1];
  return [Shen.type_cons, Arg6974_0, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg6974_1]), [Shen.type_cons, [Shen.type_symbol, "Context_1957"], []]]]}, 2, [], "shen.rule->horn-clause-head"];





Shen.fns["shen.mode-ify"] = [Shen.type_func, function shen_user_lambda6977(Arg6976) {
  if (Arg6976.length < 1) return [Shen.type_func, shen_user_lambda6977, 1, Arg6976];
  var Arg6976_0 = Arg6976[0];
  return (((Shen.is_type(Arg6976_0, Shen.type_cons) && (Shen.is_type(Arg6976_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6976_0[2][1])) && (Shen.is_type(Arg6976_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6976_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_cons, Arg6976_0[1], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6976_0[2][2][1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "-"], []]]]
  : Arg6976_0)}, 1, [], "shen.mode-ify"];





Shen.fns["shen.rule->horn-clause-body"] = [Shen.type_func, function shen_user_lambda6979(Arg6978) {
  if (Arg6978.length < 3) return [Shen.type_func, shen_user_lambda6979, 3, Arg6978];
  var Arg6978_0 = Arg6978[0], Arg6978_1 = Arg6978[1], Arg6978_2 = Arg6978[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.extract_vars"], Arg6978_2])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6981(Arg6980) {
  if (Arg6980.length < 1) return [Shen.type_func, shen_user_lambda6981, 1, Arg6980];
  var Arg6980_0 = Arg6980[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "shen.cl"]]);})}, 1, [], undefined], Arg6978_2])),
  (R2 = Shen.call(Shen.fns["shen.construct-search-literals"], [R1, R0, [Shen.type_symbol, "Context_1957"], [Shen.type_symbol, "Context1_1957"]])),
  Shen.call(Shen.fns["shen.construct-search-clauses"], [R1, Arg6978_2, R0]),
  (R1 = Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6978_0])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6983(Arg6982) {
  if (Arg6982.length < 2) return [Shen.type_func, shen_user_lambda6983, 2, Arg6982];
  var Arg6982_0 = Arg6982[0], Arg6982_1 = Arg6982[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.construct-premiss-literal"], [Arg6982_1, Shen.empty$question$(Arg6982_0)]);})}, 2, [Arg6978_2], undefined], Arg6978_1])),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [R1, R0])]);}))}, 3, [], "shen.rule->horn-clause-body"];





Shen.fns["shen.construct-search-literals"] = [Shen.type_func, function shen_user_lambda6985(Arg6984) {
  if (Arg6984.length < 4) return [Shen.type_func, shen_user_lambda6985, 4, Arg6984];
  var Arg6984_0 = Arg6984[0], Arg6984_1 = Arg6984[1], Arg6984_2 = Arg6984[2], Arg6984_3 = Arg6984[3];
  return (((Shen.empty$question$(Arg6984_0) && Shen.empty$question$(Arg6984_1)))
  ? []
  : (function() {
  return Shen.call_tail(Shen.fns["shen.csl-help"], [Arg6984_0, Arg6984_1, Arg6984_2, Arg6984_3]);}))}, 4, [], "shen.construct-search-literals"];





Shen.fns["shen.csl-help"] = [Shen.type_func, function shen_user_lambda6987(Arg6986) {
  if (Arg6986.length < 4) return [Shen.type_func, shen_user_lambda6987, 4, Arg6986];
  var Arg6986_0 = Arg6986[0], Arg6986_1 = Arg6986[1], Arg6986_2 = Arg6986[2], Arg6986_3 = Arg6986[3];
  return (((Shen.empty$question$(Arg6986_0) && Shen.empty$question$(Arg6986_1)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "ContextOut_1957"], [Shen.type_cons, Arg6986_2, []]]], []]
  : (((Shen.is_type(Arg6986_0, Shen.type_cons) && Shen.is_type(Arg6986_1, Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_cons, Arg6986_0[1], [Shen.type_cons, Arg6986_2, [Shen.type_cons, Arg6986_3, Arg6986_1[1]]]], Shen.call(Shen.fns["shen.csl-help"], [Arg6986_0[2], Arg6986_1[2], Arg6986_3, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Context"]])])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.csl-help"]]);})))}, 4, [], "shen.csl-help"];





Shen.fns["shen.construct-search-clauses"] = [Shen.type_func, function shen_user_lambda6989(Arg6988) {
  if (Arg6988.length < 3) return [Shen.type_func, shen_user_lambda6989, 3, Arg6988];
  var Arg6988_0 = Arg6988[0], Arg6988_1 = Arg6988[1], Arg6988_2 = Arg6988[2];
  return (((Shen.empty$question$(Arg6988_0) && (Shen.empty$question$(Arg6988_1) && Shen.empty$question$(Arg6988_2))))
  ? [Shen.type_symbol, "shen.skip"]
  : (((Shen.is_type(Arg6988_0, Shen.type_cons) && (Shen.is_type(Arg6988_1, Shen.type_cons) && Shen.is_type(Arg6988_2, Shen.type_cons))))
  ? (Shen.call(Shen.fns["shen.construct-search-clause"], [Arg6988_0[1], Arg6988_1[1], Arg6988_2[1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.construct-search-clauses"], [Arg6988_0[2], Arg6988_1[2], Arg6988_2[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-search-clauses"]]);})))}, 3, [], "shen.construct-search-clauses"];





Shen.fns["shen.construct-search-clause"] = [Shen.type_func, function shen_user_lambda6991(Arg6990) {
  if (Arg6990.length < 3) return [Shen.type_func, shen_user_lambda6991, 3, Arg6990];
  var Arg6990_0 = Arg6990[0], Arg6990_1 = Arg6990[1], Arg6990_2 = Arg6990[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog"], [[Shen.type_cons, Shen.call(Shen.fns["shen.construct-base-search-clause"], [Arg6990_0, Arg6990_1, Arg6990_2]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-recursive-search-clause"], [Arg6990_0, Arg6990_1, Arg6990_2]), []]]]);})}, 3, [], "shen.construct-search-clause"];





Shen.fns["shen.construct-base-search-clause"] = [Shen.type_func, function shen_user_lambda6993(Arg6992) {
  if (Arg6992.length < 3) return [Shen.type_func, shen_user_lambda6993, 3, Arg6992];
  var Arg6992_0 = Arg6992[0], Arg6992_1 = Arg6992[1], Arg6992_2 = Arg6992[2];
  return [Shen.type_cons, [Shen.type_cons, Arg6992_0, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg6992_1]), [Shen.type_symbol, "In_1957"]], [Shen.type_cons, [Shen.type_symbol, "In_1957"], Arg6992_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [], []]]]}, 3, [], "shen.construct-base-search-clause"];





Shen.fns["shen.construct-recursive-search-clause"] = [Shen.type_func, function shen_user_lambda6995(Arg6994) {
  if (Arg6994.length < 3) return [Shen.type_func, shen_user_lambda6995, 3, Arg6994];
  var Arg6994_0 = Arg6994[0], Arg6994_1 = Arg6994[1], Arg6994_2 = Arg6994[2];
  return [Shen.type_cons, [Shen.type_cons, Arg6994_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Assumptions_1957"]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Out_1957"]], Arg6994_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg6994_0, [Shen.type_cons, [Shen.type_symbol, "Assumptions_1957"], [Shen.type_cons, [Shen.type_symbol, "Out_1957"], Arg6994_2]]], []], []]]]}, 3, [], "shen.construct-recursive-search-clause"];





Shen.fns["shen.construct-side-literals"] = [Shen.type_func, function shen_user_lambda6997(Arg6996) {
  if (Arg6996.length < 1) return [Shen.type_func, shen_user_lambda6997, 1, Arg6996];
  var Arg6996_0 = Arg6996[0];
  return ((Shen.empty$question$(Arg6996_0))
  ? []
  : (((Shen.is_type(Arg6996_0, Shen.type_cons) && (Shen.is_type(Arg6996_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6996_0[1][1])) && (Shen.is_type(Arg6996_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6996_0[1][2][2]))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "when"], Arg6996_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6996_0[2]])]
  : (((Shen.is_type(Arg6996_0, Shen.type_cons) && (Shen.is_type(Arg6996_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6996_0[1][1])) && (Shen.is_type(Arg6996_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6996_0[1][2][2], Shen.type_cons) && Shen.empty$question$(Arg6996_0[1][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "is"], Arg6996_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6996_0[2]])]
  : ((Shen.is_type(Arg6996_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.construct-side-literals"], [Arg6996_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-side-literals"]]);})))))}, 1, [], "shen.construct-side-literals"];





Shen.fns["shen.construct-premiss-literal"] = [Shen.type_func, function shen_user_lambda6999(Arg6998) {
  if (Arg6998.length < 2) return [Shen.type_func, shen_user_lambda6999, 2, Arg6998];
  var Arg6998_0 = Arg6998[0], Arg6998_1 = Arg6998[1];
  return ((Shen.is_type(Arg6998_0, Shen.fns['shen.tuple']))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.t*"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Shen.call(Shen.fns["snd"], [Arg6998_0])]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg6998_1, Shen.call(Shen.fns["fst"], [Arg6998_0])]), []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6998_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-premiss-literal"]]);})))}, 2, [], "shen.construct-premiss-literal"];





Shen.fns["shen.construct-context"] = [Shen.type_func, function shen_user_lambda7001(Arg7000) {
  if (Arg7000.length < 2) return [Shen.type_func, shen_user_lambda7001, 2, Arg7000];
  var Arg7000_0 = Arg7000[0], Arg7000_1 = Arg7000[1];
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg7000_0)) && Shen.empty$question$(Arg7000_1)))
  ? [Shen.type_symbol, "Context_1957"]
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg7000_0)) && Shen.empty$question$(Arg7000_1)))
  ? [Shen.type_symbol, "ContextOut_1957"]
  : ((Shen.is_type(Arg7000_1, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg7000_1[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg7000_0, Arg7000_1[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-context"]]);}))))}, 2, [], "shen.construct-context"];





Shen.fns["shen.recursive_cons_form"] = [Shen.type_func, function shen_user_lambda7003(Arg7002) {
  if (Arg7002.length < 1) return [Shen.type_func, shen_user_lambda7003, 1, Arg7002];
  var Arg7002_0 = Arg7002[0];
  return ((Shen.is_type(Arg7002_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg7002_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg7002_0[2]]), []]]]
  : Arg7002_0)}, 1, [], "shen.recursive_cons_form"];





Shen.fns["preclude"] = [Shen.type_func, function shen_user_lambda7005(Arg7004) {
  if (Arg7004.length < 1) return [Shen.type_func, shen_user_lambda7005, 1, Arg7004];
  var Arg7004_0 = Arg7004[0];
  return ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*datatypes*"]), Arg7004_0])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "preclude"];





Shen.fns["include"] = [Shen.type_func, function shen_user_lambda7007(Arg7006) {
  if (Arg7006.length < 1) return [Shen.type_func, shen_user_lambda7007, 1, Arg7006];
  var Arg7006_0 = Arg7006[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["intersection"], [Arg7006_0, (Shen.globals["shen.*alldatatypes*"])])),
  (Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["union"], [R0, (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "include"];





Shen.fns["preclude-all-but"] = [Shen.type_func, function shen_user_lambda7009(Arg7008) {
  if (Arg7008.length < 1) return [Shen.type_func, shen_user_lambda7009, 1, Arg7008];
  var Arg7008_0 = Arg7008[0];
  return (function() {
  return Shen.call_tail(Shen.fns["preclude"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Arg7008_0])]);})}, 1, [], "preclude-all-but"];





Shen.fns["include-all-but"] = [Shen.type_func, function shen_user_lambda7011(Arg7010) {
  if (Arg7010.length < 1) return [Shen.type_func, shen_user_lambda7011, 1, Arg7010];
  var Arg7010_0 = Arg7010[0];
  return (function() {
  return Shen.call_tail(Shen.fns["include"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Arg7010_0])]);})}, 1, [], "include-all-but"];





Shen.fns["shen.synonyms-help"] = [Shen.type_func, function shen_user_lambda7013(Arg7012) {
  if (Arg7012.length < 1) return [Shen.type_func, shen_user_lambda7013, 1, Arg7012];
  var Arg7012_0 = Arg7012[0];
  return ((Shen.empty$question$(Arg7012_0))
  ? [Shen.type_symbol, "synonyms"]
  : (((Shen.is_type(Arg7012_0, Shen.type_cons) && Shen.is_type(Arg7012_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.pushnew"], [[Shen.type_cons, Arg7012_0[1], Shen.call(Shen.fns["shen.curry-type"], [Arg7012_0[2][1]])], [Shen.type_symbol, "shen.*synonyms*"]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.synonyms-help"], [Arg7012_0[2][2]]);}))
  : (function() {
  return Shen.simple_error(("odd number of synonyms\x0a" + ""));})))}, 1, [], "shen.synonyms-help"];





Shen.fns["shen.pushnew"] = [Shen.type_func, function shen_user_lambda7015(Arg7014) {
  if (Arg7014.length < 2) return [Shen.type_func, shen_user_lambda7015, 2, Arg7014];
  var Arg7014_0 = Arg7014[0], Arg7014_1 = Arg7014[1];
  return ((Shen.call(Shen.fns["element?"], [Arg7014_0, (Shen.globals[Arg7014_1[1]])]))
  ? (Shen.globals[Arg7014_1[1]])
  : (Shen.globals[Arg7014_1[1]] = [Shen.type_cons, Arg7014_0, (Shen.globals[Arg7014_1[1]])]))}, 2, [], "shen.pushnew"];










Shen.fns["shen.yacc"] = [Shen.type_func, function shen_user_lambda7817(Arg7816) {
  if (Arg7816.length < 1) return [Shen.type_func, shen_user_lambda7817, 1, Arg7816];
  var Arg7816_0 = Arg7816[0];
  return (((Shen.is_type(Arg7816_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7816_0[1])) && (Shen.is_type(Arg7816_0[2], Shen.type_cons) && (Shen.is_type(Arg7816_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg7816_0[2][2][1])) && (Shen.is_type(Arg7816_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg7816_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg7816_0[2][2][2][2][1])) && (Shen.is_type(Arg7816_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg7816_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg7816_0[2][2][2][2][2][2][1])))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg7816_0[2][1], Arg7816_0[2][2][2][2][2][2][2]]]]);})
  : (((Shen.is_type(Arg7816_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7816_0[1])) && Shen.is_type(Arg7816_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc->shen"], [Arg7816_0[2][1], Arg7816_0[2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.yacc"]]);})))}, 1, [], "shen.yacc"];





Shen.fns["shen.yacc->shen"] = [Shen.type_func, function shen_user_lambda7819(Arg7818) {
  if (Arg7818.length < 2) return [Shen.type_func, shen_user_lambda7819, 2, Arg7818];
  var Arg7818_0 = Arg7818[0], Arg7818_1 = Arg7818[1];
  return [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7818_0, Shen.call(Shen.fns["shen.yacc_cases"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.cc_body"], Shen.call(Shen.fns["shen.split_cc_rules"], [Arg7818_1, []])])])]]}, 2, [], "shen.yacc->shen"];





Shen.fns["shen.yacc_cases"] = [Shen.type_func, function shen_user_lambda7821(Arg7820) {
  if (Arg7820.length < 1) return [Shen.type_func, shen_user_lambda7821, 1, Arg7820];
  var Arg7820_0 = Arg7820[0];
  return (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda7823(Arg7822) {
  if (Arg7822.length < 1) return [Shen.type_func, shen_user_lambda7823, 1, Arg7822];
  var Arg7822_0 = Arg7822[0];
  return [Shen.type_cons, [Shen.type_symbol, "Stream"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, Arg7822_0, []]]]}, 1, [], undefined], Arg7820_0]), [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]);})}, 1, [], "shen.yacc_cases"];





Shen.fns["shen.first_n"] = [Shen.type_func, function shen_user_lambda7825(Arg7824) {
  if (Arg7824.length < 2) return [Shen.type_func, shen_user_lambda7825, 2, Arg7824];
  var Arg7824_0 = Arg7824[0], Arg7824_1 = Arg7824[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7824_0)))
  ? []
  : ((Shen.empty$question$(Arg7824_1))
  ? []
  : ((Shen.is_type(Arg7824_1, Shen.type_cons))
  ? [Shen.type_cons, Arg7824_1[1], Shen.call(Shen.fns["shen.first_n"], [(Arg7824_0 - 1), Arg7824_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.first_n"]]);}))))}, 2, [], "shen.first_n"];





Shen.fns["shen.split_cc_rules"] = [Shen.type_func, function shen_user_lambda7827(Arg7826) {
  if (Arg7826.length < 2) return [Shen.type_func, shen_user_lambda7827, 2, Arg7826];
  var Arg7826_0 = Arg7826[0], Arg7826_1 = Arg7826[1];
  return (((Shen.empty$question$(Arg7826_0) && Shen.empty$question$(Arg7826_1)))
  ? []
  : ((Shen.empty$question$(Arg7826_0))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7826_1]), []]), []]
  : (((Shen.is_type(Arg7826_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], Arg7826_0[1]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7826_1]), []]), Shen.call(Shen.fns["shen.split_cc_rules"], [Arg7826_0[2], []])]
  : ((Shen.is_type(Arg7826_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rules"], [Arg7826_0[2], [Shen.type_cons, Arg7826_0[1], Arg7826_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rules"]]);})))))}, 2, [], "shen.split_cc_rules"];





Shen.fns["shen.split_cc_rule"] = [Shen.type_func, function shen_user_lambda7829(Arg7828) {
  if (Arg7828.length < 2) return [Shen.type_func, shen_user_lambda7829, 2, Arg7828];
  var Arg7828_0 = Arg7828[0], Arg7828_1 = Arg7828[1];
  return (((Shen.is_type(Arg7828_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7828_0[1])) && (Shen.is_type(Arg7828_0[2], Shen.type_cons) && Shen.empty$question$(Arg7828_0[2][2])))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7828_1]), Arg7828_0[2]]
  : (((Shen.is_type(Arg7828_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7828_0[1])) && (Shen.is_type(Arg7828_0[2], Shen.type_cons) && (Shen.is_type(Arg7828_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg7828_0[2][2][1])) && (Shen.is_type(Arg7828_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7828_0[2][2][2][2]))))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7828_1]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Arg7828_0[2][2][2][1], [Shen.type_cons, Arg7828_0[2][1], []]]], []]]
  : ((Shen.empty$question$(Arg7828_0))
  ? (Shen.call(Shen.fns["shen.prhush"], ["warning: ", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7831(Arg7830) {
  if (Arg7830.length < 1) return [Shen.type_func, shen_user_lambda7831, 1, Arg7830];
  var Arg7830_0 = Arg7830[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg7830_0, " ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg7828_1])]),
  Shen.call(Shen.fns["shen.prhush"], ["has no semantics.\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [[Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Shen.call(Shen.fns["reverse"], [Arg7828_1])]), []]], Arg7828_1]);}))
  : ((Shen.is_type(Arg7828_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [Arg7828_0[2], [Shen.type_cons, Arg7828_0[1], Arg7828_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rule"]]);})))))}, 2, [], "shen.split_cc_rule"];





Shen.fns["shen.default_semantics"] = [Shen.type_func, function shen_user_lambda7833(Arg7832) {
  if (Arg7832.length < 1) return [Shen.type_func, shen_user_lambda7833, 1, Arg7832];
  var Arg7832_0 = Arg7832[0];
  return ((Shen.empty$question$(Arg7832_0))
  ? []
  : (((Shen.is_type(Arg7832_0, Shen.type_cons) && Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7832_0[1]])))
  ? [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, Arg7832_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg7832_0[2]]), []]]]
  : ((Shen.is_type(Arg7832_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg7832_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg7832_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.default_semantics"]]);}))))}, 1, [], "shen.default_semantics"];





Shen.fns["shen.cc_body"] = [Shen.type_func, function shen_user_lambda7835(Arg7834) {
  if (Arg7834.length < 1) return [Shen.type_func, shen_user_lambda7835, 1, Arg7834];
  var Arg7834_0 = Arg7834[0];
  return (((Shen.is_type(Arg7834_0, Shen.type_cons) && (Shen.is_type(Arg7834_0[2], Shen.type_cons) && Shen.empty$question$(Arg7834_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.syntax"], [Arg7834_0[1], [Shen.type_symbol, "Stream"], Arg7834_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cc_body"]]);}))}, 1, [], "shen.cc_body"];





Shen.fns["shen.syntax"] = [Shen.type_func, function shen_user_lambda7837(Arg7836) {
  if (Arg7836.length < 3) return [Shen.type_func, shen_user_lambda7837, 3, Arg7836];
  var Arg7836_0 = Arg7836[0], Arg7836_1 = Arg7836[1], Arg7836_2 = Arg7836[2];
  return (((Shen.empty$question$(Arg7836_0) && (Shen.is_type(Arg7836_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg7836_2[1])) && (Shen.is_type(Arg7836_2[2], Shen.type_cons) && (Shen.is_type(Arg7836_2[2][2], Shen.type_cons) && Shen.empty$question$(Arg7836_2[2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7836_2[2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7836_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7836_2[2][2][1]]), []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]
  : ((Shen.empty$question$(Arg7836_0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7836_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7836_2]), []]]]
  : ((Shen.is_type(Arg7836_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7836_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.recursive_descent"], [Arg7836_0, Arg7836_1, Arg7836_2]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg7836_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variable-match"], [Arg7836_0, Arg7836_1, Arg7836_2]);})
  : ((Shen.call(Shen.fns["shen.terminal?"], [Arg7836_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check_stream"], [Arg7836_0, Arg7836_1, Arg7836_2]);})
  : ((Shen.call(Shen.fns["shen.jump_stream?"], [Arg7836_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.jump_stream"], [Arg7836_0, Arg7836_1, Arg7836_2]);})
  : ((Shen.call(Shen.fns["shen.list_stream?"], [Arg7836_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list_stream"], [Shen.call(Shen.fns["shen.decons"], [Arg7836_0[1]]), Arg7836_0[2], Arg7836_1, Arg7836_2]);})
  : (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7836_0[1], " is not legal syntax\x0a", [Shen.type_symbol, "shen.a"]]));}))))))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.syntax"]]);}))))}, 3, [], "shen.syntax"];





Shen.fns["shen.list_stream?"] = [Shen.type_func, function shen_user_lambda7839(Arg7838) {
  if (Arg7838.length < 1) return [Shen.type_func, shen_user_lambda7839, 1, Arg7838];
  var Arg7838_0 = Arg7838[0];
  return ((Shen.is_type(Arg7838_0, Shen.type_cons))
  ? true
  : false)}, 1, [], "shen.list_stream?"];





Shen.fns["shen.decons"] = [Shen.type_func, function shen_user_lambda7841(Arg7840) {
  if (Arg7840.length < 1) return [Shen.type_func, shen_user_lambda7841, 1, Arg7840];
  var Arg7840_0 = Arg7840[0];
  return (((Shen.is_type(Arg7840_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg7840_0[1])) && (Shen.is_type(Arg7840_0[2], Shen.type_cons) && (Shen.is_type(Arg7840_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7840_0[2][2][2]))))))
  ? [Shen.type_cons, Arg7840_0[2][1], Shen.call(Shen.fns["shen.decons"], [Arg7840_0[2][2][1]])]
  : Arg7840_0)}, 1, [], "shen.decons"];





Shen.fns["shen.list_stream"] = [Shen.type_func, function shen_user_lambda7843(Arg7842) {
  if (Arg7842.length < 4) return [Shen.type_func, shen_user_lambda7843, 4, Arg7842];
  var Arg7842_0 = Arg7842[0], Arg7842_1 = Arg7842[1], Arg7842_2 = Arg7842[2], Arg7842_3 = Arg7842[3];
  var R0, R1, R2;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7842_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7842_2, []]], []]], []]], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "shen.snd-or-fail"], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7842_0, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7842_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7842_2, []]], []]]], [Shen.type_cons, [Shen.type_symbol, "shen.leave!"], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7842_1, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7842_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7842_2, []]], []]]], Arg7842_3]), []]]]), []]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])}, 4, [], "shen.list_stream"];





Shen.fns["shen.snd-or-fail"] = [Shen.type_func, function shen_user_lambda7845(Arg7844) {
  if (Arg7844.length < 1) return [Shen.type_func, shen_user_lambda7845, 1, Arg7844];
  var Arg7844_0 = Arg7844[0];
  return (((Shen.is_type(Arg7844_0, Shen.type_cons) && (Shen.is_type(Arg7844_0[2], Shen.type_cons) && Shen.empty$question$(Arg7844_0[2][2]))))
  ? Arg7844_0[2][1]
  : Shen.fail_obj)}, 1, [], "shen.snd-or-fail"];





Shen.fns["shen.grammar_symbol?"] = [Shen.type_func, function shen_user_lambda7847(Arg7846) {
  if (Arg7846.length < 1) return [Shen.type_func, shen_user_lambda7847, 1, Arg7846];
  var Arg7846_0 = Arg7846[0];
  var R0;
  return (Shen.is_type(Arg7846_0, Shen.type_symbol) && ((R0 = Shen.call(Shen.fns["explode"], [Arg7846_0])),
  (Shen.unwind_tail(Shen.$eq$(R0[1], "<")) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["reverse"], [R0])[1], ">")))))}, 1, [], "shen.grammar_symbol?"];





Shen.fns["shen.recursive_descent"] = [Shen.type_func, function shen_user_lambda7849(Arg7848) {
  if (Arg7848.length < 3) return [Shen.type_func, shen_user_lambda7849, 3, Arg7848];
  var Arg7848_0 = Arg7848[0], Arg7848_1 = Arg7848[1], Arg7848_2 = Arg7848[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7848_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg7848_0[1], [Shen.type_cons, Arg7848_1, []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7848_0[2], Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7848_0[1]]), Arg7848_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7848_0[1]]), [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7848_0[1]]), []]]], []]], [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursive_descent"]]);}))}, 3, [], "shen.recursive_descent"];





Shen.fns["shen.variable-match"] = [Shen.type_func, function shen_user_lambda7851(Arg7850) {
  if (Arg7850.length < 3) return [Shen.type_func, shen_user_lambda7851, 3, Arg7850];
  var Arg7850_0 = Arg7850[0], Arg7850_1 = Arg7850[1], Arg7850_2 = Arg7850[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7850_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7850_1, []]], []]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7850_0[1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7850_1, []]], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7850_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7850_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7850_1, []]], []]]], Arg7850_2]), []]]]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.variable-match"]]);}))}, 3, [], "shen.variable-match"];





Shen.fns["shen.terminal?"] = [Shen.type_func, function shen_user_lambda7853(Arg7852) {
  if (Arg7852.length < 1) return [Shen.type_func, shen_user_lambda7853, 1, Arg7852];
  var Arg7852_0 = Arg7852[0];
  return ((Shen.is_type(Arg7852_0, Shen.type_cons))
  ? false
  : ((Shen.call(Shen.fns["variable?"], [Arg7852_0]))
  ? false
  : true))}, 1, [], "shen.terminal?"];





Shen.fns["shen.jump_stream?"] = [Shen.type_func, function shen_user_lambda7855(Arg7854) {
  if (Arg7854.length < 1) return [Shen.type_func, shen_user_lambda7855, 1, Arg7854];
  var Arg7854_0 = Arg7854[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7854_0, [Shen.type_symbol, "_"])))
  ? true
  : false)}, 1, [], "shen.jump_stream?"];





Shen.fns["shen.check_stream"] = [Shen.type_func, function shen_user_lambda7857(Arg7856) {
  if (Arg7856.length < 3) return [Shen.type_func, shen_user_lambda7857, 3, Arg7856];
  var Arg7856_0 = Arg7856[0], Arg7856_1 = Arg7856[1], Arg7856_2 = Arg7856[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7856_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7856_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg7856_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7856_1, []]], []]], []]]], []]]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7856_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7856_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7856_1, []]], []]]], Arg7856_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.check_stream"]]);}))}, 3, [], "shen.check_stream"];





Shen.fns["shen.jump_stream"] = [Shen.type_func, function shen_user_lambda7859(Arg7858) {
  if (Arg7858.length < 3) return [Shen.type_func, shen_user_lambda7859, 3, Arg7858];
  var Arg7858_0 = Arg7858[0], Arg7858_1 = Arg7858[1], Arg7858_2 = Arg7858[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7858_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7858_1, []]], []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7858_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7858_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7858_1, []]], []]]], Arg7858_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.jump_stream"]]);}))}, 3, [], "shen.jump_stream"];





Shen.fns["shen.semantics"] = [Shen.type_func, function shen_user_lambda7861(Arg7860) {
  if (Arg7860.length < 1) return [Shen.type_func, shen_user_lambda7861, 1, Arg7860];
  var Arg7860_0 = Arg7860[0];
  return (((Shen.is_type(Arg7860_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.leave!"], Arg7860_0[1])) && (Shen.is_type(Arg7860_0[2], Shen.type_cons) && Shen.empty$question$(Arg7860_0[2][2])))))
  ? Arg7860_0[2][1]
  : ((Shen.empty$question$(Arg7860_0))
  ? []
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7860_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7860_0]), []]]
  : ((Shen.call(Shen.fns["variable?"], [Arg7860_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7860_0]);})
  : ((Shen.is_type(Arg7860_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.semantics"], Arg7860_0]);})
  : Arg7860_0)))))}, 1, [], "shen.semantics"];





Shen.fns["shen.pair"] = [Shen.type_func, function shen_user_lambda7863(Arg7862) {
  if (Arg7862.length < 2) return [Shen.type_func, shen_user_lambda7863, 2, Arg7862];
  var Arg7862_0 = Arg7862[0], Arg7862_1 = Arg7862[1];
  return [Shen.type_cons, Arg7862_0, [Shen.type_cons, Arg7862_1, []]]}, 2, [], "shen.pair"];





Shen.fns["shen.hdtl"] = [Shen.type_func, function shen_user_lambda7865(Arg7864) {
  if (Arg7864.length < 1) return [Shen.type_func, shen_user_lambda7865, 1, Arg7864];
  var Arg7864_0 = Arg7864[0];
  return Arg7864_0[2][1]}, 1, [], "shen.hdtl"];





Shen.fns["<!>"] = [Shen.type_func, function shen_user_lambda7867(Arg7866) {
  if (Arg7866.length < 1) return [Shen.type_func, shen_user_lambda7867, 1, Arg7866];
  var Arg7866_0 = Arg7866[0];
  return (((Shen.is_type(Arg7866_0, Shen.type_cons) && (Shen.is_type(Arg7866_0[2], Shen.type_cons) && Shen.empty$question$(Arg7866_0[2][2]))))
  ? [Shen.type_cons, [], [Shen.type_cons, Arg7866_0[1], []]]
  : Shen.fail_obj)}, 1, [], "<!>"];





Shen.fns["<e>"] = [Shen.type_func, function shen_user_lambda7869(Arg7868) {
  if (Arg7868.length < 1) return [Shen.type_func, shen_user_lambda7869, 1, Arg7868];
  var Arg7868_0 = Arg7868[0];
  return (((Shen.is_type(Arg7868_0, Shen.type_cons) && (Shen.is_type(Arg7868_0[2], Shen.type_cons) && Shen.empty$question$(Arg7868_0[2][2]))))
  ? [Shen.type_cons, Arg7868_0[1], [Shen.type_cons, [], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "<e>"]]);}))}, 1, [], "<e>"];










Shen.fns["print"] = [Shen.type_func, function shen_user_lambda7760(Arg7759) {
  if (Arg7759.length < 1) return [Shen.type_func, shen_user_lambda7760, 1, Arg7759];
  var Arg7759_0 = Arg7759[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.insert"], [Arg7759_0, "~S"])),
  Shen.call(Shen.fns["shen.prhush"], [R0, Shen.call(Shen.fns["stoutput"], [])]),
  Arg7759_0)}, 1, [], "print"];





Shen.fns["shen.prhush"] = [Shen.type_func, function shen_user_lambda7762(Arg7761) {
  if (Arg7761.length < 2) return [Shen.type_func, shen_user_lambda7762, 2, Arg7761];
  var Arg7761_0 = Arg7761[0], Arg7761_1 = Arg7761[1];
  return (((Shen.globals["*hush*"]))
  ? Arg7761_0
  : (function() {
  return Shen.pr(Arg7761_0, Arg7761_1);}))}, 2, [], "shen.prhush"];





Shen.fns["shen.mkstr"] = [Shen.type_func, function shen_user_lambda7764(Arg7763) {
  if (Arg7763.length < 2) return [Shen.type_func, shen_user_lambda7764, 2, Arg7763];
  var Arg7763_0 = Arg7763[0], Arg7763_1 = Arg7763[1];
  return (((typeof(Arg7763_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg7763_0]), Arg7763_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, Arg7763_0, []]], Arg7763_1]);}))}, 2, [], "shen.mkstr"];





Shen.fns["shen.mkstr-l"] = [Shen.type_func, function shen_user_lambda7766(Arg7765) {
  if (Arg7765.length < 2) return [Shen.type_func, shen_user_lambda7766, 2, Arg7765];
  var Arg7765_0 = Arg7765[0], Arg7765_1 = Arg7765[1];
  return ((Shen.empty$question$(Arg7765_1))
  ? Arg7765_0
  : ((Shen.is_type(Arg7765_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.insert-l"], [Arg7765_1[1], Arg7765_0]), Arg7765_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-l"]]);})))}, 2, [], "shen.mkstr-l"];





Shen.fns["shen.insert-l"] = [Shen.type_func, function shen_user_lambda7768(Arg7767) {
  if (Arg7767.length < 2) return [Shen.type_func, shen_user_lambda7768, 2, Arg7767];
  var Arg7767_0 = Arg7767[0], Arg7767_1 = Arg7767[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7767_1)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7767_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7767_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7767_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg7767_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7767_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7767_1)), [Shen.type_cons, [Shen.type_symbol, "shen.a"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7767_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7767_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7767_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg7767_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7767_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7767_1)), [Shen.type_cons, [Shen.type_symbol, "shen.r"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7767_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7767_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7767_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg7767_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7767_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7767_1)), [Shen.type_cons, [Shen.type_symbol, "shen.s"], []]]]]
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7767_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.factor-cn"], [[Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg7767_1[0], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7767_0, Shen.tlstr(Arg7767_1)]), []]]]]);})
  : (((Shen.is_type(Arg7767_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7767_1[1])) && (Shen.is_type(Arg7767_1[2], Shen.type_cons) && (Shen.is_type(Arg7767_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg7767_1[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg7767_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7767_0, Arg7767_1[2][2][1]]), []]]]
  : (((Shen.is_type(Arg7767_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.app"], Arg7767_1[1])) && (Shen.is_type(Arg7767_1[2], Shen.type_cons) && (Shen.is_type(Arg7767_1[2][2], Shen.type_cons) && (Shen.is_type(Arg7767_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7767_1[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7767_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7767_0, Arg7767_1[2][2][1]]), Arg7767_1[2][2][2]]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-l"]]);}))))))))}, 2, [], "shen.insert-l"];





Shen.fns["shen.factor-cn"] = [Shen.type_func, function shen_user_lambda7770(Arg7769) {
  if (Arg7769.length < 1) return [Shen.type_func, shen_user_lambda7770, 1, Arg7769];
  var Arg7769_0 = Arg7769[0];
  return (((Shen.is_type(Arg7769_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7769_0[1])) && (Shen.is_type(Arg7769_0[2], Shen.type_cons) && (Shen.is_type(Arg7769_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7769_0[2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7769_0[2][2][1][1])) && (Shen.is_type(Arg7769_0[2][2][1][2], Shen.type_cons) && (Shen.is_type(Arg7769_0[2][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7769_0[2][2][1][2][2][2]) && (Shen.empty$question$(Arg7769_0[2][2][2]) && ((typeof(Arg7769_0[2][1]) == 'string') && (typeof(Arg7769_0[2][2][1][2][1]) == 'string')))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, (Arg7769_0[2][1] + Arg7769_0[2][2][1][2][1]), Arg7769_0[2][2][1][2][2]]]
  : Arg7769_0)}, 1, [], "shen.factor-cn"];





Shen.fns["shen.proc-nl"] = [Shen.type_func, function shen_user_lambda7772(Arg7771) {
  if (Arg7771.length < 1) return [Shen.type_func, shen_user_lambda7772, 1, Arg7771];
  var Arg7771_0 = Arg7771[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7771_0)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7771_0]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7771_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7771_0)]) && Shen.unwind_tail(Shen.$eq$("%", Shen.tlstr(Arg7771_0)[0]))))))
  ? (Shen.n_$gt$string(10) + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Shen.tlstr(Arg7771_0))]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7771_0]))
  ? (Arg7771_0[0] + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Arg7771_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.proc-nl"]]);}))))}, 1, [], "shen.proc-nl"];





Shen.fns["shen.mkstr-r"] = [Shen.type_func, function shen_user_lambda7774(Arg7773) {
  if (Arg7773.length < 2) return [Shen.type_func, shen_user_lambda7774, 2, Arg7773];
  var Arg7773_0 = Arg7773[0], Arg7773_1 = Arg7773[1];
  return ((Shen.empty$question$(Arg7773_1))
  ? Arg7773_0
  : ((Shen.is_type(Arg7773_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.insert"], [Shen.type_cons, Arg7773_1[1], [Shen.type_cons, Arg7773_0, []]]], Arg7773_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-r"]]);})))}, 2, [], "shen.mkstr-r"];





Shen.fns["shen.insert"] = [Shen.type_func, function shen_user_lambda7776(Arg7775) {
  if (Arg7775.length < 2) return [Shen.type_func, shen_user_lambda7776, 2, Arg7775];
  var Arg7775_0 = Arg7775[0], Arg7775_1 = Arg7775[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-h"], [Arg7775_0, Arg7775_1, ""]);})}, 2, [], "shen.insert"];





Shen.fns["shen.insert-h"] = [Shen.type_func, function shen_user_lambda7778(Arg7777) {
  if (Arg7777.length < 3) return [Shen.type_func, shen_user_lambda7778, 3, Arg7777];
  var Arg7777_0 = Arg7777[0], Arg7777_1 = Arg7777[1], Arg7777_2 = Arg7777[2];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7777_1)))
  ? Arg7777_2
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7777_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7777_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7777_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg7777_1)[0]))))))
  ? (Arg7777_2 + Shen.call(Shen.fns["shen.app"], [Arg7777_0, Shen.tlstr(Shen.tlstr(Arg7777_1)), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7777_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7777_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7777_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg7777_1)[0]))))))
  ? (Arg7777_2 + Shen.call(Shen.fns["shen.app"], [Arg7777_0, Shen.tlstr(Shen.tlstr(Arg7777_1)), [Shen.type_symbol, "shen.r"]]))
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7777_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7777_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7777_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg7777_1)[0]))))))
  ? (Arg7777_2 + Shen.call(Shen.fns["shen.app"], [Arg7777_0, Shen.tlstr(Shen.tlstr(Arg7777_1)), [Shen.type_symbol, "shen.s"]]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7777_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-h"], [Arg7777_0, Shen.tlstr(Arg7777_1), (Arg7777_2 + Arg7777_1[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-h"]]);}))))))}, 3, [], "shen.insert-h"];





Shen.fns["shen.app"] = [Shen.type_func, function shen_user_lambda7780(Arg7779) {
  if (Arg7779.length < 3) return [Shen.type_func, shen_user_lambda7780, 3, Arg7779];
  var Arg7779_0 = Arg7779[0], Arg7779_1 = Arg7779[1], Arg7779_2 = Arg7779[2];
  return (Shen.call(Shen.fns["shen.arg->str"], [Arg7779_0, Arg7779_2]) + Arg7779_1)}, 3, [], "shen.app"];





Shen.fns["shen.arg->str"] = [Shen.type_func, function shen_user_lambda7782(Arg7781) {
  if (Arg7781.length < 2) return [Shen.type_func, shen_user_lambda7782, 2, Arg7781];
  var Arg7781_0 = Arg7781[0], Arg7781_1 = Arg7781[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7781_0, Shen.fail_obj)))
  ? "..."
  : ((Shen.call(Shen.fns["shen.list?"], [Arg7781_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list->str"], [Arg7781_0, Arg7781_1]);})
  : (((typeof(Arg7781_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.str->str"], [Arg7781_0, Arg7781_1]);})
  : ((Shen.absvector$question$(Arg7781_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.vector->str"], [Arg7781_0, Arg7781_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.atom->str"], [Arg7781_0]);})))))}, 2, [], "shen.arg->str"];





Shen.fns["shen.list->str"] = [Shen.type_func, function shen_user_lambda7784(Arg7783) {
  if (Arg7783.length < 2) return [Shen.type_func, shen_user_lambda7784, 2, Arg7783];
  var Arg7783_0 = Arg7783[0], Arg7783_1 = Arg7783[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.r"], Arg7783_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["(", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg7783_0, [Shen.type_symbol, "shen.r"], Shen.call(Shen.fns["shen.maxseq"], [])]), ")"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg7783_0, Arg7783_1, Shen.call(Shen.fns["shen.maxseq"], [])]), "]"])]);}))}, 2, [], "shen.list->str"];





Shen.fns["shen.maxseq"] = [Shen.type_func, function shen_user_lambda7786(Arg7785) {
  if (Arg7785.length < 0) return [Shen.type_func, shen_user_lambda7786, 0, Arg7785];
  return (Shen.globals["*maximum-print-sequence-size*"])}, 0, [], "shen.maxseq"];





Shen.fns["shen.iter-list"] = [Shen.type_func, function shen_user_lambda7788(Arg7787) {
  if (Arg7787.length < 3) return [Shen.type_func, shen_user_lambda7788, 3, Arg7787];
  var Arg7787_0 = Arg7787[0], Arg7787_1 = Arg7787[1], Arg7787_2 = Arg7787[2];
  return ((Shen.empty$question$(Arg7787_0))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg7787_2)))
  ? "... etc"
  : (((Shen.is_type(Arg7787_0, Shen.type_cons) && Shen.empty$question$(Arg7787_0[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [Arg7787_0[1], Arg7787_1]);})
  : ((Shen.is_type(Arg7787_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Arg7787_0[1], Arg7787_1]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-list"], [Arg7787_0[2], Arg7787_1, (Arg7787_2 - 1)])])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [" ", Shen.call(Shen.fns["@s"], ["|", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.arg->str"], [Arg7787_0, Arg7787_1])])])]);})))))}, 3, [], "shen.iter-list"];





Shen.fns["shen.str->str"] = [Shen.type_func, function shen_user_lambda7790(Arg7789) {
  if (Arg7789.length < 2) return [Shen.type_func, shen_user_lambda7790, 2, Arg7789];
  var Arg7789_0 = Arg7789[0], Arg7789_1 = Arg7789[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg7789_1)))
  ? Arg7789_0
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(34), Shen.call(Shen.fns["@s"], [Arg7789_0, Shen.n_$gt$string(34)])]);}))}, 2, [], "shen.str->str"];





Shen.fns["shen.vector->str"] = [Shen.type_func, function shen_user_lambda7792(Arg7791) {
  if (Arg7791.length < 2) return [Shen.type_func, shen_user_lambda7792, 2, Arg7791];
  var Arg7791_0 = Arg7791[0], Arg7791_1 = Arg7791[1];
  return ((Shen.call(Shen.fns["shen.print-vector?"], [Arg7791_0]))
  ? (function() {
  return Shen.call_tail(Shen.absvector_ref(Arg7791_0, 0), [Arg7791_0]);})
  : ((Shen.vector$question$(Arg7791_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg7791_0, 1, Arg7791_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg7791_0, 0, Arg7791_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">>"])])]);})))}, 2, [], "shen.vector->str"];





Shen.fns["shen.print-vector?"] = [Shen.type_func, function shen_user_lambda7794(Arg7793) {
  if (Arg7793.length < 1) return [Shen.type_func, shen_user_lambda7794, 1, Arg7793];
  var Arg7793_0 = Arg7793[0];
  var R0;
  return ((R0 = Shen.absvector_ref(Arg7793_0, 0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.tuple"])))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.pvar"])))
  ? true
  : (((!(typeof(R0) == 'number')))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.fbound?"], [R0]);})
  : false))))}, 1, [], "shen.print-vector?"];





Shen.fns["shen.fbound?"] = [Shen.type_func, function shen_user_lambda7796(Arg7795) {
  if (Arg7795.length < 1) return [Shen.type_func, shen_user_lambda7796, 1, Arg7795];
  var Arg7795_0 = Arg7795[0];
  return (function() {
  return Shen.trap_error(function() {return (Shen.call(Shen.fns["ps"], [Arg7795_0]),
  true);}, [Shen.type_func, function shen_user_lambda7798(Arg7797) {
  if (Arg7797.length < 1) return [Shen.type_func, shen_user_lambda7798, 1, Arg7797];
  var Arg7797_0 = Arg7797[0];
  return false}, 1, [], undefined]);})}, 1, [], "shen.fbound?"];





Shen.fns["shen.tuple"] = [Shen.type_func, function shen_user_lambda7800(Arg7799) {
  if (Arg7799.length < 1) return [Shen.type_func, shen_user_lambda7800, 1, Arg7799];
  var Arg7799_0 = Arg7799[0];
  return ("(@p " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg7799_0, 1), (" " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg7799_0, 2), ")", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.s"]]))}, 1, [], "shen.tuple"];





Shen.fns["shen.iter-vector"] = [Shen.type_func, function shen_user_lambda7802(Arg7801) {
  if (Arg7801.length < 4) return [Shen.type_func, shen_user_lambda7802, 4, Arg7801];
  var Arg7801_0 = Arg7801[0], Arg7801_1 = Arg7801[1], Arg7801_2 = Arg7801[2], Arg7801_3 = Arg7801[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7801_3)))
  ? "... etc"
  : ((R0 = Shen.trap_error(function() {return Shen.absvector_ref(Arg7801_0, Arg7801_1);}, [Shen.type_func, function shen_user_lambda7804(Arg7803) {
  if (Arg7803.length < 1) return [Shen.type_func, shen_user_lambda7804, 1, Arg7803];
  var Arg7803_0 = Arg7803[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined])),
  (R1 = Shen.trap_error(function() {return Shen.absvector_ref(Arg7801_0, (Arg7801_1 + 1));}, [Shen.type_func, function shen_user_lambda7806(Arg7805) {
  if (Arg7805.length < 1) return [Shen.type_func, shen_user_lambda7806, 1, Arg7805];
  var Arg7805_0 = Arg7805[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [R0, Arg7801_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [R0, Arg7801_2]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-vector"], [Arg7801_0, (Arg7801_1 + 1), Arg7801_2, (Arg7801_3 - 1)])])]);})))))}, 4, [], "shen.iter-vector"];





Shen.fns["shen.atom->str"] = [Shen.type_func, function shen_user_lambda7808(Arg7807) {
  if (Arg7807.length < 1) return [Shen.type_func, shen_user_lambda7808, 1, Arg7807];
  var Arg7807_0 = Arg7807[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.str(Arg7807_0);}, [Shen.type_func, function shen_user_lambda7810(Arg7809) {
  if (Arg7809.length < 1) return [Shen.type_func, shen_user_lambda7810, 1, Arg7809];
  var Arg7809_0 = Arg7809[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.funexstring"], []);})}, 1, [], undefined]);})}, 1, [], "shen.atom->str"];





Shen.fns["shen.funexstring"] = [Shen.type_func, function shen_user_lambda7812(Arg7811) {
  if (Arg7811.length < 0) return [Shen.type_func, shen_user_lambda7812, 0, Arg7811];
  return (function() {
  return Shen.call_tail(Shen.fns["@s"], ["", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "x"]]), [Shen.type_symbol, "shen.a"]]), ""])])])])])]);})}, 0, [], "shen.funexstring"];





Shen.fns["shen.list?"] = [Shen.type_func, function shen_user_lambda7814(Arg7813) {
  if (Arg7813.length < 1) return [Shen.type_func, shen_user_lambda7814, 1, Arg7813];
  var Arg7813_0 = Arg7813[0];
  return (Shen.empty$question$(Arg7813_0) || Shen.is_type(Arg7813_0, Shen.type_cons))}, 1, [], "shen.list?"];










Shen.fns["lineread"] = [Shen.type_func, function shen_user_lambda6772(Arg6771) {
  if (Arg6771.length < 0) return [Shen.type_func, shen_user_lambda6772, 0, Arg6771];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), []]);})}, 0, [], "lineread"];





Shen.fns["shen.lineread-loop"] = [Shen.type_func, function shen_user_lambda6774(Arg6773) {
  if (Arg6773.length < 2) return [Shen.type_func, shen_user_lambda6774, 2, Arg6773];
  var Arg6773_0 = Arg6773[0], Arg6773_1 = Arg6773[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6773_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg6773_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg6773_1, [Shen.type_func, function shen_user_lambda6776(Arg6775) {
  if (Arg6775.length < 1) return [Shen.type_func, shen_user_lambda6776, 1, Arg6775];
  var Arg6775_0 = Arg6775[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg6773_1, [Shen.type_cons, Arg6773_0, []]])]);})
  : R0))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg6773_1, [Shen.type_cons, Arg6773_0, []]])]);})))}, 2, [], "shen.lineread-loop"];





Shen.fns["read-file"] = [Shen.type_func, function shen_user_lambda6778(Arg6777) {
  if (Arg6777.length < 1) return [Shen.type_func, shen_user_lambda6778, 1, Arg6777];
  var Arg6777_0 = Arg6777[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["read-file-as-bytelist"], [Arg6777_0])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R0, [Shen.type_symbol, "shen.read-error"]]);}))}, 1, [], "read-file"];





Shen.fns["shen.read-error"] = [Shen.type_func, function shen_user_lambda6780(Arg6779) {
  if (Arg6779.length < 1) return [Shen.type_func, shen_user_lambda6780, 1, Arg6779];
  var Arg6779_0 = Arg6779[0];
  return (((Shen.is_type(Arg6779_0, Shen.type_cons) && (Shen.is_type(Arg6779_0[1], Shen.type_cons) && (Shen.is_type(Arg6779_0[2], Shen.type_cons) && Shen.empty$question$(Arg6779_0[2][2])))))
  ? (function() {
  return Shen.simple_error(("read error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.compress-50"], [50, Arg6779_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error("read error\x0a");}))}, 1, [], "shen.read-error"];





Shen.fns["shen.compress-50"] = [Shen.type_func, function shen_user_lambda6782(Arg6781) {
  if (Arg6781.length < 2) return [Shen.type_func, shen_user_lambda6782, 2, Arg6781];
  var Arg6781_0 = Arg6781[0], Arg6781_1 = Arg6781[1];
  return ((Shen.empty$question$(Arg6781_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6781_0)))
  ? ""
  : ((Shen.is_type(Arg6781_1, Shen.type_cons))
  ? (Shen.n_$gt$string(Arg6781_1[1]) + Shen.call(Shen.fns["shen.compress-50"], [(Arg6781_0 - 1), Arg6781_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compress-50"]]);}))))}, 2, [], "shen.compress-50"];





Shen.fns["shen.<st_input>"] = [Shen.type_func, function shen_user_lambda6784(Arg6783) {
  if (Arg6783.length < 1) return [Shen.type_func, shen_user_lambda6784, 1, Arg6783];
  var Arg6783_0 = Arg6783[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<lsb>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rsb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lrb>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rrb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.package-macro"], [Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lcurly>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "{"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rcurly>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "}"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<bar>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "bar!"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<semicolon>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ";"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<equal>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":="], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<minus>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comma>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ","], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<atom>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6783_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<st_input>"];





Shen.fns["shen.<lsb>"] = [Shen.type_func, function shen_user_lambda6786(Arg6785) {
  if (Arg6785.length < 1) return [Shen.type_func, shen_user_lambda6786, 1, Arg6785];
  var Arg6785_0 = Arg6785[0];
  var R0;
  return ((((Shen.is_type(Arg6785_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(91, Arg6785_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6785_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6785_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lsb>"];





Shen.fns["shen.<rsb>"] = [Shen.type_func, function shen_user_lambda6788(Arg6787) {
  if (Arg6787.length < 1) return [Shen.type_func, shen_user_lambda6788, 1, Arg6787];
  var Arg6787_0 = Arg6787[0];
  var R0;
  return ((((Shen.is_type(Arg6787_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(93, Arg6787_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6787_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6787_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rsb>"];





Shen.fns["shen.<lcurly>"] = [Shen.type_func, function shen_user_lambda6790(Arg6789) {
  if (Arg6789.length < 1) return [Shen.type_func, shen_user_lambda6790, 1, Arg6789];
  var Arg6789_0 = Arg6789[0];
  var R0;
  return ((((Shen.is_type(Arg6789_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(123, Arg6789_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6789_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6789_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lcurly>"];





Shen.fns["shen.<rcurly>"] = [Shen.type_func, function shen_user_lambda6792(Arg6791) {
  if (Arg6791.length < 1) return [Shen.type_func, shen_user_lambda6792, 1, Arg6791];
  var Arg6791_0 = Arg6791[0];
  var R0;
  return ((((Shen.is_type(Arg6791_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(125, Arg6791_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6791_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6791_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rcurly>"];





Shen.fns["shen.<bar>"] = [Shen.type_func, function shen_user_lambda6794(Arg6793) {
  if (Arg6793.length < 1) return [Shen.type_func, shen_user_lambda6794, 1, Arg6793];
  var Arg6793_0 = Arg6793[0];
  var R0;
  return ((((Shen.is_type(Arg6793_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(124, Arg6793_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6793_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6793_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<bar>"];





Shen.fns["shen.<semicolon>"] = [Shen.type_func, function shen_user_lambda6796(Arg6795) {
  if (Arg6795.length < 1) return [Shen.type_func, shen_user_lambda6796, 1, Arg6795];
  var Arg6795_0 = Arg6795[0];
  var R0;
  return ((((Shen.is_type(Arg6795_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(59, Arg6795_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6795_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6795_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon>"];





Shen.fns["shen.<colon>"] = [Shen.type_func, function shen_user_lambda6798(Arg6797) {
  if (Arg6797.length < 1) return [Shen.type_func, shen_user_lambda6798, 1, Arg6797];
  var Arg6797_0 = Arg6797[0];
  var R0;
  return ((((Shen.is_type(Arg6797_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(58, Arg6797_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6797_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6797_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<colon>"];





Shen.fns["shen.<comma>"] = [Shen.type_func, function shen_user_lambda6800(Arg6799) {
  if (Arg6799.length < 1) return [Shen.type_func, shen_user_lambda6800, 1, Arg6799];
  var Arg6799_0 = Arg6799[0];
  var R0;
  return ((((Shen.is_type(Arg6799_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(44, Arg6799_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6799_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6799_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma>"];





Shen.fns["shen.<equal>"] = [Shen.type_func, function shen_user_lambda6802(Arg6801) {
  if (Arg6801.length < 1) return [Shen.type_func, shen_user_lambda6802, 1, Arg6801];
  var Arg6801_0 = Arg6801[0];
  var R0;
  return ((((Shen.is_type(Arg6801_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(61, Arg6801_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6801_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6801_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<equal>"];





Shen.fns["shen.<minus>"] = [Shen.type_func, function shen_user_lambda6804(Arg6803) {
  if (Arg6803.length < 1) return [Shen.type_func, shen_user_lambda6804, 1, Arg6803];
  var Arg6803_0 = Arg6803[0];
  var R0;
  return ((((Shen.is_type(Arg6803_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(45, Arg6803_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6803_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6803_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<minus>"];





Shen.fns["shen.<lrb>"] = [Shen.type_func, function shen_user_lambda6806(Arg6805) {
  if (Arg6805.length < 1) return [Shen.type_func, shen_user_lambda6806, 1, Arg6805];
  var Arg6805_0 = Arg6805[0];
  var R0;
  return ((((Shen.is_type(Arg6805_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(40, Arg6805_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6805_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6805_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lrb>"];





Shen.fns["shen.<rrb>"] = [Shen.type_func, function shen_user_lambda6808(Arg6807) {
  if (Arg6807.length < 1) return [Shen.type_func, shen_user_lambda6808, 1, Arg6807];
  var Arg6807_0 = Arg6807[0];
  var R0;
  return ((((Shen.is_type(Arg6807_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(41, Arg6807_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6807_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6807_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rrb>"];





Shen.fns["shen.<atom>"] = [Shen.type_func, function shen_user_lambda6810(Arg6809) {
  if (Arg6809.length < 1) return [Shen.type_func, shen_user_lambda6810, 1, Arg6809];
  var Arg6809_0 = Arg6809[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<str>"], [Arg6809_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.control-chars"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<number>"], [Arg6809_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<sym>"], [Arg6809_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["shen.hdtl"], [R0]), "<>")))
  ? [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]
  : Shen.intern(Shen.call(Shen.fns["shen.hdtl"], [R0])))]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<atom>"];





Shen.fns["shen.control-chars"] = [Shen.type_func, function shen_user_lambda6812(Arg6811) {
  if (Arg6811.length < 1) return [Shen.type_func, shen_user_lambda6812, 1, Arg6811];
  var Arg6811_0 = Arg6811[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6811_0))
  ? ""
  : (((Shen.is_type(Arg6811_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("c", Arg6811_0[1])) && (Shen.is_type(Arg6811_0[2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("#", Arg6811_0[2][1]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.code-point"], [Arg6811_0[2][2]])),
  (R1 = Shen.call(Shen.fns["shen.after-codepoint"], [Arg6811_0[2][2]])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(Shen.call(Shen.fns["shen.decimalise"], [R0])), Shen.call(Shen.fns["shen.control-chars"], [R1])]);}))
  : ((Shen.is_type(Arg6811_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Arg6811_0[1], Shen.call(Shen.fns["shen.control-chars"], [Arg6811_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.control-chars"]]);}))))}, 1, [], "shen.control-chars"];





Shen.fns["shen.code-point"] = [Shen.type_func, function shen_user_lambda6814(Arg6813) {
  if (Arg6813.length < 1) return [Shen.type_func, shen_user_lambda6814, 1, Arg6813];
  var Arg6813_0 = Arg6813[0];
  return (((Shen.is_type(Arg6813_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6813_0[1]))))
  ? ""
  : (((Shen.is_type(Arg6813_0, Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6813_0[1], [Shen.type_cons, "0", [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]])))
  ? [Shen.type_cons, Arg6813_0[1], Shen.call(Shen.fns["shen.code-point"], [Arg6813_0[2]])]
  : (function() {
  return Shen.simple_error(("code point parse error " + Shen.call(Shen.fns["shen.app"], [Arg6813_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})))}, 1, [], "shen.code-point"];





Shen.fns["shen.after-codepoint"] = [Shen.type_func, function shen_user_lambda6816(Arg6815) {
  if (Arg6815.length < 1) return [Shen.type_func, shen_user_lambda6816, 1, Arg6815];
  var Arg6815_0 = Arg6815[0];
  return ((Shen.empty$question$(Arg6815_0))
  ? []
  : (((Shen.is_type(Arg6815_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6815_0[1]))))
  ? Arg6815_0[2]
  : ((Shen.is_type(Arg6815_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.after-codepoint"], [Arg6815_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.after-codepoint"]]);}))))}, 1, [], "shen.after-codepoint"];





Shen.fns["shen.decimalise"] = [Shen.type_func, function shen_user_lambda6818(Arg6817) {
  if (Arg6817.length < 1) return [Shen.type_func, shen_user_lambda6818, 1, Arg6817];
  var Arg6817_0 = Arg6817[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.digits->integers"], [Arg6817_0])]), 0]);})}, 1, [], "shen.decimalise"];





Shen.fns["shen.digits->integers"] = [Shen.type_func, function shen_user_lambda6820(Arg6819) {
  if (Arg6819.length < 1) return [Shen.type_func, shen_user_lambda6820, 1, Arg6819];
  var Arg6819_0 = Arg6819[0];
  return (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("0", Arg6819_0[1]))))
  ? [Shen.type_cons, 0, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("1", Arg6819_0[1]))))
  ? [Shen.type_cons, 1, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("2", Arg6819_0[1]))))
  ? [Shen.type_cons, 2, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("3", Arg6819_0[1]))))
  ? [Shen.type_cons, 3, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("4", Arg6819_0[1]))))
  ? [Shen.type_cons, 4, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("5", Arg6819_0[1]))))
  ? [Shen.type_cons, 5, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("6", Arg6819_0[1]))))
  ? [Shen.type_cons, 6, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("7", Arg6819_0[1]))))
  ? [Shen.type_cons, 7, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("8", Arg6819_0[1]))))
  ? [Shen.type_cons, 8, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : (((Shen.is_type(Arg6819_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("9", Arg6819_0[1]))))
  ? [Shen.type_cons, 9, Shen.call(Shen.fns["shen.digits->integers"], [Arg6819_0[2]])]
  : []))))))))))}, 1, [], "shen.digits->integers"];





Shen.fns["shen.<sym>"] = [Shen.type_func, function shen_user_lambda6822(Arg6821) {
  if (Arg6821.length < 1) return [Shen.type_func, shen_user_lambda6822, 1, Arg6821];
  var Arg6821_0 = Arg6821[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6821_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sym>"];





Shen.fns["shen.<alphanums>"] = [Shen.type_func, function shen_user_lambda6824(Arg6823) {
  if (Arg6823.length < 1) return [Shen.type_func, shen_user_lambda6824, 1, Arg6823];
  var Arg6823_0 = Arg6823[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alphanum>"], [Arg6823_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6823_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ""]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanums>"];





Shen.fns["shen.<alphanum>"] = [Shen.type_func, function shen_user_lambda6826(Arg6825) {
  if (Arg6825.length < 1) return [Shen.type_func, shen_user_lambda6826, 1, Arg6825];
  var Arg6825_0 = Arg6825[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6825_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<num>"], [Arg6825_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanum>"];





Shen.fns["shen.<num>"] = [Shen.type_func, function shen_user_lambda6828(Arg6827) {
  if (Arg6827.length < 1) return [Shen.type_func, shen_user_lambda6828, 1, Arg6827];
  var Arg6827_0 = Arg6827[0];
  var R0;
  return (((Shen.is_type(Arg6827_0[1], Shen.type_cons))
  ? ((R0 = Arg6827_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6827_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6827_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<num>"];





Shen.fns["shen.numbyte?"] = [Shen.type_func, function shen_user_lambda6830(Arg6829) {
  if (Arg6829.length < 1) return [Shen.type_func, shen_user_lambda6830, 1, Arg6829];
  var Arg6829_0 = Arg6829[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6829_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6829_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6829_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6829_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6829_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6829_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6829_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6829_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6829_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6829_0)))
  ? true
  : false))))))))))}, 1, [], "shen.numbyte?"];





Shen.fns["shen.<alpha>"] = [Shen.type_func, function shen_user_lambda6832(Arg6831) {
  if (Arg6831.length < 1) return [Shen.type_func, shen_user_lambda6832, 1, Arg6831];
  var Arg6831_0 = Arg6831[0];
  var R0;
  return (((Shen.is_type(Arg6831_0[1], Shen.type_cons))
  ? ((R0 = Arg6831_0[1][1]),
  ((Shen.call(Shen.fns["shen.symbol-code?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6831_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6831_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<alpha>"];





Shen.fns["shen.symbol-code?"] = [Shen.type_func, function shen_user_lambda6834(Arg6833) {
  if (Arg6833.length < 1) return [Shen.type_func, shen_user_lambda6834, 1, Arg6833];
  var Arg6833_0 = Arg6833[0];
  return (Shen.unwind_tail(Shen.$eq$(Arg6833_0, 126)) || (((Arg6833_0 > 94) && (Arg6833_0 < 123)) || (((Arg6833_0 > 59) && (Arg6833_0 < 91)) || (((Arg6833_0 > 41) && ((Arg6833_0 < 58) && (!Shen.unwind_tail(Shen.$eq$(Arg6833_0, 44))))) || (((Arg6833_0 > 34) && (Arg6833_0 < 40)) || Shen.unwind_tail(Shen.$eq$(Arg6833_0, 33)))))))}, 1, [], "shen.symbol-code?"];





Shen.fns["shen.<str>"] = [Shen.type_func, function shen_user_lambda6836(Arg6835) {
  if (Arg6835.length < 1) return [Shen.type_func, shen_user_lambda6836, 1, Arg6835];
  var Arg6835_0 = Arg6835[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<dbq>"], [Arg6835_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<dbq>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<str>"];





Shen.fns["shen.<dbq>"] = [Shen.type_func, function shen_user_lambda6838(Arg6837) {
  if (Arg6837.length < 1) return [Shen.type_func, shen_user_lambda6838, 1, Arg6837];
  var Arg6837_0 = Arg6837[0];
  var R0;
  return (((Shen.is_type(Arg6837_0[1], Shen.type_cons))
  ? ((R0 = Arg6837_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 34)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6837_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6837_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<dbq>"];





Shen.fns["shen.<strcontents>"] = [Shen.type_func, function shen_user_lambda6840(Arg6839) {
  if (Arg6839.length < 1) return [Shen.type_func, shen_user_lambda6840, 1, Arg6839];
  var Arg6839_0 = Arg6839[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<strc>"], [Arg6839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<strcontents>"];





Shen.fns["shen.<byte>"] = [Shen.type_func, function shen_user_lambda6842(Arg6841) {
  if (Arg6841.length < 1) return [Shen.type_func, shen_user_lambda6842, 1, Arg6841];
  var Arg6841_0 = Arg6841[0];
  var R0;
  return (((Shen.is_type(Arg6841_0[1], Shen.type_cons))
  ? ((R0 = Arg6841_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6841_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6841_0])])[1], Shen.n_$gt$string(R0)])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<byte>"];





Shen.fns["shen.<strc>"] = [Shen.type_func, function shen_user_lambda6844(Arg6843) {
  if (Arg6843.length < 1) return [Shen.type_func, shen_user_lambda6844, 1, Arg6843];
  var Arg6843_0 = Arg6843[0];
  var R0;
  return (((Shen.is_type(Arg6843_0[1], Shen.type_cons))
  ? ((R0 = Arg6843_0[1][1]),
  (((!Shen.unwind_tail(Shen.$eq$(R0, 34))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6843_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6843_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<strc>"];





Shen.fns["shen.<number>"] = [Shen.type_func, function shen_user_lambda6846(Arg6845) {
  if (Arg6845.length < 1) return [Shen.type_func, shen_user_lambda6846, 1, Arg6845];
  var Arg6845_0 = Arg6845[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6845_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.hdtl"], [R0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<plus>"], [Arg6845_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6845_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<E>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<log10>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R2])]) * (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1])))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6845_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<E>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<log10>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R1])]) * Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6845_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6845_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<number>"];





Shen.fns["shen.<E>"] = [Shen.type_func, function shen_user_lambda6848(Arg6847) {
  if (Arg6847.length < 1) return [Shen.type_func, shen_user_lambda6848, 1, Arg6847];
  var Arg6847_0 = Arg6847[0];
  var R0;
  return ((((Shen.is_type(Arg6847_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(101, Arg6847_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6847_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6847_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<E>"];





Shen.fns["shen.<log10>"] = [Shen.type_func, function shen_user_lambda6850(Arg6849) {
  if (Arg6849.length < 1) return [Shen.type_func, shen_user_lambda6850, 1, Arg6849];
  var Arg6849_0 = Arg6849[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6849_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6849_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<log10>"];





Shen.fns["shen.<plus>"] = [Shen.type_func, function shen_user_lambda6852(Arg6851) {
  if (Arg6851.length < 1) return [Shen.type_func, shen_user_lambda6852, 1, Arg6851];
  var Arg6851_0 = Arg6851[0];
  var R0;
  return (((Shen.is_type(Arg6851_0[1], Shen.type_cons))
  ? ((R0 = Arg6851_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 43)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6851_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6851_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<plus>"];





Shen.fns["shen.<stop>"] = [Shen.type_func, function shen_user_lambda6854(Arg6853) {
  if (Arg6853.length < 1) return [Shen.type_func, shen_user_lambda6854, 1, Arg6853];
  var Arg6853_0 = Arg6853[0];
  var R0;
  return (((Shen.is_type(Arg6853_0[1], Shen.type_cons))
  ? ((R0 = Arg6853_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 46)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6853_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6853_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<stop>"];





Shen.fns["shen.<predigits>"] = [Shen.type_func, function shen_user_lambda6856(Arg6855) {
  if (Arg6855.length < 1) return [Shen.type_func, shen_user_lambda6856, 1, Arg6855];
  var Arg6855_0 = Arg6855[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6855_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6855_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<predigits>"];





Shen.fns["shen.<postdigits>"] = [Shen.type_func, function shen_user_lambda6858(Arg6857) {
  if (Arg6857.length < 1) return [Shen.type_func, shen_user_lambda6858, 1, Arg6857];
  var Arg6857_0 = Arg6857[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6857_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<postdigits>"];





Shen.fns["shen.<digits>"] = [Shen.type_func, function shen_user_lambda6860(Arg6859) {
  if (Arg6859.length < 1) return [Shen.type_func, shen_user_lambda6860, 1, Arg6859];
  var Arg6859_0 = Arg6859[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6859_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6859_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<digits>"];





Shen.fns["shen.<digit>"] = [Shen.type_func, function shen_user_lambda6862(Arg6861) {
  if (Arg6861.length < 1) return [Shen.type_func, shen_user_lambda6862, 1, Arg6861];
  var Arg6861_0 = Arg6861[0];
  var R0;
  return (((Shen.is_type(Arg6861_0[1], Shen.type_cons))
  ? ((R0 = Arg6861_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6861_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6861_0])])[1], Shen.call(Shen.fns["shen.byte->digit"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<digit>"];





Shen.fns["shen.byte->digit"] = [Shen.type_func, function shen_user_lambda6864(Arg6863) {
  if (Arg6863.length < 1) return [Shen.type_func, shen_user_lambda6864, 1, Arg6863];
  var Arg6863_0 = Arg6863[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6863_0)))
  ? 0
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6863_0)))
  ? 1
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6863_0)))
  ? 2
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6863_0)))
  ? 3
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6863_0)))
  ? 4
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6863_0)))
  ? 5
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6863_0)))
  ? 6
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6863_0)))
  ? 7
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6863_0)))
  ? 8
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6863_0)))
  ? 9
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.byte->digit"]]);})))))))))))}, 1, [], "shen.byte->digit"];





Shen.fns["shen.pre"] = [Shen.type_func, function shen_user_lambda6866(Arg6865) {
  if (Arg6865.length < 2) return [Shen.type_func, shen_user_lambda6866, 2, Arg6865];
  var Arg6865_0 = Arg6865[0], Arg6865_1 = Arg6865[1];
  return ((Shen.empty$question$(Arg6865_0))
  ? 0
  : ((Shen.is_type(Arg6865_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, Arg6865_1]) * Arg6865_0[1]) + Shen.call(Shen.fns["shen.pre"], [Arg6865_0[2], (Arg6865_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.pre"]]);})))}, 2, [], "shen.pre"];





Shen.fns["shen.post"] = [Shen.type_func, function shen_user_lambda6868(Arg6867) {
  if (Arg6867.length < 2) return [Shen.type_func, shen_user_lambda6868, 2, Arg6867];
  var Arg6867_0 = Arg6867[0], Arg6867_1 = Arg6867[1];
  return ((Shen.empty$question$(Arg6867_0))
  ? 0
  : ((Shen.is_type(Arg6867_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, (0 - Arg6867_1)]) * Arg6867_0[1]) + Shen.call(Shen.fns["shen.post"], [Arg6867_0[2], (Arg6867_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.post"]]);})))}, 2, [], "shen.post"];





Shen.fns["shen.expt"] = [Shen.type_func, function shen_user_lambda6870(Arg6869) {
  if (Arg6869.length < 2) return [Shen.type_func, shen_user_lambda6870, 2, Arg6869];
  var Arg6869_0 = Arg6869[0], Arg6869_1 = Arg6869[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6869_1)))
  ? 1
  : (((Arg6869_1 > 0))
  ? (Arg6869_0 * Shen.call(Shen.fns["shen.expt"], [Arg6869_0, (Arg6869_1 - 1)]))
  : (1 * (Shen.call(Shen.fns["shen.expt"], [Arg6869_0, (Arg6869_1 + 1)]) / Arg6869_0))))}, 2, [], "shen.expt"];





Shen.fns["shen.<st_input1>"] = [Shen.type_func, function shen_user_lambda6872(Arg6871) {
  if (Arg6871.length < 1) return [Shen.type_func, shen_user_lambda6872, 1, Arg6871];
  var Arg6871_0 = Arg6871[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6871_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input1>"];





Shen.fns["shen.<st_input2>"] = [Shen.type_func, function shen_user_lambda6874(Arg6873) {
  if (Arg6873.length < 1) return [Shen.type_func, shen_user_lambda6874, 1, Arg6873];
  var Arg6873_0 = Arg6873[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6873_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input2>"];





Shen.fns["shen.<comment>"] = [Shen.type_func, function shen_user_lambda6876(Arg6875) {
  if (Arg6875.length < 1) return [Shen.type_func, shen_user_lambda6876, 1, Arg6875];
  var Arg6875_0 = Arg6875[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<singleline>"], [Arg6875_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<multiline>"], [Arg6875_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<comment>"];





Shen.fns["shen.<singleline>"] = [Shen.type_func, function shen_user_lambda6878(Arg6877) {
  if (Arg6877.length < 1) return [Shen.type_func, shen_user_lambda6878, 1, Arg6877];
  var Arg6877_0 = Arg6877[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg6877_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anysingle>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<return>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<singleline>"];





Shen.fns["shen.<backslash>"] = [Shen.type_func, function shen_user_lambda6880(Arg6879) {
  if (Arg6879.length < 1) return [Shen.type_func, shen_user_lambda6880, 1, Arg6879];
  var Arg6879_0 = Arg6879[0];
  var R0;
  return ((((Shen.is_type(Arg6879_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(92, Arg6879_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6879_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6879_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<backslash>"];





Shen.fns["shen.<anysingle>"] = [Shen.type_func, function shen_user_lambda6882(Arg6881) {
  if (Arg6881.length < 1) return [Shen.type_func, shen_user_lambda6882, 1, Arg6881];
  var Arg6881_0 = Arg6881[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<non-return>"], [Arg6881_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anysingle>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6881_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<anysingle>"];





Shen.fns["shen.<non-return>"] = [Shen.type_func, function shen_user_lambda6884(Arg6883) {
  if (Arg6883.length < 1) return [Shen.type_func, shen_user_lambda6884, 1, Arg6883];
  var Arg6883_0 = Arg6883[0];
  var R0;
  return (((Shen.is_type(Arg6883_0[1], Shen.type_cons))
  ? ((R0 = Arg6883_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, 10, [Shen.type_cons, 13, []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6883_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6883_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<non-return>"];





Shen.fns["shen.<return>"] = [Shen.type_func, function shen_user_lambda6886(Arg6885) {
  if (Arg6885.length < 1) return [Shen.type_func, shen_user_lambda6886, 1, Arg6885];
  var Arg6885_0 = Arg6885[0];
  var R0;
  return (((Shen.is_type(Arg6885_0[1], Shen.type_cons))
  ? ((R0 = Arg6885_0[1][1]),
  ((Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, 10, [Shen.type_cons, 13, []]]]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6885_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6885_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<return>"];





Shen.fns["shen.<multiline>"] = [Shen.type_func, function shen_user_lambda6888(Arg6887) {
  if (Arg6887.length < 1) return [Shen.type_func, shen_user_lambda6888, 1, Arg6887];
  var Arg6887_0 = Arg6887[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg6887_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anymulti>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<multiline>"];





Shen.fns["shen.<times>"] = [Shen.type_func, function shen_user_lambda6890(Arg6889) {
  if (Arg6889.length < 1) return [Shen.type_func, shen_user_lambda6890, 1, Arg6889];
  var Arg6889_0 = Arg6889[0];
  var R0;
  return ((((Shen.is_type(Arg6889_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(42, Arg6889_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6889_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6889_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<times>"];





Shen.fns["shen.<anymulti>"] = [Shen.type_func, function shen_user_lambda6892(Arg6891) {
  if (Arg6891.length < 1) return [Shen.type_func, shen_user_lambda6892, 1, Arg6891];
  var Arg6891_0 = Arg6891[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6891_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anymulti>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<times>"], [Arg6891_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6891_0[1], Shen.type_cons))
  ? (Arg6891_0[1][1],
  (R0 = Shen.call(Shen.fns["shen.<anymulti>"], [Shen.call(Shen.fns["shen.pair"], [Arg6891_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6891_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<anymulti>"];





Shen.fns["shen.<whitespaces>"] = [Shen.type_func, function shen_user_lambda6894(Arg6893) {
  if (Arg6893.length < 1) return [Shen.type_func, shen_user_lambda6894, 1, Arg6893];
  var Arg6893_0 = Arg6893[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6893_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6893_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<whitespaces>"];





Shen.fns["shen.<whitespace>"] = [Shen.type_func, function shen_user_lambda6896(Arg6895) {
  if (Arg6895.length < 1) return [Shen.type_func, shen_user_lambda6896, 1, Arg6895];
  var Arg6895_0 = Arg6895[0];
  var R0;
  return (((Shen.is_type(Arg6895_0[1], Shen.type_cons))
  ? ((R0 = Arg6895_0[1][1]),
  ((((R0 = R0),
  (Shen.unwind_tail(Shen.$eq$(R0, 32)) || (Shen.unwind_tail(Shen.$eq$(R0, 13)) || (Shen.unwind_tail(Shen.$eq$(R0, 10)) || Shen.unwind_tail(Shen.$eq$(R0, 9)))))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6895_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6895_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<whitespace>"];





Shen.fns["shen.cons_form"] = [Shen.type_func, function shen_user_lambda6898(Arg6897) {
  if (Arg6897.length < 1) return [Shen.type_func, shen_user_lambda6898, 1, Arg6897];
  var Arg6897_0 = Arg6897[0];
  return ((Shen.empty$question$(Arg6897_0))
  ? []
  : (((Shen.is_type(Arg6897_0, Shen.type_cons) && (Shen.is_type(Arg6897_0[2], Shen.type_cons) && (Shen.is_type(Arg6897_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6897_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6897_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6897_0[1], Arg6897_0[2][2]]]
  : ((Shen.is_type(Arg6897_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6897_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg6897_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cons_form"]]);}))))}, 1, [], "shen.cons_form"];





Shen.fns["shen.package-macro"] = [Shen.type_func, function shen_user_lambda6900(Arg6899) {
  if (Arg6899.length < 2) return [Shen.type_func, shen_user_lambda6900, 2, Arg6899];
  var Arg6899_0 = Arg6899[0], Arg6899_1 = Arg6899[1];
  var R0, R1;
  return (((Shen.is_type(Arg6899_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "$"], Arg6899_0[1])) && (Shen.is_type(Arg6899_0[2], Shen.type_cons) && Shen.empty$question$(Arg6899_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["explode"], [Arg6899_0[2][1]]), Arg6899_1]);})
  : (((Shen.is_type(Arg6899_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6899_0[1])) && (Shen.is_type(Arg6899_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg6899_0[2][1])) && Shen.is_type(Arg6899_0[2][2], Shen.type_cons))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Arg6899_0[2][2][2], Arg6899_1]);})
  : (((Shen.is_type(Arg6899_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6899_0[1])) && (Shen.is_type(Arg6899_0[2], Shen.type_cons) && Shen.is_type(Arg6899_0[2][2], Shen.type_cons)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6899_0[2][2][1]])),
  Shen.call(Shen.fns["shen.record-exceptions"], [R0, Arg6899_0[2][1]]),
  (R1 = Shen.intern((Shen.str(Arg6899_0[2][1]) + "."))),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.packageh"], [R1, R0, Arg6899_0[2][2][2]]), Arg6899_1]);}))
  : [Shen.type_cons, Arg6899_0, Arg6899_1])))}, 2, [], "shen.package-macro"];





Shen.fns["shen.record-exceptions"] = [Shen.type_func, function shen_user_lambda6902(Arg6901) {
  if (Arg6901.length < 2) return [Shen.type_func, shen_user_lambda6902, 2, Arg6901];
  var Arg6901_0 = Arg6901[0], Arg6901_1 = Arg6901[1];
  var R0;
  return ((R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6901_1, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6904(Arg6903) {
  if (Arg6903.length < 1) return [Shen.type_func, shen_user_lambda6904, 1, Arg6903];
  var Arg6903_0 = Arg6903[0];
  return []}, 1, [], undefined])),
  (R0 = Shen.call(Shen.fns["union"], [Arg6901_0, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6901_1, [Shen.type_symbol, "shen.external-symbols"], R0, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-exceptions"];





Shen.fns["shen.packageh"] = [Shen.type_func, function shen_user_lambda6906(Arg6905) {
  if (Arg6905.length < 3) return [Shen.type_func, shen_user_lambda6906, 3, Arg6905];
  var Arg6905_0 = Arg6905[0], Arg6905_1 = Arg6905[1], Arg6905_2 = Arg6905[2];
  return ((Shen.is_type(Arg6905_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.packageh"], [Arg6905_0, Arg6905_1, Arg6905_2[1]]), Shen.call(Shen.fns["shen.packageh"], [Arg6905_0, Arg6905_1, Arg6905_2[2]])]
  : (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg6905_2]) || (Shen.call(Shen.fns["variable?"], [Arg6905_2]) || (Shen.call(Shen.fns["element?"], [Arg6905_2, Arg6905_1]) || (Shen.call(Shen.fns["shen.doubleunderline?"], [Arg6905_2]) || Shen.call(Shen.fns["shen.singleunderline?"], [Arg6905_2]))))))
  ? Arg6905_2
  : (((Shen.is_type(Arg6905_2, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.prefix?"], [[Shen.type_cons, "s", [Shen.type_cons, "h", [Shen.type_cons, "e", [Shen.type_cons, "n", [Shen.type_cons, ".", []]]]]], Shen.call(Shen.fns["explode"], [Arg6905_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg6905_0, Arg6905_2]);})
  : Arg6905_2)))}, 3, [], "shen.packageh"];





Shen.fns["read-from-string"] = [Shen.type_func, function shen_user_lambda6908(Arg6907) {
  if (Arg6907.length < 1) return [Shen.type_func, shen_user_lambda6908, 1, Arg6907];
  var Arg6907_0 = Arg6907[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6910(Arg6909) {
  if (Arg6909.length < 1) return [Shen.type_func, shen_user_lambda6910, 1, Arg6909];
  var Arg6909_0 = Arg6909[0];
  return (function() {
  return Shen.string_$gt$n(Arg6909_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg6907_0])])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R0, [Shen.type_symbol, "shen.read-error"]]);}))}, 1, [], "read-from-string"];










Shen.fns["shen.<defprolog>"] = [Shen.type_func, function shen_user_lambda6555(Arg6554) {
  if (Arg6554.length < 1) return [Shen.type_func, shen_user_lambda6555, 1, Arg6554];
  var Arg6554_0 = Arg6554[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<predicate*>"], [Arg6554_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.prolog->shen"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6557(Arg6556) {
  if (Arg6556.length < 2) return [Shen.type_func, shen_user_lambda6557, 2, Arg6556];
  var Arg6556_0 = Arg6556[0], Arg6556_1 = Arg6556[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-predicate"], [Shen.call(Shen.fns["shen.hdtl"], [Arg6556_0]), Arg6556_1]);})}, 2, [R0], undefined], Shen.call(Shen.fns["shen.hdtl"], [R1])])])[1]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<defprolog>"];





Shen.fns["shen.prolog-error"] = [Shen.type_func, function shen_user_lambda6559(Arg6558) {
  if (Arg6558.length < 2) return [Shen.type_func, shen_user_lambda6559, 2, Arg6558];
  var Arg6558_0 = Arg6558[0], Arg6558_1 = Arg6558[1];
  return (((Shen.is_type(Arg6558_1, Shen.type_cons) && (Shen.is_type(Arg6558_1[2], Shen.type_cons) && Shen.empty$question$(Arg6558_1[2][2]))))
  ? (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6558_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6558_1[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6558_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.prolog-error"];





Shen.fns["shen.next-50"] = [Shen.type_func, function shen_user_lambda6561(Arg6560) {
  if (Arg6560.length < 2) return [Shen.type_func, shen_user_lambda6561, 2, Arg6560];
  var Arg6560_0 = Arg6560[0], Arg6560_1 = Arg6560[1];
  return ((Shen.empty$question$(Arg6560_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6560_0)))
  ? ""
  : ((Shen.is_type(Arg6560_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.decons-string"], [Arg6560_1[1]]) + Shen.call(Shen.fns["shen.next-50"], [(Arg6560_0 - 1), Arg6560_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.next-50"]]);}))))}, 2, [], "shen.next-50"];





Shen.fns["shen.decons-string"] = [Shen.type_func, function shen_user_lambda6563(Arg6562) {
  if (Arg6562.length < 1) return [Shen.type_func, shen_user_lambda6563, 1, Arg6562];
  var Arg6562_0 = Arg6562[0];
  return (((Shen.is_type(Arg6562_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6562_0[1])) && (Shen.is_type(Arg6562_0[2], Shen.type_cons) && (Shen.is_type(Arg6562_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6562_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-cons"], [Arg6562_0]), " ", [Shen.type_symbol, "shen.s"]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg6562_0, " ", [Shen.type_symbol, "shen.r"]]);}))}, 1, [], "shen.decons-string"];





Shen.fns["shen.insert-predicate"] = [Shen.type_func, function shen_user_lambda6565(Arg6564) {
  if (Arg6564.length < 2) return [Shen.type_func, shen_user_lambda6565, 2, Arg6564];
  var Arg6564_0 = Arg6564[0], Arg6564_1 = Arg6564[1];
  return (((Shen.is_type(Arg6564_1, Shen.type_cons) && (Shen.is_type(Arg6564_1[2], Shen.type_cons) && Shen.empty$question$(Arg6564_1[2][2]))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6564_0, Arg6564_1[1]], [Shen.type_cons, [Shen.type_symbol, ":-"], Arg6564_1[2]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-predicate"]]);}))}, 2, [], "shen.insert-predicate"];





Shen.fns["shen.<predicate*>"] = [Shen.type_func, function shen_user_lambda6567(Arg6566) {
  if (Arg6566.length < 1) return [Shen.type_func, shen_user_lambda6567, 1, Arg6566];
  var Arg6566_0 = Arg6566[0];
  var R0;
  return (((Shen.is_type(Arg6566_0[1], Shen.type_cons))
  ? ((R0 = Arg6566_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6566_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6566_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<predicate*>"];





Shen.fns["shen.<clauses*>"] = [Shen.type_func, function shen_user_lambda6569(Arg6568) {
  if (Arg6568.length < 1) return [Shen.type_func, shen_user_lambda6569, 1, Arg6568];
  var Arg6568_0 = Arg6568[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<clause*>"], [Arg6568_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6568_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<clauses*>"];





Shen.fns["shen.<clause*>"] = [Shen.type_func, function shen_user_lambda6571(Arg6570) {
  if (Arg6570.length < 1) return [Shen.type_func, shen_user_lambda6571, 1, Arg6570];
  var Arg6570_0 = Arg6570[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<head*>"], [Arg6570_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<end*>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<clause*>"];





Shen.fns["shen.<head*>"] = [Shen.type_func, function shen_user_lambda6573(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6573, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<term*>"], [Arg6572_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<head*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6572_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<head*>"];





Shen.fns["shen.<term*>"] = [Shen.type_func, function shen_user_lambda6575(Arg6574) {
  if (Arg6574.length < 1) return [Shen.type_func, shen_user_lambda6575, 1, Arg6574];
  var Arg6574_0 = Arg6574[0];
  var R0;
  return (((Shen.is_type(Arg6574_0[1], Shen.type_cons))
  ? ((R0 = Arg6574_0[1][1]),
  ((((!Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0))) && Shen.call(Shen.fns["shen.legitimate-term?"], [R0])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6574_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6574_0])])[1], Shen.call(Shen.fns["shen.eval-cons"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<term*>"];





Shen.fns["shen.legitimate-term?"] = [Shen.type_func, function shen_user_lambda6577(Arg6576) {
  if (Arg6576.length < 1) return [Shen.type_func, shen_user_lambda6577, 1, Arg6576];
  var Arg6576_0 = Arg6576[0];
  return (((Shen.is_type(Arg6576_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6576_0[1])) && (Shen.is_type(Arg6576_0[2], Shen.type_cons) && (Shen.is_type(Arg6576_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6576_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6576_0[2][1]]) && Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6576_0[2][2][1]]))
  : (((Shen.is_type(Arg6576_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6576_0[1])) && (Shen.is_type(Arg6576_0[2], Shen.type_cons) && (Shen.is_type(Arg6576_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6576_0[2][2][1])) && Shen.empty$question$(Arg6576_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6576_0[2][1]]);})
  : (((Shen.is_type(Arg6576_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6576_0[1])) && (Shen.is_type(Arg6576_0[2], Shen.type_cons) && (Shen.is_type(Arg6576_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6576_0[2][2][1])) && Shen.empty$question$(Arg6576_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6576_0[2][1]]);})
  : ((Shen.is_type(Arg6576_0, Shen.type_cons))
  ? false
  : true))))}, 1, [], "shen.legitimate-term?"];





Shen.fns["shen.eval-cons"] = [Shen.type_func, function shen_user_lambda6579(Arg6578) {
  if (Arg6578.length < 1) return [Shen.type_func, shen_user_lambda6579, 1, Arg6578];
  var Arg6578_0 = Arg6578[0];
  return (((Shen.is_type(Arg6578_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6578_0[1])) && (Shen.is_type(Arg6578_0[2], Shen.type_cons) && (Shen.is_type(Arg6578_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6578_0[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6578_0[2][1]]), Shen.call(Shen.fns["shen.eval-cons"], [Arg6578_0[2][2][1]])]
  : (((Shen.is_type(Arg6578_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6578_0[1])) && (Shen.is_type(Arg6578_0[2], Shen.type_cons) && (Shen.is_type(Arg6578_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6578_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6578_0[2][1]]), Arg6578_0[2][2]]]
  : Arg6578_0))}, 1, [], "shen.eval-cons"];





Shen.fns["shen.<body*>"] = [Shen.type_func, function shen_user_lambda6581(Arg6580) {
  if (Arg6580.length < 1) return [Shen.type_func, shen_user_lambda6581, 1, Arg6580];
  var Arg6580_0 = Arg6580[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<literal*>"], [Arg6580_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6580_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<body*>"];





Shen.fns["shen.<literal*>"] = [Shen.type_func, function shen_user_lambda6583(Arg6582) {
  if (Arg6582.length < 1) return [Shen.type_func, shen_user_lambda6583, 1, Arg6582];
  var Arg6582_0 = Arg6582[0];
  var R0;
  return ((((Shen.is_type(Arg6582_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6582_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6582_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6582_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6582_0[1], Shen.type_cons))
  ? ((R0 = Arg6582_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6582_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6582_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<literal*>"];





Shen.fns["shen.<end*>"] = [Shen.type_func, function shen_user_lambda6585(Arg6584) {
  if (Arg6584.length < 1) return [Shen.type_func, shen_user_lambda6585, 1, Arg6584];
  var Arg6584_0 = Arg6584[0];
  var R0;
  return (((Shen.is_type(Arg6584_0[1], Shen.type_cons))
  ? ((R0 = Arg6584_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6584_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6584_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<end*>"];





Shen.fns["cut"] = [Shen.type_func, function shen_user_lambda6587(Arg6586) {
  if (Arg6586.length < 3) return [Shen.type_func, shen_user_lambda6587, 3, Arg6586];
  var Arg6586_0 = Arg6586[0], Arg6586_1 = Arg6586[1], Arg6586_2 = Arg6586[2];
  var R0;
  return ((R0 = Shen.unwind_tail(Shen.thaw(Arg6586_2))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? Arg6586_0
  : R0))}, 3, [], "cut"];





Shen.fns["shen.insert_modes"] = [Shen.type_func, function shen_user_lambda6589(Arg6588) {
  if (Arg6588.length < 1) return [Shen.type_func, shen_user_lambda6589, 1, Arg6588];
  var Arg6588_0 = Arg6588[0];
  return (((Shen.is_type(Arg6588_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6588_0[1])) && (Shen.is_type(Arg6588_0[2], Shen.type_cons) && (Shen.is_type(Arg6588_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6588_0[2][2][2]))))))
  ? Arg6588_0
  : ((Shen.empty$question$(Arg6588_0))
  ? []
  : ((Shen.is_type(Arg6588_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6588_0[1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_modes"], [Arg6588_0[2]]), [Shen.type_cons, [Shen.type_symbol, "-"], []]]]]
  : Arg6588_0)))}, 1, [], "shen.insert_modes"];





Shen.fns["shen.s-prolog"] = [Shen.type_func, function shen_user_lambda6591(Arg6590) {
  if (Arg6590.length < 1) return [Shen.type_func, shen_user_lambda6591, 1, Arg6590];
  var Arg6590_0 = Arg6590[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6593(Arg6592) {
  if (Arg6592.length < 1) return [Shen.type_func, shen_user_lambda6593, 1, Arg6592];
  var Arg6592_0 = Arg6592[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Arg6592_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.prolog->shen"], [Arg6590_0])]);})}, 1, [], "shen.s-prolog"];





Shen.fns["shen.prolog->shen"] = [Shen.type_func, function shen_user_lambda6595(Arg6594) {
  if (Arg6594.length < 1) return [Shen.type_func, shen_user_lambda6595, 1, Arg6594];
  var Arg6594_0 = Arg6594[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.compile_prolog_procedure"], Shen.call(Shen.fns["shen.group_clauses"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.s-prolog_clause"], Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.head_abstraction"], Arg6594_0])])])]);})}, 1, [], "shen.prolog->shen"];





Shen.fns["shen.s-prolog_clause"] = [Shen.type_func, function shen_user_lambda6597(Arg6596) {
  if (Arg6596.length < 1) return [Shen.type_func, shen_user_lambda6597, 1, Arg6596];
  var Arg6596_0 = Arg6596[0];
  return (((Shen.is_type(Arg6596_0, Shen.type_cons) && (Shen.is_type(Arg6596_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6596_0[2][1])) && (Shen.is_type(Arg6596_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6596_0[2][2][2]))))))
  ? [Shen.type_cons, Arg6596_0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.s-prolog_literal"], Arg6596_0[2][2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_clause"]]);}))}, 1, [], "shen.s-prolog_clause"];





Shen.fns["shen.head_abstraction"] = [Shen.type_func, function shen_user_lambda6599(Arg6598) {
  if (Arg6598.length < 1) return [Shen.type_func, shen_user_lambda6599, 1, Arg6598];
  var Arg6598_0 = Arg6598[0];
  var R0, R1;
  return (((Shen.is_type(Arg6598_0, Shen.type_cons) && (Shen.is_type(Arg6598_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6598_0[2][1])) && (Shen.is_type(Arg6598_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6598_0[2][2][2]) && (Shen.call(Shen.fns["shen.complexity_head"], [Arg6598_0[1]]) < (Shen.globals["shen.*maxcomplexity*"]))))))))
  ? [Shen.type_cons, Arg6598_0, []]
  : (((Shen.is_type(Arg6598_0, Shen.type_cons) && (Shen.is_type(Arg6598_0[1], Shen.type_cons) && (Shen.is_type(Arg6598_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6598_0[2][1])) && (Shen.is_type(Arg6598_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6598_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6601(Arg6600) {
  if (Arg6600.length < 1) return [Shen.type_func, shen_user_lambda6601, 1, Arg6600];
  var Arg6600_0 = Arg6600[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]);})}, 1, [], undefined], Arg6598_0[1][2]])),
  (R1 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6598_0[1][2]])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [R0]), [Shen.type_cons, R1, []]]]),
  (R1 = [Shen.type_cons, [Shen.type_cons, Arg6598_0[1][1], R0], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, R1, Arg6598_0[2][2][1]], []]]]),
  [Shen.type_cons, R1, []])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.head_abstraction"]]);})))}, 1, [], "shen.head_abstraction"];





Shen.fns["shen.complexity_head"] = [Shen.type_func, function shen_user_lambda6603(Arg6602) {
  if (Arg6602.length < 1) return [Shen.type_func, shen_user_lambda6603, 1, Arg6602];
  var Arg6602_0 = Arg6602[0];
  return ((Shen.is_type(Arg6602_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.product"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.complexity"], Arg6602_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.complexity_head"]]);}))}, 1, [], "shen.complexity_head"];





Shen.fns["shen.complexity"] = [Shen.type_func, function shen_user_lambda6605(Arg6604) {
  if (Arg6604.length < 1) return [Shen.type_func, shen_user_lambda6605, 1, Arg6604];
  var Arg6604_0 = Arg6604[0];
  return (((Shen.is_type(Arg6604_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6604_0[1])) && (Shen.is_type(Arg6604_0[2], Shen.type_cons) && (Shen.is_type(Arg6604_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6604_0[2][1][1])) && (Shen.is_type(Arg6604_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6604_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6604_0[2][1][2][2][2]) && (Shen.is_type(Arg6604_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6604_0[2][2][2])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [Arg6604_0[2][1]]);})
  : (((Shen.is_type(Arg6604_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6604_0[1])) && (Shen.is_type(Arg6604_0[2], Shen.type_cons) && (Shen.is_type(Arg6604_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6604_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6604_0[2][2][1])) && Shen.empty$question$(Arg6604_0[2][2][2]))))))))
  ? (2 * (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6604_0[2][1][1], Arg6604_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6604_0[2][1][2], Arg6604_0[2][2]]]])))
  : (((Shen.is_type(Arg6604_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6604_0[1])) && (Shen.is_type(Arg6604_0[2], Shen.type_cons) && (Shen.is_type(Arg6604_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6604_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6604_0[2][2][1])) && Shen.empty$question$(Arg6604_0[2][2][2]))))))))
  ? (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6604_0[2][1][1], Arg6604_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6604_0[2][1][2], Arg6604_0[2][2]]]]))
  : (((Shen.is_type(Arg6604_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6604_0[1])) && (Shen.is_type(Arg6604_0[2], Shen.type_cons) && (Shen.is_type(Arg6604_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6604_0[2][2][2]) && Shen.call(Shen.fns["variable?"], [Arg6604_0[2][1]])))))))
  ? 1
  : (((Shen.is_type(Arg6604_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6604_0[1])) && (Shen.is_type(Arg6604_0[2], Shen.type_cons) && (Shen.is_type(Arg6604_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6604_0[2][2][1])) && Shen.empty$question$(Arg6604_0[2][2][2])))))))
  ? 2
  : (((Shen.is_type(Arg6604_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6604_0[1])) && (Shen.is_type(Arg6604_0[2], Shen.type_cons) && (Shen.is_type(Arg6604_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6604_0[2][2][1])) && Shen.empty$question$(Arg6604_0[2][2][2])))))))
  ? 1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6604_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]]]);})))))))}, 1, [], "shen.complexity"];





Shen.fns["shen.product"] = [Shen.type_func, function shen_user_lambda6607(Arg6606) {
  if (Arg6606.length < 1) return [Shen.type_func, shen_user_lambda6607, 1, Arg6606];
  var Arg6606_0 = Arg6606[0];
  return ((Shen.empty$question$(Arg6606_0))
  ? 1
  : ((Shen.is_type(Arg6606_0, Shen.type_cons))
  ? (Arg6606_0[1] * Shen.call(Shen.fns["shen.product"], [Arg6606_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.product"]]);})))}, 1, [], "shen.product"];





Shen.fns["shen.s-prolog_literal"] = [Shen.type_func, function shen_user_lambda6609(Arg6608) {
  if (Arg6608.length < 1) return [Shen.type_func, shen_user_lambda6609, 1, Arg6608];
  var Arg6608_0 = Arg6608[0];
  return (((Shen.is_type(Arg6608_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6608_0[1])) && (Shen.is_type(Arg6608_0[2], Shen.type_cons) && (Shen.is_type(Arg6608_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6608_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6608_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6608_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6608_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "when"], Arg6608_0[1])) && (Shen.is_type(Arg6608_0[2], Shen.type_cons) && Shen.empty$question$(Arg6608_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6608_0[2][1]]), []]]
  : (((Shen.is_type(Arg6608_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6608_0[1])) && (Shen.is_type(Arg6608_0[2], Shen.type_cons) && (Shen.is_type(Arg6608_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6608_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6608_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6608_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6608_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fwhen"], Arg6608_0[1])) && (Shen.is_type(Arg6608_0[2], Shen.type_cons) && Shen.empty$question$(Arg6608_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6608_0[2][1]]), []]]
  : ((Shen.is_type(Arg6608_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Arg6608_0[1]]), Arg6608_0[2]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_literal"]]);}))))))}, 1, [], "shen.s-prolog_literal"];





Shen.fns["shen.insert_deref"] = [Shen.type_func, function shen_user_lambda6611(Arg6610) {
  if (Arg6610.length < 1) return [Shen.type_func, shen_user_lambda6611, 1, Arg6610];
  var Arg6610_0 = Arg6610[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6610_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.deref"], [Shen.type_cons, Arg6610_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6610_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6610_0[1]]), Shen.call(Shen.fns["shen.insert_deref"], [Arg6610_0[2]])]
  : Arg6610_0))}, 1, [], "shen.insert_deref"];





Shen.fns["shen.insert_lazyderef"] = [Shen.type_func, function shen_user_lambda6613(Arg6612) {
  if (Arg6612.length < 1) return [Shen.type_func, shen_user_lambda6613, 1, Arg6612];
  var Arg6612_0 = Arg6612[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6612_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Arg6612_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6612_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6612_0[1]]), Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6612_0[2]])]
  : Arg6612_0))}, 1, [], "shen.insert_lazyderef"];





Shen.fns["shen.m_prolog_to_s-prolog_predicate"] = [Shen.type_func, function shen_user_lambda6615(Arg6614) {
  if (Arg6614.length < 1) return [Shen.type_func, shen_user_lambda6615, 1, Arg6614];
  var Arg6614_0 = Arg6614[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6614_0)))
  ? [Shen.type_symbol, "unify"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=!"], Arg6614_0)))
  ? [Shen.type_symbol, "unify!"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=="], Arg6614_0)))
  ? [Shen.type_symbol, "identical"]
  : Arg6614_0)))}, 1, [], "shen.m_prolog_to_s-prolog_predicate"];





Shen.fns["shen.group_clauses"] = [Shen.type_func, function shen_user_lambda6617(Arg6616) {
  if (Arg6616.length < 1) return [Shen.type_func, shen_user_lambda6617, 1, Arg6616];
  var Arg6616_0 = Arg6616[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6616_0))
  ? []
  : ((Shen.is_type(Arg6616_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.collect"], [[Shen.type_func, function shen_user_lambda6619(Arg6618) {
  if (Arg6618.length < 2) return [Shen.type_func, shen_user_lambda6619, 2, Arg6618];
  var Arg6618_0 = Arg6618[0], Arg6618_1 = Arg6618[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.same_predicate?"], [Arg6618_0[1], Arg6618_1]);})}, 2, [Arg6616_0], undefined], Arg6616_0])),
  (R1 = Shen.call(Shen.fns["difference"], [Arg6616_0, R0])),
  [Shen.type_cons, R0, Shen.call(Shen.fns["shen.group_clauses"], [R1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.group_clauses"]]);})))}, 1, [], "shen.group_clauses"];





Shen.fns["shen.collect"] = [Shen.type_func, function shen_user_lambda6621(Arg6620) {
  if (Arg6620.length < 2) return [Shen.type_func, shen_user_lambda6621, 2, Arg6620];
  var Arg6620_0 = Arg6620[0], Arg6620_1 = Arg6620[1];
  return ((Shen.empty$question$(Arg6620_1))
  ? []
  : ((Shen.is_type(Arg6620_1, Shen.type_cons))
  ? ((Shen.call(Arg6620_0, [Arg6620_1[1]]))
  ? [Shen.type_cons, Arg6620_1[1], Shen.call(Shen.fns["shen.collect"], [Arg6620_0, Arg6620_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.collect"], [Arg6620_0, Arg6620_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.collect"]]);})))}, 2, [], "shen.collect"];





Shen.fns["shen.same_predicate?"] = [Shen.type_func, function shen_user_lambda6623(Arg6622) {
  if (Arg6622.length < 2) return [Shen.type_func, shen_user_lambda6623, 2, Arg6622];
  var Arg6622_0 = Arg6622[0], Arg6622_1 = Arg6622[1];
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.is_type(Arg6622_0[1], Shen.type_cons) && (Shen.is_type(Arg6622_1, Shen.type_cons) && Shen.is_type(Arg6622_1[1], Shen.type_cons)))))
  ? Shen.$eq$(Arg6622_0[1][1], Arg6622_1[1][1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.same_predicate?"]]);}))}, 2, [], "shen.same_predicate?"];





Shen.fns["shen.compile_prolog_procedure"] = [Shen.type_func, function shen_user_lambda6625(Arg6624) {
  if (Arg6624.length < 1) return [Shen.type_func, shen_user_lambda6625, 1, Arg6624];
  var Arg6624_0 = Arg6624[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.procedure_name"], [Arg6624_0])),
  (R0 = Shen.call(Shen.fns["shen.clauses-to-shen"], [R0, Arg6624_0])),
  R0)}, 1, [], "shen.compile_prolog_procedure"];





Shen.fns["shen.procedure_name"] = [Shen.type_func, function shen_user_lambda6627(Arg6626) {
  if (Arg6626.length < 1) return [Shen.type_func, shen_user_lambda6627, 1, Arg6626];
  var Arg6626_0 = Arg6626[0];
  return (((Shen.is_type(Arg6626_0, Shen.type_cons) && (Shen.is_type(Arg6626_0[1], Shen.type_cons) && Shen.is_type(Arg6626_0[1][1], Shen.type_cons))))
  ? Arg6626_0[1][1][1]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.procedure_name"]]);}))}, 1, [], "shen.procedure_name"];





Shen.fns["shen.clauses-to-shen"] = [Shen.type_func, function shen_user_lambda6629(Arg6628) {
  if (Arg6628.length < 2) return [Shen.type_func, shen_user_lambda6629, 2, Arg6628];
  var Arg6628_0 = Arg6628[0], Arg6628_1 = Arg6628[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.linearise-clause"], Arg6628_1])),
  (R1 = Shen.call(Shen.fns["shen.prolog-aritycheck"], [Arg6628_0, Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6631(Arg6630) {
  if (Arg6630.length < 1) return [Shen.type_func, shen_user_lambda6631, 1, Arg6630];
  var Arg6630_0 = Arg6630[0];
  return (function() {
  return Shen.call_tail(Shen.fns["head"], [Arg6630_0]);})}, 1, [], undefined], Arg6628_1])])),
  (R1 = Shen.call(Shen.fns["shen.parameters"], [R1])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6633(Arg6632) {
  if (Arg6632.length < 2) return [Shen.type_func, shen_user_lambda6633, 2, Arg6632];
  var Arg6632_0 = Arg6632[0], Arg6632_1 = Arg6632[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aum"], [Arg6632_1, Arg6632_0]);})}, 2, [R1], undefined], R0])),
  (R0 = Shen.call(Shen.fns["shen.catch-cut"], [Shen.call(Shen.fns["shen.nest-disjunct"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.aum_to_shen"], R0])])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6628_0, Shen.call(Shen.fns["append"], [R1, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  R1)}, 2, [], "shen.clauses-to-shen"];





Shen.fns["shen.catch-cut"] = [Shen.type_func, function shen_user_lambda6635(Arg6634) {
  if (Arg6634.length < 1) return [Shen.type_func, shen_user_lambda6635, 1, Arg6634];
  var Arg6634_0 = Arg6634[0];
  return (((!Shen.call(Shen.fns["shen.occurs?"], [[Shen.type_symbol, "cut"], Arg6634_0])))
  ? Arg6634_0
  : [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.catchpoint"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.cutpoint"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, Arg6634_0, []]]], []]]]])}, 1, [], "shen.catch-cut"];





Shen.fns["shen.catchpoint"] = [Shen.type_func, function shen_user_lambda6637(Arg6636) {
  if (Arg6636.length < 0) return [Shen.type_func, shen_user_lambda6637, 0, Arg6636];
  return (Shen.globals["shen.*catch*"] = (1 + (Shen.globals["shen.*catch*"])))}, 0, [], "shen.catchpoint"];





Shen.fns["shen.cutpoint"] = [Shen.type_func, function shen_user_lambda6639(Arg6638) {
  if (Arg6638.length < 2) return [Shen.type_func, shen_user_lambda6639, 2, Arg6638];
  var Arg6638_0 = Arg6638[0], Arg6638_1 = Arg6638[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6638_1, Arg6638_0)))
  ? false
  : Arg6638_1)}, 2, [], "shen.cutpoint"];





Shen.fns["shen.nest-disjunct"] = [Shen.type_func, function shen_user_lambda6641(Arg6640) {
  if (Arg6640.length < 1) return [Shen.type_func, shen_user_lambda6641, 1, Arg6640];
  var Arg6640_0 = Arg6640[0];
  return (((Shen.is_type(Arg6640_0, Shen.type_cons) && Shen.empty$question$(Arg6640_0[2])))
  ? Arg6640_0[1]
  : ((Shen.is_type(Arg6640_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lisp-or"], [Arg6640_0[1], Shen.call(Shen.fns["shen.nest-disjunct"], [Arg6640_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.nest-disjunct"]]);})))}, 1, [], "shen.nest-disjunct"];





Shen.fns["shen.lisp-or"] = [Shen.type_func, function shen_user_lambda6643(Arg6642) {
  if (Arg6642.length < 2) return [Shen.type_func, shen_user_lambda6643, 2, Arg6642];
  var Arg6642_0 = Arg6642[0], Arg6642_1 = Arg6642[1];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, Arg6642_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, false, []]]], [Shen.type_cons, Arg6642_1, [Shen.type_cons, [Shen.type_symbol, "Case"], []]]]], []]]]]}, 2, [], "shen.lisp-or"];





Shen.fns["shen.prolog-aritycheck"] = [Shen.type_func, function shen_user_lambda6645(Arg6644) {
  if (Arg6644.length < 2) return [Shen.type_func, shen_user_lambda6645, 2, Arg6644];
  var Arg6644_0 = Arg6644[0], Arg6644_1 = Arg6644[1];
  return (((Shen.is_type(Arg6644_1, Shen.type_cons) && Shen.empty$question$(Arg6644_1[2])))
  ? (Shen.call(Shen.fns["length"], [Arg6644_1[1]]) - 1)
  : (((Shen.is_type(Arg6644_1, Shen.type_cons) && Shen.is_type(Arg6644_1[2], Shen.type_cons)))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6644_1[1]]), Shen.call(Shen.fns["length"], [Arg6644_1[2][1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-aritycheck"], [Arg6644_0, Arg6644_1[2]]);})
  : (function() {
  return Shen.simple_error(("arity error in prolog procedure " + Shen.call(Shen.fns["shen.app"], [[Shen.type_cons, Arg6644_0, []], "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.prolog-aritycheck"]]);})))}, 2, [], "shen.prolog-aritycheck"];





Shen.fns["shen.linearise-clause"] = [Shen.type_func, function shen_user_lambda6647(Arg6646) {
  if (Arg6646.length < 1) return [Shen.type_func, shen_user_lambda6647, 1, Arg6646];
  var Arg6646_0 = Arg6646[0];
  var R0;
  return (((Shen.is_type(Arg6646_0, Shen.type_cons) && (Shen.is_type(Arg6646_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6646_0[2][1])) && (Shen.is_type(Arg6646_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6646_0[2][2][2]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise"], [[Shen.type_cons, Arg6646_0[1], Arg6646_0[2][2]]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.clause_form"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise-clause"]]);}))}, 1, [], "shen.linearise-clause"];





Shen.fns["shen.clause_form"] = [Shen.type_func, function shen_user_lambda6649(Arg6648) {
  if (Arg6648.length < 1) return [Shen.type_func, shen_user_lambda6649, 1, Arg6648];
  var Arg6648_0 = Arg6648[0];
  return (((Shen.is_type(Arg6648_0, Shen.type_cons) && (Shen.is_type(Arg6648_0[2], Shen.type_cons) && Shen.empty$question$(Arg6648_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.explicit_modes"], [Arg6648_0[1]]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.cf_help"], [Arg6648_0[2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.clause_form"]]);}))}, 1, [], "shen.clause_form"];





Shen.fns["shen.explicit_modes"] = [Shen.type_func, function shen_user_lambda6651(Arg6650) {
  if (Arg6650.length < 1) return [Shen.type_func, shen_user_lambda6651, 1, Arg6650];
  var Arg6650_0 = Arg6650[0];
  return ((Shen.is_type(Arg6650_0, Shen.type_cons))
  ? [Shen.type_cons, Arg6650_0[1], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.em_help"], Arg6650_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explicit_modes"]]);}))}, 1, [], "shen.explicit_modes"];





Shen.fns["shen.em_help"] = [Shen.type_func, function shen_user_lambda6653(Arg6652) {
  if (Arg6652.length < 1) return [Shen.type_func, shen_user_lambda6653, 1, Arg6652];
  var Arg6652_0 = Arg6652[0];
  return (((Shen.is_type(Arg6652_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6652_0[1])) && (Shen.is_type(Arg6652_0[2], Shen.type_cons) && (Shen.is_type(Arg6652_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6652_0[2][2][2]))))))
  ? Arg6652_0
  : [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6652_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]])}, 1, [], "shen.em_help"];





Shen.fns["shen.cf_help"] = [Shen.type_func, function shen_user_lambda6655(Arg6654) {
  if (Arg6654.length < 1) return [Shen.type_func, shen_user_lambda6655, 1, Arg6654];
  var Arg6654_0 = Arg6654[0];
  return (((Shen.is_type(Arg6654_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6654_0[1])) && (Shen.is_type(Arg6654_0[2], Shen.type_cons) && (Shen.is_type(Arg6654_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6654_0[2][1][1])) && (Shen.is_type(Arg6654_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6654_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6654_0[2][1][2][2][2]) && (Shen.is_type(Arg6654_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6654_0[2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, (((Shen.globals["shen.*occurs*"]))
  ? [Shen.type_symbol, "unify!"]
  : [Shen.type_symbol, "unify"]), Arg6654_0[2][1][2]], Shen.call(Shen.fns["shen.cf_help"], [Arg6654_0[2][2][1]])]
  : Arg6654_0)}, 1, [], "shen.cf_help"];





Shen.fns["occurs-check"] = [Shen.type_func, function shen_user_lambda6657(Arg6656) {
  if (Arg6656.length < 1) return [Shen.type_func, shen_user_lambda6657, 1, Arg6656];
  var Arg6656_0 = Arg6656[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6656_0)))
  ? (Shen.globals["shen.*occurs*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6656_0)))
  ? (Shen.globals["shen.*occurs*"] = false)
  : (function() {
  return Shen.simple_error("occurs-check expects + or -\x0a");})))}, 1, [], "occurs-check"];





Shen.fns["shen.aum"] = [Shen.type_func, function shen_user_lambda6659(Arg6658) {
  if (Arg6658.length < 2) return [Shen.type_func, shen_user_lambda6659, 2, Arg6658];
  var Arg6658_0 = Arg6658[0], Arg6658_1 = Arg6658[1];
  var R0;
  return (((Shen.is_type(Arg6658_0, Shen.type_cons) && (Shen.is_type(Arg6658_0[1], Shen.type_cons) && (Shen.is_type(Arg6658_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6658_0[2][1])) && (Shen.is_type(Arg6658_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6658_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6658_0[1][2], [Shen.type_cons, Shen.call(Shen.fns["shen.continuation_call"], [Arg6658_0[1][2], Arg6658_0[2][2][1]]), []]]], Arg6658_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [R0, [Shen.type_symbol, "+"]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aum"]]);}))}, 2, [], "shen.aum"];





Shen.fns["shen.continuation_call"] = [Shen.type_func, function shen_user_lambda6661(Arg6660) {
  if (Arg6660.length < 2) return [Shen.type_func, shen_user_lambda6661, 2, Arg6660];
  var Arg6660_0 = Arg6660[0], Arg6660_1 = Arg6660[1];
  var R0, R1;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "ProcessN"], Shen.call(Shen.fns["shen.extract_vars"], [Arg6660_0])]),
  (R1 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6660_1])),
  (R1 = Shen.call(Shen.fns["remove"], [[Shen.type_symbol, "Throwcontrol"], Shen.call(Shen.fns["difference"], [R1, R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cc_help"], [R1, Arg6660_1]);}))}, 2, [], "shen.continuation_call"];





Shen.fns["remove"] = [Shen.type_func, function shen_user_lambda6663(Arg6662) {
  if (Arg6662.length < 2) return [Shen.type_func, shen_user_lambda6663, 2, Arg6662];
  var Arg6662_0 = Arg6662[0], Arg6662_1 = Arg6662[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6662_0, Arg6662_1, []]);})}, 2, [], "remove"];





Shen.fns["shen.remove-h"] = [Shen.type_func, function shen_user_lambda6665(Arg6664) {
  if (Arg6664.length < 3) return [Shen.type_func, shen_user_lambda6665, 3, Arg6664];
  var Arg6664_0 = Arg6664[0], Arg6664_1 = Arg6664[1], Arg6664_2 = Arg6664[2];
  return ((Shen.empty$question$(Arg6664_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg6664_2]);})
  : (((Shen.is_type(Arg6664_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6664_1[1], Arg6664_0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6664_1[1], Arg6664_1[2], Arg6664_2]);})
  : ((Shen.is_type(Arg6664_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6664_0, Arg6664_1[2], [Shen.type_cons, Arg6664_1[1], Arg6664_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remove-h"]]);}))))}, 3, [], "shen.remove-h"];





Shen.fns["shen.cc_help"] = [Shen.type_func, function shen_user_lambda6667(Arg6666) {
  if (Arg6666.length < 2) return [Shen.type_func, shen_user_lambda6667, 2, Arg6666];
  var Arg6666_0 = Arg6666[0], Arg6666_1 = Arg6666[1];
  return (((Shen.empty$question$(Arg6666_0) && Shen.empty$question$(Arg6666_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]]
  : ((Shen.empty$question$(Arg6666_1))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6666_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]], []]]]]]]]]
  : ((Shen.empty$question$(Arg6666_0))
  ? [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6666_1, []]]]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6666_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6666_1, []]]]], []]]]]]]]])))}, 2, [], "shen.cc_help"];





Shen.fns["shen.make_mu_application"] = [Shen.type_func, function shen_user_lambda6669(Arg6668) {
  if (Arg6668.length < 2) return [Shen.type_func, shen_user_lambda6669, 2, Arg6668];
  var Arg6668_0 = Arg6668[0], Arg6668_1 = Arg6668[1];
  return (((Shen.is_type(Arg6668_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6668_0[1])) && (Shen.is_type(Arg6668_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6668_0[2][1]) && (Shen.is_type(Arg6668_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6668_0[2][2][2]) && Shen.empty$question$(Arg6668_1))))))))
  ? Arg6668_0[2][2][1]
  : (((Shen.is_type(Arg6668_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6668_0[1])) && (Shen.is_type(Arg6668_0[2], Shen.type_cons) && (Shen.is_type(Arg6668_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6668_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6668_0[2][2][2]) && Shen.is_type(Arg6668_1, Shen.type_cons))))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6668_0[2][1][1], [Shen.type_cons, Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6668_0[2][1][2], Arg6668_0[2][2]]], Arg6668_1[2]]), []]]], [Shen.type_cons, Arg6668_1[1], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.make_mu_application"]]);})))}, 2, [], "shen.make_mu_application"];





Shen.fns["shen.mu_reduction"] = [Shen.type_func, function shen_user_lambda6671(Arg6670) {
  if (Arg6670.length < 2) return [Shen.type_func, shen_user_lambda6671, 2, Arg6670];
  var Arg6670_0 = Arg6670[0], Arg6670_1 = Arg6670[1];
  var R0;
  return (((Shen.is_type(Arg6670_0, Shen.type_cons) && (Shen.is_type(Arg6670_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6670_0[1][1])) && (Shen.is_type(Arg6670_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6670_0[1][2][1][1])) && (Shen.is_type(Arg6670_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6670_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[1][2][2][2]) && (Shen.is_type(Arg6670_0[2], Shen.type_cons) && Shen.empty$question$(Arg6670_0[2][2]))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6670_0[1][2][1][2][1], Arg6670_0[1][2][2]]], Arg6670_0[2]], Arg6670_0[1][2][1][2][2][1]]);})
  : (((Shen.is_type(Arg6670_0, Shen.type_cons) && (Shen.is_type(Arg6670_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6670_0[1][1])) && (Shen.is_type(Arg6670_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[1][2][2][2]) && (Shen.is_type(Arg6670_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "_"], Arg6670_0[1][2][1])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [Arg6670_0[1][2][2][1], Arg6670_1]);})
  : (((Shen.is_type(Arg6670_0, Shen.type_cons) && (Shen.is_type(Arg6670_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6670_0[1][1])) && (Shen.is_type(Arg6670_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[1][2][2][2]) && (Shen.is_type(Arg6670_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[2][2]) && Shen.call(Shen.fns["shen.ephemeral_variable?"], [Arg6670_0[1][2][1], Arg6670_0[2][1]]))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["subst"], [Arg6670_0[2][1], Arg6670_0[1][2][1], Shen.call(Shen.fns["shen.mu_reduction"], [Arg6670_0[1][2][2][1], Arg6670_1])]);})
  : (((Shen.is_type(Arg6670_0, Shen.type_cons) && (Shen.is_type(Arg6670_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6670_0[1][1])) && (Shen.is_type(Arg6670_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[1][2][2][2]) && (Shen.is_type(Arg6670_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[2][2]) && Shen.call(Shen.fns["variable?"], [Arg6670_0[1][2][1]]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6670_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, Arg6670_0[2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6670_0[1][2][2][1], Arg6670_1]), []]]]]]]
  : (((Shen.is_type(Arg6670_0, Shen.type_cons) && (Shen.is_type(Arg6670_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6670_0[1][1])) && (Shen.is_type(Arg6670_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[1][2][2][2]) && (Shen.is_type(Arg6670_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6670_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6670_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6670_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6670_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6670_0[1][2][2][1], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6670_0, Shen.type_cons) && (Shen.is_type(Arg6670_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6670_0[1][1])) && (Shen.is_type(Arg6670_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[1][2][2][2]) && (Shen.is_type(Arg6670_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6670_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6670_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6670_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6670_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6670_0[1][2][2][1], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6670_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6670_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6670_0, Shen.type_cons) && (Shen.is_type(Arg6670_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6670_0[1][1])) && (Shen.is_type(Arg6670_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[1][2][2][2]) && (Shen.is_type(Arg6670_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6670_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6670_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6670_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6670_0[1][2][1][2], Arg6670_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6670_0, Shen.type_cons) && (Shen.is_type(Arg6670_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6670_0[1][1])) && (Shen.is_type(Arg6670_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6670_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[1][2][2][2]) && (Shen.is_type(Arg6670_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6670_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6670_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6670_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6670_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6670_0[1][2][1][2], Arg6670_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.extract_vars"], [Arg6670_0[1][2][1]]), [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6670_0[1][2][1]])]), [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6670_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], []]]]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : Arg6670_0))))))))}, 2, [], "shen.mu_reduction"];





Shen.fns["shen.rcons_form"] = [Shen.type_func, function shen_user_lambda6673(Arg6672) {
  if (Arg6672.length < 1) return [Shen.type_func, shen_user_lambda6673, 1, Arg6672];
  var Arg6672_0 = Arg6672[0];
  return ((Shen.is_type(Arg6672_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6672_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6672_0[2]]), []]]]
  : Arg6672_0)}, 1, [], "shen.rcons_form"];





Shen.fns["shen.remove_modes"] = [Shen.type_func, function shen_user_lambda6675(Arg6674) {
  if (Arg6674.length < 1) return [Shen.type_func, shen_user_lambda6675, 1, Arg6674];
  var Arg6674_0 = Arg6674[0];
  return (((Shen.is_type(Arg6674_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6674_0[1])) && (Shen.is_type(Arg6674_0[2], Shen.type_cons) && (Shen.is_type(Arg6674_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6674_0[2][2][1])) && Shen.empty$question$(Arg6674_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6674_0[2][1]]);})
  : (((Shen.is_type(Arg6674_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6674_0[1])) && (Shen.is_type(Arg6674_0[2], Shen.type_cons) && (Shen.is_type(Arg6674_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6674_0[2][2][1])) && Shen.empty$question$(Arg6674_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6674_0[2][1]]);})
  : ((Shen.is_type(Arg6674_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove_modes"], [Arg6674_0[1]]), Shen.call(Shen.fns["shen.remove_modes"], [Arg6674_0[2]])]
  : Arg6674_0)))}, 1, [], "shen.remove_modes"];





Shen.fns["shen.ephemeral_variable?"] = [Shen.type_func, function shen_user_lambda6677(Arg6676) {
  if (Arg6676.length < 2) return [Shen.type_func, shen_user_lambda6677, 2, Arg6676];
  var Arg6676_0 = Arg6676[0], Arg6676_1 = Arg6676[1];
  return (Shen.call(Shen.fns["variable?"], [Arg6676_0]) && Shen.call(Shen.fns["variable?"], [Arg6676_1]))}, 2, [], "shen.ephemeral_variable?"];





Shen.fns["shen.prolog_constant?"] = [Shen.type_func, function shen_user_lambda6679(Arg6678) {
  if (Arg6678.length < 1) return [Shen.type_func, shen_user_lambda6679, 1, Arg6678];
  var Arg6678_0 = Arg6678[0];
  return ((Shen.is_type(Arg6678_0, Shen.type_cons))
  ? false
  : true)}, 1, [], "shen.prolog_constant?"];





Shen.fns["shen.aum_to_shen"] = [Shen.type_func, function shen_user_lambda6681(Arg6680) {
  if (Arg6680.length < 1) return [Shen.type_func, shen_user_lambda6681, 1, Arg6680];
  var Arg6680_0 = Arg6680[0];
  return (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.be"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6680_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6680_0[2][2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6680_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6680_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6680_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.result"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.dereferencing"], Arg6680_0[2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6680_0[2][2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6680_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.else"], Arg6680_0[2][2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6680_0[2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6680_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6680_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variable"], Arg6680_0[2][2][2][1])) && Shen.empty$question$(Arg6680_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pvar?"], [Shen.type_cons, Arg6680_0[1], []]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.non-empty"], Arg6680_0[2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6680_0[2][2][2][2][1])) && Shen.empty$question$(Arg6680_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, Arg6680_0[1], []]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6680_0[2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6680_0[2][2][2][2][1]) && (Shen.is_type(Arg6680_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6680_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6680_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.aum_to_shen"], [Arg6680_0[2][2][2][2][2][2][2][1]]);})
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6680_0[2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6680_0[2][2][2][2][1], Shen.type_cons) && (Shen.is_type(Arg6680_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6680_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6680_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6680_0[2][2][2][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [[Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6680_0[2][2][2][2][1][2], Arg6680_0[2][2][2][2][2]]]]]]]), []]]]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6680_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6680_0[2][2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.bindv"], [Shen.type_cons, Arg6680_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.chwild"], [Arg6680_0[2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6680_0[2][2][2][2][2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.unbindv"], [Shen.type_cons, Arg6680_0[2][1], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]]], []]]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "identical"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6680_0[2][2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6680_0[2][2][2][2][1], [Shen.type_cons, Arg6680_0[1], []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.failed!"], Arg6680_0)))
  ? false
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "head"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6680_0[2][2][2]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tail"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6680_0[2][2][2]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.pop"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.stack"], Arg6680_0[2][2][1])) && Shen.empty$question$(Arg6680_0[2][2][2]))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], []]]]
  : (((Shen.is_type(Arg6680_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "call"], Arg6680_0[1])) && (Shen.is_type(Arg6680_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6680_0[2][1])) && (Shen.is_type(Arg6680_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.continuation"], Arg6680_0[2][2][1])) && (Shen.is_type(Arg6680_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6680_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, Shen.call(Shen.fns["shen.call_the_continuation"], [Shen.call(Shen.fns["shen.chwild"], [Arg6680_0[2][2][2][1]]), [Shen.type_symbol, "ProcessN"], [Shen.type_symbol, "Continuation"]]), []]]]
  : Arg6680_0))))))))))))))}, 1, [], "shen.aum_to_shen"];





Shen.fns["shen.chwild"] = [Shen.type_func, function shen_user_lambda6683(Arg6682) {
  if (Arg6682.length < 1) return [Shen.type_func, shen_user_lambda6683, 1, Arg6682];
  var Arg6682_0 = Arg6682[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6682_0, [Shen.type_symbol, "_"])))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]
  : ((Shen.is_type(Arg6682_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.chwild"], Arg6682_0]);})
  : Arg6682_0))}, 1, [], "shen.chwild"];





Shen.fns["shen.newpv"] = [Shen.type_func, function shen_user_lambda6685(Arg6684) {
  if (Arg6684.length < 1) return [Shen.type_func, shen_user_lambda6685, 1, Arg6684];
  var Arg6684_0 = Arg6684[0];
  var R0, R1;
  return ((R0 = (Shen.absvector_ref((Shen.globals["shen.*varcounter*"]), Arg6684_0) + 1)),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6684_0, R0),
  (R1 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6684_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.call(Shen.fns["limit"], [R1]))))
  ? Shen.call(Shen.fns["shen.resizeprocessvector"], [Arg6684_0, R0])
  : [Shen.type_symbol, "shen.skip"]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mk-pvar"], [R0]);}))}, 1, [], "shen.newpv"];





Shen.fns["shen.resizeprocessvector"] = [Shen.type_func, function shen_user_lambda6687(Arg6686) {
  if (Arg6686.length < 2) return [Shen.type_func, shen_user_lambda6687, 2, Arg6686];
  var Arg6686_0 = Arg6686[0], Arg6686_1 = Arg6686[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6686_0)),
  (R0 = Shen.call(Shen.fns["shen.resize-vector"], [R0, (Arg6686_1 + Arg6686_1), [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6686_0, R0))}, 2, [], "shen.resizeprocessvector"];





Shen.fns["shen.resize-vector"] = [Shen.type_func, function shen_user_lambda6689(Arg6688) {
  if (Arg6688.length < 3) return [Shen.type_func, shen_user_lambda6689, 3, Arg6688];
  var Arg6688_0 = Arg6688[0], Arg6688_1 = Arg6688[1], Arg6688_2 = Arg6688[2];
  var R0;
  return ((R0 = Shen.absvector_set(Shen.absvector((1 + Arg6688_1)), 0, Arg6688_1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector"], [Arg6688_0, R0, Shen.call(Shen.fns["limit"], [Arg6688_0]), Arg6688_1, Arg6688_2]);}))}, 3, [], "shen.resize-vector"];





Shen.fns["shen.copy-vector"] = [Shen.type_func, function shen_user_lambda6691(Arg6690) {
  if (Arg6690.length < 5) return [Shen.type_func, shen_user_lambda6691, 5, Arg6690];
  var Arg6690_0 = Arg6690[0], Arg6690_1 = Arg6690[1], Arg6690_2 = Arg6690[2], Arg6690_3 = Arg6690[3], Arg6690_4 = Arg6690[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(1 + Arg6690_2), (Arg6690_3 + 1), Arg6690_4, Shen.call(Shen.fns["shen.copy-vector-stage-1"], [1, Arg6690_0, Arg6690_1, (1 + Arg6690_2)])]);})}, 5, [], "shen.copy-vector"];





Shen.fns["shen.copy-vector-stage-1"] = [Shen.type_func, function shen_user_lambda6693(Arg6692) {
  if (Arg6692.length < 4) return [Shen.type_func, shen_user_lambda6693, 4, Arg6692];
  var Arg6692_0 = Arg6692[0], Arg6692_1 = Arg6692[1], Arg6692_2 = Arg6692[2], Arg6692_3 = Arg6692[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6692_3, Arg6692_0)))
  ? Arg6692_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-1"], [(1 + Arg6692_0), Arg6692_1, Shen.absvector_set(Arg6692_2, Arg6692_0, Shen.absvector_ref(Arg6692_1, Arg6692_0)), Arg6692_3]);}))}, 4, [], "shen.copy-vector-stage-1"];





Shen.fns["shen.copy-vector-stage-2"] = [Shen.type_func, function shen_user_lambda6695(Arg6694) {
  if (Arg6694.length < 4) return [Shen.type_func, shen_user_lambda6695, 4, Arg6694];
  var Arg6694_0 = Arg6694[0], Arg6694_1 = Arg6694[1], Arg6694_2 = Arg6694[2], Arg6694_3 = Arg6694[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6694_1, Arg6694_0)))
  ? Arg6694_3
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(Arg6694_0 + 1), Arg6694_1, Arg6694_2, Shen.absvector_set(Arg6694_3, Arg6694_0, Arg6694_2)]);}))}, 4, [], "shen.copy-vector-stage-2"];





Shen.fns["shen.mk-pvar"] = [Shen.type_func, function shen_user_lambda6697(Arg6696) {
  if (Arg6696.length < 1) return [Shen.type_func, shen_user_lambda6697, 1, Arg6696];
  var Arg6696_0 = Arg6696[0];
  return Shen.absvector_set(Shen.absvector_set(Shen.absvector(2), 0, [Shen.type_symbol, "shen.pvar"]), 1, Arg6696_0)}, 1, [], "shen.mk-pvar"];





Shen.fns["shen.pvar?"] = [Shen.type_func, function shen_user_lambda6699(Arg6698) {
  if (Arg6698.length < 1) return [Shen.type_func, shen_user_lambda6699, 1, Arg6698];
  var Arg6698_0 = Arg6698[0];
  return (Shen.absvector$question$(Arg6698_0) && Shen.unwind_tail(Shen.$eq$(Shen.absvector_ref(Arg6698_0, 0), [Shen.type_symbol, "shen.pvar"])))}, 1, [], "shen.pvar?"];





Shen.fns["shen.bindv"] = [Shen.type_func, function shen_user_lambda6701(Arg6700) {
  if (Arg6700.length < 3) return [Shen.type_func, shen_user_lambda6701, 3, Arg6700];
  var Arg6700_0 = Arg6700[0], Arg6700_1 = Arg6700[1], Arg6700_2 = Arg6700[2];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6700_2)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6700_0, 1), Arg6700_1))}, 3, [], "shen.bindv"];





Shen.fns["shen.unbindv"] = [Shen.type_func, function shen_user_lambda6703(Arg6702) {
  if (Arg6702.length < 2) return [Shen.type_func, shen_user_lambda6703, 2, Arg6702];
  var Arg6702_0 = Arg6702[0], Arg6702_1 = Arg6702[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6702_1)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6702_0, 1), [Shen.type_symbol, "shen.-null-"]))}, 2, [], "shen.unbindv"];





Shen.fns["shen.incinfs"] = [Shen.type_func, function shen_user_lambda6705(Arg6704) {
  if (Arg6704.length < 0) return [Shen.type_func, shen_user_lambda6705, 0, Arg6704];
  return (Shen.globals["shen.*infs*"] = (1 + (Shen.globals["shen.*infs*"])))}, 0, [], "shen.incinfs"];





Shen.fns["shen.call_the_continuation"] = [Shen.type_func, function shen_user_lambda6707(Arg6706) {
  if (Arg6706.length < 3) return [Shen.type_func, shen_user_lambda6707, 3, Arg6706];
  var Arg6706_0 = Arg6706[0], Arg6706_1 = Arg6706[1], Arg6706_2 = Arg6706[2];
  var R0;
  return (((Shen.is_type(Arg6706_0, Shen.type_cons) && (Shen.is_type(Arg6706_0[1], Shen.type_cons) && Shen.empty$question$(Arg6706_0[2]))))
  ? [Shen.type_cons, Arg6706_0[1][1], Shen.call(Shen.fns["append"], [Arg6706_0[1][2], [Shen.type_cons, Arg6706_1, [Shen.type_cons, Arg6706_2, []]]])]
  : (((Shen.is_type(Arg6706_0, Shen.type_cons) && Shen.is_type(Arg6706_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.newcontinuation"], [Arg6706_0[2], Arg6706_1, Arg6706_2])),
  [Shen.type_cons, Arg6706_0[1][1], Shen.call(Shen.fns["append"], [Arg6706_0[1][2], [Shen.type_cons, Arg6706_1, [Shen.type_cons, R0, []]]])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call_the_continuation"]]);})))}, 3, [], "shen.call_the_continuation"];





Shen.fns["shen.newcontinuation"] = [Shen.type_func, function shen_user_lambda6709(Arg6708) {
  if (Arg6708.length < 3) return [Shen.type_func, shen_user_lambda6709, 3, Arg6708];
  var Arg6708_0 = Arg6708[0], Arg6708_1 = Arg6708[1], Arg6708_2 = Arg6708[2];
  return ((Shen.empty$question$(Arg6708_0))
  ? Arg6708_2
  : (((Shen.is_type(Arg6708_0, Shen.type_cons) && Shen.is_type(Arg6708_0[1], Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_cons, Arg6708_0[1][1], Shen.call(Shen.fns["append"], [Arg6708_0[1][2], [Shen.type_cons, Arg6708_1, [Shen.type_cons, Shen.call(Shen.fns["shen.newcontinuation"], [Arg6708_0[2], Arg6708_1, Arg6708_2]), []]]])], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.newcontinuation"]]);})))}, 3, [], "shen.newcontinuation"];





Shen.fns["return"] = [Shen.type_func, function shen_user_lambda6711(Arg6710) {
  if (Arg6710.length < 3) return [Shen.type_func, shen_user_lambda6711, 3, Arg6710];
  var Arg6710_0 = Arg6710[0], Arg6710_1 = Arg6710[1], Arg6710_2 = Arg6710[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6710_0, Arg6710_1]);})}, 3, [], "return"];





Shen.fns["shen.measure&return"] = [Shen.type_func, function shen_user_lambda6713(Arg6712) {
  if (Arg6712.length < 3) return [Shen.type_func, shen_user_lambda6713, 3, Arg6712];
  var Arg6712_0 = Arg6712[0], Arg6712_1 = Arg6712[1], Arg6712_2 = Arg6712[2];
  return (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [(Shen.globals["shen.*infs*"]), " inferences\x0a", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6712_0, Arg6712_1]);}))}, 3, [], "shen.measure&return"];





Shen.fns["unify"] = [Shen.type_func, function shen_user_lambda6715(Arg6714) {
  if (Arg6714.length < 4) return [Shen.type_func, shen_user_lambda6715, 4, Arg6714];
  var Arg6714_0 = Arg6714[0], Arg6714_1 = Arg6714[1], Arg6714_2 = Arg6714[2], Arg6714_3 = Arg6714[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6714_0, Arg6714_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6714_1, Arg6714_2]), Arg6714_2, Arg6714_3]);})}, 4, [], "unify"];





Shen.fns["shen.lzy="] = [Shen.type_func, function shen_user_lambda6717(Arg6716) {
  if (Arg6716.length < 4) return [Shen.type_func, shen_user_lambda6717, 4, Arg6716];
  var Arg6716_0 = Arg6716[0], Arg6716_1 = Arg6716[1], Arg6716_2 = Arg6716[2], Arg6716_3 = Arg6716[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6716_1, Arg6716_0)))
  ? Shen.thaw(Arg6716_3)
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6716_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6716_0, Arg6716_1, Arg6716_2, Arg6716_3]);})
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6716_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6716_1, Arg6716_0, Arg6716_2, Arg6716_3]);})
  : (((Shen.is_type(Arg6716_0, Shen.type_cons) && Shen.is_type(Arg6716_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6716_0[1], Arg6716_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6716_1[1], Arg6716_2]), Arg6716_2, (new Shen.Freeze([Arg6716_0, Arg6716_1, Arg6716_2, Arg6716_3], function(Arg6718) {
  var Arg6718_0 = Arg6718[0], Arg6718_1 = Arg6718[1], Arg6718_2 = Arg6718[2], Arg6718_3 = Arg6718[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6718_0[2], Arg6718_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6718_1[2], Arg6718_2]), Arg6718_2, Arg6718_3]);});})}))]);})
  : false))))}, 4, [], "shen.lzy="];





Shen.fns["shen.deref"] = [Shen.type_func, function shen_user_lambda6721(Arg6720) {
  if (Arg6720.length < 2) return [Shen.type_func, shen_user_lambda6721, 2, Arg6720];
  var Arg6720_0 = Arg6720[0], Arg6720_1 = Arg6720[1];
  var R0;
  return ((Shen.is_type(Arg6720_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6720_0[1], Arg6720_1]), Shen.call(Shen.fns["shen.deref"], [Arg6720_0[2], Arg6720_1])]
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6720_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6720_0, Arg6720_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6720_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [R0, Arg6720_1]);})))
  : Arg6720_0))}, 2, [], "shen.deref"];





Shen.fns["shen.lazyderef"] = [Shen.type_func, function shen_user_lambda6723(Arg6722) {
  if (Arg6722.length < 2) return [Shen.type_func, shen_user_lambda6723, 2, Arg6722];
  var Arg6722_0 = Arg6722[0], Arg6722_1 = Arg6722[1];
  var R0;
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg6722_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6722_0, Arg6722_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6722_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lazyderef"], [R0, Arg6722_1]);})))
  : Arg6722_0)}, 2, [], "shen.lazyderef"];





Shen.fns["shen.valvector"] = [Shen.type_func, function shen_user_lambda6725(Arg6724) {
  if (Arg6724.length < 2) return [Shen.type_func, shen_user_lambda6725, 2, Arg6724];
  var Arg6724_0 = Arg6724[0], Arg6724_1 = Arg6724[1];
  return Shen.absvector_ref(Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6724_1), Shen.absvector_ref(Arg6724_0, 1))}, 2, [], "shen.valvector"];





Shen.fns["unify!"] = [Shen.type_func, function shen_user_lambda6727(Arg6726) {
  if (Arg6726.length < 4) return [Shen.type_func, shen_user_lambda6727, 4, Arg6726];
  var Arg6726_0 = Arg6726[0], Arg6726_1 = Arg6726[1], Arg6726_2 = Arg6726[2], Arg6726_3 = Arg6726[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6726_0, Arg6726_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6726_1, Arg6726_2]), Arg6726_2, Arg6726_3]);})}, 4, [], "unify!"];





Shen.fns["shen.lzy=!"] = [Shen.type_func, function shen_user_lambda6729(Arg6728) {
  if (Arg6728.length < 4) return [Shen.type_func, shen_user_lambda6729, 4, Arg6728];
  var Arg6728_0 = Arg6728[0], Arg6728_1 = Arg6728[1], Arg6728_2 = Arg6728[2], Arg6728_3 = Arg6728[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6728_1, Arg6728_0)))
  ? Shen.thaw(Arg6728_3)
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6728_0]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6728_0, Shen.call(Shen.fns["shen.deref"], [Arg6728_1, Arg6728_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6728_0, Arg6728_1, Arg6728_2, Arg6728_3]);})
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6728_1]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6728_1, Shen.call(Shen.fns["shen.deref"], [Arg6728_0, Arg6728_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6728_1, Arg6728_0, Arg6728_2, Arg6728_3]);})
  : (((Shen.is_type(Arg6728_0, Shen.type_cons) && Shen.is_type(Arg6728_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6728_0[1], Arg6728_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6728_1[1], Arg6728_2]), Arg6728_2, (new Shen.Freeze([Arg6728_0, Arg6728_1, Arg6728_2, Arg6728_3], function(Arg6730) {
  var Arg6730_0 = Arg6730[0], Arg6730_1 = Arg6730[1], Arg6730_2 = Arg6730[2], Arg6730_3 = Arg6730[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6730_0[2], Arg6730_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6730_1[2], Arg6730_2]), Arg6730_2, Arg6730_3]);});})}))]);})
  : false))))}, 4, [], "shen.lzy=!"];





Shen.fns["shen.occurs?"] = [Shen.type_func, function shen_user_lambda6733(Arg6732) {
  if (Arg6732.length < 2) return [Shen.type_func, shen_user_lambda6733, 2, Arg6732];
  var Arg6732_0 = Arg6732[0], Arg6732_1 = Arg6732[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6732_1, Arg6732_0)))
  ? true
  : ((Shen.is_type(Arg6732_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.occurs?"], [Arg6732_0, Arg6732_1[1]]) || Shen.call(Shen.fns["shen.occurs?"], [Arg6732_0, Arg6732_1[2]]))
  : false))}, 2, [], "shen.occurs?"];





Shen.fns["identical"] = [Shen.type_func, function shen_user_lambda6735(Arg6734) {
  if (Arg6734.length < 4) return [Shen.type_func, shen_user_lambda6735, 4, Arg6734];
  var Arg6734_0 = Arg6734[0], Arg6734_1 = Arg6734[1], Arg6734_2 = Arg6734[2], Arg6734_3 = Arg6734[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6734_0, Arg6734_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6734_1, Arg6734_2]), Arg6734_2, Arg6734_3]);})}, 4, [], "identical"];





Shen.fns["shen.lzy=="] = [Shen.type_func, function shen_user_lambda6737(Arg6736) {
  if (Arg6736.length < 4) return [Shen.type_func, shen_user_lambda6737, 4, Arg6736];
  var Arg6736_0 = Arg6736[0], Arg6736_1 = Arg6736[1], Arg6736_2 = Arg6736[2], Arg6736_3 = Arg6736[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6736_1, Arg6736_0)))
  ? Shen.thaw(Arg6736_3)
  : (((Shen.is_type(Arg6736_0, Shen.type_cons) && Shen.is_type(Arg6736_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6736_0[1], Arg6736_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6736_1[1], Arg6736_2]), Arg6736_2, (new Shen.Freeze([Arg6736_0, Arg6736_1, Arg6736_2, Arg6736_3], function(Arg6738) {
  var Arg6738_0 = Arg6738[0], Arg6738_1 = Arg6738[1], Arg6738_2 = Arg6738[2], Arg6738_3 = Arg6738[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Arg6738_0[2], Arg6738_1[2], Arg6738_2, Arg6738_3]);});})}))]);})
  : false))}, 4, [], "shen.lzy=="];





Shen.fns["shen.pvar"] = [Shen.type_func, function shen_user_lambda6741(Arg6740) {
  if (Arg6740.length < 1) return [Shen.type_func, shen_user_lambda6741, 1, Arg6740];
  var Arg6740_0 = Arg6740[0];
  return ("Var" + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg6740_0, 1), "", [Shen.type_symbol, "shen.a"]]))}, 1, [], "shen.pvar"];





Shen.fns["bind"] = [Shen.type_func, function shen_user_lambda6743(Arg6742) {
  if (Arg6742.length < 4) return [Shen.type_func, shen_user_lambda6743, 4, Arg6742];
  var Arg6742_0 = Arg6742[0], Arg6742_1 = Arg6742[1], Arg6742_2 = Arg6742[2], Arg6742_3 = Arg6742[3];
  var R0;
  return (Shen.call(Shen.fns["shen.bindv"], [Arg6742_0, Arg6742_1, Arg6742_2]),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6742_3))),
  Shen.call(Shen.fns["shen.unbindv"], [Arg6742_0, Arg6742_2]),
  R0)}, 4, [], "bind"];





Shen.fns["fwhen"] = [Shen.type_func, function shen_user_lambda6745(Arg6744) {
  if (Arg6744.length < 3) return [Shen.type_func, shen_user_lambda6745, 3, Arg6744];
  var Arg6744_0 = Arg6744[0], Arg6744_1 = Arg6744[1], Arg6744_2 = Arg6744[2];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg6744_0)))
  ? Shen.thaw(Arg6744_2)
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg6744_0)))
  ? false
  : (function() {
  return Shen.simple_error(("fwhen expects a boolean: not " + Shen.call(Shen.fns["shen.app"], [Arg6744_0, "%", [Shen.type_symbol, "shen.s"]])));})))}, 3, [], "fwhen"];





Shen.fns["call"] = [Shen.type_func, function shen_user_lambda6747(Arg6746) {
  if (Arg6746.length < 3) return [Shen.type_func, shen_user_lambda6747, 3, Arg6746];
  var Arg6746_0 = Arg6746[0], Arg6746_1 = Arg6746[1], Arg6746_2 = Arg6746[2];
  return ((Shen.is_type(Arg6746_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6746_0[1], Arg6746_1])]), Arg6746_0[2], Arg6746_1, Arg6746_2]);})
  : false)}, 3, [], "call"];





Shen.fns["shen.call-help"] = [Shen.type_func, function shen_user_lambda6749(Arg6748) {
  if (Arg6748.length < 4) return [Shen.type_func, shen_user_lambda6749, 4, Arg6748];
  var Arg6748_0 = Arg6748[0], Arg6748_1 = Arg6748[1], Arg6748_2 = Arg6748[2], Arg6748_3 = Arg6748[3];
  return ((Shen.empty$question$(Arg6748_1))
  ? (function() {
  return Shen.call_tail(Arg6748_0, [Arg6748_2, Arg6748_3]);})
  : ((Shen.is_type(Arg6748_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Arg6748_0, [Arg6748_1[1]]), Arg6748_1[2], Arg6748_2, Arg6748_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-help"]]);})))}, 4, [], "shen.call-help"];





Shen.fns["shen.intprolog"] = [Shen.type_func, function shen_user_lambda6751(Arg6750) {
  if (Arg6750.length < 1) return [Shen.type_func, shen_user_lambda6751, 1, Arg6750];
  var Arg6750_0 = Arg6750[0];
  var R0;
  return (((Shen.is_type(Arg6750_0, Shen.type_cons) && Shen.is_type(Arg6750_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help"], [Arg6750_0[1][1], Shen.call(Shen.fns["shen.insert-prolog-variables"], [[Shen.type_cons, Arg6750_0[1][2], [Shen.type_cons, Arg6750_0[2], []]], R0]), R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog"]]);}))}, 1, [], "shen.intprolog"];





Shen.fns["shen.intprolog-help"] = [Shen.type_func, function shen_user_lambda6753(Arg6752) {
  if (Arg6752.length < 3) return [Shen.type_func, shen_user_lambda6753, 3, Arg6752];
  var Arg6752_0 = Arg6752[0], Arg6752_1 = Arg6752[1], Arg6752_2 = Arg6752[2];
  return (((Shen.is_type(Arg6752_1, Shen.type_cons) && (Shen.is_type(Arg6752_1[2], Shen.type_cons) && Shen.empty$question$(Arg6752_1[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Arg6752_0, Arg6752_1[1], Arg6752_1[2][1], Arg6752_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help"]]);}))}, 3, [], "shen.intprolog-help"];





Shen.fns["shen.intprolog-help-help"] = [Shen.type_func, function shen_user_lambda6755(Arg6754) {
  if (Arg6754.length < 4) return [Shen.type_func, shen_user_lambda6755, 4, Arg6754];
  var Arg6754_0 = Arg6754[0], Arg6754_1 = Arg6754[1], Arg6754_2 = Arg6754[2], Arg6754_3 = Arg6754[3];
  return ((Shen.empty$question$(Arg6754_1))
  ? (function() {
  return Shen.call_tail(Arg6754_0, [Arg6754_3, (new Shen.Freeze([Arg6754_0, Arg6754_1, Arg6754_2, Arg6754_3], function(Arg6756) {
  var Arg6756_0 = Arg6756[0], Arg6756_1 = Arg6756[1], Arg6756_2 = Arg6756[2], Arg6756_3 = Arg6756[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6756_2, Arg6756_3]);});})}))]);})
  : ((Shen.is_type(Arg6754_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Shen.call(Arg6754_0, [Arg6754_1[1]]), Arg6754_1[2], Arg6754_2, Arg6754_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help-help"]]);})))}, 4, [], "shen.intprolog-help-help"];





Shen.fns["shen.call-rest"] = [Shen.type_func, function shen_user_lambda6759(Arg6758) {
  if (Arg6758.length < 2) return [Shen.type_func, shen_user_lambda6759, 2, Arg6758];
  var Arg6758_0 = Arg6758[0], Arg6758_1 = Arg6758[1];
  return ((Shen.empty$question$(Arg6758_0))
  ? true
  : (((Shen.is_type(Arg6758_0, Shen.type_cons) && (Shen.is_type(Arg6758_0[1], Shen.type_cons) && Shen.is_type(Arg6758_0[1][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [[Shen.type_cons, [Shen.type_cons, Shen.call(Arg6758_0[1][1], [Arg6758_0[1][2][1]]), Arg6758_0[1][2][2]], Arg6758_0[2]], Arg6758_1]);})
  : (((Shen.is_type(Arg6758_0, Shen.type_cons) && (Shen.is_type(Arg6758_0[1], Shen.type_cons) && Shen.empty$question$(Arg6758_0[1][2]))))
  ? (function() {
  return Shen.call_tail(Arg6758_0[1][1], [Arg6758_1, (new Shen.Freeze([Arg6758_0, Arg6758_1], function(Arg6760) {
  var Arg6760_0 = Arg6760[0], Arg6760_1 = Arg6760[1];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6760_0[2], Arg6760_1]);});})}))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-rest"]]);}))))}, 2, [], "shen.call-rest"];





Shen.fns["shen.start-new-prolog-process"] = [Shen.type_func, function shen_user_lambda6763(Arg6762) {
  if (Arg6762.length < 0) return [Shen.type_func, shen_user_lambda6763, 0, Arg6762];
  var R0;
  return ((R0 = (Shen.globals["shen.*process-counter*"] = (1 + (Shen.globals["shen.*process-counter*"])))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise-prolog"], [R0]);}))}, 0, [], "shen.start-new-prolog-process"];





Shen.fns["shen.insert-prolog-variables"] = [Shen.type_func, function shen_user_lambda6765(Arg6764) {
  if (Arg6764.length < 2) return [Shen.type_func, shen_user_lambda6765, 2, Arg6764];
  var Arg6764_0 = Arg6764[0], Arg6764_1 = Arg6764[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6764_0, Shen.call(Shen.fns["shen.flatten"], [Arg6764_0]), Arg6764_1]);})}, 2, [], "shen.insert-prolog-variables"];





Shen.fns["shen.insert-prolog-variables-help"] = [Shen.type_func, function shen_user_lambda6767(Arg6766) {
  if (Arg6766.length < 3) return [Shen.type_func, shen_user_lambda6767, 3, Arg6766];
  var Arg6766_0 = Arg6766[0], Arg6766_1 = Arg6766[1], Arg6766_2 = Arg6766[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6766_1))
  ? Arg6766_0
  : (((Shen.is_type(Arg6766_1, Shen.type_cons) && Shen.call(Shen.fns["variable?"], [Arg6766_1[1]])))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6766_2])),
  (R0 = Shen.call(Shen.fns["subst"], [R0, Arg6766_1[1], Arg6766_0])),
  (R1 = Shen.call(Shen.fns["remove"], [Arg6766_1[1], Arg6766_1[2]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [R0, R1, Arg6766_2]);}))
  : ((Shen.is_type(Arg6766_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6766_0, Arg6766_1[2], Arg6766_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-prolog-variables-help"]]);}))))}, 3, [], "shen.insert-prolog-variables-help"];





Shen.fns["shen.initialise-prolog"] = [Shen.type_func, function shen_user_lambda6769(Arg6768) {
  if (Arg6768.length < 1) return [Shen.type_func, shen_user_lambda6769, 1, Arg6768];
  var Arg6768_0 = Arg6768[0];
  return (Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6768_0, Shen.call(Shen.fns["shen.fillvector"], [Shen.vector(10), 1, 10, [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6768_0, 1),
  Arg6768_0)}, 1, [], "shen.initialise-prolog"];










Shen.fns["shen.f_error"] = [Shen.type_func, function shen_user_lambda7331(Arg7330) {
  if (Arg7330.length < 1) return [Shen.type_func, shen_user_lambda7331, 1, Arg7330];
  var Arg7330_0 = Arg7330[0];
  return (Shen.call(Shen.fns["shen.prhush"], [("partial function " + Shen.call(Shen.fns["shen.app"], [Arg7330_0, ";\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  ((((!Shen.call(Shen.fns["shen.tracked?"], [Arg7330_0])) && Shen.call(Shen.fns["y-or-n?"], [("track " + Shen.call(Shen.fns["shen.app"], [Arg7330_0, "? ", [Shen.type_symbol, "shen.a"]]))])))
  ? Shen.call(Shen.fns["shen.track-function"], [Shen.call(Shen.fns["ps"], [Arg7330_0])])
  : [Shen.type_symbol, "shen.ok"]),
  (function() {
  return Shen.simple_error("aborted");}))}, 1, [], "shen.f_error"];





Shen.fns["shen.tracked?"] = [Shen.type_func, function shen_user_lambda7333(Arg7332) {
  if (Arg7332.length < 1) return [Shen.type_func, shen_user_lambda7333, 1, Arg7332];
  var Arg7332_0 = Arg7332[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7332_0, (Shen.globals["shen.*tracking*"])]);})}, 1, [], "shen.tracked?"];





Shen.fns["track"] = [Shen.type_func, function shen_user_lambda7335(Arg7334) {
  if (Arg7334.length < 1) return [Shen.type_func, shen_user_lambda7335, 1, Arg7334];
  var Arg7334_0 = Arg7334[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["ps"], [Arg7334_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.track-function"], [R0]);}))}, 1, [], "track"];





Shen.fns["shen.track-function"] = [Shen.type_func, function shen_user_lambda7337(Arg7336) {
  if (Arg7336.length < 1) return [Shen.type_func, shen_user_lambda7337, 1, Arg7336];
  var Arg7336_0 = Arg7336[0];
  var R0;
  return (((Shen.is_type(Arg7336_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7336_0[1])) && (Shen.is_type(Arg7336_0[2], Shen.type_cons) && (Shen.is_type(Arg7336_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7336_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7336_0[2][2][2][2])))))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7336_0[2][1], [Shen.type_cons, Arg7336_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-tracking-code"], [Arg7336_0[2][1], Arg7336_0[2][2][1], Arg7336_0[2][2][2][1]]), []]]]]),
  (R0 = Shen.call(Shen.fns["eval"], [R0])),
  (Shen.globals["shen.*tracking*"] = [Shen.type_cons, R0, (Shen.globals["shen.*tracking*"])]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.track-function"]]);}))}, 1, [], "shen.track-function"];





Shen.fns["shen.insert-tracking-code"] = [Shen.type_func, function shen_user_lambda7339(Arg7338) {
  if (Arg7338.length < 3) return [Shen.type_func, shen_user_lambda7339, 3, Arg7338];
  var Arg7338_0 = Arg7338[0], Arg7338_1 = Arg7338[1], Arg7338_2 = Arg7338[2];
  return [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.input-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg7338_0, [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg7338_1]), []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7338_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.output-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg7338_0, [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]], []]]], []]]]], []]]], []]]], []]]]}, 3, [], "shen.insert-tracking-code"];





Shen.call_toplevel(function shen_toplevel7342(Arg7340) {
  if (Arg7340.length < 0) return [Shen.type_func, shen_toplevel7342, 0, Arg7340];
  return (Shen.globals["shen.*step*"] = false)});




Shen.fns["step"] = [Shen.type_func, function shen_user_lambda7344(Arg7343) {
  if (Arg7343.length < 1) return [Shen.type_func, shen_user_lambda7344, 1, Arg7343];
  var Arg7343_0 = Arg7343[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7343_0)))
  ? (Shen.globals["shen.*step*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7343_0)))
  ? (Shen.globals["shen.*step*"] = false)
  : (function() {
  return Shen.simple_error("step expects a + or a -.\x0a");})))}, 1, [], "step"];





Shen.fns["spy"] = [Shen.type_func, function shen_user_lambda7346(Arg7345) {
  if (Arg7345.length < 1) return [Shen.type_func, shen_user_lambda7346, 1, Arg7345];
  var Arg7345_0 = Arg7345[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7345_0)))
  ? (Shen.globals["shen.*spy*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7345_0)))
  ? (Shen.globals["shen.*spy*"] = false)
  : (function() {
  return Shen.simple_error("spy expects a + or a -.\x0a");})))}, 1, [], "spy"];





Shen.fns["shen.terpri-or-read-char"] = [Shen.type_func, function shen_user_lambda7348(Arg7347) {
  if (Arg7347.length < 0) return [Shen.type_func, shen_user_lambda7348, 0, Arg7347];
  return (((Shen.globals["shen.*step*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check-byte"], [Shen.read_byte((Shen.globals["*stinput*"]))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 0, [], "shen.terpri-or-read-char"];





Shen.fns["shen.check-byte"] = [Shen.type_func, function shen_user_lambda7350(Arg7349) {
  if (Arg7349.length < 1) return [Shen.type_func, shen_user_lambda7350, 1, Arg7349];
  var Arg7349_0 = Arg7349[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7349_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("aborted");})
  : true)}, 1, [], "shen.check-byte"];





Shen.fns["shen.input-track"] = [Shen.type_func, function shen_user_lambda7352(Arg7351) {
  if (Arg7351.length < 3) return [Shen.type_func, shen_user_lambda7352, 3, Arg7351];
  var Arg7351_0 = Arg7351[0], Arg7351_1 = Arg7351[1], Arg7351_2 = Arg7351[2];
  return (Shen.call(Shen.fns["shen.prhush"], [("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7351_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg7351_0, ("> Inputs to " + Shen.call(Shen.fns["shen.app"], [Arg7351_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7351_0]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg7351_2]);}))}, 3, [], "shen.input-track"];





Shen.fns["shen.recursively-print"] = [Shen.type_func, function shen_user_lambda7354(Arg7353) {
  if (Arg7353.length < 1) return [Shen.type_func, shen_user_lambda7354, 1, Arg7353];
  var Arg7353_0 = Arg7353[0];
  return ((Shen.empty$question$(Arg7353_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [" ==>", Shen.call(Shen.fns["stoutput"], [])]);})
  : ((Shen.is_type(Arg7353_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["print"], [Arg7353_0[1]]),
  Shen.call(Shen.fns["shen.prhush"], [", ", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg7353_0[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursively-print"]]);})))}, 1, [], "shen.recursively-print"];





Shen.fns["shen.spaces"] = [Shen.type_func, function shen_user_lambda7356(Arg7355) {
  if (Arg7355.length < 1) return [Shen.type_func, shen_user_lambda7356, 1, Arg7355];
  var Arg7355_0 = Arg7355[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7355_0)))
  ? ""
  : (" " + Shen.call(Shen.fns["shen.spaces"], [(Arg7355_0 - 1)])))}, 1, [], "shen.spaces"];





Shen.fns["shen.output-track"] = [Shen.type_func, function shen_user_lambda7358(Arg7357) {
  if (Arg7357.length < 3) return [Shen.type_func, shen_user_lambda7358, 3, Arg7357];
  var Arg7357_0 = Arg7357[0], Arg7357_1 = Arg7357[1], Arg7357_2 = Arg7357[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7357_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg7357_0, ("> Output from " + Shen.call(Shen.fns["shen.app"], [Arg7357_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7357_0]), ("==> " + Shen.call(Shen.fns["shen.app"], [Arg7357_2, "", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})}, 3, [], "shen.output-track"];





Shen.fns["untrack"] = [Shen.type_func, function shen_user_lambda7360(Arg7359) {
  if (Arg7359.length < 1) return [Shen.type_func, shen_user_lambda7360, 1, Arg7359];
  var Arg7359_0 = Arg7359[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["ps"], [Arg7359_0])]);})}, 1, [], "untrack"];





Shen.fns["profile"] = [Shen.type_func, function shen_user_lambda7362(Arg7361) {
  if (Arg7361.length < 1) return [Shen.type_func, shen_user_lambda7362, 1, Arg7361];
  var Arg7361_0 = Arg7361[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.profile-help"], [Shen.call(Shen.fns["ps"], [Arg7361_0])]);})}, 1, [], "profile"];





Shen.fns["shen.profile-help"] = [Shen.type_func, function shen_user_lambda7364(Arg7363) {
  if (Arg7363.length < 1) return [Shen.type_func, shen_user_lambda7364, 1, Arg7363];
  var Arg7363_0 = Arg7363[0];
  var R0, R1;
  return (((Shen.is_type(Arg7363_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7363_0[1])) && (Shen.is_type(Arg7363_0[2], Shen.type_cons) && (Shen.is_type(Arg7363_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7363_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7363_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.f"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7363_0[2][1], [Shen.type_cons, Arg7363_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.profile-func"], [Arg7363_0[2][1], Arg7363_0[2][2][1], [Shen.type_cons, R0, Arg7363_0[2][2][1]]]), []]]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, Arg7363_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["subst"], [R0, Arg7363_0[2][1], Arg7363_0[2][2][2][1]]), []]]]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R1]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R0]),
  Arg7363_0[2][1])
  : (function() {
  return Shen.simple_error("Cannot profile.\x0a");}))}, 1, [], "shen.profile-help"];





Shen.fns["unprofile"] = [Shen.type_func, function shen_user_lambda7366(Arg7365) {
  if (Arg7365.length < 1) return [Shen.type_func, shen_user_lambda7366, 1, Arg7365];
  var Arg7365_0 = Arg7365[0];
  return (function() {
  return Shen.call_tail(Shen.fns["untrack"], [Arg7365_0]);})}, 1, [], "unprofile"];





Shen.fns["shen.profile-func"] = [Shen.type_func, function shen_user_lambda7368(Arg7367) {
  if (Arg7367.length < 3) return [Shen.type_func, shen_user_lambda7368, 3, Arg7367];
  var Arg7367_0 = Arg7367[0], Arg7367_1 = Arg7367[1], Arg7367_2 = Arg7367[2];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7367_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Record"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.put-profile"], [Shen.type_cons, Arg7367_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.get-profile"], [Shen.type_cons, Arg7367_0, []]], [Shen.type_cons, [Shen.type_symbol, "Finish"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]]]], []]]]]}, 3, [], "shen.profile-func"];





Shen.fns["profile-results"] = [Shen.type_func, function shen_user_lambda7370(Arg7369) {
  if (Arg7369.length < 1) return [Shen.type_func, shen_user_lambda7370, 1, Arg7369];
  var Arg7369_0 = Arg7369[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.get-profile"], [Arg7369_0])),
  Shen.call(Shen.fns["shen.put-profile"], [Arg7369_0, 0]),
  [Shen.fns['shen.tuple'], Arg7369_0, R0])}, 1, [], "profile-results"];





Shen.fns["shen.get-profile"] = [Shen.type_func, function shen_user_lambda7372(Arg7371) {
  if (Arg7371.length < 1) return [Shen.type_func, shen_user_lambda7372, 1, Arg7371];
  var Arg7371_0 = Arg7371[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7371_0, [Shen.type_symbol, "profile"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7374(Arg7373) {
  if (Arg7373.length < 1) return [Shen.type_func, shen_user_lambda7374, 1, Arg7373];
  var Arg7373_0 = Arg7373[0];
  return 0}, 1, [], undefined]);})}, 1, [], "shen.get-profile"];





Shen.fns["shen.put-profile"] = [Shen.type_func, function shen_user_lambda7376(Arg7375) {
  if (Arg7375.length < 2) return [Shen.type_func, shen_user_lambda7376, 2, Arg7375];
  var Arg7375_0 = Arg7375[0], Arg7375_1 = Arg7375[1];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg7375_0, [Shen.type_symbol, "profile"], Arg7375_1, (Shen.globals["*property-vector*"])]);})}, 2, [], "shen.put-profile"];










Shen.call_toplevel(function shen_toplevel6356(Arg6354) {
  if (Arg6354.length < 0) return [Shen.type_func, shen_toplevel6356, 0, Arg6354];
  return (Shen.globals["shen.*installing-kl*"] = false)});




Shen.call_toplevel(function shen_toplevel6359(Arg6357) {
  if (Arg6357.length < 0) return [Shen.type_func, shen_toplevel6359, 0, Arg6357];
  return (Shen.globals["shen.*history*"] = [])});




Shen.call_toplevel(function shen_toplevel6362(Arg6360) {
  if (Arg6360.length < 0) return [Shen.type_func, shen_toplevel6362, 0, Arg6360];
  return (Shen.globals["shen.*tc*"] = false)});




Shen.call_toplevel(function shen_toplevel6365(Arg6363) {
  if (Arg6363.length < 0) return [Shen.type_func, shen_toplevel6365, 0, Arg6363];
  return (Shen.globals["*property-vector*"] = Shen.vector(20000))});




Shen.call_toplevel(function shen_toplevel6368(Arg6366) {
  if (Arg6366.length < 0) return [Shen.type_func, shen_toplevel6368, 0, Arg6366];
  return (Shen.globals["shen.*process-counter*"] = 0)});




Shen.call_toplevel(function shen_toplevel6371(Arg6369) {
  if (Arg6369.length < 0) return [Shen.type_func, shen_toplevel6371, 0, Arg6369];
  return (Shen.globals["shen.*varcounter*"] = Shen.vector(1000))});




Shen.call_toplevel(function shen_toplevel6374(Arg6372) {
  if (Arg6372.length < 0) return [Shen.type_func, shen_toplevel6374, 0, Arg6372];
  return (Shen.globals["shen.*prologvectors*"] = Shen.vector(1000))});




Shen.call_toplevel(function shen_toplevel6377(Arg6375) {
  if (Arg6375.length < 0) return [Shen.type_func, shen_toplevel6377, 0, Arg6375];
  return (Shen.globals["shen.*reader-macros*"] = [])});




Shen.call_toplevel(function shen_toplevel6380(Arg6378) {
  if (Arg6378.length < 0) return [Shen.type_func, shen_toplevel6380, 0, Arg6378];
  return (Shen.globals["*home-directory*"] = [])});




Shen.call_toplevel(function shen_toplevel6383(Arg6381) {
  if (Arg6381.length < 0) return [Shen.type_func, shen_toplevel6383, 0, Arg6381];
  return (Shen.globals["shen.*gensym*"] = 0)});




Shen.call_toplevel(function shen_toplevel6386(Arg6384) {
  if (Arg6384.length < 0) return [Shen.type_func, shen_toplevel6386, 0, Arg6384];
  return (Shen.globals["shen.*tracking*"] = [])});




Shen.call_toplevel(function shen_toplevel6389(Arg6387) {
  if (Arg6387.length < 0) return [Shen.type_func, shen_toplevel6389, 0, Arg6387];
  return (Shen.globals["*home-directory*"] = "")});




Shen.call_toplevel(function shen_toplevel6392(Arg6390) {
  if (Arg6390.length < 0) return [Shen.type_func, shen_toplevel6392, 0, Arg6390];
  return (Shen.globals["shen.*alphabet*"] = [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "C"], [Shen.type_cons, [Shen.type_symbol, "D"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_symbol, "F"], [Shen.type_cons, [Shen.type_symbol, "G"], [Shen.type_cons, [Shen.type_symbol, "H"], [Shen.type_cons, [Shen.type_symbol, "I"], [Shen.type_cons, [Shen.type_symbol, "J"], [Shen.type_cons, [Shen.type_symbol, "K"], [Shen.type_cons, [Shen.type_symbol, "L"], [Shen.type_cons, [Shen.type_symbol, "M"], [Shen.type_cons, [Shen.type_symbol, "N"], [Shen.type_cons, [Shen.type_symbol, "O"], [Shen.type_cons, [Shen.type_symbol, "P"], [Shen.type_cons, [Shen.type_symbol, "Q"], [Shen.type_cons, [Shen.type_symbol, "R"], [Shen.type_cons, [Shen.type_symbol, "S"], [Shen.type_cons, [Shen.type_symbol, "T"], [Shen.type_cons, [Shen.type_symbol, "U"], [Shen.type_cons, [Shen.type_symbol, "V"], [Shen.type_cons, [Shen.type_symbol, "W"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]]]]]]]]]]]]]]]]]]]]]]]]])});




Shen.call_toplevel(function shen_toplevel6395(Arg6393) {
  if (Arg6393.length < 0) return [Shen.type_func, shen_toplevel6395, 0, Arg6393];
  return (Shen.globals["shen.*special*"] = [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]]]]]]]]])});




Shen.call_toplevel(function shen_toplevel6398(Arg6396) {
  if (Arg6396.length < 0) return [Shen.type_func, shen_toplevel6398, 0, Arg6396];
  return (Shen.globals["shen.*extraspecial*"] = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "defcc"], []]]]])});




Shen.call_toplevel(function shen_toplevel6401(Arg6399) {
  if (Arg6399.length < 0) return [Shen.type_func, shen_toplevel6401, 0, Arg6399];
  return (Shen.globals["shen.*spy*"] = false)});




Shen.call_toplevel(function shen_toplevel6404(Arg6402) {
  if (Arg6402.length < 0) return [Shen.type_func, shen_toplevel6404, 0, Arg6402];
  return (Shen.globals["shen.*datatypes*"] = [])});




Shen.call_toplevel(function shen_toplevel6407(Arg6405) {
  if (Arg6405.length < 0) return [Shen.type_func, shen_toplevel6407, 0, Arg6405];
  return (Shen.globals["shen.*alldatatypes*"] = [])});




Shen.call_toplevel(function shen_toplevel6410(Arg6408) {
  if (Arg6408.length < 0) return [Shen.type_func, shen_toplevel6410, 0, Arg6408];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)});




Shen.call_toplevel(function shen_toplevel6413(Arg6411) {
  if (Arg6411.length < 0) return [Shen.type_func, shen_toplevel6413, 0, Arg6411];
  return (Shen.globals["shen.*synonyms*"] = [])});




Shen.call_toplevel(function shen_toplevel6416(Arg6414) {
  if (Arg6414.length < 0) return [Shen.type_func, shen_toplevel6416, 0, Arg6414];
  return (Shen.globals["shen.*system*"] = [])});




Shen.call_toplevel(function shen_toplevel6419(Arg6417) {
  if (Arg6417.length < 0) return [Shen.type_func, shen_toplevel6419, 0, Arg6417];
  return (Shen.globals["shen.*signedfuncs*"] = [])});




Shen.call_toplevel(function shen_toplevel6422(Arg6420) {
  if (Arg6420.length < 0) return [Shen.type_func, shen_toplevel6422, 0, Arg6420];
  return (Shen.globals["shen.*maxcomplexity*"] = 128)});




Shen.call_toplevel(function shen_toplevel6425(Arg6423) {
  if (Arg6423.length < 0) return [Shen.type_func, shen_toplevel6425, 0, Arg6423];
  return (Shen.globals["shen.*occurs*"] = true)});




Shen.call_toplevel(function shen_toplevel6428(Arg6426) {
  if (Arg6426.length < 0) return [Shen.type_func, shen_toplevel6428, 0, Arg6426];
  return (Shen.globals["shen.*maxinferences*"] = 1000000)});




Shen.call_toplevel(function shen_toplevel6431(Arg6429) {
  if (Arg6429.length < 0) return [Shen.type_func, shen_toplevel6431, 0, Arg6429];
  return (Shen.globals["*maximum-print-sequence-size*"] = 20)});




Shen.call_toplevel(function shen_toplevel6434(Arg6432) {
  if (Arg6432.length < 0) return [Shen.type_func, shen_toplevel6434, 0, Arg6432];
  return (Shen.globals["shen.*catch*"] = 0)});




Shen.call_toplevel(function shen_toplevel6437(Arg6435) {
  if (Arg6435.length < 0) return [Shen.type_func, shen_toplevel6437, 0, Arg6435];
  return (Shen.globals["shen.*call*"] = 0)});




Shen.call_toplevel(function shen_toplevel6440(Arg6438) {
  if (Arg6438.length < 0) return [Shen.type_func, shen_toplevel6440, 0, Arg6438];
  return (Shen.globals["shen.*infs*"] = 0)});




Shen.call_toplevel(function shen_toplevel6443(Arg6441) {
  if (Arg6441.length < 0) return [Shen.type_func, shen_toplevel6443, 0, Arg6441];
  return (Shen.globals["*hush*"] = false)});




Shen.fns["shen.initialise_arity_table"] = [Shen.type_func, function shen_user_lambda6445(Arg6444) {
  if (Arg6444.length < 1) return [Shen.type_func, shen_user_lambda6445, 1, Arg6444];
  var Arg6444_0 = Arg6444[0];
  return ((Shen.empty$question$(Arg6444_0))
  ? []
  : (((Shen.is_type(Arg6444_0, Shen.type_cons) && Shen.is_type(Arg6444_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["put"], [Arg6444_0[1], [Shen.type_symbol, "arity"], Arg6444_0[2][1], (Shen.globals["*property-vector*"])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [Arg6444_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.initialise_arity_table"]]);})))}, 1, [], "shen.initialise_arity_table"];





Shen.fns["arity"] = [Shen.type_func, function shen_user_lambda6447(Arg6446) {
  if (Arg6446.length < 1) return [Shen.type_func, shen_user_lambda6447, 1, Arg6446];
  var Arg6446_0 = Arg6446[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6446_0, [Shen.type_symbol, "arity"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6449(Arg6448) {
  if (Arg6448.length < 1) return [Shen.type_func, shen_user_lambda6449, 1, Arg6448];
  var Arg6448_0 = Arg6448[0];
  return -1}, 1, [], undefined]);})}, 1, [], "arity"];





Shen.call_toplevel(function shen_toplevel6452(Arg6450) {
  if (Arg6450.length < 0) return [Shen.type_func, shen_toplevel6452, 0, Arg6450];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [[Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "interror"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, 5, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "shen.reassemble"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "shen.strong-warning"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "shen.sum"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, 2, []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})});




Shen.fns["systemf"] = [Shen.type_func, function shen_user_lambda6454(Arg6453) {
  if (Arg6453.length < 1) return [Shen.type_func, shen_user_lambda6454, 1, Arg6453];
  var Arg6453_0 = Arg6453[0];
  var R0, R1;
  return ((R0 = [Shen.type_symbol, "shen"]),
  (R1 = Shen.call(Shen.fns["get"], [R0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [R0, [Shen.type_symbol, "shen.external-symbols"], Shen.call(Shen.fns["adjoin"], [Arg6453_0, R1]), (Shen.globals["*property-vector*"])]);}))}, 1, [], "systemf"];





Shen.fns["adjoin"] = [Shen.type_func, function shen_user_lambda6456(Arg6455) {
  if (Arg6455.length < 2) return [Shen.type_func, shen_user_lambda6456, 2, Arg6455];
  var Arg6455_0 = Arg6455[0], Arg6455_1 = Arg6455[1];
  return ((Shen.call(Shen.fns["element?"], [Arg6455_0, Arg6455_1]))
  ? Arg6455_1
  : [Shen.type_cons, Arg6455_0, Arg6455_1])}, 2, [], "adjoin"];





Shen.call_toplevel(function shen_toplevel6459(Arg6457) {
  if (Arg6457.length < 0) return [Shen.type_func, shen_toplevel6459, 0, Arg6457];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], [Shen.type_cons, [Shen.type_symbol, "!"], [Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "<--"], [Shen.type_cons, [Shen.type_symbol, "&&"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "*language*"], [Shen.type_cons, [Shen.type_symbol, "*implementation*"], [Shen.type_cons, [Shen.type_symbol, "*stinput*"], [Shen.type_cons, [Shen.type_symbol, "*home-directory*"], [Shen.type_cons, [Shen.type_symbol, "*version*"], [Shen.type_cons, [Shen.type_symbol, "*maximum-print-sequence-size*"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_symbol, "*os*"], [Shen.type_cons, [Shen.type_symbol, "*release*"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "*port*"], [Shen.type_cons, [Shen.type_symbol, "*porters*"], [Shen.type_cons, [Shen.type_symbol, "*hush*"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, [Shen.type_symbol, "=!"], [Shen.type_cons, [Shen.type_symbol, "$"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, Shen.vector(0), [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "when"], [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "verified"], [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "unit"], [Shen.type_cons, [Shen.type_symbol, "shen.unix"], [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, true, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "time"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "synonyms"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "save"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "run"], [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "quit"], [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "prolog?"], [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "output"], [Shen.type_cons, [Shen.type_symbol, "out"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_symbol, "macro"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_symbol, "make-string"], [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "loaded"], [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_symbol, "file"], [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, false, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "defprolog"], [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, [Shen.type_symbol, "datatype"], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "cond"], [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "cases"], [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "bar!"], [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "abort"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], (Shen.globals["*property-vector*"])]);})});




Shen.fns["specialise"] = [Shen.type_func, function shen_user_lambda6461(Arg6460) {
  if (Arg6460.length < 1) return [Shen.type_func, shen_user_lambda6461, 1, Arg6460];
  var Arg6460_0 = Arg6460[0];
  return ((Shen.globals["shen.*special*"] = [Shen.type_cons, Arg6460_0, (Shen.globals["shen.*special*"])]),
  Arg6460_0)}, 1, [], "specialise"];





Shen.fns["unspecialise"] = [Shen.type_func, function shen_user_lambda6463(Arg6462) {
  if (Arg6462.length < 1) return [Shen.type_func, shen_user_lambda6463, 1, Arg6462];
  var Arg6462_0 = Arg6462[0];
  return ((Shen.globals["shen.*special*"] = Shen.call(Shen.fns["remove"], [Arg6462_0, (Shen.globals["shen.*special*"])])),
  Arg6462_0)}, 1, [], "unspecialise"];










Shen.fns["load"] = [Shen.type_func, function shen_user_lambda6466(Arg6465) {
  if (Arg6465.length < 1) return [Shen.type_func, shen_user_lambda6466, 1, Arg6465];
  var Arg6465_0 = Arg6465[0];
  var R0, R1, R2;
  return (((R0 = Shen.get_time([Shen.type_symbol, "run"])),
  (R1 = Shen.call(Shen.fns["shen.load-help"], [(Shen.globals["shen.*tc*"]), Shen.call(Shen.fns["read-file"], [Arg6465_0])])),
  (R2 = Shen.get_time([Shen.type_symbol, "run"])),
  (R2 = (R2 - R0)),
  Shen.call(Shen.fns["shen.prhush"], [("\x0arun time: " + (Shen.str(R2) + " secs\x0a")), Shen.call(Shen.fns["stoutput"], [])]),
  R1),
  (((Shen.globals["shen.*tc*"]))
  ? Shen.call(Shen.fns["shen.prhush"], [("\x0atypechecked in " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["inferences"], []), " inferences\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])])
  : [Shen.type_symbol, "shen.skip"]),
  [Shen.type_symbol, "loaded"])}, 1, [], "load"];





Shen.fns["shen.load-help"] = [Shen.type_func, function shen_user_lambda6468(Arg6467) {
  if (Arg6467.length < 2) return [Shen.type_func, shen_user_lambda6468, 2, Arg6467];
  var Arg6467_0 = Arg6467[0], Arg6467_1 = Arg6467[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg6467_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6470(Arg6469) {
  if (Arg6469.length < 1) return [Shen.type_func, shen_user_lambda6470, 1, Arg6469];
  var Arg6469_0 = Arg6469[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6469_0]), "\x0a", [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Arg6467_1]);})
  : ((R0 = Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.remove-synonyms"], Arg6467_1])),
  (R1 = Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.typetable"], R0])),
  Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.assumetype"], R1]),
  (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.typecheck-and-load"], R0]);}, [Shen.type_func, function shen_user_lambda6472(Arg6471) {
  if (Arg6471.length < 2) return [Shen.type_func, shen_user_lambda6472, 2, Arg6471];
  var Arg6471_0 = Arg6471[0], Arg6471_1 = Arg6471[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6471_1, Arg6471_0]);})}, 2, [R1], undefined]);})))}, 2, [], "shen.load-help"];





Shen.fns["shen.remove-synonyms"] = [Shen.type_func, function shen_user_lambda6474(Arg6473) {
  if (Arg6473.length < 1) return [Shen.type_func, shen_user_lambda6474, 1, Arg6473];
  var Arg6473_0 = Arg6473[0];
  return (((Shen.is_type(Arg6473_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], Arg6473_0[1]))))
  ? (Shen.call(Shen.fns["eval"], [Arg6473_0]),
  [])
  : [Shen.type_cons, Arg6473_0, []])}, 1, [], "shen.remove-synonyms"];





Shen.fns["shen.typecheck-and-load"] = [Shen.type_func, function shen_user_lambda6476(Arg6475) {
  if (Arg6475.length < 1) return [Shen.type_func, shen_user_lambda6476, 1, Arg6475];
  var Arg6475_0 = Arg6475[0];
  return (Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg6475_0, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);}))}, 1, [], "shen.typecheck-and-load"];





Shen.fns["shen.typetable"] = [Shen.type_func, function shen_user_lambda6478(Arg6477) {
  if (Arg6477.length < 1) return [Shen.type_func, shen_user_lambda6478, 1, Arg6477];
  var Arg6477_0 = Arg6477[0];
  var R0;
  return (((Shen.is_type(Arg6477_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg6477_0[1])) && Shen.is_type(Arg6477_0[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<sig+rest>"], Arg6477_0[2][2], []])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6477_0[2][1], " lacks a proper signature.\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [Shen.type_cons, [Shen.type_cons, Arg6477_0[2][1], R0], []]))
  : (((Shen.is_type(Arg6477_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6477_0[1])) && (Shen.is_type(Arg6477_0[2], Shen.type_cons) && (Shen.is_type(Arg6477_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg6477_0[2][2][1])) && (Shen.is_type(Arg6477_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6477_0[2][2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6477_0[2][2][2][1][1])) && (Shen.is_type(Arg6477_0[2][2][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6477_0[2][2][2][1][2][2]) && (Shen.is_type(Arg6477_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg6477_0[2][2][2][2][1])) && (Shen.is_type(Arg6477_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6477_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg6477_0[2][2][2][2][2][2][1])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6477_0[2][1], [Shen.type_cons, Arg6477_0[2][2][2][1], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6477_0[2][2][2][2][2][1], []]]]], []]
  : (((Shen.is_type(Arg6477_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6477_0[1])) && Shen.is_type(Arg6477_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6477_0[2][1], " lacks a proper signature.\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [])))}, 1, [], "shen.typetable"];





Shen.fns["shen.assumetype"] = [Shen.type_func, function shen_user_lambda6480(Arg6479) {
  if (Arg6479.length < 1) return [Shen.type_func, shen_user_lambda6480, 1, Arg6479];
  var Arg6479_0 = Arg6479[0];
  return ((Shen.is_type(Arg6479_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg6479_0[1], Arg6479_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.assumetype"]]);}))}, 1, [], "shen.assumetype"];





Shen.fns["shen.unwind-types"] = [Shen.type_func, function shen_user_lambda6482(Arg6481) {
  if (Arg6481.length < 2) return [Shen.type_func, shen_user_lambda6482, 2, Arg6481];
  var Arg6481_0 = Arg6481[0], Arg6481_1 = Arg6481[1];
  return ((Shen.empty$question$(Arg6481_1))
  ? (function() {
  return Shen.simple_error(Shen.error_to_string(Arg6481_0));})
  : (((Shen.is_type(Arg6481_1, Shen.type_cons) && Shen.is_type(Arg6481_1[1], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.remtype"], [Arg6481_1[1][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6481_0, Arg6481_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.unwind-types"]]);})))}, 2, [], "shen.unwind-types"];





Shen.fns["shen.remtype"] = [Shen.type_func, function shen_user_lambda6484(Arg6483) {
  if (Arg6483.length < 1) return [Shen.type_func, shen_user_lambda6484, 1, Arg6483];
  var Arg6483_0 = Arg6483[0];
  return ((Shen.globals["shen.*signedfuncs*"] = Shen.call(Shen.fns["remove"], [Arg6483_0, (Shen.globals["shen.*signedfuncs*"])])),
  Arg6483_0)}, 1, [], "shen.remtype"];





Shen.fns["shen.<sig+rest>"] = [Shen.type_func, function shen_user_lambda6486(Arg6485) {
  if (Arg6485.length < 1) return [Shen.type_func, shen_user_lambda6486, 1, Arg6485];
  var Arg6485_0 = Arg6485[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg6485_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["<!>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rest>"];





Shen.fns["write-to-file"] = [Shen.type_func, function shen_user_lambda6488(Arg6487) {
  if (Arg6487.length < 2) return [Shen.type_func, shen_user_lambda6488, 2, Arg6487];
  var Arg6487_0 = Arg6487[0], Arg6487_1 = Arg6487[1];
  var R0, R1;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg6487_0, [Shen.type_symbol, "out"])),
  (((typeof(Arg6487_1) == 'string'))
  ? (R1 = Shen.call(Shen.fns["shen.app"], [Arg6487_1, "\x0a\x0a", [Shen.type_symbol, "shen.a"]]))
  : (R1 = Shen.call(Shen.fns["shen.app"], [Arg6487_1, "\x0a\x0a", [Shen.type_symbol, "shen.s"]]))),
  Shen.pr(R1, R0),
  Shen.close(R0),
  Arg6487_1)}, 2, [], "write-to-file"];










Shen.fns["macroexpand"] = [Shen.type_func, function shen_user_lambda6491(Arg6490) {
  if (Arg6490.length < 1) return [Shen.type_func, shen_user_lambda6491, 1, Arg6490];
  var Arg6490_0 = Arg6490[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compose"], [(Shen.globals["*macros*"]), Arg6490_0])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6490_0, R0)))
  ? Arg6490_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [[Shen.type_symbol, "macroexpand"], R0]);})))}, 1, [], "macroexpand"];





Shen.call_toplevel(function shen_toplevel6494(Arg6492) {
  if (Arg6492.length < 0) return [Shen.type_func, shen_toplevel6494, 0, Arg6492];
  return (Shen.globals["*macros*"] = [Shen.type_cons, [Shen.type_symbol, "shen.timer-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.cases-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.abs-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.put/get-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.compile-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.let-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.assoc-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.make-string-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.output-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.error-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.prolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.nl-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.@s-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.defmacro-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.defprolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.function-macro"], []]]]]]]]]]]]]]]]]]])});




Shen.fns["shen.error-macro"] = [Shen.type_func, function shen_user_lambda6496(Arg6495) {
  if (Arg6495.length < 1) return [Shen.type_func, shen_user_lambda6496, 1, Arg6495];
  var Arg6495_0 = Arg6495[0];
  return (((Shen.is_type(Arg6495_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "error"], Arg6495_0[1])) && Shen.is_type(Arg6495_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6495_0[2][1], Arg6495_0[2][2]]), []]]
  : Arg6495_0)}, 1, [], "shen.error-macro"];





Shen.fns["shen.output-macro"] = [Shen.type_func, function shen_user_lambda6498(Arg6497) {
  if (Arg6497.length < 1) return [Shen.type_func, shen_user_lambda6498, 1, Arg6497];
  var Arg6497_0 = Arg6497[0];
  return (((Shen.is_type(Arg6497_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "output"], Arg6497_0[1])) && Shen.is_type(Arg6497_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.prhush"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6497_0[2][1], Arg6497_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]]
  : Arg6497_0)}, 1, [], "shen.output-macro"];





Shen.fns["shen.make-string-macro"] = [Shen.type_func, function shen_user_lambda6500(Arg6499) {
  if (Arg6499.length < 1) return [Shen.type_func, shen_user_lambda6500, 1, Arg6499];
  var Arg6499_0 = Arg6499[0];
  return (((Shen.is_type(Arg6499_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "make-string"], Arg6499_0[1])) && Shen.is_type(Arg6499_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr"], [Arg6499_0[2][1], Arg6499_0[2][2]]);})
  : Arg6499_0)}, 1, [], "shen.make-string-macro"];





Shen.fns["shen.compose"] = [Shen.type_func, function shen_user_lambda6502(Arg6501) {
  if (Arg6501.length < 2) return [Shen.type_func, shen_user_lambda6502, 2, Arg6501];
  var Arg6501_0 = Arg6501[0], Arg6501_1 = Arg6501[1];
  return ((Shen.empty$question$(Arg6501_0))
  ? Arg6501_1
  : ((Shen.is_type(Arg6501_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.compose"], [Arg6501_0[2], Shen.call(Arg6501_0[1], [Arg6501_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compose"]]);})))}, 2, [], "shen.compose"];





Shen.fns["shen.compile-macro"] = [Shen.type_func, function shen_user_lambda6504(Arg6503) {
  if (Arg6503.length < 1) return [Shen.type_func, shen_user_lambda6504, 1, Arg6503];
  var Arg6503_0 = Arg6503[0];
  return (((Shen.is_type(Arg6503_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "compile"], Arg6503_0[1])) && (Shen.is_type(Arg6503_0[2], Shen.type_cons) && (Shen.is_type(Arg6503_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6503_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, Arg6503_0[2][1], [Shen.type_cons, Arg6503_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "E"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error here: ~S~%", [Shen.type_cons, [Shen.type_symbol, "E"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error~%", []]], []]]]], []]]], []]]]]
  : Arg6503_0)}, 1, [], "shen.compile-macro"];





Shen.fns["shen.prolog-macro"] = [Shen.type_func, function shen_user_lambda6506(Arg6505) {
  if (Arg6505.length < 1) return [Shen.type_func, shen_user_lambda6506, 1, Arg6505];
  var Arg6505_0 = Arg6505[0];
  return (((Shen.is_type(Arg6505_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "prolog?"], Arg6505_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.intprolog"], [Shen.type_cons, Shen.call(Shen.fns["shen.prolog-form"], [Arg6505_0[2]]), []]]
  : Arg6505_0)}, 1, [], "shen.prolog-macro"];





Shen.fns["shen.defprolog-macro"] = [Shen.type_func, function shen_user_lambda6508(Arg6507) {
  if (Arg6507.length < 1) return [Shen.type_func, shen_user_lambda6508, 1, Arg6507];
  var Arg6507_0 = Arg6507[0];
  return (((Shen.is_type(Arg6507_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defprolog"], Arg6507_0[1])) && Shen.is_type(Arg6507_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<defprolog>"], Arg6507_0[2], [Shen.type_func, function shen_user_lambda6510(Arg6509) {
  if (Arg6509.length < 2) return [Shen.type_func, shen_user_lambda6510, 2, Arg6509];
  var Arg6509_0 = Arg6509[0], Arg6509_1 = Arg6509[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-error"], [Arg6509_0[2][1], Arg6509_1]);})}, 2, [Arg6507_0], undefined]]);})
  : Arg6507_0)}, 1, [], "shen.defprolog-macro"];





Shen.fns["shen.prolog-form"] = [Shen.type_func, function shen_user_lambda6512(Arg6511) {
  if (Arg6511.length < 1) return [Shen.type_func, shen_user_lambda6512, 1, Arg6511];
  var Arg6511_0 = Arg6511[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.cons_form"], Arg6511_0])]);})}, 1, [], "shen.prolog-form"];





Shen.fns["shen.datatype-macro"] = [Shen.type_func, function shen_user_lambda6514(Arg6513) {
  if (Arg6513.length < 1) return [Shen.type_func, shen_user_lambda6514, 1, Arg6513];
  var Arg6513_0 = Arg6513[0];
  return (((Shen.is_type(Arg6513_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "datatype"], Arg6513_0[1])) && Shen.is_type(Arg6513_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, Shen.intern(("type#" + Shen.str(Arg6513_0[2][1]))), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.<datatype-rules>"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6513_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-error"], []]], []]]]], []]]]
  : Arg6513_0)}, 1, [], "shen.datatype-macro"];





Shen.fns["shen.defmacro-macro"] = [Shen.type_func, function shen_user_lambda6516(Arg6515) {
  if (Arg6515.length < 1) return [Shen.type_func, shen_user_lambda6516, 1, Arg6515];
  var Arg6515_0 = Arg6515[0];
  var R0, R1;
  return (((Shen.is_type(Arg6515_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], Arg6515_0[1])) && Shen.is_type(Arg6515_0[2], Shen.type_cons))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6515_0[2][1], Shen.call(Shen.fns["append"], [Arg6515_0[2][2], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]])]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, Arg6515_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "macro"], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [], [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]]]),
  R1)
  : Arg6515_0)}, 1, [], "shen.defmacro-macro"];





Shen.fns["shen.<defmacro>"] = [Shen.type_func, function shen_user_lambda6518(Arg6517) {
  if (Arg6517.length < 1) return [Shen.type_func, shen_user_lambda6518, 1, Arg6517];
  var Arg6517_0 = Arg6517[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6517_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macrorules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<defmacro>"];





Shen.fns["shen.<macrorules>"] = [Shen.type_func, function shen_user_lambda6520(Arg6519) {
  if (Arg6519.length < 1) return [Shen.type_func, shen_user_lambda6520, 1, Arg6519];
  var Arg6519_0 = Arg6519[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<macrorule>"], [Arg6519_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macrorules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), []])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<macrorule>"], [Arg6519_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "Parse_X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "Parse_X"], []]]]])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<macrorules>"];





Shen.fns["shen.<macrorule>"] = [Shen.type_func, function shen_user_lambda6522(Arg6521) {
  if (Arg6521.length < 1) return [Shen.type_func, shen_user_lambda6522, 1, Arg6521];
  var Arg6521_0 = Arg6521[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "->"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, [Shen.type_symbol, "where"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R2]), []])]])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "->"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), []])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "<-"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, [Shen.type_symbol, "where"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R2]), []])]])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6521_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "<-"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), []])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<macrorule>"];





Shen.fns["shen.<macroaction>"] = [Shen.type_func, function shen_user_lambda6524(Arg6523) {
  if (Arg6523.length < 1) return [Shen.type_func, shen_user_lambda6524, 1, Arg6523];
  var Arg6523_0 = Arg6523[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<action>"], [Arg6523_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.walk"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]], []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<macroaction>"];





Shen.fns["shen.@s-macro"] = [Shen.type_func, function shen_user_lambda6526(Arg6525) {
  if (Arg6525.length < 1) return [Shen.type_func, shen_user_lambda6526, 1, Arg6525];
  var Arg6525_0 = Arg6525[0];
  var R0;
  return (((Shen.is_type(Arg6525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6525_0[1])) && (Shen.is_type(Arg6525_0[2], Shen.type_cons) && (Shen.is_type(Arg6525_0[2][2], Shen.type_cons) && Shen.is_type(Arg6525_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Arg6525_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Arg6525_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6525_0[1])) && (Shen.is_type(Arg6525_0[2], Shen.type_cons) && (Shen.is_type(Arg6525_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6525_0[2][2][2]) && (typeof(Arg6525_0[2][1]) == 'string')))))))
  ? ((R0 = Shen.call(Shen.fns["explode"], [Arg6525_0[2][1]])),
  (((Shen.call(Shen.fns["length"], [R0]) > 1))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Shen.call(Shen.fns["append"], [R0, Arg6525_0[2][2]])]]);})
  : Arg6525_0))
  : Arg6525_0))}, 1, [], "shen.@s-macro"];





Shen.fns["shen.synonyms-macro"] = [Shen.type_func, function shen_user_lambda6528(Arg6527) {
  if (Arg6527.length < 1) return [Shen.type_func, shen_user_lambda6528, 1, Arg6527];
  var Arg6527_0 = Arg6527[0];
  return (((Shen.is_type(Arg6527_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "synonyms"], Arg6527_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-help"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6527_0[2]]), []]]
  : Arg6527_0)}, 1, [], "shen.synonyms-macro"];





Shen.fns["shen.nl-macro"] = [Shen.type_func, function shen_user_lambda6530(Arg6529) {
  if (Arg6529.length < 1) return [Shen.type_func, shen_user_lambda6530, 1, Arg6529];
  var Arg6529_0 = Arg6529[0];
  return (((Shen.is_type(Arg6529_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "nl"], Arg6529_0[1])) && Shen.empty$question$(Arg6529_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, 1, []]]
  : Arg6529_0)}, 1, [], "shen.nl-macro"];





Shen.fns["shen.assoc-macro"] = [Shen.type_func, function shen_user_lambda6532(Arg6531) {
  if (Arg6531.length < 1) return [Shen.type_func, shen_user_lambda6532, 1, Arg6531];
  var Arg6531_0 = Arg6531[0];
  return (((Shen.is_type(Arg6531_0, Shen.type_cons) && (Shen.is_type(Arg6531_0[2], Shen.type_cons) && (Shen.is_type(Arg6531_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6531_0[2][2][2], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6531_0[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "do"], []]]]]]]]]]))))))
  ? [Shen.type_cons, Arg6531_0[1], [Shen.type_cons, Arg6531_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assoc-macro"], [[Shen.type_cons, Arg6531_0[1], Arg6531_0[2][2]]]), []]]]
  : Arg6531_0)}, 1, [], "shen.assoc-macro"];





Shen.fns["shen.let-macro"] = [Shen.type_func, function shen_user_lambda6534(Arg6533) {
  if (Arg6533.length < 1) return [Shen.type_func, shen_user_lambda6534, 1, Arg6533];
  var Arg6533_0 = Arg6533[0];
  return (((Shen.is_type(Arg6533_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6533_0[1])) && (Shen.is_type(Arg6533_0[2], Shen.type_cons) && (Shen.is_type(Arg6533_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6533_0[2][2][2], Shen.type_cons) && Shen.is_type(Arg6533_0[2][2][2][2], Shen.type_cons)))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6533_0[2][1], [Shen.type_cons, Arg6533_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], Arg6533_0[2][2][2]]]), []]]]]
  : Arg6533_0)}, 1, [], "shen.let-macro"];





Shen.fns["shen.abs-macro"] = [Shen.type_func, function shen_user_lambda6536(Arg6535) {
  if (Arg6535.length < 1) return [Shen.type_func, shen_user_lambda6536, 1, Arg6535];
  var Arg6535_0 = Arg6535[0];
  return (((Shen.is_type(Arg6535_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6535_0[1])) && (Shen.is_type(Arg6535_0[2], Shen.type_cons) && (Shen.is_type(Arg6535_0[2][2], Shen.type_cons) && Shen.is_type(Arg6535_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg6535_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.abs-macro"], [[Shen.type_cons, [Shen.type_symbol, "/."], Arg6535_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6535_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6535_0[1])) && (Shen.is_type(Arg6535_0[2], Shen.type_cons) && (Shen.is_type(Arg6535_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6535_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], Arg6535_0[2]]
  : Arg6535_0))}, 1, [], "shen.abs-macro"];





Shen.fns["shen.cases-macro"] = [Shen.type_func, function shen_user_lambda6538(Arg6537) {
  if (Arg6537.length < 1) return [Shen.type_func, shen_user_lambda6538, 1, Arg6537];
  var Arg6537_0 = Arg6537[0];
  return (((Shen.is_type(Arg6537_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6537_0[1])) && (Shen.is_type(Arg6537_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6537_0[2][1])) && Shen.is_type(Arg6537_0[2][2], Shen.type_cons))))))
  ? Arg6537_0[2][2][1]
  : (((Shen.is_type(Arg6537_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6537_0[1])) && (Shen.is_type(Arg6537_0[2], Shen.type_cons) && (Shen.is_type(Arg6537_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6537_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6537_0[2][1], [Shen.type_cons, Arg6537_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, "error: cases exhausted", []]], []]]]]
  : (((Shen.is_type(Arg6537_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6537_0[1])) && (Shen.is_type(Arg6537_0[2], Shen.type_cons) && Shen.is_type(Arg6537_0[2][2], Shen.type_cons)))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6537_0[2][1], [Shen.type_cons, Arg6537_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.cases-macro"], [[Shen.type_cons, [Shen.type_symbol, "cases"], Arg6537_0[2][2][2]]]), []]]]]
  : (((Shen.is_type(Arg6537_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6537_0[1])) && (Shen.is_type(Arg6537_0[2], Shen.type_cons) && Shen.empty$question$(Arg6537_0[2][2])))))
  ? (function() {
  return Shen.simple_error("error: odd number of case elements\x0a");})
  : Arg6537_0))))}, 1, [], "shen.cases-macro"];





Shen.fns["shen.timer-macro"] = [Shen.type_func, function shen_user_lambda6540(Arg6539) {
  if (Arg6539.length < 1) return [Shen.type_func, shen_user_lambda6540, 1, Arg6539];
  var Arg6539_0 = Arg6539[0];
  return (((Shen.is_type(Arg6539_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "time"], Arg6539_0[1])) && (Shen.is_type(Arg6539_0[2], Shen.type_cons) && Shen.empty$question$(Arg6539_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6539_0[2][1], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Time"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_symbol, "Message"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.prhush"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, "\x0arun time: ", [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "Time"], []]], [Shen.type_cons, " secs\x0a", []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]]]]]]]]]]]);})
  : Arg6539_0)}, 1, [], "shen.timer-macro"];





Shen.fns["shen.tuple-up"] = [Shen.type_func, function shen_user_lambda6542(Arg6541) {
  if (Arg6541.length < 1) return [Shen.type_func, shen_user_lambda6542, 1, Arg6541];
  var Arg6541_0 = Arg6541[0];
  return ((Shen.is_type(Arg6541_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Arg6541_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.tuple-up"], [Arg6541_0[2]]), []]]]
  : Arg6541_0)}, 1, [], "shen.tuple-up"];





Shen.fns["shen.put/get-macro"] = [Shen.type_func, function shen_user_lambda6544(Arg6543) {
  if (Arg6543.length < 1) return [Shen.type_func, shen_user_lambda6544, 1, Arg6543];
  var Arg6543_0 = Arg6543[0];
  return (((Shen.is_type(Arg6543_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "put"], Arg6543_0[1])) && (Shen.is_type(Arg6543_0[2], Shen.type_cons) && (Shen.is_type(Arg6543_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6543_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6543_0[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, Arg6543_0[2][1], [Shen.type_cons, Arg6543_0[2][2][1], [Shen.type_cons, Arg6543_0[2][2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]]
  : (((Shen.is_type(Arg6543_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "get"], Arg6543_0[1])) && (Shen.is_type(Arg6543_0[2], Shen.type_cons) && (Shen.is_type(Arg6543_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6543_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, Arg6543_0[2][1], [Shen.type_cons, Arg6543_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]
  : Arg6543_0))}, 1, [], "shen.put/get-macro"];





Shen.fns["shen.function-macro"] = [Shen.type_func, function shen_user_lambda6546(Arg6545) {
  if (Arg6545.length < 1) return [Shen.type_func, shen_user_lambda6546, 1, Arg6545];
  var Arg6545_0 = Arg6545[0];
  return (((Shen.is_type(Arg6545_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg6545_0[1])) && (Shen.is_type(Arg6545_0[2], Shen.type_cons) && Shen.empty$question$(Arg6545_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction"], [Arg6545_0[2][1], Shen.call(Shen.fns["arity"], [Arg6545_0[2][1]])]);})
  : Arg6545_0)}, 1, [], "shen.function-macro"];





Shen.fns["shen.function-abstraction"] = [Shen.type_func, function shen_user_lambda6548(Arg6547) {
  if (Arg6547.length < 2) return [Shen.type_func, shen_user_lambda6548, 2, Arg6547];
  var Arg6547_0 = Arg6547[0], Arg6547_1 = Arg6547[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6547_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Arg6547_0, []]]
  : ((Shen.unwind_tail(Shen.$eq$(-1, Arg6547_1)))
  ? Arg6547_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction-help"], [Arg6547_0, Arg6547_1, []]);})))}, 2, [], "shen.function-abstraction"];





Shen.fns["shen.function-abstraction-help"] = [Shen.type_func, function shen_user_lambda6550(Arg6549) {
  if (Arg6549.length < 3) return [Shen.type_func, shen_user_lambda6550, 3, Arg6549];
  var Arg6549_0 = Arg6549[0], Arg6549_1 = Arg6549[1], Arg6549_2 = Arg6549[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6549_1)))
  ? [Shen.type_cons, Arg6549_0, Arg6549_2]
  : ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["shen.function-abstraction-help"], [Arg6549_0, (Arg6549_1 - 1), Shen.call(Shen.fns["append"], [Arg6549_2, [Shen.type_cons, R0, []]])]), []]]]))}, 3, [], "shen.function-abstraction-help"];





Shen.fns["undefmacro"] = [Shen.type_func, function shen_user_lambda6552(Arg6551) {
  if (Arg6551.length < 1) return [Shen.type_func, shen_user_lambda6552, 1, Arg6551];
  var Arg6551_0 = Arg6551[0];
  return ((Shen.globals["*macros*"] = Shen.call(Shen.fns["remove"], [Arg6551_0, (Shen.globals["*macros*"])])),
  Arg6551_0)}, 1, [], "undefmacro"];










Shen.fns["declare"] = [Shen.type_func, function shen_user_lambda7379(Arg7378) {
  if (Arg7378.length < 2) return [Shen.type_func, shen_user_lambda7379, 2, Arg7378];
  var Arg7378_0 = Arg7378[0], Arg7378_1 = Arg7378[1];
  var R0, R1, R2;
  return ((Shen.globals["shen.*signedfuncs*"] = Shen.call(Shen.fns["adjoin"], [Arg7378_0, (Shen.globals["shen.*signedfuncs*"])])),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen.variancy-test"], [Arg7378_0, Arg7378_1]);}, [Shen.type_func, function shen_user_lambda7381(Arg7380) {
  if (Arg7380.length < 1) return [Shen.type_func, shen_user_lambda7381, 1, Arg7380];
  var Arg7380_0 = Arg7380[0];
  return [Shen.type_symbol, "shen.skip"]}, 1, [], undefined]),
  (R0 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.demodulate"], [Arg7378_1])])),
  (R1 = Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg7378_0])),
  (R2 = Shen.call(Shen.fns["shen.parameters"], [1])),
  (R0 = [Shen.type_cons, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "X"], []]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, R0, []]]], []], []]]]),
  (R0 = Shen.call(Shen.fns["shen.aum"], [R0, R2])),
  (R0 = Shen.call(Shen.fns["shen.aum_to_shen"], [R0])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, R1, Shen.call(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R2]),
  Arg7378_0)}, 2, [], "declare"];





Shen.fns["shen.demodulate"] = [Shen.type_func, function shen_user_lambda7383(Arg7382) {
  if (Arg7382.length < 1) return [Shen.type_func, shen_user_lambda7383, 1, Arg7382];
  var Arg7382_0 = Arg7382[0];
  return (function() {
  return Shen.call_tail(Shen.fns["fix"], [[Shen.type_symbol, "shen.demodh"], Arg7382_0]);})}, 1, [], "shen.demodulate"];





Shen.fns["shen.demodh"] = [Shen.type_func, function shen_user_lambda7385(Arg7384) {
  if (Arg7384.length < 1) return [Shen.type_func, shen_user_lambda7385, 1, Arg7384];
  var Arg7384_0 = Arg7384[0];
  return ((Shen.is_type(Arg7384_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.demodh"], Arg7384_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.demod-atom"], [Arg7384_0]);}))}, 1, [], "shen.demodh"];





Shen.fns["shen.demod-atom"] = [Shen.type_func, function shen_user_lambda7387(Arg7386) {
  if (Arg7386.length < 1) return [Shen.type_func, shen_user_lambda7387, 1, Arg7386];
  var Arg7386_0 = Arg7386[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["assoc"], [Arg7386_0, (Shen.globals["shen.*synonyms*"])])),
  ((Shen.empty$question$(R0))
  ? Arg7386_0
  : R0[2]))}, 1, [], "shen.demod-atom"];





Shen.fns["shen.variancy-test"] = [Shen.type_func, function shen_user_lambda7389(Arg7388) {
  if (Arg7388.length < 2) return [Shen.type_func, shen_user_lambda7389, 2, Arg7388];
  var Arg7388_0 = Arg7388[0], Arg7388_1 = Arg7388[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg7388_0, [Shen.type_symbol, "B"]])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.call(Shen.fns["shen.variant?"], [R0, Arg7388_1]))
  ? [Shen.type_symbol, "shen.skip"]
  : Shen.call(Shen.fns["shen.prhush"], [("warning: changing the type of " + Shen.call(Shen.fns["shen.app"], [Arg7388_0, " may create errors\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]))),
  [Shen.type_symbol, "shen.skip"])}, 2, [], "shen.variancy-test"];





Shen.fns["shen.variant?"] = [Shen.type_func, function shen_user_lambda7391(Arg7390) {
  if (Arg7390.length < 2) return [Shen.type_func, shen_user_lambda7391, 2, Arg7390];
  var Arg7390_0 = Arg7390[0], Arg7390_1 = Arg7390[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7390_1, Arg7390_0)))
  ? true
  : (((Shen.is_type(Arg7390_0, Shen.type_cons) && (Shen.is_type(Arg7390_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7390_1[1], Arg7390_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Arg7390_0[2], Arg7390_1[2]]);})
  : (((Shen.is_type(Arg7390_0, Shen.type_cons) && (Shen.is_type(Arg7390_1, Shen.type_cons) && (Shen.call(Shen.fns["shen.pvar?"], [Arg7390_0[1]]) && Shen.call(Shen.fns["variable?"], [Arg7390_1[1]])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg7390_0[1], Arg7390_0[2]]), Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg7390_1[1], Arg7390_1[2]])]);})
  : (((Shen.is_type(Arg7390_0, Shen.type_cons) && (Shen.is_type(Arg7390_0[1], Shen.type_cons) && (Shen.is_type(Arg7390_1, Shen.type_cons) && Shen.is_type(Arg7390_1[1], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["append"], [Arg7390_0[1], Arg7390_0[2]]), Shen.call(Shen.fns["append"], [Arg7390_1[1], Arg7390_1[2]])]);})
  : false))))}, 2, [], "shen.variant?"];





Shen.call_toplevel(function shen_toplevel7394(Arg7392) {
  if (Arg7392.length < 0) return [Shen.type_func, shen_toplevel7394, 0, Arg7392];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7397(Arg7395) {
  if (Arg7395.length < 0) return [Shen.type_func, shen_toplevel7397, 0, Arg7395];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7400(Arg7398) {
  if (Arg7398.length < 0) return [Shen.type_func, shen_toplevel7400, 0, Arg7398];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7403(Arg7401) {
  if (Arg7401.length < 0) return [Shen.type_func, shen_toplevel7403, 0, Arg7401];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.app"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7406(Arg7404) {
  if (Arg7404.length < 0) return [Shen.type_func, shen_toplevel7406, 0, Arg7404];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7409(Arg7407) {
  if (Arg7407.length < 0) return [Shen.type_func, shen_toplevel7409, 0, Arg7407];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7412(Arg7410) {
  if (Arg7410.length < 0) return [Shen.type_func, shen_toplevel7412, 0, Arg7410];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7415(Arg7413) {
  if (Arg7413.length < 0) return [Shen.type_func, shen_toplevel7415, 0, Arg7413];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7418(Arg7416) {
  if (Arg7416.length < 0) return [Shen.type_func, shen_toplevel7418, 0, Arg7416];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7421(Arg7419) {
  if (Arg7419.length < 0) return [Shen.type_func, shen_toplevel7421, 0, Arg7419];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7424(Arg7422) {
  if (Arg7422.length < 0) return [Shen.type_func, shen_toplevel7424, 0, Arg7422];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7427(Arg7425) {
  if (Arg7425.length < 0) return [Shen.type_func, shen_toplevel7427, 0, Arg7425];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7430(Arg7428) {
  if (Arg7428.length < 0) return [Shen.type_func, shen_toplevel7430, 0, Arg7428];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7433(Arg7431) {
  if (Arg7431.length < 0) return [Shen.type_func, shen_toplevel7433, 0, Arg7431];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7436(Arg7434) {
  if (Arg7434.length < 0) return [Shen.type_func, shen_toplevel7436, 0, Arg7434];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7439(Arg7437) {
  if (Arg7437.length < 0) return [Shen.type_func, shen_toplevel7439, 0, Arg7437];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7442(Arg7440) {
  if (Arg7440.length < 0) return [Shen.type_func, shen_toplevel7442, 0, Arg7440];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7445(Arg7443) {
  if (Arg7443.length < 0) return [Shen.type_func, shen_toplevel7445, 0, Arg7443];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7448(Arg7446) {
  if (Arg7446.length < 0) return [Shen.type_func, shen_toplevel7448, 0, Arg7446];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<!>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7451(Arg7449) {
  if (Arg7449.length < 0) return [Shen.type_func, shen_toplevel7451, 0, Arg7449];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7454(Arg7452) {
  if (Arg7452.length < 0) return [Shen.type_func, shen_toplevel7454, 0, Arg7452];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7457(Arg7455) {
  if (Arg7455.length < 0) return [Shen.type_func, shen_toplevel7457, 0, Arg7455];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7460(Arg7458) {
  if (Arg7458.length < 0) return [Shen.type_func, shen_toplevel7460, 0, Arg7458];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7463(Arg7461) {
  if (Arg7461.length < 0) return [Shen.type_func, shen_toplevel7463, 0, Arg7461];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7466(Arg7464) {
  if (Arg7464.length < 0) return [Shen.type_func, shen_toplevel7466, 0, Arg7464];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "string"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7469(Arg7467) {
  if (Arg7467.length < 0) return [Shen.type_func, shen_toplevel7469, 0, Arg7467];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7472(Arg7470) {
  if (Arg7470.length < 0) return [Shen.type_func, shen_toplevel7472, 0, Arg7470];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7475(Arg7473) {
  if (Arg7473.length < 0) return [Shen.type_func, shen_toplevel7475, 0, Arg7473];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "format"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7478(Arg7476) {
  if (Arg7476.length < 0) return [Shen.type_func, shen_toplevel7478, 0, Arg7476];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7481(Arg7479) {
  if (Arg7479.length < 0) return [Shen.type_func, shen_toplevel7481, 0, Arg7479];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7484(Arg7482) {
  if (Arg7482.length < 0) return [Shen.type_func, shen_toplevel7484, 0, Arg7482];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7487(Arg7485) {
  if (Arg7485.length < 0) return [Shen.type_func, shen_toplevel7487, 0, Arg7485];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7490(Arg7488) {
  if (Arg7488.length < 0) return [Shen.type_func, shen_toplevel7490, 0, Arg7488];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7493(Arg7491) {
  if (Arg7491.length < 0) return [Shen.type_func, shen_toplevel7493, 0, Arg7491];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7496(Arg7494) {
  if (Arg7494.length < 0) return [Shen.type_func, shen_toplevel7496, 0, Arg7494];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7499(Arg7497) {
  if (Arg7497.length < 0) return [Shen.type_func, shen_toplevel7499, 0, Arg7497];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7502(Arg7500) {
  if (Arg7500.length < 0) return [Shen.type_func, shen_toplevel7502, 0, Arg7500];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7505(Arg7503) {
  if (Arg7503.length < 0) return [Shen.type_func, shen_toplevel7505, 0, Arg7503];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7508(Arg7506) {
  if (Arg7506.length < 0) return [Shen.type_func, shen_toplevel7508, 0, Arg7506];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7511(Arg7509) {
  if (Arg7509.length < 0) return [Shen.type_func, shen_toplevel7511, 0, Arg7509];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7514(Arg7512) {
  if (Arg7512.length < 0) return [Shen.type_func, shen_toplevel7514, 0, Arg7512];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7517(Arg7515) {
  if (Arg7515.length < 0) return [Shen.type_func, shen_toplevel7517, 0, Arg7515];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7520(Arg7518) {
  if (Arg7518.length < 0) return [Shen.type_func, shen_toplevel7520, 0, Arg7518];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]);})});




Shen.call_toplevel(function shen_toplevel7523(Arg7521) {
  if (Arg7521.length < 0) return [Shen.type_func, shen_toplevel7523, 0, Arg7521];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.insert"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7526(Arg7524) {
  if (Arg7524.length < 0) return [Shen.type_func, shen_toplevel7526, 0, Arg7524];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7529(Arg7527) {
  if (Arg7527.length < 0) return [Shen.type_func, shen_toplevel7529, 0, Arg7527];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7532(Arg7530) {
  if (Arg7530.length < 0) return [Shen.type_func, shen_toplevel7532, 0, Arg7530];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7535(Arg7533) {
  if (Arg7533.length < 0) return [Shen.type_func, shen_toplevel7535, 0, Arg7533];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7538(Arg7536) {
  if (Arg7536.length < 0) return [Shen.type_func, shen_toplevel7538, 0, Arg7536];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7541(Arg7539) {
  if (Arg7539.length < 0) return [Shen.type_func, shen_toplevel7541, 0, Arg7539];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7544(Arg7542) {
  if (Arg7542.length < 0) return [Shen.type_func, shen_toplevel7544, 0, Arg7542];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7547(Arg7545) {
  if (Arg7545.length < 0) return [Shen.type_func, shen_toplevel7547, 0, Arg7545];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7550(Arg7548) {
  if (Arg7548.length < 0) return [Shen.type_func, shen_toplevel7550, 0, Arg7548];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7553(Arg7551) {
  if (Arg7551.length < 0) return [Shen.type_func, shen_toplevel7553, 0, Arg7551];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7556(Arg7554) {
  if (Arg7554.length < 0) return [Shen.type_func, shen_toplevel7556, 0, Arg7554];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7559(Arg7557) {
  if (Arg7557.length < 0) return [Shen.type_func, shen_toplevel7559, 0, Arg7557];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7562(Arg7560) {
  if (Arg7560.length < 0) return [Shen.type_func, shen_toplevel7562, 0, Arg7560];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7565(Arg7563) {
  if (Arg7563.length < 0) return [Shen.type_func, shen_toplevel7565, 0, Arg7563];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7568(Arg7566) {
  if (Arg7566.length < 0) return [Shen.type_func, shen_toplevel7568, 0, Arg7566];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7571(Arg7569) {
  if (Arg7569.length < 0) return [Shen.type_func, shen_toplevel7571, 0, Arg7569];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7574(Arg7572) {
  if (Arg7572.length < 0) return [Shen.type_func, shen_toplevel7574, 0, Arg7572];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7577(Arg7575) {
  if (Arg7575.length < 0) return [Shen.type_func, shen_toplevel7577, 0, Arg7575];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7580(Arg7578) {
  if (Arg7578.length < 0) return [Shen.type_func, shen_toplevel7580, 0, Arg7578];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7583(Arg7581) {
  if (Arg7581.length < 0) return [Shen.type_func, shen_toplevel7583, 0, Arg7581];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7586(Arg7584) {
  if (Arg7584.length < 0) return [Shen.type_func, shen_toplevel7586, 0, Arg7584];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7589(Arg7587) {
  if (Arg7587.length < 0) return [Shen.type_func, shen_toplevel7589, 0, Arg7587];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7592(Arg7590) {
  if (Arg7590.length < 0) return [Shen.type_func, shen_toplevel7592, 0, Arg7590];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7595(Arg7593) {
  if (Arg7593.length < 0) return [Shen.type_func, shen_toplevel7595, 0, Arg7593];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7598(Arg7596) {
  if (Arg7596.length < 0) return [Shen.type_func, shen_toplevel7598, 0, Arg7596];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7601(Arg7599) {
  if (Arg7599.length < 0) return [Shen.type_func, shen_toplevel7601, 0, Arg7599];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.prhush"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7604(Arg7602) {
  if (Arg7602.length < 0) return [Shen.type_func, shen_toplevel7604, 0, Arg7602];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7607(Arg7605) {
  if (Arg7605.length < 0) return [Shen.type_func, shen_toplevel7607, 0, Arg7605];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7610(Arg7608) {
  if (Arg7608.length < 0) return [Shen.type_func, shen_toplevel7610, 0, Arg7608];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7613(Arg7611) {
  if (Arg7611.length < 0) return [Shen.type_func, shen_toplevel7613, 0, Arg7611];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7616(Arg7614) {
  if (Arg7614.length < 0) return [Shen.type_func, shen_toplevel7616, 0, Arg7614];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7619(Arg7617) {
  if (Arg7617.length < 0) return [Shen.type_func, shen_toplevel7619, 0, Arg7617];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7622(Arg7620) {
  if (Arg7620.length < 0) return [Shen.type_func, shen_toplevel7622, 0, Arg7620];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7625(Arg7623) {
  if (Arg7623.length < 0) return [Shen.type_func, shen_toplevel7625, 0, Arg7623];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7628(Arg7626) {
  if (Arg7626.length < 0) return [Shen.type_func, shen_toplevel7628, 0, Arg7626];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7631(Arg7629) {
  if (Arg7629.length < 0) return [Shen.type_func, shen_toplevel7631, 0, Arg7629];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7634(Arg7632) {
  if (Arg7632.length < 0) return [Shen.type_func, shen_toplevel7634, 0, Arg7632];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7637(Arg7635) {
  if (Arg7635.length < 0) return [Shen.type_func, shen_toplevel7637, 0, Arg7635];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7640(Arg7638) {
  if (Arg7638.length < 0) return [Shen.type_func, shen_toplevel7640, 0, Arg7638];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7643(Arg7641) {
  if (Arg7641.length < 0) return [Shen.type_func, shen_toplevel7643, 0, Arg7641];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], []]]]);})});




Shen.call_toplevel(function shen_toplevel7646(Arg7644) {
  if (Arg7644.length < 0) return [Shen.type_func, shen_toplevel7646, 0, Arg7644];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], []]]]);})});




Shen.call_toplevel(function shen_toplevel7649(Arg7647) {
  if (Arg7647.length < 0) return [Shen.type_func, shen_toplevel7649, 0, Arg7647];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7652(Arg7650) {
  if (Arg7650.length < 0) return [Shen.type_func, shen_toplevel7652, 0, Arg7650];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7655(Arg7653) {
  if (Arg7653.length < 0) return [Shen.type_func, shen_toplevel7655, 0, Arg7653];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7658(Arg7656) {
  if (Arg7656.length < 0) return [Shen.type_func, shen_toplevel7658, 0, Arg7656];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7661(Arg7659) {
  if (Arg7659.length < 0) return [Shen.type_func, shen_toplevel7661, 0, Arg7659];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.sum"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7664(Arg7662) {
  if (Arg7662.length < 0) return [Shen.type_func, shen_toplevel7664, 0, Arg7662];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7667(Arg7665) {
  if (Arg7665.length < 0) return [Shen.type_func, shen_toplevel7667, 0, Arg7665];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7670(Arg7668) {
  if (Arg7668.length < 0) return [Shen.type_func, shen_toplevel7670, 0, Arg7668];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7673(Arg7671) {
  if (Arg7671.length < 0) return [Shen.type_func, shen_toplevel7673, 0, Arg7671];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7676(Arg7674) {
  if (Arg7674.length < 0) return [Shen.type_func, shen_toplevel7676, 0, Arg7674];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7679(Arg7677) {
  if (Arg7677.length < 0) return [Shen.type_func, shen_toplevel7679, 0, Arg7677];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7682(Arg7680) {
  if (Arg7680.length < 0) return [Shen.type_func, shen_toplevel7682, 0, Arg7680];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7685(Arg7683) {
  if (Arg7683.length < 0) return [Shen.type_func, shen_toplevel7685, 0, Arg7683];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7688(Arg7686) {
  if (Arg7686.length < 0) return [Shen.type_func, shen_toplevel7688, 0, Arg7686];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7691(Arg7689) {
  if (Arg7689.length < 0) return [Shen.type_func, shen_toplevel7691, 0, Arg7689];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7694(Arg7692) {
  if (Arg7692.length < 0) return [Shen.type_func, shen_toplevel7694, 0, Arg7692];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.truncate"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7697(Arg7695) {
  if (Arg7695.length < 0) return [Shen.type_func, shen_toplevel7697, 0, Arg7695];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tuple?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7700(Arg7698) {
  if (Arg7698.length < 0) return [Shen.type_func, shen_toplevel7700, 0, Arg7698];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7703(Arg7701) {
  if (Arg7701.length < 0) return [Shen.type_func, shen_toplevel7703, 0, Arg7701];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7706(Arg7704) {
  if (Arg7704.length < 0) return [Shen.type_func, shen_toplevel7706, 0, Arg7704];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7709(Arg7707) {
  if (Arg7707.length < 0) return [Shen.type_func, shen_toplevel7709, 0, Arg7707];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7712(Arg7710) {
  if (Arg7710.length < 0) return [Shen.type_func, shen_toplevel7712, 0, Arg7710];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7715(Arg7713) {
  if (Arg7713.length < 0) return [Shen.type_func, shen_toplevel7715, 0, Arg7713];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7718(Arg7716) {
  if (Arg7716.length < 0) return [Shen.type_func, shen_toplevel7718, 0, Arg7716];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7721(Arg7719) {
  if (Arg7719.length < 0) return [Shen.type_func, shen_toplevel7721, 0, Arg7719];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7724(Arg7722) {
  if (Arg7722.length < 0) return [Shen.type_func, shen_toplevel7724, 0, Arg7722];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7727(Arg7725) {
  if (Arg7725.length < 0) return [Shen.type_func, shen_toplevel7727, 0, Arg7725];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7730(Arg7728) {
  if (Arg7728.length < 0) return [Shen.type_func, shen_toplevel7730, 0, Arg7728];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7733(Arg7731) {
  if (Arg7731.length < 0) return [Shen.type_func, shen_toplevel7733, 0, Arg7731];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7736(Arg7734) {
  if (Arg7734.length < 0) return [Shen.type_func, shen_toplevel7736, 0, Arg7734];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7739(Arg7737) {
  if (Arg7737.length < 0) return [Shen.type_func, shen_toplevel7739, 0, Arg7737];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7742(Arg7740) {
  if (Arg7740.length < 0) return [Shen.type_func, shen_toplevel7742, 0, Arg7740];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7745(Arg7743) {
  if (Arg7743.length < 0) return [Shen.type_func, shen_toplevel7745, 0, Arg7743];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7748(Arg7746) {
  if (Arg7746.length < 0) return [Shen.type_func, shen_toplevel7748, 0, Arg7746];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7751(Arg7749) {
  if (Arg7749.length < 0) return [Shen.type_func, shen_toplevel7751, 0, Arg7749];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7754(Arg7752) {
  if (Arg7752.length < 0) return [Shen.type_func, shen_toplevel7754, 0, Arg7752];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7757(Arg7755) {
  if (Arg7755.length < 0) return [Shen.type_func, shen_toplevel7757, 0, Arg7755];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});









Shen.fns["shen.typecheck"] = [Shen.type_func, function shen_user_lambda5715(Arg5714) {
  if (Arg5714.length < 2) return [Shen.type_func, shen_user_lambda5715, 2, Arg5714];
  var Arg5714_0 = Arg5714[0], Arg5714_1 = Arg5714[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.curry"], [Arg5714_0])),
  (R1 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (R2 = Shen.call(Shen.fns["shen.insert-prolog-variables"], [Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Arg5714_1])]), R1])),
  (R3 = (new Shen.Freeze([R0, R2, R1], function(Arg5716) {
  var Arg5716_0 = Arg5716[0], Arg5716_1 = Arg5716[1], Arg5716_2 = Arg5716[2];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["return"], [Arg5716_1, Arg5716_2, [Shen.type_symbol, "shen.void"]]);});})}))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R2, []]]], [], R1, R3]);}))}, 2, [], "shen.typecheck"];





Shen.fns["shen.curry"] = [Shen.type_func, function shen_user_lambda5719(Arg5718) {
  if (Arg5718.length < 1) return [Shen.type_func, shen_user_lambda5719, 1, Arg5718];
  var Arg5718_0 = Arg5718[0];
  return (((Shen.is_type(Arg5718_0, Shen.type_cons) && Shen.call(Shen.fns["shen.special?"], [Arg5718_0[1]])))
  ? [Shen.type_cons, Arg5718_0[1], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.curry"], Arg5718_0[2]])]
  : (((Shen.is_type(Arg5718_0, Shen.type_cons) && (Shen.is_type(Arg5718_0[2], Shen.type_cons) && Shen.call(Shen.fns["shen.extraspecial?"], [Arg5718_0[1]]))))
  ? Arg5718_0
  : (((Shen.is_type(Arg5718_0, Shen.type_cons) && (Shen.is_type(Arg5718_0[2], Shen.type_cons) && Shen.is_type(Arg5718_0[2][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry"], [[Shen.type_cons, [Shen.type_cons, Arg5718_0[1], [Shen.type_cons, Arg5718_0[2][1], []]], Arg5718_0[2][2]]]);})
  : (((Shen.is_type(Arg5718_0, Shen.type_cons) && (Shen.is_type(Arg5718_0[2], Shen.type_cons) && Shen.empty$question$(Arg5718_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg5718_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg5718_0[2][1]]), []]]
  : Arg5718_0))))}, 1, [], "shen.curry"];





Shen.fns["shen.special?"] = [Shen.type_func, function shen_user_lambda5721(Arg5720) {
  if (Arg5720.length < 1) return [Shen.type_func, shen_user_lambda5721, 1, Arg5720];
  var Arg5720_0 = Arg5720[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5720_0, (Shen.globals["shen.*special*"])]);})}, 1, [], "shen.special?"];





Shen.fns["shen.extraspecial?"] = [Shen.type_func, function shen_user_lambda5723(Arg5722) {
  if (Arg5722.length < 1) return [Shen.type_func, shen_user_lambda5723, 1, Arg5722];
  var Arg5722_0 = Arg5722[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5722_0, (Shen.globals["shen.*extraspecial*"])]);})}, 1, [], "shen.extraspecial?"];





Shen.fns["shen.t*"] = [Shen.type_func, function shen_user_lambda5725(Arg5724) {
  if (Arg5724.length < 4) return [Shen.type_func, shen_user_lambda5725, 4, Arg5724];
  var Arg5724_0 = Arg5724[0], Arg5724_1 = Arg5724[1], Arg5724_2 = Arg5724[2], Arg5724_3 = Arg5724[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5724_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.maxinfexceeded?"], []), Arg5724_2, (new Shen.Freeze([R1, Arg5724_2, Arg5724_3, R0, Arg5724_0, Arg5724_1, Arg5724_2, Arg5724_3], function(Arg5726) {
  var Arg5726_0 = Arg5726[0], Arg5726_1 = Arg5726[1], Arg5726_2 = Arg5726[2], Arg5726_3 = Arg5726[3], Arg5726_4 = Arg5726[4], Arg5726_5 = Arg5726[5], Arg5726_6 = Arg5726[6], Arg5726_7 = Arg5726[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5726_0, Shen.call(Shen.fns["shen.errormaxinfs"], []), Arg5726_1, Arg5726_2]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5724_0, Arg5724_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5724_2, (new Shen.Freeze([R0, Arg5724_0, Arg5724_1, Arg5724_2, Arg5724_3], function(Arg5728) {
  var Arg5728_0 = Arg5728[0], Arg5728_1 = Arg5728[1], Arg5728_2 = Arg5728[2], Arg5728_3 = Arg5728[3], Arg5728_4 = Arg5728[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-failure"], [Arg5728_3, Arg5728_4]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5724_0, Arg5724_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5724_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5724_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5724_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5724_2])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.type-theory-enabled?"], []), Arg5724_2, (new Shen.Freeze([R0, R2, R1, Arg5724_0, Arg5724_1, Arg5724_2, Arg5724_3], function(Arg5730) {
  var Arg5730_0 = Arg5730[0], Arg5730_1 = Arg5730[1], Arg5730_2 = Arg5730[2], Arg5730_3 = Arg5730[3], Arg5730_4 = Arg5730[4], Arg5730_5 = Arg5730[5], Arg5730_6 = Arg5730[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5730_0, Arg5730_5, (new Shen.Freeze([Arg5730_0, Arg5730_1, Arg5730_2, Arg5730_4, Arg5730_5, Arg5730_6], function(Arg5732) {
  var Arg5732_0 = Arg5732[0], Arg5732_1 = Arg5732[1], Arg5732_2 = Arg5732[2], Arg5732_3 = Arg5732[3], Arg5732_4 = Arg5732[4], Arg5732_5 = Arg5732[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5732_1, Arg5732_2, Arg5732_3, Arg5732_4, Arg5732_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5724_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.show"], [Arg5724_0, Arg5724_1, Arg5724_2, (new Shen.Freeze([Arg5724_0, Arg5724_1, R1, Arg5724_2, Arg5724_3], function(Arg5734) {
  var Arg5734_0 = Arg5734[0], Arg5734_1 = Arg5734[1], Arg5734_2 = Arg5734[2], Arg5734_3 = Arg5734[3], Arg5734_4 = Arg5734[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5734_2, (Shen.globals["shen.*datatypes*"]), Arg5734_3, (new Shen.Freeze([Arg5734_0, Arg5734_1, Arg5734_2, Arg5734_3, Arg5734_4], function(Arg5736) {
  var Arg5736_0 = Arg5736[0], Arg5736_1 = Arg5736[1], Arg5736_2 = Arg5736[2], Arg5736_3 = Arg5736[3], Arg5736_4 = Arg5736[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg5736_0, Arg5736_1, Arg5736_2, Arg5736_3, Arg5736_4]);});})}))]);});})}))]))
  : R1))
  : R1))
  : R1))]);}))}, 4, [], "shen.t*"];





Shen.fns["shen.type-theory-enabled?"] = [Shen.type_func, function shen_user_lambda5739(Arg5738) {
  if (Arg5738.length < 0) return [Shen.type_func, shen_user_lambda5739, 0, Arg5738];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"])}, 0, [], "shen.type-theory-enabled?"];





Shen.fns["enable-type-theory"] = [Shen.type_func, function shen_user_lambda5741(Arg5740) {
  if (Arg5740.length < 1) return [Shen.type_func, shen_user_lambda5741, 1, Arg5740];
  var Arg5740_0 = Arg5740[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5740_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5740_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = false)
  : (function() {
  return Shen.simple_error("enable-type-theory expects a + or a -\x0a");})))}, 1, [], "enable-type-theory"];





Shen.fns["shen.prolog-failure"] = [Shen.type_func, function shen_user_lambda5743(Arg5742) {
  if (Arg5742.length < 2) return [Shen.type_func, shen_user_lambda5743, 2, Arg5742];
  var Arg5742_0 = Arg5742[0], Arg5742_1 = Arg5742[1];
  return false}, 2, [], "shen.prolog-failure"];





Shen.fns["shen.maxinfexceeded?"] = [Shen.type_func, function shen_user_lambda5745(Arg5744) {
  if (Arg5744.length < 0) return [Shen.type_func, shen_user_lambda5745, 0, Arg5744];
  return (Shen.call(Shen.fns["inferences"], []) > (Shen.globals["shen.*maxinferences*"]))}, 0, [], "shen.maxinfexceeded?"];





Shen.fns["shen.errormaxinfs"] = [Shen.type_func, function shen_user_lambda5747(Arg5746) {
  if (Arg5746.length < 0) return [Shen.type_func, shen_user_lambda5747, 0, Arg5746];
  return (function() {
  return Shen.simple_error("maximum inferences exceeded~%");})}, 0, [], "shen.errormaxinfs"];





Shen.fns["shen.udefs*"] = [Shen.type_func, function shen_user_lambda5749(Arg5748) {
  if (Arg5748.length < 5) return [Shen.type_func, shen_user_lambda5749, 5, Arg5748];
  var Arg5748_0 = Arg5748[0], Arg5748_1 = Arg5748[1], Arg5748_2 = Arg5748[2], Arg5748_3 = Arg5748[3], Arg5748_4 = Arg5748[4];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5748_2, Arg5748_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[1]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [[Shen.type_cons, R0, [Shen.type_cons, Arg5748_0, [Shen.type_cons, Arg5748_1, []]]], Arg5748_3, Arg5748_4])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5748_2, Arg5748_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg5748_0, Arg5748_1, R0, Arg5748_3, Arg5748_4]);}))
  : false))
  : R0))}, 5, [], "shen.udefs*"];





Shen.fns["shen.th*"] = [Shen.type_func, function shen_user_lambda5751(Arg5750) {
  if (Arg5750.length < 5) return [Shen.type_func, shen_user_lambda5751, 5, Arg5750];
  var Arg5750_0 = Arg5750[0], Arg5750_1 = Arg5750[1], Arg5750_2 = Arg5750[2], Arg5750_3 = Arg5750[3], Arg5750_4 = Arg5750[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.show"], [[Shen.type_cons, Arg5750_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5750_1, []]]], Arg5750_2, Arg5750_3, (new Shen.Freeze([R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5752) {
  var Arg5752_0 = Arg5752[0], Arg5752_1 = Arg5752[1], Arg5752_2 = Arg5752[2], Arg5752_3 = Arg5752[3], Arg5752_4 = Arg5752[4], Arg5752_5 = Arg5752[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg5752_4, Arg5752_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.typedf?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])]), Arg5750_3, (new Shen.Freeze([Arg5750_0, R1, Arg5750_1, Arg5750_3, Arg5750_4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5754) {
  var Arg5754_0 = Arg5754[0], Arg5754_1 = Arg5754[1], Arg5754_2 = Arg5754[2], Arg5754_3 = Arg5754[3], Arg5754_4 = Arg5754[4], Arg5754_5 = Arg5754[5], Arg5754_6 = Arg5754[6], Arg5754_7 = Arg5754[7], Arg5754_8 = Arg5754[8], Arg5754_9 = Arg5754[9], Arg5754_10 = Arg5754[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5754_1, Shen.call(Shen.fns["shen.sigf"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5754_0, Arg5754_3])]), Arg5754_3, (new Shen.Freeze([Arg5754_0, Arg5754_1, Arg5754_2, Arg5754_3, Arg5754_4], function(Arg5756) {
  var Arg5756_0 = Arg5756[0], Arg5756_1 = Arg5756[1], Arg5756_2 = Arg5756[2], Arg5756_3 = Arg5756[3], Arg5756_4 = Arg5756[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["call"], [[Shen.type_cons, Arg5756_1, [Shen.type_cons, Arg5756_2, []]], Arg5756_3, Arg5756_4]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.base"], [Arg5750_0, Arg5750_1, Arg5750_3, Arg5750_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.by_hypothesis"], [Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5750_1, []]], Arg5750_2, Arg5750_3, Arg5750_4])))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5750_1, []]]], Arg5750_2, Arg5750_3, (new Shen.Freeze([R2, Arg5750_1, R3, R1, Arg5750_2, Arg5750_3, Arg5750_4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5758) {
  var Arg5758_0 = Arg5758[0], Arg5758_1 = Arg5758[1], Arg5758_2 = Arg5758[2], Arg5758_3 = Arg5758[3], Arg5758_4 = Arg5758[4], Arg5758_5 = Arg5758[5], Arg5758_6 = Arg5758[6], Arg5758_7 = Arg5758[7], Arg5758_8 = Arg5758[8], Arg5758_9 = Arg5758[9], Arg5758_10 = Arg5758[10], Arg5758_11 = Arg5758[11], Arg5758_12 = Arg5758[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5758_2, Arg5758_3, Arg5758_4, Arg5758_5, Arg5758_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_1, Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5750_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5760) {
  var Arg5760_0 = Arg5760[0], Arg5760_1 = Arg5760[1], Arg5760_2 = Arg5760[2], Arg5760_3 = Arg5760[3], Arg5760_4 = Arg5760[4], Arg5760_5 = Arg5760[5], Arg5760_6 = Arg5760[6], Arg5760_7 = Arg5760[7], Arg5760_8 = Arg5760[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5760_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5760_2, []]], Arg5760_6, Arg5760_7, Arg5760_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5762) {
  var Arg5762_0 = Arg5762[0], Arg5762_1 = Arg5762[1], Arg5762_2 = Arg5762[2], Arg5762_3 = Arg5762[3], Arg5762_4 = Arg5762[4], Arg5762_5 = Arg5762[5], Arg5762_6 = Arg5762[6], Arg5762_7 = Arg5762[7], Arg5762_8 = Arg5762[8], Arg5762_9 = Arg5762[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5762_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5762_2, []]], Arg5762_7, Arg5762_8, Arg5762_9]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R2, Arg5750_2, Arg5750_4, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5764) {
  var Arg5764_0 = Arg5764[0], Arg5764_1 = Arg5764[1], Arg5764_2 = Arg5764[2], Arg5764_3 = Arg5764[3], Arg5764_4 = Arg5764[4], Arg5764_5 = Arg5764[5], Arg5764_6 = Arg5764[6], Arg5764_7 = Arg5764[7], Arg5764_8 = Arg5764[8], Arg5764_9 = Arg5764[9], Arg5764_10 = Arg5764[10], Arg5764_11 = Arg5764[11], Arg5764_12 = Arg5764[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5764_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5764_2, []]], Arg5764_3, Arg5764_6, Arg5764_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "list"], Arg5750_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R5, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5766) {
  var Arg5766_0 = Arg5766[0], Arg5766_1 = Arg5766[1], Arg5766_2 = Arg5766[2], Arg5766_3 = Arg5766[3], Arg5766_4 = Arg5766[4], Arg5766_5 = Arg5766[5], Arg5766_6 = Arg5766[6], Arg5766_7 = Arg5766[7], Arg5766_8 = Arg5766[8], Arg5766_9 = Arg5766[9], Arg5766_10 = Arg5766[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5766_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5766_2, []]], Arg5766_8, Arg5766_4, Arg5766_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5768) {
  var Arg5768_0 = Arg5768[0], Arg5768_1 = Arg5768[1], Arg5768_2 = Arg5768[2], Arg5768_3 = Arg5768[3], Arg5768_4 = Arg5768[4], Arg5768_5 = Arg5768[5], Arg5768_6 = Arg5768[6], Arg5768_7 = Arg5768[7], Arg5768_8 = Arg5768[8], Arg5768_9 = Arg5768[9], Arg5768_10 = Arg5768[10], Arg5768_11 = Arg5768[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5768_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5768_2, []]], Arg5768_9, Arg5768_5, Arg5768_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R5, Arg5750_2, Arg5750_4, R2, Arg5750_3, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5770) {
  var Arg5770_0 = Arg5770[0], Arg5770_1 = Arg5770[1], Arg5770_2 = Arg5770[2], Arg5770_3 = Arg5770[3], Arg5770_4 = Arg5770[4], Arg5770_5 = Arg5770[5], Arg5770_6 = Arg5770[6], Arg5770_7 = Arg5770[7], Arg5770_8 = Arg5770[8], Arg5770_9 = Arg5770[9], Arg5770_10 = Arg5770[10], Arg5770_11 = Arg5770[11], Arg5770_12 = Arg5770[12], Arg5770_13 = Arg5770[13], Arg5770_14 = Arg5770[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5770_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5770_2, []]], Arg5770_3, Arg5770_6, Arg5770_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R4, []]], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R4, Arg5750_2, Arg5750_4, R2, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5772) {
  var Arg5772_0 = Arg5772[0], Arg5772_1 = Arg5772[1], Arg5772_2 = Arg5772[2], Arg5772_3 = Arg5772[3], Arg5772_4 = Arg5772[4], Arg5772_5 = Arg5772[5], Arg5772_6 = Arg5772[6], Arg5772_7 = Arg5772[7], Arg5772_8 = Arg5772[8], Arg5772_9 = Arg5772[9], Arg5772_10 = Arg5772[10], Arg5772_11 = Arg5772[11], Arg5772_12 = Arg5772[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5772_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5772_2, []]], Arg5772_3, Arg5772_6, Arg5772_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_1, Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5750_3])),
  ((Shen.empty$question$(R5))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R4, R3, R2, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5774) {
  var Arg5774_0 = Arg5774[0], Arg5774_1 = Arg5774[1], Arg5774_2 = Arg5774[2], Arg5774_3 = Arg5774[3], Arg5774_4 = Arg5774[4], Arg5774_5 = Arg5774[5], Arg5774_6 = Arg5774[6], Arg5774_7 = Arg5774[7], Arg5774_8 = Arg5774[8], Arg5774_9 = Arg5774[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5774_2, Arg5774_3, Arg5774_7, Arg5774_8, Arg5774_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R4, R3, R2, R5, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5776) {
  var Arg5776_0 = Arg5776[0], Arg5776_1 = Arg5776[1], Arg5776_2 = Arg5776[2], Arg5776_3 = Arg5776[3], Arg5776_4 = Arg5776[4], Arg5776_5 = Arg5776[5], Arg5776_6 = Arg5776[6], Arg5776_7 = Arg5776[7], Arg5776_8 = Arg5776[8], Arg5776_9 = Arg5776[9], Arg5776_10 = Arg5776[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5776_2, Arg5776_3, Arg5776_8, Arg5776_9, Arg5776_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5750_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R4, R3, R2, Arg5750_2, Arg5750_4, R5, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5778) {
  var Arg5778_0 = Arg5778[0], Arg5778_1 = Arg5778[1], Arg5778_2 = Arg5778[2], Arg5778_3 = Arg5778[3], Arg5778_4 = Arg5778[4], Arg5778_5 = Arg5778[5], Arg5778_6 = Arg5778[6], Arg5778_7 = Arg5778[7], Arg5778_8 = Arg5778[8], Arg5778_9 = Arg5778[9], Arg5778_10 = Arg5778[10], Arg5778_11 = Arg5778[11], Arg5778_12 = Arg5778[12], Arg5778_13 = Arg5778[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5778_2, Arg5778_3, Arg5778_4, Arg5778_7, Arg5778_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5750_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "*"], Arg5750_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R4, R3, R6, R5, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5780) {
  var Arg5780_0 = Arg5780[0], Arg5780_1 = Arg5780[1], Arg5780_2 = Arg5780[2], Arg5780_3 = Arg5780[3], Arg5780_4 = Arg5780[4], Arg5780_5 = Arg5780[5], Arg5780_6 = Arg5780[6], Arg5780_7 = Arg5780[7], Arg5780_8 = Arg5780[8], Arg5780_9 = Arg5780[9], Arg5780_10 = Arg5780[10], Arg5780_11 = Arg5780[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5780_2, Arg5780_3, Arg5780_9, Arg5780_5, Arg5780_10]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R4, R3, R6, R2, R5, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5782) {
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1], Arg5782_2 = Arg5782[2], Arg5782_3 = Arg5782[3], Arg5782_4 = Arg5782[4], Arg5782_5 = Arg5782[5], Arg5782_6 = Arg5782[6], Arg5782_7 = Arg5782[7], Arg5782_8 = Arg5782[8], Arg5782_9 = Arg5782[9], Arg5782_10 = Arg5782[10], Arg5782_11 = Arg5782[11], Arg5782_12 = Arg5782[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5782_2, Arg5782_3, Arg5782_10, Arg5782_6, Arg5782_11]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R4, R3, R6, Arg5750_2, Arg5750_4, R2, Arg5750_3, R5, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5784) {
  var Arg5784_0 = Arg5784[0], Arg5784_1 = Arg5784[1], Arg5784_2 = Arg5784[2], Arg5784_3 = Arg5784[3], Arg5784_4 = Arg5784[4], Arg5784_5 = Arg5784[5], Arg5784_6 = Arg5784[6], Arg5784_7 = Arg5784[7], Arg5784_8 = Arg5784[8], Arg5784_9 = Arg5784[9], Arg5784_10 = Arg5784[10], Arg5784_11 = Arg5784[11], Arg5784_12 = Arg5784[12], Arg5784_13 = Arg5784[13], Arg5784_14 = Arg5784[14], Arg5784_15 = Arg5784[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5784_2, Arg5784_3, Arg5784_4, Arg5784_7, Arg5784_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5750_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R4, R3, R5, Arg5750_2, Arg5750_4, R2, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5786) {
  var Arg5786_0 = Arg5786[0], Arg5786_1 = Arg5786[1], Arg5786_2 = Arg5786[2], Arg5786_3 = Arg5786[3], Arg5786_4 = Arg5786[4], Arg5786_5 = Arg5786[5], Arg5786_6 = Arg5786[6], Arg5786_7 = Arg5786[7], Arg5786_8 = Arg5786[8], Arg5786_9 = Arg5786[9], Arg5786_10 = Arg5786[10], Arg5786_11 = Arg5786[11], Arg5786_12 = Arg5786[12], Arg5786_13 = Arg5786[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5786_2, Arg5786_3, Arg5786_4, Arg5786_7, Arg5786_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]]], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R4, R3, R5, Arg5750_2, Arg5750_4, R2, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5788) {
  var Arg5788_0 = Arg5788[0], Arg5788_1 = Arg5788[1], Arg5788_2 = Arg5788[2], Arg5788_3 = Arg5788[3], Arg5788_4 = Arg5788[4], Arg5788_5 = Arg5788[5], Arg5788_6 = Arg5788[6], Arg5788_7 = Arg5788[7], Arg5788_8 = Arg5788[8], Arg5788_9 = Arg5788[9], Arg5788_10 = Arg5788[10], Arg5788_11 = Arg5788[11], Arg5788_12 = Arg5788[12], Arg5788_13 = Arg5788[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5788_2, Arg5788_3, Arg5788_4, Arg5788_7, Arg5788_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_1, Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5750_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5790) {
  var Arg5790_0 = Arg5790[0], Arg5790_1 = Arg5790[1], Arg5790_2 = Arg5790[2], Arg5790_3 = Arg5790[3], Arg5790_4 = Arg5790[4], Arg5790_5 = Arg5790[5], Arg5790_6 = Arg5790[6], Arg5790_7 = Arg5790[7], Arg5790_8 = Arg5790[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5790_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5790_2, []]], Arg5790_6, Arg5790_7, Arg5790_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5792) {
  var Arg5792_0 = Arg5792[0], Arg5792_1 = Arg5792[1], Arg5792_2 = Arg5792[2], Arg5792_3 = Arg5792[3], Arg5792_4 = Arg5792[4], Arg5792_5 = Arg5792[5], Arg5792_6 = Arg5792[6], Arg5792_7 = Arg5792[7], Arg5792_8 = Arg5792[8], Arg5792_9 = Arg5792[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5792_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5792_2, []]], Arg5792_7, Arg5792_8, Arg5792_9]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R2, Arg5750_2, Arg5750_4, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5794) {
  var Arg5794_0 = Arg5794[0], Arg5794_1 = Arg5794[1], Arg5794_2 = Arg5794[2], Arg5794_3 = Arg5794[3], Arg5794_4 = Arg5794[4], Arg5794_5 = Arg5794[5], Arg5794_6 = Arg5794[6], Arg5794_7 = Arg5794[7], Arg5794_8 = Arg5794[8], Arg5794_9 = Arg5794[9], Arg5794_10 = Arg5794[10], Arg5794_11 = Arg5794[11], Arg5794_12 = Arg5794[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5794_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5794_2, []]], Arg5794_3, Arg5794_6, Arg5794_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "vector"], Arg5750_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R5, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5796) {
  var Arg5796_0 = Arg5796[0], Arg5796_1 = Arg5796[1], Arg5796_2 = Arg5796[2], Arg5796_3 = Arg5796[3], Arg5796_4 = Arg5796[4], Arg5796_5 = Arg5796[5], Arg5796_6 = Arg5796[6], Arg5796_7 = Arg5796[7], Arg5796_8 = Arg5796[8], Arg5796_9 = Arg5796[9], Arg5796_10 = Arg5796[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5796_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5796_2, []]], Arg5796_8, Arg5796_4, Arg5796_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5798) {
  var Arg5798_0 = Arg5798[0], Arg5798_1 = Arg5798[1], Arg5798_2 = Arg5798[2], Arg5798_3 = Arg5798[3], Arg5798_4 = Arg5798[4], Arg5798_5 = Arg5798[5], Arg5798_6 = Arg5798[6], Arg5798_7 = Arg5798[7], Arg5798_8 = Arg5798[8], Arg5798_9 = Arg5798[9], Arg5798_10 = Arg5798[10], Arg5798_11 = Arg5798[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5798_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5798_2, []]], Arg5798_9, Arg5798_5, Arg5798_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R5, Arg5750_2, Arg5750_4, R2, Arg5750_3, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5800) {
  var Arg5800_0 = Arg5800[0], Arg5800_1 = Arg5800[1], Arg5800_2 = Arg5800[2], Arg5800_3 = Arg5800[3], Arg5800_4 = Arg5800[4], Arg5800_5 = Arg5800[5], Arg5800_6 = Arg5800[6], Arg5800_7 = Arg5800[7], Arg5800_8 = Arg5800[8], Arg5800_9 = Arg5800[9], Arg5800_10 = Arg5800[10], Arg5800_11 = Arg5800[11], Arg5800_12 = Arg5800[12], Arg5800_13 = Arg5800[13], Arg5800_14 = Arg5800[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5800_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5800_2, []]], Arg5800_3, Arg5800_6, Arg5800_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R4, []]], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R4, Arg5750_2, Arg5750_4, R2, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5802) {
  var Arg5802_0 = Arg5802[0], Arg5802_1 = Arg5802[1], Arg5802_2 = Arg5802[2], Arg5802_3 = Arg5802[3], Arg5802_4 = Arg5802[4], Arg5802_5 = Arg5802[5], Arg5802_6 = Arg5802[6], Arg5802_7 = Arg5802[7], Arg5802_8 = Arg5802[8], Arg5802_9 = Arg5802[9], Arg5802_10 = Arg5802[10], Arg5802_11 = Arg5802[11], Arg5802_12 = Arg5802[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5802_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5802_2, []]], Arg5802_3, Arg5802_6, Arg5802_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_1, Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5804) {
  var Arg5804_0 = Arg5804[0], Arg5804_1 = Arg5804[1], Arg5804_2 = Arg5804[2], Arg5804_3 = Arg5804[3], Arg5804_4 = Arg5804[4], Arg5804_5 = Arg5804[5], Arg5804_6 = Arg5804[6], Arg5804_7 = Arg5804[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5804_1, [Shen.type_symbol, "string"], Arg5804_5, Arg5804_6, Arg5804_7]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "string"], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg5750_2, Arg5750_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5806) {
  var Arg5806_0 = Arg5806[0], Arg5806_1 = Arg5806[1], Arg5806_2 = Arg5806[2], Arg5806_3 = Arg5806[3], Arg5806_4 = Arg5806[4], Arg5806_5 = Arg5806[5], Arg5806_6 = Arg5806[6], Arg5806_7 = Arg5806[7], Arg5806_8 = Arg5806[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5806_1, [Shen.type_symbol, "string"], Arg5806_6, Arg5806_7, Arg5806_8]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_1, Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5750_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R3, R5, R2, R6, R4, Arg5750_2, Arg5750_3, Arg5750_4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5808) {
  var Arg5808_0 = Arg5808[0], Arg5808_1 = Arg5808[1], Arg5808_2 = Arg5808[2], Arg5808_3 = Arg5808[3], Arg5808_4 = Arg5808[4], Arg5808_5 = Arg5808[5], Arg5808_6 = Arg5808[6], Arg5808_7 = Arg5808[7], Arg5808_8 = Arg5808[8], Arg5808_9 = Arg5808[9], Arg5808_10 = Arg5808[10], Arg5808_11 = Arg5808[11], Arg5808_12 = Arg5808[12], Arg5808_13 = Arg5808[13], Arg5808_14 = Arg5808[14], Arg5808_15 = Arg5808[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5808_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5808_8, (new Shen.Freeze([Arg5808_1, Arg5808_2, Arg5808_3, Arg5808_4, Arg5808_5, Arg5808_6, Arg5808_7, Arg5808_8, Arg5808_9], function(Arg5810) {
  var Arg5810_0 = Arg5810[0], Arg5810_1 = Arg5810[1], Arg5810_2 = Arg5810[2], Arg5810_3 = Arg5810[3], Arg5810_4 = Arg5810[4], Arg5810_5 = Arg5810[5], Arg5810_6 = Arg5810[6], Arg5810_7 = Arg5810[7], Arg5810_8 = Arg5810[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5810_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5810_4, Arg5810_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5810_0, Arg5810_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5810_1, Arg5810_7])]), Arg5810_7, (new Shen.Freeze([Arg5810_0, Arg5810_1, Arg5810_2, Arg5810_3, Arg5810_4, Arg5810_5, Arg5810_6, Arg5810_7, Arg5810_8], function(Arg5812) {
  var Arg5812_0 = Arg5812[0], Arg5812_1 = Arg5812[1], Arg5812_2 = Arg5812[2], Arg5812_3 = Arg5812[3], Arg5812_4 = Arg5812[4], Arg5812_5 = Arg5812[5], Arg5812_6 = Arg5812[6], Arg5812_7 = Arg5812[7], Arg5812_8 = Arg5812[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5812_2, Arg5812_3, [Shen.type_cons, [Shen.type_cons, Arg5812_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5812_5, []]]], Arg5812_6], Arg5812_7, Arg5812_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5750_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg5750_2, Arg5750_3, Arg5750_4, R5, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5814) {
  var Arg5814_0 = Arg5814[0], Arg5814_1 = Arg5814[1], Arg5814_2 = Arg5814[2], Arg5814_3 = Arg5814[3], Arg5814_4 = Arg5814[4], Arg5814_5 = Arg5814[5], Arg5814_6 = Arg5814[6], Arg5814_7 = Arg5814[7], Arg5814_8 = Arg5814[8], Arg5814_9 = Arg5814[9], Arg5814_10 = Arg5814[10], Arg5814_11 = Arg5814[11], Arg5814_12 = Arg5814[12], Arg5814_13 = Arg5814[13], Arg5814_14 = Arg5814[14], Arg5814_15 = Arg5814[15], Arg5814_16 = Arg5814[16], Arg5814_17 = Arg5814[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5814_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5814_8, (new Shen.Freeze([Arg5814_1, Arg5814_2, Arg5814_3, Arg5814_4, Arg5814_5, Arg5814_6, Arg5814_7, Arg5814_8, Arg5814_9], function(Arg5816) {
  var Arg5816_0 = Arg5816[0], Arg5816_1 = Arg5816[1], Arg5816_2 = Arg5816[2], Arg5816_3 = Arg5816[3], Arg5816_4 = Arg5816[4], Arg5816_5 = Arg5816[5], Arg5816_6 = Arg5816[6], Arg5816_7 = Arg5816[7], Arg5816_8 = Arg5816[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5816_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5816_4, Arg5816_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5816_0, Arg5816_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5816_1, Arg5816_7])]), Arg5816_7, (new Shen.Freeze([Arg5816_0, Arg5816_1, Arg5816_2, Arg5816_3, Arg5816_4, Arg5816_5, Arg5816_6, Arg5816_7, Arg5816_8], function(Arg5818) {
  var Arg5818_0 = Arg5818[0], Arg5818_1 = Arg5818[1], Arg5818_2 = Arg5818[2], Arg5818_3 = Arg5818[3], Arg5818_4 = Arg5818[4], Arg5818_5 = Arg5818[5], Arg5818_6 = Arg5818[6], Arg5818_7 = Arg5818[7], Arg5818_8 = Arg5818[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5818_2, Arg5818_3, [Shen.type_cons, [Shen.type_cons, Arg5818_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5818_5, []]]], Arg5818_6], Arg5818_7, Arg5818_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5750_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg5750_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg5750_2, Arg5750_3, Arg5750_4, R5, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5820) {
  var Arg5820_0 = Arg5820[0], Arg5820_1 = Arg5820[1], Arg5820_2 = Arg5820[2], Arg5820_3 = Arg5820[3], Arg5820_4 = Arg5820[4], Arg5820_5 = Arg5820[5], Arg5820_6 = Arg5820[6], Arg5820_7 = Arg5820[7], Arg5820_8 = Arg5820[8], Arg5820_9 = Arg5820[9], Arg5820_10 = Arg5820[10], Arg5820_11 = Arg5820[11], Arg5820_12 = Arg5820[12], Arg5820_13 = Arg5820[13], Arg5820_14 = Arg5820[14], Arg5820_15 = Arg5820[15], Arg5820_16 = Arg5820[16], Arg5820_17 = Arg5820[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5820_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5820_8, (new Shen.Freeze([Arg5820_1, Arg5820_2, Arg5820_3, Arg5820_4, Arg5820_5, Arg5820_6, Arg5820_7, Arg5820_8, Arg5820_9], function(Arg5822) {
  var Arg5822_0 = Arg5822[0], Arg5822_1 = Arg5822[1], Arg5822_2 = Arg5822[2], Arg5822_3 = Arg5822[3], Arg5822_4 = Arg5822[4], Arg5822_5 = Arg5822[5], Arg5822_6 = Arg5822[6], Arg5822_7 = Arg5822[7], Arg5822_8 = Arg5822[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5822_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5822_4, Arg5822_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5822_0, Arg5822_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5822_1, Arg5822_7])]), Arg5822_7, (new Shen.Freeze([Arg5822_0, Arg5822_1, Arg5822_2, Arg5822_3, Arg5822_4, Arg5822_5, Arg5822_6, Arg5822_7, Arg5822_8], function(Arg5824) {
  var Arg5824_0 = Arg5824[0], Arg5824_1 = Arg5824[1], Arg5824_2 = Arg5824[2], Arg5824_3 = Arg5824[3], Arg5824_4 = Arg5824[4], Arg5824_5 = Arg5824[5], Arg5824_6 = Arg5824[6], Arg5824_7 = Arg5824[7], Arg5824_8 = Arg5824[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5824_2, Arg5824_3, [Shen.type_cons, [Shen.type_cons, Arg5824_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5824_5, []]]], Arg5824_6], Arg5824_7, Arg5824_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5750_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "-->"], Arg5750_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R3, R2, R6, R7, R4, Arg5750_2, Arg5750_3, Arg5750_4, R5, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5826) {
  var Arg5826_0 = Arg5826[0], Arg5826_1 = Arg5826[1], Arg5826_2 = Arg5826[2], Arg5826_3 = Arg5826[3], Arg5826_4 = Arg5826[4], Arg5826_5 = Arg5826[5], Arg5826_6 = Arg5826[6], Arg5826_7 = Arg5826[7], Arg5826_8 = Arg5826[8], Arg5826_9 = Arg5826[9], Arg5826_10 = Arg5826[10], Arg5826_11 = Arg5826[11], Arg5826_12 = Arg5826[12], Arg5826_13 = Arg5826[13], Arg5826_14 = Arg5826[14], Arg5826_15 = Arg5826[15], Arg5826_16 = Arg5826[16], Arg5826_17 = Arg5826[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5826_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5826_8, (new Shen.Freeze([Arg5826_1, Arg5826_2, Arg5826_3, Arg5826_4, Arg5826_5, Arg5826_6, Arg5826_7, Arg5826_8, Arg5826_9], function(Arg5828) {
  var Arg5828_0 = Arg5828[0], Arg5828_1 = Arg5828[1], Arg5828_2 = Arg5828[2], Arg5828_3 = Arg5828[3], Arg5828_4 = Arg5828[4], Arg5828_5 = Arg5828[5], Arg5828_6 = Arg5828[6], Arg5828_7 = Arg5828[7], Arg5828_8 = Arg5828[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5828_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5828_4, Arg5828_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5828_0, Arg5828_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5828_1, Arg5828_7])]), Arg5828_7, (new Shen.Freeze([Arg5828_0, Arg5828_1, Arg5828_2, Arg5828_3, Arg5828_4, Arg5828_5, Arg5828_6, Arg5828_7, Arg5828_8], function(Arg5830) {
  var Arg5830_0 = Arg5830[0], Arg5830_1 = Arg5830[1], Arg5830_2 = Arg5830[2], Arg5830_3 = Arg5830[3], Arg5830_4 = Arg5830[4], Arg5830_5 = Arg5830[5], Arg5830_6 = Arg5830[6], Arg5830_7 = Arg5830[7], Arg5830_8 = Arg5830[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5830_2, Arg5830_3, [Shen.type_cons, [Shen.type_cons, Arg5830_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5830_5, []]]], Arg5830_6], Arg5830_7, Arg5830_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5750_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg5750_2, Arg5750_3, Arg5750_4, R2, Arg5750_3, R5, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5832) {
  var Arg5832_0 = Arg5832[0], Arg5832_1 = Arg5832[1], Arg5832_2 = Arg5832[2], Arg5832_3 = Arg5832[3], Arg5832_4 = Arg5832[4], Arg5832_5 = Arg5832[5], Arg5832_6 = Arg5832[6], Arg5832_7 = Arg5832[7], Arg5832_8 = Arg5832[8], Arg5832_9 = Arg5832[9], Arg5832_10 = Arg5832[10], Arg5832_11 = Arg5832[11], Arg5832_12 = Arg5832[12], Arg5832_13 = Arg5832[13], Arg5832_14 = Arg5832[14], Arg5832_15 = Arg5832[15], Arg5832_16 = Arg5832[16], Arg5832_17 = Arg5832[17], Arg5832_18 = Arg5832[18], Arg5832_19 = Arg5832[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5832_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5832_8, (new Shen.Freeze([Arg5832_1, Arg5832_2, Arg5832_3, Arg5832_4, Arg5832_5, Arg5832_6, Arg5832_7, Arg5832_8, Arg5832_9], function(Arg5834) {
  var Arg5834_0 = Arg5834[0], Arg5834_1 = Arg5834[1], Arg5834_2 = Arg5834[2], Arg5834_3 = Arg5834[3], Arg5834_4 = Arg5834[4], Arg5834_5 = Arg5834[5], Arg5834_6 = Arg5834[6], Arg5834_7 = Arg5834[7], Arg5834_8 = Arg5834[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5834_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5834_4, Arg5834_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5834_0, Arg5834_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5834_1, Arg5834_7])]), Arg5834_7, (new Shen.Freeze([Arg5834_0, Arg5834_1, Arg5834_2, Arg5834_3, Arg5834_4, Arg5834_5, Arg5834_6, Arg5834_7, Arg5834_8], function(Arg5836) {
  var Arg5836_0 = Arg5836[0], Arg5836_1 = Arg5836[1], Arg5836_2 = Arg5836[2], Arg5836_3 = Arg5836[3], Arg5836_4 = Arg5836[4], Arg5836_5 = Arg5836[5], Arg5836_6 = Arg5836[6], Arg5836_7 = Arg5836[7], Arg5836_8 = Arg5836[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5836_2, Arg5836_3, [Shen.type_cons, [Shen.type_cons, Arg5836_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5836_5, []]]], Arg5836_6], Arg5836_7, Arg5836_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg5750_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg5750_2, Arg5750_3, Arg5750_4, R2, Arg5750_3, R5, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5838) {
  var Arg5838_0 = Arg5838[0], Arg5838_1 = Arg5838[1], Arg5838_2 = Arg5838[2], Arg5838_3 = Arg5838[3], Arg5838_4 = Arg5838[4], Arg5838_5 = Arg5838[5], Arg5838_6 = Arg5838[6], Arg5838_7 = Arg5838[7], Arg5838_8 = Arg5838[8], Arg5838_9 = Arg5838[9], Arg5838_10 = Arg5838[10], Arg5838_11 = Arg5838[11], Arg5838_12 = Arg5838[12], Arg5838_13 = Arg5838[13], Arg5838_14 = Arg5838[14], Arg5838_15 = Arg5838[15], Arg5838_16 = Arg5838[16], Arg5838_17 = Arg5838[17], Arg5838_18 = Arg5838[18], Arg5838_19 = Arg5838[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5838_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5838_8, (new Shen.Freeze([Arg5838_1, Arg5838_2, Arg5838_3, Arg5838_4, Arg5838_5, Arg5838_6, Arg5838_7, Arg5838_8, Arg5838_9], function(Arg5840) {
  var Arg5840_0 = Arg5840[0], Arg5840_1 = Arg5840[1], Arg5840_2 = Arg5840[2], Arg5840_3 = Arg5840[3], Arg5840_4 = Arg5840[4], Arg5840_5 = Arg5840[5], Arg5840_6 = Arg5840[6], Arg5840_7 = Arg5840[7], Arg5840_8 = Arg5840[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5840_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5840_4, Arg5840_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5840_0, Arg5840_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5840_1, Arg5840_7])]), Arg5840_7, (new Shen.Freeze([Arg5840_0, Arg5840_1, Arg5840_2, Arg5840_3, Arg5840_4, Arg5840_5, Arg5840_6, Arg5840_7, Arg5840_8], function(Arg5842) {
  var Arg5842_0 = Arg5842[0], Arg5842_1 = Arg5842[1], Arg5842_2 = Arg5842[2], Arg5842_3 = Arg5842[3], Arg5842_4 = Arg5842[4], Arg5842_5 = Arg5842[5], Arg5842_6 = Arg5842[6], Arg5842_7 = Arg5842[7], Arg5842_8 = Arg5842[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5842_2, Arg5842_3, [Shen.type_cons, [Shen.type_cons, Arg5842_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5842_5, []]]], Arg5842_6], Arg5842_7, Arg5842_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5750_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]], Arg5750_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg5750_2, Arg5750_3, Arg5750_4, R2, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5844) {
  var Arg5844_0 = Arg5844[0], Arg5844_1 = Arg5844[1], Arg5844_2 = Arg5844[2], Arg5844_3 = Arg5844[3], Arg5844_4 = Arg5844[4], Arg5844_5 = Arg5844[5], Arg5844_6 = Arg5844[6], Arg5844_7 = Arg5844[7], Arg5844_8 = Arg5844[8], Arg5844_9 = Arg5844[9], Arg5844_10 = Arg5844[10], Arg5844_11 = Arg5844[11], Arg5844_12 = Arg5844[12], Arg5844_13 = Arg5844[13], Arg5844_14 = Arg5844[14], Arg5844_15 = Arg5844[15], Arg5844_16 = Arg5844[16], Arg5844_17 = Arg5844[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5844_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5844_8, (new Shen.Freeze([Arg5844_1, Arg5844_2, Arg5844_3, Arg5844_4, Arg5844_5, Arg5844_6, Arg5844_7, Arg5844_8, Arg5844_9], function(Arg5846) {
  var Arg5846_0 = Arg5846[0], Arg5846_1 = Arg5846[1], Arg5846_2 = Arg5846[2], Arg5846_3 = Arg5846[3], Arg5846_4 = Arg5846[4], Arg5846_5 = Arg5846[5], Arg5846_6 = Arg5846[6], Arg5846_7 = Arg5846[7], Arg5846_8 = Arg5846[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5846_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5846_4, Arg5846_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5846_0, Arg5846_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5846_1, Arg5846_7])]), Arg5846_7, (new Shen.Freeze([Arg5846_0, Arg5846_1, Arg5846_2, Arg5846_3, Arg5846_4, Arg5846_5, Arg5846_6, Arg5846_7, Arg5846_8], function(Arg5848) {
  var Arg5848_0 = Arg5848[0], Arg5848_1 = Arg5848[1], Arg5848_2 = Arg5848[2], Arg5848_3 = Arg5848[3], Arg5848_4 = Arg5848[4], Arg5848_5 = Arg5848[5], Arg5848_6 = Arg5848[6], Arg5848_7 = Arg5848[7], Arg5848_8 = Arg5848[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5848_2, Arg5848_3, [Shen.type_cons, [Shen.type_cons, Arg5848_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5848_5, []]]], Arg5848_6], Arg5848_7, Arg5848_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]]], Arg5750_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg5750_2, Arg5750_3, Arg5750_4, R2, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5850) {
  var Arg5850_0 = Arg5850[0], Arg5850_1 = Arg5850[1], Arg5850_2 = Arg5850[2], Arg5850_3 = Arg5850[3], Arg5850_4 = Arg5850[4], Arg5850_5 = Arg5850[5], Arg5850_6 = Arg5850[6], Arg5850_7 = Arg5850[7], Arg5850_8 = Arg5850[8], Arg5850_9 = Arg5850[9], Arg5850_10 = Arg5850[10], Arg5850_11 = Arg5850[11], Arg5850_12 = Arg5850[12], Arg5850_13 = Arg5850[13], Arg5850_14 = Arg5850[14], Arg5850_15 = Arg5850[15], Arg5850_16 = Arg5850[16], Arg5850_17 = Arg5850[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5850_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5850_8, (new Shen.Freeze([Arg5850_1, Arg5850_2, Arg5850_3, Arg5850_4, Arg5850_5, Arg5850_6, Arg5850_7, Arg5850_8, Arg5850_9], function(Arg5852) {
  var Arg5852_0 = Arg5852[0], Arg5852_1 = Arg5852[1], Arg5852_2 = Arg5852[2], Arg5852_3 = Arg5852[3], Arg5852_4 = Arg5852[4], Arg5852_5 = Arg5852[5], Arg5852_6 = Arg5852[6], Arg5852_7 = Arg5852[7], Arg5852_8 = Arg5852[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5852_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5852_4, Arg5852_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5852_0, Arg5852_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5852_1, Arg5852_7])]), Arg5852_7, (new Shen.Freeze([Arg5852_0, Arg5852_1, Arg5852_2, Arg5852_3, Arg5852_4, Arg5852_5, Arg5852_6, Arg5852_7, Arg5852_8], function(Arg5854) {
  var Arg5854_0 = Arg5854[0], Arg5854_1 = Arg5854[1], Arg5854_2 = Arg5854[2], Arg5854_3 = Arg5854[3], Arg5854_4 = Arg5854[4], Arg5854_5 = Arg5854[5], Arg5854_6 = Arg5854[6], Arg5854_7 = Arg5854[7], Arg5854_8 = Arg5854[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5854_2, Arg5854_3, [Shen.type_cons, [Shen.type_cons, Arg5854_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5854_5, []]]], Arg5854_6], Arg5854_7, Arg5854_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R3, R1, R4, R2, Arg5750_1, R5, R6, Arg5750_2, Arg5750_3, Arg5750_4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5856) {
  var Arg5856_0 = Arg5856[0], Arg5856_1 = Arg5856[1], Arg5856_2 = Arg5856[2], Arg5856_3 = Arg5856[3], Arg5856_4 = Arg5856[4], Arg5856_5 = Arg5856[5], Arg5856_6 = Arg5856[6], Arg5856_7 = Arg5856[7], Arg5856_8 = Arg5856[8], Arg5856_9 = Arg5856[9], Arg5856_10 = Arg5856[10], Arg5856_11 = Arg5856[11], Arg5856_12 = Arg5856[12], Arg5856_13 = Arg5856[13], Arg5856_14 = Arg5856[14], Arg5856_15 = Arg5856[15], Arg5856_16 = Arg5856[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5856_1, Arg5856_7, Arg5856_8, Arg5856_9, (new Shen.Freeze([Arg5856_1, Arg5856_2, Arg5856_3, Arg5856_4, Arg5856_5, Arg5856_6, Arg5856_7, Arg5856_8, Arg5856_9, Arg5856_10], function(Arg5858) {
  var Arg5858_0 = Arg5858[0], Arg5858_1 = Arg5858[1], Arg5858_2 = Arg5858[2], Arg5858_3 = Arg5858[3], Arg5858_4 = Arg5858[4], Arg5858_5 = Arg5858[5], Arg5858_6 = Arg5858[6], Arg5858_7 = Arg5858[7], Arg5858_8 = Arg5858[8], Arg5858_9 = Arg5858[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5858_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5858_8, (new Shen.Freeze([Arg5858_1, Arg5858_2, Arg5858_3, Arg5858_4, Arg5858_5, Arg5858_6, Arg5858_7, Arg5858_8, Arg5858_9], function(Arg5860) {
  var Arg5860_0 = Arg5860[0], Arg5860_1 = Arg5860[1], Arg5860_2 = Arg5860[2], Arg5860_3 = Arg5860[3], Arg5860_4 = Arg5860[4], Arg5860_5 = Arg5860[5], Arg5860_6 = Arg5860[6], Arg5860_7 = Arg5860[7], Arg5860_8 = Arg5860[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5860_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5860_4, Arg5860_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5860_0, Arg5860_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5860_1, Arg5860_7])]), Arg5860_7, (new Shen.Freeze([Arg5860_0, Arg5860_1, Arg5860_2, Arg5860_3, Arg5860_4, Arg5860_5, Arg5860_6, Arg5860_7, Arg5860_8], function(Arg5862) {
  var Arg5862_0 = Arg5862[0], Arg5862_1 = Arg5862[1], Arg5862_2 = Arg5862[2], Arg5862_3 = Arg5862[3], Arg5862_4 = Arg5862[4], Arg5862_5 = Arg5862[5], Arg5862_6 = Arg5862[6], Arg5862_7 = Arg5862[7], Arg5862_8 = Arg5862[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5862_2, Arg5862_3, [Shen.type_cons, [Shen.type_cons, Arg5862_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5862_5, []]]], Arg5862_6], Arg5862_7, Arg5862_8]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "open"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "file"], R1)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_1, Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "stream"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5750_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5750_3, (new Shen.Freeze([R2, R3, R1, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5864) {
  var Arg5864_0 = Arg5864[0], Arg5864_1 = Arg5864[1], Arg5864_2 = Arg5864[2], Arg5864_3 = Arg5864[3], Arg5864_4 = Arg5864[4], Arg5864_5 = Arg5864[5], Arg5864_6 = Arg5864[6], Arg5864_7 = Arg5864[7], Arg5864_8 = Arg5864[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5864_3, Arg5864_7, (new Shen.Freeze([Arg5864_3, Arg5864_2, Arg5864_6, Arg5864_7, Arg5864_8], function(Arg5866) {
  var Arg5866_0 = Arg5866[0], Arg5866_1 = Arg5866[1], Arg5866_2 = Arg5866[2], Arg5866_3 = Arg5866[3], Arg5866_4 = Arg5866[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5866_1, [Shen.type_symbol, "string"], Arg5866_2, Arg5866_3, Arg5866_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5750_3, (new Shen.Freeze([R2, R3, R1, R4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5868) {
  var Arg5868_0 = Arg5868[0], Arg5868_1 = Arg5868[1], Arg5868_2 = Arg5868[2], Arg5868_3 = Arg5868[3], Arg5868_4 = Arg5868[4], Arg5868_5 = Arg5868[5], Arg5868_6 = Arg5868[6], Arg5868_7 = Arg5868[7], Arg5868_8 = Arg5868[8], Arg5868_9 = Arg5868[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5868_4, Arg5868_8, (new Shen.Freeze([Arg5868_4, Arg5868_2, Arg5868_7, Arg5868_8, Arg5868_9], function(Arg5870) {
  var Arg5870_0 = Arg5870[0], Arg5870_1 = Arg5870[1], Arg5870_2 = Arg5870[2], Arg5870_3 = Arg5870[3], Arg5870_4 = Arg5870[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5870_1, [Shen.type_symbol, "string"], Arg5870_2, Arg5870_3, Arg5870_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5750_3, (new Shen.Freeze([R2, R3, R0, R1, Arg5750_2, Arg5750_4, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5872) {
  var Arg5872_0 = Arg5872[0], Arg5872_1 = Arg5872[1], Arg5872_2 = Arg5872[2], Arg5872_3 = Arg5872[3], Arg5872_4 = Arg5872[4], Arg5872_5 = Arg5872[5], Arg5872_6 = Arg5872[6], Arg5872_7 = Arg5872[7], Arg5872_8 = Arg5872[8], Arg5872_9 = Arg5872[9], Arg5872_10 = Arg5872[10], Arg5872_11 = Arg5872[11], Arg5872_12 = Arg5872[12], Arg5872_13 = Arg5872[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5872_2, Arg5872_7, (new Shen.Freeze([Arg5872_2, Arg5872_3, Arg5872_4, Arg5872_7, Arg5872_5], function(Arg5874) {
  var Arg5874_0 = Arg5874[0], Arg5874_1 = Arg5874[1], Arg5874_2 = Arg5874[2], Arg5874_3 = Arg5874[3], Arg5874_4 = Arg5874[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5874_1, [Shen.type_symbol, "string"], Arg5874_2, Arg5874_3, Arg5874_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "stream"], Arg5750_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5750_3, (new Shen.Freeze([R5, R3, R1, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5876) {
  var Arg5876_0 = Arg5876[0], Arg5876_1 = Arg5876[1], Arg5876_2 = Arg5876[2], Arg5876_3 = Arg5876[3], Arg5876_4 = Arg5876[4], Arg5876_5 = Arg5876[5], Arg5876_6 = Arg5876[6], Arg5876_7 = Arg5876[7], Arg5876_8 = Arg5876[8], Arg5876_9 = Arg5876[9], Arg5876_10 = Arg5876[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5876_5, Arg5876_4, (new Shen.Freeze([Arg5876_5, Arg5876_2, Arg5876_8, Arg5876_4, Arg5876_9], function(Arg5878) {
  var Arg5878_0 = Arg5878[0], Arg5878_1 = Arg5878[1], Arg5878_2 = Arg5878[2], Arg5878_3 = Arg5878[3], Arg5878_4 = Arg5878[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5878_1, [Shen.type_symbol, "string"], Arg5878_2, Arg5878_3, Arg5878_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5750_3, (new Shen.Freeze([R5, R3, R1, R2, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5880) {
  var Arg5880_0 = Arg5880[0], Arg5880_1 = Arg5880[1], Arg5880_2 = Arg5880[2], Arg5880_3 = Arg5880[3], Arg5880_4 = Arg5880[4], Arg5880_5 = Arg5880[5], Arg5880_6 = Arg5880[6], Arg5880_7 = Arg5880[7], Arg5880_8 = Arg5880[8], Arg5880_9 = Arg5880[9], Arg5880_10 = Arg5880[10], Arg5880_11 = Arg5880[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5880_6, Arg5880_5, (new Shen.Freeze([Arg5880_6, Arg5880_2, Arg5880_9, Arg5880_5, Arg5880_10], function(Arg5882) {
  var Arg5882_0 = Arg5882[0], Arg5882_1 = Arg5882[1], Arg5882_2 = Arg5882[2], Arg5882_3 = Arg5882[3], Arg5882_4 = Arg5882[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5882_1, [Shen.type_symbol, "string"], Arg5882_2, Arg5882_3, Arg5882_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5750_3, (new Shen.Freeze([R5, R3, R0, R1, Arg5750_2, Arg5750_4, R2, Arg5750_3, R4, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5884) {
  var Arg5884_0 = Arg5884[0], Arg5884_1 = Arg5884[1], Arg5884_2 = Arg5884[2], Arg5884_3 = Arg5884[3], Arg5884_4 = Arg5884[4], Arg5884_5 = Arg5884[5], Arg5884_6 = Arg5884[6], Arg5884_7 = Arg5884[7], Arg5884_8 = Arg5884[8], Arg5884_9 = Arg5884[9], Arg5884_10 = Arg5884[10], Arg5884_11 = Arg5884[11], Arg5884_12 = Arg5884[12], Arg5884_13 = Arg5884[13], Arg5884_14 = Arg5884[14], Arg5884_15 = Arg5884[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5884_2, Arg5884_7, (new Shen.Freeze([Arg5884_2, Arg5884_3, Arg5884_4, Arg5884_7, Arg5884_5], function(Arg5886) {
  var Arg5886_0 = Arg5886[0], Arg5886_1 = Arg5886[1], Arg5886_2 = Arg5886[2], Arg5886_3 = Arg5886[3], Arg5886_4 = Arg5886[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5886_1, [Shen.type_symbol, "string"], Arg5886_2, Arg5886_3, Arg5886_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5750_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, R4, []]], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R3, Arg5750_3, (new Shen.Freeze([R4, R3, R0, R1, Arg5750_2, Arg5750_4, R2, Arg5750_3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5888) {
  var Arg5888_0 = Arg5888[0], Arg5888_1 = Arg5888[1], Arg5888_2 = Arg5888[2], Arg5888_3 = Arg5888[3], Arg5888_4 = Arg5888[4], Arg5888_5 = Arg5888[5], Arg5888_6 = Arg5888[6], Arg5888_7 = Arg5888[7], Arg5888_8 = Arg5888[8], Arg5888_9 = Arg5888[9], Arg5888_10 = Arg5888[10], Arg5888_11 = Arg5888[11], Arg5888_12 = Arg5888[12], Arg5888_13 = Arg5888[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5888_2, Arg5888_7, (new Shen.Freeze([Arg5888_2, Arg5888_3, Arg5888_4, Arg5888_7, Arg5888_5], function(Arg5890) {
  var Arg5890_0 = Arg5890[0], Arg5890_1 = Arg5890[1], Arg5890_2 = Arg5890[2], Arg5890_3 = Arg5890[3], Arg5890_4 = Arg5890[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5890_1, [Shen.type_symbol, "string"], Arg5890_2, Arg5890_3, Arg5890_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R1, R3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5892) {
  var Arg5892_0 = Arg5892[0], Arg5892_1 = Arg5892[1], Arg5892_2 = Arg5892[2], Arg5892_3 = Arg5892[3], Arg5892_4 = Arg5892[4], Arg5892_5 = Arg5892[5], Arg5892_6 = Arg5892[6], Arg5892_7 = Arg5892[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg5892_1, Arg5892_4, Arg5892_6, (new Shen.Freeze([Arg5892_4, Arg5892_0, Arg5892_1, Arg5892_5, Arg5892_6, Arg5892_7], function(Arg5894) {
  var Arg5894_0 = Arg5894[0], Arg5894_1 = Arg5894[1], Arg5894_2 = Arg5894[2], Arg5894_3 = Arg5894[3], Arg5894_4 = Arg5894[4], Arg5894_5 = Arg5894[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5894_1, Arg5894_2, Arg5894_3, Arg5894_4, Arg5894_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["bind"], [R2, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5750_3])]), Arg5750_3, (new Shen.Freeze([R1, Arg5750_1, R2, Arg5750_3, Arg5750_4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5896) {
  var Arg5896_0 = Arg5896[0], Arg5896_1 = Arg5896[1], Arg5896_2 = Arg5896[2], Arg5896_3 = Arg5896[3], Arg5896_4 = Arg5896[4], Arg5896_5 = Arg5896[5], Arg5896_6 = Arg5896[6], Arg5896_7 = Arg5896[7], Arg5896_8 = Arg5896[8], Arg5896_9 = Arg5896[9], Arg5896_10 = Arg5896[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg5896_1, Arg5896_2, Arg5896_3, Arg5896_4]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R1, R3, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5898) {
  var Arg5898_0 = Arg5898[0], Arg5898_1 = Arg5898[1], Arg5898_2 = Arg5898[2], Arg5898_3 = Arg5898[3], Arg5898_4 = Arg5898[4], Arg5898_5 = Arg5898[5], Arg5898_6 = Arg5898[6], Arg5898_7 = Arg5898[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5898_0, [Shen.type_symbol, "symbol"], Arg5898_5, Arg5898_6, (new Shen.Freeze([Arg5898_2, Arg5898_0, Arg5898_1, Arg5898_4, Arg5898_5, Arg5898_6, Arg5898_7], function(Arg5900) {
  var Arg5900_0 = Arg5900[0], Arg5900_1 = Arg5900[1], Arg5900_2 = Arg5900[2], Arg5900_3 = Arg5900[3], Arg5900_4 = Arg5900[4], Arg5900_5 = Arg5900[5], Arg5900_6 = Arg5900[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5900_0, Arg5900_5, (new Shen.Freeze([Arg5900_0, Arg5900_1, Arg5900_2, Arg5900_3, Arg5900_4, Arg5900_5, Arg5900_6], function(Arg5902) {
  var Arg5902_0 = Arg5902[0], Arg5902_1 = Arg5902[1], Arg5902_2 = Arg5902[2], Arg5902_3 = Arg5902[3], Arg5902_4 = Arg5902[4], Arg5902_5 = Arg5902[5], Arg5902_6 = Arg5902[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [[Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, Arg5902_1, []]], Arg5902_3, Arg5902_4, Arg5902_5, (new Shen.Freeze([Arg5902_1, Arg5902_2, Arg5902_3, Arg5902_4, Arg5902_5, Arg5902_6], function(Arg5904) {
  var Arg5904_0 = Arg5904[0], Arg5904_1 = Arg5904[1], Arg5904_2 = Arg5904[2], Arg5904_3 = Arg5904[3], Arg5904_4 = Arg5904[4], Arg5904_5 = Arg5904[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5904_1, Arg5904_2, Arg5904_3, Arg5904_4, Arg5904_5]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.<-sem"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R2, R1, R0, Arg5750_1, R3, R4, Arg5750_2, Arg5750_3, Arg5750_4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5906) {
  var Arg5906_0 = Arg5906[0], Arg5906_1 = Arg5906[1], Arg5906_2 = Arg5906[2], Arg5906_3 = Arg5906[3], Arg5906_4 = Arg5906[4], Arg5906_5 = Arg5906[5], Arg5906_6 = Arg5906[6], Arg5906_7 = Arg5906[7], Arg5906_8 = Arg5906[8], Arg5906_9 = Arg5906[9], Arg5906_10 = Arg5906[10], Arg5906_11 = Arg5906[11], Arg5906_12 = Arg5906[12], Arg5906_13 = Arg5906[13], Arg5906_14 = Arg5906[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5906_1, [Shen.type_cons, Arg5906_0, [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg5906_5, []]]], Arg5906_6, Arg5906_7, (new Shen.Freeze([Arg5906_0, Arg5906_1, Arg5906_2, Arg5906_3, Arg5906_4, Arg5906_5, Arg5906_6, Arg5906_7, Arg5906_8], function(Arg5908) {
  var Arg5908_0 = Arg5908[0], Arg5908_1 = Arg5908[1], Arg5908_2 = Arg5908[2], Arg5908_3 = Arg5908[3], Arg5908_4 = Arg5908[4], Arg5908_5 = Arg5908[5], Arg5908_6 = Arg5908[6], Arg5908_7 = Arg5908[7], Arg5908_8 = Arg5908[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5908_2, Arg5908_7, (new Shen.Freeze([Arg5908_1, Arg5908_2, Arg5908_3, Arg5908_4, Arg5908_5, Arg5908_6, Arg5908_7, Arg5908_8], function(Arg5910) {
  var Arg5910_0 = Arg5910[0], Arg5910_1 = Arg5910[1], Arg5910_2 = Arg5910[2], Arg5910_3 = Arg5910[3], Arg5910_4 = Arg5910[4], Arg5910_5 = Arg5910[5], Arg5910_6 = Arg5910[6], Arg5910_7 = Arg5910[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5910_3, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_6])]), Arg5910_6, (new Shen.Freeze([Arg5910_0, Arg5910_1, Arg5910_2, Arg5910_3, Arg5910_4, Arg5910_5, Arg5910_6, Arg5910_7], function(Arg5912) {
  var Arg5912_0 = Arg5912[0], Arg5912_1 = Arg5912[1], Arg5912_2 = Arg5912[2], Arg5912_3 = Arg5912[3], Arg5912_4 = Arg5912[4], Arg5912_5 = Arg5912[5], Arg5912_6 = Arg5912[6], Arg5912_7 = Arg5912[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5912_1, Arg5912_6, (new Shen.Freeze([Arg5912_1, Arg5912_2, Arg5912_3, Arg5912_4, Arg5912_5, Arg5912_6, Arg5912_7], function(Arg5914) {
  var Arg5914_0 = Arg5914[0], Arg5914_1 = Arg5914[1], Arg5914_2 = Arg5914[2], Arg5914_3 = Arg5914[3], Arg5914_4 = Arg5914[4], Arg5914_5 = Arg5914[5], Arg5914_6 = Arg5914[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5914_2, Arg5914_1, [Shen.type_cons, [Shen.type_cons, Arg5914_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5914_3, []]]], Arg5914_4], Arg5914_5, Arg5914_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_1, Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5750_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "symbol"], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5750_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5750_3]),
  (R1 = R1))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-hyps"], [Arg5750_2, R1, Arg5750_3, (new Shen.Freeze([Arg5750_2, Arg5750_0, Arg5750_1, R1, Arg5750_3, Arg5750_4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5916) {
  var Arg5916_0 = Arg5916[0], Arg5916_1 = Arg5916[1], Arg5916_2 = Arg5916[2], Arg5916_3 = Arg5916[3], Arg5916_4 = Arg5916[4], Arg5916_5 = Arg5916[5], Arg5916_6 = Arg5916[6], Arg5916_7 = Arg5916[7], Arg5916_8 = Arg5916[8], Arg5916_9 = Arg5916[9], Arg5916_10 = Arg5916[10], Arg5916_11 = Arg5916[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5916_1, Arg5916_2, Arg5916_3, Arg5916_4, Arg5916_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R2, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4, R0, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5918) {
  var Arg5918_0 = Arg5918[0], Arg5918_1 = Arg5918[1], Arg5918_2 = Arg5918[2], Arg5918_3 = Arg5918[3], Arg5918_4 = Arg5918[4], Arg5918_5 = Arg5918[5], Arg5918_6 = Arg5918[6], Arg5918_7 = Arg5918[7], Arg5918_8 = Arg5918[8], Arg5918_9 = Arg5918[9], Arg5918_10 = Arg5918[10], Arg5918_11 = Arg5918[11], Arg5918_12 = Arg5918[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg5918_1, Arg5918_2]], Arg5918_3, Arg5918_4, Arg5918_5, Arg5918_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5750_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5750_3, (new Shen.Freeze([R0, R1, R2, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4, Arg5750_0, Arg5750_1, Arg5750_2, Arg5750_3, Arg5750_4], function(Arg5920) {
  var Arg5920_0 = Arg5920[0], Arg5920_1 = Arg5920[1], Arg5920_2 = Arg5920[2], Arg5920_3 = Arg5920[3], Arg5920_4 = Arg5920[4], Arg5920_5 = Arg5920[5], Arg5920_6 = Arg5920[6], Arg5920_7 = Arg5920[7], Arg5920_8 = Arg5920[8], Arg5920_9 = Arg5920[9], Arg5920_10 = Arg5920[10], Arg5920_11 = Arg5920[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defcc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg5920_1, Arg5920_2]], Arg5920_3, Arg5920_4, Arg5920_5, Arg5920_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.process-datatype"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_1, Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5750_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5750_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5750_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_0, Arg5750_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5750_1, Arg5750_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5750_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg5750_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5750_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5750_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5750_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, (Shen.globals["shen.*datatypes*"]), Arg5750_3, (new Shen.Freeze([Arg5750_0, Arg5750_1, Arg5750_2, R1, Arg5750_3, Arg5750_4], function(Arg5922) {
  var Arg5922_0 = Arg5922[0], Arg5922_1 = Arg5922[1], Arg5922_2 = Arg5922[2], Arg5922_3 = Arg5922[3], Arg5922_4 = Arg5922[4], Arg5922_5 = Arg5922[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [[Shen.type_cons, Arg5922_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5922_1, []]]], Arg5922_2, Arg5922_3, Arg5922_4, Arg5922_5]);});})}))]))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.th*"];





Shen.fns["shen.t*-hyps"] = [Shen.type_func, function shen_user_lambda5925(Arg5924) {
  if (Arg5924.length < 4) return [Shen.type_func, shen_user_lambda5925, 4, Arg5924];
  var Arg5924_0 = Arg5924[0], Arg5924_1 = Arg5924[1], Arg5924_2 = Arg5924[2], Arg5924_3 = Arg5924[3];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5924_0, Arg5924_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5924_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5924_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5924_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "list"], Arg5924_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R5, []]], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5924_0, Arg5924_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5924_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg5924_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg5924_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5924_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5924_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R1, []], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5924_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, "*"], Arg5924_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R7 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R7, []], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5924_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R0 = R6))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]]], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R0 = R6))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5924_0, Arg5924_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5924_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5924_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5924_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "vector"], Arg5924_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R5, []]], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5924_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5924_0, Arg5924_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5924_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5924_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5924_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "string"], Arg5924_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5924_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5924_2])]], Arg5924_2, Arg5924_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5924_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5924_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5924_2])]], Arg5924_2, Arg5924_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5924_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5924_2]),
  (R0 = R4))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5924_0, Arg5924_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5924_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5924_1, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5924_2]), Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5924_2])], Arg5924_2, (new Shen.Freeze([Arg5924_1, R1, R0, R2, Arg5924_2, Arg5924_3], function(Arg5926) {
  var Arg5926_0 = Arg5926[0], Arg5926_1 = Arg5926[1], Arg5926_2 = Arg5926[2], Arg5926_3 = Arg5926[3], Arg5926_4 = Arg5926[4], Arg5926_5 = Arg5926[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-hyps"], [Arg5926_2, Arg5926_3, Arg5926_4, Arg5926_5]);});})}))]);}))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.t*-hyps"];





Shen.fns["shen.show"] = [Shen.type_func, function shen_user_lambda5929(Arg5928) {
  if (Arg5928.length < 4) return [Shen.type_func, shen_user_lambda5929, 4, Arg5928];
  var Arg5928_0 = Arg5928[0], Arg5928_1 = Arg5928[1], Arg5928_2 = Arg5928[2], Arg5928_3 = Arg5928[3];
  return (((Shen.globals["shen.*spy*"]))
  ? (Shen.call(Shen.fns["shen.line"], []),
  Shen.call(Shen.fns["shen.show-p"], [Shen.call(Shen.fns["shen.deref"], [Arg5928_0, Arg5928_2])]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["shen.show-assumptions"], [Shen.call(Shen.fns["shen.deref"], [Arg5928_1, Arg5928_2]), 1]),
  Shen.call(Shen.fns["shen.prhush"], ["\x0a> ", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.pause-for-user"], [(Shen.globals["*language*"])]),
  Shen.thaw(Arg5928_3))
  : Shen.thaw(Arg5928_3))}, 4, [], "shen.show"];





Shen.fns["shen.line"] = [Shen.type_func, function shen_user_lambda5931(Arg5930) {
  if (Arg5930.length < 0) return [Shen.type_func, shen_user_lambda5931, 0, Arg5930];
  var R0;
  return ((R0 = Shen.call(Shen.fns["inferences"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("____________________________________________________________ " + Shen.call(Shen.fns["shen.app"], [R0, (" inference" + Shen.call(Shen.fns["shen.app"], [((Shen.unwind_tail(Shen.$eq$(1, R0)))
  ? ""
  : "s"), " \x0a?- ", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.line"];





Shen.fns["shen.show-p"] = [Shen.type_func, function shen_user_lambda5933(Arg5932) {
  if (Arg5932.length < 1) return [Shen.type_func, shen_user_lambda5933, 1, Arg5932];
  var Arg5932_0 = Arg5932[0];
  return (((Shen.is_type(Arg5932_0, Shen.type_cons) && (Shen.is_type(Arg5932_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg5932_0[2][1])) && (Shen.is_type(Arg5932_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5932_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg5932_0[1], (" : " + Shen.call(Shen.fns["shen.app"], [Arg5932_0[2][2][1], "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], [])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg5932_0, "", [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], [])]);}))}, 1, [], "shen.show-p"];





Shen.fns["shen.show-assumptions"] = [Shen.type_func, function shen_user_lambda5935(Arg5934) {
  if (Arg5934.length < 2) return [Shen.type_func, shen_user_lambda5935, 2, Arg5934];
  var Arg5934_0 = Arg5934[0], Arg5934_1 = Arg5934[1];
  return ((Shen.empty$question$(Arg5934_0))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.is_type(Arg5934_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg5934_1, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.show-p"], [Arg5934_0[1]]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.show-assumptions"], [Arg5934_0[2], (Arg5934_1 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.show-assumptions"]]);})))}, 2, [], "shen.show-assumptions"];





Shen.fns["shen.pause-for-user"] = [Shen.type_func, function shen_user_lambda5937(Arg5936) {
  if (Arg5936.length < 1) return [Shen.type_func, shen_user_lambda5937, 1, Arg5936];
  var Arg5936_0 = Arg5936[0];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$("Common Lisp", Arg5936_0)))
  ? ((R0 = Shen.call(Shen.fns["FORMAT"], [[], "~C", Shen.call(Shen.fns["READ-CHAR"], [])])),
  ((Shen.unwind_tail(Shen.$eq$(R0, "a")))
  ? (function() {
  return Shen.simple_error("input aborted\x0a");})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);})))
  : ((R0 = Shen.call(Shen.fns["shen.read-char"], [])),
  ((Shen.unwind_tail(Shen.$eq$(R0, "a")))
  ? (function() {
  return Shen.simple_error("input aborted\x0a");})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))))}, 1, [], "shen.pause-for-user"];





Shen.fns["shen.read-char"] = [Shen.type_func, function shen_user_lambda5939(Arg5938) {
  if (Arg5938.length < 0) return [Shen.type_func, shen_user_lambda5939, 0, Arg5938];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 0]);})}, 0, [], "shen.read-char"];





Shen.fns["shen.read-char-h"] = [Shen.type_func, function shen_user_lambda5941(Arg5940) {
  if (Arg5940.length < 2) return [Shen.type_func, shen_user_lambda5941, 2, Arg5940];
  var Arg5940_0 = Arg5940[0], Arg5940_1 = Arg5940[1];
  return (((Shen.unwind_tail(Shen.$eq$(-1, Arg5940_0)) && Shen.unwind_tail(Shen.$eq$(0, Arg5940_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 1]);})
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg5940_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 0]);})
  : (((Shen.unwind_tail(Shen.$eq$(-1, Arg5940_0)) && Shen.unwind_tail(Shen.$eq$(1, Arg5940_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 1]);})
  : ((Shen.unwind_tail(Shen.$eq$(1, Arg5940_1)))
  ? (function() {
  return Shen.n_$gt$string(Arg5940_0);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.read-char-h"]]);})))))}, 2, [], "shen.read-char-h"];





Shen.fns["shen.typedf?"] = [Shen.type_func, function shen_user_lambda5943(Arg5942) {
  if (Arg5942.length < 1) return [Shen.type_func, shen_user_lambda5943, 1, Arg5942];
  var Arg5942_0 = Arg5942[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5942_0, (Shen.globals["shen.*signedfuncs*"])]);})}, 1, [], "shen.typedf?"];





Shen.fns["shen.sigf"] = [Shen.type_func, function shen_user_lambda5945(Arg5944) {
  if (Arg5944.length < 1) return [Shen.type_func, shen_user_lambda5945, 1, Arg5944];
  var Arg5944_0 = Arg5944[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg5944_0]);})}, 1, [], "shen.sigf"];





Shen.fns["shen.placeholder"] = [Shen.type_func, function shen_user_lambda5947(Arg5946) {
  if (Arg5946.length < 0) return [Shen.type_func, shen_user_lambda5947, 0, Arg5946];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "&&"]]);})}, 0, [], "shen.placeholder"];





Shen.fns["shen.base"] = [Shen.type_func, function shen_user_lambda5949(Arg5948) {
  if (Arg5948.length < 4) return [Shen.type_func, shen_user_lambda5949, 4, Arg5948];
  var Arg5948_0 = Arg5948[0], Arg5948_1 = Arg5948[1], Arg5948_2 = Arg5948[2], Arg5948_3 = Arg5948[3];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_1, Arg5948_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_2])) == 'number'), Arg5948_2, Arg5948_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "number"], Arg5948_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_2])) == 'number'), Arg5948_2, Arg5948_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5948_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_1, Arg5948_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_2])), Arg5948_2, Arg5948_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "boolean"], Arg5948_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_2])), Arg5948_2, Arg5948_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5948_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_1, Arg5948_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_2])) == 'string'), Arg5948_2, Arg5948_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "string"], Arg5948_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_2])) == 'string'), Arg5948_2, Arg5948_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5948_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_1, Arg5948_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_2]), Shen.type_symbol), Arg5948_2, (new Shen.Freeze([Arg5948_0, Arg5948_1, Arg5948_3, Arg5948_2], function(Arg5950) {
  var Arg5950_0 = Arg5950[0], Arg5950_1 = Arg5950[1], Arg5950_2 = Arg5950[2], Arg5950_3 = Arg5950[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5950_0, Arg5950_3])])), Arg5950_3, Arg5950_2]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "symbol"], Arg5948_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_2]), Shen.type_symbol), Arg5948_2, (new Shen.Freeze([R0, Arg5948_0, Arg5948_1, Arg5948_3, Arg5948_2], function(Arg5952) {
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2], Arg5952_3 = Arg5952[3], Arg5952_4 = Arg5952[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5952_1, Arg5952_4])])), Arg5952_4, Arg5952_3]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5948_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_0, Arg5948_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5948_1, Arg5948_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5948_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5948_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? (R1[1],
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5948_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.thaw(Arg5948_3))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5948_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5948_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5948_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg5948_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, []], Arg5948_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5948_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5948_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "list"], Arg5948_2]),
  ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5948_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0[1],
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5948_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5948_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg5948_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg5948_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5948_2]),
  (R0 = R2))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5948_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, R2, []], Arg5948_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg5948_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5948_2]),
  (R0 = R2))
  : (R0 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5948_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5948_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R1, []]], Arg5948_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5948_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5948_2]),
  R1)
  : false)))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.base"];





Shen.fns["shen.by_hypothesis"] = [Shen.type_func, function shen_user_lambda5955(Arg5954) {
  if (Arg5954.length < 5) return [Shen.type_func, shen_user_lambda5955, 5, Arg5954];
  var Arg5954_0 = Arg5954[0], Arg5954_1 = Arg5954[1], Arg5954_2 = Arg5954[2], Arg5954_3 = Arg5954[3], Arg5954_4 = Arg5954[4];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5954_2, Arg5954_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5954_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5954_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5954_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5954_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R0 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5954_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["identical"], [Arg5954_0, R1, Arg5954_3, (new Shen.Freeze([R1, R0, Arg5954_2, Arg5954_0, Arg5954_1, Arg5954_3, Arg5954_4], function(Arg5956) {
  var Arg5956_0 = Arg5956[0], Arg5956_1 = Arg5956[1], Arg5956_2 = Arg5956[2], Arg5956_3 = Arg5956[3], Arg5956_4 = Arg5956[4], Arg5956_5 = Arg5956[5], Arg5956_6 = Arg5956[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg5956_4, Arg5956_1, Arg5956_5, Arg5956_6]);});})}))])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5954_2, Arg5954_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.by_hypothesis"], [Arg5954_0, Arg5954_1, R0, Arg5954_3, Arg5954_4]);}))
  : false))
  : R0))}, 5, [], "shen.by_hypothesis"];





Shen.fns["shen.t*-def"] = [Shen.type_func, function shen_user_lambda5959(Arg5958) {
  if (Arg5958.length < 5) return [Shen.type_func, shen_user_lambda5959, 5, Arg5958];
  var Arg5958_0 = Arg5958[0], Arg5958_1 = Arg5958[1], Arg5958_2 = Arg5958[2], Arg5958_3 = Arg5958[3], Arg5958_4 = Arg5958[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5958_0, Arg5958_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5958_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5958_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.newpv"], [Arg5958_3]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defh"], [Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<sig+rules>"], R1, [Shen.type_func, function shen_user_lambda5961(Arg5960) {
  if (Arg5960.length < 1) return [Shen.type_func, shen_user_lambda5961, 1, Arg5960];
  var Arg5960_0 = Arg5960[0];
  return ((Shen.is_type(Arg5960_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg5960_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]]), R0, Arg5958_1, Arg5958_2, Arg5958_3, Arg5958_4]);}))
  : false))
  : false))
  : false))}, 5, [], "shen.t*-def"];





Shen.fns["shen.t*-defh"] = [Shen.type_func, function shen_user_lambda5963(Arg5962) {
  if (Arg5962.length < 6) return [Shen.type_func, shen_user_lambda5963, 6, Arg5962];
  var Arg5962_0 = Arg5962[0], Arg5962_1 = Arg5962[1], Arg5962_2 = Arg5962[2], Arg5962_3 = Arg5962[3], Arg5962_4 = Arg5962[4], Arg5962_5 = Arg5962[5];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5962_0, Arg5962_4])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defhh"], [R1, Shen.call(Shen.fns["shen.ue"], [R1]), Arg5962_1, Arg5962_2, Arg5962_3, R0, Arg5962_4, Arg5962_5]);}))
  : false))}, 6, [], "shen.t*-defh"];





Shen.fns["shen.t*-defhh"] = [Shen.type_func, function shen_user_lambda5965(Arg5964) {
  if (Arg5964.length < 8) return [Shen.type_func, shen_user_lambda5965, 8, Arg5964];
  var Arg5964_0 = Arg5964[0], Arg5964_1 = Arg5964[1], Arg5964_2 = Arg5964[2], Arg5964_3 = Arg5964[3], Arg5964_4 = Arg5964[4], Arg5964_5 = Arg5964[5], Arg5964_6 = Arg5964[6], Arg5964_7 = Arg5964[7];
  return (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5964_5, Arg5964_1, 1, Arg5964_2, [Shen.type_cons, [Shen.type_cons, Arg5964_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5964_1, []]]], Arg5964_4], Arg5964_6, (new Shen.Freeze([Arg5964_5, Arg5964_1, Arg5964_4, Arg5964_2, Arg5964_0, Arg5964_3, Arg5964_6, Arg5964_7], function(Arg5966) {
  var Arg5966_0 = Arg5966[0], Arg5966_1 = Arg5966[1], Arg5966_2 = Arg5966[2], Arg5966_3 = Arg5966[3], Arg5966_4 = Arg5966[4], Arg5966_5 = Arg5966[5], Arg5966_6 = Arg5966[6], Arg5966_7 = Arg5966[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.memo"], [Arg5966_3, Arg5966_4, Arg5966_5, Arg5966_6, Arg5966_7]);});})}))]);}))}, 8, [], "shen.t*-defhh"];





Shen.fns["shen.memo"] = [Shen.type_func, function shen_user_lambda5969(Arg5968) {
  if (Arg5968.length < 5) return [Shen.type_func, shen_user_lambda5969, 5, Arg5968];
  var Arg5968_0 = Arg5968[0], Arg5968_1 = Arg5968[1], Arg5968_2 = Arg5968[2], Arg5968_3 = Arg5968[3], Arg5968_4 = Arg5968[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg5968_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg5968_2, Arg5968_1, Arg5968_3, (new Shen.Freeze([Arg5968_1, R0, Arg5968_0, Arg5968_2, Arg5968_3, Arg5968_4], function(Arg5970) {
  var Arg5970_0 = Arg5970[0], Arg5970_1 = Arg5970[1], Arg5970_2 = Arg5970[2], Arg5970_3 = Arg5970[3], Arg5970_4 = Arg5970[4], Arg5970_5 = Arg5970[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5970_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5970_2, Arg5970_4]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5970_3, Arg5970_4])]), Arg5970_4, Arg5970_5]);});})}))]);}))}, 5, [], "shen.memo"];





Shen.fns["shen.<sig+rules>"] = [Shen.type_func, function shen_user_lambda5973(Arg5972) {
  if (Arg5972.length < 1) return [Shen.type_func, shen_user_lambda5973, 1, Arg5972];
  var Arg5972_0 = Arg5972[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg5972_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rules>"];





Shen.fns["shen.ue"] = [Shen.type_func, function shen_user_lambda5975(Arg5974) {
  if (Arg5974.length < 1) return [Shen.type_func, shen_user_lambda5975, 1, Arg5974];
  var Arg5974_0 = Arg5974[0];
  return ((Shen.is_type(Arg5974_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.ue"], Arg5974_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg5974_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Arg5974_0]);})
  : Arg5974_0))}, 1, [], "shen.ue"];





Shen.fns["shen.ues"] = [Shen.type_func, function shen_user_lambda5977(Arg5976) {
  if (Arg5976.length < 1) return [Shen.type_func, shen_user_lambda5977, 1, Arg5976];
  var Arg5976_0 = Arg5976[0];
  return ((Shen.call(Shen.fns["shen.ue?"], [Arg5976_0]))
  ? [Shen.type_cons, Arg5976_0, []]
  : ((Shen.is_type(Arg5976_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.ues"], [Arg5976_0[1]]), Shen.call(Shen.fns["shen.ues"], [Arg5976_0[2]])]);})
  : []))}, 1, [], "shen.ues"];





Shen.fns["shen.ue?"] = [Shen.type_func, function shen_user_lambda5979(Arg5978) {
  if (Arg5978.length < 1) return [Shen.type_func, shen_user_lambda5979, 1, Arg5978];
  var Arg5978_0 = Arg5978[0];
  return (Shen.is_type(Arg5978_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.ue-h?"], [Shen.str(Arg5978_0)]))}, 1, [], "shen.ue?"];





Shen.fns["shen.ue-h?"] = [Shen.type_func, function shen_user_lambda5981(Arg5980) {
  if (Arg5980.length < 1) return [Shen.type_func, shen_user_lambda5981, 1, Arg5980];
  var Arg5980_0 = Arg5980[0];
  return (((Shen.call(Shen.fns["shen.+string?"], [Arg5980_0]) && (Shen.unwind_tail(Shen.$eq$("&", Arg5980_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg5980_0)]) && Shen.unwind_tail(Shen.$eq$("&", Shen.tlstr(Arg5980_0)[0]))))))
  ? true
  : false)}, 1, [], "shen.ue-h?"];





Shen.fns["shen.t*-rules"] = [Shen.type_func, function shen_user_lambda5983(Arg5982) {
  if (Arg5982.length < 7) return [Shen.type_func, shen_user_lambda5983, 7, Arg5982];
  var Arg5982_0 = Arg5982[0], Arg5982_1 = Arg5982[1], Arg5982_2 = Arg5982[2], Arg5982_3 = Arg5982[3], Arg5982_4 = Arg5982[4], Arg5982_5 = Arg5982[5], Arg5982_6 = Arg5982[6];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5982_0, Arg5982_5])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5982_6))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5982_0, Arg5982_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5982_5])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5982_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5982_5])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5982_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R1[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5982_1, Arg5982_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5982_5])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5982_5])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5982_5])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [[Shen.type_cons, [], [Shen.type_cons, Shen.call(Shen.fns["shen.ue"], [R2]), []]], R1, Arg5982_4, Arg5982_5, (new Shen.Freeze([R2, R3, R1, Arg5982_0, R0, Arg5982_1, Arg5982_4, Arg5982_2, Arg5982_3, Arg5982_5, Arg5982_6], function(Arg5984) {
  var Arg5984_0 = Arg5984[0], Arg5984_1 = Arg5984[1], Arg5984_2 = Arg5984[2], Arg5984_3 = Arg5984[3], Arg5984_4 = Arg5984[4], Arg5984_5 = Arg5984[5], Arg5984_6 = Arg5984[6], Arg5984_7 = Arg5984[7], Arg5984_8 = Arg5984[8], Arg5984_9 = Arg5984[9], Arg5984_10 = Arg5984[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5984_4, Arg5984_9, (new Shen.Freeze([Arg5984_4, Arg5984_1, Arg5984_2, Arg5984_7, Arg5984_8, Arg5984_6, Arg5984_9, Arg5984_10], function(Arg5986) {
  var Arg5986_0 = Arg5986[0], Arg5986_1 = Arg5986[1], Arg5986_2 = Arg5986[2], Arg5986_3 = Arg5986[3], Arg5986_4 = Arg5986[4], Arg5986_5 = Arg5986[5], Arg5986_6 = Arg5986[6], Arg5986_7 = Arg5986[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5986_1, Arg5986_2, (Arg5986_3 + 1), Arg5986_4, Arg5986_5, Arg5986_6, Arg5986_7]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5982_0, Arg5982_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [Shen.call(Shen.fns["shen.ue"], [R2]), Arg5982_1, Arg5982_4, Arg5982_5, (new Shen.Freeze([R2, R0, R1, Arg5982_1, Arg5982_2, Arg5982_3, Arg5982_4, Arg5982_5, Arg5982_6, Arg5982_2, Arg5982_3, Arg5982_5, Arg5982_6], function(Arg5988) {
  var Arg5988_0 = Arg5988[0], Arg5988_1 = Arg5988[1], Arg5988_2 = Arg5988[2], Arg5988_3 = Arg5988[3], Arg5988_4 = Arg5988[4], Arg5988_5 = Arg5988[5], Arg5988_6 = Arg5988[6], Arg5988_7 = Arg5988[7], Arg5988_8 = Arg5988[8], Arg5988_9 = Arg5988[9], Arg5988_10 = Arg5988[10], Arg5988_11 = Arg5988[11], Arg5988_12 = Arg5988[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5988_1, Arg5988_7, (new Shen.Freeze([Arg5988_1, Arg5988_2, Arg5988_3, Arg5988_4, Arg5988_5, Arg5988_6, Arg5988_7, Arg5988_8], function(Arg5990) {
  var Arg5990_0 = Arg5990[0], Arg5990_1 = Arg5990[1], Arg5990_2 = Arg5990[2], Arg5990_3 = Arg5990[3], Arg5990_4 = Arg5990[4], Arg5990_5 = Arg5990[5], Arg5990_6 = Arg5990[6], Arg5990_7 = Arg5990[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5990_1, Arg5990_2, (Arg5990_3 + 1), Arg5990_4, Arg5990_5, Arg5990_6, Arg5990_7]);});})}))]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5982_5])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5982_2, Arg5982_5]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5982_3, Arg5982_5]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg5982_5, Arg5982_6]))
  : R1))
  : R1))
  : R1))]);}))}, 7, [], "shen.t*-rules"];





Shen.fns["shen.t*-rule"] = [Shen.type_func, function shen_user_lambda5993(Arg5992) {
  if (Arg5992.length < 5) return [Shen.type_func, shen_user_lambda5993, 5, Arg5992];
  var Arg5992_0 = Arg5992[0], Arg5992_1 = Arg5992[1], Arg5992_2 = Arg5992[2], Arg5992_3 = Arg5992[3], Arg5992_4 = Arg5992[4];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5992_0, Arg5992_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5992_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5992_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5992_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5992_3, (new Shen.Freeze([R1, Arg5992_0, Arg5992_1, R0, Arg5992_2, Arg5992_3, Arg5992_4], function(Arg5994) {
  var Arg5994_0 = Arg5994[0], Arg5994_1 = Arg5994[1], Arg5994_2 = Arg5994[2], Arg5994_3 = Arg5994[3], Arg5994_4 = Arg5994[4], Arg5994_5 = Arg5994[5], Arg5994_6 = Arg5994[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Shen.call(Shen.fns["shen.curry"], [Arg5994_0]), Arg5994_2, Arg5994_4, Arg5994_5, Arg5994_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5992_0, Arg5992_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5992_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5992_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5992_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5992_1, Arg5992_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5992_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5992_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5992_3])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg5992_3])),
  ((Shen.empty$question$(R6))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*-pattern"], [R3, R5, Arg5992_3, (new Shen.Freeze([R0, R2, R4, R1, R3, R5, Arg5992_2, Arg5992_3, Arg5992_4], function(Arg5996) {
  var Arg5996_0 = Arg5996[0], Arg5996_1 = Arg5996[1], Arg5996_2 = Arg5996[2], Arg5996_3 = Arg5996[3], Arg5996_4 = Arg5996[4], Arg5996_5 = Arg5996[5], Arg5996_6 = Arg5996[6], Arg5996_7 = Arg5996[7], Arg5996_8 = Arg5996[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5996_0, Arg5996_7, (new Shen.Freeze([Arg5996_0, Arg5996_1, Arg5996_2, Arg5996_3, Arg5996_4, Arg5996_5, Arg5996_6, Arg5996_7, Arg5996_8], function(Arg5998) {
  var Arg5998_0 = Arg5998[0], Arg5998_1 = Arg5998[1], Arg5998_2 = Arg5998[2], Arg5998_3 = Arg5998[3], Arg5998_4 = Arg5998[4], Arg5998_5 = Arg5998[5], Arg5998_6 = Arg5998[6], Arg5998_7 = Arg5998[7], Arg5998_8 = Arg5998[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rule"], [[Shen.type_cons, Arg5998_1, [Shen.type_cons, Arg5998_2, []]], Arg5998_3, [Shen.type_cons, [Shen.type_cons, Arg5998_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5998_5, []]]], Arg5998_6], Arg5998_7, Arg5998_8]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 5, [], "shen.t*-rule"];





Shen.fns["shen.t*-action"] = [Shen.type_func, function shen_user_lambda6001(Arg6000) {
  if (Arg6000.length < 5) return [Shen.type_func, shen_user_lambda6001, 5, Arg6000];
  var Arg6000_0 = Arg6000[0], Arg6000_1 = Arg6000[1], Arg6000_2 = Arg6000[2], Arg6000_3 = Arg6000[3], Arg6000_4 = Arg6000[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6000_0, Arg6000_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6000_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6000_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6000_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6000_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6000_3, (new Shen.Freeze([R3, R1, R0, Arg6000_0, Arg6000_1, Arg6000_2, Arg6000_3, Arg6000_4], function(Arg6002) {
  var Arg6002_0 = Arg6002[0], Arg6002_1 = Arg6002[1], Arg6002_2 = Arg6002[2], Arg6002_3 = Arg6002[3], Arg6002_4 = Arg6002[4], Arg6002_5 = Arg6002[5], Arg6002_6 = Arg6002[6], Arg6002_7 = Arg6002[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6002_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], Arg6002_5, Arg6002_6, (new Shen.Freeze([Arg6002_2, Arg6002_0, Arg6002_4, Arg6002_1, Arg6002_5, Arg6002_6, Arg6002_7], function(Arg6004) {
  var Arg6004_0 = Arg6004[0], Arg6004_1 = Arg6004[1], Arg6004_2 = Arg6004[2], Arg6004_3 = Arg6004[3], Arg6004_4 = Arg6004[4], Arg6004_5 = Arg6004[5], Arg6004_6 = Arg6004[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6004_0, Arg6004_5, (new Shen.Freeze([Arg6004_0, Arg6004_1, Arg6004_2, Arg6004_3, Arg6004_4, Arg6004_5, Arg6004_6], function(Arg6006) {
  var Arg6006_0 = Arg6006[0], Arg6006_1 = Arg6006[1], Arg6006_2 = Arg6006[2], Arg6006_3 = Arg6006[3], Arg6006_4 = Arg6006[4], Arg6006_5 = Arg6006[5], Arg6006_6 = Arg6006[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Arg6006_1, Arg6006_2, [Shen.type_cons, [Shen.type_cons, Arg6006_3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "verified"], []]]], Arg6006_4], Arg6006_5, Arg6006_6]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6000_0, Arg6000_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6000_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6000_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6000_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6000_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6000_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail-if"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6000_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6000_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6000_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6000_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6000_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6000_3, (new Shen.Freeze([R3, R1, R0, Arg6000_0, Arg6000_1, Arg6000_2, Arg6000_3, Arg6000_4], function(Arg6008) {
  var Arg6008_0 = Arg6008[0], Arg6008_1 = Arg6008[1], Arg6008_2 = Arg6008[2], Arg6008_3 = Arg6008[3], Arg6008_4 = Arg6008[4], Arg6008_5 = Arg6008[5], Arg6008_6 = Arg6008[6], Arg6008_7 = Arg6008[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, Arg6008_0, [Shen.type_cons, Arg6008_1, []]], []]], [Shen.type_cons, Arg6008_1, []]]], Arg6008_4, Arg6008_5, Arg6008_6, Arg6008_7]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6000_0, Arg6000_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6000_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6000_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6000_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6000_3, (new Shen.Freeze([R0, R1, Arg6000_0, Arg6000_1, Arg6000_2, Arg6000_3, Arg6000_4], function(Arg6010) {
  var Arg6010_0 = Arg6010[0], Arg6010_1 = Arg6010[1], Arg6010_2 = Arg6010[2], Arg6010_3 = Arg6010[3], Arg6010_4 = Arg6010[4], Arg6010_5 = Arg6010[5], Arg6010_6 = Arg6010[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6010_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]], []]], [Shen.type_cons, Arg6010_1, []]]], Arg6010_3, Arg6010_4, Arg6010_5, Arg6010_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6000_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6000_1, []]]], Arg6000_2, Arg6000_3, Arg6000_4]))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.t*-action"];





Shen.fns["shen.t*-pattern"] = [Shen.type_func, function shen_user_lambda6013(Arg6012) {
  if (Arg6012.length < 4) return [Shen.type_func, shen_user_lambda6013, 4, Arg6012];
  var Arg6012_0 = Arg6012[0], Arg6012_1 = Arg6012[1], Arg6012_2 = Arg6012[2], Arg6012_3 = Arg6012[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6012_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tms->hyp"], [Shen.call(Shen.fns["shen.ues"], [Arg6012_0]), R1, Arg6012_2, (new Shen.Freeze([R0, Arg6012_0, Arg6012_1, R1, Arg6012_2, Arg6012_3], function(Arg6014) {
  var Arg6014_0 = Arg6014[0], Arg6014_1 = Arg6014[1], Arg6014_2 = Arg6014[2], Arg6014_3 = Arg6014[3], Arg6014_4 = Arg6014[4], Arg6014_5 = Arg6014[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6014_0, Arg6014_4, (new Shen.Freeze([Arg6014_0, Arg6014_1, Arg6014_2, Arg6014_3, Arg6014_4, Arg6014_5], function(Arg6016) {
  var Arg6016_0 = Arg6016[0], Arg6016_1 = Arg6016[1], Arg6016_2 = Arg6016[2], Arg6016_3 = Arg6016[3], Arg6016_4 = Arg6016[4], Arg6016_5 = Arg6016[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6016_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6016_2, []]]], Arg6016_3, Arg6016_4, Arg6016_5]);});})}))]);});})}))]))]);}))}, 4, [], "shen.t*-pattern"];





Shen.fns["shen.tms->hyp"] = [Shen.type_func, function shen_user_lambda6019(Arg6018) {
  if (Arg6018.length < 4) return [Shen.type_func, shen_user_lambda6019, 4, Arg6018];
  var Arg6018_0 = Arg6018[0], Arg6018_1 = Arg6018[1], Arg6018_2 = Arg6018[2], Arg6018_3 = Arg6018[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6018_0, Arg6018_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6018_1, Arg6018_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6018_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg6018_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6018_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6018_2]),
  (R0 = R1))
  : (R0 = false))))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6018_0, Arg6018_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6018_1, Arg6018_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6018_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6018_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6018_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6018_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? (R5[1],
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6018_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [R4, R1, Arg6018_2, (new Shen.Freeze([R4, R1, R0, R5, Arg6018_2, Arg6018_3], function(Arg6020) {
  var Arg6020_0 = Arg6020[0], Arg6020_1 = Arg6020[1], Arg6020_2 = Arg6020[2], Arg6020_3 = Arg6020[3], Arg6020_4 = Arg6020[4], Arg6020_5 = Arg6020[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6020_2, Arg6020_3, Arg6020_4, Arg6020_5]);});})}))]);}))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6018_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6018_2, (new Shen.Freeze([R4, R1, R0, R3, Arg6018_2, Arg6018_3, R5, Arg6018_2], function(Arg6022) {
  var Arg6022_0 = Arg6022[0], Arg6022_1 = Arg6022[1], Arg6022_2 = Arg6022[2], Arg6022_3 = Arg6022[3], Arg6022_4 = Arg6022[4], Arg6022_5 = Arg6022[5], Arg6022_6 = Arg6022[6], Arg6022_7 = Arg6022[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6022_2, Arg6022_3, Arg6022_4, Arg6022_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6018_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R3, []], Arg6018_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6018_2, (new Shen.Freeze([R4, R1, R0, R3, Arg6018_2, Arg6018_3, R5, Arg6018_2], function(Arg6024) {
  var Arg6024_0 = Arg6024[0], Arg6024_1 = Arg6024[1], Arg6024_2 = Arg6024[2], Arg6024_3 = Arg6024[3], Arg6024_4 = Arg6024[4], Arg6024_5 = Arg6024[5], Arg6024_6 = Arg6024[6], Arg6024_7 = Arg6024[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6024_2, Arg6024_3, Arg6024_4, Arg6024_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6018_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, ":"], Arg6018_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6018_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? (R3[1],
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6018_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6018_2, (new Shen.Freeze([R4, R1, R0, R3, Arg6018_2, Arg6018_3, R5, Arg6018_2], function(Arg6026) {
  var Arg6026_0 = Arg6026[0], Arg6026_1 = Arg6026[1], Arg6026_2 = Arg6026[2], Arg6026_3 = Arg6026[3], Arg6026_4 = Arg6026[4], Arg6026_5 = Arg6026[5], Arg6026_6 = Arg6026[6], Arg6026_7 = Arg6026[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6026_2, Arg6026_3, Arg6026_4, Arg6026_5]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6018_2]),
  ((R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6018_2, (new Shen.Freeze([R4, R1, R0, R2, Arg6018_2, Arg6018_3, R3, Arg6018_2, R5, Arg6018_2], function(Arg6028) {
  var Arg6028_0 = Arg6028[0], Arg6028_1 = Arg6028[1], Arg6028_2 = Arg6028[2], Arg6028_3 = Arg6028[3], Arg6028_4 = Arg6028[4], Arg6028_5 = Arg6028[5], Arg6028_6 = Arg6028[6], Arg6028_7 = Arg6028[7], Arg6028_8 = Arg6028[8], Arg6028_9 = Arg6028[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6028_2, Arg6028_3, Arg6028_4, Arg6028_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6018_2]),
  (R4 = R4))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R6, []], Arg6018_2]),
  ((R6 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6018_2, (new Shen.Freeze([R4, R1, R0, R6, Arg6018_2, Arg6018_3, R3, Arg6018_2, R5, Arg6018_2], function(Arg6030) {
  var Arg6030_0 = Arg6030[0], Arg6030_1 = Arg6030[1], Arg6030_2 = Arg6030[2], Arg6030_3 = Arg6030[3], Arg6030_4 = Arg6030[4], Arg6030_5 = Arg6030[5], Arg6030_6 = Arg6030[6], Arg6030_7 = Arg6030[7], Arg6030_8 = Arg6030[8], Arg6030_9 = Arg6030[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6030_2, Arg6030_3, Arg6030_4, Arg6030_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6018_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6018_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]], Arg6018_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6018_2, (new Shen.Freeze([R4, R1, R0, R5, Arg6018_2, Arg6018_3, R3, Arg6018_2], function(Arg6032) {
  var Arg6032_0 = Arg6032[0], Arg6032_1 = Arg6032[1], Arg6032_2 = Arg6032[2], Arg6032_3 = Arg6032[3], Arg6032_4 = Arg6032[4], Arg6032_5 = Arg6032[5], Arg6032_6 = Arg6032[6], Arg6032_7 = Arg6032[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6032_2, Arg6032_3, Arg6032_4, Arg6032_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6018_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], Arg6018_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6018_2, (new Shen.Freeze([R4, R1, R0, R5, Arg6018_2, Arg6018_3, R3, Arg6018_2], function(Arg6034) {
  var Arg6034_0 = Arg6034[0], Arg6034_1 = Arg6034[1], Arg6034_2 = Arg6034[2], Arg6034_3 = Arg6034[3], Arg6034_4 = Arg6034[4], Arg6034_5 = Arg6034[5], Arg6034_6 = Arg6034[6], Arg6034_7 = Arg6034[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6034_2, Arg6034_3, Arg6034_4, Arg6034_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6018_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_2])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_2])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_cons, R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R4, []]]], R5], Arg6018_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg6018_2, (new Shen.Freeze([R4, R3, R1, R0, R5, Arg6018_3, R2, Arg6018_2], function(Arg6036) {
  var Arg6036_0 = Arg6036[0], Arg6036_1 = Arg6036[1], Arg6036_2 = Arg6036[2], Arg6036_3 = Arg6036[3], Arg6036_4 = Arg6036[4], Arg6036_5 = Arg6036[5], Arg6036_6 = Arg6036[6], Arg6036_7 = Arg6036[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6036_3, Arg6036_4, Arg6036_7, Arg6036_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6018_2]),
  R5)
  : false)))
  : false))
  : R0))}, 4, [], "shen.tms->hyp"];





Shen.fns["findall"] = [Shen.type_func, function shen_user_lambda6039(Arg6038) {
  if (Arg6038.length < 5) return [Shen.type_func, shen_user_lambda6039, 5, Arg6038];
  var Arg6038_0 = Arg6038[0], Arg6038_1 = Arg6038[1], Arg6038_2 = Arg6038[2], Arg6038_3 = Arg6038[3], Arg6038_4 = Arg6038[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6038_3])),
  (R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6038_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R1, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.a"]]), Arg6038_3, (new Shen.Freeze([R0, Arg6038_0, Arg6038_1, Arg6038_2, R1, Arg6038_3, Arg6038_4], function(Arg6040) {
  var Arg6040_0 = Arg6040[0], Arg6040_1 = Arg6040[1], Arg6040_2 = Arg6040[2], Arg6040_3 = Arg6040[3], Arg6040_4 = Arg6040[4], Arg6040_5 = Arg6040[5], Arg6040_6 = Arg6040[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6040_0, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6040_4, Arg6040_5])[1]] = []), Arg6040_5, (new Shen.Freeze([Arg6040_0, Arg6040_1, Arg6040_2, Arg6040_3, Arg6040_4, Arg6040_5, Arg6040_6], function(Arg6042) {
  var Arg6042_0 = Arg6042[0], Arg6042_1 = Arg6042[1], Arg6042_2 = Arg6042[2], Arg6042_3 = Arg6042[3], Arg6042_4 = Arg6042[4], Arg6042_5 = Arg6042[5], Arg6042_6 = Arg6042[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.findallhelp"], [Arg6042_1, Arg6042_2, Arg6042_3, Arg6042_4, Arg6042_5, Arg6042_6]);});})}))]);});})}))]);}))}, 5, [], "findall"];





Shen.fns["shen.findallhelp"] = [Shen.type_func, function shen_user_lambda6045(Arg6044) {
  if (Arg6044.length < 6) return [Shen.type_func, shen_user_lambda6045, 6, Arg6044];
  var Arg6044_0 = Arg6044[0], Arg6044_1 = Arg6044[1], Arg6044_2 = Arg6044[2], Arg6044_3 = Arg6044[3], Arg6044_4 = Arg6044[4], Arg6044_5 = Arg6044[5];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [Arg6044_1, Arg6044_4, (new Shen.Freeze([Arg6044_1, Arg6044_0, Arg6044_2, Arg6044_3, Arg6044_4, Arg6044_5], function(Arg6046) {
  var Arg6046_0 = Arg6046[0], Arg6046_1 = Arg6046[1], Arg6046_2 = Arg6046[2], Arg6046_3 = Arg6046[3], Arg6046_4 = Arg6046[4], Arg6046_5 = Arg6046[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember"], [Arg6046_3, Arg6046_1, Arg6046_4, (new Shen.Freeze([Arg6046_3, Arg6046_1, Arg6046_4, Arg6046_5], function(Arg6048) {
  var Arg6048_0 = Arg6048[0], Arg6048_1 = Arg6048[1], Arg6048_2 = Arg6048[2], Arg6048_3 = Arg6048[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg6048_2, Arg6048_3]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6044_2, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6044_3, Arg6044_4])[1]]), Arg6044_4, Arg6044_5]);}))
  : R0))}, 6, [], "shen.findallhelp"];





Shen.fns["shen.remember"] = [Shen.type_func, function shen_user_lambda6051(Arg6050) {
  if (Arg6050.length < 4) return [Shen.type_func, shen_user_lambda6051, 4, Arg6050];
  var Arg6050_0 = Arg6050[0], Arg6050_1 = Arg6050[1], Arg6050_2 = Arg6050[2], Arg6050_3 = Arg6050[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6050_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6050_0, Arg6050_2])[1]] = [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6050_1, Arg6050_2]), (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6050_0, Arg6050_2])[1]])]), Arg6050_2, Arg6050_3]);}))}, 4, [], "shen.remember"];





Shen.fns["shen.t*-defcc"] = [Shen.type_func, function shen_user_lambda6053(Arg6052) {
  if (Arg6052.length < 5) return [Shen.type_func, shen_user_lambda6053, 5, Arg6052];
  var Arg6052_0 = Arg6052[0], Arg6052_1 = Arg6052[1], Arg6052_2 = Arg6052[2], Arg6052_3 = Arg6052[3], Arg6052_4 = Arg6052[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6052_0, Arg6052_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6052_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6052_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6052_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6052_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6052_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6052_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6052_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6052_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6052_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6052_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6052_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], R3)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6052_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6052_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6052_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R5)))
  ? ((R5 = R4[2]),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6052_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6052_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6052_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg6052_3])),
  (R9 = Shen.call(Shen.fns["shen.newpv"], [Arg6052_3])),
  (R10 = Shen.call(Shen.fns["shen.newpv"], [Arg6052_3])),
  (R11 = Shen.call(Shen.fns["shen.newpv"], [Arg6052_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R10, Shen.call(Shen.fns["shen.ue"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6052_3]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6052_3]), []]]]]), Arg6052_3, (new Shen.Freeze([R5, R4, R6, R0, R7, R8, R9, R10, Arg6052_2, Arg6052_1, R11, R1, R2, R3, Arg6052_3, Arg6052_4], function(Arg6054) {
  var Arg6054_0 = Arg6054[0], Arg6054_1 = Arg6054[1], Arg6054_2 = Arg6054[2], Arg6054_3 = Arg6054[3], Arg6054_4 = Arg6054[4], Arg6054_5 = Arg6054[5], Arg6054_6 = Arg6054[6], Arg6054_7 = Arg6054[7], Arg6054_8 = Arg6054[8], Arg6054_9 = Arg6054[9], Arg6054_10 = Arg6054[10], Arg6054_11 = Arg6054[11], Arg6054_12 = Arg6054[12], Arg6054_13 = Arg6054[13], Arg6054_14 = Arg6054[14], Arg6054_15 = Arg6054[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6054_5, Shen.call(Shen.fns["shen.lazyderef"], [Arg6054_7, Arg6054_14])[1], Arg6054_14, (new Shen.Freeze([Arg6054_0, Arg6054_1, Arg6054_2, Arg6054_3, Arg6054_4, Arg6054_5, Arg6054_6, Arg6054_7, Arg6054_8, Arg6054_9, Arg6054_10, Arg6054_11, Arg6054_12, Arg6054_13, Arg6054_14, Arg6054_15], function(Arg6056) {
  var Arg6056_0 = Arg6056[0], Arg6056_1 = Arg6056[1], Arg6056_2 = Arg6056[2], Arg6056_3 = Arg6056[3], Arg6056_4 = Arg6056[4], Arg6056_5 = Arg6056[5], Arg6056_6 = Arg6056[6], Arg6056_7 = Arg6056[7], Arg6056_8 = Arg6056[8], Arg6056_9 = Arg6056[9], Arg6056_10 = Arg6056[10], Arg6056_11 = Arg6056[11], Arg6056_12 = Arg6056[12], Arg6056_13 = Arg6056[13], Arg6056_14 = Arg6056[14], Arg6056_15 = Arg6056[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6056_6, Shen.call(Shen.fns["shen.lazyderef"], [Arg6056_7, Arg6056_14])[2][2][1], Arg6056_14, (new Shen.Freeze([Arg6056_0, Arg6056_1, Arg6056_2, Arg6056_3, Arg6056_4, Arg6056_5, Arg6056_6, Arg6056_7, Arg6056_8, Arg6056_9, Arg6056_10, Arg6056_11, Arg6056_12, Arg6056_13, Arg6056_14, Arg6056_15], function(Arg6058) {
  var Arg6058_0 = Arg6058[0], Arg6058_1 = Arg6058[1], Arg6058_2 = Arg6058[2], Arg6058_3 = Arg6058[3], Arg6058_4 = Arg6058[4], Arg6058_5 = Arg6058[5], Arg6058_6 = Arg6058[6], Arg6058_7 = Arg6058[7], Arg6058_8 = Arg6058[8], Arg6058_9 = Arg6058[9], Arg6058_10 = Arg6058[10], Arg6058_11 = Arg6058[11], Arg6058_12 = Arg6058[12], Arg6058_13 = Arg6058[13], Arg6058_14 = Arg6058[14], Arg6058_15 = Arg6058[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6058_1, Shen.call(Shen.fns["shen.plug-wildcards"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6058_0, Arg6058_14])]), Arg6058_14, (new Shen.Freeze([Arg6058_0, Arg6058_1, Arg6058_2, Arg6058_3, Arg6058_4, Arg6058_5, Arg6058_6, Arg6058_7, Arg6058_8, Arg6058_9, Arg6058_10, Arg6058_11, Arg6058_12, Arg6058_13, Arg6058_14, Arg6058_15], function(Arg6060) {
  var Arg6060_0 = Arg6060[0], Arg6060_1 = Arg6060[1], Arg6060_2 = Arg6060[2], Arg6060_3 = Arg6060[3], Arg6060_4 = Arg6060[4], Arg6060_5 = Arg6060[5], Arg6060_6 = Arg6060[6], Arg6060_7 = Arg6060[7], Arg6060_8 = Arg6060[8], Arg6060_9 = Arg6060[9], Arg6060_10 = Arg6060[10], Arg6060_11 = Arg6060[11], Arg6060_12 = Arg6060[12], Arg6060_13 = Arg6060[13], Arg6060_14 = Arg6060[14], Arg6060_15 = Arg6060[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6060_2, Shen.call(Shen.fns["shen.ue"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6060_1, Arg6060_14])]), Arg6060_14, (new Shen.Freeze([Arg6060_1, Arg6060_2, Arg6060_3, Arg6060_4, Arg6060_5, Arg6060_6, Arg6060_7, Arg6060_8, Arg6060_9, Arg6060_10, Arg6060_11, Arg6060_12, Arg6060_13, Arg6060_14, Arg6060_15], function(Arg6062) {
  var Arg6062_0 = Arg6062[0], Arg6062_1 = Arg6062[1], Arg6062_2 = Arg6062[2], Arg6062_3 = Arg6062[3], Arg6062_4 = Arg6062[4], Arg6062_5 = Arg6062[5], Arg6062_6 = Arg6062[6], Arg6062_7 = Arg6062[7], Arg6062_8 = Arg6062[8], Arg6062_9 = Arg6062[9], Arg6062_10 = Arg6062[10], Arg6062_11 = Arg6062[11], Arg6062_12 = Arg6062[12], Arg6062_13 = Arg6062[13], Arg6062_14 = Arg6062[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6062_3, Arg6062_1, Arg6062_13, (new Shen.Freeze([Arg6062_1, Arg6062_2, Arg6062_3, Arg6062_4, Arg6062_5, Arg6062_6, Arg6062_7, Arg6062_8, Arg6062_9, Arg6062_10, Arg6062_11, Arg6062_12, Arg6062_13, Arg6062_14], function(Arg6064) {
  var Arg6064_0 = Arg6064[0], Arg6064_1 = Arg6064[1], Arg6064_2 = Arg6064[2], Arg6064_3 = Arg6064[3], Arg6064_4 = Arg6064[4], Arg6064_5 = Arg6064[5], Arg6064_6 = Arg6064[6], Arg6064_7 = Arg6064[7], Arg6064_8 = Arg6064[8], Arg6064_9 = Arg6064[9], Arg6064_10 = Arg6064[10], Arg6064_11 = Arg6064[11], Arg6064_12 = Arg6064[12], Arg6064_13 = Arg6064[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6064_1, Arg6064_12, (new Shen.Freeze([Arg6064_1, Arg6064_2, Arg6064_3, Arg6064_4, Arg6064_5, Arg6064_6, Arg6064_7, Arg6064_8, Arg6064_9, Arg6064_10, Arg6064_11, Arg6064_12, Arg6064_13], function(Arg6066) {
  var Arg6066_0 = Arg6066[0], Arg6066_1 = Arg6066[1], Arg6066_2 = Arg6066[2], Arg6066_3 = Arg6066[3], Arg6066_4 = Arg6066[4], Arg6066_5 = Arg6066[5], Arg6066_6 = Arg6066[6], Arg6066_7 = Arg6066[7], Arg6066_8 = Arg6066[8], Arg6066_9 = Arg6066[9], Arg6066_10 = Arg6066[10], Arg6066_11 = Arg6066[11], Arg6066_12 = Arg6066[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6066_8, Arg6066_1, Arg6066_2, Arg6066_3, [Shen.type_cons, [Shen.type_cons, Arg6066_8, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6066_4, []]]], Arg6066_5], 1, Arg6066_11, (new Shen.Freeze([Arg6066_1, Arg6066_2, Arg6066_3, Arg6066_4, Arg6066_5, Arg6066_6, Arg6066_7, Arg6066_8, Arg6066_9, Arg6066_10, Arg6066_11, Arg6066_12], function(Arg6068) {
  var Arg6068_0 = Arg6068[0], Arg6068_1 = Arg6068[1], Arg6068_2 = Arg6068[2], Arg6068_3 = Arg6068[3], Arg6068_4 = Arg6068[4], Arg6068_5 = Arg6068[5], Arg6068_6 = Arg6068[6], Arg6068_7 = Arg6068[7], Arg6068_8 = Arg6068[8], Arg6068_9 = Arg6068[9], Arg6068_10 = Arg6068[10], Arg6068_11 = Arg6068[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg6068_5, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6068_8, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6068_9, []]]], Arg6068_10, (new Shen.Freeze([Arg6068_5, Arg6068_6, Arg6068_7, Arg6068_8, Arg6068_9, Arg6068_10, Arg6068_11], function(Arg6070) {
  var Arg6070_0 = Arg6070[0], Arg6070_1 = Arg6070[1], Arg6070_2 = Arg6070[2], Arg6070_3 = Arg6070[3], Arg6070_4 = Arg6070[4], Arg6070_5 = Arg6070[5], Arg6070_6 = Arg6070[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6070_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6070_2, Arg6070_5]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6070_3, Arg6070_5]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6070_4, Arg6070_5]), []]]]]), Arg6070_5, Arg6070_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))]);}))}, 5, [], "shen.t*-defcc"];





Shen.fns["shen.plug-wildcards"] = [Shen.type_func, function shen_user_lambda6073(Arg6072) {
  if (Arg6072.length < 1) return [Shen.type_func, shen_user_lambda6073, 1, Arg6072];
  var Arg6072_0 = Arg6072[0];
  return ((Shen.is_type(Arg6072_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.plug-wildcards"], Arg6072_0]);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg6072_0, [Shen.type_symbol, "_"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "X"]]);})
  : Arg6072_0))}, 1, [], "shen.plug-wildcards"];





Shen.fns["shen.get-rules"] = [Shen.type_func, function shen_user_lambda6075(Arg6074) {
  if (Arg6074.length < 4) return [Shen.type_func, shen_user_lambda6075, 4, Arg6074];
  var Arg6074_0 = Arg6074[0], Arg6074_1 = Arg6074[1], Arg6074_2 = Arg6074[2], Arg6074_3 = Arg6074[3];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6074_0, Arg6074_2])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6074_1, Arg6074_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6074_2, Arg6074_3])))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6074_2]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6074_1, Arg6074_2])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["cut"], [R0, Arg6074_2, Arg6074_3])))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6074_2]),
  (R1 = R2))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6074_0, Arg6074_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6074_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.first-rule"], [Arg6074_1, R2, R3, Arg6074_2, (new Shen.Freeze([Arg6074_1, R2, R0, R1, R3, Arg6074_2, Arg6074_3], function(Arg6076) {
  var Arg6076_0 = Arg6076[0], Arg6076_1 = Arg6076[1], Arg6076_2 = Arg6076[2], Arg6076_3 = Arg6076[3], Arg6076_4 = Arg6076[4], Arg6076_5 = Arg6076[5], Arg6076_6 = Arg6076[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6076_2, Arg6076_5, (new Shen.Freeze([Arg6076_2, Arg6076_3, Arg6076_4, Arg6076_5, Arg6076_6], function(Arg6078) {
  var Arg6078_0 = Arg6078[0], Arg6078_1 = Arg6078[1], Arg6078_2 = Arg6078[2], Arg6078_3 = Arg6078[3], Arg6078_4 = Arg6078[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6078_1, Arg6078_2, Arg6078_3, Arg6078_4]);});})}))]);});})}))]))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6074_2])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6074_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R2, R3], Arg6074_2]),
  ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6074_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.first-rule"], [Arg6074_1, R2, R4, Arg6074_2, (new Shen.Freeze([Arg6074_1, R2, R0, R3, R4, Arg6074_2, Arg6074_3, R1, Arg6074_2], function(Arg6080) {
  var Arg6080_0 = Arg6080[0], Arg6080_1 = Arg6080[1], Arg6080_2 = Arg6080[2], Arg6080_3 = Arg6080[3], Arg6080_4 = Arg6080[4], Arg6080_5 = Arg6080[5], Arg6080_6 = Arg6080[6], Arg6080_7 = Arg6080[7], Arg6080_8 = Arg6080[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6080_2, Arg6080_5, (new Shen.Freeze([Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5, Arg6080_6], function(Arg6082) {
  var Arg6082_0 = Arg6082[0], Arg6082_1 = Arg6082[1], Arg6082_2 = Arg6082[2], Arg6082_3 = Arg6082[3], Arg6082_4 = Arg6082[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6082_1, Arg6082_2, Arg6082_3, Arg6082_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6074_2]),
  R3)
  : false)))
  : R1))]);}))}, 4, [], "shen.get-rules"];





Shen.fns["shen.first-rule"] = [Shen.type_func, function shen_user_lambda6085(Arg6084) {
  if (Arg6084.length < 5) return [Shen.type_func, shen_user_lambda6085, 5, Arg6084];
  var Arg6084_0 = Arg6084[0], Arg6084_1 = Arg6084[1], Arg6084_2 = Arg6084[2], Arg6084_3 = Arg6084[3], Arg6084_4 = Arg6084[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6084_0, Arg6084_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6084_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], R2)))
  ? ((R2 = R1[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6084_1, Arg6084_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["unify!"], [Arg6084_2, R2, Arg6084_3, (new Shen.Freeze([R2, R0, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_4, Arg6084_3], function(Arg6086) {
  var Arg6086_0 = Arg6086[0], Arg6086_1 = Arg6086[1], Arg6086_2 = Arg6086[2], Arg6086_3 = Arg6086[3], Arg6086_4 = Arg6086[4], Arg6086_5 = Arg6086[5], Arg6086_6 = Arg6086[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6086_1, Arg6086_6, Arg6086_5]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6084_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["unify!"], [Arg6084_2, R2, Arg6084_3, (new Shen.Freeze([R2, R0, R1, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_4, Arg6084_3], function(Arg6088) {
  var Arg6088_0 = Arg6088[0], Arg6088_1 = Arg6088[1], Arg6088_2 = Arg6088[2], Arg6088_3 = Arg6088[3], Arg6088_4 = Arg6088[4], Arg6088_5 = Arg6088[5], Arg6088_6 = Arg6088[6], Arg6088_7 = Arg6088[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6088_1, Arg6088_7, Arg6088_6]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6084_3]),
  (R0 = R2))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6084_0, Arg6084_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6084_1, Arg6084_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["unify!"], [R3, R1, Arg6084_3, (new Shen.Freeze([R3, R1, R0, R2, Arg6084_2, Arg6084_3, Arg6084_4], function(Arg6090) {
  var Arg6090_0 = Arg6090[0], Arg6090_1 = Arg6090[1], Arg6090_2 = Arg6090[2], Arg6090_3 = Arg6090[3], Arg6090_4 = Arg6090[4], Arg6090_5 = Arg6090[5], Arg6090_6 = Arg6090[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.first-rule"], [Arg6090_2, Arg6090_3, Arg6090_4, Arg6090_5, Arg6090_6]);});})}))]))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R3, R4], Arg6084_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg6084_3, (new Shen.Freeze([R3, R1, R0, R4, Arg6084_2, Arg6084_4, R2, Arg6084_3], function(Arg6092) {
  var Arg6092_0 = Arg6092[0], Arg6092_1 = Arg6092[1], Arg6092_2 = Arg6092[2], Arg6092_3 = Arg6092[3], Arg6092_4 = Arg6092[4], Arg6092_5 = Arg6092[5], Arg6092_6 = Arg6092[6], Arg6092_7 = Arg6092[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.first-rule"], [Arg6092_2, Arg6092_3, Arg6092_4, Arg6092_7, Arg6092_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6084_3]),
  R4)
  : false)))
  : false))
  : R0))]);}))}, 5, [], "shen.first-rule"];





Shen.fns["shen.tc-rules"] = [Shen.type_func, function shen_user_lambda6095(Arg6094) {
  if (Arg6094.length < 8) return [Shen.type_func, shen_user_lambda6095, 8, Arg6094];
  var Arg6094_0 = Arg6094[0], Arg6094_1 = Arg6094[1], Arg6094_2 = Arg6094[2], Arg6094_3 = Arg6094[3], Arg6094_4 = Arg6094[4], Arg6094_5 = Arg6094[5], Arg6094_6 = Arg6094[6], Arg6094_7 = Arg6094[7];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6094_1, Arg6094_6])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6094_7))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6094_1, Arg6094_6])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6094_2, Arg6094_6])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6094_6])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6094_6])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6094_6])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6094_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tc-rule"], [Arg6094_0, R2, R3, Arg6094_3, Arg6094_4, Arg6094_5, Arg6094_6, (new Shen.Freeze([R2, Arg6094_5, R0, Arg6094_0, R1, R3, Arg6094_3, Arg6094_4, R4, Arg6094_6, Arg6094_7], function(Arg6096) {
  var Arg6096_0 = Arg6096[0], Arg6096_1 = Arg6096[1], Arg6096_2 = Arg6096[2], Arg6096_3 = Arg6096[3], Arg6096_4 = Arg6096[4], Arg6096_5 = Arg6096[5], Arg6096_6 = Arg6096[6], Arg6096_7 = Arg6096[7], Arg6096_8 = Arg6096[8], Arg6096_9 = Arg6096[9], Arg6096_10 = Arg6096[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6096_8, (Shen.call(Shen.fns["shen.deref"], [Arg6096_1, Arg6096_9]) + 1), Arg6096_9, (new Shen.Freeze([Arg6096_1, Arg6096_2, Arg6096_3, Arg6096_4, Arg6096_5, Arg6096_6, Arg6096_7, Arg6096_8, Arg6096_9, Arg6096_10], function(Arg6098) {
  var Arg6098_0 = Arg6098[0], Arg6098_1 = Arg6098[1], Arg6098_2 = Arg6098[2], Arg6098_3 = Arg6098[3], Arg6098_4 = Arg6098[4], Arg6098_5 = Arg6098[5], Arg6098_6 = Arg6098[6], Arg6098_7 = Arg6098[7], Arg6098_8 = Arg6098[8], Arg6098_9 = Arg6098[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6098_1, Arg6098_8, (new Shen.Freeze([Arg6098_1, Arg6098_2, Arg6098_3, Arg6098_4, Arg6098_5, Arg6098_6, Arg6098_7, Arg6098_8, Arg6098_9], function(Arg6100) {
  var Arg6100_0 = Arg6100[0], Arg6100_1 = Arg6100[1], Arg6100_2 = Arg6100[2], Arg6100_3 = Arg6100[3], Arg6100_4 = Arg6100[4], Arg6100_5 = Arg6100[5], Arg6100_6 = Arg6100[6], Arg6100_7 = Arg6100[7], Arg6100_8 = Arg6100[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6100_1, Arg6100_2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6100_3, []]], Arg6100_4, Arg6100_5, Arg6100_6, Arg6100_7, Arg6100_8]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 8, [], "shen.tc-rules"];





Shen.fns["shen.tc-rule"] = [Shen.type_func, function shen_user_lambda6103(Arg6102) {
  if (Arg6102.length < 8) return [Shen.type_func, shen_user_lambda6103, 8, Arg6102];
  var Arg6102_0 = Arg6102[0], Arg6102_1 = Arg6102[1], Arg6102_2 = Arg6102[2], Arg6102_3 = Arg6102[3], Arg6102_4 = Arg6102[4], Arg6102_5 = Arg6102[5], Arg6102_6 = Arg6102[6], Arg6102_7 = Arg6102[7];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["shen.check-defcc-rule"], [Arg6102_1, Arg6102_2, Arg6102_3, Arg6102_4, Arg6102_6, Arg6102_7]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6102_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6102_5, Arg6102_6]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6102_0, Arg6102_6]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg6102_6, Arg6102_7]);}))
  : R0))}, 8, [], "shen.tc-rule"];





Shen.fns["shen.check-defcc-rule"] = [Shen.type_func, function shen_user_lambda6105(Arg6104) {
  if (Arg6104.length < 6) return [Shen.type_func, shen_user_lambda6105, 6, Arg6104];
  var Arg6104_0 = Arg6104[0], Arg6104_1 = Arg6104[1], Arg6104_2 = Arg6104[2], Arg6104_3 = Arg6104[3], Arg6104_4 = Arg6104[4], Arg6104_5 = Arg6104[5];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6104_4])),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6104_4])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6104_4])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.get-syntax+semantics"], [R1, R2, Arg6104_0, Arg6104_4, (new Shen.Freeze([Arg6104_0, Arg6104_3, R1, Arg6104_1, R0, R2, Arg6104_2, R3, Arg6104_4, Arg6104_5], function(Arg6106) {
  var Arg6106_0 = Arg6106[0], Arg6106_1 = Arg6106[1], Arg6106_2 = Arg6106[2], Arg6106_3 = Arg6106[3], Arg6106_4 = Arg6106[4], Arg6106_5 = Arg6106[5], Arg6106_6 = Arg6106[6], Arg6106_7 = Arg6106[7], Arg6106_8 = Arg6106[8], Arg6106_9 = Arg6106[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6106_4, Arg6106_8, (new Shen.Freeze([Arg6106_1, Arg6106_2, Arg6106_3, Arg6106_4, Arg6106_5, Arg6106_6, Arg6106_7, Arg6106_8, Arg6106_9], function(Arg6108) {
  var Arg6108_0 = Arg6108[0], Arg6108_1 = Arg6108[1], Arg6108_2 = Arg6108[2], Arg6108_3 = Arg6108[3], Arg6108_4 = Arg6108[4], Arg6108_5 = Arg6108[5], Arg6108_6 = Arg6108[6], Arg6108_7 = Arg6108[7], Arg6108_8 = Arg6108[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6108_1, Arg6108_0, Arg6108_6, Arg6108_2, Arg6108_7, (new Shen.Freeze([Arg6108_0, Arg6108_1, Arg6108_2, Arg6108_3, Arg6108_4, Arg6108_5, Arg6108_6, Arg6108_7, Arg6108_8], function(Arg6110) {
  var Arg6110_0 = Arg6110[0], Arg6110_1 = Arg6110[1], Arg6110_2 = Arg6110[2], Arg6110_3 = Arg6110[3], Arg6110_4 = Arg6110[4], Arg6110_5 = Arg6110[5], Arg6110_6 = Arg6110[6], Arg6110_7 = Arg6110[7], Arg6110_8 = Arg6110[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6110_3, Arg6110_7, (new Shen.Freeze([Arg6110_1, Arg6110_2, Arg6110_3, Arg6110_4, Arg6110_5, Arg6110_6, Arg6110_7, Arg6110_8], function(Arg6112) {
  var Arg6112_0 = Arg6112[0], Arg6112_1 = Arg6112[1], Arg6112_2 = Arg6112[2], Arg6112_3 = Arg6112[3], Arg6112_4 = Arg6112[4], Arg6112_5 = Arg6112[5], Arg6112_6 = Arg6112[6], Arg6112_7 = Arg6112[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6112_0, Arg6112_1, Arg6112_5, Arg6112_6, (new Shen.Freeze([Arg6112_0, Arg6112_1, Arg6112_2, Arg6112_3, Arg6112_4, Arg6112_5, Arg6112_6, Arg6112_7], function(Arg6114) {
  var Arg6114_0 = Arg6114[0], Arg6114_1 = Arg6114[1], Arg6114_2 = Arg6114[2], Arg6114_3 = Arg6114[3], Arg6114_4 = Arg6114[4], Arg6114_5 = Arg6114[5], Arg6114_6 = Arg6114[6], Arg6114_7 = Arg6114[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6114_2, Arg6114_6, (new Shen.Freeze([Arg6114_2, Arg6114_3, Arg6114_4, Arg6114_5, Arg6114_6, Arg6114_7], function(Arg6116) {
  var Arg6116_0 = Arg6116[0], Arg6116_1 = Arg6116[1], Arg6116_2 = Arg6116[2], Arg6116_3 = Arg6116[3], Arg6116_4 = Arg6116[4], Arg6116_5 = Arg6116[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.semantics-check"], [Arg6116_1, Arg6116_2, Arg6116_3, Arg6116_4, Arg6116_5]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))]);}))}, 6, [], "shen.check-defcc-rule"];





Shen.fns["shen.syntax-hyps"] = [Shen.type_func, function shen_user_lambda6119(Arg6118) {
  if (Arg6118.length < 6) return [Shen.type_func, shen_user_lambda6119, 6, Arg6118];
  var Arg6118_0 = Arg6118[0], Arg6118_1 = Arg6118[1], Arg6118_2 = Arg6118[2], Arg6118_3 = Arg6118[3], Arg6118_4 = Arg6118[4], Arg6118_5 = Arg6118[5];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6118_0, Arg6118_4])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6118_2, Arg6118_1, Arg6118_4, Arg6118_5])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6118_0, Arg6118_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6118_2, Arg6118_4])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6118_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6118_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6118_4])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6118_4])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R4 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg6118_4])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6118_3, R4, Arg6118_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6118_1, R6, Arg6118_3, Arg6118_4, Arg6118_5, Arg6118_0, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5], function(Arg6120) {
  var Arg6120_0 = Arg6120[0], Arg6120_1 = Arg6120[1], Arg6120_2 = Arg6120[2], Arg6120_3 = Arg6120[3], Arg6120_4 = Arg6120[4], Arg6120_5 = Arg6120[5], Arg6120_6 = Arg6120[6], Arg6120_7 = Arg6120[7], Arg6120_8 = Arg6120[8], Arg6120_9 = Arg6120[9], Arg6120_10 = Arg6120[10], Arg6120_11 = Arg6120[11], Arg6120_12 = Arg6120[12], Arg6120_13 = Arg6120[13], Arg6120_14 = Arg6120[14], Arg6120_15 = Arg6120[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6120_2, Arg6120_1, Arg6120_8, (new Shen.Freeze([Arg6120_1, Arg6120_2, Arg6120_3, Arg6120_4, Arg6120_5, Arg6120_6, Arg6120_7, Arg6120_8, Arg6120_9], function(Arg6122) {
  var Arg6122_0 = Arg6122[0], Arg6122_1 = Arg6122[1], Arg6122_2 = Arg6122[2], Arg6122_3 = Arg6122[3], Arg6122_4 = Arg6122[4], Arg6122_5 = Arg6122[5], Arg6122_6 = Arg6122[6], Arg6122_7 = Arg6122[7], Arg6122_8 = Arg6122[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6122_1, Arg6122_7])]), Arg6122_7, (new Shen.Freeze([Arg6122_1, Arg6122_2, Arg6122_3, Arg6122_4, Arg6122_5, Arg6122_6, Arg6122_7, Arg6122_8], function(Arg6124) {
  var Arg6124_0 = Arg6124[0], Arg6124_1 = Arg6124[1], Arg6124_2 = Arg6124[2], Arg6124_3 = Arg6124[3], Arg6124_4 = Arg6124[4], Arg6124_5 = Arg6124[5], Arg6124_6 = Arg6124[6], Arg6124_7 = Arg6124[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6124_1, Arg6124_6, (new Shen.Freeze([Arg6124_1, Arg6124_2, Arg6124_3, Arg6124_4, Arg6124_5, Arg6124_6, Arg6124_7], function(Arg6126) {
  var Arg6126_0 = Arg6126[0], Arg6126_1 = Arg6126[1], Arg6126_2 = Arg6126[2], Arg6126_3 = Arg6126[3], Arg6126_4 = Arg6126[4], Arg6126_5 = Arg6126[5], Arg6126_6 = Arg6126[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6126_1, Arg6126_2, Arg6126_3, Arg6126_4, Arg6126_5, Arg6126_6]);});})}))]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg6118_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6118_3, R4, Arg6118_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6118_1, R3, Arg6118_3, Arg6118_4, Arg6118_5, R6, Arg6118_4, Arg6118_0, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5], function(Arg6128) {
  var Arg6128_0 = Arg6128[0], Arg6128_1 = Arg6128[1], Arg6128_2 = Arg6128[2], Arg6128_3 = Arg6128[3], Arg6128_4 = Arg6128[4], Arg6128_5 = Arg6128[5], Arg6128_6 = Arg6128[6], Arg6128_7 = Arg6128[7], Arg6128_8 = Arg6128[8], Arg6128_9 = Arg6128[9], Arg6128_10 = Arg6128[10], Arg6128_11 = Arg6128[11], Arg6128_12 = Arg6128[12], Arg6128_13 = Arg6128[13], Arg6128_14 = Arg6128[14], Arg6128_15 = Arg6128[15], Arg6128_16 = Arg6128[16], Arg6128_17 = Arg6128[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6128_2, Arg6128_1, Arg6128_8, (new Shen.Freeze([Arg6128_1, Arg6128_2, Arg6128_3, Arg6128_4, Arg6128_5, Arg6128_6, Arg6128_7, Arg6128_8, Arg6128_9], function(Arg6130) {
  var Arg6130_0 = Arg6130[0], Arg6130_1 = Arg6130[1], Arg6130_2 = Arg6130[2], Arg6130_3 = Arg6130[3], Arg6130_4 = Arg6130[4], Arg6130_5 = Arg6130[5], Arg6130_6 = Arg6130[6], Arg6130_7 = Arg6130[7], Arg6130_8 = Arg6130[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6130_1, Arg6130_7])]), Arg6130_7, (new Shen.Freeze([Arg6130_1, Arg6130_2, Arg6130_3, Arg6130_4, Arg6130_5, Arg6130_6, Arg6130_7, Arg6130_8], function(Arg6132) {
  var Arg6132_0 = Arg6132[0], Arg6132_1 = Arg6132[1], Arg6132_2 = Arg6132[2], Arg6132_3 = Arg6132[3], Arg6132_4 = Arg6132[4], Arg6132_5 = Arg6132[5], Arg6132_6 = Arg6132[6], Arg6132_7 = Arg6132[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6132_1, Arg6132_6, (new Shen.Freeze([Arg6132_1, Arg6132_2, Arg6132_3, Arg6132_4, Arg6132_5, Arg6132_6, Arg6132_7], function(Arg6134) {
  var Arg6134_0 = Arg6134[0], Arg6134_1 = Arg6134[1], Arg6134_2 = Arg6134[2], Arg6134_3 = Arg6134[3], Arg6134_4 = Arg6134[4], Arg6134_5 = Arg6134[5], Arg6134_6 = Arg6134[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6134_1, Arg6134_2, Arg6134_3, Arg6134_4, Arg6134_5, Arg6134_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6118_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6118_4])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R4, []], Arg6118_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6118_3, R4, Arg6118_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6118_1, R3, Arg6118_3, Arg6118_4, Arg6118_5, R6, Arg6118_4, Arg6118_0, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5], function(Arg6136) {
  var Arg6136_0 = Arg6136[0], Arg6136_1 = Arg6136[1], Arg6136_2 = Arg6136[2], Arg6136_3 = Arg6136[3], Arg6136_4 = Arg6136[4], Arg6136_5 = Arg6136[5], Arg6136_6 = Arg6136[6], Arg6136_7 = Arg6136[7], Arg6136_8 = Arg6136[8], Arg6136_9 = Arg6136[9], Arg6136_10 = Arg6136[10], Arg6136_11 = Arg6136[11], Arg6136_12 = Arg6136[12], Arg6136_13 = Arg6136[13], Arg6136_14 = Arg6136[14], Arg6136_15 = Arg6136[15], Arg6136_16 = Arg6136[16], Arg6136_17 = Arg6136[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6136_2, Arg6136_1, Arg6136_8, (new Shen.Freeze([Arg6136_1, Arg6136_2, Arg6136_3, Arg6136_4, Arg6136_5, Arg6136_6, Arg6136_7, Arg6136_8, Arg6136_9], function(Arg6138) {
  var Arg6138_0 = Arg6138[0], Arg6138_1 = Arg6138[1], Arg6138_2 = Arg6138[2], Arg6138_3 = Arg6138[3], Arg6138_4 = Arg6138[4], Arg6138_5 = Arg6138[5], Arg6138_6 = Arg6138[6], Arg6138_7 = Arg6138[7], Arg6138_8 = Arg6138[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6138_1, Arg6138_7])]), Arg6138_7, (new Shen.Freeze([Arg6138_1, Arg6138_2, Arg6138_3, Arg6138_4, Arg6138_5, Arg6138_6, Arg6138_7, Arg6138_8], function(Arg6140) {
  var Arg6140_0 = Arg6140[0], Arg6140_1 = Arg6140[1], Arg6140_2 = Arg6140[2], Arg6140_3 = Arg6140[3], Arg6140_4 = Arg6140[4], Arg6140_5 = Arg6140[5], Arg6140_6 = Arg6140[6], Arg6140_7 = Arg6140[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6140_1, Arg6140_6, (new Shen.Freeze([Arg6140_1, Arg6140_2, Arg6140_3, Arg6140_4, Arg6140_5, Arg6140_6, Arg6140_7], function(Arg6142) {
  var Arg6142_0 = Arg6142[0], Arg6142_1 = Arg6142[1], Arg6142_2 = Arg6142[2], Arg6142_3 = Arg6142[3], Arg6142_4 = Arg6142[4], Arg6142_5 = Arg6142[5], Arg6142_6 = Arg6142[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6142_1, Arg6142_2, Arg6142_3, Arg6142_4, Arg6142_5, Arg6142_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6118_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, ":"], Arg6118_4]),
  ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6118_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R7 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6118_4])),
  ((Shen.empty$question$(R4))
  ? ((R4 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6118_3, R7, Arg6118_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6118_1, R4, Arg6118_3, Arg6118_4, Arg6118_5, R6, Arg6118_4, Arg6118_0, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5], function(Arg6144) {
  var Arg6144_0 = Arg6144[0], Arg6144_1 = Arg6144[1], Arg6144_2 = Arg6144[2], Arg6144_3 = Arg6144[3], Arg6144_4 = Arg6144[4], Arg6144_5 = Arg6144[5], Arg6144_6 = Arg6144[6], Arg6144_7 = Arg6144[7], Arg6144_8 = Arg6144[8], Arg6144_9 = Arg6144[9], Arg6144_10 = Arg6144[10], Arg6144_11 = Arg6144[11], Arg6144_12 = Arg6144[12], Arg6144_13 = Arg6144[13], Arg6144_14 = Arg6144[14], Arg6144_15 = Arg6144[15], Arg6144_16 = Arg6144[16], Arg6144_17 = Arg6144[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6144_2, Arg6144_1, Arg6144_8, (new Shen.Freeze([Arg6144_1, Arg6144_2, Arg6144_3, Arg6144_4, Arg6144_5, Arg6144_6, Arg6144_7, Arg6144_8, Arg6144_9], function(Arg6146) {
  var Arg6146_0 = Arg6146[0], Arg6146_1 = Arg6146[1], Arg6146_2 = Arg6146[2], Arg6146_3 = Arg6146[3], Arg6146_4 = Arg6146[4], Arg6146_5 = Arg6146[5], Arg6146_6 = Arg6146[6], Arg6146_7 = Arg6146[7], Arg6146_8 = Arg6146[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6146_1, Arg6146_7])]), Arg6146_7, (new Shen.Freeze([Arg6146_1, Arg6146_2, Arg6146_3, Arg6146_4, Arg6146_5, Arg6146_6, Arg6146_7, Arg6146_8], function(Arg6148) {
  var Arg6148_0 = Arg6148[0], Arg6148_1 = Arg6148[1], Arg6148_2 = Arg6148[2], Arg6148_3 = Arg6148[3], Arg6148_4 = Arg6148[4], Arg6148_5 = Arg6148[5], Arg6148_6 = Arg6148[6], Arg6148_7 = Arg6148[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6148_1, Arg6148_6, (new Shen.Freeze([Arg6148_1, Arg6148_2, Arg6148_3, Arg6148_4, Arg6148_5, Arg6148_6, Arg6148_7], function(Arg6150) {
  var Arg6150_0 = Arg6150[0], Arg6150_1 = Arg6150[1], Arg6150_2 = Arg6150[2], Arg6150_3 = Arg6150[3], Arg6150_4 = Arg6150[4], Arg6150_5 = Arg6150[5], Arg6150_6 = Arg6150[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6150_1, Arg6150_2, Arg6150_3, Arg6150_4, Arg6150_5, Arg6150_6]);});})}))]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6118_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6118_3, R7, Arg6118_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6118_1, R3, Arg6118_3, Arg6118_4, Arg6118_5, R4, Arg6118_4, R6, Arg6118_4, Arg6118_0, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5], function(Arg6152) {
  var Arg6152_0 = Arg6152[0], Arg6152_1 = Arg6152[1], Arg6152_2 = Arg6152[2], Arg6152_3 = Arg6152[3], Arg6152_4 = Arg6152[4], Arg6152_5 = Arg6152[5], Arg6152_6 = Arg6152[6], Arg6152_7 = Arg6152[7], Arg6152_8 = Arg6152[8], Arg6152_9 = Arg6152[9], Arg6152_10 = Arg6152[10], Arg6152_11 = Arg6152[11], Arg6152_12 = Arg6152[12], Arg6152_13 = Arg6152[13], Arg6152_14 = Arg6152[14], Arg6152_15 = Arg6152[15], Arg6152_16 = Arg6152[16], Arg6152_17 = Arg6152[17], Arg6152_18 = Arg6152[18], Arg6152_19 = Arg6152[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6152_2, Arg6152_1, Arg6152_8, (new Shen.Freeze([Arg6152_1, Arg6152_2, Arg6152_3, Arg6152_4, Arg6152_5, Arg6152_6, Arg6152_7, Arg6152_8, Arg6152_9], function(Arg6154) {
  var Arg6154_0 = Arg6154[0], Arg6154_1 = Arg6154[1], Arg6154_2 = Arg6154[2], Arg6154_3 = Arg6154[3], Arg6154_4 = Arg6154[4], Arg6154_5 = Arg6154[5], Arg6154_6 = Arg6154[6], Arg6154_7 = Arg6154[7], Arg6154_8 = Arg6154[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6154_1, Arg6154_7])]), Arg6154_7, (new Shen.Freeze([Arg6154_1, Arg6154_2, Arg6154_3, Arg6154_4, Arg6154_5, Arg6154_6, Arg6154_7, Arg6154_8], function(Arg6156) {
  var Arg6156_0 = Arg6156[0], Arg6156_1 = Arg6156[1], Arg6156_2 = Arg6156[2], Arg6156_3 = Arg6156[3], Arg6156_4 = Arg6156[4], Arg6156_5 = Arg6156[5], Arg6156_6 = Arg6156[6], Arg6156_7 = Arg6156[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6156_1, Arg6156_6, (new Shen.Freeze([Arg6156_1, Arg6156_2, Arg6156_3, Arg6156_4, Arg6156_5, Arg6156_6, Arg6156_7], function(Arg6158) {
  var Arg6158_0 = Arg6158[0], Arg6158_1 = Arg6158[1], Arg6158_2 = Arg6158[2], Arg6158_3 = Arg6158[3], Arg6158_4 = Arg6158[4], Arg6158_5 = Arg6158[5], Arg6158_6 = Arg6158[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6158_1, Arg6158_2, Arg6158_3, Arg6158_4, Arg6158_5, Arg6158_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6118_4]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6118_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R7, []], Arg6118_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6118_3, R7, Arg6118_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6118_1, R3, Arg6118_3, Arg6118_4, Arg6118_5, R4, Arg6118_4, R6, Arg6118_4, Arg6118_0, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5], function(Arg6160) {
  var Arg6160_0 = Arg6160[0], Arg6160_1 = Arg6160[1], Arg6160_2 = Arg6160[2], Arg6160_3 = Arg6160[3], Arg6160_4 = Arg6160[4], Arg6160_5 = Arg6160[5], Arg6160_6 = Arg6160[6], Arg6160_7 = Arg6160[7], Arg6160_8 = Arg6160[8], Arg6160_9 = Arg6160[9], Arg6160_10 = Arg6160[10], Arg6160_11 = Arg6160[11], Arg6160_12 = Arg6160[12], Arg6160_13 = Arg6160[13], Arg6160_14 = Arg6160[14], Arg6160_15 = Arg6160[15], Arg6160_16 = Arg6160[16], Arg6160_17 = Arg6160[17], Arg6160_18 = Arg6160[18], Arg6160_19 = Arg6160[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6160_2, Arg6160_1, Arg6160_8, (new Shen.Freeze([Arg6160_1, Arg6160_2, Arg6160_3, Arg6160_4, Arg6160_5, Arg6160_6, Arg6160_7, Arg6160_8, Arg6160_9], function(Arg6162) {
  var Arg6162_0 = Arg6162[0], Arg6162_1 = Arg6162[1], Arg6162_2 = Arg6162[2], Arg6162_3 = Arg6162[3], Arg6162_4 = Arg6162[4], Arg6162_5 = Arg6162[5], Arg6162_6 = Arg6162[6], Arg6162_7 = Arg6162[7], Arg6162_8 = Arg6162[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6162_1, Arg6162_7])]), Arg6162_7, (new Shen.Freeze([Arg6162_1, Arg6162_2, Arg6162_3, Arg6162_4, Arg6162_5, Arg6162_6, Arg6162_7, Arg6162_8], function(Arg6164) {
  var Arg6164_0 = Arg6164[0], Arg6164_1 = Arg6164[1], Arg6164_2 = Arg6164[2], Arg6164_3 = Arg6164[3], Arg6164_4 = Arg6164[4], Arg6164_5 = Arg6164[5], Arg6164_6 = Arg6164[6], Arg6164_7 = Arg6164[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6164_1, Arg6164_6, (new Shen.Freeze([Arg6164_1, Arg6164_2, Arg6164_3, Arg6164_4, Arg6164_5, Arg6164_6, Arg6164_7], function(Arg6166) {
  var Arg6166_0 = Arg6166[0], Arg6166_1 = Arg6166[1], Arg6166_2 = Arg6166[2], Arg6166_3 = Arg6166[3], Arg6166_4 = Arg6166[4], Arg6166_5 = Arg6166[5], Arg6166_6 = Arg6166[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6166_1, Arg6166_2, Arg6166_3, Arg6166_4, Arg6166_5, Arg6166_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6118_4]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6118_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6118_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]], Arg6118_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6118_3, R6, Arg6118_4, (new Shen.Freeze([R6, R2, R5, R0, R1, Arg6118_1, R3, Arg6118_3, Arg6118_4, Arg6118_5, R4, Arg6118_4, Arg6118_0, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5], function(Arg6168) {
  var Arg6168_0 = Arg6168[0], Arg6168_1 = Arg6168[1], Arg6168_2 = Arg6168[2], Arg6168_3 = Arg6168[3], Arg6168_4 = Arg6168[4], Arg6168_5 = Arg6168[5], Arg6168_6 = Arg6168[6], Arg6168_7 = Arg6168[7], Arg6168_8 = Arg6168[8], Arg6168_9 = Arg6168[9], Arg6168_10 = Arg6168[10], Arg6168_11 = Arg6168[11], Arg6168_12 = Arg6168[12], Arg6168_13 = Arg6168[13], Arg6168_14 = Arg6168[14], Arg6168_15 = Arg6168[15], Arg6168_16 = Arg6168[16], Arg6168_17 = Arg6168[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6168_2, Arg6168_1, Arg6168_8, (new Shen.Freeze([Arg6168_1, Arg6168_2, Arg6168_3, Arg6168_4, Arg6168_5, Arg6168_6, Arg6168_7, Arg6168_8, Arg6168_9], function(Arg6170) {
  var Arg6170_0 = Arg6170[0], Arg6170_1 = Arg6170[1], Arg6170_2 = Arg6170[2], Arg6170_3 = Arg6170[3], Arg6170_4 = Arg6170[4], Arg6170_5 = Arg6170[5], Arg6170_6 = Arg6170[6], Arg6170_7 = Arg6170[7], Arg6170_8 = Arg6170[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6170_1, Arg6170_7])]), Arg6170_7, (new Shen.Freeze([Arg6170_1, Arg6170_2, Arg6170_3, Arg6170_4, Arg6170_5, Arg6170_6, Arg6170_7, Arg6170_8], function(Arg6172) {
  var Arg6172_0 = Arg6172[0], Arg6172_1 = Arg6172[1], Arg6172_2 = Arg6172[2], Arg6172_3 = Arg6172[3], Arg6172_4 = Arg6172[4], Arg6172_5 = Arg6172[5], Arg6172_6 = Arg6172[6], Arg6172_7 = Arg6172[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6172_1, Arg6172_6, (new Shen.Freeze([Arg6172_1, Arg6172_2, Arg6172_3, Arg6172_4, Arg6172_5, Arg6172_6, Arg6172_7], function(Arg6174) {
  var Arg6174_0 = Arg6174[0], Arg6174_1 = Arg6174[1], Arg6174_2 = Arg6174[2], Arg6174_3 = Arg6174[3], Arg6174_4 = Arg6174[4], Arg6174_5 = Arg6174[5], Arg6174_6 = Arg6174[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6174_1, Arg6174_2, Arg6174_3, Arg6174_4, Arg6174_5, Arg6174_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6118_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6118_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6118_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]]], Arg6118_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6118_3, R6, Arg6118_4, (new Shen.Freeze([R6, R2, R5, R0, R1, Arg6118_1, R3, Arg6118_3, Arg6118_4, Arg6118_5, R4, Arg6118_4, Arg6118_0, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5], function(Arg6176) {
  var Arg6176_0 = Arg6176[0], Arg6176_1 = Arg6176[1], Arg6176_2 = Arg6176[2], Arg6176_3 = Arg6176[3], Arg6176_4 = Arg6176[4], Arg6176_5 = Arg6176[5], Arg6176_6 = Arg6176[6], Arg6176_7 = Arg6176[7], Arg6176_8 = Arg6176[8], Arg6176_9 = Arg6176[9], Arg6176_10 = Arg6176[10], Arg6176_11 = Arg6176[11], Arg6176_12 = Arg6176[12], Arg6176_13 = Arg6176[13], Arg6176_14 = Arg6176[14], Arg6176_15 = Arg6176[15], Arg6176_16 = Arg6176[16], Arg6176_17 = Arg6176[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6176_2, Arg6176_1, Arg6176_8, (new Shen.Freeze([Arg6176_1, Arg6176_2, Arg6176_3, Arg6176_4, Arg6176_5, Arg6176_6, Arg6176_7, Arg6176_8, Arg6176_9], function(Arg6178) {
  var Arg6178_0 = Arg6178[0], Arg6178_1 = Arg6178[1], Arg6178_2 = Arg6178[2], Arg6178_3 = Arg6178[3], Arg6178_4 = Arg6178[4], Arg6178_5 = Arg6178[5], Arg6178_6 = Arg6178[6], Arg6178_7 = Arg6178[7], Arg6178_8 = Arg6178[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6178_1, Arg6178_7])]), Arg6178_7, (new Shen.Freeze([Arg6178_1, Arg6178_2, Arg6178_3, Arg6178_4, Arg6178_5, Arg6178_6, Arg6178_7, Arg6178_8], function(Arg6180) {
  var Arg6180_0 = Arg6180[0], Arg6180_1 = Arg6180[1], Arg6180_2 = Arg6180[2], Arg6180_3 = Arg6180[3], Arg6180_4 = Arg6180[4], Arg6180_5 = Arg6180[5], Arg6180_6 = Arg6180[6], Arg6180_7 = Arg6180[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6180_1, Arg6180_6, (new Shen.Freeze([Arg6180_1, Arg6180_2, Arg6180_3, Arg6180_4, Arg6180_5, Arg6180_6, Arg6180_7], function(Arg6182) {
  var Arg6182_0 = Arg6182[0], Arg6182_1 = Arg6182[1], Arg6182_2 = Arg6182[2], Arg6182_3 = Arg6182[3], Arg6182_4 = Arg6182[4], Arg6182_5 = Arg6182[5], Arg6182_6 = Arg6182[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6182_1, Arg6182_2, Arg6182_3, Arg6182_4, Arg6182_5, Arg6182_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6118_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6118_4])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6118_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6118_4])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], R6], Arg6118_4]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6118_3, R5, Arg6118_4, (new Shen.Freeze([R5, R2, R4, R0, R1, Arg6118_1, R6, Arg6118_3, Arg6118_5, R3, Arg6118_4, Arg6118_0, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5], function(Arg6184) {
  var Arg6184_0 = Arg6184[0], Arg6184_1 = Arg6184[1], Arg6184_2 = Arg6184[2], Arg6184_3 = Arg6184[3], Arg6184_4 = Arg6184[4], Arg6184_5 = Arg6184[5], Arg6184_6 = Arg6184[6], Arg6184_7 = Arg6184[7], Arg6184_8 = Arg6184[8], Arg6184_9 = Arg6184[9], Arg6184_10 = Arg6184[10], Arg6184_11 = Arg6184[11], Arg6184_12 = Arg6184[12], Arg6184_13 = Arg6184[13], Arg6184_14 = Arg6184[14], Arg6184_15 = Arg6184[15], Arg6184_16 = Arg6184[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6184_2, Arg6184_1, Arg6184_10, (new Shen.Freeze([Arg6184_1, Arg6184_2, Arg6184_3, Arg6184_4, Arg6184_5, Arg6184_6, Arg6184_7, Arg6184_10, Arg6184_8], function(Arg6186) {
  var Arg6186_0 = Arg6186[0], Arg6186_1 = Arg6186[1], Arg6186_2 = Arg6186[2], Arg6186_3 = Arg6186[3], Arg6186_4 = Arg6186[4], Arg6186_5 = Arg6186[5], Arg6186_6 = Arg6186[6], Arg6186_7 = Arg6186[7], Arg6186_8 = Arg6186[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6186_1, Arg6186_7])]), Arg6186_7, (new Shen.Freeze([Arg6186_1, Arg6186_2, Arg6186_3, Arg6186_4, Arg6186_5, Arg6186_6, Arg6186_7, Arg6186_8], function(Arg6188) {
  var Arg6188_0 = Arg6188[0], Arg6188_1 = Arg6188[1], Arg6188_2 = Arg6188[2], Arg6188_3 = Arg6188[3], Arg6188_4 = Arg6188[4], Arg6188_5 = Arg6188[5], Arg6188_6 = Arg6188[6], Arg6188_7 = Arg6188[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6188_1, Arg6188_6, (new Shen.Freeze([Arg6188_1, Arg6188_2, Arg6188_3, Arg6188_4, Arg6188_5, Arg6188_6, Arg6188_7], function(Arg6190) {
  var Arg6190_0 = Arg6190[0], Arg6190_1 = Arg6190[1], Arg6190_2 = Arg6190[2], Arg6190_3 = Arg6190[3], Arg6190_4 = Arg6190[4], Arg6190_5 = Arg6190[5], Arg6190_6 = Arg6190[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6190_1, Arg6190_2, Arg6190_3, Arg6190_4, Arg6190_5, Arg6190_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6118_4]),
  (R1 = R6))
  : (R1 = false))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6118_0, Arg6118_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.syntax-hyps"], [R1, Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5]))
  : false))
  : R1))
  : R1))]);}))}, 6, [], "shen.syntax-hyps"];





Shen.fns["shen.get-syntax+semantics"] = [Shen.type_func, function shen_user_lambda6193(Arg6192) {
  if (Arg6192.length < 5) return [Shen.type_func, shen_user_lambda6193, 5, Arg6192];
  var Arg6192_0 = Arg6192[0], Arg6192_1 = Arg6192[1], Arg6192_2 = Arg6192[2], Arg6192_3 = Arg6192[3], Arg6192_4 = Arg6192[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6192_0, Arg6192_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6192_2, Arg6192_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6192_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6192_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6192_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6192_3, (new Shen.Freeze([R1, R0, Arg6192_0, Arg6192_2, Arg6192_1, Arg6192_4, Arg6192_3], function(Arg6194) {
  var Arg6194_0 = Arg6194[0], Arg6194_1 = Arg6194[1], Arg6194_2 = Arg6194[2], Arg6194_3 = Arg6194[3], Arg6194_4 = Arg6194[4], Arg6194_5 = Arg6194[5], Arg6194_6 = Arg6194[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6194_4, Shen.call(Shen.fns["shen.lazyderef"], [Arg6194_0, Arg6194_6]), Arg6194_6, Arg6194_5]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6192_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6192_2, Arg6192_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6192_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6192_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6192_3])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["cut"], [R0, Arg6192_3, (new Shen.Freeze([R2, R1, Arg6192_3, R0, Arg6192_0, Arg6192_2, Arg6192_1, Arg6192_4, Arg6192_3], function(Arg6196) {
  var Arg6196_0 = Arg6196[0], Arg6196_1 = Arg6196[1], Arg6196_2 = Arg6196[2], Arg6196_3 = Arg6196[3], Arg6196_4 = Arg6196[4], Arg6196_5 = Arg6196[5], Arg6196_6 = Arg6196[6], Arg6196_7 = Arg6196[7], Arg6196_8 = Arg6196[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6196_6, Shen.call(Shen.fns["shen.lazyderef"], [Arg6196_0, Arg6196_2]), Arg6196_2, Arg6196_7]);});})}))])))
  : (R2 = false)))
  : (R2 = false)))
  : (R2 = false)))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6192_3]),
  (R1 = R2))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6192_0, Arg6192_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6192_2, Arg6192_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6192_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6192_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6192_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6192_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6192_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6192_3])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6192_3, (new Shen.Freeze([R0, R2, R1, Arg6192_0, Arg6192_2, Arg6192_1, Arg6192_4, Arg6192_3], function(Arg6198) {
  var Arg6198_0 = Arg6198[0], Arg6198_1 = Arg6198[1], Arg6198_2 = Arg6198[2], Arg6198_3 = Arg6198[3], Arg6198_4 = Arg6198[4], Arg6198_5 = Arg6198[5], Arg6198_6 = Arg6198[6], Arg6198_7 = Arg6198[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6198_5, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6198_1, Arg6198_7]), [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6198_2, Arg6198_7]), []]]], Arg6198_7, Arg6198_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6192_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6192_2, Arg6192_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6192_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6192_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6192_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6192_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6192_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6192_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["cut"], [R0, Arg6192_3, (new Shen.Freeze([R0, R3, R2, R1, Arg6192_3, Arg6192_0, Arg6192_2, Arg6192_1, Arg6192_4, Arg6192_3], function(Arg6200) {
  var Arg6200_0 = Arg6200[0], Arg6200_1 = Arg6200[1], Arg6200_2 = Arg6200[2], Arg6200_3 = Arg6200[3], Arg6200_4 = Arg6200[4], Arg6200_5 = Arg6200[5], Arg6200_6 = Arg6200[6], Arg6200_7 = Arg6200[7], Arg6200_8 = Arg6200[8], Arg6200_9 = Arg6200[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6200_7, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6200_1, Arg6200_4]), [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6200_2, Arg6200_4]), []]]], Arg6200_4, Arg6200_8]);});})}))])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6192_3]),
  (R1 = R0))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6192_0, Arg6192_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6192_2, Arg6192_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["unify!"], [R3, R0, Arg6192_3, (new Shen.Freeze([R3, R0, R1, Arg6192_1, R2, Arg6192_3, Arg6192_4], function(Arg6202) {
  var Arg6202_0 = Arg6202[0], Arg6202_1 = Arg6202[1], Arg6202_2 = Arg6202[2], Arg6202_3 = Arg6202[3], Arg6202_4 = Arg6202[4], Arg6202_5 = Arg6202[5], Arg6202_6 = Arg6202[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-syntax+semantics"], [Arg6202_2, Arg6202_3, Arg6202_4, Arg6202_5, Arg6202_6]);});})}))]))
  : false))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6192_3])),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6192_3])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, R2], Arg6192_3]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6192_2, Arg6192_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["unify!"], [R4, R0, Arg6192_3, (new Shen.Freeze([R4, R0, R2, Arg6192_1, R3, Arg6192_3, Arg6192_4, R1, Arg6192_3], function(Arg6204) {
  var Arg6204_0 = Arg6204[0], Arg6204_1 = Arg6204[1], Arg6204_2 = Arg6204[2], Arg6204_3 = Arg6204[3], Arg6204_4 = Arg6204[4], Arg6204_5 = Arg6204[5], Arg6204_6 = Arg6204[6], Arg6204_7 = Arg6204[7], Arg6204_8 = Arg6204[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-syntax+semantics"], [Arg6204_2, Arg6204_3, Arg6204_4, Arg6204_5, Arg6204_6]);});})}))])))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6192_3]),
  R2)
  : false)))
  : R1))
  : R1))]);}))}, 5, [], "shen.get-syntax+semantics"];





Shen.fns["shen.syntax-check"] = [Shen.type_func, function shen_user_lambda6207(Arg6206) {
  if (Arg6206.length < 5) return [Shen.type_func, shen_user_lambda6207, 5, Arg6206];
  var Arg6206_0 = Arg6206[0], Arg6206_1 = Arg6206[1], Arg6206_2 = Arg6206[2], Arg6206_3 = Arg6206[3], Arg6206_4 = Arg6206[4];
  var R0, R1, R2, R3, R4, R5;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6206_0, Arg6206_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6206_4))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6206_0, Arg6206_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6206_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6206_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6206_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.grammar_symbol?"], [Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6206_3])]), Arg6206_3, (new Shen.Freeze([R3, R2, R4, R5, R0, R1, Arg6206_1, Arg6206_2, Arg6206_3, Arg6206_4, Arg6206_0, R0, Arg6206_1, Arg6206_2, Arg6206_3, Arg6206_4], function(Arg6208) {
  var Arg6208_0 = Arg6208[0], Arg6208_1 = Arg6208[1], Arg6208_2 = Arg6208[2], Arg6208_3 = Arg6208[3], Arg6208_4 = Arg6208[4], Arg6208_5 = Arg6208[5], Arg6208_6 = Arg6208[6], Arg6208_7 = Arg6208[7], Arg6208_8 = Arg6208[8], Arg6208_9 = Arg6208[9], Arg6208_10 = Arg6208[10], Arg6208_11 = Arg6208[11], Arg6208_12 = Arg6208[12], Arg6208_13 = Arg6208[13], Arg6208_14 = Arg6208[14], Arg6208_15 = Arg6208[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6208_4, Arg6208_8, (new Shen.Freeze([Arg6208_0, Arg6208_1, Arg6208_2, Arg6208_3, Arg6208_4, Arg6208_5, Arg6208_6, Arg6208_7, Arg6208_8, Arg6208_9], function(Arg6210) {
  var Arg6210_0 = Arg6210[0], Arg6210_1 = Arg6210[1], Arg6210_2 = Arg6210[2], Arg6210_3 = Arg6210[3], Arg6210_4 = Arg6210[4], Arg6210_5 = Arg6210[5], Arg6210_6 = Arg6210[6], Arg6210_7 = Arg6210[7], Arg6210_8 = Arg6210[8], Arg6210_9 = Arg6210[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6210_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6210_3, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6210_0, []]]], []]]], Arg6210_7, Arg6210_8, (new Shen.Freeze([Arg6210_0, Arg6210_1, Arg6210_2, Arg6210_3, Arg6210_4, Arg6210_5, Arg6210_6, Arg6210_7, Arg6210_8, Arg6210_9], function(Arg6212) {
  var Arg6212_0 = Arg6212[0], Arg6212_1 = Arg6212[1], Arg6212_2 = Arg6212[2], Arg6212_3 = Arg6212[3], Arg6212_4 = Arg6212[4], Arg6212_5 = Arg6212[5], Arg6212_6 = Arg6212[6], Arg6212_7 = Arg6212[7], Arg6212_8 = Arg6212[8], Arg6212_9 = Arg6212[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6212_4, Arg6212_8, (new Shen.Freeze([Arg6212_1, Arg6212_2, Arg6212_3, Arg6212_4, Arg6212_5, Arg6212_6, Arg6212_7, Arg6212_8, Arg6212_9], function(Arg6214) {
  var Arg6214_0 = Arg6214[0], Arg6214_1 = Arg6214[1], Arg6214_2 = Arg6214[2], Arg6214_3 = Arg6214[3], Arg6214_4 = Arg6214[4], Arg6214_5 = Arg6214[5], Arg6214_6 = Arg6214[6], Arg6214_7 = Arg6214[7], Arg6214_8 = Arg6214[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6214_1, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Shen.call(Shen.fns["shen.lazyderef"], [Arg6214_0, Arg6214_7])]), Arg6214_7, (new Shen.Freeze([Arg6214_0, Arg6214_1, Arg6214_2, Arg6214_3, Arg6214_4, Arg6214_5, Arg6214_6, Arg6214_7, Arg6214_8], function(Arg6216) {
  var Arg6216_0 = Arg6216[0], Arg6216_1 = Arg6216[1], Arg6216_2 = Arg6216[2], Arg6216_3 = Arg6216[3], Arg6216_4 = Arg6216[4], Arg6216_5 = Arg6216[5], Arg6216_6 = Arg6216[6], Arg6216_7 = Arg6216[7], Arg6216_8 = Arg6216[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6216_3, Arg6216_7, (new Shen.Freeze([Arg6216_1, Arg6216_2, Arg6216_3, Arg6216_4, Arg6216_5, Arg6216_6, Arg6216_7, Arg6216_8], function(Arg6218) {
  var Arg6218_0 = Arg6218[0], Arg6218_1 = Arg6218[1], Arg6218_2 = Arg6218[2], Arg6218_3 = Arg6218[3], Arg6218_4 = Arg6218[4], Arg6218_5 = Arg6218[5], Arg6218_6 = Arg6218[6], Arg6218_7 = Arg6218[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6218_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6218_4, []]], []]]], [Shen.type_cons, [Shen.type_cons, Arg6218_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6218_1, []]], []]]], Arg6218_5], Arg6218_6, (new Shen.Freeze([Arg6218_0, Arg6218_1, Arg6218_2, Arg6218_3, Arg6218_4, Arg6218_5, Arg6218_6, Arg6218_7], function(Arg6220) {
  var Arg6220_0 = Arg6220[0], Arg6220_1 = Arg6220[1], Arg6220_2 = Arg6220[2], Arg6220_3 = Arg6220[3], Arg6220_4 = Arg6220[4], Arg6220_5 = Arg6220[5], Arg6220_6 = Arg6220[6], Arg6220_7 = Arg6220[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6220_2, Arg6220_6, (new Shen.Freeze([Arg6220_2, Arg6220_3, Arg6220_4, Arg6220_5, Arg6220_6, Arg6220_7], function(Arg6222) {
  var Arg6222_0 = Arg6222[0], Arg6222_1 = Arg6222[1], Arg6222_2 = Arg6222[2], Arg6222_3 = Arg6222[3], Arg6222_4 = Arg6222[4], Arg6222_5 = Arg6222[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6222_1, Arg6222_2, Arg6222_3, Arg6222_4, Arg6222_5]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6206_0, Arg6206_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, R2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6206_1, []]]], Arg6206_2, Arg6206_3, (new Shen.Freeze([R2, R0, R1, Arg6206_1, Arg6206_2, Arg6206_3, Arg6206_4], function(Arg6224) {
  var Arg6224_0 = Arg6224[0], Arg6224_1 = Arg6224[1], Arg6224_2 = Arg6224[2], Arg6224_3 = Arg6224[3], Arg6224_4 = Arg6224[4], Arg6224_5 = Arg6224[5], Arg6224_6 = Arg6224[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6224_1, Arg6224_5, (new Shen.Freeze([Arg6224_1, Arg6224_2, Arg6224_3, Arg6224_4, Arg6224_5, Arg6224_6], function(Arg6226) {
  var Arg6226_0 = Arg6226[0], Arg6226_1 = Arg6226[1], Arg6226_2 = Arg6226[2], Arg6226_3 = Arg6226[3], Arg6226_4 = Arg6226[4], Arg6226_5 = Arg6226[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6226_1, Arg6226_2, Arg6226_3, Arg6226_4, Arg6226_5]);});})}))]);});})}))]))
  : false))
  : R1))
  : R1))]);}))}, 5, [], "shen.syntax-check"];





Shen.fns["shen.semantics-check"] = [Shen.type_func, function shen_user_lambda6229(Arg6228) {
  if (Arg6228.length < 5) return [Shen.type_func, shen_user_lambda6229, 5, Arg6228];
  var Arg6228_0 = Arg6228[0], Arg6228_1 = Arg6228[1], Arg6228_2 = Arg6228[2], Arg6228_3 = Arg6228[3], Arg6228_4 = Arg6228[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6228_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.rename-semantics"], [Shen.call(Shen.fns["shen.deref"], [Arg6228_0, Arg6228_3])])]), Arg6228_3, (new Shen.Freeze([Arg6228_0, R0, Arg6228_1, Arg6228_2, Arg6228_3, Arg6228_4], function(Arg6230) {
  var Arg6230_0 = Arg6230[0], Arg6230_1 = Arg6230[1], Arg6230_2 = Arg6230[2], Arg6230_3 = Arg6230[3], Arg6230_4 = Arg6230[4], Arg6230_5 = Arg6230[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6230_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6230_2, []]]], Arg6230_3, Arg6230_4, Arg6230_5]);});})}))]);}))}, 5, [], "shen.semantics-check"];





Shen.fns["shen.rename-semantics"] = [Shen.type_func, function shen_user_lambda6233(Arg6232) {
  if (Arg6232.length < 1) return [Shen.type_func, shen_user_lambda6233, 1, Arg6232];
  var Arg6232_0 = Arg6232[0];
  return ((Shen.is_type(Arg6232_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rename-semantics"], [Arg6232_0[1]]), Shen.call(Shen.fns["shen.rename-semantics"], [Arg6232_0[2]])]
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg6232_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.<-sem"], [Shen.type_cons, Arg6232_0, []]]
  : Arg6232_0))}, 1, [], "shen.rename-semantics"];










Shen.fns["shen.shen"] = [Shen.type_func, function shen_user_lambda7240(Arg7239) {
  if (Arg7239.length < 0) return [Shen.type_func, shen_user_lambda7240, 0, Arg7239];
  return (Shen.call(Shen.fns["shen.credits"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.shen"];





Shen.fns["shen.loop"] = [Shen.type_func, function shen_user_lambda7242(Arg7241) {
  if (Arg7241.length < 0) return [Shen.type_func, shen_user_lambda7242, 0, Arg7241];
  return (Shen.call(Shen.fns["shen.initialise_environment"], []),
  Shen.call(Shen.fns["shen.prompt"], []),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen.read-evaluate-print"], []);}, [Shen.type_func, function shen_user_lambda7244(Arg7243) {
  if (Arg7243.length < 1) return [Shen.type_func, shen_user_lambda7244, 1, Arg7243];
  var Arg7243_0 = Arg7243[0];
  return (function() {
  return Shen.pr(Shen.error_to_string(Arg7243_0), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.loop"];





Shen.fns["version"] = [Shen.type_func, function shen_user_lambda7246(Arg7245) {
  if (Arg7245.length < 1) return [Shen.type_func, shen_user_lambda7246, 1, Arg7245];
  var Arg7245_0 = Arg7245[0];
  return (Shen.globals["*version*"] = Arg7245_0)}, 1, [], "version"];





Shen.call_toplevel(function shen_toplevel7249(Arg7247) {
  if (Arg7247.length < 0) return [Shen.type_func, shen_toplevel7249, 0, Arg7247];
  return (function() {
  return Shen.call_tail(Shen.fns["version"], ["version 10"]);})});




Shen.fns["shen.credits"] = [Shen.type_func, function shen_user_lambda7251(Arg7250) {
  if (Arg7250.length < 0) return [Shen.type_func, shen_user_lambda7251, 0, Arg7250];
  return (Shen.call(Shen.fns["shen.prhush"], ["\x0aShen 2010, copyright (C) 2010 Mark Tarver\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], ["released under the Shen license\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [("www.shenlanguage.org, " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*version*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [("running under " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*language*"]), (", implementation: " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*implementation*"]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0aport " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*port*"]), (" ported by " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*porters*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.credits"];





Shen.fns["shen.initialise_environment"] = [Shen.type_func, function shen_user_lambda7253(Arg7252) {
  if (Arg7252.length < 0) return [Shen.type_func, shen_user_lambda7253, 0, Arg7252];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [[Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*infs*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*process-counter*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*catch*"], [Shen.type_cons, 0, []]]]]]]]]]);})}, 0, [], "shen.initialise_environment"];





Shen.fns["shen.multiple-set"] = [Shen.type_func, function shen_user_lambda7255(Arg7254) {
  if (Arg7254.length < 1) return [Shen.type_func, shen_user_lambda7255, 1, Arg7254];
  var Arg7254_0 = Arg7254[0];
  return ((Shen.empty$question$(Arg7254_0))
  ? []
  : (((Shen.is_type(Arg7254_0, Shen.type_cons) && Shen.is_type(Arg7254_0[2], Shen.type_cons)))
  ? ((Shen.globals[Arg7254_0[1][1]] = Arg7254_0[2][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [Arg7254_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiple-set"]]);})))}, 1, [], "shen.multiple-set"];





Shen.fns["destroy"] = [Shen.type_func, function shen_user_lambda7257(Arg7256) {
  if (Arg7256.length < 1) return [Shen.type_func, shen_user_lambda7257, 1, Arg7256];
  var Arg7256_0 = Arg7256[0];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg7256_0, []]);})}, 1, [], "destroy"];





Shen.call_toplevel(function shen_toplevel7260(Arg7258) {
  if (Arg7258.length < 0) return [Shen.type_func, shen_toplevel7260, 0, Arg7258];
  return (Shen.globals["shen.*history*"] = [])});




Shen.fns["shen.read-evaluate-print"] = [Shen.type_func, function shen_user_lambda7262(Arg7261) {
  if (Arg7261.length < 0) return [Shen.type_func, shen_user_lambda7262, 0, Arg7261];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.toplineread"], [])),
  (R1 = (Shen.globals["shen.*history*"])),
  (R0 = Shen.call(Shen.fns["shen.retrieve-from-history-if-needed"], [R0, R1])),
  Shen.call(Shen.fns["shen.update_history"], [R0, R1]),
  (R1 = Shen.call(Shen.fns["fst"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel"], [R1]);}))}, 0, [], "shen.read-evaluate-print"];





Shen.fns["shen.retrieve-from-history-if-needed"] = [Shen.type_func, function shen_user_lambda7264(Arg7263) {
  if (Arg7263.length < 2) return [Shen.type_func, shen_user_lambda7264, 2, Arg7263];
  var Arg7263_0 = Arg7263[0], Arg7263_1 = Arg7263[1];
  var R0;
  return (((Shen.is_type(Arg7263_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7263_0]), Shen.type_cons) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7263_0])[2], Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg7263_0])[2][2]) && (Shen.is_type(Arg7263_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7263_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7263_0])[2][1], Shen.call(Shen.fns["shen.exclamation"], []))))))))))
  ? (Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg7263_1[1]])]),
  Arg7263_1[1])
  : (((Shen.is_type(Arg7263_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7263_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7263_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg7263_0])[2], Arg7263_1])),
  (R0 = Shen.call(Shen.fns["head"], [Shen.call(Shen.fns["shen.find-past-inputs"], [R0, Arg7263_1])])),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [R0])]),
  R0)
  : (((Shen.is_type(Arg7263_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7263_0]), Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg7263_0])[2]) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7263_0])[1], Shen.call(Shen.fns["shen.percent"], [])))))))
  ? (Shen.call(Shen.fns["shen.print-past-inputs"], [[Shen.type_func, function shen_user_lambda7266(Arg7265) {
  if (Arg7265.length < 1) return [Shen.type_func, shen_user_lambda7266, 1, Arg7265];
  var Arg7265_0 = Arg7265[0];
  return true}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg7263_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : (((Shen.is_type(Arg7263_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7263_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7263_0])[1], Shen.call(Shen.fns["shen.percent"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg7263_0])[2], Arg7263_1])),
  Shen.call(Shen.fns["shen.print-past-inputs"], [R0, Shen.call(Shen.fns["reverse"], [Arg7263_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : Arg7263_0))))}, 2, [], "shen.retrieve-from-history-if-needed"];





Shen.fns["shen.percent"] = [Shen.type_func, function shen_user_lambda7268(Arg7267) {
  if (Arg7267.length < 0) return [Shen.type_func, shen_user_lambda7268, 0, Arg7267];
  return 37}, 0, [], "shen.percent"];





Shen.fns["shen.exclamation"] = [Shen.type_func, function shen_user_lambda7270(Arg7269) {
  if (Arg7269.length < 0) return [Shen.type_func, shen_user_lambda7270, 0, Arg7269];
  return 33}, 0, [], "shen.exclamation"];





Shen.fns["shen.prbytes"] = [Shen.type_func, function shen_user_lambda7272(Arg7271) {
  if (Arg7271.length < 1) return [Shen.type_func, shen_user_lambda7272, 1, Arg7271];
  var Arg7271_0 = Arg7271[0];
  return (Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7274(Arg7273) {
  if (Arg7273.length < 1) return [Shen.type_func, shen_user_lambda7274, 1, Arg7273];
  var Arg7273_0 = Arg7273[0];
  return (function() {
  return Shen.pr(Shen.n_$gt$string(Arg7273_0), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined], Arg7271_0]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 1, [], "shen.prbytes"];





Shen.fns["shen.update_history"] = [Shen.type_func, function shen_user_lambda7276(Arg7275) {
  if (Arg7275.length < 2) return [Shen.type_func, shen_user_lambda7276, 2, Arg7275];
  var Arg7275_0 = Arg7275[0], Arg7275_1 = Arg7275[1];
  return (Shen.globals["shen.*history*"] = [Shen.type_cons, Arg7275_0, Arg7275_1])}, 2, [], "shen.update_history"];





Shen.fns["shen.toplineread"] = [Shen.type_func, function shen_user_lambda7278(Arg7277) {
  if (Arg7277.length < 0) return [Shen.type_func, shen_user_lambda7278, 0, Arg7277];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), []]);})}, 0, [], "shen.toplineread"];





Shen.fns["shen.toplineread_loop"] = [Shen.type_func, function shen_user_lambda7280(Arg7279) {
  if (Arg7279.length < 2) return [Shen.type_func, shen_user_lambda7280, 2, Arg7279];
  var Arg7279_0 = Arg7279[0], Arg7279_1 = Arg7279[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7279_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg7279_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg7279_1, [Shen.type_func, function shen_user_lambda7282(Arg7281) {
  if (Arg7281.length < 1) return [Shen.type_func, shen_user_lambda7282, 1, Arg7281];
  var Arg7281_0 = Arg7281[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg7279_1, [Shen.type_cons, Arg7279_0, []]])]);})
  : [Shen.fns['shen.tuple'], R0, Arg7279_1]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg7279_1, [Shen.type_cons, Arg7279_0, []]])]);})))}, 2, [], "shen.toplineread_loop"];





Shen.fns["shen.hat"] = [Shen.type_func, function shen_user_lambda7284(Arg7283) {
  if (Arg7283.length < 0) return [Shen.type_func, shen_user_lambda7284, 0, Arg7283];
  return 94}, 0, [], "shen.hat"];





Shen.fns["shen.newline"] = [Shen.type_func, function shen_user_lambda7286(Arg7285) {
  if (Arg7285.length < 0) return [Shen.type_func, shen_user_lambda7286, 0, Arg7285];
  return 10}, 0, [], "shen.newline"];





Shen.fns["shen.carriage-return"] = [Shen.type_func, function shen_user_lambda7288(Arg7287) {
  if (Arg7287.length < 0) return [Shen.type_func, shen_user_lambda7288, 0, Arg7287];
  return 13}, 0, [], "shen.carriage-return"];





Shen.fns["tc"] = [Shen.type_func, function shen_user_lambda7290(Arg7289) {
  if (Arg7289.length < 1) return [Shen.type_func, shen_user_lambda7290, 1, Arg7289];
  var Arg7289_0 = Arg7289[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7289_0)))
  ? (Shen.globals["shen.*tc*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7289_0)))
  ? (Shen.globals["shen.*tc*"] = false)
  : (function() {
  return Shen.simple_error("tc expects a + or -");})))}, 1, [], "tc"];





Shen.fns["shen.prompt"] = [Shen.type_func, function shen_user_lambda7292(Arg7291) {
  if (Arg7291.length < 0) return [Shen.type_func, shen_user_lambda7292, 0, Arg7291];
  return (((Shen.globals["shen.*tc*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "+) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "-) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.prompt"];





Shen.fns["shen.toplevel"] = [Shen.type_func, function shen_user_lambda7294(Arg7293) {
  if (Arg7293.length < 1) return [Shen.type_func, shen_user_lambda7294, 1, Arg7293];
  var Arg7293_0 = Arg7293[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg7293_0, (Shen.globals["shen.*tc*"])]);})}, 1, [], "shen.toplevel"];





Shen.fns["shen.find-past-inputs"] = [Shen.type_func, function shen_user_lambda7296(Arg7295) {
  if (Arg7295.length < 2) return [Shen.type_func, shen_user_lambda7296, 2, Arg7295];
  var Arg7295_0 = Arg7295[0], Arg7295_1 = Arg7295[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.find"], [Arg7295_0, Arg7295_1])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("input not found\x0a");})
  : R0))}, 2, [], "shen.find-past-inputs"];





Shen.fns["shen.make-key"] = [Shen.type_func, function shen_user_lambda7298(Arg7297) {
  if (Arg7297.length < 2) return [Shen.type_func, shen_user_lambda7298, 2, Arg7297];
  var Arg7297_0 = Arg7297[0], Arg7297_1 = Arg7297[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg7297_0, [Shen.type_func, function shen_user_lambda7300(Arg7299) {
  if (Arg7299.length < 1) return [Shen.type_func, shen_user_lambda7300, 1, Arg7299];
  var Arg7299_0 = Arg7299[0];
  return ((Shen.is_type(Arg7299_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg7299_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]])[1]),
  ((Shen.call(Shen.fns["integer?"], [R0]))
  ? [Shen.type_func, function shen_user_lambda7302(Arg7301) {
  if (Arg7301.length < 3) return [Shen.type_func, shen_user_lambda7302, 3, Arg7301];
  var Arg7301_0 = Arg7301[0], Arg7301_1 = Arg7301[1], Arg7301_2 = Arg7301[2];
  return Shen.$eq$(Arg7301_2, Shen.call(Shen.fns["nth"], [(Arg7301_0 + 1), Shen.call(Shen.fns["reverse"], [Arg7301_1])]))}, 3, [R0, Arg7297_1], undefined]
  : [Shen.type_func, function shen_user_lambda7304(Arg7303) {
  if (Arg7303.length < 2) return [Shen.type_func, shen_user_lambda7304, 2, Arg7303];
  var Arg7303_0 = Arg7303[0], Arg7303_1 = Arg7303[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg7303_0, Shen.call(Shen.fns["shen.trim-gubbins"], [Shen.call(Shen.fns["snd"], [Arg7303_1])])]);})}, 2, [Arg7297_0], undefined]))}, 2, [], "shen.make-key"];





Shen.fns["shen.trim-gubbins"] = [Shen.type_func, function shen_user_lambda7306(Arg7305) {
  if (Arg7305.length < 1) return [Shen.type_func, shen_user_lambda7306, 1, Arg7305];
  var Arg7305_0 = Arg7305[0];
  return (((Shen.is_type(Arg7305_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7305_0[1], Shen.call(Shen.fns["shen.space"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7305_0[2]]);})
  : (((Shen.is_type(Arg7305_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7305_0[1], Shen.call(Shen.fns["shen.newline"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7305_0[2]]);})
  : (((Shen.is_type(Arg7305_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7305_0[1], Shen.call(Shen.fns["shen.carriage-return"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7305_0[2]]);})
  : (((Shen.is_type(Arg7305_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7305_0[1], Shen.call(Shen.fns["shen.tab"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7305_0[2]]);})
  : (((Shen.is_type(Arg7305_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7305_0[1], Shen.call(Shen.fns["shen.left-round"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7305_0[2]]);})
  : Arg7305_0)))))}, 1, [], "shen.trim-gubbins"];





Shen.fns["shen.space"] = [Shen.type_func, function shen_user_lambda7308(Arg7307) {
  if (Arg7307.length < 0) return [Shen.type_func, shen_user_lambda7308, 0, Arg7307];
  return 32}, 0, [], "shen.space"];





Shen.fns["shen.tab"] = [Shen.type_func, function shen_user_lambda7310(Arg7309) {
  if (Arg7309.length < 0) return [Shen.type_func, shen_user_lambda7310, 0, Arg7309];
  return 9}, 0, [], "shen.tab"];





Shen.fns["shen.left-round"] = [Shen.type_func, function shen_user_lambda7312(Arg7311) {
  if (Arg7311.length < 0) return [Shen.type_func, shen_user_lambda7312, 0, Arg7311];
  return 40}, 0, [], "shen.left-round"];





Shen.fns["shen.find"] = [Shen.type_func, function shen_user_lambda7314(Arg7313) {
  if (Arg7313.length < 2) return [Shen.type_func, shen_user_lambda7314, 2, Arg7313];
  var Arg7313_0 = Arg7313[0], Arg7313_1 = Arg7313[1];
  return ((Shen.empty$question$(Arg7313_1))
  ? []
  : (((Shen.is_type(Arg7313_1, Shen.type_cons) && Shen.call(Arg7313_0, [Arg7313_1[1]])))
  ? [Shen.type_cons, Arg7313_1[1], Shen.call(Shen.fns["shen.find"], [Arg7313_0, Arg7313_1[2]])]
  : ((Shen.is_type(Arg7313_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.find"], [Arg7313_0, Arg7313_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.find"]]);}))))}, 2, [], "shen.find"];





Shen.fns["shen.prefix?"] = [Shen.type_func, function shen_user_lambda7316(Arg7315) {
  if (Arg7315.length < 2) return [Shen.type_func, shen_user_lambda7316, 2, Arg7315];
  var Arg7315_0 = Arg7315[0], Arg7315_1 = Arg7315[1];
  return ((Shen.empty$question$(Arg7315_0))
  ? true
  : (((Shen.is_type(Arg7315_0, Shen.type_cons) && (Shen.is_type(Arg7315_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7315_1[1], Arg7315_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg7315_0[2], Arg7315_1[2]]);})
  : false))}, 2, [], "shen.prefix?"];





Shen.fns["shen.print-past-inputs"] = [Shen.type_func, function shen_user_lambda7318(Arg7317) {
  if (Arg7317.length < 3) return [Shen.type_func, shen_user_lambda7318, 3, Arg7317];
  var Arg7317_0 = Arg7317[0], Arg7317_1 = Arg7317[1], Arg7317_2 = Arg7317[2];
  return ((Shen.empty$question$(Arg7317_1))
  ? [Shen.type_symbol, "_"]
  : (((Shen.is_type(Arg7317_1, Shen.type_cons) && (!Shen.call(Arg7317_0, [Arg7317_1[1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg7317_0, Arg7317_1[2], (Arg7317_2 + 1)]);})
  : (((Shen.is_type(Arg7317_1, Shen.type_cons) && Shen.is_type(Arg7317_1[1], Shen.fns['shen.tuple'])))
  ? (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg7317_2, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg7317_1[1]])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg7317_0, Arg7317_1[2], (Arg7317_2 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.print-past-inputs"]]);}))))}, 3, [], "shen.print-past-inputs"];





Shen.fns["shen.toplevel_evaluate"] = [Shen.type_func, function shen_user_lambda7320(Arg7319) {
  if (Arg7319.length < 2) return [Shen.type_func, shen_user_lambda7320, 2, Arg7319];
  var Arg7319_0 = Arg7319[0], Arg7319_1 = Arg7319[1];
  var R0;
  return (((Shen.is_type(Arg7319_0, Shen.type_cons) && (Shen.is_type(Arg7319_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg7319_0[2][1])) && (Shen.is_type(Arg7319_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7319_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7319_1))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg7319_0[1], Arg7319_0[2][2][1]]);})
  : (((Shen.is_type(Arg7319_0, Shen.type_cons) && Shen.is_type(Arg7319_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.toplevel_evaluate"], [[Shen.type_cons, Arg7319_0[1], []], Arg7319_1]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg7319_0[2], Arg7319_1]);}))
  : (((Shen.is_type(Arg7319_0, Shen.type_cons) && (Shen.empty$question$(Arg7319_0[2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7319_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg7319_0[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);})
  : (((Shen.is_type(Arg7319_0, Shen.type_cons) && (Shen.empty$question$(Arg7319_0[2]) && Shen.unwind_tail(Shen.$eq$(false, Arg7319_1)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7319_0[1]])),
  (function() {
  return Shen.call_tail(Shen.fns["print"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.toplevel_evaluate"]]);})))))}, 2, [], "shen.toplevel_evaluate"];





Shen.fns["shen.typecheck-and-evaluate"] = [Shen.type_func, function shen_user_lambda7322(Arg7321) {
  if (Arg7321.length < 2) return [Shen.type_func, shen_user_lambda7322, 2, Arg7321];
  var Arg7321_0 = Arg7321[0], Arg7321_1 = Arg7321[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg7321_0, Arg7321_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (function() {
  return Shen.simple_error("type error\x0a");})
  : ((R1 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7321_0])),
  (R0 = Shen.call(Shen.fns["shen.pretty-type"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [R1, (" : " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], [])]);}))))}, 2, [], "shen.typecheck-and-evaluate"];





Shen.fns["shen.pretty-type"] = [Shen.type_func, function shen_user_lambda7324(Arg7323) {
  if (Arg7323.length < 1) return [Shen.type_func, shen_user_lambda7324, 1, Arg7323];
  var Arg7323_0 = Arg7323[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [(Shen.globals["shen.*alphabet*"]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg7323_0]), Arg7323_0]);})}, 1, [], "shen.pretty-type"];





Shen.fns["shen.extract-pvars"] = [Shen.type_func, function shen_user_lambda7326(Arg7325) {
  if (Arg7325.length < 1) return [Shen.type_func, shen_user_lambda7326, 1, Arg7325];
  var Arg7325_0 = Arg7325[0];
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg7325_0]))
  ? [Shen.type_cons, Arg7325_0, []]
  : ((Shen.is_type(Arg7325_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract-pvars"], [Arg7325_0[1]]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg7325_0[2]])]);})
  : []))}, 1, [], "shen.extract-pvars"];





Shen.fns["shen.mult_subst"] = [Shen.type_func, function shen_user_lambda7328(Arg7327) {
  if (Arg7327.length < 3) return [Shen.type_func, shen_user_lambda7328, 3, Arg7327];
  var Arg7327_0 = Arg7327[0], Arg7327_1 = Arg7327[1], Arg7327_2 = Arg7327[2];
  return ((Shen.empty$question$(Arg7327_0))
  ? Arg7327_2
  : ((Shen.empty$question$(Arg7327_1))
  ? Arg7327_2
  : (((Shen.is_type(Arg7327_0, Shen.type_cons) && Shen.is_type(Arg7327_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [Arg7327_0[2], Arg7327_1[2], Shen.call(Shen.fns["subst"], [Arg7327_0[1], Arg7327_1[1], Arg7327_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mult_subst"]]);}))))}, 3, [], "shen.mult_subst"];



