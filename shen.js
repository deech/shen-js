/*
The License
-----------
The user is free to produce commercial applications with the software, to
distribute these applications in source or binary form, and to charge monies
for them as he sees fit and in concordance with the laws of the land subject
to the following license.
 
1. The license applies to all the software and all derived software and must
   appear on such.

2. It is illegal to distribute the software without this license attached to
	 it and use of the software implies agreement with the license as such. It
	 is illegal for anyone who is not the copyright holder to tamper with or
	 change the license.

3. Neither the names of Lambda Associates or the copyright holder may be used
	 to endorse or promote products built using the software without specific
	 prior written permission from the copyright holder.

4. That possession of this license does not confer on the copyright holder any
	 special contractual obligation towards the user. That in no event shall the
	 copyright holder be liable for any direct, indirect, incidental, special,
	 exemplary or consequential damages (including but not limited to
	 procurement of substitute goods or services, loss of use, data, or profits;
	 or business interruption), however caused and on any theory of liability,
	 whether in contract, strict liability or tort (including negligence)
	 arising in any way out of the use of the software, even if advised of the
	 possibility of such damage.

5. It is permitted for the user to change the software, for the purpose of
	 improving performance, correcting an error, or porting to a new platform,
	 and distribute the modified version of Shen (hereafter the modified
	 version) provided the resulting program conforms in all respects to the
	 Shen standard and is issued under that title. The user must make it clear
	 with his distribution that he/she is the author of the changes and what
	 these changes are and why.

6. Derived versions of this software in whatever form are subject to the same
	 restrictions. In particular it is not permitted to make derived copies of
	 this software which do not conform to the Shen standard or appear under a
	 different title.

7. It is permitted to distribute versions of Shen which incorporate libraries,
	 graphics or other facilities which are not part of the Shen standard.

For an explication of this license see
[http://www.lambdassociates.org/News/june11/license.htm] which explains this
license in full.
*/

Shen = {}

Shen.globals = {}

Shen.globals["*language*"] = "Javascript"
Shen.globals["*implementation*"] = "cli"
Shen.globals["*port*"] = Shen.version = "0.10.1"
Shen.globals["*porters*"] = Shen.author = "Ramil Farkhshatov"

Shen.Tag = function(name) {
  this.toString = function() {
    return "#<Shen.Tag " + name + ">"
  }
}

Shen.fail_obj = new Object
Shen.fns = {}

Shen.type_func = new Shen.Tag('func')
Shen.type_symbol = new Shen.Tag('sym')
Shen.type_cons = new Shen.Tag('cons')
Shen.type_stream_in = new Shen.Tag('stream_in')
Shen.type_stream_out = new Shen.Tag('stream_out')
Shen.type_stream_inout = new Shen.Tag('stream_inout')
Shen.type_error = new Shen.Tag('error')

Shen.Freeze = function(vars, fn) {
  this.vars = vars
  this.fn = fn
}

Shen.mkfunction = function(name, nargs, fn) {
  var x = [Shen.type_func, fn, nargs, [], name]
  Shen.fns[name] = x
  return x
}

Shen.call_tail = function(x, args) {
  var j = 0, nargs = args.length
  for (;;) {
    if (typeof(x) == "function") {
      x = x([args[j++]])
    } else if (x[0] == Shen.type_func) {
      var c = x[3], n = c.length, k = x[2], a
      if (!j && !n && nargs <= k) {
        a = args
        j += nargs
      } else {
        k = (k > n + nargs) ? n + nargs : k
        a = new Array(k)

        for (var i = 0; i < n; ++i)
          a[i] = c[i]
        for (;i < k && j < nargs; ++j, ++i)
          a[i] = args[j]
      }
      x = (x[1])(a)
    } else if (x[0] == Shen.type_symbol) {
      x = Shen.get_fn(x)
    } else
      return Shen.error("Shen.call: Wrong function: '" + x + "'")
    if (j >= nargs)
      return x
    while (typeof(x) == "function")
      x = x()
  }
  return x
}

Shen.call = function(x, args) {
  var x = Shen.call_tail(x, args)
  while (typeof(x) == "function")
    x = x()
  return x
}

Shen.call_by_name = function(x, args) {
  return Shen.call(Shen.fns[x], args)
}

Shen.call_toplevel = function(name) {
  var ret = Shen.call(Shen.fns[name], [])
  delete Shen.fns[name]
  return ret
}

Shen.unwind_tail = function(x) {
  while(typeof(x) == "function")
    x = x()
  return x
}

Shen.get_fn = function(x) {
  if (typeof(x) == "function")
    Shen.error("passed function into get_fn")
  switch (x[0]) {
  case Shen.type_func: return x
  case Shen.type_symbol:
    var v = Shen.fns[x[1]]
    if (v != undefined)
      return v
    Shen.error("Cannot find '" + x[1] + "'")
    return Shen.fail_obj
  }
  throw new Error("function " + x[1] + " not found")
}

Shen.thaw = function(f) {
  return f.fn(f.vars)
}

Shen.error = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts("# err: " + s + "\n")
  throw new Error(s)
  return Shen.fail_obj
}

Shen.error_to_string = function(s) {
  var stack = s.stack;
  var show = (stack !== undefined);
  show &= Shen.is_true(Shen.globals["shenjs.*show-error-stack*"]);
  return (show) ? ("" + s + " " + stack) : ("" + s);
}

Shen.get_time = function(x) {
  return (new Date()).getTime() / 1000.0
}

Shen.simple_error = Shen.error
Shen.log_eq = false

Shen.trap_error = function(fn, handler) {
  try {
    return fn()
  } catch (e) {
    return Shen.call(handler, [e])
  }
}

Shen.notrap_error = function(fn, handler) {
  return fn()
}

Shen.equal_boolean = function(b, x) {
  return ((x instanceof Array)
          && x[0] == Shen.type_symbol
          && ((x[1] == "true" && b === true)
              || (x[1] == "false" && b === false)))
}

Shen.equal_function = function(f, x) {
  return (x[0] == Shen.type_symbol && f[0] == Shen.type_func && x[1] == f[4])
}

Shen.$eq$ = function(x, y) {
  if (x === y)
    return true
  var tx = typeof(x), ty = typeof(y)
  if (tx != ty)
    return ((tx == "boolean" && Shen.equal_boolean(x, y))
            || (ty == "boolean" && Shen.equal_boolean(y, x)))
  switch (tx) {
  case "number":
  case "boolean":
  case "function":
  case "string":
    return x == y;

  case "object":
    if (x == y)
      return true

    if ((x instanceof Array) ^ (y instanceof Array))
      return false

    if (Shen.equal_function(x, y) || Shen.equal_function(y, x))
      return true
    if (x.length != y.length)
      return false
    if (x.length == 0)
      return true
    if (x == Shen.fail_obj && y == Shen.fail_obj)
      return true
    if (x[0] != y[0])
      return false
    switch (x[0]) {
    case Shen.type_func:
     if (x[1] != y[1] || x[2] != y[2])
        return false
      var n = x[3].length
      if (n != y[3].length)
        return false
      for (var i = 0; i < n; ++i)
        if (x[3][i] != y[3][i])
          return false
      return true
    case Shen.type_symbol: return x[1] == y[1];
    case Shen.type_cons:
      var r = Shen.$eq$(x[1], y[1])
      while (typeof(r) == "function")
        r = r()
      if (!r)
        return false
      return (function() {
        var r = Shen.$eq$(x[2], y[2])
        while (typeof(r) == "function")
          r = r()
        return r
      });
    case Shen.type_stream_out:
    case Shen.type_stream_in: return x[1] == y[1] && x[2] == y[2];
    default:
      for (var i = 1; i < x.length; ++i) {
        var r = Shen.$eq$(x[i], y[i])
        while (typeof(r) == "function")
          r = r()
        if (!r)
          return false;
      }
      return true;
    }
    break;
  default: return false;
  }
}

Shen.empty$question$ = function(x) {
  return ((x instanceof Array) && !x.length)
}

Shen.is_type = function(x, type) {
  if (type == Shen.type_symbol && (x === true || x === false))
    return true
  return ((x instanceof Array) && x[0] == type)
}

Shen.boolean$question$ = function(x) {
  return (typeof(x) == "boolean") || (Shen.is_type(x, Shen.type_symbol)
                                      && (x[1] == "true" || x[1] == "false"))
}

Shen.vector$question$ = function(x) {
  return ((x instanceof Array) && x[0] > 0)
}

Shen.absvector$question$ = function(x) {
  return ((x instanceof Array) && x.length > 0
          && (!(x[0] instanceof Shen.Tag)))
}

Shen.absvector = function(n) {
  var ret = new Array(n)
  for (var i = 0; i < n; ++i)
    ret[i] = Shen.fail_obj
  return ret
}

Shen.dbg_princ = function(s, x) {
  dbg_print(" " + s + x)
  return x
}

Shen.dbg_print = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts(s + "\n")
}

Shen.is_true = function(x) {
  return x != false || ((x instanceof Array)
                        && (x[0] == Shen.type_symbol)
                        && (x[1] != "false"))
}

Shen.absvector_ref = function(x, i) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  return x[i]
}

Shen.absvector_set = function(x, i, v) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  x[i] = v
  return x
}

Shen.value = function(x) {
  var y = Shen.globals[s[1]]
  if (y === undefined)
    Shen.error("The variable " + x + " is unbound.")
  else
    return y
}

Shen.vector = function(n) {
  var r = new Array(n + 1)
  r[0] = n
  for (var i = 1; i <= n; ++i)
    r[i] = Shen.fail_obj
  return r
}

Shen.esc = function(x) {
  var ret = ""
  for (var i = 0; i < x.length; ++i)
    switch (x[i]) {
      case '"': ret += '\\"'; break;
      default: ret += x[i]; break
    }
  return ret
}

Shen.str = function(x) {
  var err = " is not an atom in Shen; str cannot print it to a string."
  switch (typeof(x)) {
    case "string": return "\"" + Shen.esc(x) + "\""
    case "number":
    case "boolean": return "" + x
    case "function":
      return "#<function>"
    case "object":
      if (x == Shen.fail_obj)
        return "fail!"
      if (x instanceof Array) {
        if (x.length <= 0) {
          Shen.error("[]" + err)
          return Shen.fail_obj
        }
        switch (x[0]) {
          case Shen.type_symbol: return x[1]
          case Shen.type_func:
            if (!x[3].length && x[4] != undefined)
              return x[4]
            if (Shen.is_true(Shen.globals['shenjs.*show-func-js*']))
              Shen.io.puts("\n func: " + x + "\n\n")
            return (x[3].length == 0) ? "#<function>" : "#<closure>"
        }
      }
  }
  Shen.error([x + err])
  return Shen.fail_obj
}

Shen.intern = function(x) {
  switch (x) {
  case "true": return true
  case "false": return false
  default: return [Shen.type_symbol, x]
  }
}

Shen.tlstr = function(x) {
  if (x == "")
    return [Shen.type_symbol, "shen_eos"]
  return x.substring(1, x.length)
}

Shen.n_$gt$string = function(x) {
  return String.fromCharCode(x)
}

Shen.string_$gt$n = function(x) {
  return x.charCodeAt(0)
}

Shen.eval_in_global = function(x) {
  try {
    var g = window;
  } catch (e) {
    var g = this;
  }
  if (g.execScript) // eval in global scope for IE
    return g.execScript(x);
  else // other browsers
    return eval.call(null, x);
}

Shen.eval_kl = function(x) {
  var log = false
  if (Shen.is_true(Shen.globals['shenjs.*show-eval-js*']))
    log = true
  if (log) {
    Shen.io.puts("# eval-kl[KL]: " + "\n")
    Shen.io.puts(Shen.call_by_name("intmake-string",
                                   ["~R~%", [Shen.fns["shen_tuple"], x, []]]))
  }
  var js = Shen.call_by_name("js-from-kl", [x])
  if (log)
    Shen.io.puts("eval-kl[JS]:\n" + js + "\n\n")
  var ret = Shen.eval_in_global(js)
  if (log)
    Shen.io.puts("eval-kl => '" + ret + "'\n\n")
  if (ret === undefined)
    Shen.error("evaluated '" + js + "' to undefined")
  return ret
}

Shen.mkfunction("shenjs.load", 1, function self(x) {
  if (x.length < 1) return [Shen.type_func, self, 1, x]
  return (function() {
    load(x)
    return []
  })
})

Shen.file_instream_get = function(stream, s, pos) {
  if (s.length <= pos) {
    stream[1] = (function() {return -1})
    return -1
  }
  stream[1] = (function() {
    return Shen.file_instream_get(stream, s, pos + 1)
  })
  return s.charCodeAt(pos)
}

Shen.read_byte = function(stream) {
 switch (stream[0]) {
    case Shen.type_stream_in: return stream[1]()
    case Shen.type_stream_inout: return Shen.read_byte(stream[1])
    default:
      Shen.error("read-byte: Wrong stream type.")
      return -1;
  }
}

Shen.write_byte = function(byte, stream) {
 switch (stream[0]) {
    case Shen.type_stream_out: stream[1](byte); break;
    case Shen.type_stream_inout: Shen.write_byte(byte, stream[2]); break;
    default: Shen.error("write-byte: Wrong stream type.")
  }
  return []
}

Shen.close = function(stream) {
  switch (stream[0]) {
    case Shen.type_stream_in:
      stream[2]()
      stream[1] = (function() {return -1});
      break;
    case Shen.type_stream_out:
      stream[2]()
      stream[1] = (function(_) {return []});
      break;
    case Shen.type_stream_inout:
      Shen.close(stream[1])
      Shen.close(stream[2])
      break;
  }
  return []
}

Shen.repl_write_byte = function(byte) {
  Shen.io.puts(String.fromCharCode(byte))
}

Shen.repl_read_byte = function (stream, s, pos) {
  if (s == null) {
    stream[1] = (function() {return -1})
    quit()
    return -1
  } else if (pos >= s.length) {
    stream[1] = (function() {
      return Shen.repl_read_byte(stream, Shen.io.gets(), 0)
    })
    return Shen.call_by_name("shen.newline", [])
  } else {
    stream[1] = (function() {
      return Shen.repl_read_byte(stream, s, pos + 1)
    })
  }
  return s.charCodeAt(pos)
}

Shen.pr = function(s, stream) {
  for (i = 0; i < s.length; ++i)
    Shen.write_byte(s.charCodeAt(i), stream)
  return s
}

Shen.mkfunction("shenjs.exit", 1, function self(x) {quit()})
Shen.globals["js.skip-internals"] = true

Shen.globals["shenjs.*show-error-js*"] = false
Shen.globals["shenjs.*show-error-stack*"] = false
Shen.globals["shenjs.*show-eval-js*"] = false
Shen.globals["shenjs.*show-func-js*"] = false
Shen.globals["shenjs.*dbg-js*"] = false
Shen.globals["*home-directory*"] = ""

/* dummy functions to bypass defstruct's declarations */
Shen.mkfunction("shen.process-datatype", 2, function(_) {return []})
Shen.mkfunction("compile", 3, function(_) {return []})
Shen.mkfunction("declare", 2, function(_) {return []})

Shen.console_io = {
  open: function(type, name, dir) {
    if (type[1] != "file")
      return Shen.fail_obj
    var filename = Shen.globals["*home-directory*"] + name
    if (dir[1] == "in") {
      try {
        var s = read(filename)
      } catch(e) {
        Shen.error(e)
        return Shen.fail_obj
      }
      var stream = [Shen.type_stream_in, null, function(){}]
      stream[1] = (function() {
        return Shen.file_instream_get(stream, s, 0)
      })
      return stream
    } else if (dir[1] == "out") {
      Shen.error("Writing files is not supported in cli interpreter")
      return Shen.fail_obj
    }
    Shen.error("Unsupported open flags")
    return Shen.fail_obj
  },

  init: function() {
    try {
      this.puts = putstr;
    } catch (e) {
      this.puts = write;
    }
    this.gets = readline;
    var fout = [Shen.type_stream_out,
                function(byte) {return Shen.repl_write_byte(byte)},
                function() {}]
    Shen.globals["*stoutput*"] = fout
    
    var fin = [Shen.type_stream_in, null, quit]
    fin[1] = (function() {
      return Shen.repl_read_byte(fin, Shen.io.gets(), 0)
    })
    
    var finout = [Shen.type_stream_inout, fin, fout]
    Shen.globals["*stinput*"] = finout
  }
}

Shen.init = function(conf) {
  Shen.io = conf.io
  Shen.io.init()
  function assert_io(func) {
    if (Shen.io[func] === undefined)
      throw new Error("Shen: IO has no method " + func)
  }
  assert_io('gets')
  assert_io('puts')
  assert_io('open')
  if (conf.start_repl)
    Shen.call_by_name("shen.shen", [])
}

Shen.console_repl = function () {
  Shen.init({io: Shen.console_io, start_repl: true})
}

try {
  module.exports = Shen
} catch (e) {}


Shen.fns["hd"] = [Shen.type_func, function shen_user_lambda5580(Arg5579) {
  if (Arg5579.length < 1) return [Shen.type_func, shen_user_lambda5580, 1, Arg5579];
  var Arg5579_0 = Arg5579[0];
  return Arg5579_0[1]}, 1, [], "hd"];






Shen.fns["tl"] = [Shen.type_func, function shen_user_lambda5582(Arg5581) {
  if (Arg5581.length < 1) return [Shen.type_func, shen_user_lambda5582, 1, Arg5581];
  var Arg5581_0 = Arg5581[0];
  return Arg5581_0[2]}, 1, [], "tl"];






Shen.fns["not"] = [Shen.type_func, function shen_user_lambda5584(Arg5583) {
  if (Arg5583.length < 1) return [Shen.type_func, shen_user_lambda5584, 1, Arg5583];
  var Arg5583_0 = Arg5583[0];
  return (!Arg5583_0)}, 1, [], "not"];






Shen.fns["thaw"] = [Shen.type_func, function shen_user_lambda5586(Arg5585) {
  if (Arg5585.length < 1) return [Shen.type_func, shen_user_lambda5586, 1, Arg5585];
  var Arg5585_0 = Arg5585[0];
  return Shen.thaw(Arg5585_0)}, 1, [], "thaw"];






Shen.fns["string?"] = [Shen.type_func, function shen_user_lambda5588(Arg5587) {
  if (Arg5587.length < 1) return [Shen.type_func, shen_user_lambda5588, 1, Arg5587];
  var Arg5587_0 = Arg5587[0];
  return (typeof(Arg5587_0) == 'string')}, 1, [], "string?"];






Shen.fns["number?"] = [Shen.type_func, function shen_user_lambda5590(Arg5589) {
  if (Arg5589.length < 1) return [Shen.type_func, shen_user_lambda5590, 1, Arg5589];
  var Arg5589_0 = Arg5589[0];
  return (typeof(Arg5589_0) == 'number')}, 1, [], "number?"];






Shen.fns["symbol?"] = [Shen.type_func, function shen_user_lambda5592(Arg5591) {
  if (Arg5591.length < 1) return [Shen.type_func, shen_user_lambda5592, 1, Arg5591];
  var Arg5591_0 = Arg5591[0];
  return Shen.is_type(Arg5591_0, Shen.type_symbol)}, 1, [], "symbol?"];






Shen.fns["cons?"] = [Shen.type_func, function shen_user_lambda5594(Arg5593) {
  if (Arg5593.length < 1) return [Shen.type_func, shen_user_lambda5594, 1, Arg5593];
  var Arg5593_0 = Arg5593[0];
  return Shen.is_type(Arg5593_0, Shen.type_cons)}, 1, [], "cons?"];






Shen.fns["vector?"] = [Shen.type_func, function shen_user_lambda5596(Arg5595) {
  if (Arg5595.length < 1) return [Shen.type_func, shen_user_lambda5596, 1, Arg5595];
  var Arg5595_0 = Arg5595[0];
  return (function() {
  return Shen.vector$question$(Arg5595_0);})}, 1, [], "vector?"];






Shen.fns["absvector?"] = [Shen.type_func, function shen_user_lambda5598(Arg5597) {
  if (Arg5597.length < 1) return [Shen.type_func, shen_user_lambda5598, 1, Arg5597];
  var Arg5597_0 = Arg5597[0];
  return (function() {
  return Shen.absvector$question$(Arg5597_0);})}, 1, [], "absvector?"];






Shen.fns["value"] = [Shen.type_func, function shen_user_lambda5600(Arg5599) {
  if (Arg5599.length < 1) return [Shen.type_func, shen_user_lambda5600, 1, Arg5599];
  var Arg5599_0 = Arg5599[0];
  return (Shen.globals[Arg5599_0[1]])}, 1, [], "value"];






Shen.fns["intern"] = [Shen.type_func, function shen_user_lambda5602(Arg5601) {
  if (Arg5601.length < 1) return [Shen.type_func, shen_user_lambda5602, 1, Arg5601];
  var Arg5601_0 = Arg5601[0];
  return (function() {
  return Shen.intern(Arg5601_0);})}, 1, [], "intern"];






Shen.fns["vector"] = [Shen.type_func, function shen_user_lambda5604(Arg5603) {
  if (Arg5603.length < 1) return [Shen.type_func, shen_user_lambda5604, 1, Arg5603];
  var Arg5603_0 = Arg5603[0];
  return (function() {
  return Shen.vector(Arg5603_0);})}, 1, [], "vector"];






Shen.fns["read-byte"] = [Shen.type_func, function shen_user_lambda5606(Arg5605) {
  if (Arg5605.length < 1) return [Shen.type_func, shen_user_lambda5606, 1, Arg5605];
  var Arg5605_0 = Arg5605[0];
  return (function() {
  return Shen.read_byte(Arg5605_0);})}, 1, [], "read-byte"];






Shen.fns["close"] = [Shen.type_func, function shen_user_lambda5608(Arg5607) {
  if (Arg5607.length < 1) return [Shen.type_func, shen_user_lambda5608, 1, Arg5607];
  var Arg5607_0 = Arg5607[0];
  return (function() {
  return Shen.close(Arg5607_0);})}, 1, [], "close"];






Shen.fns["absvector"] = [Shen.type_func, function shen_user_lambda5610(Arg5609) {
  if (Arg5609.length < 1) return [Shen.type_func, shen_user_lambda5610, 1, Arg5609];
  var Arg5609_0 = Arg5609[0];
  return (function() {
  return Shen.absvector(Arg5609_0);})}, 1, [], "absvector"];






Shen.fns["str"] = [Shen.type_func, function shen_user_lambda5612(Arg5611) {
  if (Arg5611.length < 1) return [Shen.type_func, shen_user_lambda5612, 1, Arg5611];
  var Arg5611_0 = Arg5611[0];
  return (function() {
  return Shen.str(Arg5611_0);})}, 1, [], "str"];






Shen.fns["tlstr"] = [Shen.type_func, function shen_user_lambda5614(Arg5613) {
  if (Arg5613.length < 1) return [Shen.type_func, shen_user_lambda5614, 1, Arg5613];
  var Arg5613_0 = Arg5613[0];
  return (function() {
  return Shen.tlstr(Arg5613_0);})}, 1, [], "tlstr"];






Shen.fns["n->string"] = [Shen.type_func, function shen_user_lambda5616(Arg5615) {
  if (Arg5615.length < 1) return [Shen.type_func, shen_user_lambda5616, 1, Arg5615];
  var Arg5615_0 = Arg5615[0];
  return (function() {
  return Shen.n_$gt$string(Arg5615_0);})}, 1, [], "n->string"];






Shen.fns["string->n"] = [Shen.type_func, function shen_user_lambda5618(Arg5617) {
  if (Arg5617.length < 1) return [Shen.type_func, shen_user_lambda5618, 1, Arg5617];
  var Arg5617_0 = Arg5617[0];
  return (function() {
  return Shen.string_$gt$n(Arg5617_0);})}, 1, [], "string->n"];






Shen.fns["empty?"] = [Shen.type_func, function shen_user_lambda5620(Arg5619) {
  if (Arg5619.length < 1) return [Shen.type_func, shen_user_lambda5620, 1, Arg5619];
  var Arg5619_0 = Arg5619[0];
  return (function() {
  return Shen.empty$question$(Arg5619_0);})}, 1, [], "empty?"];






Shen.fns["get-time"] = [Shen.type_func, function shen_user_lambda5622(Arg5621) {
  if (Arg5621.length < 1) return [Shen.type_func, shen_user_lambda5622, 1, Arg5621];
  var Arg5621_0 = Arg5621[0];
  return (function() {
  return Shen.get_time(Arg5621_0);})}, 1, [], "get-time"];






Shen.fns["error"] = [Shen.type_func, function shen_user_lambda5624(Arg5623) {
  if (Arg5623.length < 1) return [Shen.type_func, shen_user_lambda5624, 1, Arg5623];
  var Arg5623_0 = Arg5623[0];
  return (function() {
  return Shen.error(Arg5623_0);})}, 1, [], "error"];






Shen.fns["simple-error"] = [Shen.type_func, function shen_user_lambda5626(Arg5625) {
  if (Arg5625.length < 1) return [Shen.type_func, shen_user_lambda5626, 1, Arg5625];
  var Arg5625_0 = Arg5625[0];
  return (function() {
  return Shen.simple_error(Arg5625_0);})}, 1, [], "simple-error"];






Shen.fns["eval-kl"] = [Shen.type_func, function shen_user_lambda5628(Arg5627) {
  if (Arg5627.length < 1) return [Shen.type_func, shen_user_lambda5628, 1, Arg5627];
  var Arg5627_0 = Arg5627[0];
  return (function() {
  return Shen.eval_kl(Arg5627_0);})}, 1, [], "eval-kl"];






Shen.fns["error-to-string"] = [Shen.type_func, function shen_user_lambda5630(Arg5629) {
  if (Arg5629.length < 1) return [Shen.type_func, shen_user_lambda5630, 1, Arg5629];
  var Arg5629_0 = Arg5629[0];
  return (function() {
  return Shen.error_to_string(Arg5629_0);})}, 1, [], "error-to-string"];






Shen.fns["js.call-js"] = [Shen.type_func, function shen_user_lambda5632(Arg5631) {
  if (Arg5631.length < 1) return [Shen.type_func, shen_user_lambda5632, 1, Arg5631];
  var Arg5631_0 = Arg5631[0];
  return (function() {
  return Shen.js$dot$call_js(Arg5631_0);})}, 1, [], "js.call-js"];






Shen.fns["+"] = [Shen.type_func, function shen_user_lambda5634(Arg5633) {
  if (Arg5633.length < 2) return [Shen.type_func, shen_user_lambda5634, 2, Arg5633];
  var Arg5633_0 = Arg5633[0], Arg5633_1 = Arg5633[1];
  return (Arg5633_0 + Arg5633_1)}, 2, [], "+"];






Shen.fns["-"] = [Shen.type_func, function shen_user_lambda5636(Arg5635) {
  if (Arg5635.length < 2) return [Shen.type_func, shen_user_lambda5636, 2, Arg5635];
  var Arg5635_0 = Arg5635[0], Arg5635_1 = Arg5635[1];
  return (Arg5635_0 - Arg5635_1)}, 2, [], "-"];






Shen.fns["*"] = [Shen.type_func, function shen_user_lambda5638(Arg5637) {
  if (Arg5637.length < 2) return [Shen.type_func, shen_user_lambda5638, 2, Arg5637];
  var Arg5637_0 = Arg5637[0], Arg5637_1 = Arg5637[1];
  return (Arg5637_0 * Arg5637_1)}, 2, [], "*"];






Shen.fns["/"] = [Shen.type_func, function shen_user_lambda5640(Arg5639) {
  if (Arg5639.length < 2) return [Shen.type_func, shen_user_lambda5640, 2, Arg5639];
  var Arg5639_0 = Arg5639[0], Arg5639_1 = Arg5639[1];
  return (Arg5639_0 / Arg5639_1)}, 2, [], "/"];






Shen.fns["and"] = [Shen.type_func, function shen_user_lambda5642(Arg5641) {
  if (Arg5641.length < 2) return [Shen.type_func, shen_user_lambda5642, 2, Arg5641];
  var Arg5641_0 = Arg5641[0], Arg5641_1 = Arg5641[1];
  return (Arg5641_0 && Arg5641_1)}, 2, [], "and"];






Shen.fns["or"] = [Shen.type_func, function shen_user_lambda5644(Arg5643) {
  if (Arg5643.length < 2) return [Shen.type_func, shen_user_lambda5644, 2, Arg5643];
  var Arg5643_0 = Arg5643[0], Arg5643_1 = Arg5643[1];
  return (Arg5643_0 || Arg5643_1)}, 2, [], "or"];






Shen.fns["="] = [Shen.type_func, function shen_user_lambda5646(Arg5645) {
  if (Arg5645.length < 2) return [Shen.type_func, shen_user_lambda5646, 2, Arg5645];
  var Arg5645_0 = Arg5645[0], Arg5645_1 = Arg5645[1];
  return Shen.$eq$(Arg5645_0, Arg5645_1)}, 2, [], "="];






Shen.fns[">"] = [Shen.type_func, function shen_user_lambda5648(Arg5647) {
  if (Arg5647.length < 2) return [Shen.type_func, shen_user_lambda5648, 2, Arg5647];
  var Arg5647_0 = Arg5647[0], Arg5647_1 = Arg5647[1];
  return (Arg5647_0 > Arg5647_1)}, 2, [], ">"];






Shen.fns[">="] = [Shen.type_func, function shen_user_lambda5650(Arg5649) {
  if (Arg5649.length < 2) return [Shen.type_func, shen_user_lambda5650, 2, Arg5649];
  var Arg5649_0 = Arg5649[0], Arg5649_1 = Arg5649[1];
  return (Arg5649_0 >= Arg5649_1)}, 2, [], ">="];






Shen.fns["<"] = [Shen.type_func, function shen_user_lambda5652(Arg5651) {
  if (Arg5651.length < 2) return [Shen.type_func, shen_user_lambda5652, 2, Arg5651];
  var Arg5651_0 = Arg5651[0], Arg5651_1 = Arg5651[1];
  return (Arg5651_0 < Arg5651_1)}, 2, [], "<"];






Shen.fns["<="] = [Shen.type_func, function shen_user_lambda5654(Arg5653) {
  if (Arg5653.length < 2) return [Shen.type_func, shen_user_lambda5654, 2, Arg5653];
  var Arg5653_0 = Arg5653[0], Arg5653_1 = Arg5653[1];
  return (Arg5653_0 <= Arg5653_1)}, 2, [], "<="];






Shen.fns["cons"] = [Shen.type_func, function shen_user_lambda5656(Arg5655) {
  if (Arg5655.length < 2) return [Shen.type_func, shen_user_lambda5656, 2, Arg5655];
  var Arg5655_0 = Arg5655[0], Arg5655_1 = Arg5655[1];
  return [Shen.type_cons, Arg5655_0, Arg5655_1]}, 2, [], "cons"];






Shen.fns["set"] = [Shen.type_func, function shen_user_lambda5658(Arg5657) {
  if (Arg5657.length < 2) return [Shen.type_func, shen_user_lambda5658, 2, Arg5657];
  var Arg5657_0 = Arg5657[0], Arg5657_1 = Arg5657[1];
  return (Shen.globals[Arg5657_0[1]] = Arg5657_1)}, 2, [], "set"];






Shen.fns["<-address"] = [Shen.type_func, function shen_user_lambda5660(Arg5659) {
  if (Arg5659.length < 2) return [Shen.type_func, shen_user_lambda5660, 2, Arg5659];
  var Arg5659_0 = Arg5659[0], Arg5659_1 = Arg5659[1];
  return Shen.absvector_ref(Arg5659_0, Arg5659_1)}, 2, [], "<-address"];






Shen.fns["cn"] = [Shen.type_func, function shen_user_lambda5662(Arg5661) {
  if (Arg5661.length < 2) return [Shen.type_func, shen_user_lambda5662, 2, Arg5661];
  var Arg5661_0 = Arg5661[0], Arg5661_1 = Arg5661[1];
  return (Arg5661_0 + Arg5661_1)}, 2, [], "cn"];






Shen.fns["pos"] = [Shen.type_func, function shen_user_lambda5664(Arg5663) {
  if (Arg5663.length < 2) return [Shen.type_func, shen_user_lambda5664, 2, Arg5663];
  var Arg5663_0 = Arg5663[0], Arg5663_1 = Arg5663[1];
  return Arg5663_0[Arg5663_1]}, 2, [], "pos"];






Shen.fns["@p"] = [Shen.type_func, function shen_user_lambda5666(Arg5665) {
  if (Arg5665.length < 2) return [Shen.type_func, shen_user_lambda5666, 2, Arg5665];
  var Arg5665_0 = Arg5665[0], Arg5665_1 = Arg5665[1];
  return [Shen.fns['shen.tuple'], Arg5665_0, Arg5665_1]}, 2, [], "@p"];






Shen.fns["pr"] = [Shen.type_func, function shen_user_lambda5668(Arg5667) {
  if (Arg5667.length < 2) return [Shen.type_func, shen_user_lambda5668, 2, Arg5667];
  var Arg5667_0 = Arg5667[0], Arg5667_1 = Arg5667[1];
  return (function() {
  return Shen.pr(Arg5667_0, Arg5667_1);})}, 2, [], "pr"];






Shen.fns["address->"] = [Shen.type_func, function shen_user_lambda5670(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5670, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  return Shen.absvector_set(Arg5669_0, Arg5669_1, Arg5669_2)}, 3, [], "address->"];






Shen.fns["open"] = [Shen.type_func, function shen_user_lambda5672(Arg5671) {
  if (Arg5671.length < 3) return [Shen.type_func, shen_user_lambda5672, 3, Arg5671];
  var Arg5671_0 = Arg5671[0], Arg5671_1 = Arg5671[1], Arg5671_2 = Arg5671[2];
  return (function() {
  return Shen.open(Arg5671_0, Arg5671_1, Arg5671_2);})}, 3, [], "open"];






Shen.fns["reg-kl.shen-toplevel-3868"] = [Shen.type_func, function shen_user_lambda3869(Arg3867) {
  if (Arg3867.length < 0) return [Shen.type_func, shen_user_lambda3869, 0, Arg3867];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "reg-kl.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})}, 0, [], "reg-kl.shen-toplevel-3868"];

Shen.call_toplevel("reg-kl.shen-toplevel-3868")





Shen.fns["reg-kl.mk-context"] = [Shen.type_func, function shen_user_lambda3873(Arg3872) {
  if (Arg3872.length < 2) return [Shen.type_func, shen_user_lambda3873, 2, Arg3872];
  var Arg3872_0 = Arg3872[0], Arg3872_1 = Arg3872[1];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg3872_0, Shen.call(Shen.fns["@v"], [Arg3872_1, Shen.vector(0)])]);})}, 2, [], "reg-kl.mk-context"];





Shen.fns["reg-kl.context-nregs->"] = [Shen.type_func, function shen_user_lambda3877(Arg3876) {
  if (Arg3876.length < 2) return [Shen.type_func, shen_user_lambda3877, 2, Arg3876];
  var Arg3876_0 = Arg3876[0], Arg3876_1 = Arg3876[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg3876_0, 2, Arg3876_1]);})}, 2, [], "reg-kl.context-nregs->"];





Shen.fns["reg-kl.context-toplevel->"] = [Shen.type_func, function shen_user_lambda3881(Arg3880) {
  if (Arg3880.length < 2) return [Shen.type_func, shen_user_lambda3881, 2, Arg3880];
  var Arg3880_0 = Arg3880[0], Arg3880_1 = Arg3880[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg3880_0, 1, Arg3880_1]);})}, 2, [], "reg-kl.context-toplevel->"];





Shen.fns["reg-kl.context-nregs"] = [Shen.type_func, function shen_user_lambda3884(Arg3883) {
  if (Arg3883.length < 1) return [Shen.type_func, shen_user_lambda3884, 1, Arg3883];
  var Arg3883_0 = Arg3883[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg3883_0, 2]);})}, 1, [], "reg-kl.context-nregs"];





Shen.fns["reg-kl.context-toplevel"] = [Shen.type_func, function shen_user_lambda3887(Arg3886) {
  if (Arg3886.length < 1) return [Shen.type_func, shen_user_lambda3887, 1, Arg3886];
  var Arg3886_0 = Arg3886[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg3886_0, 1]);})}, 1, [], "reg-kl.context-toplevel"];





Shen.fns["reg-kl.var-idx-aux"] = [Shen.type_func, function shen_user_lambda3897(Arg3896) {
  if (Arg3896.length < 3) return [Shen.type_func, shen_user_lambda3897, 3, Arg3896];
  var Arg3896_0 = Arg3896[0], Arg3896_1 = Arg3896[1], Arg3896_2 = Arg3896[2];
  return ((Shen.empty$question$(Arg3896_2))
  ? (function() {
  return Shen.simple_error(("Unknown var: " + Shen.call(Shen.fns["shen.app"], [Arg3896_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (((Shen.is_type(Arg3896_2, Shen.type_cons) && (Shen.is_type(Arg3896_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3896_2[1][1], Arg3896_0)))))
  ? Arg3896_2[1][2]
  : ((Shen.is_type(Arg3896_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-idx-aux"], [Arg3896_0, (Arg3896_1 + 1), Arg3896_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.var-idx-aux"]]);}))))}, 3, [], "reg-kl.var-idx-aux"];





Shen.fns["reg-kl.var-idx"] = [Shen.type_func, function shen_user_lambda3901(Arg3900) {
  if (Arg3900.length < 2) return [Shen.type_func, shen_user_lambda3901, 2, Arg3900];
  var Arg3900_0 = Arg3900[0], Arg3900_1 = Arg3900[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-idx-aux"], [Arg3900_0, 0, Arg3900_1]);})}, 2, [], "reg-kl.var-idx"];





Shen.fns["reg-kl.new-var-idx-aux"] = [Shen.type_func, function shen_user_lambda3914(Arg3913) {
  if (Arg3913.length < 3) return [Shen.type_func, shen_user_lambda3914, 3, Arg3913];
  var Arg3913_0 = Arg3913[0], Arg3913_1 = Arg3913[1], Arg3913_2 = Arg3913[2];
  return ((Shen.empty$question$(Arg3913_2))
  ? Arg3913_1
  : (((Shen.is_type(Arg3913_2, Shen.type_cons) && (Shen.is_type(Arg3913_2[1], Shen.type_cons) && (Arg3913_2[1][2] < 0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3913_0, Arg3913_1, Arg3913_2[2]]);})
  : (((Shen.is_type(Arg3913_2, Shen.type_cons) && (Shen.is_type(Arg3913_2[1], Shen.type_cons) && (Arg3913_2[1][2] >= Arg3913_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3913_0, (Arg3913_2[1][2] + 1), Arg3913_2[2]]);})
  : ((Shen.is_type(Arg3913_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3913_0, Arg3913_1, Arg3913_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.new-var-idx-aux"]]);})))))}, 3, [], "reg-kl.new-var-idx-aux"];





Shen.fns["reg-kl.new-var-idx"] = [Shen.type_func, function shen_user_lambda3918(Arg3917) {
  if (Arg3917.length < 2) return [Shen.type_func, shen_user_lambda3918, 2, Arg3917];
  var Arg3917_0 = Arg3917[0], Arg3917_1 = Arg3917[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3917_0, 0, Arg3917_1]);})}, 2, [], "reg-kl.new-var-idx"];





Shen.fns["reg-kl.var-defined?"] = [Shen.type_func, function shen_user_lambda3936(Arg3935) {
  if (Arg3935.length < 2) return [Shen.type_func, shen_user_lambda3936, 2, Arg3935];
  var Arg3935_0 = Arg3935[0], Arg3935_1 = Arg3935[1];
  return ((Shen.empty$question$(Arg3935_1))
  ? false
  : (((Shen.is_type(Arg3935_1, Shen.type_cons) && (Shen.is_type(Arg3935_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3935_1[1][1], Arg3935_0)))))
  ? true
  : (((Shen.is_type(Arg3935_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3935_1[1], Arg3935_0))))
  ? true
  : ((Shen.is_type(Arg3935_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-defined?"], [Arg3935_0, Arg3935_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.var-defined?"]]);})))))}, 2, [], "reg-kl.var-defined?"];





Shen.fns["reg-kl.used-vars-aux"] = [Shen.type_func, function shen_user_lambda3954(Arg3953) {
  if (Arg3953.length < 4) return [Shen.type_func, shen_user_lambda3954, 4, Arg3953];
  var Arg3953_0 = Arg3953[0], Arg3953_1 = Arg3953[1], Arg3953_2 = Arg3953[2], Arg3953_3 = Arg3953[3];
  var R0;
  return (((Shen.is_type(Arg3953_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg3953_0[1])) && (Shen.is_type(Arg3953_0[2], Shen.type_cons) && (Shen.is_type(Arg3953_0[2][2], Shen.type_cons) && (Shen.is_type(Arg3953_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg3953_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3953_0[2][2][2][1], Arg3953_1, [Shen.type_cons, Arg3953_0[2][1], Arg3953_2], Arg3953_3])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3953_0[2][2][1], Arg3953_1, Arg3953_2, R0]);}))
  : (((Shen.is_type(Arg3953_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg3953_0[1])) && (Shen.is_type(Arg3953_0[2], Shen.type_cons) && (Shen.is_type(Arg3953_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg3953_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3953_0[2][2][1], Arg3953_1, [Shen.type_cons, Arg3953_0[2][1], Arg3953_2], Arg3953_3]);})
  : ((Shen.is_type(Arg3953_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3953_0[1], Arg3953_1, Arg3953_2, Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3953_0[2], Arg3953_1, Arg3953_2, Arg3953_3])]);})
  : (((Shen.is_type(Arg3953_0, Shen.type_symbol) && ((!Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg3953_0, Arg3953_2])) && Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg3953_0, Arg3953_1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["adjoin"], [Arg3953_0, Arg3953_3]);})
  : Arg3953_3))))}, 4, [], "reg-kl.used-vars-aux"];





Shen.fns["reg-kl.used-vars"] = [Shen.type_func, function shen_user_lambda3958(Arg3957) {
  if (Arg3957.length < 2) return [Shen.type_func, shen_user_lambda3958, 2, Arg3957];
  var Arg3957_0 = Arg3957[0], Arg3957_1 = Arg3957[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3957_0, Arg3957_1, [], []]);})}, 2, [], "reg-kl.used-vars"];





Shen.fns["reg-kl.remove-do"] = [Shen.type_func, function shen_user_lambda3961(Arg3960) {
  if (Arg3960.length < 1) return [Shen.type_func, shen_user_lambda3961, 1, Arg3960];
  var Arg3960_0 = Arg3960[0];
  return (((Shen.is_type(Arg3960_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg3960_0[1]))))
  ? Arg3960_0[2]
  : [Shen.type_cons, Arg3960_0, []])}, 1, [], "reg-kl.remove-do"];





Shen.fns["reg-kl.remove-duplicates-aux"] = [Shen.type_func, function shen_user_lambda3965(Arg3964) {
  if (Arg3964.length < 2) return [Shen.type_func, shen_user_lambda3965, 2, Arg3964];
  var Arg3964_0 = Arg3964[0], Arg3964_1 = Arg3964[1];
  return ((Shen.empty$question$(Arg3964_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg3964_1]);})
  : ((Shen.is_type(Arg3964_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.remove-duplicates-aux"], [Arg3964_0[2], Shen.call(Shen.fns["adjoin"], [Arg3964_0[1], Arg3964_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.remove-duplicates-aux"]]);})))}, 2, [], "reg-kl.remove-duplicates-aux"];





Shen.fns["reg-kl.remove-duplicates"] = [Shen.type_func, function shen_user_lambda3968(Arg3967) {
  if (Arg3967.length < 1) return [Shen.type_func, shen_user_lambda3968, 1, Arg3967];
  var Arg3967_0 = Arg3967[0];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.remove-duplicates-aux"], [Arg3967_0, []]);})}, 1, [], "reg-kl.remove-duplicates"];





Shen.fns["reg-kl.used-vars-cascade-aux"] = [Shen.type_func, function shen_user_lambda3978(Arg3977) {
  if (Arg3977.length < 4) return [Shen.type_func, shen_user_lambda3978, 4, Arg3977];
  var Arg3977_0 = Arg3977[0], Arg3977_1 = Arg3977[1], Arg3977_2 = Arg3977[2], Arg3977_3 = Arg3977[3];
  var R0;
  return ((Shen.empty$question$(Arg3977_0))
  ? Arg3977_3
  : ((Shen.is_type(Arg3977_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3977_0[1], Arg3977_1, [], Arg3977_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-cascade-aux"], [Arg3977_0[2], Arg3977_1, R0, [Shen.type_cons, R0, Arg3977_3]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.used-vars-cascade-aux"]]);})))}, 4, [], "reg-kl.used-vars-cascade-aux"];





Shen.fns["reg-kl.used-vars-cascade"] = [Shen.type_func, function shen_user_lambda3983(Arg3982) {
  if (Arg3982.length < 3) return [Shen.type_func, shen_user_lambda3983, 3, Arg3982];
  var Arg3982_0 = Arg3982[0], Arg3982_1 = Arg3982[1], Arg3982_2 = Arg3982[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-cascade-aux"], [Shen.call(Shen.fns["reverse"], [Arg3982_0]), Arg3982_1, Arg3982_2, []]);})}, 3, [], "reg-kl.used-vars-cascade"];





Shen.fns["reg-kl.mk-shen-set-reg"] = [Shen.type_func, function shen_user_lambda3988(Arg3987) {
  if (Arg3987.length < 2) return [Shen.type_func, shen_user_lambda3988, 2, Arg3987];
  var Arg3987_0 = Arg3987[0], Arg3987_1 = Arg3987[1];
  return (((Arg3987_0 < 0))
  ? (function() {
  return Shen.simple_error("Cannot set function argument\x0a");})
  : [Shen.type_cons, [Shen.type_symbol, "shen-set-reg!"], [Shen.type_cons, Arg3987_0, [Shen.type_cons, Arg3987_1, []]]])}, 2, [], "reg-kl.mk-shen-set-reg"];





Shen.fns["reg-kl.mk-shen-get-reg"] = [Shen.type_func, function shen_user_lambda3991(Arg3990) {
  if (Arg3990.length < 1) return [Shen.type_func, shen_user_lambda3991, 1, Arg3990];
  var Arg3990_0 = Arg3990[0];
  return (((Arg3990_0 < 0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-get-arg"], [Shen.type_cons, ((0 - Arg3990_0) - 1), []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen-get-reg"], [Shen.type_cons, Arg3990_0, []]])}, 1, [], "reg-kl.mk-shen-get-reg"];





Shen.fns["reg-kl.reuse-idx"] = [Shen.type_func, function shen_user_lambda4000(Arg3999) {
  if (Arg3999.length < 2) return [Shen.type_func, shen_user_lambda4000, 2, Arg3999];
  var Arg3999_0 = Arg3999[0], Arg3999_1 = Arg3999[1];
  return ((Shen.empty$question$(Arg3999_1))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg3999_1, Shen.type_cons) && (Shen.is_type(Arg3999_1[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Arg3999_1[1][1], Arg3999_0)) && (Arg3999_1[1][2] >= 0)))))
  ? Arg3999_1[1][2]
  : ((Shen.is_type(Arg3999_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.reuse-idx"], [Arg3999_0, Arg3999_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.reuse-idx"]]);}))))}, 2, [], "reg-kl.reuse-idx"];





Shen.fns["reg-kl.new-var-idx-or-reuse"] = [Shen.type_func, function shen_user_lambda4005(Arg4004) {
  if (Arg4004.length < 3) return [Shen.type_func, shen_user_lambda4005, 3, Arg4004];
  var Arg4004_0 = Arg4004[0], Arg4004_1 = Arg4004[1], Arg4004_2 = Arg4004[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg4004_2))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx"], [Arg4004_0, Arg4004_1]);})
  : ((R0 = (new Shen.Freeze([Arg4004_0, Arg4004_2, Arg4004_1], function(Arg4006) {
  var Arg4006_0 = Arg4006[0], Arg4006_1 = Arg4006[1], Arg4006_2 = Arg4006[2];
  return (function() {
  return ((Shen.is_type(Arg4006_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-or-reuse"], [Arg4006_0, Arg4006_2, Arg4006_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.new-var-idx-or-reuse"]]);}));})}))),
  ((Shen.is_type(Arg4004_2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["reg-kl.reuse-idx"], [Arg4004_2[1], Arg4004_1])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))}, 3, [], "reg-kl.new-var-idx-or-reuse"];





Shen.fns["reg-kl.add-var-aux"] = [Shen.type_func, function shen_user_lambda4014(Arg4013) {
  if (Arg4013.length < 4) return [Shen.type_func, shen_user_lambda4014, 4, Arg4013];
  var Arg4013_0 = Arg4013[0], Arg4013_1 = Arg4013[1], Arg4013_2 = Arg4013[2], Arg4013_3 = Arg4013[3];
  return ((Shen.empty$question$(Arg4013_2))
  ? [Shen.type_cons, [Shen.type_cons, Arg4013_0, Arg4013_1], Shen.call(Shen.fns["reverse"], [Arg4013_3])]
  : (((Shen.is_type(Arg4013_2, Shen.type_cons) && (Shen.is_type(Arg4013_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4013_2[1][2], Arg4013_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["reverse"], [[Shen.type_cons, [Shen.type_cons, Arg4013_0, Arg4013_2[1][2]], Arg4013_3]]), Arg4013_2[2]]);})
  : ((Shen.is_type(Arg4013_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.add-var-aux"], [Arg4013_0, Arg4013_1, Arg4013_2[2], [Shen.type_cons, Arg4013_2[1], Arg4013_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.add-var-aux"]]);}))))}, 4, [], "reg-kl.add-var-aux"];





Shen.fns["reg-kl.add-var"] = [Shen.type_func, function shen_user_lambda4019(Arg4018) {
  if (Arg4018.length < 3) return [Shen.type_func, shen_user_lambda4019, 3, Arg4018];
  var Arg4018_0 = Arg4018[0], Arg4018_1 = Arg4018[1], Arg4018_2 = Arg4018[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.add-var-aux"], [Arg4018_0, Arg4018_1, Arg4018_2, []]);})}, 3, [], "reg-kl.add-var"];





Shen.fns["reg-kl.max"] = [Shen.type_func, function shen_user_lambda4027(Arg4026) {
  if (Arg4026.length < 2) return [Shen.type_func, shen_user_lambda4027, 2, Arg4026];
  var Arg4026_0 = Arg4026[0], Arg4026_1 = Arg4026[1];
  return (((Arg4026_0 > Arg4026_1))
  ? Arg4026_0
  : Arg4026_1)}, 2, [], "reg-kl.max"];





Shen.fns["reg-kl.setreg-unexpr"] = [Shen.type_func, function shen_user_lambda4032(Arg4031) {
  if (Arg4031.length < 3) return [Shen.type_func, shen_user_lambda4032, 3, Arg4031];
  var Arg4031_0 = Arg4031[0], Arg4031_1 = Arg4031[1], Arg4031_2 = Arg4031[2];
  return (((Shen.is_type(Arg4031_1, Shen.type_cons) && Shen.empty$question$(Arg4031_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4031_0, Arg4031_1[1]]), Arg4031_2]]);})
  : ((Shen.is_type(Arg4031_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.setreg-unexpr"], [Arg4031_0, Arg4031_1[2], [Shen.type_cons, Arg4031_1[1], Arg4031_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4031_0, Arg4031_1]);})))}, 3, [], "reg-kl.setreg-unexpr"];





Shen.fns["reg-kl.setreg-do-expr"] = [Shen.type_func, function shen_user_lambda4041(Arg4040) {
  if (Arg4040.length < 3) return [Shen.type_func, shen_user_lambda4041, 3, Arg4040];
  var Arg4040_0 = Arg4040[0], Arg4040_1 = Arg4040[1], Arg4040_2 = Arg4040[2];
  return ((Shen.empty$question$(Arg4040_1))
  ? (function() {
  return Shen.simple_error("Broken `do` expression.");})
  : (((Shen.is_type(Arg4040_1, Shen.type_cons) && Shen.empty$question$(Arg4040_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4040_0, Arg4040_1[1]]), Arg4040_2]]);})
  : ((Shen.is_type(Arg4040_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.setreg-do-expr"], [Arg4040_0, Arg4040_1[2], [Shen.type_cons, Arg4040_1[1], Arg4040_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.setreg-do-expr"]]);}))))}, 3, [], "reg-kl.setreg-do-expr"];





Shen.fns["reg-kl.mk-shen-set-reg-unexpr"] = [Shen.type_func, function shen_user_lambda4045(Arg4044) {
  if (Arg4044.length < 2) return [Shen.type_func, shen_user_lambda4045, 2, Arg4044];
  var Arg4044_0 = Arg4044[0], Arg4044_1 = Arg4044[1];
  var R0, R1;
  return (((Shen.is_type(Arg4044_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4044_1[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["reg-kl.setreg-do-expr"], [Arg4044_0, Arg4044_1[2], []])]
  : (((Shen.is_type(Arg4044_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4044_1[1])) && (Shen.is_type(Arg4044_1[2], Shen.type_cons) && (Shen.is_type(Arg4044_1[2][2], Shen.type_cons) && (Shen.is_type(Arg4044_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4044_1[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4044_0, Arg4044_1[2][2][1]])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4044_0, Arg4044_1[2][2][2][1]])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4044_1[2][1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4044_0, Arg4044_1]);})))}, 2, [], "reg-kl.mk-shen-set-reg-unexpr"];





Shen.fns["reg-kl.walk-let-expr"] = [Shen.type_func, function shen_user_lambda4063(Arg4062) {
  if (Arg4062.length < 8) return [Shen.type_func, shen_user_lambda4063, 8, Arg4062];
  var Arg4062_0 = Arg4062[0], Arg4062_1 = Arg4062[1], Arg4062_2 = Arg4062[2], Arg4062_3 = Arg4062[3], Arg4062_4 = Arg4062[4], Arg4062_5 = Arg4062[5], Arg4062_6 = Arg4062[6], Arg4062_7 = Arg4062[7];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4062_7)))
  ? ((R0 = Shen.call(Shen.fns["remove"], [Arg4062_0, Arg4062_3])),
  (R0 = Shen.call(Shen.fns["append"], [R0, Arg4062_5])),
  (R1 = Shen.call(Shen.fns["difference"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "head"], Arg4062_2]), R0])),
  (R1 = Shen.call(Shen.fns["reg-kl.new-var-idx-or-reuse"], [Arg4062_0, Arg4062_2, R1])),
  Shen.call(Shen.fns["reg-kl.context-nregs->"], [Arg4062_6, Shen.call(Shen.fns["reg-kl.max"], [(R1 + 1), Shen.call(Shen.fns["reg-kl.context-nregs"], [Arg4062_6])])]),
  (R2 = Shen.call(Shen.fns["reg-kl.add-var"], [Arg4062_0, R1, Arg4062_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4062_1, Arg4062_2, Arg4062_4, R0, Arg4062_6])),
  [Shen.fns['shen.tuple'], Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [R1, R0]), R2])
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4062_7)))
  ? [Shen.fns['shen.tuple'], Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4062_1, Arg4062_2, Arg4062_4, Arg4062_5, Arg4062_6]), Arg4062_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-let-expr"]]);})))}, 8, [], "reg-kl.walk-let-expr"];





Shen.fns["reg-kl.walk-let"] = [Shen.type_func, function shen_user_lambda4072(Arg4071) {
  if (Arg4071.length < 7) return [Shen.type_func, shen_user_lambda4072, 7, Arg4071];
  var Arg4071_0 = Arg4071[0], Arg4071_1 = Arg4071[1], Arg4071_2 = Arg4071[2], Arg4071_3 = Arg4071[3], Arg4071_4 = Arg4071[4], Arg4071_5 = Arg4071[5], Arg4071_6 = Arg4071[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [Arg4071_2, [Shen.type_cons, Arg4071_0, Arg4071_3]])),
  (R1 = Shen.call(Shen.fns["element?"], [Arg4071_0, R0])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk-let-expr"], [Arg4071_0, Arg4071_1, Arg4071_3, R0, Arg4071_4, Arg4071_5, Arg4071_6, R1])),
  (R2 = Shen.call(Shen.fns["fst"], [R1])),
  (R1 = Shen.call(Shen.fns["snd"], [R1])),
  (R1 = Shen.call(Shen.fns["reg-kl.remove-do"], [Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4071_2, R1, Shen.call(Shen.fns["append"], [R0, Arg4071_5]), Arg4071_5, Arg4071_6])])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? (R2 = [Shen.type_cons, R2, R1])
  : (R2 = R1)),
  [Shen.type_cons, [Shen.type_symbol, "do"], R2])}, 7, [], "reg-kl.walk-let"];





Shen.fns["reg-kl.walk-do-aux"] = [Shen.type_func, function shen_user_lambda4086(Arg4085) {
  if (Arg4085.length < 6) return [Shen.type_func, shen_user_lambda4086, 6, Arg4085];
  var Arg4085_0 = Arg4085[0], Arg4085_1 = Arg4085[1], Arg4085_2 = Arg4085[2], Arg4085_3 = Arg4085[3], Arg4085_4 = Arg4085[4], Arg4085_5 = Arg4085[5];
  var R0, R1;
  return (((Shen.empty$question$(Arg4085_0) && Shen.empty$question$(Arg4085_2)))
  ? Arg4085_5
  : (((Shen.is_type(Arg4085_0, Shen.type_cons) && (Shen.empty$question$(Arg4085_0[2]) && (Shen.is_type(Arg4085_2, Shen.type_cons) && Shen.empty$question$(Arg4085_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4085_0[1], Arg4085_1, Arg4085_2[1], Arg4085_3, Arg4085_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4085_5, Shen.call(Shen.fns["reg-kl.remove-do"], [R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do-aux"], [[], Arg4085_1, [], Arg4085_3, Arg4085_4, R0]);}))
  : (((Shen.is_type(Arg4085_0, Shen.type_cons) && (Shen.is_type(Arg4085_2, Shen.type_cons) && Shen.is_type(Arg4085_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4085_0[1], Arg4085_1, Arg4085_2[1], Arg4085_2[2][1], Arg4085_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4085_5, Shen.call(Shen.fns["reg-kl.remove-do"], [R0])])),
  (R1 = Arg4085_2[2]),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do-aux"], [Arg4085_0[2], Arg4085_1, R1, Arg4085_3, Arg4085_4, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-do-aux"]]);}))))}, 6, [], "reg-kl.walk-do-aux"];





Shen.fns["reg-kl.walk-do"] = [Shen.type_func, function shen_user_lambda4093(Arg4092) {
  if (Arg4092.length < 5) return [Shen.type_func, shen_user_lambda4093, 5, Arg4092];
  var Arg4092_0 = Arg4092[0], Arg4092_1 = Arg4092[1], Arg4092_2 = Arg4092[2], Arg4092_3 = Arg4092[3], Arg4092_4 = Arg4092[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-cascade"], [Arg4092_0, Arg4092_1, Arg4092_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-do-aux"], [Arg4092_0, Arg4092_1, R0, Arg4092_3, Arg4092_4, []])),
  [Shen.type_cons, [Shen.type_symbol, "do"], R0])}, 5, [], "reg-kl.walk-do"];





Shen.fns["reg-kl.walk-apply-aux"] = [Shen.type_func, function shen_user_lambda4107(Arg4106) {
  if (Arg4106.length < 6) return [Shen.type_func, shen_user_lambda4107, 6, Arg4106];
  var Arg4106_0 = Arg4106[0], Arg4106_1 = Arg4106[1], Arg4106_2 = Arg4106[2], Arg4106_3 = Arg4106[3], Arg4106_4 = Arg4106[4], Arg4106_5 = Arg4106[5];
  var R0;
  return (((Shen.empty$question$(Arg4106_0) && Shen.empty$question$(Arg4106_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4106_5]);})
  : (((Shen.is_type(Arg4106_0, Shen.type_cons) && (Shen.empty$question$(Arg4106_0[2]) && (Shen.is_type(Arg4106_2, Shen.type_cons) && Shen.empty$question$(Arg4106_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4106_0[1], Arg4106_1, Arg4106_2[1], Arg4106_3, Arg4106_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [[], Arg4106_1, [], Arg4106_3, Arg4106_4, [Shen.type_cons, R0, Arg4106_5]]);}))
  : (((Shen.is_type(Arg4106_0, Shen.type_cons) && (Shen.is_type(Arg4106_2, Shen.type_cons) && Shen.is_type(Arg4106_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4106_0[1], Arg4106_1, Arg4106_2[1], Arg4106_2[2][1], Arg4106_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [Arg4106_0[2], Arg4106_1, Arg4106_2[2], Arg4106_3, Arg4106_4, [Shen.type_cons, R0, Arg4106_5]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-apply-aux"]]);}))))}, 6, [], "reg-kl.walk-apply-aux"];





Shen.fns["reg-kl.walk-apply"] = [Shen.type_func, function shen_user_lambda4114(Arg4113) {
  if (Arg4113.length < 5) return [Shen.type_func, shen_user_lambda4114, 5, Arg4113];
  var Arg4113_0 = Arg4113[0], Arg4113_1 = Arg4113[1], Arg4113_2 = Arg4113[2], Arg4113_3 = Arg4113[3], Arg4113_4 = Arg4113[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-cascade"], [Arg4113_0, Arg4113_1, Arg4113_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [Arg4113_0, Arg4113_1, R0, Arg4113_3, Arg4113_4, []]);}))}, 5, [], "reg-kl.walk-apply"];





Shen.fns["reg-kl.walk-if"] = [Shen.type_func, function shen_user_lambda4123(Arg4122) {
  if (Arg4122.length < 7) return [Shen.type_func, shen_user_lambda4123, 7, Arg4122];
  var Arg4122_0 = Arg4122[0], Arg4122_1 = Arg4122[1], Arg4122_2 = Arg4122[2], Arg4122_3 = Arg4122[3], Arg4122_4 = Arg4122[4], Arg4122_5 = Arg4122[5], Arg4122_6 = Arg4122[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4122_1, Arg4122_3, [], Arg4122_5])),
  (R1 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4122_2, Arg4122_3, [], Arg4122_5])),
  (R2 = Shen.call(Shen.fns["append"], [R0, R1])),
  (R2 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4122_0, Arg4122_3, Arg4122_4, R2, Arg4122_6])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4122_1, Arg4122_3, R0, Arg4122_5, Arg4122_6])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4122_2, Arg4122_3, R1, Arg4122_5, Arg4122_6])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R2, [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])}, 7, [], "reg-kl.walk-if"];





Shen.fns["reg-kl.walk-cond"] = [Shen.type_func, function shen_user_lambda4138(Arg4137) {
  if (Arg4137.length < 5) return [Shen.type_func, shen_user_lambda4138, 5, Arg4137];
  var Arg4137_0 = Arg4137[0], Arg4137_1 = Arg4137[1], Arg4137_2 = Arg4137[2], Arg4137_3 = Arg4137[3], Arg4137_4 = Arg4137[4];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4137_0))
  ? [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "error: cond failure", []]]
  : (((Shen.is_type(Arg4137_0, Shen.type_cons) && (Shen.is_type(Arg4137_0[1], Shen.type_cons) && (Shen.is_type(Arg4137_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4137_0[1][2][2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4137_0[1][2][1], Arg4137_1, [], Arg4137_3])),
  (R1 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4137_0[2], Arg4137_1, [], Arg4137_3])),
  (R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4137_0[1][1], Arg4137_1, [], Shen.call(Shen.fns["append"], [R0, R1])])),
  (R2 = Shen.call(Shen.fns["reg-kl.walk-cond"], [Arg4137_0[2], Arg4137_1, Arg4137_2, Arg4137_3, Arg4137_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-if"], [Arg4137_0[1][1], Arg4137_0[1][2][1], R2, Arg4137_1, R0, R1, Arg4137_4]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-cond"]]);})))}, 5, [], "reg-kl.walk-cond"];





Shen.fns["reg-kl.mk-closure-args-init"] = [Shen.type_func, function shen_user_lambda4145(Arg4144) {
  if (Arg4144.length < 3) return [Shen.type_func, shen_user_lambda4145, 3, Arg4144];
  var Arg4144_0 = Arg4144[0], Arg4144_1 = Arg4144[1], Arg4144_2 = Arg4144[2];
  var R0;
  return ((Shen.empty$question$(Arg4144_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4144_2]);})
  : ((Shen.is_type(Arg4144_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl.var-idx"], [Arg4144_0[1], Arg4144_1])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-closure-args-init"], [Arg4144_0[2], Arg4144_1, [Shen.type_cons, R0, Arg4144_2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-closure-args-init"]]);})))}, 3, [], "reg-kl.mk-closure-args-init"];





Shen.fns["reg-kl.mk-closure-env"] = [Shen.type_func, function shen_user_lambda4149(Arg4148) {
  if (Arg4148.length < 2) return [Shen.type_func, shen_user_lambda4149, 2, Arg4148];
  var Arg4148_0 = Arg4148[0], Arg4148_1 = Arg4148[1];
  return ((Shen.empty$question$(Arg4148_0))
  ? Arg4148_1
  : ((Shen.is_type(Arg4148_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-closure-env"], [Arg4148_0[2], [Shen.type_cons, [Shen.type_cons, Arg4148_0[1], Shen.call(Shen.fns["reg-kl.new-var-idx"], [Arg4148_0[1], Arg4148_1])], Arg4148_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-closure-env"]]);})))}, 2, [], "reg-kl.mk-closure-env"];





Shen.fns["reg-kl.mk-closure-list"] = [Shen.type_func, function shen_user_lambda4156(Arg4155) {
  if (Arg4155.length < 5) return [Shen.type_func, shen_user_lambda4156, 5, Arg4155];
  var Arg4155_0 = Arg4155[0], Arg4155_1 = Arg4155[1], Arg4155_2 = Arg4155[2], Arg4155_3 = Arg4155[3], Arg4155_4 = Arg4155[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-closure-env"], [Arg4155_3, []])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-args-init"], [Arg4155_3, Arg4155_2, []])),
  (R0 = Shen.call(Shen.fns["reg-kl.mk-function-kl"], [Arg4155_0, Arg4155_1, R0, Arg4155_4])),
  [Shen.type_cons, R1, [Shen.type_cons, R0, []]])}, 5, [], "reg-kl.mk-closure-list"];





Shen.fns["reg-kl.walk-lambda-aux"] = [Shen.type_func, function shen_user_lambda4164(Arg4163) {
  if (Arg4163.length < 6) return [Shen.type_func, shen_user_lambda4164, 6, Arg4163];
  var Arg4163_0 = Arg4163[0], Arg4163_1 = Arg4163[1], Arg4163_2 = Arg4163[2], Arg4163_3 = Arg4163[3], Arg4163_4 = Arg4163[4], Arg4163_5 = Arg4163[5];
  var R0, R1;
  return (((Shen.is_type(Arg4163_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4163_1[1])) && (Shen.is_type(Arg4163_1[2], Shen.type_cons) && (Shen.is_type(Arg4163_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg4163_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-lambda-aux"], [Arg4163_1[2][1], Arg4163_1[2][2][1], [Shen.type_cons, Arg4163_0, Arg4163_2], Arg4163_3, Arg4163_4, Arg4163_5]);})
  : ((R0 = Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4163_0, Arg4163_2]])),
  (R1 = Shen.call(Shen.fns["append"], [Arg4163_4, Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4163_0, R0]])])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-list"], [R1, Arg4163_1, Arg4163_3, Arg4163_4, Arg4163_5])),
  [Shen.type_cons, [Shen.type_symbol, "shen-mk-closure"], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [Arg4163_5]), R1]]]))}, 6, [], "reg-kl.walk-lambda-aux"];





Shen.fns["reg-kl.walk-lambda"] = [Shen.type_func, function shen_user_lambda4171(Arg4170) {
  if (Arg4170.length < 5) return [Shen.type_func, shen_user_lambda4171, 5, Arg4170];
  var Arg4170_0 = Arg4170[0], Arg4170_1 = Arg4170[1], Arg4170_2 = Arg4170[2], Arg4170_3 = Arg4170[3], Arg4170_4 = Arg4170[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [[Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg4170_0, [Shen.type_cons, Arg4170_1, []]]], Arg4170_3])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4170_4]), 0])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-lambda-aux"], [Arg4170_0, Arg4170_1, Arg4170_2, Arg4170_3, R0, R1])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4170_4, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R1])]),
  R0)}, 5, [], "reg-kl.walk-lambda"];





Shen.fns["reg-kl.walk-freeze"] = [Shen.type_func, function shen_user_lambda4177(Arg4176) {
  if (Arg4176.length < 4) return [Shen.type_func, shen_user_lambda4177, 4, Arg4176];
  var Arg4176_0 = Arg4176[0], Arg4176_1 = Arg4176[1], Arg4176_2 = Arg4176[2], Arg4176_3 = Arg4176[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4176_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-list"], [Arg4176_2, Arg4176_0, Arg4176_1, Arg4176_2, R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4176_3, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "shen-mk-freeze"], [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [R0]), R1]])}, 4, [], "reg-kl.walk-freeze"];





Shen.fns["reg-kl.lift-defun"] = [Shen.type_func, function shen_user_lambda4183(Arg4182) {
  if (Arg4182.length < 4) return [Shen.type_func, shen_user_lambda4183, 4, Arg4182];
  var Arg4182_0 = Arg4182[0], Arg4182_1 = Arg4182[1], Arg4182_2 = Arg4182[2], Arg4182_3 = Arg4182[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4182_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-kl"], [Arg4182_0, Arg4182_1, Arg4182_2, [], R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4182_3, [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]]),
  [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, Arg4182_0, []]])}, 4, [], "reg-kl.lift-defun"];





Shen.fns["reg-kl.walk-expr"] = [Shen.type_func, function shen_user_lambda4221(Arg4220) {
  if (Arg4220.length < 5) return [Shen.type_func, shen_user_lambda4221, 5, Arg4220];
  var Arg4220_0 = Arg4220[0], Arg4220_1 = Arg4220[1], Arg4220_2 = Arg4220[2], Arg4220_3 = Arg4220[3], Arg4220_4 = Arg4220[4];
  return (((Shen.is_type(Arg4220_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4220_0[1])) && (Shen.is_type(Arg4220_0[2], Shen.type_cons) && (Shen.is_type(Arg4220_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4220_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4220_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-let"], [Arg4220_0[2][1], Arg4220_0[2][2][1], Arg4220_0[2][2][2][1], Arg4220_1, Arg4220_2, Arg4220_3, Arg4220_4]);})
  : (((Shen.is_type(Arg4220_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4220_0[1])) && (Shen.is_type(Arg4220_0[2], Shen.type_cons) && (Shen.is_type(Arg4220_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4220_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4220_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-if"], [Arg4220_0[2][1], Arg4220_0[2][2][1], Arg4220_0[2][2][2][1], Arg4220_1, Arg4220_2, Arg4220_3, Arg4220_4]);})
  : (((Shen.is_type(Arg4220_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg4220_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-cond"], [Arg4220_0[2], Arg4220_1, Arg4220_2, Arg4220_3, Arg4220_4]);})
  : (((Shen.is_type(Arg4220_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4220_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do"], [Arg4220_0[2], Arg4220_1, Arg4220_2, Arg4220_3, Arg4220_4]);})
  : (((Shen.is_type(Arg4220_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4220_0[1])) && (Shen.is_type(Arg4220_0[2], Shen.type_cons) && (Shen.is_type(Arg4220_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4220_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-lambda"], [Arg4220_0[2][1], Arg4220_0[2][2][1], [], Arg4220_1, Arg4220_4]);})
  : (((Shen.is_type(Arg4220_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg4220_0[1])) && (Shen.is_type(Arg4220_0[2], Shen.type_cons) && Shen.empty$question$(Arg4220_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-freeze"], [Arg4220_0[2][1], Arg4220_1, Arg4220_2, Arg4220_4]);})
  : (((Shen.is_type(Arg4220_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4220_0[1])) && (Shen.is_type(Arg4220_0[2], Shen.type_cons) && (Shen.is_type(Arg4220_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4220_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4220_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.lift-defun"], [Arg4220_0[2][1], Arg4220_0[2][2][1], Arg4220_0[2][2][2][1], Arg4220_4]);})
  : ((Shen.is_type(Arg4220_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply"], [Arg4220_0, Arg4220_1, Arg4220_2, Arg4220_3, Arg4220_4]);})
  : (((Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg4220_0, Arg4220_1]) && Shen.is_type(Arg4220_0, Shen.type_symbol)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl.var-idx"], [Arg4220_0, Arg4220_1])]);})
  : Arg4220_0)))))))))}, 5, [], "reg-kl.walk-expr"];





Shen.fns["reg-kl.mk-defun-env"] = [Shen.type_func, function shen_user_lambda4226(Arg4225) {
  if (Arg4225.length < 3) return [Shen.type_func, shen_user_lambda4226, 3, Arg4225];
  var Arg4225_0 = Arg4225[0], Arg4225_1 = Arg4225[1], Arg4225_2 = Arg4225[2];
  return ((Shen.empty$question$(Arg4225_0))
  ? Arg4225_2
  : ((Shen.is_type(Arg4225_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-defun-env"], [Arg4225_0[2], (Arg4225_1 - 1), [Shen.type_cons, [Shen.type_cons, Arg4225_0[1], Arg4225_1], Arg4225_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-defun-env"]]);})))}, 3, [], "reg-kl.mk-defun-env"];





Shen.fns["reg-kl.mk-function-kl"] = [Shen.type_func, function shen_user_lambda4232(Arg4231) {
  if (Arg4231.length < 4) return [Shen.type_func, shen_user_lambda4232, 4, Arg4231];
  var Arg4231_0 = Arg4231[0], Arg4231_1 = Arg4231[1], Arg4231_2 = Arg4231[2], Arg4231_3 = Arg4231[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.remove-duplicates"], [Arg4231_0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-env"], [R0, -1, Arg4231_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [Arg4231_1, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-expr"], [Arg4231_1, R1, R0, [], Arg4231_3]);}))}, 4, [], "reg-kl.mk-function-kl"];





Shen.fns["reg-kl.mk-defun-kl"] = [Shen.type_func, function shen_user_lambda4239(Arg4238) {
  if (Arg4238.length < 5) return [Shen.type_func, shen_user_lambda4239, 5, Arg4238];
  var Arg4238_0 = Arg4238[0], Arg4238_1 = Arg4238[1], Arg4238_2 = Arg4238[2], Arg4238_3 = Arg4238[3], Arg4238_4 = Arg4238[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4238_4]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-function-kl"], [Arg4238_1, Arg4238_2, Arg4238_3, R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4238_4, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "shen-mk-func"], [Shen.type_cons, Arg4238_0, [Shen.type_cons, Arg4238_1, [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [R0]), [Shen.type_cons, R1, []]]]]])}, 5, [], "reg-kl.mk-defun-kl"];





Shen.fns["reg-kl.walk-toplevel"] = [Shen.type_func, function shen_user_lambda4246(Arg4245) {
  if (Arg4245.length < 3) return [Shen.type_func, shen_user_lambda4246, 3, Arg4245];
  var Arg4245_0 = Arg4245[0], Arg4245_1 = Arg4245[1], Arg4245_2 = Arg4245[2];
  var R0, R1;
  return (((Shen.is_type(Arg4245_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4245_0[1])) && (Shen.is_type(Arg4245_0[2], Shen.type_cons) && (Shen.is_type(Arg4245_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4245_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4245_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Arg4245_2, 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-kl"], [Arg4245_0[2][1], Arg4245_0[2][2][1], Arg4245_0[2][2][2][1], [], R0])),
  [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])])
  : ((Shen.is_type(Arg4245_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "reg-kl.shen-toplevel-"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, [], [Shen.type_cons, Arg4245_0, []]]]]),
  [Shen.type_cons, [Shen.type_cons, R0, []], Shen.call(Shen.fns["reg-kl.walk-toplevel"], [R1, Arg4245_1, Arg4245_2])])
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4245_1)))
  ? Arg4245_2
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4245_1)))
  ? [Shen.type_cons, Arg4245_0, Arg4245_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-toplevel"]]);})))))}, 3, [], "reg-kl.walk-toplevel"];





Shen.fns["reg-kl.walk-aux"] = [Shen.type_func, function shen_user_lambda4253(Arg4252) {
  if (Arg4252.length < 3) return [Shen.type_func, shen_user_lambda4253, 3, Arg4252];
  var Arg4252_0 = Arg4252[0], Arg4252_1 = Arg4252[1], Arg4252_2 = Arg4252[2];
  return ((Shen.empty$question$(Arg4252_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4252_2]);})
  : ((Shen.is_type(Arg4252_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-aux"], [Arg4252_0[2], Arg4252_1, Shen.call(Shen.fns["reg-kl.walk-toplevel"], [Arg4252_0[1], Arg4252_1, Arg4252_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-aux"]]);})))}, 3, [], "reg-kl.walk-aux"];





Shen.fns["reg-kl.walk"] = [Shen.type_func, function shen_user_lambda4257(Arg4256) {
  if (Arg4256.length < 2) return [Shen.type_func, shen_user_lambda4257, 2, Arg4256];
  var Arg4256_0 = Arg4256[0], Arg4256_1 = Arg4256[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-aux"], [Arg4256_0, Arg4256_1, []]);})}, 2, [], "reg-kl.walk"];





Shen.fns["reg-kl.shen-toplevel-4857"] = [Shen.type_func, function shen_user_lambda4858(Arg4856) {
  if (Arg4856.length < 0) return [Shen.type_func, shen_user_lambda4858, 0, Arg4856];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "js.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})}, 0, [], "reg-kl.shen-toplevel-4857"];

Shen.call_toplevel("reg-kl.shen-toplevel-4857")





Shen.fns["js.mk-context"] = [Shen.type_func, function shen_user_lambda4864(Arg4863) {
  if (Arg4863.length < 4) return [Shen.type_func, shen_user_lambda4864, 4, Arg4863];
  var Arg4863_0 = Arg4863[0], Arg4863_1 = Arg4863[1], Arg4863_2 = Arg4863[2], Arg4863_3 = Arg4863[3];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg4863_0, Shen.call(Shen.fns["@v"], [Arg4863_1, Shen.call(Shen.fns["@v"], [Arg4863_2, Shen.call(Shen.fns["@v"], [Arg4863_3, Shen.vector(0)])])])]);})}, 4, [], "js.mk-context"];





Shen.fns["js.context-varname->"] = [Shen.type_func, function shen_user_lambda4868(Arg4867) {
  if (Arg4867.length < 2) return [Shen.type_func, shen_user_lambda4868, 2, Arg4867];
  var Arg4867_0 = Arg4867[0], Arg4867_1 = Arg4867[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4867_0, 4, Arg4867_1]);})}, 2, [], "js.context-varname->"];





Shen.fns["js.context-argname->"] = [Shen.type_func, function shen_user_lambda4872(Arg4871) {
  if (Arg4871.length < 2) return [Shen.type_func, shen_user_lambda4872, 2, Arg4871];
  var Arg4871_0 = Arg4871[0], Arg4871_1 = Arg4871[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4871_0, 3, Arg4871_1]);})}, 2, [], "js.context-argname->"];





Shen.fns["js.context-toplevel->"] = [Shen.type_func, function shen_user_lambda4876(Arg4875) {
  if (Arg4875.length < 2) return [Shen.type_func, shen_user_lambda4876, 2, Arg4875];
  var Arg4875_0 = Arg4875[0], Arg4875_1 = Arg4875[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4875_0, 2, Arg4875_1]);})}, 2, [], "js.context-toplevel->"];





Shen.fns["js.context-nregs->"] = [Shen.type_func, function shen_user_lambda4880(Arg4879) {
  if (Arg4879.length < 2) return [Shen.type_func, shen_user_lambda4880, 2, Arg4879];
  var Arg4879_0 = Arg4879[0], Arg4879_1 = Arg4879[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4879_0, 1, Arg4879_1]);})}, 2, [], "js.context-nregs->"];





Shen.fns["js.context-varname"] = [Shen.type_func, function shen_user_lambda4883(Arg4882) {
  if (Arg4882.length < 1) return [Shen.type_func, shen_user_lambda4883, 1, Arg4882];
  var Arg4882_0 = Arg4882[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4882_0, 4]);})}, 1, [], "js.context-varname"];





Shen.fns["js.context-argname"] = [Shen.type_func, function shen_user_lambda4886(Arg4885) {
  if (Arg4885.length < 1) return [Shen.type_func, shen_user_lambda4886, 1, Arg4885];
  var Arg4885_0 = Arg4885[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4885_0, 3]);})}, 1, [], "js.context-argname"];





Shen.fns["js.context-toplevel"] = [Shen.type_func, function shen_user_lambda4889(Arg4888) {
  if (Arg4888.length < 1) return [Shen.type_func, shen_user_lambda4889, 1, Arg4888];
  var Arg4888_0 = Arg4888[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4888_0, 2]);})}, 1, [], "js.context-toplevel"];





Shen.fns["js.context-nregs"] = [Shen.type_func, function shen_user_lambda4892(Arg4891) {
  if (Arg4891.length < 1) return [Shen.type_func, shen_user_lambda4892, 1, Arg4891];
  var Arg4891_0 = Arg4891[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4891_0, 1]);})}, 1, [], "js.context-nregs"];





Shen.fns["js.max"] = [Shen.type_func, function shen_user_lambda4900(Arg4899) {
  if (Arg4899.length < 2) return [Shen.type_func, shen_user_lambda4900, 2, Arg4899];
  var Arg4899_0 = Arg4899[0], Arg4899_1 = Arg4899[1];
  return (((Arg4899_0 > Arg4899_1))
  ? Arg4899_0
  : Arg4899_1)}, 2, [], "js.max"];





Shen.fns["js.str-js-from-shen*"] = [Shen.type_func, function shen_user_lambda4904(Arg4903) {
  if (Arg4903.length < 2) return [Shen.type_func, shen_user_lambda4904, 2, Arg4903];
  var Arg4903_0 = Arg4903[0], Arg4903_1 = Arg4903[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg4903_0)))
  ? Arg4903_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("-", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("_", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("$", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("'", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$quote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("`", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$bquote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("/", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$slash$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("*", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$asterisk$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("+", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$plus$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("%", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$percent$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("=", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$eq$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("?", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$question$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("!", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$excl$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$(">", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$gt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("<", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$lt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$(".", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$dot$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("|", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$bar$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("#", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$sharp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("~", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$tilde$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$(":", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$colon$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$(";", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$sc$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("@", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$at$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("&", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$amp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("{", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$cbraceopen$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]) && Shen.unwind_tail(Shen.$eq$("}", Arg4903_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + "$cbraceclose$")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg4903_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4903_0), (Arg4903_1 + Arg4903_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-js-from-shen*"]]);})))))))))))))))))))))))))))}, 2, [], "js.str-js-from-shen*"];





Shen.fns["js.str-js-from-shen"] = [Shen.type_func, function shen_user_lambda4907(Arg4906) {
  if (Arg4906.length < 1) return [Shen.type_func, shen_user_lambda4907, 1, Arg4906];
  var Arg4906_0 = Arg4906[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Arg4906_0, ""]);})}, 1, [], "js.str-js-from-shen"];





Shen.fns["js.sym-js-from-shen"] = [Shen.type_func, function shen_user_lambda4910(Arg4909) {
  if (Arg4909.length < 1) return [Shen.type_func, shen_user_lambda4910, 1, Arg4909];
  var Arg4909_0 = Arg4909[0];
  return (function() {
  return Shen.intern(Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg4909_0)]));})}, 1, [], "js.sym-js-from-shen"];





Shen.fns["js.backslash"] = [Shen.type_func, function shen_user_lambda4912(Arg4911) {
  if (Arg4911.length < 0) return [Shen.type_func, shen_user_lambda4912, 0, Arg4911];
  return (function() {
  return Shen.n_$gt$string(92);})}, 0, [], "js.backslash"];





Shen.fns["js.dquote"] = [Shen.type_func, function shen_user_lambda4914(Arg4913) {
  if (Arg4913.length < 0) return [Shen.type_func, shen_user_lambda4914, 0, Arg4913];
  return (function() {
  return Shen.n_$gt$string(34);})}, 0, [], "js.dquote"];





Shen.fns["js.esc-string"] = [Shen.type_func, function shen_user_lambda4918(Arg4917) {
  if (Arg4917.length < 2) return [Shen.type_func, shen_user_lambda4918, 2, Arg4917];
  var Arg4917_0 = Arg4917[0], Arg4917_1 = Arg4917[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg4917_0)))
  ? Arg4917_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4917_0]) && (Shen.unwind_tail(Shen.$eq$(Arg4917_0[0], Shen.call(Shen.fns["js.backslash"], []))) || Shen.unwind_tail(Shen.$eq$(Arg4917_0[0], Shen.call(Shen.fns["js.dquote"], []))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4917_0), (Arg4917_1 + (Shen.call(Shen.fns["js.backslash"], []) + Arg4917_0[0]))]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4917_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg4917_0[0]), 10))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4917_0), (Arg4917_1 + "\\x0a")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4917_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg4917_0[0]), 13))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4917_0), (Arg4917_1 + "\\x0d")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg4917_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4917_0), (Arg4917_1 + Arg4917_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.esc-string"]]);}))))))}, 2, [], "js.esc-string"];





Shen.fns["js.func-name"] = [Shen.type_func, function shen_user_lambda4921(Arg4920) {
  if (Arg4920.length < 1) return [Shen.type_func, shen_user_lambda4921, 1, Arg4920];
  var Arg4920_0 = Arg4920[0];
  return ((Shen.is_type(Arg4920_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4920_0]);})
  : Arg4920_0)}, 1, [], "js.func-name"];





Shen.fns["js.intfunc-name"] = [Shen.type_func, function shen_user_lambda4924(Arg4923) {
  if (Arg4923.length < 1) return [Shen.type_func, shen_user_lambda4924, 1, Arg4923];
  var Arg4923_0 = Arg4923[0];
  return (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg4923_0]) || (Shen.globals["shen.*installing-kl*"])))
  ? (function() {
  return Shen.intern(("Shen." + Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg4923_0)])));})
  : ((Shen.is_type(Arg4923_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4923_0]);})
  : Arg4923_0))}, 1, [], "js.intfunc-name"];





Shen.fns["reg-kl.shen-toplevel-4926"] = [Shen.type_func, function shen_user_lambda4927(Arg4925) {
  if (Arg4925.length < 0) return [Shen.type_func, shen_user_lambda4927, 0, Arg4925];
  return (Shen.globals["js.int-funcs"] = [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], []], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], []]], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "pr"], []]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]], []]]])}, 0, [], "reg-kl.shen-toplevel-4926"];

Shen.call_toplevel("reg-kl.shen-toplevel-4926")





Shen.fns["reg-kl.shen-toplevel-4929"] = [Shen.type_func, function shen_user_lambda4930(Arg4928) {
  if (Arg4928.length < 0) return [Shen.type_func, shen_user_lambda4930, 0, Arg4928];
  return (Shen.globals["js.internals"] = [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "js.write-byte"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]])}, 0, [], "reg-kl.shen-toplevel-4929"];

Shen.call_toplevel("reg-kl.shen-toplevel-4929")





Shen.fns["reg-kl.shen-toplevel-4932"] = [Shen.type_func, function shen_user_lambda4933(Arg4931) {
  if (Arg4931.length < 0) return [Shen.type_func, shen_user_lambda4933, 0, Arg4931];
  return (Shen.globals["js.tail-internals"] = [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]])}, 0, [], "reg-kl.shen-toplevel-4932"];

Shen.call_toplevel("reg-kl.shen-toplevel-4932")





Shen.fns["js.int-func-args*"] = [Shen.type_func, function shen_user_lambda4945(Arg4944) {
  if (Arg4944.length < 2) return [Shen.type_func, shen_user_lambda4945, 2, Arg4944];
  var Arg4944_0 = Arg4944[0], Arg4944_1 = Arg4944[1];
  return ((Shen.empty$question$(Arg4944_1))
  ? []
  : (((Shen.is_type(Arg4944_1, Shen.type_cons) && (Shen.is_type(Arg4944_1[1], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg4944_0, Arg4944_1[1][2]]))))
  ? Arg4944_1[1][1]
  : (((Shen.is_type(Arg4944_1, Shen.type_cons) && Shen.is_type(Arg4944_1[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg4944_0, Arg4944_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-func-args*"]]);}))))}, 2, [], "js.int-func-args*"];





Shen.fns["js.int-func-args"] = [Shen.type_func, function shen_user_lambda4948(Arg4947) {
  if (Arg4947.length < 1) return [Shen.type_func, shen_user_lambda4948, 1, Arg4947];
  var Arg4947_0 = Arg4947[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg4947_0, (Shen.globals["js.int-funcs"])]);})}, 1, [], "js.int-func-args"];





Shen.fns["js.int-func?"] = [Shen.type_func, function shen_user_lambda4951(Arg4950) {
  if (Arg4950.length < 1) return [Shen.type_func, shen_user_lambda4951, 1, Arg4950];
  var Arg4950_0 = Arg4950[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg4950_0)))
  ? true
  : (!Shen.empty$question$(Shen.call(Shen.fns["js.int-func-args"], [Arg4950_0]))))}, 1, [], "js.int-func?"];





Shen.fns["js.esc-obj"] = [Shen.type_func, function shen_user_lambda4954(Arg4953) {
  if (Arg4953.length < 1) return [Shen.type_func, shen_user_lambda4954, 1, Arg4953];
  var Arg4953_0 = Arg4953[0];
  return (((typeof(Arg4953_0) == 'string'))
  ? ("\"" + (Shen.call(Shen.fns["js.esc-string"], [Arg4953_0, ""]) + "\""))
  : ((Shen.is_type(Arg4953_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4953_0]);})
  : (function() {
  return Shen.simple_error(("Object " + Shen.call(Shen.fns["shen.app"], [Arg4953_0, " cannot be escaped", [Shen.type_symbol, "shen.r"]])));})))}, 1, [], "js.esc-obj"];





Shen.fns["js.str-join*"] = [Shen.type_func, function shen_user_lambda4959(Arg4958) {
  if (Arg4958.length < 3) return [Shen.type_func, shen_user_lambda4959, 3, Arg4958];
  var Arg4958_0 = Arg4958[0], Arg4958_1 = Arg4958[1], Arg4958_2 = Arg4958[2];
  return ((Shen.empty$question$(Arg4958_0))
  ? Arg4958_2
  : (((Shen.is_type(Arg4958_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("", Arg4958_2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4958_0[2], Arg4958_1, Shen.call(Shen.fns["shen.app"], [Arg4958_0[1], "", [Shen.type_symbol, "shen.a"]])]);})
  : ((Shen.is_type(Arg4958_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4958_0[2], Arg4958_1, (Arg4958_2 + (Arg4958_1 + Shen.call(Shen.fns["shen.app"], [Arg4958_0[1], "", [Shen.type_symbol, "shen.a"]])))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-join*"]]);}))))}, 3, [], "js.str-join*"];





Shen.fns["js.str-join"] = [Shen.type_func, function shen_user_lambda4963(Arg4962) {
  if (Arg4962.length < 2) return [Shen.type_func, shen_user_lambda4963, 2, Arg4962];
  var Arg4962_0 = Arg4962[0], Arg4962_1 = Arg4962[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4962_0, Arg4962_1, ""]);})}, 2, [], "js.str-join"];





Shen.fns["js.arg-list"] = [Shen.type_func, function shen_user_lambda4966(Arg4965) {
  if (Arg4965.length < 1) return [Shen.type_func, shen_user_lambda4966, 1, Arg4965];
  var Arg4965_0 = Arg4965[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join"], [Arg4965_0, ", "]);})}, 1, [], "js.arg-list"];





Shen.fns["js.arg-name"] = [Shen.type_func, function shen_user_lambda4970(Arg4969) {
  if (Arg4969.length < 2) return [Shen.type_func, shen_user_lambda4970, 2, Arg4969];
  var Arg4969_0 = Arg4969[0], Arg4969_1 = Arg4969[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg4969_1]), ("_" + Shen.call(Shen.fns["shen.app"], [Arg4969_0, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.arg-name"];





Shen.fns["js.tail-call-ret"] = [Shen.type_func, function shen_user_lambda4973(Arg4972) {
  if (Arg4972.length < 1) return [Shen.type_func, shen_user_lambda4973, 1, Arg4972];
  var Arg4972_0 = Arg4972[0];
  return ("(function() {\x0a  return " + Shen.call(Shen.fns["shen.app"], [Arg4972_0, ";})", [Shen.type_symbol, "shen.a"]]))}, 1, [], "js.tail-call-ret"];





Shen.fns["js.tail-call-expr"] = [Shen.type_func, function shen_user_lambda4977(Arg4976) {
  if (Arg4976.length < 2) return [Shen.type_func, shen_user_lambda4977, 2, Arg4976];
  var Arg4976_0 = Arg4976[0], Arg4976_1 = Arg4976[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg4976_0, false, Arg4976_1]);})}, 2, [], "js.tail-call-expr"];





Shen.fns["js.cond-case"] = [Shen.type_func, function shen_user_lambda4981(Arg4980) {
  if (Arg4980.length < 2) return [Shen.type_func, shen_user_lambda4981, 2, Arg4980];
  var Arg4980_0 = Arg4980[0], Arg4980_1 = Arg4980[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-expr"], [Arg4980_0, Arg4980_1]);})}, 2, [], "js.cond-case"];





Shen.fns["js.emit-cond*"] = [Shen.type_func, function shen_user_lambda4986(Arg4985) {
  if (Arg4985.length < 3) return [Shen.type_func, shen_user_lambda4986, 3, Arg4985];
  var Arg4985_0 = Arg4985[0], Arg4985_1 = Arg4985[1], Arg4985_2 = Arg4985[2];
  return ((Shen.empty$question$(Arg4985_0))
  ? (function() {
  return Shen.simple_error("cond failure: no default branch");})
  : (((Shen.is_type(Arg4985_0, Shen.type_cons) && (Shen.is_type(Arg4985_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg4985_0[1][1])) && (Shen.is_type(Arg4985_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4985_0[1][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg4985_0[1][2][1], Arg4985_1, Arg4985_2]);})
  : (((Shen.is_type(Arg4985_0, Shen.type_cons) && (Shen.is_type(Arg4985_0[1], Shen.type_cons) && (Shen.is_type(Arg4985_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4985_0[1][2][2])))))
  ? ("((" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.cond-case"], [Arg4985_0[1][1], Arg4985_2]), (")\x0a  ? " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg4985_0[1][2][1], Arg4985_1, Arg4985_2]), ("\x0a  : " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-cond*"], [Arg4985_0[2], Arg4985_1, Arg4985_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-cond*"]]);}))))}, 3, [], "js.emit-cond*"];





Shen.fns["js.emit-cond"] = [Shen.type_func, function shen_user_lambda4991(Arg4990) {
  if (Arg4990.length < 3) return [Shen.type_func, shen_user_lambda4991, 3, Arg4990];
  var Arg4990_0 = Arg4990[0], Arg4990_1 = Arg4990[1], Arg4990_2 = Arg4990[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond*"], [Arg4990_0, Arg4990_1, Arg4990_2]);})}, 3, [], "js.emit-cond"];





Shen.fns["js.emit-trap-error"] = [Shen.type_func, function shen_user_lambda4997(Arg4996) {
  if (Arg4996.length < 4) return [Shen.type_func, shen_user_lambda4997, 4, Arg4996];
  var Arg4996_0 = Arg4996[0], Arg4996_1 = Arg4996[1], Arg4996_2 = Arg4996[2], Arg4996_3 = Arg4996[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg4996_2)))
  ? ((R0 = ("function() {return " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg4996_0, false, Arg4996_3]), ";}", [Shen.type_symbol, "shen.a"]]))),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg4996_1, false, Arg4996_3])),
  ("Shen.trap_error(" + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4996_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.emit-trap-error"], [Arg4996_0, Arg4996_1, false, Arg4996_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-trap-error"]]);})))}, 4, [], "js.emit-trap-error"];





Shen.fns["js.predicate-op"] = [Shen.type_func, function shen_user_lambda5041(Arg5040) {
  if (Arg5040.length < 4) return [Shen.type_func, shen_user_lambda5041, 4, Arg5040];
  var Arg5040_0 = Arg5040[0], Arg5040_1 = Arg5040[1], Arg5040_2 = Arg5040[2], Arg5040_3 = Arg5040[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5040_0)) && (typeof(Arg5040_1) == 'number')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5040_0)) && (typeof(Arg5040_1) == 'string')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5040_0)) && Shen.unwind_tail(Shen.$eq$(true, Arg5040_1))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5040_0)) && Shen.unwind_tail(Shen.$eq$(false, Arg5040_1))))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5040_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, Arg5040_1, []], Arg5040_2, Arg5040_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5040_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5040_1, false, Arg5040_3]), ") == 'string')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5040_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5040_1, false, Arg5040_3]), ") == 'number')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol?"], Arg5040_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5040_1, false, Arg5040_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_symbol", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons?"], Arg5040_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5040_1, false, Arg5040_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_cons", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tuple?"], Arg5040_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5040_1, false, Arg5040_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.fns['shen.tuple']", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector?"], Arg5040_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, Arg5040_1, []], Arg5040_2, Arg5040_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "empty?"], Arg5040_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5040_1, []], Arg5040_2, Arg5040_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "absvector?"], Arg5040_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, Arg5040_1, []], Arg5040_2, Arg5040_3]);})
  : Shen.fail_obj)))))))))))))}, 4, [], "js.predicate-op"];





Shen.fns["js.math-op"] = [Shen.type_func, function shen_user_lambda5071(Arg5070) {
  if (Arg5070.length < 4) return [Shen.type_func, shen_user_lambda5071, 4, Arg5070];
  var Arg5070_0 = Arg5070[0], Arg5070_1 = Arg5070[1], Arg5070_2 = Arg5070[2], Arg5070_3 = Arg5070[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5070_0)) && (Shen.is_type(Arg5070_1, Shen.type_cons) && (Shen.is_type(Arg5070_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5070_1[2][2]) && ((typeof(Arg5070_1[1]) == 'number') && (typeof(Arg5070_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5070_1[1] + Arg5070_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5070_0)) && (Shen.is_type(Arg5070_1, Shen.type_cons) && (Shen.is_type(Arg5070_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5070_1[2][2]) && ((typeof(Arg5070_1[1]) == 'number') && (typeof(Arg5070_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5070_1[1] - Arg5070_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5070_0)) && (Shen.is_type(Arg5070_1, Shen.type_cons) && (Shen.is_type(Arg5070_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5070_1[2][2]) && ((typeof(Arg5070_1[1]) == 'number') && (typeof(Arg5070_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5070_1[1] * Arg5070_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/"], Arg5070_0)) && (Shen.is_type(Arg5070_1, Shen.type_cons) && (Shen.is_type(Arg5070_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5070_1[2][2]) && ((typeof(Arg5070_1[1]) == 'number') && (typeof(Arg5070_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5070_1[1] / Arg5070_1[2][1]));})
  : (((Shen.is_type(Arg5070_1, Shen.type_cons) && (Shen.is_type(Arg5070_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5070_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5070_0, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], []]]]]])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5070_1[1], false, Arg5070_3]), (" " + Shen.call(Shen.fns["shen.app"], [Arg5070_0, (" " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5070_1[2][1], false, Arg5070_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))}, 4, [], "js.math-op"];





Shen.fns["js.equality-op"] = [Shen.type_func, function shen_user_lambda5094(Arg5093) {
  if (Arg5093.length < 3) return [Shen.type_func, shen_user_lambda5094, 3, Arg5093];
  var Arg5093_0 = Arg5093[0], Arg5093_1 = Arg5093[1], Arg5093_2 = Arg5093[2];
  return (((Shen.is_type(Arg5093_0, Shen.type_cons) && (Shen.is_type(Arg5093_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5093_0[2][2]) && ((typeof(Arg5093_0[1]) == 'number') && (typeof(Arg5093_0[2][1]) == 'number'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5093_0[1], Arg5093_0[2][1])));})
  : (((Shen.is_type(Arg5093_0, Shen.type_cons) && (Shen.is_type(Arg5093_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5093_0[2][2]) && ((typeof(Arg5093_0[1]) == 'string') && (typeof(Arg5093_0[2][1]) == 'string'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5093_0[1], Arg5093_0[2][1])));})
  : (((Shen.is_type(Arg5093_0, Shen.type_cons) && (Shen.is_type(Arg5093_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5093_0[2][2]) && (Shen.boolean$question$(Arg5093_0[1]) && Shen.boolean$question$(Arg5093_0[2][1]))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5093_0[1], Arg5093_0[2][1])));})
  : (((Shen.is_type(Arg5093_0, Shen.type_cons) && (Shen.is_type(Arg5093_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5093_0[2][1]) && Shen.empty$question$(Arg5093_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5093_0[1], []], Arg5093_1, Arg5093_2]);})
  : (((Shen.is_type(Arg5093_0, Shen.type_cons) && (Shen.empty$question$(Arg5093_0[1]) && (Shen.is_type(Arg5093_0[2], Shen.type_cons) && Shen.empty$question$(Arg5093_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], Arg5093_0[2], Arg5093_1, Arg5093_2]);})
  : (((Shen.is_type(Arg5093_0, Shen.type_cons) && (Shen.is_type(Arg5093_0[2], Shen.type_cons) && Shen.empty$question$(Arg5093_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "="], Arg5093_0, Arg5093_1, Arg5093_2]);})
  : Shen.fail_obj))))))}, 3, [], "js.equality-op"];





Shen.fns["js.order-op"] = [Shen.type_func, function shen_user_lambda5117(Arg5116) {
  if (Arg5116.length < 4) return [Shen.type_func, shen_user_lambda5117, 4, Arg5116];
  var Arg5116_0 = Arg5116[0], Arg5116_1 = Arg5116[1], Arg5116_2 = Arg5116[2], Arg5116_3 = Arg5116[3];
  var R0, R1;
  return (((Shen.is_type(Arg5116_1, Shen.type_cons) && (Shen.is_type(Arg5116_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5116_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5116_0, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<="], []]]]]])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5116_1[1], false, Arg5116_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5116_1[2][1], false, Arg5116_3])),
  ("(" + Shen.call(Shen.fns["shen.app"], [R0, (" " + Shen.call(Shen.fns["shen.app"], [Arg5116_0, (" " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : Shen.fail_obj)}, 4, [], "js.order-op"];





Shen.fns["js.logic-op"] = [Shen.type_func, function shen_user_lambda5161(Arg5160) {
  if (Arg5160.length < 4) return [Shen.type_func, shen_user_lambda5161, 4, Arg5160];
  var Arg5160_0 = Arg5160[0], Arg5160_1 = Arg5160[1], Arg5160_2 = Arg5160[2], Arg5160_3 = Arg5160[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5160_0)) && (Shen.is_type(Arg5160_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5160_1[1])) && Shen.empty$question$(Arg5160_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5160_0)) && (Shen.is_type(Arg5160_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5160_1[1])) && Shen.empty$question$(Arg5160_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5160_0)) && (Shen.is_type(Arg5160_1, Shen.type_cons) && Shen.empty$question$(Arg5160_1[2]))))
  ? ("(!" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5160_1[1], false, Arg5160_3]), ")", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5160_0)) && (Shen.is_type(Arg5160_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5160_1[1])) && (Shen.is_type(Arg5160_1[2], Shen.type_cons) && Shen.empty$question$(Arg5160_1[2][2]))))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5160_0)) && (Shen.is_type(Arg5160_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5160_1[1])) && (Shen.is_type(Arg5160_1[2], Shen.type_cons) && Shen.empty$question$(Arg5160_1[2][2]))))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5160_0)) && (Shen.is_type(Arg5160_1, Shen.type_cons) && (Shen.is_type(Arg5160_1[2], Shen.type_cons) && Shen.empty$question$(Arg5160_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5160_1[1], false, Arg5160_3]), (" && " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5160_1[2][1], false, Arg5160_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5160_0)) && (Shen.is_type(Arg5160_1, Shen.type_cons) && (Shen.is_type(Arg5160_1[2], Shen.type_cons) && Shen.empty$question$(Arg5160_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5160_1[1], false, Arg5160_3]), (" || " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5160_1[2][1], false, Arg5160_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))))}, 4, [], "js.logic-op"];





Shen.fns["js.emit-set*"] = [Shen.type_func, function shen_user_lambda5167(Arg5166) {
  if (Arg5166.length < 4) return [Shen.type_func, shen_user_lambda5167, 4, Arg5166];
  var Arg5166_0 = Arg5166[0], Arg5166_1 = Arg5166[1], Arg5166_2 = Arg5166[2], Arg5166_3 = Arg5166[3];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5166_3)))
  ? ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5166_0)])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [Arg5166_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5166_3)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5166_0, false, Arg5166_2])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("[1]] = " + Shen.call(Shen.fns["shen.app"], [Arg5166_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-set*"]]);})))}, 4, [], "js.emit-set*"];





Shen.fns["js.emit-set"] = [Shen.type_func, function shen_user_lambda5172(Arg5171) {
  if (Arg5171.length < 3) return [Shen.type_func, shen_user_lambda5172, 3, Arg5171];
  var Arg5171_0 = Arg5171[0], Arg5171_1 = Arg5171[1], Arg5171_2 = Arg5171[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-set*"], [Arg5171_0, Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5171_1, false, Arg5171_2]), Arg5171_2, Shen.is_type(Arg5171_0, Shen.type_symbol)]);})}, 3, [], "js.emit-set"];





Shen.fns["js.emit-value"] = [Shen.type_func, function shen_user_lambda5177(Arg5176) {
  if (Arg5176.length < 3) return [Shen.type_func, shen_user_lambda5177, 3, Arg5176];
  var Arg5176_0 = Arg5176[0], Arg5176_1 = Arg5176[1], Arg5176_2 = Arg5176[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5176_2)))
  ? ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5176_0)]), "])", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5176_2)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5176_0, false, Arg5176_1])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, "[1]])", [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-value"]]);})))}, 3, [], "js.emit-value"];





Shen.fns["js.basic-op"] = [Shen.type_func, function shen_user_lambda5231(Arg5230) {
  if (Arg5230.length < 4) return [Shen.type_func, shen_user_lambda5231, 4, Arg5230];
  var Arg5230_0 = Arg5230[0], Arg5230_1 = Arg5230[1], Arg5230_2 = Arg5230[2], Arg5230_3 = Arg5230[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("true", Arg5230_1[1])) && Shen.empty$question$(Arg5230_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("false", Arg5230_1[1])) && Shen.empty$question$(Arg5230_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.empty$question$(Arg5230_1[2]) && (typeof(Arg5230_1[1]) == 'string')))))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Arg5230_1[1]]), "]", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && Shen.empty$question$(Arg5230_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "intern"], Arg5230_1, Arg5230_2, Arg5230_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.is_type(Arg5230_1[2], Shen.type_cons) && Shen.empty$question$(Arg5230_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[1], false, Arg5230_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[2][1], false, Arg5230_3])),
  ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.is_type(Arg5230_1[2], Shen.type_cons) && Shen.empty$question$(Arg5230_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[1], false, Arg5230_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[2][1], false, Arg5230_3])),
  ("[Shen.fns['shen.tuple'], " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.is_type(Arg5230_1[2], Shen.type_cons) && Shen.empty$question$(Arg5230_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set"], [Arg5230_1[1], Arg5230_1[2][1], Arg5230_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "value"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && Shen.empty$question$(Arg5230_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-value"], [Arg5230_1[1], Arg5230_3, Shen.is_type(Arg5230_1[1], Shen.type_symbol)]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "thaw"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && Shen.empty$question$(Arg5230_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-thaw"], [Arg5230_1[1], Arg5230_2, Arg5230_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && Shen.empty$question$(Arg5230_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[1], true, Arg5230_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "hd"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && Shen.empty$question$(Arg5230_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[1], false, Arg5230_3]), "[1]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tl"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && Shen.empty$question$(Arg5230_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[1], false, Arg5230_3]), "[2]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.is_type(Arg5230_1[2], Shen.type_cons) && Shen.empty$question$(Arg5230_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[1], false, Arg5230_3]), (" + " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[2][1], false, Arg5230_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pos"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.is_type(Arg5230_1[2], Shen.type_cons) && Shen.empty$question$(Arg5230_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[1], false, Arg5230_3]), ("[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[2][1], false, Arg5230_3]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "address->"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.is_type(Arg5230_1[2], Shen.type_cons) && (Shen.is_type(Arg5230_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg5230_1[2][2][2]))))))
  ? ("Shen.absvector_set(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[1], false, Arg5230_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[2][1], false, Arg5230_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[2][2][1], false, Arg5230_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-address"], Arg5230_0)) && (Shen.is_type(Arg5230_1, Shen.type_cons) && (Shen.is_type(Arg5230_1[2], Shen.type_cons) && Shen.empty$question$(Arg5230_1[2][2])))))
  ? ("Shen.absvector_ref(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[1], false, Arg5230_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5230_1[2][1], false, Arg5230_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj))))))))))))))))}, 4, [], "js.basic-op"];





Shen.fns["js.int-funcall*"] = [Shen.type_func, function shen_user_lambda5238(Arg5237) {
  if (Arg5237.length < 5) return [Shen.type_func, shen_user_lambda5238, 5, Arg5237];
  var Arg5237_0 = Arg5237[0], Arg5237_1 = Arg5237[1], Arg5237_2 = Arg5237[2], Arg5237_3 = Arg5237[3], Arg5237_4 = Arg5237[4];
  var R0;
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg5237_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5237_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5237_0, Arg5237_1, false, false, Arg5237_4]);})
  : (((Shen.unwind_tail(Shen.$eq$(true, Arg5237_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5237_3))))
  ? ((R0 = Shen.call(Shen.fns["js.int-funcall*"], [Arg5237_0, Arg5237_1, false, false, Arg5237_4])),
  ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5237_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5237_3))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5240(Arg5239) {
  if (Arg5239.length < 2) return [Shen.type_func, shen_user_lambda5240, 2, Arg5239];
  var Arg5239_0 = Arg5239[0], Arg5239_1 = Arg5239[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5239_1, false, Arg5239_0]);})}, 2, [Arg5237_4], undefined], Arg5237_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.intfunc-name"], [Arg5237_0]), ("(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);}))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5237_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5237_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.int-funcall*"], [Arg5237_0, Arg5237_1, false, false, Arg5237_4])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-funcall*"]]);})))))}, 5, [], "js.int-funcall*"];





Shen.fns["js.int-funcall"] = [Shen.type_func, function shen_user_lambda5246(Arg5245) {
  if (Arg5245.length < 4) return [Shen.type_func, shen_user_lambda5246, 4, Arg5245];
  var Arg5245_0 = Arg5245[0], Arg5245_1 = Arg5245[1], Arg5245_2 = Arg5245[2], Arg5245_3 = Arg5245[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["element?"], [Arg5245_0, (Shen.globals["js.tail-internals"])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5245_0, Arg5245_1, R0, Arg5245_2, Arg5245_3]);}))}, 4, [], "js.int-funcall"];





Shen.fns["js.int-curry"] = [Shen.type_func, function shen_user_lambda5252(Arg5251) {
  if (Arg5251.length < 4) return [Shen.type_func, shen_user_lambda5252, 4, Arg5251];
  var Arg5251_0 = Arg5251[0], Arg5251_1 = Arg5251[1], Arg5251_2 = Arg5251[2], Arg5251_3 = Arg5251[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.func-name"], [Arg5251_0]), "[1]", [Shen.type_symbol, "shen.a"]])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5254(Arg5253) {
  if (Arg5253.length < 2) return [Shen.type_func, shen_user_lambda5254, 2, Arg5253];
  var Arg5253_0 = Arg5253[0], Arg5253_1 = Arg5253[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5253_1, false, Arg5253_0]);})}, 2, [Arg5251_3], undefined], Arg5251_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [Shen.call(Shen.fns["length"], [Arg5251_1]), R0, R1, []]);}))}, 4, [], "js.int-curry"];





Shen.fns["js.internal-op*"] = [Shen.type_func, function shen_user_lambda5265(Arg5264) {
  if (Arg5264.length < 5) return [Shen.type_func, shen_user_lambda5265, 5, Arg5264];
  var Arg5264_0 = Arg5264[0], Arg5264_1 = Arg5264[1], Arg5264_2 = Arg5264[2], Arg5264_3 = Arg5264[3], Arg5264_4 = Arg5264[4];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg5264_1]), Shen.call(Shen.fns["length"], [Arg5264_2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [Arg5264_0, Arg5264_2, Arg5264_3, Arg5264_4]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.int-curry"], [Arg5264_0, Arg5264_1, Arg5264_2, Arg5264_4]);}))}, 5, [], "js.internal-op*"];





Shen.fns["js.internal-op"] = [Shen.type_func, function shen_user_lambda5271(Arg5270) {
  if (Arg5270.length < 4) return [Shen.type_func, shen_user_lambda5271, 4, Arg5270];
  var Arg5270_0 = Arg5270[0], Arg5270_1 = Arg5270[1], Arg5270_2 = Arg5270[2], Arg5270_3 = Arg5270[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.int-func-args"], [Arg5270_0])),
  Shen.call(Shen.fns["js.intfunc-name"], [Arg5270_0]),
  ((Shen.empty$question$(R0))
  ? Shen.fail_obj
  : (function() {
  return Shen.call_tail(Shen.fns["js.internal-op*"], [Arg5270_0, R0, Arg5270_1, Arg5270_2, Arg5270_3]);})))}, 4, [], "js.internal-op"];





Shen.fns["js.emit-do"] = [Shen.type_func, function shen_user_lambda5277(Arg5276) {
  if (Arg5276.length < 4) return [Shen.type_func, shen_user_lambda5277, 4, Arg5276];
  var Arg5276_0 = Arg5276[0], Arg5276_1 = Arg5276[1], Arg5276_2 = Arg5276[2], Arg5276_3 = Arg5276[3];
  var R0, R1;
  return (((Shen.is_type(Arg5276_0, Shen.type_cons) && Shen.empty$question$(Arg5276_0[2])))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5279(Arg5278) {
  if (Arg5278.length < 2) return [Shen.type_func, shen_user_lambda5279, 2, Arg5278];
  var Arg5278_0 = Arg5278[0], Arg5278_1 = Arg5278[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5278_1, false, Arg5278_0]);})}, 2, [Arg5276_2], undefined], Shen.call(Shen.fns["reverse"], [Arg5276_3])])),
  (R1 = ",\x0a  "),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.str-join"], [R0, R1]), (",\x0a  " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5276_0[1], Arg5276_1, Arg5276_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.is_type(Arg5276_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5276_0[2], Arg5276_1, Arg5276_2, [Shen.type_cons, Arg5276_0[1], Arg5276_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-do"]]);})))}, 4, [], "js.emit-do"];





Shen.fns["js.std-op"] = [Shen.type_func, function shen_user_lambda5305(Arg5304) {
  if (Arg5304.length < 4) return [Shen.type_func, shen_user_lambda5305, 4, Arg5304];
  var Arg5304_0 = Arg5304[0], Arg5304_1 = Arg5304[1], Arg5304_2 = Arg5304[2], Arg5304_3 = Arg5304[3];
  var R0, R1;
  return ((R0 = (new Shen.Freeze([Arg5304_0, Arg5304_1, Arg5304_2, Arg5304_3], function(Arg5306) {
  var Arg5306_0 = Arg5306[0], Arg5306_1 = Arg5306[1], Arg5306_2 = Arg5306[2], Arg5306_3 = Arg5306[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js.math-op"], [Arg5306_0, Arg5306_1, Arg5306_2, Arg5306_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5306_0, Arg5306_1, Arg5306_2, Arg5306_3], function(Arg5308) {
  var Arg5308_0 = Arg5308[0], Arg5308_1 = Arg5308[1], Arg5308_2 = Arg5308[2], Arg5308_3 = Arg5308[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js.logic-op"], [Arg5308_0, Arg5308_1, Arg5308_2, Arg5308_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.order-op"], [Arg5308_0, Arg5308_1, Arg5308_2, Arg5308_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.basic-op"], [Arg5308_0, Arg5308_1, Arg5308_2, Arg5308_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5308_0, Arg5308_1, Arg5308_2, Arg5308_3], function(Arg5310) {
  var Arg5310_0 = Arg5310[0], Arg5310_1 = Arg5310[1], Arg5310_2 = Arg5310[2], Arg5310_3 = Arg5310[3];
  return (function() {
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "trap-error"], Arg5310_0)) && (Shen.is_type(Arg5310_1, Shen.type_cons) && (Shen.is_type(Arg5310_1[2], Shen.type_cons) && Shen.empty$question$(Arg5310_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-trap-error"], [Arg5310_1[1], Arg5310_1[2][1], Arg5310_2, Arg5310_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg5310_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5310_1, Arg5310_2, Arg5310_3, []]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5310_0)) && Shen.empty$question$(Arg5310_1)))
  ? "Shen.fail_obj"
  : Shen.fail_obj)));})}))),
  ((Shen.is_type(Arg5308_0, Shen.type_symbol))
  ? ((R3 = Shen.call(Shen.fns["js.internal-op"], [Arg5308_0, Arg5308_1, Arg5308_2, Arg5308_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4))
  : R4))
  : R4));})}))),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg5306_0)))
  ? ((R3 = Shen.call(Shen.fns["js.equality-op"], [Arg5306_1, Arg5306_2, Arg5306_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4));})}))),
  (((Shen.is_type(Arg5304_1, Shen.type_cons) && Shen.empty$question$(Arg5304_1[2])))
  ? ((R1 = Shen.call(Shen.fns["js.predicate-op"], [Arg5304_0, Arg5304_1[1], Arg5304_2, Arg5304_3])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))}, 4, [], "js.std-op"];





Shen.fns["js.mk-regs-aux"] = [Shen.type_func, function shen_user_lambda5323(Arg5322) {
  if (Arg5322.length < 5) return [Shen.type_func, shen_user_lambda5323, 5, Arg5322];
  var Arg5322_0 = Arg5322[0], Arg5322_1 = Arg5322[1], Arg5322_2 = Arg5322[2], Arg5322_3 = Arg5322[3], Arg5322_4 = Arg5322[4];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5322_1, Arg5322_0)))
  ? Arg5322_4
  : ((R0 = Shen.call(Shen.fns["@s"], [Arg5322_4, Shen.call(Shen.fns["@s"], [Arg5322_3, Shen.call(Shen.fns["@s"], [Shen.str(Shen.call(Shen.fns["js.context-varname"], [Arg5322_2])), Shen.str(Arg5322_0)])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [(Arg5322_0 + 1), Arg5322_1, Arg5322_2, ", ", R0]);})))}, 5, [], "js.mk-regs-aux"];





Shen.fns["js.mk-regs"] = [Shen.type_func, function shen_user_lambda5326(Arg5325) {
  if (Arg5325.length < 1) return [Shen.type_func, shen_user_lambda5326, 1, Arg5325];
  var Arg5325_0 = Arg5325[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [0, Shen.call(Shen.fns["js.context-nregs"], [Arg5325_0]), Arg5325_0, "var ", ""]);})}, 1, [], "js.mk-regs"];





Shen.fns["js.mk-regs-str"] = [Shen.type_func, function shen_user_lambda5329(Arg5328) {
  if (Arg5328.length < 1) return [Shen.type_func, shen_user_lambda5329, 1, Arg5328];
  var Arg5328_0 = Arg5328[0];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["js.context-nregs"], [Arg5328_0]), 0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-regs"], [Arg5328_0]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 1, [], "js.mk-regs-str"];





Shen.fns["js.mk-args-str-aux"] = [Shen.type_func, function shen_user_lambda5341(Arg5340) {
  if (Arg5340.length < 5) return [Shen.type_func, shen_user_lambda5341, 5, Arg5340];
  var Arg5340_0 = Arg5340[0], Arg5340_1 = Arg5340[1], Arg5340_2 = Arg5340[2], Arg5340_3 = Arg5340[3], Arg5340_4 = Arg5340[4];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5340_1, Arg5340_0)))
  ? Arg5340_4
  : ((R0 = "~A~A~A = ~A[~A]"),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5340_2])),
  (R2 = Shen.call(Shen.fns["js.arg-name"], [Arg5340_1, Arg5340_2])),
  (R2 = Shen.call(Shen.fns["shen.insert"], [Arg5340_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [Arg5340_3, Shen.call(Shen.fns["shen.insert"], [Arg5340_4, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-args-str-aux"], [Arg5340_0, (Arg5340_1 + 1), Arg5340_2, ", ", R2]);})))}, 5, [], "js.mk-args-str-aux"];





Shen.fns["js.mk-args-str"] = [Shen.type_func, function shen_user_lambda5347(Arg5346) {
  if (Arg5346.length < 2) return [Shen.type_func, shen_user_lambda5347, 2, Arg5346];
  var Arg5346_0 = Arg5346[0], Arg5346_1 = Arg5346[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5346_0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-args-str-aux"], [Arg5346_0, 0, Arg5346_1, "var ", ""]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 2, [], "js.mk-args-str"];





Shen.fns["js.emit-func-obj"] = [Shen.type_func, function shen_user_lambda5353(Arg5352) {
  if (Arg5352.length < 4) return [Shen.type_func, shen_user_lambda5353, 4, Arg5352];
  var Arg5352_0 = Arg5352[0], Arg5352_1 = Arg5352[1], Arg5352_2 = Arg5352[2], Arg5352_3 = Arg5352[3];
  var R0, R1;
  return ((((Shen.unwind_tail(Shen.$eq$(Arg5352_3, "")) || Shen.empty$question$(Arg5352_3)))
  ? (R0 = "undefined")
  : (R0 = Arg5352_3)),
  (R1 = Shen.call(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [Arg5352_2, ", "]), "]"])])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], ["S", Shen.call(Shen.fns["@s"], ["h", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], [".", Shen.call(Shen.fns["@s"], ["t", Shen.call(Shen.fns["@s"], ["y", Shen.call(Shen.fns["@s"], ["p", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["_", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["c", Shen.call(Shen.fns["@s"], [",", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [[Shen.type_cons, Arg5352_1, [Shen.type_cons, Shen.str(Arg5352_0), [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]], ", "]), "]"])])])])])])])])])])])])])])])])])]);}))}, 4, [], "js.emit-func-obj"];





Shen.fns["js.emit-func-closure"] = [Shen.type_func, function shen_user_lambda5358(Arg5357) {
  if (Arg5357.length < 3) return [Shen.type_func, shen_user_lambda5358, 3, Arg5357];
  var Arg5357_0 = Arg5357[0], Arg5357_1 = Arg5357[1], Arg5357_2 = Arg5357[2];
  var R0, R1;
  return ((R0 = "[~A, ~A, ~A, ~A]"),
  (R1 = "Shen.type_func"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [Arg5357_2, Shen.call(Shen.fns["shen.insert"], [Arg5357_0, Shen.call(Shen.fns["shen.insert"], [Arg5357_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])]);}))}, 3, [], "js.emit-func-closure"];





Shen.fns["js.emit-func-body"] = [Shen.type_func, function shen_user_lambda5365(Arg5364) {
  if (Arg5364.length < 5) return [Shen.type_func, shen_user_lambda5365, 5, Arg5364];
  var Arg5364_0 = Arg5364[0], Arg5364_1 = Arg5364[1], Arg5364_2 = Arg5364[2], Arg5364_3 = Arg5364[3], Arg5364_4 = Arg5364[4];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.func-name"], [Arg5364_1])),
  ((Shen.empty$question$(Arg5364_0))
  ? []
  : Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5364_0)])),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5364_4])),
  (R2 = Shen.call(Shen.fns["js.emit-func-closure"], [Arg5364_2, R0, R1])),
  (R2 = ("if (" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg5364_4]), (".length < " + Shen.call(Shen.fns["shen.app"], [Arg5364_2, (") return " + Shen.call(Shen.fns["shen.app"], [R2, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))),
  (R3 = "function ~A(~A) {~%  ~A;~%  ~A~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5364_3, true, Arg5364_4])),
  (R5 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5364_4])),
  (R6 = Shen.call(Shen.fns["js.mk-args-str"], [Arg5364_2, Arg5364_4])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R5, Shen.call(Shen.fns["shen.insert"], [R6, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.proc-nl"], [R3])])])])])])]);}))}, 5, [], "js.emit-func-body"];





Shen.fns["js.emit-mk-func"] = [Shen.type_func, function shen_user_lambda5371(Arg5370) {
  if (Arg5370.length < 4) return [Shen.type_func, shen_user_lambda5371, 4, Arg5370];
  var Arg5370_0 = Arg5370[0], Arg5370_1 = Arg5370[1], Arg5370_2 = Arg5370[2], Arg5370_3 = Arg5370[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5370_0)])),
  (R1 = Shen.call(Shen.fns["js.func-name"], [Arg5370_0])),
  (R2 = Shen.call(Shen.fns["length"], [Arg5370_1])),
  (R3 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R3 = Shen.call(Shen.fns["js.emit-func-body"], [R1, R3, R2, Arg5370_2, Arg5370_3])),
  (R3 = Shen.call(Shen.fns["js.emit-func-obj"], [R2, R3, [], R0])),
  ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [R3, ";\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))}, 4, [], "js.emit-mk-func"];





Shen.fns["js.emit-mk-closure"] = [Shen.type_func, function shen_user_lambda5377(Arg5376) {
  if (Arg5376.length < 4) return [Shen.type_func, shen_user_lambda5377, 4, Arg5376];
  var Arg5376_0 = Arg5376[0], Arg5376_1 = Arg5376[1], Arg5376_2 = Arg5376[2], Arg5376_3 = Arg5376[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5376_3])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R2 = (Shen.call(Shen.fns["length"], [Arg5376_1]) + Shen.call(Shen.fns["length"], [Arg5376_0]))),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  (R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [[], R0, R2, Arg5376_2, R1])),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5376_3, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5379(Arg5378) {
  if (Arg5378.length < 2) return [Shen.type_func, shen_user_lambda5379, 2, Arg5378];
  var Arg5378_0 = Arg5378[0], Arg5378_1 = Arg5378[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5378_1, false, Arg5378_0]);})}, 2, [Arg5376_3], undefined], Arg5376_1])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [R2, R0, R1, []]);}))}, 4, [], "js.emit-mk-closure"];





Shen.fns["js.emit-freeze"] = [Shen.type_func, function shen_user_lambda5384(Arg5383) {
  if (Arg5383.length < 3) return [Shen.type_func, shen_user_lambda5384, 3, Arg5383];
  var Arg5383_0 = Arg5383[0], Arg5383_1 = Arg5383[1], Arg5383_2 = Arg5383[2];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5383_2])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]]),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5383_2, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5386(Arg5385) {
  if (Arg5385.length < 2) return [Shen.type_func, shen_user_lambda5386, 2, Arg5385];
  var Arg5385_0 = Arg5385[0], Arg5385_1 = Arg5385[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5385_1, false, Arg5385_0]);})}, 2, [Arg5383_2], undefined], Arg5383_0])),
  (R2 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R3 = Shen.call(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5383_1, true, R1])])),
  (R0 = Shen.call(Shen.fns["js.mk-args-str"], [Shen.call(Shen.fns["length"], [R0]), R1])),
  (R4 = "function(~A) {~%  ~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["shen.insert"], [R3, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.insert"], [Shen.call(Shen.fns["js.context-argname"], [R1]), Shen.call(Shen.fns["shen.proc-nl"], [R4])])])])),
  (R3 = "(new Shen.Freeze([~A], ~A))"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.proc-nl"], [R3])])]);}))}, 3, [], "js.emit-freeze"];





Shen.fns["js.emit-thaw"] = [Shen.type_func, function shen_user_lambda5391(Arg5390) {
  if (Arg5390.length < 3) return [Shen.type_func, shen_user_lambda5391, 3, Arg5390];
  var Arg5390_0 = Arg5390[0], Arg5390_1 = Arg5390[1], Arg5390_2 = Arg5390[2];
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5390_1)))
  ? ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-thaw"], [Arg5390_0, true, Arg5390_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5390_1)))
  ? ("Shen.thaw(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5390_0, false, Arg5390_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-thaw"]]);})))}, 3, [], "js.emit-thaw"];





Shen.fns["js.emit-get-arg"] = [Shen.type_func, function shen_user_lambda5395(Arg5394) {
  if (Arg5394.length < 2) return [Shen.type_func, shen_user_lambda5395, 2, Arg5394];
  var Arg5394_0 = Arg5394[0], Arg5394_1 = Arg5394[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.arg-name"], [Arg5394_0, Arg5394_1]);})}, 2, [], "js.emit-get-arg"];





Shen.fns["js.emit-set-reg"] = [Shen.type_func, function shen_user_lambda5400(Arg5399) {
  if (Arg5399.length < 3) return [Shen.type_func, shen_user_lambda5400, 3, Arg5399];
  var Arg5399_0 = Arg5399[0], Arg5399_1 = Arg5399[1], Arg5399_2 = Arg5399[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5399_1, false, Arg5399_2])),
  Shen.call(Shen.fns["js.context-nregs->"], [Arg5399_2, Shen.call(Shen.fns["js.max"], [(Arg5399_0 + 1), Shen.call(Shen.fns["js.context-nregs"], [Arg5399_2])])]),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5399_2]), Shen.call(Shen.fns["shen.app"], [Arg5399_0, (" = " + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])))}, 3, [], "js.emit-set-reg"];





Shen.fns["js.emit-get-reg"] = [Shen.type_func, function shen_user_lambda5404(Arg5403) {
  if (Arg5403.length < 2) return [Shen.type_func, shen_user_lambda5404, 2, Arg5403];
  var Arg5403_0 = Arg5403[0], Arg5403_1 = Arg5403[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5403_1]), Shen.call(Shen.fns["shen.app"], [Arg5403_0, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.emit-get-reg"];





Shen.fns["js.func-arg"] = [Shen.type_func, function shen_user_lambda5408(Arg5407) {
  if (Arg5407.length < 2) return [Shen.type_func, shen_user_lambda5408, 2, Arg5407];
  var Arg5407_0 = Arg5407[0], Arg5407_1 = Arg5407[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5407_1, false, Arg5407_0]);})}, 2, [], "js.func-arg"];





Shen.fns["js.emit-funcall*"] = [Shen.type_func, function shen_user_lambda5414(Arg5413) {
  if (Arg5413.length < 4) return [Shen.type_func, shen_user_lambda5414, 4, Arg5413];
  var Arg5413_0 = Arg5413[0], Arg5413_1 = Arg5413[1], Arg5413_2 = Arg5413[2], Arg5413_3 = Arg5413[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5413_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5416(Arg5415) {
  if (Arg5415.length < 2) return [Shen.type_func, shen_user_lambda5416, 2, Arg5415];
  var Arg5415_0 = Arg5415[0], Arg5415_1 = Arg5415[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5415_1, false, Arg5415_0]);})}, 2, [Arg5413_3], undefined], Arg5413_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R1 = "Shen.call_tail"),
  (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["shen.app"], [R1, ("(" + Shen.call(Shen.fns["shen.app"], [Arg5413_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])]);}))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5413_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5418(Arg5417) {
  if (Arg5417.length < 2) return [Shen.type_func, shen_user_lambda5418, 2, Arg5417];
  var Arg5417_0 = Arg5417[0], Arg5417_1 = Arg5417[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5417_1, false, Arg5417_0]);})}, 2, [Arg5413_3], undefined], Arg5413_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  ("Shen.call(" + Shen.call(Shen.fns["shen.app"], [Arg5413_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-funcall*"]]);})))}, 4, [], "js.emit-funcall*"];





Shen.fns["js.emit-funcall"] = [Shen.type_func, function shen_user_lambda5424(Arg5423) {
  if (Arg5423.length < 4) return [Shen.type_func, shen_user_lambda5424, 4, Arg5423];
  var Arg5423_0 = Arg5423[0], Arg5423_1 = Arg5423[1], Arg5423_2 = Arg5423[2], Arg5423_3 = Arg5423[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5423_0)])),
  (R0 = ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, "]", [Shen.type_symbol, "shen.a"]]))),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R0, Arg5423_1, Arg5423_2, Arg5423_3]);}))}, 4, [], "js.emit-funcall"];





Shen.fns["js.js-from-kl-expr"] = [Shen.type_func, function shen_user_lambda5429(Arg5428) {
  if (Arg5428.length < 3) return [Shen.type_func, shen_user_lambda5429, 3, Arg5428];
  var Arg5428_0 = Arg5428[0], Arg5428_1 = Arg5428[1], Arg5428_2 = Arg5428[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr*"], [Arg5428_0, Arg5428_1, Arg5428_2])),
  (((typeof(R0) == 'string'))
  ? R0
  : (function() {
  return Shen.simple_error(("ERROR: expr " + Shen.call(Shen.fns["shen.app"], [Arg5428_0, (" => " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]])));})))}, 3, [], "js.js-from-kl-expr"];





Shen.fns["js.js-from-kl-expr*"] = [Shen.type_func, function shen_user_lambda5488(Arg5487) {
  if (Arg5487.length < 3) return [Shen.type_func, shen_user_lambda5488, 3, Arg5487];
  var Arg5487_0 = Arg5487[0], Arg5487_1 = Arg5487[1], Arg5487_2 = Arg5487[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg5487_0))
  ? "[]"
  : (((typeof(Arg5487_0) == 'number'))
  ? (function() {
  return Shen.str(Arg5487_0);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg5487_0, Shen.fail_obj)))
  ? "shen_fail_obj"
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5487_0)))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5487_0)))
  ? "false"
  : ((Shen.is_type(Arg5487_0, Shen.type_symbol))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.str(Arg5487_0), "]", [Shen.type_symbol, "shen.s"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bar!"], Arg5487_0)))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], ["|", "]", [Shen.type_symbol, "shen.s"]]))
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2][2]))))))
  ? ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5487_0[2][1], false, Arg5487_2]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5487_0[2][2][1], false, Arg5487_2]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5487_0[2][1], Arg5487_1, Arg5487_2]);})
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg5487_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [Arg5487_0[2], Arg5487_1, Arg5487_2]);})
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [[Shen.type_cons, [Shen.type_cons, Arg5487_0[2][1], [Shen.type_cons, Arg5487_0[2][2][1], []]], [Shen.type_cons, [Shen.type_cons, true, Arg5487_0[2][2][2]], []]], Arg5487_1, Arg5487_2]);})
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2])))))
  ? (function() {
  return Shen.simple_error("Wrong freeze code!");})
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-freeze"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-freeze"], [Arg5487_0[2][2][1], Arg5487_0[2][2][2][1], Arg5487_2]);})
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-arg"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-arg"], [Arg5487_0[2][1], Arg5487_2]);})
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-reg"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-reg"], [Arg5487_0[2][1], Arg5487_2]);})
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-set-reg!"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set-reg"], [Arg5487_0[2][1], Arg5487_0[2][2][1], Arg5487_2]);})
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-func"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-func"], [Arg5487_0[2][1], Arg5487_0[2][2][1], Arg5487_0[2][2][2][2][1], Arg5487_2]);})
  : (((Shen.is_type(Arg5487_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-closure"], Arg5487_0[1])) && (Shen.is_type(Arg5487_0[2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5487_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5487_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-closure"], [Arg5487_0[2][1], Arg5487_0[2][2][2][1], Arg5487_0[2][2][2][2][1], Arg5487_2]);})
  : ((R0 = (new Shen.Freeze([Arg5487_0, Arg5487_1, Arg5487_2], function(Arg5489) {
  var Arg5489_0 = Arg5489[0], Arg5489_1 = Arg5489[1], Arg5489_2 = Arg5489[2];
  return (function() {
  return (((Shen.is_type(Arg5489_0, Shen.type_cons) && Shen.is_type(Arg5489_0[1], Shen.type_cons)))
  ? ((R3 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5489_0[1], false, Arg5489_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R3, Arg5489_0[2], Arg5489_1, Arg5489_2]);}))
  : ((Shen.is_type(Arg5489_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall"], [Arg5489_0[1], Arg5489_0[2], Arg5489_1, Arg5489_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.esc-obj"], [Arg5489_0]);})));})}))),
  ((Shen.is_type(Arg5487_0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["js.std-op"], [Arg5487_0[1], Arg5487_0[2], Arg5487_1, Arg5487_2])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))))))))))))))))))))}, 3, [], "js.js-from-kl-expr*"];





Shen.fns["js.js-from-kl-toplevel-expr"] = [Shen.type_func, function shen_user_lambda5494(Arg5493) {
  if (Arg5493.length < 2) return [Shen.type_func, shen_user_lambda5494, 2, Arg5493];
  var Arg5493_0 = Arg5493[0], Arg5493_1 = Arg5493[1];
  var R0, R1;
  return (((typeof(Arg5493_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5493_0, false, Arg5493_1]), ";\x0a", [Shen.type_symbol, "shen.a"]]);})
  : ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5493_0, false, Arg5493_1])),
  (R1 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5493_1])),
  (((Shen.call(Shen.fns["js.context-nregs"], [Arg5493_1]) > 0))
  ? ("((function() {\x0a  " + Shen.call(Shen.fns["shen.app"], [R1, ("return " + Shen.call(Shen.fns["shen.app"], [R0, "})());\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [R0, ";", [Shen.type_symbol, "shen.a"]]);}))))}, 2, [], "js.js-from-kl-toplevel-expr"];





Shen.fns["js.js-from-kl-toplevel"] = [Shen.type_func, function shen_user_lambda5512(Arg5511) {
  if (Arg5511.length < 3) return [Shen.type_func, shen_user_lambda5512, 3, Arg5511];
  var Arg5511_0 = Arg5511[0], Arg5511_1 = Arg5511[1], Arg5511_2 = Arg5511[2];
  return (((Shen.is_type(Arg5511_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5511_0[1])) && (Shen.is_type(Arg5511_0[2], Shen.type_cons) && (Shen.is_type(Arg5511_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5511_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.emit-set"], [Arg5511_0[2][1], Arg5511_0[2][2][1], Arg5511_2]), ";\x0a"]);})
  : (((Shen.is_type(Arg5511_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-func"], Arg5511_0[1])) && (Shen.is_type(Arg5511_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5511_1)) && Shen.call(Shen.fns["js.int-func?"], [Arg5511_0[2][1]]))))))
  ? ""
  : (((Shen.is_type(Arg5511_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-mk-func"], Arg5511_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5511_0, true, Arg5511_2]);})
  : (((Shen.is_type(Arg5511_0, Shen.type_cons) && (Shen.empty$question$(Arg5511_0[2]) && Shen.is_type(Arg5511_0[1], Shen.type_symbol))))
  ? ("Shen.call_toplevel(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5511_0[1])]), ")\x0a", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5511_0, Shen.type_cons) && Shen.empty$question$(Arg5511_0[2])))
  ? (function() {
  return Shen.simple_error(("Unexpected toplevel expression: " + Shen.call(Shen.fns["shen.app"], [Arg5511_0[1], "\x0a", [Shen.type_symbol, "shen.r"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-expr"], [Arg5511_0, Arg5511_2]);}))))))}, 3, [], "js.js-from-kl-toplevel"];





Shen.fns["js.js-from-kl-toplevel-forms"] = [Shen.type_func, function shen_user_lambda5520(Arg5519) {
  if (Arg5519.length < 4) return [Shen.type_func, shen_user_lambda5520, 4, Arg5519];
  var Arg5519_0 = Arg5519[0], Arg5519_1 = Arg5519[1], Arg5519_2 = Arg5519[2], Arg5519_3 = Arg5519[3];
  var R0;
  return ((Shen.empty$question$(Arg5519_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [Arg5519_2]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [Arg5519_3, "\x0a"])])]);})
  : ((Shen.is_type(Arg5519_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-toplevel"], [Arg5519_0[1], Arg5519_1, Arg5519_2])),
  (R0 = (Arg5519_3 + (R0 + "\x0a"))),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-forms"], [Arg5519_0[2], Arg5519_1, Arg5519_2, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.js-from-kl-toplevel-forms"]]);})))}, 4, [], "js.js-from-kl-toplevel-forms"];





Shen.fns["js.js-from-kl*"] = [Shen.type_func, function shen_user_lambda5525(Arg5524) {
  if (Arg5524.length < 3) return [Shen.type_func, shen_user_lambda5525, 3, Arg5524];
  var Arg5524_0 = Arg5524[0], Arg5524_1 = Arg5524[1], Arg5524_2 = Arg5524[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel"], [Arg5524_0, Arg5524_1, Arg5524_2]);})}, 3, [], "js.js-from-kl*"];





Shen.fns["js-from-kl"] = [Shen.type_func, function shen_user_lambda5528(Arg5527) {
  if (Arg5527.length < 1) return [Shen.type_func, shen_user_lambda5528, 1, Arg5527];
  var Arg5527_0 = Arg5527[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk"], [[Shen.type_cons, Arg5527_0, []], false])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-toplevel-forms"], [R1, (Shen.globals["js.skip-internals"]), R0, ""])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [R0]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [R1, "\x0a"])])]);}))}, 1, [], "js-from-kl"];





Shen.fns["js.js-from-kl-all"] = [Shen.type_func, function shen_user_lambda5531(Arg5530) {
  if (Arg5530.length < 1) return [Shen.type_func, shen_user_lambda5531, 1, Arg5530];
  var Arg5530_0 = Arg5530[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.walk"], [Arg5530_0, false])),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-all"], [R0, (Shen.globals["js.skip-internals"]), R1, ""]);}))}, 1, [], "js.js-from-kl-all"];





Shen.fns["reg-kl.shen-toplevel-5533"] = [Shen.type_func, function shen_user_lambda5534(Arg5532) {
  if (Arg5532.length < 0) return [Shen.type_func, shen_user_lambda5534, 0, Arg5532];
  return (Shen.globals["js.skip-internals"] = true)}, 0, [], "reg-kl.shen-toplevel-5533"];

Shen.call_toplevel("reg-kl.shen-toplevel-5533")





Shen.fns["js.dump-exprs-to-file"] = [Shen.type_func, function shen_user_lambda5540(Arg5539) {
  if (Arg5539.length < 2) return [Shen.type_func, shen_user_lambda5540, 2, Arg5539];
  var Arg5539_0 = Arg5539[0], Arg5539_1 = Arg5539[1];
  var R0;
  return ((Shen.empty$question$(Arg5539_0))
  ? true
  : ((Shen.is_type(Arg5539_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.kl-from-shen"], [Arg5539_0[1]])),
  (R0 = Shen.call(Shen.fns["js-from-kl"], [R0])),
  (((typeof(R0) == 'string'))
  ? [Shen.type_symbol, "_"]
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a string", [Shen.type_symbol, "shen.a"]]))),
  Shen.pr(R0, Arg5539_1),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-exprs-to-file"], [Arg5539_0[2], Arg5539_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.dump-exprs-to-file"]]);})))}, 2, [], "js.dump-exprs-to-file"];





Shen.fns["js.dump-to-file"] = [Shen.type_func, function shen_user_lambda5544(Arg5543) {
  if (Arg5543.length < 2) return [Shen.type_func, shen_user_lambda5544, 2, Arg5543];
  var Arg5543_0 = Arg5543[0], Arg5543_1 = Arg5543[1];
  var R0;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg5543_1, [Shen.type_symbol, "out"])),
  Shen.call(Shen.fns["js.dump-exprs-to-file"], [Arg5543_0, R0]),
  Shen.close(R0),
  true)}, 2, [], "js.dump-to-file"];





Shen.fns["js.kl-from-shen"] = [Shen.type_func, function shen_user_lambda5547(Arg5546) {
  if (Arg5546.length < 1) return [Shen.type_func, shen_user_lambda5547, 1, Arg5546];
  var Arg5546_0 = Arg5546[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda5549(Arg5548) {
  if (Arg5548.length < 1) return [Shen.type_func, shen_user_lambda5549, 1, Arg5548];
  var Arg5548_0 = Arg5548[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg5548_0]);})}, 1, [], undefined], Arg5546_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["js.package-contents"], [R0]))
  : (R0 = R0)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.elim-define"], [Shen.call(Shen.fns["shen.proc-input+"], [R0])]);}))}, 1, [], "js.kl-from-shen"];





Shen.fns["js-from-shen"] = [Shen.type_func, function shen_user_lambda5552(Arg5551) {
  if (Arg5551.length < 1) return [Shen.type_func, shen_user_lambda5552, 1, Arg5551];
  var Arg5551_0 = Arg5551[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js-from-kl"], [Shen.call(Shen.fns["js.kl-from-shen"], [Arg5551_0])]);})}, 1, [], "js-from-shen"];





Shen.fns["reg-kl.shen-toplevel-5554"] = [Shen.type_func, function shen_user_lambda5555(Arg5553) {
  if (Arg5553.length < 0) return [Shen.type_func, shen_user_lambda5555, 0, Arg5553];
  return (Shen.globals["js.*silence*"] = false)}, 0, [], "reg-kl.shen-toplevel-5554"];

Shen.call_toplevel("reg-kl.shen-toplevel-5554")





Shen.fns["js.dump"] = [Shen.type_func, function shen_user_lambda5560(Arg5559) {
  if (Arg5559.length < 3) return [Shen.type_func, shen_user_lambda5560, 3, Arg5559];
  var Arg5559_0 = Arg5559[0], Arg5559_1 = Arg5559[1], Arg5559_2 = Arg5559[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.app"], [Arg5559_2, Shen.call(Shen.fns["shen.app"], [Arg5559_1, ".js", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R1 = Shen.call(Shen.fns["shen.app"], [Arg5559_0, Shen.call(Shen.fns["shen.app"], [Arg5559_1, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R2 = Shen.call(Shen.fns["read-file"], [R1])),
  (((Shen.globals["js.*silence*"]))
  ? [Shen.type_symbol, "_"]
  : Shen.pr(("== " + Shen.call(Shen.fns["shen.app"], [R1, (" -> " + Shen.call(Shen.fns["shen.app"], [R0, "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []))),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-to-file"], [R2, R0]);}))}, 3, [], "js.dump"];





Shen.fns["reg-kl.shen-toplevel-5562"] = [Shen.type_func, function shen_user_lambda5563(Arg5561) {
  if (Arg5561.length < 0) return [Shen.type_func, shen_user_lambda5563, 0, Arg5561];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "js.dump"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-5562"];

Shen.call_toplevel("reg-kl.shen-toplevel-5562")





Shen.fns["reg-kl.shen-toplevel-5565"] = [Shen.type_func, function shen_user_lambda5566(Arg5564) {
  if (Arg5564.length < 0) return [Shen.type_func, shen_user_lambda5566, 0, Arg5564];
  return ((Shen.trap_error(function() {return (Shen.call(Shen.fns["register-dumper"], []),
  true);}, [Shen.type_func, function shen_user_lambda5568(Arg5567) {
  if (Arg5567.length < 1) return [Shen.type_func, shen_user_lambda5568, 1, Arg5567];
  var Arg5567_0 = Arg5567[0];
  return false}, 1, [], undefined]))
  ? (function() {
  return Shen.call_tail(Shen.fns["register-dumper"], [[Shen.type_symbol, "javascript"], [Shen.type_symbol, "all"], [Shen.type_symbol, "js.dump"]]);})
  : [Shen.type_symbol, "_"])}, 0, [], "reg-kl.shen-toplevel-5565"];

Shen.call_toplevel("reg-kl.shen-toplevel-5565")





Shen.fns["shenjs.repl-split-input-aux"] = [Shen.type_func, function shen_user_lambda5573(Arg5572) {
  if (Arg5572.length < 3) return [Shen.type_func, shen_user_lambda5573, 3, Arg5572];
  var Arg5572_0 = Arg5572[0], Arg5572_1 = Arg5572[1], Arg5572_2 = Arg5572[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5572_0))
  ? Arg5572_2
  : ((Shen.is_type(Arg5572_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg5572_0[1], Arg5572_1]),
  (R1 = Shen.call(Shen.fns["reverse"], [R0])),
  (R2 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R1, [Shen.type_func, function shen_user_lambda5575(Arg5574) {
  if (Arg5574.length < 1) return [Shen.type_func, shen_user_lambda5575, 1, Arg5574];
  return Shen.fail_obj}, 1, [], undefined]])),
  (function() {
  return Shen.call_tail(Shen.fns["shenjs.repl-split-input-aux"], [Arg5572_0[2], R0, (((Shen.unwind_tail(Shen.$eq$(R2, Shen.fail_obj)) || Shen.empty$question$(R2)))
  ? Arg5572_2
  : [Shen.fns['shen.tuple'], R1, Arg5572_0[2]])]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shenjs.repl-split-input-aux"]]);})))}, 3, [], "shenjs.repl-split-input-aux"];





Shen.fns["shenjs.repl-split-input"] = [Shen.type_func, function shen_user_lambda5578(Arg5577) {
  if (Arg5577.length < 1) return [Shen.type_func, shen_user_lambda5578, 1, Arg5577];
  var Arg5577_0 = Arg5577[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shenjs.repl-split-input-aux"], [Arg5577_0, [], []]);})}, 1, [], "shenjs.repl-split-input"];










Shen.fns["shen.shen->kl"] = [Shen.type_func, function shen_user_lambda6208(Arg6207) {
  if (Arg6207.length < 2) return [Shen.type_func, shen_user_lambda6208, 2, Arg6207];
  var Arg6207_0 = Arg6207[0], Arg6207_1 = Arg6207[1];
  return (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<define>"], [Shen.type_cons, Arg6207_0, Arg6207_1], [Shen.type_func, function shen_user_lambda6210(Arg6209) {
  if (Arg6209.length < 2) return [Shen.type_func, shen_user_lambda6210, 2, Arg6209];
  var Arg6209_0 = Arg6209[0], Arg6209_1 = Arg6209[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.shen-syntax-error"], [Arg6209_0, Arg6209_1]);})}, 2, [Arg6207_0], undefined]]);})}, 2, [], "shen.shen->kl"];





Shen.fns["shen.shen-syntax-error"] = [Shen.type_func, function shen_user_lambda6212(Arg6211) {
  if (Arg6211.length < 2) return [Shen.type_func, shen_user_lambda6212, 2, Arg6211];
  var Arg6211_0 = Arg6211[0], Arg6211_1 = Arg6211[1];
  return (function() {
  return Shen.simple_error(("syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6211_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6211_1]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})}, 2, [], "shen.shen-syntax-error"];





Shen.fns["shen.<define>"] = [Shen.type_func, function shen_user_lambda6214(Arg6213) {
  if (Arg6213.length < 1) return [Shen.type_func, shen_user_lambda6214, 1, Arg6213];
  var Arg6213_0 = Arg6213[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6213_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<signature>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6213_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<define>"];





Shen.fns["shen.<name>"] = [Shen.type_func, function shen_user_lambda6216(Arg6215) {
  if (Arg6215.length < 1) return [Shen.type_func, shen_user_lambda6216, 1, Arg6215];
  var Arg6215_0 = Arg6215[0];
  var R0;
  return (((Shen.is_type(Arg6215_0[1], Shen.type_cons))
  ? ((R0 = Arg6215_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6215_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6215_0])])[1], (((Shen.is_type(R0, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.sysfunc?"], [R0]))))
  ? R0
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a legitimate function name.\x0a", [Shen.type_symbol, "shen.a"]])))])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<name>"];





Shen.fns["shen.sysfunc?"] = [Shen.type_func, function shen_user_lambda6218(Arg6217) {
  if (Arg6217.length < 1) return [Shen.type_func, shen_user_lambda6218, 1, Arg6217];
  var Arg6217_0 = Arg6217[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6217_0, Shen.call(Shen.fns["get"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])]);})}, 1, [], "shen.sysfunc?"];





Shen.fns["shen.<signature>"] = [Shen.type_func, function shen_user_lambda6220(Arg6219) {
  if (Arg6219.length < 1) return [Shen.type_func, shen_user_lambda6220, 1, Arg6219];
  var Arg6219_0 = Arg6219[0];
  var R0;
  return ((((Shen.is_type(Arg6219_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg6219_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6219_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6219_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])[1], Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])])]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<signature>"];





Shen.fns["shen.curry-type"] = [Shen.type_func, function shen_user_lambda6222(Arg6221) {
  if (Arg6221.length < 1) return [Shen.type_func, shen_user_lambda6222, 1, Arg6221];
  var Arg6221_0 = Arg6221[0];
  return (((Shen.is_type(Arg6221_0, Shen.type_cons) && (Shen.is_type(Arg6221_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6221_0[2][1])) && (Shen.is_type(Arg6221_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6221_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6221_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6221_0[1], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg6221_0[2][2], []]]]]);})
  : (((Shen.is_type(Arg6221_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6221_0[1])) && (Shen.is_type(Arg6221_0[2], Shen.type_cons) && (Shen.is_type(Arg6221_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6221_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.curry-type"], [Arg6221_0[2][1]]), []]]
  : (((Shen.is_type(Arg6221_0, Shen.type_cons) && (Shen.is_type(Arg6221_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6221_0[2][1])) && (Shen.is_type(Arg6221_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6221_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6221_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6221_0[1], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, Arg6221_0[2][2], []]]]]);})
  : ((Shen.is_type(Arg6221_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.curry-type"], Arg6221_0]);})
  : Arg6221_0))))}, 1, [], "shen.curry-type"];





Shen.fns["shen.<signature-help>"] = [Shen.type_func, function shen_user_lambda6224(Arg6223) {
  if (Arg6223.length < 1) return [Shen.type_func, shen_user_lambda6224, 1, Arg6223];
  var Arg6223_0 = Arg6223[0];
  var R0, R1;
  return (((Shen.is_type(Arg6223_0[1], Shen.type_cons))
  ? ((R0 = Arg6223_0[1][1]),
  (R1 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6223_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6223_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "}"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, R0, Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6223_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<signature-help>"];





Shen.fns["shen.<rules>"] = [Shen.type_func, function shen_user_lambda6226(Arg6225) {
  if (Arg6225.length < 1) return [Shen.type_func, shen_user_lambda6226, 1, Arg6225];
  var Arg6225_0 = Arg6225[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6225_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6225_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<rules>"];





Shen.fns["shen.<rule>"] = [Shen.type_func, function shen_user_lambda6228(Arg6227) {
  if (Arg6227.length < 1) return [Shen.type_func, shen_user_lambda6228, 1, Arg6227];
  var Arg6227_0 = Arg6227[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6227_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6227_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6227_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6227_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<rule>"];





Shen.fns["shen.fail_if"] = [Shen.type_func, function shen_user_lambda6230(Arg6229) {
  if (Arg6229.length < 2) return [Shen.type_func, shen_user_lambda6230, 2, Arg6229];
  var Arg6229_0 = Arg6229[0], Arg6229_1 = Arg6229[1];
  return ((Shen.call(Arg6229_0, [Arg6229_1]))
  ? Shen.fail_obj
  : Arg6229_1)}, 2, [], "shen.fail_if"];





Shen.fns["shen.succeeds?"] = [Shen.type_func, function shen_user_lambda6232(Arg6231) {
  if (Arg6231.length < 1) return [Shen.type_func, shen_user_lambda6232, 1, Arg6231];
  var Arg6231_0 = Arg6231[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6231_0, Shen.fail_obj)))
  ? false
  : true)}, 1, [], "shen.succeeds?"];





Shen.fns["shen.<patterns>"] = [Shen.type_func, function shen_user_lambda6234(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6234, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<patterns>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<patterns>"];





Shen.fns["shen.<pattern>"] = [Shen.type_func, function shen_user_lambda6236(Arg6235) {
  if (Arg6235.length < 1) return [Shen.type_func, shen_user_lambda6236, 1, Arg6235];
  var Arg6235_0 = Arg6235[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6235_0[1], Shen.type_cons) && Shen.is_type(Arg6235_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6235_0[1], Shen.type_cons) && Shen.is_type(Arg6235_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6235_0[1], Shen.type_cons) && Shen.is_type(Arg6235_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6235_0[1], Shen.type_cons) && Shen.is_type(Arg6235_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6235_0[1], Shen.type_cons) && Shen.is_type(Arg6235_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][1]))))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(0, Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])])])[1][1]))))
  ? Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])])])])])[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]])])
  : Shen.fail_obj)
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6235_0[1], Shen.type_cons))
  ? ((R0 = Arg6235_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6235_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6235_0])])[1], Shen.call(Shen.fns["shen.constructor-error"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<simple_pattern>"], [Arg6235_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<pattern>"];





Shen.fns["shen.constructor-error"] = [Shen.type_func, function shen_user_lambda6238(Arg6237) {
  if (Arg6237.length < 1) return [Shen.type_func, shen_user_lambda6238, 1, Arg6237];
  var Arg6237_0 = Arg6237[0];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6237_0, " is not a legitimate constructor\x0a", [Shen.type_symbol, "shen.a"]]));})}, 1, [], "shen.constructor-error"];





Shen.fns["shen.<simple_pattern>"] = [Shen.type_func, function shen_user_lambda6240(Arg6239) {
  if (Arg6239.length < 1) return [Shen.type_func, shen_user_lambda6240, 1, Arg6239];
  var Arg6239_0 = Arg6239[0];
  var R0;
  return (((Shen.is_type(Arg6239_0[1], Shen.type_cons))
  ? ((R0 = Arg6239_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "_"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6239_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6239_0])])[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Parse_Y"]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6239_0[1], Shen.type_cons))
  ? ((R0 = Arg6239_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<-"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6239_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6239_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<simple_pattern>"];





Shen.fns["shen.<pattern1>"] = [Shen.type_func, function shen_user_lambda6242(Arg6241) {
  if (Arg6241.length < 1) return [Shen.type_func, shen_user_lambda6242, 1, Arg6241];
  var Arg6241_0 = Arg6241[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6241_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern1>"];





Shen.fns["shen.<pattern2>"] = [Shen.type_func, function shen_user_lambda6244(Arg6243) {
  if (Arg6243.length < 1) return [Shen.type_func, shen_user_lambda6244, 1, Arg6243];
  var Arg6243_0 = Arg6243[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6243_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern2>"];





Shen.fns["shen.<action>"] = [Shen.type_func, function shen_user_lambda6246(Arg6245) {
  if (Arg6245.length < 1) return [Shen.type_func, shen_user_lambda6246, 1, Arg6245];
  var Arg6245_0 = Arg6245[0];
  var R0;
  return (((Shen.is_type(Arg6245_0[1], Shen.type_cons))
  ? ((R0 = Arg6245_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6245_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6245_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<action>"];





Shen.fns["shen.<guard>"] = [Shen.type_func, function shen_user_lambda6248(Arg6247) {
  if (Arg6247.length < 1) return [Shen.type_func, shen_user_lambda6248, 1, Arg6247];
  var Arg6247_0 = Arg6247[0];
  var R0;
  return (((Shen.is_type(Arg6247_0[1], Shen.type_cons))
  ? ((R0 = Arg6247_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6247_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6247_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<guard>"];





Shen.fns["shen.compile_to_machine_code"] = [Shen.type_func, function shen_user_lambda6250(Arg6249) {
  if (Arg6249.length < 2) return [Shen.type_func, shen_user_lambda6250, 2, Arg6249];
  var Arg6249_0 = Arg6249[0], Arg6249_1 = Arg6249[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compile_to_lambda+"], [Arg6249_0, Arg6249_1])),
  (R0 = Shen.call(Shen.fns["shen.compile_to_kl"], [Arg6249_0, R0])),
  Shen.call(Shen.fns["shen.record-source"], [Arg6249_0, R0]),
  R0)}, 2, [], "shen.compile_to_machine_code"];





Shen.fns["shen.record-source"] = [Shen.type_func, function shen_user_lambda6252(Arg6251) {
  if (Arg6251.length < 2) return [Shen.type_func, shen_user_lambda6252, 2, Arg6251];
  var Arg6251_0 = Arg6251[0], Arg6251_1 = Arg6251[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6251_0, [Shen.type_symbol, "shen.source"], Arg6251_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-source"];





Shen.fns["shen.compile_to_lambda+"] = [Shen.type_func, function shen_user_lambda6254(Arg6253) {
  if (Arg6253.length < 2) return [Shen.type_func, shen_user_lambda6254, 2, Arg6253];
  var Arg6253_0 = Arg6253[0], Arg6253_1 = Arg6253[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.aritycheck"], [Arg6253_0, Arg6253_1])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6256(Arg6255) {
  if (Arg6255.length < 2) return [Shen.type_func, shen_user_lambda6256, 2, Arg6255];
  var Arg6255_0 = Arg6255[0], Arg6255_1 = Arg6255[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_check"], [Arg6255_0, Arg6255_1]);})}, 2, [Arg6253_0], undefined], Arg6253_1]),
  (R0 = Shen.call(Shen.fns["shen.parameters"], [R0])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.strip-protect"], Arg6253_1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.abstract_rule"], R1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6258(Arg6257) {
  if (Arg6257.length < 2) return [Shen.type_func, shen_user_lambda6258, 2, Arg6257];
  var Arg6257_0 = Arg6257[0], Arg6257_1 = Arg6257[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6257_0, Arg6257_1]);})}, 2, [R0], undefined], R1])),
  [Shen.type_cons, R0, [Shen.type_cons, R1, []]])}, 2, [], "shen.compile_to_lambda+"];





Shen.fns["shen.free_variable_check"] = [Shen.type_func, function shen_user_lambda6260(Arg6259) {
  if (Arg6259.length < 2) return [Shen.type_func, shen_user_lambda6260, 2, Arg6259];
  var Arg6259_0 = Arg6259[0], Arg6259_1 = Arg6259[1];
  var R0;
  return (((Shen.is_type(Arg6259_1, Shen.type_cons) && (Shen.is_type(Arg6259_1[2], Shen.type_cons) && Shen.empty$question$(Arg6259_1[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6259_1[1]])),
  (R0 = Shen.call(Shen.fns["shen.extract_free_vars"], [R0, Arg6259_1[2][1]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_warnings"], [Arg6259_0, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.free_variable_check"]]);}))}, 2, [], "shen.free_variable_check"];





Shen.fns["shen.extract_vars"] = [Shen.type_func, function shen_user_lambda6262(Arg6261) {
  if (Arg6261.length < 1) return [Shen.type_func, shen_user_lambda6262, 1, Arg6261];
  var Arg6261_0 = Arg6261[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6261_0]))
  ? [Shen.type_cons, Arg6261_0, []]
  : ((Shen.is_type(Arg6261_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_vars"], [Arg6261_0[1]]), Shen.call(Shen.fns["shen.extract_vars"], [Arg6261_0[2]])]);})
  : []))}, 1, [], "shen.extract_vars"];





Shen.fns["shen.extract_free_vars"] = [Shen.type_func, function shen_user_lambda6264(Arg6263) {
  if (Arg6263.length < 2) return [Shen.type_func, shen_user_lambda6264, 2, Arg6263];
  var Arg6263_0 = Arg6263[0], Arg6263_1 = Arg6263[1];
  return (((Shen.is_type(Arg6263_1, Shen.type_cons) && (Shen.is_type(Arg6263_1[2], Shen.type_cons) && (Shen.empty$question$(Arg6263_1[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6263_1[1], [Shen.type_symbol, "protect"]))))))
  ? []
  : (((Shen.call(Shen.fns["variable?"], [Arg6263_1]) && (!Shen.call(Shen.fns["element?"], [Arg6263_1, Arg6263_0]))))
  ? [Shen.type_cons, Arg6263_1, []]
  : (((Shen.is_type(Arg6263_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg6263_1[1])) && (Shen.is_type(Arg6263_1[2], Shen.type_cons) && (Shen.is_type(Arg6263_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg6263_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6263_1[2][1], Arg6263_0], Arg6263_1[2][2][1]]);})
  : (((Shen.is_type(Arg6263_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6263_1[1])) && (Shen.is_type(Arg6263_1[2], Shen.type_cons) && (Shen.is_type(Arg6263_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6263_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6263_1[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6263_0, Arg6263_1[2][2][1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6263_1[2][1], Arg6263_0], Arg6263_1[2][2][2][1]])]);})
  : ((Shen.is_type(Arg6263_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6263_0, Arg6263_1[1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6263_0, Arg6263_1[2]])]);})
  : [])))))}, 2, [], "shen.extract_free_vars"];





Shen.fns["shen.free_variable_warnings"] = [Shen.type_func, function shen_user_lambda6266(Arg6265) {
  if (Arg6265.length < 2) return [Shen.type_func, shen_user_lambda6266, 2, Arg6265];
  var Arg6265_0 = Arg6265[0], Arg6265_1 = Arg6265[1];
  return ((Shen.empty$question$(Arg6265_1))
  ? [Shen.type_symbol, "_"]
  : (function() {
  return Shen.simple_error(("error: the following variables are free in " + Shen.call(Shen.fns["shen.app"], [Arg6265_0, (": " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.list_variables"], [Arg6265_1]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.free_variable_warnings"];





Shen.fns["shen.list_variables"] = [Shen.type_func, function shen_user_lambda6268(Arg6267) {
  if (Arg6267.length < 1) return [Shen.type_func, shen_user_lambda6268, 1, Arg6267];
  var Arg6267_0 = Arg6267[0];
  return (((Shen.is_type(Arg6267_0, Shen.type_cons) && Shen.empty$question$(Arg6267_0[2])))
  ? (Shen.str(Arg6267_0[1]) + ".")
  : ((Shen.is_type(Arg6267_0, Shen.type_cons))
  ? (Shen.str(Arg6267_0[1]) + (", " + Shen.call(Shen.fns["shen.list_variables"], [Arg6267_0[2]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.list_variables"]]);})))}, 1, [], "shen.list_variables"];





Shen.fns["shen.strip-protect"] = [Shen.type_func, function shen_user_lambda6270(Arg6269) {
  if (Arg6269.length < 1) return [Shen.type_func, shen_user_lambda6270, 1, Arg6269];
  var Arg6269_0 = Arg6269[0];
  return (((Shen.is_type(Arg6269_0, Shen.type_cons) && (Shen.is_type(Arg6269_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6269_0[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6269_0[1], [Shen.type_symbol, "protect"]))))))
  ? Arg6269_0[2][1]
  : ((Shen.is_type(Arg6269_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.strip-protect"], [Arg6269_0[1]]), Shen.call(Shen.fns["shen.strip-protect"], [Arg6269_0[2]])]
  : Arg6269_0))}, 1, [], "shen.strip-protect"];





Shen.fns["shen.linearise"] = [Shen.type_func, function shen_user_lambda6272(Arg6271) {
  if (Arg6271.length < 1) return [Shen.type_func, shen_user_lambda6272, 1, Arg6271];
  var Arg6271_0 = Arg6271[0];
  return (((Shen.is_type(Arg6271_0, Shen.type_cons) && (Shen.is_type(Arg6271_0[2], Shen.type_cons) && Shen.empty$question$(Arg6271_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Shen.call(Shen.fns["shen.flatten"], [Arg6271_0[1]]), Arg6271_0[1], Arg6271_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise"]]);}))}, 1, [], "shen.linearise"];





Shen.fns["shen.flatten"] = [Shen.type_func, function shen_user_lambda6274(Arg6273) {
  if (Arg6273.length < 1) return [Shen.type_func, shen_user_lambda6274, 1, Arg6273];
  var Arg6273_0 = Arg6273[0];
  return ((Shen.empty$question$(Arg6273_0))
  ? []
  : ((Shen.is_type(Arg6273_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.flatten"], [Arg6273_0[1]]), Shen.call(Shen.fns["shen.flatten"], [Arg6273_0[2]])]);})
  : [Shen.type_cons, Arg6273_0, []]))}, 1, [], "shen.flatten"];





Shen.fns["shen.linearise_help"] = [Shen.type_func, function shen_user_lambda6276(Arg6275) {
  if (Arg6275.length < 3) return [Shen.type_func, shen_user_lambda6276, 3, Arg6275];
  var Arg6275_0 = Arg6275[0], Arg6275_1 = Arg6275[1], Arg6275_2 = Arg6275[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6275_0))
  ? [Shen.type_cons, Arg6275_1, [Shen.type_cons, Arg6275_2, []]]
  : ((Shen.is_type(Arg6275_0, Shen.type_cons))
  ? (((Shen.call(Shen.fns["variable?"], [Arg6275_0[1]]) && Shen.call(Shen.fns["element?"], [Arg6275_0[1], Arg6275_0[2]])))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [Arg6275_0[1]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6275_0[1], [Shen.type_cons, R0, []]]], [Shen.type_cons, Arg6275_2, []]]]),
  (R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6275_0[1], R0, Arg6275_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6275_0[2], R0, R1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6275_0[2], Arg6275_1, Arg6275_2]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise_help"]]);})))}, 3, [], "shen.linearise_help"];





Shen.fns["shen.linearise_X"] = [Shen.type_func, function shen_user_lambda6278(Arg6277) {
  if (Arg6277.length < 3) return [Shen.type_func, shen_user_lambda6278, 3, Arg6277];
  var Arg6277_0 = Arg6277[0], Arg6277_1 = Arg6277[1], Arg6277_2 = Arg6277[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6277_2, Arg6277_0)))
  ? Arg6277_1
  : ((Shen.is_type(Arg6277_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6277_0, Arg6277_1, Arg6277_2[1]])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Arg6277_2[1])))
  ? [Shen.type_cons, Arg6277_2[1], Shen.call(Shen.fns["shen.linearise_X"], [Arg6277_0, Arg6277_1, Arg6277_2[2]])]
  : [Shen.type_cons, R0, Arg6277_2[2]]))
  : Arg6277_2))}, 3, [], "shen.linearise_X"];





Shen.fns["shen.aritycheck"] = [Shen.type_func, function shen_user_lambda6280(Arg6279) {
  if (Arg6279.length < 2) return [Shen.type_func, shen_user_lambda6280, 2, Arg6279];
  var Arg6279_0 = Arg6279[0], Arg6279_1 = Arg6279[1];
  return (((Shen.is_type(Arg6279_1, Shen.type_cons) && (Shen.is_type(Arg6279_1[1], Shen.type_cons) && (Shen.is_type(Arg6279_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6279_1[1][2][2]) && Shen.empty$question$(Arg6279_1[2]))))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6279_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck-name"], [Arg6279_0, Shen.call(Shen.fns["arity"], [Arg6279_0]), Shen.call(Shen.fns["length"], [Arg6279_1[1][1]])]);}))
  : (((Shen.is_type(Arg6279_1, Shen.type_cons) && (Shen.is_type(Arg6279_1[1], Shen.type_cons) && (Shen.is_type(Arg6279_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6279_1[1][2][2]) && (Shen.is_type(Arg6279_1[2], Shen.type_cons) && (Shen.is_type(Arg6279_1[2][1], Shen.type_cons) && (Shen.is_type(Arg6279_1[2][1][2], Shen.type_cons) && Shen.empty$question$(Arg6279_1[2][1][2][2])))))))))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6279_1[1][1]]), Shen.call(Shen.fns["length"], [Arg6279_1[2][1][1]]))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6279_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck"], [Arg6279_0, Arg6279_1[2]]);}))
  : (function() {
  return Shen.simple_error(("arity error in " + Shen.call(Shen.fns["shen.app"], [Arg6279_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aritycheck"]]);})))}, 2, [], "shen.aritycheck"];





Shen.fns["shen.aritycheck-name"] = [Shen.type_func, function shen_user_lambda6282(Arg6281) {
  if (Arg6281.length < 3) return [Shen.type_func, shen_user_lambda6282, 3, Arg6281];
  var Arg6281_0 = Arg6281[0], Arg6281_1 = Arg6281[1], Arg6281_2 = Arg6281[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6281_1)))
  ? Arg6281_2
  : ((Shen.unwind_tail(Shen.$eq$(Arg6281_2, Arg6281_1)))
  ? Arg6281_2
  : (Shen.pr(("\x0awarning: changing the arity of " + Shen.call(Shen.fns["shen.app"], [Arg6281_0, " can cause errors.\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  Arg6281_2)))}, 3, [], "shen.aritycheck-name"];





Shen.fns["shen.aritycheck-action"] = [Shen.type_func, function shen_user_lambda6284(Arg6283) {
  if (Arg6283.length < 1) return [Shen.type_func, shen_user_lambda6284, 1, Arg6283];
  var Arg6283_0 = Arg6283[0];
  return ((Shen.is_type(Arg6283_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.aah"], [Arg6283_0[1], Arg6283_0[2]]),
  (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.aritycheck-action"], Arg6283_0]);}))
  : [Shen.type_symbol, "shen.skip"])}, 1, [], "shen.aritycheck-action"];





Shen.fns["shen.aah"] = [Shen.type_func, function shen_user_lambda6286(Arg6285) {
  if (Arg6285.length < 2) return [Shen.type_func, shen_user_lambda6286, 2, Arg6285];
  var Arg6285_0 = Arg6285[0], Arg6285_1 = Arg6285[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["arity"], [Arg6285_0])),
  (R1 = Shen.call(Shen.fns["length"], [Arg6285_1])),
  ((((R0 > -1) && (R1 > R0)))
  ? (function() {
  return Shen.pr(("warning: " + Shen.call(Shen.fns["shen.app"], [Arg6285_0, (" might not like " + Shen.call(Shen.fns["shen.app"], [R1, (" argument" + Shen.call(Shen.fns["shen.app"], [(((R1 > 1))
  ? "s"
  : ""), ".\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));})
  : [Shen.type_symbol, "shen.skip"]))}, 2, [], "shen.aah"];





Shen.fns["shen.abstract_rule"] = [Shen.type_func, function shen_user_lambda6288(Arg6287) {
  if (Arg6287.length < 1) return [Shen.type_func, shen_user_lambda6288, 1, Arg6287];
  var Arg6287_0 = Arg6287[0];
  return (((Shen.is_type(Arg6287_0, Shen.type_cons) && (Shen.is_type(Arg6287_0[2], Shen.type_cons) && Shen.empty$question$(Arg6287_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.abstraction_build"], [Arg6287_0[1], Arg6287_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstract_rule"]]);}))}, 1, [], "shen.abstract_rule"];





Shen.fns["shen.abstraction_build"] = [Shen.type_func, function shen_user_lambda6290(Arg6289) {
  if (Arg6289.length < 2) return [Shen.type_func, shen_user_lambda6290, 2, Arg6289];
  var Arg6289_0 = Arg6289[0], Arg6289_1 = Arg6289[1];
  return ((Shen.empty$question$(Arg6289_0))
  ? Arg6289_1
  : ((Shen.is_type(Arg6289_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6289_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.abstraction_build"], [Arg6289_0[2], Arg6289_1]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstraction_build"]]);})))}, 2, [], "shen.abstraction_build"];





Shen.fns["shen.parameters"] = [Shen.type_func, function shen_user_lambda6292(Arg6291) {
  if (Arg6291.length < 1) return [Shen.type_func, shen_user_lambda6292, 1, Arg6291];
  var Arg6291_0 = Arg6291[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6291_0)))
  ? []
  : [Shen.type_cons, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]), Shen.call(Shen.fns["shen.parameters"], [(Arg6291_0 - 1)])])}, 1, [], "shen.parameters"];





Shen.fns["shen.application_build"] = [Shen.type_func, function shen_user_lambda6294(Arg6293) {
  if (Arg6293.length < 2) return [Shen.type_func, shen_user_lambda6294, 2, Arg6293];
  var Arg6293_0 = Arg6293[0], Arg6293_1 = Arg6293[1];
  return ((Shen.empty$question$(Arg6293_0))
  ? Arg6293_1
  : ((Shen.is_type(Arg6293_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6293_0[2], [Shen.type_cons, Arg6293_1, [Shen.type_cons, Arg6293_0[1], []]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.application_build"]]);})))}, 2, [], "shen.application_build"];





Shen.fns["shen.compile_to_kl"] = [Shen.type_func, function shen_user_lambda6296(Arg6295) {
  if (Arg6295.length < 2) return [Shen.type_func, shen_user_lambda6296, 2, Arg6295];
  var Arg6295_0 = Arg6295[0], Arg6295_1 = Arg6295[1];
  var R0;
  return (((Shen.is_type(Arg6295_1, Shen.type_cons) && (Shen.is_type(Arg6295_1[2], Shen.type_cons) && Shen.empty$question$(Arg6295_1[2][2]))))
  ? (Shen.call(Shen.fns["shen.store-arity"], [Arg6295_0, Shen.call(Shen.fns["length"], [Arg6295_1[1]])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.reduce"], Arg6295_1[2][1]])),
  (R0 = Shen.call(Shen.fns["shen.cond-expression"], [Arg6295_0, Arg6295_1[1], R0])),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg6295_0, [Shen.type_cons, Arg6295_1[1], [Shen.type_cons, R0, []]]]]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compile_to_kl"]]);}))}, 2, [], "shen.compile_to_kl"];





Shen.fns["shen.store-arity"] = [Shen.type_func, function shen_user_lambda6298(Arg6297) {
  if (Arg6297.length < 2) return [Shen.type_func, shen_user_lambda6298, 2, Arg6297];
  var Arg6297_0 = Arg6297[0], Arg6297_1 = Arg6297[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6297_0, [Shen.type_symbol, "arity"], Arg6297_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.store-arity"];





Shen.fns["shen.reduce"] = [Shen.type_func, function shen_user_lambda6300(Arg6299) {
  if (Arg6299.length < 1) return [Shen.type_func, shen_user_lambda6300, 1, Arg6299];
  var Arg6299_0 = Arg6299[0];
  var R0;
  return ((Shen.globals["shen.*teststack*"] = []),
  (R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6299_0])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "shen.tests"], Shen.call(Shen.fns["reverse"], [(Shen.globals["shen.*teststack*"])])]], [Shen.type_cons, R0, []]])}, 1, [], "shen.reduce"];





Shen.fns["shen.reduce_help"] = [Shen.type_func, function shen_user_lambda6302(Arg6301) {
  if (Arg6301.length < 1) return [Shen.type_func, shen_user_lambda6302, 1, Arg6301];
  var Arg6301_0 = Arg6301[0];
  var R0;
  return (((Shen.is_type(Arg6301_0, Shen.type_cons) && (Shen.is_type(Arg6301_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6301_0[1][1])) && (Shen.is_type(Arg6301_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6301_0[1][2][1][1])) && (Shen.is_type(Arg6301_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6301_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][2][2]) && (Shen.is_type(Arg6301_0[2], Shen.type_cons) && Shen.empty$question$(Arg6301_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "cons?"], Arg6301_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6301_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6301_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6301_0[2][1], Arg6301_0[1][2][1], Arg6301_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6301_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6301_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6301_0, Shen.type_cons) && (Shen.is_type(Arg6301_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6301_0[1][1])) && (Shen.is_type(Arg6301_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg6301_0[1][2][1][1])) && (Shen.is_type(Arg6301_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6301_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][2][2]) && (Shen.is_type(Arg6301_0[2], Shen.type_cons) && Shen.empty$question$(Arg6301_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "tuple?"], Arg6301_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6301_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6301_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6301_0[2][1], Arg6301_0[1][2][1], Arg6301_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], Arg6301_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], Arg6301_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6301_0, Shen.type_cons) && (Shen.is_type(Arg6301_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6301_0[1][1])) && (Shen.is_type(Arg6301_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Arg6301_0[1][2][1][1])) && (Shen.is_type(Arg6301_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6301_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][2][2]) && (Shen.is_type(Arg6301_0[2], Shen.type_cons) && Shen.empty$question$(Arg6301_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+vector?"], Arg6301_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6301_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6301_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6301_0[2][1], Arg6301_0[1][2][1], Arg6301_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hdv"], Arg6301_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlv"], Arg6301_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6301_0, Shen.type_cons) && (Shen.is_type(Arg6301_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6301_0[1][1])) && (Shen.is_type(Arg6301_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6301_0[1][2][1][1])) && (Shen.is_type(Arg6301_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6301_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][2][2]) && (Shen.is_type(Arg6301_0[2], Shen.type_cons) && Shen.empty$question$(Arg6301_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+string?"], Arg6301_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6301_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6301_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6301_0[2][1], Arg6301_0[1][2][1], Arg6301_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, Arg6301_0[2][1], [Shen.type_cons, 0, []]]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlstr"], Arg6301_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6301_0, Shen.type_cons) && (Shen.is_type(Arg6301_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6301_0[1][1])) && (Shen.is_type(Arg6301_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][2][2]) && (Shen.is_type(Arg6301_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[2][2]) && (!Shen.call(Shen.fns["variable?"], [Arg6301_0[1][2][1]])))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6301_0[1][2][1], Arg6301_0[2]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6301_0[1][2][2][1]]);}))
  : (((Shen.is_type(Arg6301_0, Shen.type_cons) && (Shen.is_type(Arg6301_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6301_0[1][1])) && (Shen.is_type(Arg6301_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6301_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6301_0[1][2][2][2]) && (Shen.is_type(Arg6301_0[2], Shen.type_cons) && Shen.empty$question$(Arg6301_0[2][2])))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Shen.call(Shen.fns["shen.ebr"], [Arg6301_0[2][1], Arg6301_0[1][2][1], Arg6301_0[1][2][2][1]])]);})
  : (((Shen.is_type(Arg6301_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6301_0[1])) && (Shen.is_type(Arg6301_0[2], Shen.type_cons) && (Shen.is_type(Arg6301_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6301_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [Arg6301_0[2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6301_0[2][2][1]]);}))
  : (((Shen.is_type(Arg6301_0, Shen.type_cons) && (Shen.is_type(Arg6301_0[2], Shen.type_cons) && Shen.empty$question$(Arg6301_0[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6301_0[1]])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6301_0[1], R0)))
  ? Arg6301_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [[Shen.type_cons, R0, Arg6301_0[2]]]);})))
  : Arg6301_0))))))))}, 1, [], "shen.reduce_help"];





Shen.fns["shen.+string?"] = [Shen.type_func, function shen_user_lambda6304(Arg6303) {
  if (Arg6303.length < 1) return [Shen.type_func, shen_user_lambda6304, 1, Arg6303];
  var Arg6303_0 = Arg6303[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6303_0)))
  ? false
  : (typeof(Arg6303_0) == 'string'))}, 1, [], "shen.+string?"];





Shen.fns["shen.+vector"] = [Shen.type_func, function shen_user_lambda6306(Arg6305) {
  if (Arg6305.length < 1) return [Shen.type_func, shen_user_lambda6306, 1, Arg6305];
  var Arg6305_0 = Arg6305[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6305_0, Shen.vector(0))))
  ? false
  : (function() {
  return Shen.vector$question$(Arg6305_0);}))}, 1, [], "shen.+vector"];





Shen.fns["shen.ebr"] = [Shen.type_func, function shen_user_lambda6308(Arg6307) {
  if (Arg6307.length < 3) return [Shen.type_func, shen_user_lambda6308, 3, Arg6307];
  var Arg6307_0 = Arg6307[0], Arg6307_1 = Arg6307[1], Arg6307_2 = Arg6307[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6307_2, Arg6307_1)))
  ? Arg6307_0
  : (((Shen.is_type(Arg6307_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6307_2[1])) && (Shen.is_type(Arg6307_2[2], Shen.type_cons) && (Shen.is_type(Arg6307_2[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6307_2[2][2][2]) && (Shen.call(Shen.fns["occurrences"], [Arg6307_1, Arg6307_2[2][1]]) > 0)))))))
  ? Arg6307_2
  : (((Shen.is_type(Arg6307_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6307_2[1])) && (Shen.is_type(Arg6307_2[2], Shen.type_cons) && (Shen.is_type(Arg6307_2[2][2], Shen.type_cons) && (Shen.is_type(Arg6307_2[2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6307_2[2][2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6307_2[2][1], Arg6307_1)))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6307_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6307_0, Arg6307_2[2][1], Arg6307_2[2][2][1]]), Arg6307_2[2][2][2]]]]
  : ((Shen.is_type(Arg6307_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6307_0, Arg6307_1, Arg6307_2[1]]), Shen.call(Shen.fns["shen.ebr"], [Arg6307_0, Arg6307_1, Arg6307_2[2]])]
  : Arg6307_2))))}, 3, [], "shen.ebr"];





Shen.fns["shen.add_test"] = [Shen.type_func, function shen_user_lambda6310(Arg6309) {
  if (Arg6309.length < 1) return [Shen.type_func, shen_user_lambda6310, 1, Arg6309];
  var Arg6309_0 = Arg6309[0];
  return (Shen.globals["shen.*teststack*"] = [Shen.type_cons, Arg6309_0, (Shen.globals["shen.*teststack*"])])}, 1, [], "shen.add_test"];





Shen.fns["shen.cond-expression"] = [Shen.type_func, function shen_user_lambda6312(Arg6311) {
  if (Arg6311.length < 3) return [Shen.type_func, shen_user_lambda6312, 3, Arg6311];
  var Arg6311_0 = Arg6311[0], Arg6311_1 = Arg6311[1], Arg6311_2 = Arg6311[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.err-condition"], [Arg6311_0])),
  (R0 = Shen.call(Shen.fns["shen.case-form"], [Arg6311_2, R0])),
  (R0 = Shen.call(Shen.fns["shen.encode-choices"], [R0, Arg6311_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cond-form"], [R0]);}))}, 3, [], "shen.cond-expression"];





Shen.fns["shen.cond-form"] = [Shen.type_func, function shen_user_lambda6314(Arg6313) {
  if (Arg6313.length < 1) return [Shen.type_func, shen_user_lambda6314, 1, Arg6313];
  var Arg6313_0 = Arg6313[0];
  return (((Shen.is_type(Arg6313_0, Shen.type_cons) && (Shen.is_type(Arg6313_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6313_0[1][1])) && (Shen.is_type(Arg6313_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6313_0[1][2][2]))))))
  ? Arg6313_0[1][2][1]
  : [Shen.type_cons, [Shen.type_symbol, "cond"], Arg6313_0])}, 1, [], "shen.cond-form"];





Shen.fns["shen.encode-choices"] = [Shen.type_func, function shen_user_lambda6316(Arg6315) {
  if (Arg6315.length < 2) return [Shen.type_func, shen_user_lambda6316, 2, Arg6315];
  var Arg6315_0 = Arg6315[0], Arg6315_1 = Arg6315[1];
  return ((Shen.empty$question$(Arg6315_0))
  ? []
  : (((Shen.is_type(Arg6315_0, Shen.type_cons) && (Shen.is_type(Arg6315_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6315_0[1][1])) && (Shen.is_type(Arg6315_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6315_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6315_0[1][2][1][1])) && (Shen.is_type(Arg6315_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6315_0[1][2][1][2][2]) && (Shen.empty$question$(Arg6315_0[1][2][2]) && Shen.empty$question$(Arg6315_0[2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6315_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.sys-error"], [Shen.type_cons, Arg6315_1, []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6315_1, []]]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6315_0, Shen.type_cons) && (Shen.is_type(Arg6315_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6315_0[1][1])) && (Shen.is_type(Arg6315_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6315_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6315_0[1][2][1][1])) && (Shen.is_type(Arg6315_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6315_0[1][2][1][2][2]) && Shen.empty$question$(Arg6315_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6315_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6315_0[2], Arg6315_1])]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6315_0, Shen.type_cons) && (Shen.is_type(Arg6315_0[1], Shen.type_cons) && (Shen.is_type(Arg6315_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6315_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6315_0[1][2][1][1])) && (Shen.is_type(Arg6315_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6315_0[1][2][1][2][2]) && Shen.empty$question$(Arg6315_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6315_0[2], Arg6315_1])]), []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6315_0[1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6315_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6315_0, Shen.type_cons) && (Shen.is_type(Arg6315_0[1], Shen.type_cons) && (Shen.is_type(Arg6315_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6315_0[1][2][2])))))
  ? [Shen.type_cons, Arg6315_0[1], Shen.call(Shen.fns["shen.encode-choices"], [Arg6315_0[2], Arg6315_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.encode-choices"]]);}))))))}, 2, [], "shen.encode-choices"];





Shen.fns["shen.case-form"] = [Shen.type_func, function shen_user_lambda6318(Arg6317) {
  if (Arg6317.length < 2) return [Shen.type_func, shen_user_lambda6318, 2, Arg6317];
  var Arg6317_0 = Arg6317[0], Arg6317_1 = Arg6317[1];
  return ((Shen.empty$question$(Arg6317_0))
  ? [Shen.type_cons, Arg6317_1, []]
  : (((Shen.is_type(Arg6317_0, Shen.type_cons) && (Shen.is_type(Arg6317_0[1], Shen.type_cons) && (Shen.is_type(Arg6317_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6317_0[1][1][1])) && (Shen.is_type(Arg6317_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6317_0[1][1][2][1])) && (Shen.empty$question$(Arg6317_0[1][1][2][2]) && (Shen.is_type(Arg6317_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6317_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6317_0[1][2][1][1])) && (Shen.is_type(Arg6317_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6317_0[1][2][1][2][2]) && Shen.empty$question$(Arg6317_0[1][2][2]))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6317_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6317_0[2], Arg6317_1])]
  : (((Shen.is_type(Arg6317_0, Shen.type_cons) && (Shen.is_type(Arg6317_0[1], Shen.type_cons) && (Shen.is_type(Arg6317_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6317_0[1][1][1])) && (Shen.is_type(Arg6317_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6317_0[1][1][2][1])) && (Shen.empty$question$(Arg6317_0[1][1][2][2]) && (Shen.is_type(Arg6317_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6317_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6317_0[1][2]], []]
  : (((Shen.is_type(Arg6317_0, Shen.type_cons) && (Shen.is_type(Arg6317_0[1], Shen.type_cons) && (Shen.is_type(Arg6317_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6317_0[1][1][1])) && (Shen.is_type(Arg6317_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6317_0[1][1][2][1])) && (Shen.is_type(Arg6317_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6317_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6317_0[1][1][2][2]]), Arg6317_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6317_0[2], Arg6317_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.case-form"]]);})))))}, 2, [], "shen.case-form"];





Shen.fns["shen.embed-and"] = [Shen.type_func, function shen_user_lambda6320(Arg6319) {
  if (Arg6319.length < 1) return [Shen.type_func, shen_user_lambda6320, 1, Arg6319];
  var Arg6319_0 = Arg6319[0];
  return (((Shen.is_type(Arg6319_0, Shen.type_cons) && Shen.empty$question$(Arg6319_0[2])))
  ? Arg6319_0[1]
  : ((Shen.is_type(Arg6319_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, Arg6319_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6319_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.embed-and"]]);})))}, 1, [], "shen.embed-and"];





Shen.fns["shen.err-condition"] = [Shen.type_func, function shen_user_lambda6322(Arg6321) {
  if (Arg6321.length < 1) return [Shen.type_func, shen_user_lambda6322, 1, Arg6321];
  var Arg6321_0 = Arg6321[0];
  return [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6321_0, []]], []]]}, 1, [], "shen.err-condition"];





Shen.fns["shen.sys-error"] = [Shen.type_func, function shen_user_lambda6324(Arg6323) {
  if (Arg6323.length < 1) return [Shen.type_func, shen_user_lambda6324, 1, Arg6323];
  var Arg6323_0 = Arg6323[0];
  return (function() {
  return Shen.simple_error(("system function " + Shen.call(Shen.fns["shen.app"], [Arg6323_0, ": unexpected argument\x0a", [Shen.type_symbol, "shen.a"]])));})}, 1, [], "shen.sys-error"];















Shen.fns["eval"] = [Shen.type_func, function shen_user_lambda6980(Arg6979) {
  if (Arg6979.length < 1) return [Shen.type_func, shen_user_lambda6980, 1, Arg6979];
  var Arg6979_0 = Arg6979[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda6982(Arg6981) {
  if (Arg6981.length < 1) return [Shen.type_func, shen_user_lambda6982, 1, Arg6981];
  var Arg6981_0 = Arg6981[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg6981_0]);})}, 1, [], undefined], Arg6979_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.eval-without-macros"], Shen.call(Shen.fns["shen.package-contents"], [R0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.eval-without-macros"], [R0]);})))}, 1, [], "eval"];





Shen.fns["shen.eval-without-macros"] = [Shen.type_func, function shen_user_lambda6984(Arg6983) {
  if (Arg6983.length < 1) return [Shen.type_func, shen_user_lambda6984, 1, Arg6983];
  var Arg6983_0 = Arg6983[0];
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["shen.elim-define"], [Shen.call(Shen.fns["shen.proc-input+"], [Arg6983_0])]));})}, 1, [], "shen.eval-without-macros"];





Shen.fns["shen.proc-input+"] = [Shen.type_func, function shen_user_lambda6986(Arg6985) {
  if (Arg6985.length < 1) return [Shen.type_func, shen_user_lambda6986, 1, Arg6985];
  var Arg6985_0 = Arg6985[0];
  return (((Shen.is_type(Arg6985_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg6985_0[1])) && (Shen.is_type(Arg6985_0[2], Shen.type_cons) && (Shen.is_type(Arg6985_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6985_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Arg6985_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6985_0[2][2][1]]), []]]]
  : ((Shen.is_type(Arg6985_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.proc-input+"], Arg6985_0]);})
  : Arg6985_0))}, 1, [], "shen.proc-input+"];





Shen.fns["shen.elim-define"] = [Shen.type_func, function shen_user_lambda6988(Arg6987) {
  if (Arg6987.length < 1) return [Shen.type_func, shen_user_lambda6988, 1, Arg6987];
  var Arg6987_0 = Arg6987[0];
  return (((Shen.is_type(Arg6987_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg6987_0[1])) && Shen.is_type(Arg6987_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.shen->kl"], [Arg6987_0[2][1], Arg6987_0[2][2]]);})
  : (((Shen.is_type(Arg6987_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6987_0[1])) && Shen.is_type(Arg6987_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.elim-define"], [Shen.call(Shen.fns["shen.yacc"], [Arg6987_0])]);})
  : ((Shen.is_type(Arg6987_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.elim-define"], Arg6987_0]);})
  : Arg6987_0)))}, 1, [], "shen.elim-define"];





Shen.fns["shen.packaged?"] = [Shen.type_func, function shen_user_lambda6990(Arg6989) {
  if (Arg6989.length < 1) return [Shen.type_func, shen_user_lambda6990, 1, Arg6989];
  var Arg6989_0 = Arg6989[0];
  return (((Shen.is_type(Arg6989_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6989_0[1])) && (Shen.is_type(Arg6989_0[2], Shen.type_cons) && Shen.is_type(Arg6989_0[2][2], Shen.type_cons)))))
  ? true
  : false)}, 1, [], "shen.packaged?"];





Shen.fns["external"] = [Shen.type_func, function shen_user_lambda6992(Arg6991) {
  if (Arg6991.length < 1) return [Shen.type_func, shen_user_lambda6992, 1, Arg6991];
  var Arg6991_0 = Arg6991[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6991_0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6994(Arg6993) {
  if (Arg6993.length < 2) return [Shen.type_func, shen_user_lambda6994, 2, Arg6993];
  var Arg6993_0 = Arg6993[0], Arg6993_1 = Arg6993[1];
  return (function() {
  return Shen.simple_error(("package " + Shen.call(Shen.fns["shen.app"], [Arg6993_0, " has not been used.\x0a", [Shen.type_symbol, "shen.a"]])));})}, 2, [Arg6991_0], undefined]);})}, 1, [], "external"];





Shen.fns["shen.package-contents"] = [Shen.type_func, function shen_user_lambda6996(Arg6995) {
  if (Arg6995.length < 1) return [Shen.type_func, shen_user_lambda6996, 1, Arg6995];
  var Arg6995_0 = Arg6995[0];
  return (((Shen.is_type(Arg6995_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6995_0[1])) && (Shen.is_type(Arg6995_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg6995_0[2][1])) && Shen.is_type(Arg6995_0[2][2], Shen.type_cons))))))
  ? Arg6995_0[2][2][2]
  : (((Shen.is_type(Arg6995_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6995_0[1])) && (Shen.is_type(Arg6995_0[2], Shen.type_cons) && Shen.is_type(Arg6995_0[2][2], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.packageh"], [Arg6995_0[2][1], Arg6995_0[2][2][1], Arg6995_0[2][2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.package-contents"]]);})))}, 1, [], "shen.package-contents"];





Shen.fns["shen.walk"] = [Shen.type_func, function shen_user_lambda6998(Arg6997) {
  if (Arg6997.length < 2) return [Shen.type_func, shen_user_lambda6998, 2, Arg6997];
  var Arg6997_0 = Arg6997[0], Arg6997_1 = Arg6997[1];
  return ((Shen.is_type(Arg6997_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Arg6997_0, [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7000(Arg6999) {
  if (Arg6999.length < 2) return [Shen.type_func, shen_user_lambda7000, 2, Arg6999];
  var Arg6999_0 = Arg6999[0], Arg6999_1 = Arg6999[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [Arg6999_0, Arg6999_1]);})}, 2, [Arg6997_0], undefined], Arg6997_1])]);})
  : (function() {
  return Shen.call_tail(Arg6997_0, [Arg6997_1]);}))}, 2, [], "shen.walk"];





Shen.fns["compile"] = [Shen.type_func, function shen_user_lambda7002(Arg7001) {
  if (Arg7001.length < 3) return [Shen.type_func, shen_user_lambda7002, 3, Arg7001];
  var Arg7001_0 = Arg7001[0], Arg7001_1 = Arg7001[1], Arg7001_2 = Arg7001[2];
  var R0;
  return ((R0 = Shen.call(Arg7001_0, [[Shen.type_cons, Arg7001_1, [Shen.type_cons, [], []]]])),
  (((Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0)) || (!Shen.empty$question$(R0[1]))))
  ? (function() {
  return Shen.call_tail(Arg7001_2, [R0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.hdtl"], [R0]);})))}, 3, [], "compile"];





Shen.fns["fail-if"] = [Shen.type_func, function shen_user_lambda7004(Arg7003) {
  if (Arg7003.length < 2) return [Shen.type_func, shen_user_lambda7004, 2, Arg7003];
  var Arg7003_0 = Arg7003[0], Arg7003_1 = Arg7003[1];
  return ((Shen.call(Arg7003_0, [Arg7003_1]))
  ? Shen.fail_obj
  : Arg7003_1)}, 2, [], "fail-if"];





Shen.fns["@s"] = [Shen.type_func, function shen_user_lambda7006(Arg7005) {
  if (Arg7005.length < 2) return [Shen.type_func, shen_user_lambda7006, 2, Arg7005];
  var Arg7005_0 = Arg7005[0], Arg7005_1 = Arg7005[1];
  return (Arg7005_0 + Arg7005_1)}, 2, [], "@s"];





Shen.fns["tc?"] = [Shen.type_func, function shen_user_lambda7008(Arg7007) {
  if (Arg7007.length < 1) return [Shen.type_func, shen_user_lambda7008, 1, Arg7007];
  var Arg7007_0 = Arg7007[0];
  return (Shen.globals["shen.*tc*"])}, 1, [], "tc?"];





Shen.fns["ps"] = [Shen.type_func, function shen_user_lambda7010(Arg7009) {
  if (Arg7009.length < 1) return [Shen.type_func, shen_user_lambda7010, 1, Arg7009];
  var Arg7009_0 = Arg7009[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7009_0, [Shen.type_symbol, "shen.source"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7012(Arg7011) {
  if (Arg7011.length < 2) return [Shen.type_func, shen_user_lambda7012, 2, Arg7011];
  var Arg7011_0 = Arg7011[0], Arg7011_1 = Arg7011[1];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7011_0, " not found.\x0a", [Shen.type_symbol, "shen.a"]]));})}, 2, [Arg7009_0], undefined]);})}, 1, [], "ps"];





Shen.fns["stinput"] = [Shen.type_func, function shen_user_lambda7014(Arg7013) {
  if (Arg7013.length < 0) return [Shen.type_func, shen_user_lambda7014, 0, Arg7013];
  return (Shen.globals["*stinput*"])}, 0, [], "stinput"];





Shen.fns["shen.+vector?"] = [Shen.type_func, function shen_user_lambda7016(Arg7015) {
  if (Arg7015.length < 1) return [Shen.type_func, shen_user_lambda7016, 1, Arg7015];
  var Arg7015_0 = Arg7015[0];
  return (Shen.absvector$question$(Arg7015_0) && (Shen.absvector_ref(Arg7015_0, 0) > 0))}, 1, [], "shen.+vector?"];










Shen.fns["shen.fillvector"] = [Shen.type_func, function shen_user_lambda7019(Arg7018) {
  if (Arg7018.length < 4) return [Shen.type_func, shen_user_lambda7019, 4, Arg7018];
  var Arg7018_0 = Arg7018[0], Arg7018_1 = Arg7018[1], Arg7018_2 = Arg7018[2], Arg7018_3 = Arg7018[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7018_2, Arg7018_1)))
  ? Shen.absvector_set(Arg7018_0, Arg7018_2, Arg7018_3)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fillvector"], [Shen.absvector_set(Arg7018_0, Arg7018_1, Arg7018_3), (1 + Arg7018_1), Arg7018_2, Arg7018_3]);}))}, 4, [], "shen.fillvector"];










Shen.fns["vector->"] = [Shen.type_func, function shen_user_lambda7022(Arg7021) {
  if (Arg7021.length < 3) return [Shen.type_func, shen_user_lambda7022, 3, Arg7021];
  var Arg7021_0 = Arg7021[0], Arg7021_1 = Arg7021[1], Arg7021_2 = Arg7021[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7021_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : Shen.absvector_set(Arg7021_0, Arg7021_1, Arg7021_2))}, 3, [], "vector->"];





Shen.fns["<-vector"] = [Shen.type_func, function shen_user_lambda7024(Arg7023) {
  if (Arg7023.length < 2) return [Shen.type_func, shen_user_lambda7024, 2, Arg7023];
  var Arg7023_0 = Arg7023[0], Arg7023_1 = Arg7023[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7023_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : ((R0 = Shen.absvector_ref(Arg7023_0, Arg7023_1)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error("vector element not found\x0a");})
  : R0)))}, 2, [], "<-vector"];





Shen.fns["shen.posint?"] = [Shen.type_func, function shen_user_lambda7026(Arg7025) {
  if (Arg7025.length < 1) return [Shen.type_func, shen_user_lambda7026, 1, Arg7025];
  var Arg7025_0 = Arg7025[0];
  return (Shen.call(Shen.fns["integer?"], [Arg7025_0]) && (Arg7025_0 >= 0))}, 1, [], "shen.posint?"];





Shen.fns["limit"] = [Shen.type_func, function shen_user_lambda7028(Arg7027) {
  if (Arg7027.length < 1) return [Shen.type_func, shen_user_lambda7028, 1, Arg7027];
  var Arg7027_0 = Arg7027[0];
  return Shen.absvector_ref(Arg7027_0, 0)}, 1, [], "limit"];










Shen.fns["shen.analyse-symbol?"] = [Shen.type_func, function shen_user_lambda7031(Arg7030) {
  if (Arg7030.length < 1) return [Shen.type_func, shen_user_lambda7031, 1, Arg7030];
  var Arg7030_0 = Arg7030[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7030_0]))
  ? (Shen.call(Shen.fns["shen.alpha?"], [Arg7030_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7030_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-symbol?"]]);}))}, 1, [], "shen.analyse-symbol?"];





Shen.fns["shen.alpha?"] = [Shen.type_func, function shen_user_lambda7033(Arg7032) {
  if (Arg7032.length < 1) return [Shen.type_func, shen_user_lambda7033, 1, Arg7032];
  var Arg7032_0 = Arg7032[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7032_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", [Shen.type_cons, "a", [Shen.type_cons, "b", [Shen.type_cons, "c", [Shen.type_cons, "d", [Shen.type_cons, "e", [Shen.type_cons, "f", [Shen.type_cons, "g", [Shen.type_cons, "h", [Shen.type_cons, "i", [Shen.type_cons, "j", [Shen.type_cons, "k", [Shen.type_cons, "l", [Shen.type_cons, "m", [Shen.type_cons, "n", [Shen.type_cons, "o", [Shen.type_cons, "p", [Shen.type_cons, "q", [Shen.type_cons, "r", [Shen.type_cons, "s", [Shen.type_cons, "t", [Shen.type_cons, "u", [Shen.type_cons, "v", [Shen.type_cons, "w", [Shen.type_cons, "x", [Shen.type_cons, "y", [Shen.type_cons, "z", [Shen.type_cons, "=", [Shen.type_cons, "*", [Shen.type_cons, "/", [Shen.type_cons, "+", [Shen.type_cons, "-", [Shen.type_cons, "_", [Shen.type_cons, "?", [Shen.type_cons, "$", [Shen.type_cons, "!", [Shen.type_cons, "@", [Shen.type_cons, "~", [Shen.type_cons, ">", [Shen.type_cons, "<", [Shen.type_cons, "&", [Shen.type_cons, "%", [Shen.type_cons, "{", [Shen.type_cons, "}", [Shen.type_cons, ":", [Shen.type_cons, ";", [Shen.type_cons, "`", [Shen.type_cons, "#", [Shen.type_cons, "'", [Shen.type_cons, ".", []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.alpha?"];





Shen.fns["shen.alphanums?"] = [Shen.type_func, function shen_user_lambda7035(Arg7034) {
  if (Arg7034.length < 1) return [Shen.type_func, shen_user_lambda7035, 1, Arg7034];
  var Arg7034_0 = Arg7034[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7034_0)))
  ? true
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7034_0]))
  ? (Shen.call(Shen.fns["shen.alphanum?"], [Arg7034_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7034_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.alphanums?"]]);})))}, 1, [], "shen.alphanums?"];





Shen.fns["shen.alphanum?"] = [Shen.type_func, function shen_user_lambda7037(Arg7036) {
  if (Arg7036.length < 1) return [Shen.type_func, shen_user_lambda7037, 1, Arg7036];
  var Arg7036_0 = Arg7036[0];
  return (Shen.call(Shen.fns["shen.alpha?"], [Arg7036_0]) || Shen.call(Shen.fns["shen.digit?"], [Arg7036_0]))}, 1, [], "shen.alphanum?"];





Shen.fns["shen.digit?"] = [Shen.type_func, function shen_user_lambda7039(Arg7038) {
  if (Arg7038.length < 1) return [Shen.type_func, shen_user_lambda7039, 1, Arg7038];
  var Arg7038_0 = Arg7038[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7038_0, [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]);})}, 1, [], "shen.digit?"];





Shen.fns["variable?"] = [Shen.type_func, function shen_user_lambda7041(Arg7040) {
  if (Arg7040.length < 1) return [Shen.type_func, shen_user_lambda7041, 1, Arg7040];
  var Arg7040_0 = Arg7040[0];
  var R0;
  return (((Shen.boolean$question$(Arg7040_0) || ((typeof(Arg7040_0) == 'number') || (typeof(Arg7040_0) == 'string'))))
  ? false
  : (function() {
  return Shen.trap_error(function() {return ((R0 = Shen.str(Arg7040_0)),
  Shen.call(Shen.fns["shen.analyse-variable?"], [R0]));}, [Shen.type_func, function shen_user_lambda7043(Arg7042) {
  if (Arg7042.length < 1) return [Shen.type_func, shen_user_lambda7043, 1, Arg7042];
  var Arg7042_0 = Arg7042[0];
  return false}, 1, [], undefined]);}))}, 1, [], "variable?"];





Shen.fns["shen.analyse-variable?"] = [Shen.type_func, function shen_user_lambda7045(Arg7044) {
  if (Arg7044.length < 1) return [Shen.type_func, shen_user_lambda7045, 1, Arg7044];
  var Arg7044_0 = Arg7044[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7044_0]))
  ? (Shen.call(Shen.fns["shen.uppercase?"], [Arg7044_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7044_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-variable?"]]);}))}, 1, [], "shen.analyse-variable?"];





Shen.fns["shen.uppercase?"] = [Shen.type_func, function shen_user_lambda7047(Arg7046) {
  if (Arg7046.length < 1) return [Shen.type_func, shen_user_lambda7047, 1, Arg7046];
  var Arg7046_0 = Arg7046[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7046_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", []]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.uppercase?"];





Shen.fns["gensym"] = [Shen.type_func, function shen_user_lambda7049(Arg7048) {
  if (Arg7048.length < 1) return [Shen.type_func, shen_user_lambda7049, 1, Arg7048];
  var Arg7048_0 = Arg7048[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg7048_0, (Shen.globals["shen.*gensym*"] = (1 + (Shen.globals["shen.*gensym*"])))]);})}, 1, [], "gensym"];





Shen.fns["concat"] = [Shen.type_func, function shen_user_lambda7051(Arg7050) {
  if (Arg7050.length < 2) return [Shen.type_func, shen_user_lambda7051, 2, Arg7050];
  var Arg7050_0 = Arg7050[0], Arg7050_1 = Arg7050[1];
  return (function() {
  return Shen.intern((Shen.str(Arg7050_0) + Shen.str(Arg7050_1)));})}, 2, [], "concat"];










Shen.fns["fst"] = [Shen.type_func, function shen_user_lambda7054(Arg7053) {
  if (Arg7053.length < 1) return [Shen.type_func, shen_user_lambda7054, 1, Arg7053];
  var Arg7053_0 = Arg7053[0];
  return Shen.absvector_ref(Arg7053_0, 1)}, 1, [], "fst"];





Shen.fns["snd"] = [Shen.type_func, function shen_user_lambda7056(Arg7055) {
  if (Arg7055.length < 1) return [Shen.type_func, shen_user_lambda7056, 1, Arg7055];
  var Arg7055_0 = Arg7055[0];
  return Shen.absvector_ref(Arg7055_0, 2)}, 1, [], "snd"];





Shen.fns["tuple?"] = [Shen.type_func, function shen_user_lambda7058(Arg7057) {
  if (Arg7057.length < 1) return [Shen.type_func, shen_user_lambda7058, 1, Arg7057];
  var Arg7057_0 = Arg7057[0];
  return (function() {
  return Shen.trap_error(function() {return (Shen.absvector$question$(Arg7057_0) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tuple"], Shen.absvector_ref(Arg7057_0, 0))));}, [Shen.type_func, function shen_user_lambda7060(Arg7059) {
  if (Arg7059.length < 1) return [Shen.type_func, shen_user_lambda7060, 1, Arg7059];
  var Arg7059_0 = Arg7059[0];
  return false}, 1, [], undefined]);})}, 1, [], "tuple?"];





Shen.fns["append"] = [Shen.type_func, function shen_user_lambda7062(Arg7061) {
  if (Arg7061.length < 2) return [Shen.type_func, shen_user_lambda7062, 2, Arg7061];
  var Arg7061_0 = Arg7061[0], Arg7061_1 = Arg7061[1];
  return ((Shen.empty$question$(Arg7061_0))
  ? Arg7061_1
  : ((Shen.is_type(Arg7061_0, Shen.type_cons))
  ? [Shen.type_cons, Arg7061_0[1], Shen.call(Shen.fns["append"], [Arg7061_0[2], Arg7061_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "append"]]);})))}, 2, [], "append"];





Shen.fns["@v"] = [Shen.type_func, function shen_user_lambda7064(Arg7063) {
  if (Arg7063.length < 2) return [Shen.type_func, shen_user_lambda7064, 2, Arg7063];
  var Arg7063_0 = Arg7063[0], Arg7063_1 = Arg7063[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7063_1])),
  (R1 = Shen.vector((R0 + 1))),
  (R1 = Shen.call(Shen.fns["vector->"], [R1, 1, Arg7063_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? R1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7063_1, 1, R0, R1]);})))}, 2, [], "@v"];





Shen.fns["shen.@v-help"] = [Shen.type_func, function shen_user_lambda7066(Arg7065) {
  if (Arg7065.length < 4) return [Shen.type_func, shen_user_lambda7066, 4, Arg7065];
  var Arg7065_0 = Arg7065[0], Arg7065_1 = Arg7065[1], Arg7065_2 = Arg7065[2], Arg7065_3 = Arg7065[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7065_2, Arg7065_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7065_0, Arg7065_3, Arg7065_2, (Arg7065_2 + 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7065_0, (Arg7065_1 + 1), Arg7065_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7065_0, Arg7065_3, Arg7065_1, (Arg7065_1 + 1)])]);}))}, 4, [], "shen.@v-help"];





Shen.fns["shen.copyfromvector"] = [Shen.type_func, function shen_user_lambda7068(Arg7067) {
  if (Arg7067.length < 4) return [Shen.type_func, shen_user_lambda7068, 4, Arg7067];
  var Arg7067_0 = Arg7067[0], Arg7067_1 = Arg7067[1], Arg7067_2 = Arg7067[2], Arg7067_3 = Arg7067[3];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["vector->"], [Arg7067_1, Arg7067_3, Shen.call(Shen.fns["<-vector"], [Arg7067_0, Arg7067_2])]);}, [Shen.type_func, function shen_user_lambda7070(Arg7069) {
  if (Arg7069.length < 2) return [Shen.type_func, shen_user_lambda7070, 2, Arg7069];
  var Arg7069_0 = Arg7069[0], Arg7069_1 = Arg7069[1];
  return Arg7069_0}, 2, [Arg7067_1], undefined]);})}, 4, [], "shen.copyfromvector"];





Shen.fns["hdv"] = [Shen.type_func, function shen_user_lambda7072(Arg7071) {
  if (Arg7071.length < 1) return [Shen.type_func, shen_user_lambda7072, 1, Arg7071];
  var Arg7071_0 = Arg7071[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7071_0, 1]);}, [Shen.type_func, function shen_user_lambda7074(Arg7073) {
  if (Arg7073.length < 2) return [Shen.type_func, shen_user_lambda7074, 2, Arg7073];
  var Arg7073_0 = Arg7073[0], Arg7073_1 = Arg7073[1];
  return (function() {
  return Shen.simple_error(("hdv needs a non-empty vector as an argument; not " + Shen.call(Shen.fns["shen.app"], [Arg7073_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})}, 2, [Arg7071_0], undefined]);})}, 1, [], "hdv"];





Shen.fns["tlv"] = [Shen.type_func, function shen_user_lambda7076(Arg7075) {
  if (Arg7075.length < 1) return [Shen.type_func, shen_user_lambda7076, 1, Arg7075];
  var Arg7075_0 = Arg7075[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7075_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? (function() {
  return Shen.simple_error("cannot take the tail of the empty vector\x0a");})
  : ((Shen.unwind_tail(Shen.$eq$(R0, 1)))
  ? (function() {
  return Shen.vector(0);})
  : (Shen.vector((R0 - 1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7075_0, 2, R0, Shen.vector((R0 - 1))]);})))))}, 1, [], "tlv"];





Shen.fns["shen.tlv-help"] = [Shen.type_func, function shen_user_lambda7078(Arg7077) {
  if (Arg7077.length < 4) return [Shen.type_func, shen_user_lambda7078, 4, Arg7077];
  var Arg7077_0 = Arg7077[0], Arg7077_1 = Arg7077[1], Arg7077_2 = Arg7077[2], Arg7077_3 = Arg7077[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7077_2, Arg7077_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7077_0, Arg7077_3, Arg7077_2, (Arg7077_2 - 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7077_0, (Arg7077_1 + 1), Arg7077_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7077_0, Arg7077_3, Arg7077_1, (Arg7077_1 - 1)])]);}))}, 4, [], "shen.tlv-help"];





Shen.fns["assoc"] = [Shen.type_func, function shen_user_lambda7080(Arg7079) {
  if (Arg7079.length < 2) return [Shen.type_func, shen_user_lambda7080, 2, Arg7079];
  var Arg7079_0 = Arg7079[0], Arg7079_1 = Arg7079[1];
  return ((Shen.empty$question$(Arg7079_1))
  ? []
  : (((Shen.is_type(Arg7079_1, Shen.type_cons) && (Shen.is_type(Arg7079_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7079_1[1][1], Arg7079_0)))))
  ? Arg7079_1[1]
  : ((Shen.is_type(Arg7079_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["assoc"], [Arg7079_0, Arg7079_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "assoc"]]);}))))}, 2, [], "assoc"];





Shen.fns["boolean?"] = [Shen.type_func, function shen_user_lambda7082(Arg7081) {
  if (Arg7081.length < 1) return [Shen.type_func, shen_user_lambda7082, 1, Arg7081];
  var Arg7081_0 = Arg7081[0];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg7081_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg7081_0)))
  ? true
  : false))}, 1, [], "boolean?"];





Shen.fns["nl"] = [Shen.type_func, function shen_user_lambda7084(Arg7083) {
  if (Arg7083.length < 1) return [Shen.type_func, shen_user_lambda7084, 1, Arg7083];
  var Arg7083_0 = Arg7083[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7083_0)))
  ? 0
  : (Shen.pr("\x0a", Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [(Arg7083_0 - 1)]);})))}, 1, [], "nl"];





Shen.fns["difference"] = [Shen.type_func, function shen_user_lambda7086(Arg7085) {
  if (Arg7085.length < 2) return [Shen.type_func, shen_user_lambda7086, 2, Arg7085];
  var Arg7085_0 = Arg7085[0], Arg7085_1 = Arg7085[1];
  return ((Shen.empty$question$(Arg7085_0))
  ? []
  : ((Shen.is_type(Arg7085_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7085_0[1], Arg7085_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["difference"], [Arg7085_0[2], Arg7085_1]);})
  : [Shen.type_cons, Arg7085_0[1], Shen.call(Shen.fns["difference"], [Arg7085_0[2], Arg7085_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "difference"]]);})))}, 2, [], "difference"];





Shen.fns["do"] = [Shen.type_func, function shen_user_lambda7088(Arg7087) {
  if (Arg7087.length < 2) return [Shen.type_func, shen_user_lambda7088, 2, Arg7087];
  var Arg7087_0 = Arg7087[0], Arg7087_1 = Arg7087[1];
  return Arg7087_1}, 2, [], "do"];





Shen.fns["element?"] = [Shen.type_func, function shen_user_lambda7090(Arg7089) {
  if (Arg7089.length < 2) return [Shen.type_func, shen_user_lambda7090, 2, Arg7089];
  var Arg7089_0 = Arg7089[0], Arg7089_1 = Arg7089[1];
  return ((Shen.empty$question$(Arg7089_1))
  ? false
  : (((Shen.is_type(Arg7089_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7089_1[1], Arg7089_0))))
  ? true
  : ((Shen.is_type(Arg7089_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7089_0, Arg7089_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "element?"]]);}))))}, 2, [], "element?"];










Shen.fns["fix"] = [Shen.type_func, function shen_user_lambda7093(Arg7092) {
  if (Arg7092.length < 2) return [Shen.type_func, shen_user_lambda7093, 2, Arg7092];
  var Arg7092_0 = Arg7092[0], Arg7092_1 = Arg7092[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7092_0, Arg7092_1, Shen.call(Arg7092_0, [Arg7092_1])]);})}, 2, [], "fix"];





Shen.fns["shen.fix-help"] = [Shen.type_func, function shen_user_lambda7095(Arg7094) {
  if (Arg7094.length < 3) return [Shen.type_func, shen_user_lambda7095, 3, Arg7094];
  var Arg7094_0 = Arg7094[0], Arg7094_1 = Arg7094[1], Arg7094_2 = Arg7094[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7094_2, Arg7094_1)))
  ? Arg7094_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7094_0, Arg7094_2, Shen.call(Arg7094_0, [Arg7094_2])]);}))}, 3, [], "shen.fix-help"];





Shen.fns["put"] = [Shen.type_func, function shen_user_lambda7097(Arg7096) {
  if (Arg7096.length < 4) return [Shen.type_func, shen_user_lambda7097, 4, Arg7096];
  var Arg7096_0 = Arg7096[0], Arg7096_1 = Arg7096[1], Arg7096_2 = Arg7096[2], Arg7096_3 = Arg7096[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7096_0, Shen.call(Shen.fns["limit"], [Arg7096_3])])),
  (R1 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7096_3, R0]);}, [Shen.type_func, function shen_user_lambda7099(Arg7098) {
  if (Arg7098.length < 1) return [Shen.type_func, shen_user_lambda7099, 1, Arg7098];
  var Arg7098_0 = Arg7098[0];
  return []}, 1, [], undefined])),
  Shen.call(Shen.fns["vector->"], [Arg7096_3, R0, Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7096_0, Arg7096_1, Arg7096_2, R1])]),
  Arg7096_2)}, 4, [], "put"];





Shen.fns["shen.change-pointer-value"] = [Shen.type_func, function shen_user_lambda7101(Arg7100) {
  if (Arg7100.length < 4) return [Shen.type_func, shen_user_lambda7101, 4, Arg7100];
  var Arg7100_0 = Arg7100[0], Arg7100_1 = Arg7100[1], Arg7100_2 = Arg7100[2], Arg7100_3 = Arg7100[3];
  return ((Shen.empty$question$(Arg7100_3))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg7100_0, [Shen.type_cons, Arg7100_1, []]], Arg7100_2], []]
  : (((Shen.is_type(Arg7100_3, Shen.type_cons) && (Shen.is_type(Arg7100_3[1], Shen.type_cons) && (Shen.is_type(Arg7100_3[1][1], Shen.type_cons) && (Shen.is_type(Arg7100_3[1][1][2], Shen.type_cons) && (Shen.empty$question$(Arg7100_3[1][1][2][2]) && (Shen.unwind_tail(Shen.$eq$(Arg7100_3[1][1][2][1], Arg7100_1)) && Shen.unwind_tail(Shen.$eq$(Arg7100_3[1][1][1], Arg7100_0)))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg7100_3[1][1], Arg7100_2], Arg7100_3[2]]
  : ((Shen.is_type(Arg7100_3, Shen.type_cons))
  ? [Shen.type_cons, Arg7100_3[1], Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7100_0, Arg7100_1, Arg7100_2, Arg7100_3[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.change-pointer-value"]]);}))))}, 4, [], "shen.change-pointer-value"];





Shen.fns["get"] = [Shen.type_func, function shen_user_lambda7103(Arg7102) {
  if (Arg7102.length < 3) return [Shen.type_func, shen_user_lambda7103, 3, Arg7102];
  var Arg7102_0 = Arg7102[0], Arg7102_1 = Arg7102[1], Arg7102_2 = Arg7102[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7102_0, Shen.call(Shen.fns["limit"], [Arg7102_2])])),
  (R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7102_2, R0]);}, [Shen.type_func, function shen_user_lambda7105(Arg7104) {
  if (Arg7104.length < 1) return [Shen.type_func, shen_user_lambda7105, 1, Arg7104];
  var Arg7104_0 = Arg7104[0];
  return (function() {
  return Shen.simple_error("pointer not found\x0a");})}, 1, [], undefined])),
  (R0 = Shen.call(Shen.fns["assoc"], [[Shen.type_cons, Arg7102_0, [Shen.type_cons, Arg7102_1, []]], R0])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("value not found\x0a");})
  : R0[2]))}, 3, [], "get"];





Shen.fns["hash"] = [Shen.type_func, function shen_user_lambda7107(Arg7106) {
  if (Arg7106.length < 2) return [Shen.type_func, shen_user_lambda7107, 2, Arg7106];
  var Arg7106_0 = Arg7106[0], Arg7106_1 = Arg7106[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.mod"], [Shen.call(Shen.fns["shen.sum"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7109(Arg7108) {
  if (Arg7108.length < 1) return [Shen.type_func, shen_user_lambda7109, 1, Arg7108];
  var Arg7108_0 = Arg7108[0];
  return (function() {
  return Shen.string_$gt$n(Arg7108_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg7106_0])])]), Arg7106_1])),
  ((Shen.unwind_tail(Shen.$eq$(0, R0)))
  ? 1
  : R0))}, 2, [], "hash"];





Shen.fns["shen.mod"] = [Shen.type_func, function shen_user_lambda7111(Arg7110) {
  if (Arg7110.length < 2) return [Shen.type_func, shen_user_lambda7111, 2, Arg7110];
  var Arg7110_0 = Arg7110[0], Arg7110_1 = Arg7110[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7110_0, Shen.call(Shen.fns["shen.multiples"], [Arg7110_0, [Shen.type_cons, Arg7110_1, []]])]);})}, 2, [], "shen.mod"];





Shen.fns["shen.multiples"] = [Shen.type_func, function shen_user_lambda7113(Arg7112) {
  if (Arg7112.length < 2) return [Shen.type_func, shen_user_lambda7113, 2, Arg7112];
  var Arg7112_0 = Arg7112[0], Arg7112_1 = Arg7112[1];
  return (((Shen.is_type(Arg7112_1, Shen.type_cons) && (Arg7112_1[1] > Arg7112_0)))
  ? Arg7112_1[2]
  : ((Shen.is_type(Arg7112_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.multiples"], [Arg7112_0, [Shen.type_cons, (2 * Arg7112_1[1]), Arg7112_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiples"]]);})))}, 2, [], "shen.multiples"];





Shen.fns["shen.modh"] = [Shen.type_func, function shen_user_lambda7115(Arg7114) {
  if (Arg7114.length < 2) return [Shen.type_func, shen_user_lambda7115, 2, Arg7114];
  var Arg7114_0 = Arg7114[0], Arg7114_1 = Arg7114[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7114_0)))
  ? 0
  : ((Shen.empty$question$(Arg7114_1))
  ? Arg7114_0
  : (((Shen.is_type(Arg7114_1, Shen.type_cons) && (Arg7114_1[1] > Arg7114_0)))
  ? ((Shen.empty$question$(Arg7114_1[2]))
  ? Arg7114_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7114_0, Arg7114_1[2]]);}))
  : ((Shen.is_type(Arg7114_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [(Arg7114_0 - Arg7114_1[1]), Arg7114_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.modh"]]);})))))}, 2, [], "shen.modh"];





Shen.fns["shen.sum"] = [Shen.type_func, function shen_user_lambda7117(Arg7116) {
  if (Arg7116.length < 1) return [Shen.type_func, shen_user_lambda7117, 1, Arg7116];
  var Arg7116_0 = Arg7116[0];
  return ((Shen.empty$question$(Arg7116_0))
  ? 0
  : ((Shen.is_type(Arg7116_0, Shen.type_cons))
  ? (Arg7116_0[1] + Shen.call(Shen.fns["shen.sum"], [Arg7116_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.sum"]]);})))}, 1, [], "shen.sum"];





Shen.fns["head"] = [Shen.type_func, function shen_user_lambda7119(Arg7118) {
  if (Arg7118.length < 1) return [Shen.type_func, shen_user_lambda7119, 1, Arg7118];
  var Arg7118_0 = Arg7118[0];
  return ((Shen.is_type(Arg7118_0, Shen.type_cons))
  ? Arg7118_0[1]
  : (function() {
  return Shen.simple_error("head expects a non-empty list");}))}, 1, [], "head"];





Shen.fns["tail"] = [Shen.type_func, function shen_user_lambda7121(Arg7120) {
  if (Arg7120.length < 1) return [Shen.type_func, shen_user_lambda7121, 1, Arg7120];
  var Arg7120_0 = Arg7120[0];
  return ((Shen.is_type(Arg7120_0, Shen.type_cons))
  ? Arg7120_0[2]
  : (function() {
  return Shen.simple_error("tail expects a non-empty list");}))}, 1, [], "tail"];





Shen.fns["hdstr"] = [Shen.type_func, function shen_user_lambda7123(Arg7122) {
  if (Arg7122.length < 1) return [Shen.type_func, shen_user_lambda7123, 1, Arg7122];
  var Arg7122_0 = Arg7122[0];
  return Arg7122_0[0]}, 1, [], "hdstr"];





Shen.fns["intersection"] = [Shen.type_func, function shen_user_lambda7125(Arg7124) {
  if (Arg7124.length < 2) return [Shen.type_func, shen_user_lambda7125, 2, Arg7124];
  var Arg7124_0 = Arg7124[0], Arg7124_1 = Arg7124[1];
  return ((Shen.empty$question$(Arg7124_0))
  ? []
  : ((Shen.is_type(Arg7124_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7124_0[1], Arg7124_1]))
  ? [Shen.type_cons, Arg7124_0[1], Shen.call(Shen.fns["intersection"], [Arg7124_0[2], Arg7124_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["intersection"], [Arg7124_0[2], Arg7124_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "intersection"]]);})))}, 2, [], "intersection"];





Shen.fns["reverse"] = [Shen.type_func, function shen_user_lambda7127(Arg7126) {
  if (Arg7126.length < 1) return [Shen.type_func, shen_user_lambda7127, 1, Arg7126];
  var Arg7126_0 = Arg7126[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7126_0, []]);})}, 1, [], "reverse"];





Shen.fns["shen.reverse_help"] = [Shen.type_func, function shen_user_lambda7129(Arg7128) {
  if (Arg7128.length < 2) return [Shen.type_func, shen_user_lambda7129, 2, Arg7128];
  var Arg7128_0 = Arg7128[0], Arg7128_1 = Arg7128[1];
  return ((Shen.empty$question$(Arg7128_0))
  ? Arg7128_1
  : ((Shen.is_type(Arg7128_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7128_0[2], [Shen.type_cons, Arg7128_0[1], Arg7128_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.reverse_help"]]);})))}, 2, [], "shen.reverse_help"];





Shen.fns["union"] = [Shen.type_func, function shen_user_lambda7131(Arg7130) {
  if (Arg7130.length < 2) return [Shen.type_func, shen_user_lambda7131, 2, Arg7130];
  var Arg7130_0 = Arg7130[0], Arg7130_1 = Arg7130[1];
  return ((Shen.empty$question$(Arg7130_0))
  ? Arg7130_1
  : ((Shen.is_type(Arg7130_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7130_0[1], Arg7130_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Arg7130_0[2], Arg7130_1]);})
  : [Shen.type_cons, Arg7130_0[1], Shen.call(Shen.fns["union"], [Arg7130_0[2], Arg7130_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "union"]]);})))}, 2, [], "union"];





Shen.fns["y-or-n?"] = [Shen.type_func, function shen_user_lambda7133(Arg7132) {
  if (Arg7132.length < 1) return [Shen.type_func, shen_user_lambda7133, 1, Arg7132];
  var Arg7132_0 = Arg7132[0];
  var R0;
  return (Shen.pr(Shen.call(Shen.fns["shen.proc-nl"], [Arg7132_0]), Shen.call(Shen.fns["stoutput"], [])),
  Shen.pr(" (y/n) ", Shen.call(Shen.fns["stoutput"], [])),
  (R0 = Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["input"], []), "", [Shen.type_symbol, "shen.s"]])),
  ((Shen.unwind_tail(Shen.$eq$("y", R0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$("n", R0)))
  ? false
  : (Shen.pr("please answer y or n\x0a", Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["y-or-n?"], [Arg7132_0]);})))))}, 1, [], "y-or-n?"];










Shen.fns["subst"] = [Shen.type_func, function shen_user_lambda7136(Arg7135) {
  if (Arg7135.length < 3) return [Shen.type_func, shen_user_lambda7136, 3, Arg7135];
  var Arg7135_0 = Arg7135[0], Arg7135_1 = Arg7135[1], Arg7135_2 = Arg7135[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7135_2, Arg7135_1)))
  ? Arg7135_0
  : ((Shen.is_type(Arg7135_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["subst"], [Arg7135_0, Arg7135_1, Arg7135_2[1]]), Shen.call(Shen.fns["subst"], [Arg7135_0, Arg7135_1, Arg7135_2[2]])]
  : Arg7135_2))}, 3, [], "subst"];





Shen.fns["explode"] = [Shen.type_func, function shen_user_lambda7138(Arg7137) {
  if (Arg7137.length < 1) return [Shen.type_func, shen_user_lambda7138, 1, Arg7137];
  var Arg7137_0 = Arg7137[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.explode-h"], [Shen.call(Shen.fns["shen.app"], [Arg7137_0, "", [Shen.type_symbol, "shen.a"]])]);})}, 1, [], "explode"];





Shen.fns["shen.explode-h"] = [Shen.type_func, function shen_user_lambda7140(Arg7139) {
  if (Arg7139.length < 1) return [Shen.type_func, shen_user_lambda7140, 1, Arg7139];
  var Arg7139_0 = Arg7139[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7139_0)))
  ? []
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7139_0]))
  ? [Shen.type_cons, Arg7139_0[0], Shen.call(Shen.fns["shen.explode-h"], [Shen.tlstr(Arg7139_0)])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explode-h"]]);})))}, 1, [], "shen.explode-h"];





Shen.fns["cd"] = [Shen.type_func, function shen_user_lambda7142(Arg7141) {
  if (Arg7141.length < 1) return [Shen.type_func, shen_user_lambda7142, 1, Arg7141];
  var Arg7141_0 = Arg7141[0];
  return (Shen.globals["*home-directory*"] = ((Shen.unwind_tail(Shen.$eq$(Arg7141_0, "")))
  ? ""
  : Shen.call(Shen.fns["shen.app"], [Arg7141_0, "/", [Shen.type_symbol, "shen.a"]])))}, 1, [], "cd"];





Shen.fns["map"] = [Shen.type_func, function shen_user_lambda7144(Arg7143) {
  if (Arg7143.length < 2) return [Shen.type_func, shen_user_lambda7144, 2, Arg7143];
  var Arg7143_0 = Arg7143[0], Arg7143_1 = Arg7143[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7143_0, Arg7143_1, []]);})}, 2, [], "map"];





Shen.fns["shen.map-h"] = [Shen.type_func, function shen_user_lambda7146(Arg7145) {
  if (Arg7145.length < 3) return [Shen.type_func, shen_user_lambda7146, 3, Arg7145];
  var Arg7145_0 = Arg7145[0], Arg7145_1 = Arg7145[1], Arg7145_2 = Arg7145[2];
  return ((Shen.empty$question$(Arg7145_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg7145_2]);})
  : ((Shen.is_type(Arg7145_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7145_0, Arg7145_1[2], [Shen.type_cons, Shen.call(Arg7145_0, [Arg7145_1[1]]), Arg7145_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.map-h"]]);})))}, 3, [], "shen.map-h"];





Shen.fns["length"] = [Shen.type_func, function shen_user_lambda7148(Arg7147) {
  if (Arg7147.length < 1) return [Shen.type_func, shen_user_lambda7148, 1, Arg7147];
  var Arg7147_0 = Arg7147[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7147_0, 0]);})}, 1, [], "length"];





Shen.fns["shen.length-h"] = [Shen.type_func, function shen_user_lambda7150(Arg7149) {
  if (Arg7149.length < 2) return [Shen.type_func, shen_user_lambda7150, 2, Arg7149];
  var Arg7149_0 = Arg7149[0], Arg7149_1 = Arg7149[1];
  return ((Shen.empty$question$(Arg7149_0))
  ? Arg7149_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7149_0[2], (Arg7149_1 + 1)]);}))}, 2, [], "shen.length-h"];





Shen.fns["occurrences"] = [Shen.type_func, function shen_user_lambda7152(Arg7151) {
  if (Arg7151.length < 2) return [Shen.type_func, shen_user_lambda7152, 2, Arg7151];
  var Arg7151_0 = Arg7151[0], Arg7151_1 = Arg7151[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7151_1, Arg7151_0)))
  ? 1
  : ((Shen.is_type(Arg7151_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["occurrences"], [Arg7151_0, Arg7151_1[1]]) + Shen.call(Shen.fns["occurrences"], [Arg7151_0, Arg7151_1[2]]))
  : 0))}, 2, [], "occurrences"];





Shen.fns["nth"] = [Shen.type_func, function shen_user_lambda7154(Arg7153) {
  if (Arg7153.length < 2) return [Shen.type_func, shen_user_lambda7154, 2, Arg7153];
  var Arg7153_0 = Arg7153[0], Arg7153_1 = Arg7153[1];
  return (((Shen.unwind_tail(Shen.$eq$(1, Arg7153_0)) && Shen.is_type(Arg7153_1, Shen.type_cons)))
  ? Arg7153_1[1]
  : ((Shen.is_type(Arg7153_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["nth"], [(Arg7153_0 - 1), Arg7153_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "nth"]]);})))}, 2, [], "nth"];





Shen.fns["integer?"] = [Shen.type_func, function shen_user_lambda7156(Arg7155) {
  if (Arg7155.length < 1) return [Shen.type_func, shen_user_lambda7156, 1, Arg7155];
  var Arg7155_0 = Arg7155[0];
  var R0;
  return ((typeof(Arg7155_0) == 'number') && ((R0 = Shen.call(Shen.fns["shen.abs"], [Arg7155_0])),
  Shen.call(Shen.fns["shen.integer-test?"], [R0, Shen.call(Shen.fns["shen.magless"], [R0, 1])])))}, 1, [], "integer?"];





Shen.fns["shen.abs"] = [Shen.type_func, function shen_user_lambda7158(Arg7157) {
  if (Arg7157.length < 1) return [Shen.type_func, shen_user_lambda7158, 1, Arg7157];
  var Arg7157_0 = Arg7157[0];
  return (((Arg7157_0 > 0))
  ? Arg7157_0
  : (0 - Arg7157_0))}, 1, [], "shen.abs"];





Shen.fns["shen.magless"] = [Shen.type_func, function shen_user_lambda7160(Arg7159) {
  if (Arg7159.length < 2) return [Shen.type_func, shen_user_lambda7160, 2, Arg7159];
  var Arg7159_0 = Arg7159[0], Arg7159_1 = Arg7159[1];
  var R0;
  return ((R0 = (Arg7159_1 * 2)),
  (((R0 > Arg7159_0))
  ? Arg7159_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.magless"], [Arg7159_0, R0]);})))}, 2, [], "shen.magless"];





Shen.fns["shen.integer-test?"] = [Shen.type_func, function shen_user_lambda7162(Arg7161) {
  if (Arg7161.length < 2) return [Shen.type_func, shen_user_lambda7162, 2, Arg7161];
  var Arg7161_0 = Arg7161[0], Arg7161_1 = Arg7161[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7161_0)))
  ? true
  : (((1 > Arg7161_0))
  ? false
  : ((R0 = (Arg7161_0 - Arg7161_1)),
  (((0 > R0))
  ? (function() {
  return Shen.call_tail(Shen.fns["integer?"], [Arg7161_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.integer-test?"], [R0, Arg7161_1]);})))))}, 2, [], "shen.integer-test?"];





Shen.fns["mapcan"] = [Shen.type_func, function shen_user_lambda7164(Arg7163) {
  if (Arg7163.length < 2) return [Shen.type_func, shen_user_lambda7164, 2, Arg7163];
  var Arg7163_0 = Arg7163[0], Arg7163_1 = Arg7163[1];
  return ((Shen.empty$question$(Arg7163_1))
  ? []
  : ((Shen.is_type(Arg7163_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Arg7163_0, [Arg7163_1[1]]), Shen.call(Shen.fns["mapcan"], [Arg7163_0, Arg7163_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "mapcan"]]);})))}, 2, [], "mapcan"];





Shen.fns["read-file-as-bytelist"] = [Shen.type_func, function shen_user_lambda7166(Arg7165) {
  if (Arg7165.length < 1) return [Shen.type_func, shen_user_lambda7166, 1, Arg7165];
  var Arg7165_0 = Arg7165[0];
  var R0, R1;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg7165_0, [Shen.type_symbol, "in"])),
  (R1 = Shen.read_byte(R0)),
  (R1 = Shen.call(Shen.fns["shen.read-file-as-bytelist-help"], [R0, R1, []])),
  Shen.close(R0),
  (function() {
  return Shen.call_tail(Shen.fns["reverse"], [R1]);}))}, 1, [], "read-file-as-bytelist"];





Shen.fns["shen.read-file-as-bytelist-help"] = [Shen.type_func, function shen_user_lambda7168(Arg7167) {
  if (Arg7167.length < 3) return [Shen.type_func, shen_user_lambda7168, 3, Arg7167];
  var Arg7167_0 = Arg7167[0], Arg7167_1 = Arg7167[1], Arg7167_2 = Arg7167[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7167_1)))
  ? Arg7167_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.read-file-as-bytelist-help"], [Arg7167_0, Shen.read_byte(Arg7167_0), [Shen.type_cons, Arg7167_1, Arg7167_2]]);}))}, 3, [], "shen.read-file-as-bytelist-help"];





Shen.fns["read-file-as-string"] = [Shen.type_func, function shen_user_lambda7170(Arg7169) {
  if (Arg7169.length < 1) return [Shen.type_func, shen_user_lambda7170, 1, Arg7169];
  var Arg7169_0 = Arg7169[0];
  var R0;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg7169_0, [Shen.type_symbol, "in"])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [R0, Shen.read_byte(R0), ""]);}))}, 1, [], "read-file-as-string"];





Shen.fns["shen.rfas-h"] = [Shen.type_func, function shen_user_lambda7172(Arg7171) {
  if (Arg7171.length < 3) return [Shen.type_func, shen_user_lambda7172, 3, Arg7171];
  var Arg7171_0 = Arg7171[0], Arg7171_1 = Arg7171[1], Arg7171_2 = Arg7171[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg7171_1)))
  ? (Shen.close(Arg7171_0),
  Arg7171_2)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [Arg7171_0, Shen.read_byte(Arg7171_0), (Arg7171_2 + Shen.n_$gt$string(Arg7171_1))]);}))}, 3, [], "shen.rfas-h"];





Shen.fns["=="] = [Shen.type_func, function shen_user_lambda7174(Arg7173) {
  if (Arg7173.length < 2) return [Shen.type_func, shen_user_lambda7174, 2, Arg7173];
  var Arg7173_0 = Arg7173[0], Arg7173_1 = Arg7173[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7173_1, Arg7173_0)))
  ? true
  : false)}, 2, [], "=="];





Shen.fns["abort"] = [Shen.type_func, function shen_user_lambda7176(Arg7175) {
  if (Arg7175.length < 0) return [Shen.type_func, shen_user_lambda7176, 0, Arg7175];
  return (function() {
  return Shen.simple_error("");})}, 0, [], "abort"];





Shen.fns["read"] = [Shen.type_func, function shen_user_lambda7178(Arg7177) {
  if (Arg7177.length < 0) return [Shen.type_func, shen_user_lambda7178, 0, Arg7177];
  return Shen.call(Shen.fns["lineread"], [])[1]}, 0, [], "read"];





Shen.fns["input"] = [Shen.type_func, function shen_user_lambda7180(Arg7179) {
  if (Arg7179.length < 0) return [Shen.type_func, shen_user_lambda7180, 0, Arg7179];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["read"], [])]);})}, 0, [], "input"];





Shen.fns["input+"] = [Shen.type_func, function shen_user_lambda7182(Arg7181) {
  if (Arg7181.length < 2) return [Shen.type_func, shen_user_lambda7182, 2, Arg7181];
  var Arg7181_0 = Arg7181[0], Arg7181_1 = Arg7181[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["read"], [])),
  (R1 = Shen.call(Shen.fns["shen.typecheck"], [R0, Arg7181_1])),
  ((Shen.unwind_tail(Shen.$eq$(false, R1)))
  ? (Shen.pr(("input is not of type " + Shen.call(Shen.fns["shen.app"], [Arg7181_1, ": please re-enter ", [Shen.type_symbol, "shen.r"]])), Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["input+"], [[Shen.type_symbol, ":"], Arg7181_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["eval"], [R0]);})))}, 2, [], "input+"];





Shen.fns["bound?"] = [Shen.type_func, function shen_user_lambda7184(Arg7183) {
  if (Arg7183.length < 1) return [Shen.type_func, shen_user_lambda7184, 1, Arg7183];
  var Arg7183_0 = Arg7183[0];
  var R0;
  return (Shen.is_type(Arg7183_0, Shen.type_symbol) && ((R0 = Shen.trap_error(function() {return (Shen.globals[Arg7183_0[1]]);}, [Shen.type_func, function shen_user_lambda7186(Arg7185) {
  if (Arg7185.length < 1) return [Shen.type_func, shen_user_lambda7186, 1, Arg7185];
  var Arg7185_0 = Arg7185[0];
  return [Shen.type_symbol, "shen.this-symbol-is-unbound"]}, 1, [], undefined])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.this-symbol-is-unbound"])))
  ? false
  : true)))}, 1, [], "bound?"];





Shen.fns["shen.string->bytes"] = [Shen.type_func, function shen_user_lambda7188(Arg7187) {
  if (Arg7187.length < 1) return [Shen.type_func, shen_user_lambda7188, 1, Arg7187];
  var Arg7187_0 = Arg7187[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7187_0)))
  ? []
  : [Shen.type_cons, Shen.string_$gt$n(Arg7187_0[0]), Shen.call(Shen.fns["shen.string->bytes"], [Shen.tlstr(Arg7187_0)])])}, 1, [], "shen.string->bytes"];





Shen.fns["maxinferences"] = [Shen.type_func, function shen_user_lambda7190(Arg7189) {
  if (Arg7189.length < 1) return [Shen.type_func, shen_user_lambda7190, 1, Arg7189];
  var Arg7189_0 = Arg7189[0];
  return (Shen.globals["shen.*maxinferences*"] = Arg7189_0)}, 1, [], "maxinferences"];





Shen.fns["inferences"] = [Shen.type_func, function shen_user_lambda7192(Arg7191) {
  if (Arg7191.length < 0) return [Shen.type_func, shen_user_lambda7192, 0, Arg7191];
  return (Shen.globals["shen.*infs*"])}, 0, [], "inferences"];





Shen.fns["protect"] = [Shen.type_func, function shen_user_lambda7194(Arg7193) {
  if (Arg7193.length < 1) return [Shen.type_func, shen_user_lambda7194, 1, Arg7193];
  var Arg7193_0 = Arg7193[0];
  return Arg7193_0}, 1, [], "protect"];





Shen.fns["stoutput"] = [Shen.type_func, function shen_user_lambda7196(Arg7195) {
  if (Arg7195.length < 0) return [Shen.type_func, shen_user_lambda7196, 0, Arg7195];
  return (Shen.globals["*stoutput*"])}, 0, [], "stoutput"];





Shen.fns["string->symbol"] = [Shen.type_func, function shen_user_lambda7198(Arg7197) {
  if (Arg7197.length < 1) return [Shen.type_func, shen_user_lambda7198, 1, Arg7197];
  var Arg7197_0 = Arg7197[0];
  var R0;
  return ((R0 = Shen.intern(Arg7197_0)),
  ((Shen.is_type(R0, Shen.type_symbol))
  ? R0
  : (function() {
  return Shen.simple_error(("cannot intern " + Shen.call(Shen.fns["shen.app"], [Arg7197_0, " to a symbol", [Shen.type_symbol, "shen.s"]])));})))}, 1, [], "string->symbol"];










Shen.fns["shen.datatype-error"] = [Shen.type_func, function shen_user_lambda6874(Arg6873) {
  if (Arg6873.length < 1) return [Shen.type_func, shen_user_lambda6874, 1, Arg6873];
  var Arg6873_0 = Arg6873[0];
  return (((Shen.is_type(Arg6873_0, Shen.type_cons) && (Shen.is_type(Arg6873_0[2], Shen.type_cons) && Shen.empty$question$(Arg6873_0[2][2]))))
  ? (function() {
  return Shen.simple_error(("datatype syntax error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6873_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.datatype-error"]]);}))}, 1, [], "shen.datatype-error"];





Shen.fns["shen.<datatype-rules>"] = [Shen.type_func, function shen_user_lambda6876(Arg6875) {
  if (Arg6875.length < 1) return [Shen.type_func, shen_user_lambda6876, 1, Arg6875];
  var Arg6875_0 = Arg6875[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<datatype-rule>"], [Arg6875_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<datatype-rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6875_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rules>"];





Shen.fns["shen.<datatype-rule>"] = [Shen.type_func, function shen_user_lambda6878(Arg6877) {
  if (Arg6877.length < 1) return [Shen.type_func, shen_user_lambda6878, 1, Arg6877];
  var Arg6877_0 = Arg6877[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6877_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<singleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.single"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6877_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<doubleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.double"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rule>"];





Shen.fns["shen.<side-conditions>"] = [Shen.type_func, function shen_user_lambda6880(Arg6879) {
  if (Arg6879.length < 1) return [Shen.type_func, shen_user_lambda6880, 1, Arg6879];
  var Arg6879_0 = Arg6879[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<side-condition>"], [Arg6879_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<side-conditions>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6879_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-conditions>"];





Shen.fns["shen.<side-condition>"] = [Shen.type_func, function shen_user_lambda6882(Arg6881) {
  if (Arg6881.length < 1) return [Shen.type_func, shen_user_lambda6882, 1, Arg6881];
  var Arg6881_0 = Arg6881[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6881_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6881_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<expr>"], [Shen.call(Shen.fns["shen.pair"], [Arg6881_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6881_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6881_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6881_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<variable?>"], [Shen.call(Shen.fns["shen.pair"], [Arg6881_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6881_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<expr>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-condition>"];





Shen.fns["shen.<variable?>"] = [Shen.type_func, function shen_user_lambda6884(Arg6883) {
  if (Arg6883.length < 1) return [Shen.type_func, shen_user_lambda6884, 1, Arg6883];
  var Arg6883_0 = Arg6883[0];
  var R0;
  return (((Shen.is_type(Arg6883_0[1], Shen.type_cons))
  ? ((R0 = Arg6883_0[1][1]),
  ((Shen.call(Shen.fns["variable?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6883_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6883_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<variable?>"];





Shen.fns["shen.<expr>"] = [Shen.type_func, function shen_user_lambda6886(Arg6885) {
  if (Arg6885.length < 1) return [Shen.type_func, shen_user_lambda6886, 1, Arg6885];
  var Arg6885_0 = Arg6885[0];
  var R0;
  return (((Shen.is_type(Arg6885_0[1], Shen.type_cons))
  ? ((R0 = Arg6885_0[1][1]),
  (((!(Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]) || (Shen.call(Shen.fns["shen.singleunderline?"], [R0]) || Shen.call(Shen.fns["shen.doubleunderline?"], [R0])))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6885_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6885_0])])[1], Shen.call(Shen.fns["shen.remove-bar"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<expr>"];





Shen.fns["shen.remove-bar"] = [Shen.type_func, function shen_user_lambda6888(Arg6887) {
  if (Arg6887.length < 1) return [Shen.type_func, shen_user_lambda6888, 1, Arg6887];
  var Arg6887_0 = Arg6887[0];
  return (((Shen.is_type(Arg6887_0, Shen.type_cons) && (Shen.is_type(Arg6887_0[2], Shen.type_cons) && (Shen.is_type(Arg6887_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6887_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6887_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, Arg6887_0[1], Arg6887_0[2][2][1]]
  : ((Shen.is_type(Arg6887_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove-bar"], [Arg6887_0[1]]), Shen.call(Shen.fns["shen.remove-bar"], [Arg6887_0[2]])]
  : Arg6887_0))}, 1, [], "shen.remove-bar"];





Shen.fns["shen.<premises>"] = [Shen.type_func, function shen_user_lambda6890(Arg6889) {
  if (Arg6889.length < 1) return [Shen.type_func, shen_user_lambda6890, 1, Arg6889];
  var Arg6889_0 = Arg6889[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<premise>"], [Arg6889_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6889_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<premises>"];





Shen.fns["shen.<semicolon-symbol>"] = [Shen.type_func, function shen_user_lambda6892(Arg6891) {
  if (Arg6891.length < 1) return [Shen.type_func, shen_user_lambda6892, 1, Arg6891];
  var Arg6891_0 = Arg6891[0];
  var R0;
  return (((Shen.is_type(Arg6891_0[1], Shen.type_cons))
  ? ((R0 = Arg6891_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6891_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6891_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon-symbol>"];





Shen.fns["shen.<premise>"] = [Shen.type_func, function shen_user_lambda6894(Arg6893) {
  if (Arg6893.length < 1) return [Shen.type_func, shen_user_lambda6894, 1, Arg6893];
  var Arg6893_0 = Arg6893[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6893_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6893_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6893_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6893_0])])[1], [Shen.type_symbol, "!"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6893_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6893_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<premise>"];





Shen.fns["shen.<conclusion>"] = [Shen.type_func, function shen_user_lambda6896(Arg6895) {
  if (Arg6895.length < 1) return [Shen.type_func, shen_user_lambda6896, 1, Arg6895];
  var Arg6895_0 = Arg6895[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6895_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6895_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<conclusion>"];





Shen.fns["shen.sequent"] = [Shen.type_func, function shen_user_lambda6898(Arg6897) {
  if (Arg6897.length < 2) return [Shen.type_func, shen_user_lambda6898, 2, Arg6897];
  var Arg6897_0 = Arg6897[0], Arg6897_1 = Arg6897[1];
  return [Shen.fns['shen.tuple'], Arg6897_0, Arg6897_1]}, 2, [], "shen.sequent"];





Shen.fns["shen.<formulae>"] = [Shen.type_func, function shen_user_lambda6900(Arg6899) {
  if (Arg6899.length < 1) return [Shen.type_func, shen_user_lambda6900, 1, Arg6899];
  var Arg6899_0 = Arg6899[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6899_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<comma-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formulae>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6899_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6899_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<formulae>"];





Shen.fns["shen.<comma-symbol>"] = [Shen.type_func, function shen_user_lambda6902(Arg6901) {
  if (Arg6901.length < 1) return [Shen.type_func, shen_user_lambda6902, 1, Arg6901];
  var Arg6901_0 = Arg6901[0];
  var R0;
  return (((Shen.is_type(Arg6901_0[1], Shen.type_cons))
  ? ((R0 = Arg6901_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ","])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6901_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6901_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma-symbol>"];





Shen.fns["shen.<formula>"] = [Shen.type_func, function shen_user_lambda6904(Arg6903) {
  if (Arg6903.length < 1) return [Shen.type_func, shen_user_lambda6904, 1, Arg6903];
  var Arg6903_0 = Arg6903[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6903_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<type>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.hdtl"], [R1])]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6903_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<formula>"];





Shen.fns["shen.<type>"] = [Shen.type_func, function shen_user_lambda6906(Arg6905) {
  if (Arg6905.length < 1) return [Shen.type_func, shen_user_lambda6906, 1, Arg6905];
  var Arg6905_0 = Arg6905[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6905_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<type>"];





Shen.fns["shen.<doubleunderline>"] = [Shen.type_func, function shen_user_lambda6908(Arg6907) {
  if (Arg6907.length < 1) return [Shen.type_func, shen_user_lambda6908, 1, Arg6907];
  var Arg6907_0 = Arg6907[0];
  var R0;
  return (((Shen.is_type(Arg6907_0[1], Shen.type_cons))
  ? ((R0 = Arg6907_0[1][1]),
  ((Shen.call(Shen.fns["shen.doubleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6907_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6907_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<doubleunderline>"];





Shen.fns["shen.<singleunderline>"] = [Shen.type_func, function shen_user_lambda6910(Arg6909) {
  if (Arg6909.length < 1) return [Shen.type_func, shen_user_lambda6910, 1, Arg6909];
  var Arg6909_0 = Arg6909[0];
  var R0;
  return (((Shen.is_type(Arg6909_0[1], Shen.type_cons))
  ? ((R0 = Arg6909_0[1][1]),
  ((Shen.call(Shen.fns["shen.singleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6909_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6909_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<singleunderline>"];





Shen.fns["shen.singleunderline?"] = [Shen.type_func, function shen_user_lambda6912(Arg6911) {
  if (Arg6911.length < 1) return [Shen.type_func, shen_user_lambda6912, 1, Arg6911];
  var Arg6911_0 = Arg6911[0];
  return (Shen.is_type(Arg6911_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.sh?"], [Shen.str(Arg6911_0)]))}, 1, [], "shen.singleunderline?"];





Shen.fns["shen.sh?"] = [Shen.type_func, function shen_user_lambda6914(Arg6913) {
  if (Arg6913.length < 1) return [Shen.type_func, shen_user_lambda6914, 1, Arg6913];
  var Arg6913_0 = Arg6913[0];
  return ((Shen.unwind_tail(Shen.$eq$("_", Arg6913_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6913_0[0], "_")) && Shen.call(Shen.fns["shen.sh?"], [Shen.tlstr(Arg6913_0)])))}, 1, [], "shen.sh?"];





Shen.fns["shen.doubleunderline?"] = [Shen.type_func, function shen_user_lambda6916(Arg6915) {
  if (Arg6915.length < 1) return [Shen.type_func, shen_user_lambda6916, 1, Arg6915];
  var Arg6915_0 = Arg6915[0];
  return (Shen.is_type(Arg6915_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.dh?"], [Shen.str(Arg6915_0)]))}, 1, [], "shen.doubleunderline?"];





Shen.fns["shen.dh?"] = [Shen.type_func, function shen_user_lambda6918(Arg6917) {
  if (Arg6917.length < 1) return [Shen.type_func, shen_user_lambda6918, 1, Arg6917];
  var Arg6917_0 = Arg6917[0];
  return ((Shen.unwind_tail(Shen.$eq$("=", Arg6917_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6917_0[0], "=")) && Shen.call(Shen.fns["shen.dh?"], [Shen.tlstr(Arg6917_0)])))}, 1, [], "shen.dh?"];





Shen.fns["shen.process-datatype"] = [Shen.type_func, function shen_user_lambda6920(Arg6919) {
  if (Arg6919.length < 2) return [Shen.type_func, shen_user_lambda6920, 2, Arg6919];
  var Arg6919_0 = Arg6919[0], Arg6919_1 = Arg6919[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember-datatype"], [Shen.call(Shen.fns["shen.s-prolog"], [Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg6919_0, Arg6919_1])])]);})}, 2, [], "shen.process-datatype"];





Shen.fns["shen.remember-datatype"] = [Shen.type_func, function shen_user_lambda6922(Arg6921) {
  if (Arg6921.length < 1) return [Shen.type_func, shen_user_lambda6922, 1, Arg6921];
  var Arg6921_0 = Arg6921[0];
  return ((Shen.is_type(Arg6921_0, Shen.type_cons))
  ? ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6921_0[1], (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*alldatatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6921_0[1], (Shen.globals["shen.*alldatatypes*"])])),
  Arg6921_0[1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remember-datatype"]]);}))}, 1, [], "shen.remember-datatype"];





Shen.fns["shen.rules->horn-clauses"] = [Shen.type_func, function shen_user_lambda6924(Arg6923) {
  if (Arg6923.length < 2) return [Shen.type_func, shen_user_lambda6924, 2, Arg6923];
  var Arg6923_0 = Arg6923[0], Arg6923_1 = Arg6923[1];
  return ((Shen.empty$question$(Arg6923_1))
  ? []
  : (((Shen.is_type(Arg6923_1, Shen.type_cons) && (Shen.is_type(Arg6923_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.single"], Shen.call(Shen.fns["fst"], [Arg6923_1[1]]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause"], [Arg6923_0, Shen.call(Shen.fns["snd"], [Arg6923_1[1]])]), Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg6923_0, Arg6923_1[2]])]
  : (((Shen.is_type(Arg6923_1, Shen.type_cons) && (Shen.is_type(Arg6923_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.double"], Shen.call(Shen.fns["fst"], [Arg6923_1[1]]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.rules->horn-clauses"], [Arg6923_0, Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.double->singles"], [Shen.call(Shen.fns["snd"], [Arg6923_1[1]])]), Arg6923_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rules->horn-clauses"]]);}))))}, 2, [], "shen.rules->horn-clauses"];





Shen.fns["shen.double->singles"] = [Shen.type_func, function shen_user_lambda6926(Arg6925) {
  if (Arg6925.length < 1) return [Shen.type_func, shen_user_lambda6926, 1, Arg6925];
  var Arg6925_0 = Arg6925[0];
  return [Shen.type_cons, Shen.call(Shen.fns["shen.right-rule"], [Arg6925_0]), [Shen.type_cons, Shen.call(Shen.fns["shen.left-rule"], [Arg6925_0]), []]]}, 1, [], "shen.double->singles"];





Shen.fns["shen.right-rule"] = [Shen.type_func, function shen_user_lambda6928(Arg6927) {
  if (Arg6927.length < 1) return [Shen.type_func, shen_user_lambda6928, 1, Arg6927];
  var Arg6927_0 = Arg6927[0];
  return [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], Arg6927_0]}, 1, [], "shen.right-rule"];





Shen.fns["shen.left-rule"] = [Shen.type_func, function shen_user_lambda6930(Arg6929) {
  if (Arg6929.length < 1) return [Shen.type_func, shen_user_lambda6930, 1, Arg6929];
  var Arg6929_0 = Arg6929[0];
  var R0, R1;
  return (((Shen.is_type(Arg6929_0, Shen.type_cons) && (Shen.is_type(Arg6929_0[2], Shen.type_cons) && (Shen.is_type(Arg6929_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6929_0[2][2][1], Shen.fns['shen.tuple']) && (Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6929_0[2][2][1]])) && Shen.empty$question$(Arg6929_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Qv"]])),
  (R1 = [Shen.fns['shen.tuple'], [Shen.type_cons, Shen.call(Shen.fns["snd"], [Arg6929_0[2][2][1]]), []], R0]),
  (R0 = [Shen.type_cons, [Shen.fns['shen.tuple'], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.right->left"], Arg6929_0[2][1]]), R0], []]),
  [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], [Shen.type_cons, Arg6929_0[1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.left-rule"]]);}))}, 1, [], "shen.left-rule"];





Shen.fns["shen.right->left"] = [Shen.type_func, function shen_user_lambda6932(Arg6931) {
  if (Arg6931.length < 1) return [Shen.type_func, shen_user_lambda6932, 1, Arg6931];
  var Arg6931_0 = Arg6931[0];
  return (((Shen.is_type(Arg6931_0, Shen.fns['shen.tuple']) && Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6931_0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["snd"], [Arg6931_0]);})
  : (function() {
  return Shen.simple_error("syntax error with ==========\x0a");}))}, 1, [], "shen.right->left"];





Shen.fns["shen.rule->horn-clause"] = [Shen.type_func, function shen_user_lambda6934(Arg6933) {
  if (Arg6933.length < 2) return [Shen.type_func, shen_user_lambda6934, 2, Arg6933];
  var Arg6933_0 = Arg6933[0], Arg6933_1 = Arg6933[1];
  return (((Shen.is_type(Arg6933_1, Shen.type_cons) && (Shen.is_type(Arg6933_1[2], Shen.type_cons) && (Shen.is_type(Arg6933_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6933_1[2][2][1], Shen.fns['shen.tuple']) && Shen.empty$question$(Arg6933_1[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-head"], [Arg6933_0, Shen.call(Shen.fns["snd"], [Arg6933_1[2][2][1]])]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-body"], [Arg6933_1[1], Arg6933_1[2][1], Shen.call(Shen.fns["fst"], [Arg6933_1[2][2][1]])]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rule->horn-clause"]]);}))}, 2, [], "shen.rule->horn-clause"];





Shen.fns["shen.rule->horn-clause-head"] = [Shen.type_func, function shen_user_lambda6936(Arg6935) {
  if (Arg6935.length < 2) return [Shen.type_func, shen_user_lambda6936, 2, Arg6935];
  var Arg6935_0 = Arg6935[0], Arg6935_1 = Arg6935[1];
  return [Shen.type_cons, Arg6935_0, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg6935_1]), [Shen.type_cons, [Shen.type_symbol, "Context_1957"], []]]]}, 2, [], "shen.rule->horn-clause-head"];





Shen.fns["shen.mode-ify"] = [Shen.type_func, function shen_user_lambda6938(Arg6937) {
  if (Arg6937.length < 1) return [Shen.type_func, shen_user_lambda6938, 1, Arg6937];
  var Arg6937_0 = Arg6937[0];
  return (((Shen.is_type(Arg6937_0, Shen.type_cons) && (Shen.is_type(Arg6937_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6937_0[2][1])) && (Shen.is_type(Arg6937_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6937_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_cons, Arg6937_0[1], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6937_0[2][2][1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "-"], []]]]
  : Arg6937_0)}, 1, [], "shen.mode-ify"];





Shen.fns["shen.rule->horn-clause-body"] = [Shen.type_func, function shen_user_lambda6940(Arg6939) {
  if (Arg6939.length < 3) return [Shen.type_func, shen_user_lambda6940, 3, Arg6939];
  var Arg6939_0 = Arg6939[0], Arg6939_1 = Arg6939[1], Arg6939_2 = Arg6939[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.extract_vars"], Arg6939_2])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6942(Arg6941) {
  if (Arg6941.length < 1) return [Shen.type_func, shen_user_lambda6942, 1, Arg6941];
  var Arg6941_0 = Arg6941[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "shen.cl"]]);})}, 1, [], undefined], Arg6939_2])),
  (R2 = Shen.call(Shen.fns["shen.construct-search-literals"], [R1, R0, [Shen.type_symbol, "Context_1957"], [Shen.type_symbol, "Context1_1957"]])),
  Shen.call(Shen.fns["shen.construct-search-clauses"], [R1, Arg6939_2, R0]),
  (R1 = Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6939_0])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6944(Arg6943) {
  if (Arg6943.length < 2) return [Shen.type_func, shen_user_lambda6944, 2, Arg6943];
  var Arg6943_0 = Arg6943[0], Arg6943_1 = Arg6943[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.construct-premiss-literal"], [Arg6943_1, Shen.empty$question$(Arg6943_0)]);})}, 2, [Arg6939_2], undefined], Arg6939_1])),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [R1, R0])]);}))}, 3, [], "shen.rule->horn-clause-body"];





Shen.fns["shen.construct-search-literals"] = [Shen.type_func, function shen_user_lambda6946(Arg6945) {
  if (Arg6945.length < 4) return [Shen.type_func, shen_user_lambda6946, 4, Arg6945];
  var Arg6945_0 = Arg6945[0], Arg6945_1 = Arg6945[1], Arg6945_2 = Arg6945[2], Arg6945_3 = Arg6945[3];
  return (((Shen.empty$question$(Arg6945_0) && Shen.empty$question$(Arg6945_1)))
  ? []
  : (function() {
  return Shen.call_tail(Shen.fns["shen.csl-help"], [Arg6945_0, Arg6945_1, Arg6945_2, Arg6945_3]);}))}, 4, [], "shen.construct-search-literals"];





Shen.fns["shen.csl-help"] = [Shen.type_func, function shen_user_lambda6948(Arg6947) {
  if (Arg6947.length < 4) return [Shen.type_func, shen_user_lambda6948, 4, Arg6947];
  var Arg6947_0 = Arg6947[0], Arg6947_1 = Arg6947[1], Arg6947_2 = Arg6947[2], Arg6947_3 = Arg6947[3];
  return (((Shen.empty$question$(Arg6947_0) && Shen.empty$question$(Arg6947_1)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "ContextOut_1957"], [Shen.type_cons, Arg6947_2, []]]], []]
  : (((Shen.is_type(Arg6947_0, Shen.type_cons) && Shen.is_type(Arg6947_1, Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_cons, Arg6947_0[1], [Shen.type_cons, Arg6947_2, [Shen.type_cons, Arg6947_3, Arg6947_1[1]]]], Shen.call(Shen.fns["shen.csl-help"], [Arg6947_0[2], Arg6947_1[2], Arg6947_3, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Context"]])])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.csl-help"]]);})))}, 4, [], "shen.csl-help"];





Shen.fns["shen.construct-search-clauses"] = [Shen.type_func, function shen_user_lambda6950(Arg6949) {
  if (Arg6949.length < 3) return [Shen.type_func, shen_user_lambda6950, 3, Arg6949];
  var Arg6949_0 = Arg6949[0], Arg6949_1 = Arg6949[1], Arg6949_2 = Arg6949[2];
  return (((Shen.empty$question$(Arg6949_0) && (Shen.empty$question$(Arg6949_1) && Shen.empty$question$(Arg6949_2))))
  ? [Shen.type_symbol, "shen.skip"]
  : (((Shen.is_type(Arg6949_0, Shen.type_cons) && (Shen.is_type(Arg6949_1, Shen.type_cons) && Shen.is_type(Arg6949_2, Shen.type_cons))))
  ? (Shen.call(Shen.fns["shen.construct-search-clause"], [Arg6949_0[1], Arg6949_1[1], Arg6949_2[1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.construct-search-clauses"], [Arg6949_0[2], Arg6949_1[2], Arg6949_2[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-search-clauses"]]);})))}, 3, [], "shen.construct-search-clauses"];





Shen.fns["shen.construct-search-clause"] = [Shen.type_func, function shen_user_lambda6952(Arg6951) {
  if (Arg6951.length < 3) return [Shen.type_func, shen_user_lambda6952, 3, Arg6951];
  var Arg6951_0 = Arg6951[0], Arg6951_1 = Arg6951[1], Arg6951_2 = Arg6951[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog"], [[Shen.type_cons, Shen.call(Shen.fns["shen.construct-base-search-clause"], [Arg6951_0, Arg6951_1, Arg6951_2]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-recursive-search-clause"], [Arg6951_0, Arg6951_1, Arg6951_2]), []]]]);})}, 3, [], "shen.construct-search-clause"];





Shen.fns["shen.construct-base-search-clause"] = [Shen.type_func, function shen_user_lambda6954(Arg6953) {
  if (Arg6953.length < 3) return [Shen.type_func, shen_user_lambda6954, 3, Arg6953];
  var Arg6953_0 = Arg6953[0], Arg6953_1 = Arg6953[1], Arg6953_2 = Arg6953[2];
  return [Shen.type_cons, [Shen.type_cons, Arg6953_0, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg6953_1]), [Shen.type_symbol, "In_1957"]], [Shen.type_cons, [Shen.type_symbol, "In_1957"], Arg6953_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [], []]]]}, 3, [], "shen.construct-base-search-clause"];





Shen.fns["shen.construct-recursive-search-clause"] = [Shen.type_func, function shen_user_lambda6956(Arg6955) {
  if (Arg6955.length < 3) return [Shen.type_func, shen_user_lambda6956, 3, Arg6955];
  var Arg6955_0 = Arg6955[0], Arg6955_1 = Arg6955[1], Arg6955_2 = Arg6955[2];
  return [Shen.type_cons, [Shen.type_cons, Arg6955_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Assumptions_1957"]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Out_1957"]], Arg6955_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg6955_0, [Shen.type_cons, [Shen.type_symbol, "Assumptions_1957"], [Shen.type_cons, [Shen.type_symbol, "Out_1957"], Arg6955_2]]], []], []]]]}, 3, [], "shen.construct-recursive-search-clause"];





Shen.fns["shen.construct-side-literals"] = [Shen.type_func, function shen_user_lambda6958(Arg6957) {
  if (Arg6957.length < 1) return [Shen.type_func, shen_user_lambda6958, 1, Arg6957];
  var Arg6957_0 = Arg6957[0];
  return ((Shen.empty$question$(Arg6957_0))
  ? []
  : (((Shen.is_type(Arg6957_0, Shen.type_cons) && (Shen.is_type(Arg6957_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6957_0[1][1])) && (Shen.is_type(Arg6957_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6957_0[1][2][2]))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "when"], Arg6957_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6957_0[2]])]
  : (((Shen.is_type(Arg6957_0, Shen.type_cons) && (Shen.is_type(Arg6957_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6957_0[1][1])) && (Shen.is_type(Arg6957_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6957_0[1][2][2], Shen.type_cons) && Shen.empty$question$(Arg6957_0[1][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "is"], Arg6957_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6957_0[2]])]
  : ((Shen.is_type(Arg6957_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.construct-side-literals"], [Arg6957_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-side-literals"]]);})))))}, 1, [], "shen.construct-side-literals"];





Shen.fns["shen.construct-premiss-literal"] = [Shen.type_func, function shen_user_lambda6960(Arg6959) {
  if (Arg6959.length < 2) return [Shen.type_func, shen_user_lambda6960, 2, Arg6959];
  var Arg6959_0 = Arg6959[0], Arg6959_1 = Arg6959[1];
  return ((Shen.is_type(Arg6959_0, Shen.fns['shen.tuple']))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.t*"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Shen.call(Shen.fns["snd"], [Arg6959_0])]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg6959_1, Shen.call(Shen.fns["fst"], [Arg6959_0])]), []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6959_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-premiss-literal"]]);})))}, 2, [], "shen.construct-premiss-literal"];





Shen.fns["shen.construct-context"] = [Shen.type_func, function shen_user_lambda6962(Arg6961) {
  if (Arg6961.length < 2) return [Shen.type_func, shen_user_lambda6962, 2, Arg6961];
  var Arg6961_0 = Arg6961[0], Arg6961_1 = Arg6961[1];
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg6961_0)) && Shen.empty$question$(Arg6961_1)))
  ? [Shen.type_symbol, "Context_1957"]
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg6961_0)) && Shen.empty$question$(Arg6961_1)))
  ? [Shen.type_symbol, "ContextOut_1957"]
  : ((Shen.is_type(Arg6961_1, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg6961_1[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg6961_0, Arg6961_1[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-context"]]);}))))}, 2, [], "shen.construct-context"];





Shen.fns["shen.recursive_cons_form"] = [Shen.type_func, function shen_user_lambda6964(Arg6963) {
  if (Arg6963.length < 1) return [Shen.type_func, shen_user_lambda6964, 1, Arg6963];
  var Arg6963_0 = Arg6963[0];
  return ((Shen.is_type(Arg6963_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg6963_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg6963_0[2]]), []]]]
  : Arg6963_0)}, 1, [], "shen.recursive_cons_form"];





Shen.fns["preclude"] = [Shen.type_func, function shen_user_lambda6966(Arg6965) {
  if (Arg6965.length < 1) return [Shen.type_func, shen_user_lambda6966, 1, Arg6965];
  var Arg6965_0 = Arg6965[0];
  return ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*datatypes*"]), Arg6965_0])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "preclude"];





Shen.fns["include"] = [Shen.type_func, function shen_user_lambda6968(Arg6967) {
  if (Arg6967.length < 1) return [Shen.type_func, shen_user_lambda6968, 1, Arg6967];
  var Arg6967_0 = Arg6967[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["intersection"], [Arg6967_0, (Shen.globals["shen.*alldatatypes*"])])),
  (Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["union"], [R0, (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "include"];





Shen.fns["preclude-all-but"] = [Shen.type_func, function shen_user_lambda6970(Arg6969) {
  if (Arg6969.length < 1) return [Shen.type_func, shen_user_lambda6970, 1, Arg6969];
  var Arg6969_0 = Arg6969[0];
  return (function() {
  return Shen.call_tail(Shen.fns["preclude"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Arg6969_0])]);})}, 1, [], "preclude-all-but"];





Shen.fns["include-all-but"] = [Shen.type_func, function shen_user_lambda6972(Arg6971) {
  if (Arg6971.length < 1) return [Shen.type_func, shen_user_lambda6972, 1, Arg6971];
  var Arg6971_0 = Arg6971[0];
  return (function() {
  return Shen.call_tail(Shen.fns["include"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Arg6971_0])]);})}, 1, [], "include-all-but"];





Shen.fns["shen.synonyms-help"] = [Shen.type_func, function shen_user_lambda6974(Arg6973) {
  if (Arg6973.length < 1) return [Shen.type_func, shen_user_lambda6974, 1, Arg6973];
  var Arg6973_0 = Arg6973[0];
  return ((Shen.empty$question$(Arg6973_0))
  ? [Shen.type_symbol, "synonyms"]
  : (((Shen.is_type(Arg6973_0, Shen.type_cons) && Shen.is_type(Arg6973_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.pushnew"], [[Shen.type_cons, Arg6973_0[1], Shen.call(Shen.fns["shen.curry-type"], [Arg6973_0[2][1]])], [Shen.type_symbol, "shen.*synonyms*"]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.synonyms-help"], [Arg6973_0[2][2]]);}))
  : (function() {
  return Shen.simple_error(("odd number of synonyms\x0a" + ""));})))}, 1, [], "shen.synonyms-help"];





Shen.fns["shen.pushnew"] = [Shen.type_func, function shen_user_lambda6976(Arg6975) {
  if (Arg6975.length < 2) return [Shen.type_func, shen_user_lambda6976, 2, Arg6975];
  var Arg6975_0 = Arg6975[0], Arg6975_1 = Arg6975[1];
  return ((Shen.call(Shen.fns["element?"], [Arg6975_0, (Shen.globals[Arg6975_1[1]])]))
  ? (Shen.globals[Arg6975_1[1]])
  : (Shen.globals[Arg6975_1[1]] = [Shen.type_cons, Arg6975_0, (Shen.globals[Arg6975_1[1]])]))}, 2, [], "shen.pushnew"];










Shen.fns["shen.yacc"] = [Shen.type_func, function shen_user_lambda7771(Arg7770) {
  if (Arg7770.length < 1) return [Shen.type_func, shen_user_lambda7771, 1, Arg7770];
  var Arg7770_0 = Arg7770[0];
  return (((Shen.is_type(Arg7770_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7770_0[1])) && (Shen.is_type(Arg7770_0[2], Shen.type_cons) && (Shen.is_type(Arg7770_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg7770_0[2][2][1])) && (Shen.is_type(Arg7770_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg7770_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg7770_0[2][2][2][2][1])) && (Shen.is_type(Arg7770_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg7770_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg7770_0[2][2][2][2][2][2][1])))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg7770_0[2][1], Arg7770_0[2][2][2][2][2][2][2]]]]);})
  : (((Shen.is_type(Arg7770_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7770_0[1])) && Shen.is_type(Arg7770_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc->shen"], [Arg7770_0[2][1], Arg7770_0[2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.yacc"]]);})))}, 1, [], "shen.yacc"];





Shen.fns["shen.yacc->shen"] = [Shen.type_func, function shen_user_lambda7773(Arg7772) {
  if (Arg7772.length < 2) return [Shen.type_func, shen_user_lambda7773, 2, Arg7772];
  var Arg7772_0 = Arg7772[0], Arg7772_1 = Arg7772[1];
  return [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7772_0, Shen.call(Shen.fns["shen.yacc_cases"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.cc_body"], Shen.call(Shen.fns["shen.split_cc_rules"], [Arg7772_1, []])])])]]}, 2, [], "shen.yacc->shen"];





Shen.fns["shen.yacc_cases"] = [Shen.type_func, function shen_user_lambda7775(Arg7774) {
  if (Arg7774.length < 1) return [Shen.type_func, shen_user_lambda7775, 1, Arg7774];
  var Arg7774_0 = Arg7774[0];
  return (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda7777(Arg7776) {
  if (Arg7776.length < 1) return [Shen.type_func, shen_user_lambda7777, 1, Arg7776];
  var Arg7776_0 = Arg7776[0];
  return [Shen.type_cons, [Shen.type_symbol, "Stream"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, Arg7776_0, []]]]}, 1, [], undefined], Arg7774_0]), [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]);})}, 1, [], "shen.yacc_cases"];





Shen.fns["shen.first_n"] = [Shen.type_func, function shen_user_lambda7779(Arg7778) {
  if (Arg7778.length < 2) return [Shen.type_func, shen_user_lambda7779, 2, Arg7778];
  var Arg7778_0 = Arg7778[0], Arg7778_1 = Arg7778[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7778_0)))
  ? []
  : ((Shen.empty$question$(Arg7778_1))
  ? []
  : ((Shen.is_type(Arg7778_1, Shen.type_cons))
  ? [Shen.type_cons, Arg7778_1[1], Shen.call(Shen.fns["shen.first_n"], [(Arg7778_0 - 1), Arg7778_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.first_n"]]);}))))}, 2, [], "shen.first_n"];





Shen.fns["shen.split_cc_rules"] = [Shen.type_func, function shen_user_lambda7781(Arg7780) {
  if (Arg7780.length < 2) return [Shen.type_func, shen_user_lambda7781, 2, Arg7780];
  var Arg7780_0 = Arg7780[0], Arg7780_1 = Arg7780[1];
  return (((Shen.empty$question$(Arg7780_0) && Shen.empty$question$(Arg7780_1)))
  ? []
  : ((Shen.empty$question$(Arg7780_0))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7780_1]), []]), []]
  : (((Shen.is_type(Arg7780_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], Arg7780_0[1]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7780_1]), []]), Shen.call(Shen.fns["shen.split_cc_rules"], [Arg7780_0[2], []])]
  : ((Shen.is_type(Arg7780_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rules"], [Arg7780_0[2], [Shen.type_cons, Arg7780_0[1], Arg7780_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rules"]]);})))))}, 2, [], "shen.split_cc_rules"];





Shen.fns["shen.split_cc_rule"] = [Shen.type_func, function shen_user_lambda7783(Arg7782) {
  if (Arg7782.length < 2) return [Shen.type_func, shen_user_lambda7783, 2, Arg7782];
  var Arg7782_0 = Arg7782[0], Arg7782_1 = Arg7782[1];
  return (((Shen.is_type(Arg7782_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7782_0[1])) && (Shen.is_type(Arg7782_0[2], Shen.type_cons) && Shen.empty$question$(Arg7782_0[2][2])))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7782_1]), Arg7782_0[2]]
  : (((Shen.is_type(Arg7782_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7782_0[1])) && (Shen.is_type(Arg7782_0[2], Shen.type_cons) && (Shen.is_type(Arg7782_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg7782_0[2][2][1])) && (Shen.is_type(Arg7782_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7782_0[2][2][2][2]))))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7782_1]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Arg7782_0[2][2][2][1], [Shen.type_cons, Arg7782_0[2][1], []]]], []]]
  : ((Shen.empty$question$(Arg7782_0))
  ? (Shen.pr("warning: ", Shen.call(Shen.fns["stoutput"], [])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7785(Arg7784) {
  if (Arg7784.length < 1) return [Shen.type_func, shen_user_lambda7785, 1, Arg7784];
  var Arg7784_0 = Arg7784[0];
  return (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg7784_0, " ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg7782_1])]),
  Shen.pr("has no semantics.\x0a", Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [[Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Shen.call(Shen.fns["reverse"], [Arg7782_1])]), []]], Arg7782_1]);}))
  : ((Shen.is_type(Arg7782_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [Arg7782_0[2], [Shen.type_cons, Arg7782_0[1], Arg7782_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rule"]]);})))))}, 2, [], "shen.split_cc_rule"];





Shen.fns["shen.default_semantics"] = [Shen.type_func, function shen_user_lambda7787(Arg7786) {
  if (Arg7786.length < 1) return [Shen.type_func, shen_user_lambda7787, 1, Arg7786];
  var Arg7786_0 = Arg7786[0];
  return ((Shen.empty$question$(Arg7786_0))
  ? []
  : (((Shen.is_type(Arg7786_0, Shen.type_cons) && Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7786_0[1]])))
  ? [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, Arg7786_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg7786_0[2]]), []]]]
  : ((Shen.is_type(Arg7786_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg7786_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg7786_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.default_semantics"]]);}))))}, 1, [], "shen.default_semantics"];





Shen.fns["shen.cc_body"] = [Shen.type_func, function shen_user_lambda7789(Arg7788) {
  if (Arg7788.length < 1) return [Shen.type_func, shen_user_lambda7789, 1, Arg7788];
  var Arg7788_0 = Arg7788[0];
  return (((Shen.is_type(Arg7788_0, Shen.type_cons) && (Shen.is_type(Arg7788_0[2], Shen.type_cons) && Shen.empty$question$(Arg7788_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.syntax"], [Arg7788_0[1], [Shen.type_symbol, "Stream"], Arg7788_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cc_body"]]);}))}, 1, [], "shen.cc_body"];





Shen.fns["shen.syntax"] = [Shen.type_func, function shen_user_lambda7791(Arg7790) {
  if (Arg7790.length < 3) return [Shen.type_func, shen_user_lambda7791, 3, Arg7790];
  var Arg7790_0 = Arg7790[0], Arg7790_1 = Arg7790[1], Arg7790_2 = Arg7790[2];
  return (((Shen.empty$question$(Arg7790_0) && (Shen.is_type(Arg7790_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg7790_2[1])) && (Shen.is_type(Arg7790_2[2], Shen.type_cons) && (Shen.is_type(Arg7790_2[2][2], Shen.type_cons) && Shen.empty$question$(Arg7790_2[2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7790_2[2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7790_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7790_2[2][2][1]]), []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]
  : ((Shen.empty$question$(Arg7790_0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7790_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7790_2]), []]]]
  : ((Shen.is_type(Arg7790_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7790_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.recursive_descent"], [Arg7790_0, Arg7790_1, Arg7790_2]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg7790_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variable-match"], [Arg7790_0, Arg7790_1, Arg7790_2]);})
  : ((Shen.call(Shen.fns["shen.terminal?"], [Arg7790_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check_stream"], [Arg7790_0, Arg7790_1, Arg7790_2]);})
  : ((Shen.call(Shen.fns["shen.jump_stream?"], [Arg7790_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.jump_stream"], [Arg7790_0, Arg7790_1, Arg7790_2]);})
  : ((Shen.call(Shen.fns["shen.list_stream?"], [Arg7790_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list_stream"], [Shen.call(Shen.fns["shen.decons"], [Arg7790_0[1]]), Arg7790_0[2], Arg7790_1, Arg7790_2]);})
  : (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7790_0[1], " is not legal syntax\x0a", [Shen.type_symbol, "shen.a"]]));}))))))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.syntax"]]);}))))}, 3, [], "shen.syntax"];





Shen.fns["shen.list_stream?"] = [Shen.type_func, function shen_user_lambda7793(Arg7792) {
  if (Arg7792.length < 1) return [Shen.type_func, shen_user_lambda7793, 1, Arg7792];
  var Arg7792_0 = Arg7792[0];
  return ((Shen.is_type(Arg7792_0, Shen.type_cons))
  ? true
  : false)}, 1, [], "shen.list_stream?"];





Shen.fns["shen.decons"] = [Shen.type_func, function shen_user_lambda7795(Arg7794) {
  if (Arg7794.length < 1) return [Shen.type_func, shen_user_lambda7795, 1, Arg7794];
  var Arg7794_0 = Arg7794[0];
  return (((Shen.is_type(Arg7794_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg7794_0[1])) && (Shen.is_type(Arg7794_0[2], Shen.type_cons) && (Shen.is_type(Arg7794_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7794_0[2][2][2]))))))
  ? [Shen.type_cons, Arg7794_0[2][1], Shen.call(Shen.fns["shen.decons"], [Arg7794_0[2][2][1]])]
  : Arg7794_0)}, 1, [], "shen.decons"];





Shen.fns["shen.list_stream"] = [Shen.type_func, function shen_user_lambda7797(Arg7796) {
  if (Arg7796.length < 4) return [Shen.type_func, shen_user_lambda7797, 4, Arg7796];
  var Arg7796_0 = Arg7796[0], Arg7796_1 = Arg7796[1], Arg7796_2 = Arg7796[2], Arg7796_3 = Arg7796[3];
  var R0, R1, R2;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7796_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7796_2, []]], []]], []]], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "shen.snd-or-fail"], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7796_0, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7796_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7796_2, []]], []]]], [Shen.type_cons, [Shen.type_symbol, "shen.leave!"], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7796_1, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7796_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7796_2, []]], []]]], Arg7796_3]), []]]]), []]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])}, 4, [], "shen.list_stream"];





Shen.fns["shen.snd-or-fail"] = [Shen.type_func, function shen_user_lambda7799(Arg7798) {
  if (Arg7798.length < 1) return [Shen.type_func, shen_user_lambda7799, 1, Arg7798];
  var Arg7798_0 = Arg7798[0];
  return (((Shen.is_type(Arg7798_0, Shen.type_cons) && (Shen.is_type(Arg7798_0[2], Shen.type_cons) && Shen.empty$question$(Arg7798_0[2][2]))))
  ? Arg7798_0[2][1]
  : Shen.fail_obj)}, 1, [], "shen.snd-or-fail"];





Shen.fns["shen.grammar_symbol?"] = [Shen.type_func, function shen_user_lambda7801(Arg7800) {
  if (Arg7800.length < 1) return [Shen.type_func, shen_user_lambda7801, 1, Arg7800];
  var Arg7800_0 = Arg7800[0];
  var R0;
  return (Shen.is_type(Arg7800_0, Shen.type_symbol) && ((R0 = Shen.call(Shen.fns["explode"], [Arg7800_0])),
  (Shen.unwind_tail(Shen.$eq$(R0[1], "<")) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["reverse"], [R0])[1], ">")))))}, 1, [], "shen.grammar_symbol?"];





Shen.fns["shen.recursive_descent"] = [Shen.type_func, function shen_user_lambda7803(Arg7802) {
  if (Arg7802.length < 3) return [Shen.type_func, shen_user_lambda7803, 3, Arg7802];
  var Arg7802_0 = Arg7802[0], Arg7802_1 = Arg7802[1], Arg7802_2 = Arg7802[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7802_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg7802_0[1], [Shen.type_cons, Arg7802_1, []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7802_0[2], Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7802_0[1]]), Arg7802_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7802_0[1]]), [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7802_0[1]]), []]]], []]], [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursive_descent"]]);}))}, 3, [], "shen.recursive_descent"];





Shen.fns["shen.variable-match"] = [Shen.type_func, function shen_user_lambda7805(Arg7804) {
  if (Arg7804.length < 3) return [Shen.type_func, shen_user_lambda7805, 3, Arg7804];
  var Arg7804_0 = Arg7804[0], Arg7804_1 = Arg7804[1], Arg7804_2 = Arg7804[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7804_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7804_1, []]], []]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7804_0[1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7804_1, []]], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7804_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7804_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7804_1, []]], []]]], Arg7804_2]), []]]]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.variable-match"]]);}))}, 3, [], "shen.variable-match"];





Shen.fns["shen.terminal?"] = [Shen.type_func, function shen_user_lambda7807(Arg7806) {
  if (Arg7806.length < 1) return [Shen.type_func, shen_user_lambda7807, 1, Arg7806];
  var Arg7806_0 = Arg7806[0];
  return ((Shen.is_type(Arg7806_0, Shen.type_cons))
  ? false
  : ((Shen.call(Shen.fns["variable?"], [Arg7806_0]))
  ? false
  : true))}, 1, [], "shen.terminal?"];





Shen.fns["shen.jump_stream?"] = [Shen.type_func, function shen_user_lambda7809(Arg7808) {
  if (Arg7808.length < 1) return [Shen.type_func, shen_user_lambda7809, 1, Arg7808];
  var Arg7808_0 = Arg7808[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7808_0, [Shen.type_symbol, "_"])))
  ? true
  : false)}, 1, [], "shen.jump_stream?"];





Shen.fns["shen.check_stream"] = [Shen.type_func, function shen_user_lambda7811(Arg7810) {
  if (Arg7810.length < 3) return [Shen.type_func, shen_user_lambda7811, 3, Arg7810];
  var Arg7810_0 = Arg7810[0], Arg7810_1 = Arg7810[1], Arg7810_2 = Arg7810[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7810_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7810_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg7810_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7810_1, []]], []]], []]]], []]]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7810_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7810_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7810_1, []]], []]]], Arg7810_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.check_stream"]]);}))}, 3, [], "shen.check_stream"];





Shen.fns["shen.jump_stream"] = [Shen.type_func, function shen_user_lambda7813(Arg7812) {
  if (Arg7812.length < 3) return [Shen.type_func, shen_user_lambda7813, 3, Arg7812];
  var Arg7812_0 = Arg7812[0], Arg7812_1 = Arg7812[1], Arg7812_2 = Arg7812[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7812_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7812_1, []]], []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7812_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7812_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7812_1, []]], []]]], Arg7812_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.jump_stream"]]);}))}, 3, [], "shen.jump_stream"];





Shen.fns["shen.semantics"] = [Shen.type_func, function shen_user_lambda7815(Arg7814) {
  if (Arg7814.length < 1) return [Shen.type_func, shen_user_lambda7815, 1, Arg7814];
  var Arg7814_0 = Arg7814[0];
  return (((Shen.is_type(Arg7814_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.leave!"], Arg7814_0[1])) && (Shen.is_type(Arg7814_0[2], Shen.type_cons) && Shen.empty$question$(Arg7814_0[2][2])))))
  ? Arg7814_0[2][1]
  : ((Shen.empty$question$(Arg7814_0))
  ? []
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7814_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7814_0]), []]]
  : ((Shen.call(Shen.fns["variable?"], [Arg7814_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7814_0]);})
  : ((Shen.is_type(Arg7814_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.semantics"], Arg7814_0]);})
  : Arg7814_0)))))}, 1, [], "shen.semantics"];










Shen.fns["shen.pair"] = [Shen.type_func, function shen_user_lambda7818(Arg7817) {
  if (Arg7817.length < 2) return [Shen.type_func, shen_user_lambda7818, 2, Arg7817];
  var Arg7817_0 = Arg7817[0], Arg7817_1 = Arg7817[1];
  return [Shen.type_cons, Arg7817_0, [Shen.type_cons, Arg7817_1, []]]}, 2, [], "shen.pair"];





Shen.fns["shen.hdtl"] = [Shen.type_func, function shen_user_lambda7820(Arg7819) {
  if (Arg7819.length < 1) return [Shen.type_func, shen_user_lambda7820, 1, Arg7819];
  var Arg7819_0 = Arg7819[0];
  return Arg7819_0[2][1]}, 1, [], "shen.hdtl"];





Shen.fns["<!>"] = [Shen.type_func, function shen_user_lambda7822(Arg7821) {
  if (Arg7821.length < 1) return [Shen.type_func, shen_user_lambda7822, 1, Arg7821];
  var Arg7821_0 = Arg7821[0];
  return (((Shen.is_type(Arg7821_0, Shen.type_cons) && (Shen.is_type(Arg7821_0[2], Shen.type_cons) && Shen.empty$question$(Arg7821_0[2][2]))))
  ? [Shen.type_cons, [], [Shen.type_cons, Arg7821_0[1], []]]
  : Shen.fail_obj)}, 1, [], "<!>"];





Shen.fns["<e>"] = [Shen.type_func, function shen_user_lambda7824(Arg7823) {
  if (Arg7823.length < 1) return [Shen.type_func, shen_user_lambda7824, 1, Arg7823];
  var Arg7823_0 = Arg7823[0];
  return (((Shen.is_type(Arg7823_0, Shen.type_cons) && (Shen.is_type(Arg7823_0[2], Shen.type_cons) && Shen.empty$question$(Arg7823_0[2][2]))))
  ? [Shen.type_cons, Arg7823_0[1], [Shen.type_cons, [], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "<e>"]]);}))}, 1, [], "<e>"];










Shen.fns["print"] = [Shen.type_func, function shen_user_lambda7718(Arg7717) {
  if (Arg7717.length < 1) return [Shen.type_func, shen_user_lambda7718, 1, Arg7717];
  var Arg7717_0 = Arg7717[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.insert"], [Arg7717_0, "~S"])),
  Shen.pr(R0, Shen.call(Shen.fns["stoutput"], [])),
  Arg7717_0)}, 1, [], "print"];





Shen.fns["shen.mkstr"] = [Shen.type_func, function shen_user_lambda7720(Arg7719) {
  if (Arg7719.length < 2) return [Shen.type_func, shen_user_lambda7720, 2, Arg7719];
  var Arg7719_0 = Arg7719[0], Arg7719_1 = Arg7719[1];
  return (((typeof(Arg7719_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg7719_0]), Arg7719_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, Arg7719_0, []]], Arg7719_1]);}))}, 2, [], "shen.mkstr"];





Shen.fns["shen.mkstr-l"] = [Shen.type_func, function shen_user_lambda7722(Arg7721) {
  if (Arg7721.length < 2) return [Shen.type_func, shen_user_lambda7722, 2, Arg7721];
  var Arg7721_0 = Arg7721[0], Arg7721_1 = Arg7721[1];
  return ((Shen.empty$question$(Arg7721_1))
  ? Arg7721_0
  : ((Shen.is_type(Arg7721_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.insert-l"], [Arg7721_1[1], Arg7721_0]), Arg7721_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-l"]]);})))}, 2, [], "shen.mkstr-l"];





Shen.fns["shen.insert-l"] = [Shen.type_func, function shen_user_lambda7724(Arg7723) {
  if (Arg7723.length < 2) return [Shen.type_func, shen_user_lambda7724, 2, Arg7723];
  var Arg7723_0 = Arg7723[0], Arg7723_1 = Arg7723[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7723_1)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7723_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7723_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7723_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg7723_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7723_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7723_1)), [Shen.type_cons, [Shen.type_symbol, "shen.a"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7723_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7723_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7723_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg7723_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7723_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7723_1)), [Shen.type_cons, [Shen.type_symbol, "shen.r"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7723_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7723_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7723_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg7723_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7723_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7723_1)), [Shen.type_cons, [Shen.type_symbol, "shen.s"], []]]]]
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7723_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.factor-cn"], [[Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg7723_1[0], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7723_0, Shen.tlstr(Arg7723_1)]), []]]]]);})
  : (((Shen.is_type(Arg7723_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7723_1[1])) && (Shen.is_type(Arg7723_1[2], Shen.type_cons) && (Shen.is_type(Arg7723_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg7723_1[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg7723_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7723_0, Arg7723_1[2][2][1]]), []]]]
  : (((Shen.is_type(Arg7723_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.app"], Arg7723_1[1])) && (Shen.is_type(Arg7723_1[2], Shen.type_cons) && (Shen.is_type(Arg7723_1[2][2], Shen.type_cons) && (Shen.is_type(Arg7723_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7723_1[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7723_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7723_0, Arg7723_1[2][2][1]]), Arg7723_1[2][2][2]]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-l"]]);}))))))))}, 2, [], "shen.insert-l"];





Shen.fns["shen.factor-cn"] = [Shen.type_func, function shen_user_lambda7726(Arg7725) {
  if (Arg7725.length < 1) return [Shen.type_func, shen_user_lambda7726, 1, Arg7725];
  var Arg7725_0 = Arg7725[0];
  return (((Shen.is_type(Arg7725_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7725_0[1])) && (Shen.is_type(Arg7725_0[2], Shen.type_cons) && (Shen.is_type(Arg7725_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7725_0[2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7725_0[2][2][1][1])) && (Shen.is_type(Arg7725_0[2][2][1][2], Shen.type_cons) && (Shen.is_type(Arg7725_0[2][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7725_0[2][2][1][2][2][2]) && (Shen.empty$question$(Arg7725_0[2][2][2]) && ((typeof(Arg7725_0[2][1]) == 'string') && (typeof(Arg7725_0[2][2][1][2][1]) == 'string')))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, (Arg7725_0[2][1] + Arg7725_0[2][2][1][2][1]), Arg7725_0[2][2][1][2][2]]]
  : Arg7725_0)}, 1, [], "shen.factor-cn"];





Shen.fns["shen.proc-nl"] = [Shen.type_func, function shen_user_lambda7728(Arg7727) {
  if (Arg7727.length < 1) return [Shen.type_func, shen_user_lambda7728, 1, Arg7727];
  var Arg7727_0 = Arg7727[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7727_0)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7727_0]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7727_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7727_0)]) && Shen.unwind_tail(Shen.$eq$("%", Shen.tlstr(Arg7727_0)[0]))))))
  ? (Shen.n_$gt$string(10) + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Shen.tlstr(Arg7727_0))]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7727_0]))
  ? (Arg7727_0[0] + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Arg7727_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.proc-nl"]]);}))))}, 1, [], "shen.proc-nl"];





Shen.fns["shen.mkstr-r"] = [Shen.type_func, function shen_user_lambda7730(Arg7729) {
  if (Arg7729.length < 2) return [Shen.type_func, shen_user_lambda7730, 2, Arg7729];
  var Arg7729_0 = Arg7729[0], Arg7729_1 = Arg7729[1];
  return ((Shen.empty$question$(Arg7729_1))
  ? Arg7729_0
  : ((Shen.is_type(Arg7729_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.insert"], [Shen.type_cons, Arg7729_1[1], [Shen.type_cons, Arg7729_0, []]]], Arg7729_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-r"]]);})))}, 2, [], "shen.mkstr-r"];





Shen.fns["shen.insert"] = [Shen.type_func, function shen_user_lambda7732(Arg7731) {
  if (Arg7731.length < 2) return [Shen.type_func, shen_user_lambda7732, 2, Arg7731];
  var Arg7731_0 = Arg7731[0], Arg7731_1 = Arg7731[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7731_1)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7731_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7731_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7731_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg7731_1)[0]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg7731_0, Shen.tlstr(Shen.tlstr(Arg7731_1)), [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7731_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7731_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7731_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg7731_1)[0]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg7731_0, Shen.tlstr(Shen.tlstr(Arg7731_1)), [Shen.type_symbol, "shen.r"]]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7731_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7731_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7731_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg7731_1)[0]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg7731_0, Shen.tlstr(Shen.tlstr(Arg7731_1)), [Shen.type_symbol, "shen.s"]]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7731_1]))
  ? (Arg7731_1[0] + Shen.call(Shen.fns["shen.insert"], [Arg7731_0, Shen.tlstr(Arg7731_1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert"]]);}))))))}, 2, [], "shen.insert"];





Shen.fns["shen.app"] = [Shen.type_func, function shen_user_lambda7734(Arg7733) {
  if (Arg7733.length < 3) return [Shen.type_func, shen_user_lambda7734, 3, Arg7733];
  var Arg7733_0 = Arg7733[0], Arg7733_1 = Arg7733[1], Arg7733_2 = Arg7733[2];
  return (Shen.call(Shen.fns["shen.arg->str"], [Arg7733_0, Arg7733_2]) + Arg7733_1)}, 3, [], "shen.app"];





Shen.fns["shen.arg->str"] = [Shen.type_func, function shen_user_lambda7736(Arg7735) {
  if (Arg7735.length < 2) return [Shen.type_func, shen_user_lambda7736, 2, Arg7735];
  var Arg7735_0 = Arg7735[0], Arg7735_1 = Arg7735[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7735_0, Shen.fail_obj)))
  ? "..."
  : ((Shen.call(Shen.fns["shen.list?"], [Arg7735_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list->str"], [Arg7735_0, Arg7735_1]);})
  : (((typeof(Arg7735_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.str->str"], [Arg7735_0, Arg7735_1]);})
  : ((Shen.absvector$question$(Arg7735_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.vector->str"], [Arg7735_0, Arg7735_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.atom->str"], [Arg7735_0]);})))))}, 2, [], "shen.arg->str"];





Shen.fns["shen.list->str"] = [Shen.type_func, function shen_user_lambda7738(Arg7737) {
  if (Arg7737.length < 2) return [Shen.type_func, shen_user_lambda7738, 2, Arg7737];
  var Arg7737_0 = Arg7737[0], Arg7737_1 = Arg7737[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.r"], Arg7737_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["(", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg7737_0, [Shen.type_symbol, "shen.r"], Shen.call(Shen.fns["shen.maxseq"], [])]), ")"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg7737_0, Arg7737_1, Shen.call(Shen.fns["shen.maxseq"], [])]), "]"])]);}))}, 2, [], "shen.list->str"];





Shen.fns["shen.maxseq"] = [Shen.type_func, function shen_user_lambda7740(Arg7739) {
  if (Arg7739.length < 0) return [Shen.type_func, shen_user_lambda7740, 0, Arg7739];
  return (Shen.globals["*maximum-print-sequence-size*"])}, 0, [], "shen.maxseq"];





Shen.fns["shen.iter-list"] = [Shen.type_func, function shen_user_lambda7742(Arg7741) {
  if (Arg7741.length < 3) return [Shen.type_func, shen_user_lambda7742, 3, Arg7741];
  var Arg7741_0 = Arg7741[0], Arg7741_1 = Arg7741[1], Arg7741_2 = Arg7741[2];
  return ((Shen.empty$question$(Arg7741_0))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg7741_2)))
  ? "... etc"
  : (((Shen.is_type(Arg7741_0, Shen.type_cons) && Shen.empty$question$(Arg7741_0[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [Arg7741_0[1], Arg7741_1]);})
  : ((Shen.is_type(Arg7741_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Arg7741_0[1], Arg7741_1]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-list"], [Arg7741_0[2], Arg7741_1, (Arg7741_2 - 1)])])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [" ", Shen.call(Shen.fns["@s"], ["|", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.arg->str"], [Arg7741_0, Arg7741_1])])])]);})))))}, 3, [], "shen.iter-list"];





Shen.fns["shen.str->str"] = [Shen.type_func, function shen_user_lambda7744(Arg7743) {
  if (Arg7743.length < 2) return [Shen.type_func, shen_user_lambda7744, 2, Arg7743];
  var Arg7743_0 = Arg7743[0], Arg7743_1 = Arg7743[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg7743_1)))
  ? Arg7743_0
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(34), Shen.call(Shen.fns["@s"], [Arg7743_0, Shen.n_$gt$string(34)])]);}))}, 2, [], "shen.str->str"];





Shen.fns["shen.vector->str"] = [Shen.type_func, function shen_user_lambda7746(Arg7745) {
  if (Arg7745.length < 2) return [Shen.type_func, shen_user_lambda7746, 2, Arg7745];
  var Arg7745_0 = Arg7745[0], Arg7745_1 = Arg7745[1];
  return ((Shen.call(Shen.fns["shen.print-vector?"], [Arg7745_0]))
  ? (function() {
  return Shen.call_tail(Shen.absvector_ref(Arg7745_0, 0), [Arg7745_0]);})
  : ((Shen.vector$question$(Arg7745_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg7745_0, 1, Arg7745_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg7745_0, 0, Arg7745_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">>"])])]);})))}, 2, [], "shen.vector->str"];





Shen.fns["shen.print-vector?"] = [Shen.type_func, function shen_user_lambda7748(Arg7747) {
  if (Arg7747.length < 1) return [Shen.type_func, shen_user_lambda7748, 1, Arg7747];
  var Arg7747_0 = Arg7747[0];
  var R0;
  return ((R0 = Shen.absvector_ref(Arg7747_0, 0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.tuple"])))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.pvar"])))
  ? true
  : (((!(typeof(R0) == 'number')))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.fbound?"], [R0]);})
  : false))))}, 1, [], "shen.print-vector?"];





Shen.fns["shen.fbound?"] = [Shen.type_func, function shen_user_lambda7750(Arg7749) {
  if (Arg7749.length < 1) return [Shen.type_func, shen_user_lambda7750, 1, Arg7749];
  var Arg7749_0 = Arg7749[0];
  return (function() {
  return Shen.trap_error(function() {return (Shen.call(Shen.fns["ps"], [Arg7749_0]),
  true);}, [Shen.type_func, function shen_user_lambda7752(Arg7751) {
  if (Arg7751.length < 1) return [Shen.type_func, shen_user_lambda7752, 1, Arg7751];
  var Arg7751_0 = Arg7751[0];
  return false}, 1, [], undefined]);})}, 1, [], "shen.fbound?"];





Shen.fns["shen.tuple"] = [Shen.type_func, function shen_user_lambda7754(Arg7753) {
  if (Arg7753.length < 1) return [Shen.type_func, shen_user_lambda7754, 1, Arg7753];
  var Arg7753_0 = Arg7753[0];
  return ("(@p " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg7753_0, 1), (" " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg7753_0, 2), ")", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.s"]]))}, 1, [], "shen.tuple"];





Shen.fns["shen.iter-vector"] = [Shen.type_func, function shen_user_lambda7756(Arg7755) {
  if (Arg7755.length < 4) return [Shen.type_func, shen_user_lambda7756, 4, Arg7755];
  var Arg7755_0 = Arg7755[0], Arg7755_1 = Arg7755[1], Arg7755_2 = Arg7755[2], Arg7755_3 = Arg7755[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7755_3)))
  ? "... etc"
  : ((R0 = Shen.trap_error(function() {return Shen.absvector_ref(Arg7755_0, Arg7755_1);}, [Shen.type_func, function shen_user_lambda7758(Arg7757) {
  if (Arg7757.length < 1) return [Shen.type_func, shen_user_lambda7758, 1, Arg7757];
  var Arg7757_0 = Arg7757[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined])),
  (R1 = Shen.trap_error(function() {return Shen.absvector_ref(Arg7755_0, (Arg7755_1 + 1));}, [Shen.type_func, function shen_user_lambda7760(Arg7759) {
  if (Arg7759.length < 1) return [Shen.type_func, shen_user_lambda7760, 1, Arg7759];
  var Arg7759_0 = Arg7759[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [R0, Arg7755_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [R0, Arg7755_2]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-vector"], [Arg7755_0, (Arg7755_1 + 1), Arg7755_2, (Arg7755_3 - 1)])])]);})))))}, 4, [], "shen.iter-vector"];





Shen.fns["shen.atom->str"] = [Shen.type_func, function shen_user_lambda7762(Arg7761) {
  if (Arg7761.length < 1) return [Shen.type_func, shen_user_lambda7762, 1, Arg7761];
  var Arg7761_0 = Arg7761[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.str(Arg7761_0);}, [Shen.type_func, function shen_user_lambda7764(Arg7763) {
  if (Arg7763.length < 1) return [Shen.type_func, shen_user_lambda7764, 1, Arg7763];
  var Arg7763_0 = Arg7763[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.funexstring"], []);})}, 1, [], undefined]);})}, 1, [], "shen.atom->str"];





Shen.fns["shen.funexstring"] = [Shen.type_func, function shen_user_lambda7766(Arg7765) {
  if (Arg7765.length < 0) return [Shen.type_func, shen_user_lambda7766, 0, Arg7765];
  return (function() {
  return Shen.call_tail(Shen.fns["@s"], ["", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "x"]]), [Shen.type_symbol, "shen.a"]]), ""])])])])])]);})}, 0, [], "shen.funexstring"];





Shen.fns["shen.list?"] = [Shen.type_func, function shen_user_lambda7768(Arg7767) {
  if (Arg7767.length < 1) return [Shen.type_func, shen_user_lambda7768, 1, Arg7767];
  var Arg7767_0 = Arg7767[0];
  return (Shen.empty$question$(Arg7767_0) || Shen.is_type(Arg7767_0, Shen.type_cons))}, 1, [], "shen.list?"];










Shen.fns["lineread"] = [Shen.type_func, function shen_user_lambda6741(Arg6740) {
  if (Arg6740.length < 0) return [Shen.type_func, shen_user_lambda6741, 0, Arg6740];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), []]);})}, 0, [], "lineread"];





Shen.fns["shen.lineread-loop"] = [Shen.type_func, function shen_user_lambda6743(Arg6742) {
  if (Arg6742.length < 2) return [Shen.type_func, shen_user_lambda6743, 2, Arg6742];
  var Arg6742_0 = Arg6742[0], Arg6742_1 = Arg6742[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6742_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg6742_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg6742_1, [Shen.type_func, function shen_user_lambda6745(Arg6744) {
  if (Arg6744.length < 1) return [Shen.type_func, shen_user_lambda6745, 1, Arg6744];
  var Arg6744_0 = Arg6744[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg6742_1, [Shen.type_cons, Arg6742_0, []]])]);})
  : R0))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg6742_1, [Shen.type_cons, Arg6742_0, []]])]);})))}, 2, [], "shen.lineread-loop"];





Shen.fns["read-file"] = [Shen.type_func, function shen_user_lambda6747(Arg6746) {
  if (Arg6746.length < 1) return [Shen.type_func, shen_user_lambda6747, 1, Arg6746];
  var Arg6746_0 = Arg6746[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["read-file-as-bytelist"], [Arg6746_0])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R0, [Shen.type_symbol, "shen.read-error"]]);}))}, 1, [], "read-file"];





Shen.fns["shen.read-error"] = [Shen.type_func, function shen_user_lambda6749(Arg6748) {
  if (Arg6748.length < 1) return [Shen.type_func, shen_user_lambda6749, 1, Arg6748];
  var Arg6748_0 = Arg6748[0];
  return (((Shen.is_type(Arg6748_0, Shen.type_cons) && (Shen.is_type(Arg6748_0[1], Shen.type_cons) && (Shen.is_type(Arg6748_0[2], Shen.type_cons) && Shen.empty$question$(Arg6748_0[2][2])))))
  ? (function() {
  return Shen.simple_error(("read error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.compress-50"], [50, Arg6748_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error("read error\x0a");}))}, 1, [], "shen.read-error"];





Shen.fns["shen.compress-50"] = [Shen.type_func, function shen_user_lambda6751(Arg6750) {
  if (Arg6750.length < 2) return [Shen.type_func, shen_user_lambda6751, 2, Arg6750];
  var Arg6750_0 = Arg6750[0], Arg6750_1 = Arg6750[1];
  return ((Shen.empty$question$(Arg6750_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6750_0)))
  ? ""
  : ((Shen.is_type(Arg6750_1, Shen.type_cons))
  ? (Shen.n_$gt$string(Arg6750_1[1]) + Shen.call(Shen.fns["shen.compress-50"], [(Arg6750_0 - 1), Arg6750_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compress-50"]]);}))))}, 2, [], "shen.compress-50"];





Shen.fns["shen.<st_input>"] = [Shen.type_func, function shen_user_lambda6753(Arg6752) {
  if (Arg6752.length < 1) return [Shen.type_func, shen_user_lambda6753, 1, Arg6752];
  var Arg6752_0 = Arg6752[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<lsb>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rsb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lrb>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rrb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.package-macro"], [Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lcurly>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "{"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rcurly>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "}"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<bar>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "bar!"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<semicolon>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ";"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<equal>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":="], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<minus>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comma>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ","], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<atom>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6752_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<st_input>"];





Shen.fns["shen.<lsb>"] = [Shen.type_func, function shen_user_lambda6755(Arg6754) {
  if (Arg6754.length < 1) return [Shen.type_func, shen_user_lambda6755, 1, Arg6754];
  var Arg6754_0 = Arg6754[0];
  var R0;
  return ((((Shen.is_type(Arg6754_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(91, Arg6754_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6754_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6754_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lsb>"];





Shen.fns["shen.<rsb>"] = [Shen.type_func, function shen_user_lambda6757(Arg6756) {
  if (Arg6756.length < 1) return [Shen.type_func, shen_user_lambda6757, 1, Arg6756];
  var Arg6756_0 = Arg6756[0];
  var R0;
  return ((((Shen.is_type(Arg6756_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(93, Arg6756_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6756_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6756_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rsb>"];





Shen.fns["shen.<lcurly>"] = [Shen.type_func, function shen_user_lambda6759(Arg6758) {
  if (Arg6758.length < 1) return [Shen.type_func, shen_user_lambda6759, 1, Arg6758];
  var Arg6758_0 = Arg6758[0];
  var R0;
  return ((((Shen.is_type(Arg6758_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(123, Arg6758_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6758_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6758_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lcurly>"];





Shen.fns["shen.<rcurly>"] = [Shen.type_func, function shen_user_lambda6761(Arg6760) {
  if (Arg6760.length < 1) return [Shen.type_func, shen_user_lambda6761, 1, Arg6760];
  var Arg6760_0 = Arg6760[0];
  var R0;
  return ((((Shen.is_type(Arg6760_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(125, Arg6760_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6760_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6760_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rcurly>"];





Shen.fns["shen.<bar>"] = [Shen.type_func, function shen_user_lambda6763(Arg6762) {
  if (Arg6762.length < 1) return [Shen.type_func, shen_user_lambda6763, 1, Arg6762];
  var Arg6762_0 = Arg6762[0];
  var R0;
  return ((((Shen.is_type(Arg6762_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(124, Arg6762_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6762_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6762_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<bar>"];





Shen.fns["shen.<semicolon>"] = [Shen.type_func, function shen_user_lambda6765(Arg6764) {
  if (Arg6764.length < 1) return [Shen.type_func, shen_user_lambda6765, 1, Arg6764];
  var Arg6764_0 = Arg6764[0];
  var R0;
  return ((((Shen.is_type(Arg6764_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(59, Arg6764_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6764_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6764_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon>"];





Shen.fns["shen.<colon>"] = [Shen.type_func, function shen_user_lambda6767(Arg6766) {
  if (Arg6766.length < 1) return [Shen.type_func, shen_user_lambda6767, 1, Arg6766];
  var Arg6766_0 = Arg6766[0];
  var R0;
  return ((((Shen.is_type(Arg6766_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(58, Arg6766_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6766_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6766_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<colon>"];





Shen.fns["shen.<comma>"] = [Shen.type_func, function shen_user_lambda6769(Arg6768) {
  if (Arg6768.length < 1) return [Shen.type_func, shen_user_lambda6769, 1, Arg6768];
  var Arg6768_0 = Arg6768[0];
  var R0;
  return ((((Shen.is_type(Arg6768_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(44, Arg6768_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6768_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6768_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma>"];





Shen.fns["shen.<equal>"] = [Shen.type_func, function shen_user_lambda6771(Arg6770) {
  if (Arg6770.length < 1) return [Shen.type_func, shen_user_lambda6771, 1, Arg6770];
  var Arg6770_0 = Arg6770[0];
  var R0;
  return ((((Shen.is_type(Arg6770_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(61, Arg6770_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6770_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6770_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<equal>"];





Shen.fns["shen.<minus>"] = [Shen.type_func, function shen_user_lambda6773(Arg6772) {
  if (Arg6772.length < 1) return [Shen.type_func, shen_user_lambda6773, 1, Arg6772];
  var Arg6772_0 = Arg6772[0];
  var R0;
  return ((((Shen.is_type(Arg6772_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(45, Arg6772_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6772_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6772_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<minus>"];





Shen.fns["shen.<lrb>"] = [Shen.type_func, function shen_user_lambda6775(Arg6774) {
  if (Arg6774.length < 1) return [Shen.type_func, shen_user_lambda6775, 1, Arg6774];
  var Arg6774_0 = Arg6774[0];
  var R0;
  return ((((Shen.is_type(Arg6774_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(40, Arg6774_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6774_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6774_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lrb>"];





Shen.fns["shen.<rrb>"] = [Shen.type_func, function shen_user_lambda6777(Arg6776) {
  if (Arg6776.length < 1) return [Shen.type_func, shen_user_lambda6777, 1, Arg6776];
  var Arg6776_0 = Arg6776[0];
  var R0;
  return ((((Shen.is_type(Arg6776_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(41, Arg6776_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6776_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6776_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rrb>"];





Shen.fns["shen.<atom>"] = [Shen.type_func, function shen_user_lambda6779(Arg6778) {
  if (Arg6778.length < 1) return [Shen.type_func, shen_user_lambda6779, 1, Arg6778];
  var Arg6778_0 = Arg6778[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<str>"], [Arg6778_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.control-chars"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<number>"], [Arg6778_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<sym>"], [Arg6778_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["shen.hdtl"], [R0]), "<>")))
  ? [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]
  : Shen.intern(Shen.call(Shen.fns["shen.hdtl"], [R0])))]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<atom>"];





Shen.fns["shen.control-chars"] = [Shen.type_func, function shen_user_lambda6781(Arg6780) {
  if (Arg6780.length < 1) return [Shen.type_func, shen_user_lambda6781, 1, Arg6780];
  var Arg6780_0 = Arg6780[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6780_0))
  ? ""
  : (((Shen.is_type(Arg6780_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("c", Arg6780_0[1])) && (Shen.is_type(Arg6780_0[2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("#", Arg6780_0[2][1]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.code-point"], [Arg6780_0[2][2]])),
  (R1 = Shen.call(Shen.fns["shen.after-codepoint"], [Arg6780_0[2][2]])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(Shen.call(Shen.fns["shen.decimalise"], [R0])), Shen.call(Shen.fns["shen.control-chars"], [R1])]);}))
  : ((Shen.is_type(Arg6780_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Arg6780_0[1], Shen.call(Shen.fns["shen.control-chars"], [Arg6780_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.control-chars"]]);}))))}, 1, [], "shen.control-chars"];





Shen.fns["shen.code-point"] = [Shen.type_func, function shen_user_lambda6783(Arg6782) {
  if (Arg6782.length < 1) return [Shen.type_func, shen_user_lambda6783, 1, Arg6782];
  var Arg6782_0 = Arg6782[0];
  return (((Shen.is_type(Arg6782_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6782_0[1]))))
  ? ""
  : (((Shen.is_type(Arg6782_0, Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6782_0[1], [Shen.type_cons, "0", [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]])))
  ? [Shen.type_cons, Arg6782_0[1], Shen.call(Shen.fns["shen.code-point"], [Arg6782_0[2]])]
  : (function() {
  return Shen.simple_error(("code point parse error " + Shen.call(Shen.fns["shen.app"], [Arg6782_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})))}, 1, [], "shen.code-point"];





Shen.fns["shen.after-codepoint"] = [Shen.type_func, function shen_user_lambda6785(Arg6784) {
  if (Arg6784.length < 1) return [Shen.type_func, shen_user_lambda6785, 1, Arg6784];
  var Arg6784_0 = Arg6784[0];
  return ((Shen.empty$question$(Arg6784_0))
  ? []
  : (((Shen.is_type(Arg6784_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6784_0[1]))))
  ? Arg6784_0[2]
  : ((Shen.is_type(Arg6784_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.after-codepoint"], [Arg6784_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.after-codepoint"]]);}))))}, 1, [], "shen.after-codepoint"];





Shen.fns["shen.decimalise"] = [Shen.type_func, function shen_user_lambda6787(Arg6786) {
  if (Arg6786.length < 1) return [Shen.type_func, shen_user_lambda6787, 1, Arg6786];
  var Arg6786_0 = Arg6786[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.digits->integers"], [Arg6786_0])]), 0]);})}, 1, [], "shen.decimalise"];





Shen.fns["shen.digits->integers"] = [Shen.type_func, function shen_user_lambda6789(Arg6788) {
  if (Arg6788.length < 1) return [Shen.type_func, shen_user_lambda6789, 1, Arg6788];
  var Arg6788_0 = Arg6788[0];
  return (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("0", Arg6788_0[1]))))
  ? [Shen.type_cons, 0, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("1", Arg6788_0[1]))))
  ? [Shen.type_cons, 1, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("2", Arg6788_0[1]))))
  ? [Shen.type_cons, 2, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("3", Arg6788_0[1]))))
  ? [Shen.type_cons, 3, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("4", Arg6788_0[1]))))
  ? [Shen.type_cons, 4, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("5", Arg6788_0[1]))))
  ? [Shen.type_cons, 5, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("6", Arg6788_0[1]))))
  ? [Shen.type_cons, 6, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("7", Arg6788_0[1]))))
  ? [Shen.type_cons, 7, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("8", Arg6788_0[1]))))
  ? [Shen.type_cons, 8, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : (((Shen.is_type(Arg6788_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("9", Arg6788_0[1]))))
  ? [Shen.type_cons, 9, Shen.call(Shen.fns["shen.digits->integers"], [Arg6788_0[2]])]
  : []))))))))))}, 1, [], "shen.digits->integers"];





Shen.fns["shen.<sym>"] = [Shen.type_func, function shen_user_lambda6791(Arg6790) {
  if (Arg6790.length < 1) return [Shen.type_func, shen_user_lambda6791, 1, Arg6790];
  var Arg6790_0 = Arg6790[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6790_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sym>"];





Shen.fns["shen.<alphanums>"] = [Shen.type_func, function shen_user_lambda6793(Arg6792) {
  if (Arg6792.length < 1) return [Shen.type_func, shen_user_lambda6793, 1, Arg6792];
  var Arg6792_0 = Arg6792[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alphanum>"], [Arg6792_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6792_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ""]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanums>"];





Shen.fns["shen.<alphanum>"] = [Shen.type_func, function shen_user_lambda6795(Arg6794) {
  if (Arg6794.length < 1) return [Shen.type_func, shen_user_lambda6795, 1, Arg6794];
  var Arg6794_0 = Arg6794[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6794_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<num>"], [Arg6794_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanum>"];





Shen.fns["shen.<num>"] = [Shen.type_func, function shen_user_lambda6797(Arg6796) {
  if (Arg6796.length < 1) return [Shen.type_func, shen_user_lambda6797, 1, Arg6796];
  var Arg6796_0 = Arg6796[0];
  var R0;
  return (((Shen.is_type(Arg6796_0[1], Shen.type_cons))
  ? ((R0 = Arg6796_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6796_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6796_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<num>"];





Shen.fns["shen.numbyte?"] = [Shen.type_func, function shen_user_lambda6799(Arg6798) {
  if (Arg6798.length < 1) return [Shen.type_func, shen_user_lambda6799, 1, Arg6798];
  var Arg6798_0 = Arg6798[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6798_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6798_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6798_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6798_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6798_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6798_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6798_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6798_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6798_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6798_0)))
  ? true
  : false))))))))))}, 1, [], "shen.numbyte?"];





Shen.fns["shen.<alpha>"] = [Shen.type_func, function shen_user_lambda6801(Arg6800) {
  if (Arg6800.length < 1) return [Shen.type_func, shen_user_lambda6801, 1, Arg6800];
  var Arg6800_0 = Arg6800[0];
  var R0;
  return (((Shen.is_type(Arg6800_0[1], Shen.type_cons))
  ? ((R0 = Arg6800_0[1][1]),
  ((Shen.call(Shen.fns["shen.symbol-code?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6800_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6800_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<alpha>"];





Shen.fns["shen.symbol-code?"] = [Shen.type_func, function shen_user_lambda6803(Arg6802) {
  if (Arg6802.length < 1) return [Shen.type_func, shen_user_lambda6803, 1, Arg6802];
  var Arg6802_0 = Arg6802[0];
  return (Shen.unwind_tail(Shen.$eq$(Arg6802_0, 126)) || (((Arg6802_0 > 94) && (Arg6802_0 < 123)) || (((Arg6802_0 > 59) && (Arg6802_0 < 91)) || (((Arg6802_0 > 41) && ((Arg6802_0 < 58) && (!Shen.unwind_tail(Shen.$eq$(Arg6802_0, 44))))) || (((Arg6802_0 > 34) && (Arg6802_0 < 40)) || Shen.unwind_tail(Shen.$eq$(Arg6802_0, 33)))))))}, 1, [], "shen.symbol-code?"];





Shen.fns["shen.<str>"] = [Shen.type_func, function shen_user_lambda6805(Arg6804) {
  if (Arg6804.length < 1) return [Shen.type_func, shen_user_lambda6805, 1, Arg6804];
  var Arg6804_0 = Arg6804[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<dbq>"], [Arg6804_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<dbq>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<str>"];





Shen.fns["shen.<dbq>"] = [Shen.type_func, function shen_user_lambda6807(Arg6806) {
  if (Arg6806.length < 1) return [Shen.type_func, shen_user_lambda6807, 1, Arg6806];
  var Arg6806_0 = Arg6806[0];
  var R0;
  return (((Shen.is_type(Arg6806_0[1], Shen.type_cons))
  ? ((R0 = Arg6806_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 34)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6806_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6806_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<dbq>"];





Shen.fns["shen.<strcontents>"] = [Shen.type_func, function shen_user_lambda6809(Arg6808) {
  if (Arg6808.length < 1) return [Shen.type_func, shen_user_lambda6809, 1, Arg6808];
  var Arg6808_0 = Arg6808[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<strc>"], [Arg6808_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6808_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<strcontents>"];





Shen.fns["shen.<byte>"] = [Shen.type_func, function shen_user_lambda6811(Arg6810) {
  if (Arg6810.length < 1) return [Shen.type_func, shen_user_lambda6811, 1, Arg6810];
  var Arg6810_0 = Arg6810[0];
  var R0;
  return (((Shen.is_type(Arg6810_0[1], Shen.type_cons))
  ? ((R0 = Arg6810_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6810_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6810_0])])[1], Shen.n_$gt$string(R0)])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<byte>"];





Shen.fns["shen.<strc>"] = [Shen.type_func, function shen_user_lambda6813(Arg6812) {
  if (Arg6812.length < 1) return [Shen.type_func, shen_user_lambda6813, 1, Arg6812];
  var Arg6812_0 = Arg6812[0];
  var R0;
  return (((Shen.is_type(Arg6812_0[1], Shen.type_cons))
  ? ((R0 = Arg6812_0[1][1]),
  (((!Shen.unwind_tail(Shen.$eq$(R0, 34))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6812_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6812_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<strc>"];





Shen.fns["shen.<backslash>"] = [Shen.type_func, function shen_user_lambda6815(Arg6814) {
  if (Arg6814.length < 1) return [Shen.type_func, shen_user_lambda6815, 1, Arg6814];
  var Arg6814_0 = Arg6814[0];
  var R0;
  return (((Shen.is_type(Arg6814_0[1], Shen.type_cons))
  ? ((R0 = Arg6814_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 92)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6814_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6814_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<backslash>"];





Shen.fns["shen.<number>"] = [Shen.type_func, function shen_user_lambda6817(Arg6816) {
  if (Arg6816.length < 1) return [Shen.type_func, shen_user_lambda6817, 1, Arg6816];
  var Arg6816_0 = Arg6816[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6816_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.hdtl"], [R0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<plus>"], [Arg6816_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6816_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<E>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<log10>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R2])]) * (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1])))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6816_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<E>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<log10>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R1])]) * Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6816_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6816_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<number>"];





Shen.fns["shen.<E>"] = [Shen.type_func, function shen_user_lambda6819(Arg6818) {
  if (Arg6818.length < 1) return [Shen.type_func, shen_user_lambda6819, 1, Arg6818];
  var Arg6818_0 = Arg6818[0];
  var R0;
  return ((((Shen.is_type(Arg6818_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(101, Arg6818_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6818_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6818_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<E>"];





Shen.fns["shen.<log10>"] = [Shen.type_func, function shen_user_lambda6821(Arg6820) {
  if (Arg6820.length < 1) return [Shen.type_func, shen_user_lambda6821, 1, Arg6820];
  var Arg6820_0 = Arg6820[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6820_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6820_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<log10>"];





Shen.fns["shen.<plus>"] = [Shen.type_func, function shen_user_lambda6823(Arg6822) {
  if (Arg6822.length < 1) return [Shen.type_func, shen_user_lambda6823, 1, Arg6822];
  var Arg6822_0 = Arg6822[0];
  var R0;
  return (((Shen.is_type(Arg6822_0[1], Shen.type_cons))
  ? ((R0 = Arg6822_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 43)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6822_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6822_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<plus>"];





Shen.fns["shen.<stop>"] = [Shen.type_func, function shen_user_lambda6825(Arg6824) {
  if (Arg6824.length < 1) return [Shen.type_func, shen_user_lambda6825, 1, Arg6824];
  var Arg6824_0 = Arg6824[0];
  var R0;
  return (((Shen.is_type(Arg6824_0[1], Shen.type_cons))
  ? ((R0 = Arg6824_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 46)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6824_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6824_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<stop>"];





Shen.fns["shen.<predigits>"] = [Shen.type_func, function shen_user_lambda6827(Arg6826) {
  if (Arg6826.length < 1) return [Shen.type_func, shen_user_lambda6827, 1, Arg6826];
  var Arg6826_0 = Arg6826[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6826_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6826_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<predigits>"];





Shen.fns["shen.<postdigits>"] = [Shen.type_func, function shen_user_lambda6829(Arg6828) {
  if (Arg6828.length < 1) return [Shen.type_func, shen_user_lambda6829, 1, Arg6828];
  var Arg6828_0 = Arg6828[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6828_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<postdigits>"];





Shen.fns["shen.<digits>"] = [Shen.type_func, function shen_user_lambda6831(Arg6830) {
  if (Arg6830.length < 1) return [Shen.type_func, shen_user_lambda6831, 1, Arg6830];
  var Arg6830_0 = Arg6830[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6830_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6830_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<digits>"];





Shen.fns["shen.<digit>"] = [Shen.type_func, function shen_user_lambda6833(Arg6832) {
  if (Arg6832.length < 1) return [Shen.type_func, shen_user_lambda6833, 1, Arg6832];
  var Arg6832_0 = Arg6832[0];
  var R0;
  return (((Shen.is_type(Arg6832_0[1], Shen.type_cons))
  ? ((R0 = Arg6832_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6832_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6832_0])])[1], Shen.call(Shen.fns["shen.byte->digit"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<digit>"];





Shen.fns["shen.byte->digit"] = [Shen.type_func, function shen_user_lambda6835(Arg6834) {
  if (Arg6834.length < 1) return [Shen.type_func, shen_user_lambda6835, 1, Arg6834];
  var Arg6834_0 = Arg6834[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6834_0)))
  ? 0
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6834_0)))
  ? 1
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6834_0)))
  ? 2
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6834_0)))
  ? 3
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6834_0)))
  ? 4
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6834_0)))
  ? 5
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6834_0)))
  ? 6
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6834_0)))
  ? 7
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6834_0)))
  ? 8
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6834_0)))
  ? 9
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.byte->digit"]]);})))))))))))}, 1, [], "shen.byte->digit"];





Shen.fns["shen.pre"] = [Shen.type_func, function shen_user_lambda6837(Arg6836) {
  if (Arg6836.length < 2) return [Shen.type_func, shen_user_lambda6837, 2, Arg6836];
  var Arg6836_0 = Arg6836[0], Arg6836_1 = Arg6836[1];
  return ((Shen.empty$question$(Arg6836_0))
  ? 0
  : ((Shen.is_type(Arg6836_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, Arg6836_1]) * Arg6836_0[1]) + Shen.call(Shen.fns["shen.pre"], [Arg6836_0[2], (Arg6836_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.pre"]]);})))}, 2, [], "shen.pre"];





Shen.fns["shen.post"] = [Shen.type_func, function shen_user_lambda6839(Arg6838) {
  if (Arg6838.length < 2) return [Shen.type_func, shen_user_lambda6839, 2, Arg6838];
  var Arg6838_0 = Arg6838[0], Arg6838_1 = Arg6838[1];
  return ((Shen.empty$question$(Arg6838_0))
  ? 0
  : ((Shen.is_type(Arg6838_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, (0 - Arg6838_1)]) * Arg6838_0[1]) + Shen.call(Shen.fns["shen.post"], [Arg6838_0[2], (Arg6838_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.post"]]);})))}, 2, [], "shen.post"];





Shen.fns["shen.expt"] = [Shen.type_func, function shen_user_lambda6841(Arg6840) {
  if (Arg6840.length < 2) return [Shen.type_func, shen_user_lambda6841, 2, Arg6840];
  var Arg6840_0 = Arg6840[0], Arg6840_1 = Arg6840[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6840_1)))
  ? 1
  : (((Arg6840_1 > 0))
  ? (Arg6840_0 * Shen.call(Shen.fns["shen.expt"], [Arg6840_0, (Arg6840_1 - 1)]))
  : (1 * (Shen.call(Shen.fns["shen.expt"], [Arg6840_0, (Arg6840_1 + 1)]) / Arg6840_0))))}, 2, [], "shen.expt"];





Shen.fns["shen.<st_input1>"] = [Shen.type_func, function shen_user_lambda6843(Arg6842) {
  if (Arg6842.length < 1) return [Shen.type_func, shen_user_lambda6843, 1, Arg6842];
  var Arg6842_0 = Arg6842[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6842_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input1>"];





Shen.fns["shen.<st_input2>"] = [Shen.type_func, function shen_user_lambda6845(Arg6844) {
  if (Arg6844.length < 1) return [Shen.type_func, shen_user_lambda6845, 1, Arg6844];
  var Arg6844_0 = Arg6844[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6844_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input2>"];





Shen.fns["shen.<comment>"] = [Shen.type_func, function shen_user_lambda6847(Arg6846) {
  if (Arg6846.length < 1) return [Shen.type_func, shen_user_lambda6847, 1, Arg6846];
  var Arg6846_0 = Arg6846[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg6846_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comment>"];





Shen.fns["shen.<times>"] = [Shen.type_func, function shen_user_lambda6849(Arg6848) {
  if (Arg6848.length < 1) return [Shen.type_func, shen_user_lambda6849, 1, Arg6848];
  var Arg6848_0 = Arg6848[0];
  var R0;
  return (((Shen.is_type(Arg6848_0[1], Shen.type_cons))
  ? ((R0 = Arg6848_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 42)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6848_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6848_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<times>"];





Shen.fns["shen.<any>"] = [Shen.type_func, function shen_user_lambda6851(Arg6850) {
  if (Arg6850.length < 1) return [Shen.type_func, shen_user_lambda6851, 1, Arg6850];
  var Arg6850_0 = Arg6850[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6850_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<blah>"], [Arg6850_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6850_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<any>"];





Shen.fns["shen.<blah>"] = [Shen.type_func, function shen_user_lambda6853(Arg6852) {
  if (Arg6852.length < 1) return [Shen.type_func, shen_user_lambda6853, 1, Arg6852];
  var Arg6852_0 = Arg6852[0];
  return (((Shen.is_type(Arg6852_0, Shen.type_cons) && (Shen.is_type(Arg6852_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(42, Arg6852_0[1][1])) && (Shen.is_type(Arg6852_0[1][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(92, Arg6852_0[1][2][1])))))))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg6852_0, Shen.type_cons) && (Shen.is_type(Arg6852_0[1], Shen.type_cons) && (Shen.is_type(Arg6852_0[2], Shen.type_cons) && Shen.empty$question$(Arg6852_0[2][2])))))
  ? [Shen.type_cons, Arg6852_0[1][2], [Shen.type_cons, [Shen.type_symbol, "shen.skip"], []]]
  : Shen.fail_obj))}, 1, [], "shen.<blah>"];





Shen.fns["shen.<whitespaces>"] = [Shen.type_func, function shen_user_lambda6855(Arg6854) {
  if (Arg6854.length < 1) return [Shen.type_func, shen_user_lambda6855, 1, Arg6854];
  var Arg6854_0 = Arg6854[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6854_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6854_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<whitespaces>"];





Shen.fns["shen.<whitespace>"] = [Shen.type_func, function shen_user_lambda6857(Arg6856) {
  if (Arg6856.length < 1) return [Shen.type_func, shen_user_lambda6857, 1, Arg6856];
  var Arg6856_0 = Arg6856[0];
  var R0;
  return (((Shen.is_type(Arg6856_0[1], Shen.type_cons))
  ? ((R0 = Arg6856_0[1][1]),
  ((((R0 = R0),
  (Shen.unwind_tail(Shen.$eq$(R0, 32)) || (Shen.unwind_tail(Shen.$eq$(R0, 13)) || (Shen.unwind_tail(Shen.$eq$(R0, 10)) || Shen.unwind_tail(Shen.$eq$(R0, 9)))))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6856_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6856_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<whitespace>"];





Shen.fns["shen.cons_form"] = [Shen.type_func, function shen_user_lambda6859(Arg6858) {
  if (Arg6858.length < 1) return [Shen.type_func, shen_user_lambda6859, 1, Arg6858];
  var Arg6858_0 = Arg6858[0];
  return ((Shen.empty$question$(Arg6858_0))
  ? []
  : (((Shen.is_type(Arg6858_0, Shen.type_cons) && (Shen.is_type(Arg6858_0[2], Shen.type_cons) && (Shen.is_type(Arg6858_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6858_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6858_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6858_0[1], Arg6858_0[2][2]]]
  : ((Shen.is_type(Arg6858_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6858_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg6858_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cons_form"]]);}))))}, 1, [], "shen.cons_form"];





Shen.fns["shen.package-macro"] = [Shen.type_func, function shen_user_lambda6861(Arg6860) {
  if (Arg6860.length < 2) return [Shen.type_func, shen_user_lambda6861, 2, Arg6860];
  var Arg6860_0 = Arg6860[0], Arg6860_1 = Arg6860[1];
  var R0, R1;
  return (((Shen.is_type(Arg6860_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "$"], Arg6860_0[1])) && (Shen.is_type(Arg6860_0[2], Shen.type_cons) && Shen.empty$question$(Arg6860_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["explode"], [Arg6860_0[2][1]]), Arg6860_1]);})
  : (((Shen.is_type(Arg6860_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6860_0[1])) && (Shen.is_type(Arg6860_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg6860_0[2][1])) && Shen.is_type(Arg6860_0[2][2], Shen.type_cons))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Arg6860_0[2][2][2], Arg6860_1]);})
  : (((Shen.is_type(Arg6860_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6860_0[1])) && (Shen.is_type(Arg6860_0[2], Shen.type_cons) && Shen.is_type(Arg6860_0[2][2], Shen.type_cons)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6860_0[2][2][1]])),
  Shen.call(Shen.fns["shen.record-exceptions"], [R0, Arg6860_0[2][1]]),
  (R1 = Shen.intern((Shen.str(Arg6860_0[2][1]) + "."))),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.packageh"], [R1, R0, Arg6860_0[2][2][2]]), Arg6860_1]);}))
  : [Shen.type_cons, Arg6860_0, Arg6860_1])))}, 2, [], "shen.package-macro"];





Shen.fns["shen.record-exceptions"] = [Shen.type_func, function shen_user_lambda6863(Arg6862) {
  if (Arg6862.length < 2) return [Shen.type_func, shen_user_lambda6863, 2, Arg6862];
  var Arg6862_0 = Arg6862[0], Arg6862_1 = Arg6862[1];
  var R0;
  return ((R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6862_1, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6865(Arg6864) {
  if (Arg6864.length < 1) return [Shen.type_func, shen_user_lambda6865, 1, Arg6864];
  var Arg6864_0 = Arg6864[0];
  return []}, 1, [], undefined])),
  (R0 = Shen.call(Shen.fns["union"], [Arg6862_0, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6862_1, [Shen.type_symbol, "shen.external-symbols"], R0, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-exceptions"];





Shen.fns["shen.packageh"] = [Shen.type_func, function shen_user_lambda6867(Arg6866) {
  if (Arg6866.length < 3) return [Shen.type_func, shen_user_lambda6867, 3, Arg6866];
  var Arg6866_0 = Arg6866[0], Arg6866_1 = Arg6866[1], Arg6866_2 = Arg6866[2];
  return ((Shen.is_type(Arg6866_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.packageh"], [Arg6866_0, Arg6866_1, Arg6866_2[1]]), Shen.call(Shen.fns["shen.packageh"], [Arg6866_0, Arg6866_1, Arg6866_2[2]])]
  : (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg6866_2]) || (Shen.call(Shen.fns["variable?"], [Arg6866_2]) || (Shen.call(Shen.fns["element?"], [Arg6866_2, Arg6866_1]) || (Shen.call(Shen.fns["shen.doubleunderline?"], [Arg6866_2]) || Shen.call(Shen.fns["shen.singleunderline?"], [Arg6866_2]))))))
  ? Arg6866_2
  : (((Shen.is_type(Arg6866_2, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.prefix?"], [[Shen.type_cons, "s", [Shen.type_cons, "h", [Shen.type_cons, "e", [Shen.type_cons, "n", [Shen.type_cons, ".", []]]]]], Shen.call(Shen.fns["explode"], [Arg6866_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg6866_0, Arg6866_2]);})
  : Arg6866_2)))}, 3, [], "shen.packageh"];





Shen.fns["read-from-string"] = [Shen.type_func, function shen_user_lambda6869(Arg6868) {
  if (Arg6868.length < 1) return [Shen.type_func, shen_user_lambda6869, 1, Arg6868];
  var Arg6868_0 = Arg6868[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6871(Arg6870) {
  if (Arg6870.length < 1) return [Shen.type_func, shen_user_lambda6871, 1, Arg6870];
  var Arg6870_0 = Arg6870[0];
  return (function() {
  return Shen.string_$gt$n(Arg6870_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg6868_0])])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R0, [Shen.type_symbol, "shen.read-error"]]);}))}, 1, [], "read-from-string"];










Shen.fns["shen.<defprolog>"] = [Shen.type_func, function shen_user_lambda6524(Arg6523) {
  if (Arg6523.length < 1) return [Shen.type_func, shen_user_lambda6524, 1, Arg6523];
  var Arg6523_0 = Arg6523[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<predicate*>"], [Arg6523_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.prolog->shen"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6526(Arg6525) {
  if (Arg6525.length < 2) return [Shen.type_func, shen_user_lambda6526, 2, Arg6525];
  var Arg6525_0 = Arg6525[0], Arg6525_1 = Arg6525[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-predicate"], [Shen.call(Shen.fns["shen.hdtl"], [Arg6525_0]), Arg6525_1]);})}, 2, [R0], undefined], Shen.call(Shen.fns["shen.hdtl"], [R1])])])[1]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<defprolog>"];





Shen.fns["shen.prolog-error"] = [Shen.type_func, function shen_user_lambda6528(Arg6527) {
  if (Arg6527.length < 2) return [Shen.type_func, shen_user_lambda6528, 2, Arg6527];
  var Arg6527_0 = Arg6527[0], Arg6527_1 = Arg6527[1];
  return (((Shen.is_type(Arg6527_1, Shen.type_cons) && (Shen.is_type(Arg6527_1[2], Shen.type_cons) && Shen.empty$question$(Arg6527_1[2][2]))))
  ? (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6527_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6527_1[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6527_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.prolog-error"];





Shen.fns["shen.next-50"] = [Shen.type_func, function shen_user_lambda6530(Arg6529) {
  if (Arg6529.length < 2) return [Shen.type_func, shen_user_lambda6530, 2, Arg6529];
  var Arg6529_0 = Arg6529[0], Arg6529_1 = Arg6529[1];
  return ((Shen.empty$question$(Arg6529_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6529_0)))
  ? ""
  : ((Shen.is_type(Arg6529_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.decons-string"], [Arg6529_1[1]]) + Shen.call(Shen.fns["shen.next-50"], [(Arg6529_0 - 1), Arg6529_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.next-50"]]);}))))}, 2, [], "shen.next-50"];





Shen.fns["shen.decons-string"] = [Shen.type_func, function shen_user_lambda6532(Arg6531) {
  if (Arg6531.length < 1) return [Shen.type_func, shen_user_lambda6532, 1, Arg6531];
  var Arg6531_0 = Arg6531[0];
  return (((Shen.is_type(Arg6531_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6531_0[1])) && (Shen.is_type(Arg6531_0[2], Shen.type_cons) && (Shen.is_type(Arg6531_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6531_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-cons"], [Arg6531_0]), " ", [Shen.type_symbol, "shen.s"]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg6531_0, " ", [Shen.type_symbol, "shen.r"]]);}))}, 1, [], "shen.decons-string"];





Shen.fns["shen.insert-predicate"] = [Shen.type_func, function shen_user_lambda6534(Arg6533) {
  if (Arg6533.length < 2) return [Shen.type_func, shen_user_lambda6534, 2, Arg6533];
  var Arg6533_0 = Arg6533[0], Arg6533_1 = Arg6533[1];
  return (((Shen.is_type(Arg6533_1, Shen.type_cons) && (Shen.is_type(Arg6533_1[2], Shen.type_cons) && Shen.empty$question$(Arg6533_1[2][2]))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6533_0, Arg6533_1[1]], [Shen.type_cons, [Shen.type_symbol, ":-"], Arg6533_1[2]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-predicate"]]);}))}, 2, [], "shen.insert-predicate"];





Shen.fns["shen.<predicate*>"] = [Shen.type_func, function shen_user_lambda6536(Arg6535) {
  if (Arg6535.length < 1) return [Shen.type_func, shen_user_lambda6536, 1, Arg6535];
  var Arg6535_0 = Arg6535[0];
  var R0;
  return (((Shen.is_type(Arg6535_0[1], Shen.type_cons))
  ? ((R0 = Arg6535_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6535_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6535_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<predicate*>"];





Shen.fns["shen.<clauses*>"] = [Shen.type_func, function shen_user_lambda6538(Arg6537) {
  if (Arg6537.length < 1) return [Shen.type_func, shen_user_lambda6538, 1, Arg6537];
  var Arg6537_0 = Arg6537[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<clause*>"], [Arg6537_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6537_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<clauses*>"];





Shen.fns["shen.<clause*>"] = [Shen.type_func, function shen_user_lambda6540(Arg6539) {
  if (Arg6539.length < 1) return [Shen.type_func, shen_user_lambda6540, 1, Arg6539];
  var Arg6539_0 = Arg6539[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<head*>"], [Arg6539_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<end*>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<clause*>"];





Shen.fns["shen.<head*>"] = [Shen.type_func, function shen_user_lambda6542(Arg6541) {
  if (Arg6541.length < 1) return [Shen.type_func, shen_user_lambda6542, 1, Arg6541];
  var Arg6541_0 = Arg6541[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<term*>"], [Arg6541_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<head*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6541_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<head*>"];





Shen.fns["shen.<term*>"] = [Shen.type_func, function shen_user_lambda6544(Arg6543) {
  if (Arg6543.length < 1) return [Shen.type_func, shen_user_lambda6544, 1, Arg6543];
  var Arg6543_0 = Arg6543[0];
  var R0;
  return (((Shen.is_type(Arg6543_0[1], Shen.type_cons))
  ? ((R0 = Arg6543_0[1][1]),
  ((((!Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0))) && Shen.call(Shen.fns["shen.legitimate-term?"], [R0])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6543_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6543_0])])[1], Shen.call(Shen.fns["shen.eval-cons"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<term*>"];





Shen.fns["shen.legitimate-term?"] = [Shen.type_func, function shen_user_lambda6546(Arg6545) {
  if (Arg6545.length < 1) return [Shen.type_func, shen_user_lambda6546, 1, Arg6545];
  var Arg6545_0 = Arg6545[0];
  return (((Shen.is_type(Arg6545_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6545_0[1])) && (Shen.is_type(Arg6545_0[2], Shen.type_cons) && (Shen.is_type(Arg6545_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6545_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6545_0[2][1]]) && Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6545_0[2][2][1]]))
  : (((Shen.is_type(Arg6545_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6545_0[1])) && (Shen.is_type(Arg6545_0[2], Shen.type_cons) && (Shen.is_type(Arg6545_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6545_0[2][2][1])) && Shen.empty$question$(Arg6545_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6545_0[2][1]]);})
  : (((Shen.is_type(Arg6545_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6545_0[1])) && (Shen.is_type(Arg6545_0[2], Shen.type_cons) && (Shen.is_type(Arg6545_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6545_0[2][2][1])) && Shen.empty$question$(Arg6545_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6545_0[2][1]]);})
  : ((Shen.is_type(Arg6545_0, Shen.type_cons))
  ? false
  : true))))}, 1, [], "shen.legitimate-term?"];





Shen.fns["shen.eval-cons"] = [Shen.type_func, function shen_user_lambda6548(Arg6547) {
  if (Arg6547.length < 1) return [Shen.type_func, shen_user_lambda6548, 1, Arg6547];
  var Arg6547_0 = Arg6547[0];
  return (((Shen.is_type(Arg6547_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6547_0[1])) && (Shen.is_type(Arg6547_0[2], Shen.type_cons) && (Shen.is_type(Arg6547_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6547_0[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6547_0[2][1]]), Shen.call(Shen.fns["shen.eval-cons"], [Arg6547_0[2][2][1]])]
  : (((Shen.is_type(Arg6547_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6547_0[1])) && (Shen.is_type(Arg6547_0[2], Shen.type_cons) && (Shen.is_type(Arg6547_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6547_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6547_0[2][1]]), Arg6547_0[2][2]]]
  : Arg6547_0))}, 1, [], "shen.eval-cons"];





Shen.fns["shen.<body*>"] = [Shen.type_func, function shen_user_lambda6550(Arg6549) {
  if (Arg6549.length < 1) return [Shen.type_func, shen_user_lambda6550, 1, Arg6549];
  var Arg6549_0 = Arg6549[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<literal*>"], [Arg6549_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6549_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<body*>"];





Shen.fns["shen.<literal*>"] = [Shen.type_func, function shen_user_lambda6552(Arg6551) {
  if (Arg6551.length < 1) return [Shen.type_func, shen_user_lambda6552, 1, Arg6551];
  var Arg6551_0 = Arg6551[0];
  var R0;
  return ((((Shen.is_type(Arg6551_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6551_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6551_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6551_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6551_0[1], Shen.type_cons))
  ? ((R0 = Arg6551_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6551_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6551_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<literal*>"];





Shen.fns["shen.<end*>"] = [Shen.type_func, function shen_user_lambda6554(Arg6553) {
  if (Arg6553.length < 1) return [Shen.type_func, shen_user_lambda6554, 1, Arg6553];
  var Arg6553_0 = Arg6553[0];
  var R0;
  return (((Shen.is_type(Arg6553_0[1], Shen.type_cons))
  ? ((R0 = Arg6553_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6553_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6553_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<end*>"];





Shen.fns["cut"] = [Shen.type_func, function shen_user_lambda6556(Arg6555) {
  if (Arg6555.length < 3) return [Shen.type_func, shen_user_lambda6556, 3, Arg6555];
  var Arg6555_0 = Arg6555[0], Arg6555_1 = Arg6555[1], Arg6555_2 = Arg6555[2];
  var R0;
  return ((R0 = Shen.unwind_tail(Shen.thaw(Arg6555_2))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? Arg6555_0
  : R0))}, 3, [], "cut"];





Shen.fns["shen.insert_modes"] = [Shen.type_func, function shen_user_lambda6558(Arg6557) {
  if (Arg6557.length < 1) return [Shen.type_func, shen_user_lambda6558, 1, Arg6557];
  var Arg6557_0 = Arg6557[0];
  return (((Shen.is_type(Arg6557_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6557_0[1])) && (Shen.is_type(Arg6557_0[2], Shen.type_cons) && (Shen.is_type(Arg6557_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6557_0[2][2][2]))))))
  ? Arg6557_0
  : ((Shen.empty$question$(Arg6557_0))
  ? []
  : ((Shen.is_type(Arg6557_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6557_0[1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_modes"], [Arg6557_0[2]]), [Shen.type_cons, [Shen.type_symbol, "-"], []]]]]
  : Arg6557_0)))}, 1, [], "shen.insert_modes"];





Shen.fns["shen.s-prolog"] = [Shen.type_func, function shen_user_lambda6560(Arg6559) {
  if (Arg6559.length < 1) return [Shen.type_func, shen_user_lambda6560, 1, Arg6559];
  var Arg6559_0 = Arg6559[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6562(Arg6561) {
  if (Arg6561.length < 1) return [Shen.type_func, shen_user_lambda6562, 1, Arg6561];
  var Arg6561_0 = Arg6561[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Arg6561_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.prolog->shen"], [Arg6559_0])]);})}, 1, [], "shen.s-prolog"];





Shen.fns["shen.prolog->shen"] = [Shen.type_func, function shen_user_lambda6564(Arg6563) {
  if (Arg6563.length < 1) return [Shen.type_func, shen_user_lambda6564, 1, Arg6563];
  var Arg6563_0 = Arg6563[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.compile_prolog_procedure"], Shen.call(Shen.fns["shen.group_clauses"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.s-prolog_clause"], Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.head_abstraction"], Arg6563_0])])])]);})}, 1, [], "shen.prolog->shen"];





Shen.fns["shen.s-prolog_clause"] = [Shen.type_func, function shen_user_lambda6566(Arg6565) {
  if (Arg6565.length < 1) return [Shen.type_func, shen_user_lambda6566, 1, Arg6565];
  var Arg6565_0 = Arg6565[0];
  return (((Shen.is_type(Arg6565_0, Shen.type_cons) && (Shen.is_type(Arg6565_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6565_0[2][1])) && (Shen.is_type(Arg6565_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6565_0[2][2][2]))))))
  ? [Shen.type_cons, Arg6565_0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.s-prolog_literal"], Arg6565_0[2][2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_clause"]]);}))}, 1, [], "shen.s-prolog_clause"];





Shen.fns["shen.head_abstraction"] = [Shen.type_func, function shen_user_lambda6568(Arg6567) {
  if (Arg6567.length < 1) return [Shen.type_func, shen_user_lambda6568, 1, Arg6567];
  var Arg6567_0 = Arg6567[0];
  var R0, R1;
  return (((Shen.is_type(Arg6567_0, Shen.type_cons) && (Shen.is_type(Arg6567_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6567_0[2][1])) && (Shen.is_type(Arg6567_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6567_0[2][2][2]) && (Shen.call(Shen.fns["shen.complexity_head"], [Arg6567_0[1]]) < (Shen.globals["shen.*maxcomplexity*"]))))))))
  ? [Shen.type_cons, Arg6567_0, []]
  : (((Shen.is_type(Arg6567_0, Shen.type_cons) && (Shen.is_type(Arg6567_0[1], Shen.type_cons) && (Shen.is_type(Arg6567_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6567_0[2][1])) && (Shen.is_type(Arg6567_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6567_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6570(Arg6569) {
  if (Arg6569.length < 1) return [Shen.type_func, shen_user_lambda6570, 1, Arg6569];
  var Arg6569_0 = Arg6569[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]);})}, 1, [], undefined], Arg6567_0[1][2]])),
  (R1 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6567_0[1][2]])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [R0]), [Shen.type_cons, R1, []]]]),
  (R1 = [Shen.type_cons, [Shen.type_cons, Arg6567_0[1][1], R0], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, R1, Arg6567_0[2][2][1]], []]]]),
  [Shen.type_cons, R1, []])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.head_abstraction"]]);})))}, 1, [], "shen.head_abstraction"];





Shen.fns["shen.complexity_head"] = [Shen.type_func, function shen_user_lambda6572(Arg6571) {
  if (Arg6571.length < 1) return [Shen.type_func, shen_user_lambda6572, 1, Arg6571];
  var Arg6571_0 = Arg6571[0];
  return ((Shen.is_type(Arg6571_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.product"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.complexity"], Arg6571_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.complexity_head"]]);}))}, 1, [], "shen.complexity_head"];





Shen.fns["shen.complexity"] = [Shen.type_func, function shen_user_lambda6574(Arg6573) {
  if (Arg6573.length < 1) return [Shen.type_func, shen_user_lambda6574, 1, Arg6573];
  var Arg6573_0 = Arg6573[0];
  return (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6573_0[2][1][1])) && (Shen.is_type(Arg6573_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6573_0[2][1][2][2][2]) && (Shen.is_type(Arg6573_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6573_0[2][2][2])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [Arg6573_0[2][1]]);})
  : (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6573_0[2][2][1])) && Shen.empty$question$(Arg6573_0[2][2][2]))))))))
  ? (2 * (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6573_0[2][1][1], Arg6573_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6573_0[2][1][2], Arg6573_0[2][2]]]])))
  : (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6573_0[2][2][1])) && Shen.empty$question$(Arg6573_0[2][2][2]))))))))
  ? (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6573_0[2][1][1], Arg6573_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6573_0[2][1][2], Arg6573_0[2][2]]]]))
  : (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6573_0[2][2][2]) && Shen.call(Shen.fns["variable?"], [Arg6573_0[2][1]])))))))
  ? 1
  : (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6573_0[2][2][1])) && Shen.empty$question$(Arg6573_0[2][2][2])))))))
  ? 2
  : (((Shen.is_type(Arg6573_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6573_0[1])) && (Shen.is_type(Arg6573_0[2], Shen.type_cons) && (Shen.is_type(Arg6573_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6573_0[2][2][1])) && Shen.empty$question$(Arg6573_0[2][2][2])))))))
  ? 1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6573_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]]]);})))))))}, 1, [], "shen.complexity"];





Shen.fns["shen.product"] = [Shen.type_func, function shen_user_lambda6576(Arg6575) {
  if (Arg6575.length < 1) return [Shen.type_func, shen_user_lambda6576, 1, Arg6575];
  var Arg6575_0 = Arg6575[0];
  return ((Shen.empty$question$(Arg6575_0))
  ? 1
  : ((Shen.is_type(Arg6575_0, Shen.type_cons))
  ? (Arg6575_0[1] * Shen.call(Shen.fns["shen.product"], [Arg6575_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.product"]]);})))}, 1, [], "shen.product"];





Shen.fns["shen.s-prolog_literal"] = [Shen.type_func, function shen_user_lambda6578(Arg6577) {
  if (Arg6577.length < 1) return [Shen.type_func, shen_user_lambda6578, 1, Arg6577];
  var Arg6577_0 = Arg6577[0];
  return (((Shen.is_type(Arg6577_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6577_0[1])) && (Shen.is_type(Arg6577_0[2], Shen.type_cons) && (Shen.is_type(Arg6577_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6577_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6577_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6577_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6577_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "when"], Arg6577_0[1])) && (Shen.is_type(Arg6577_0[2], Shen.type_cons) && Shen.empty$question$(Arg6577_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6577_0[2][1]]), []]]
  : (((Shen.is_type(Arg6577_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6577_0[1])) && (Shen.is_type(Arg6577_0[2], Shen.type_cons) && (Shen.is_type(Arg6577_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6577_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6577_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6577_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6577_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fwhen"], Arg6577_0[1])) && (Shen.is_type(Arg6577_0[2], Shen.type_cons) && Shen.empty$question$(Arg6577_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6577_0[2][1]]), []]]
  : ((Shen.is_type(Arg6577_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Arg6577_0[1]]), Arg6577_0[2]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_literal"]]);}))))))}, 1, [], "shen.s-prolog_literal"];





Shen.fns["shen.insert_deref"] = [Shen.type_func, function shen_user_lambda6580(Arg6579) {
  if (Arg6579.length < 1) return [Shen.type_func, shen_user_lambda6580, 1, Arg6579];
  var Arg6579_0 = Arg6579[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6579_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.deref"], [Shen.type_cons, Arg6579_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6579_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6579_0[1]]), Shen.call(Shen.fns["shen.insert_deref"], [Arg6579_0[2]])]
  : Arg6579_0))}, 1, [], "shen.insert_deref"];





Shen.fns["shen.insert_lazyderef"] = [Shen.type_func, function shen_user_lambda6582(Arg6581) {
  if (Arg6581.length < 1) return [Shen.type_func, shen_user_lambda6582, 1, Arg6581];
  var Arg6581_0 = Arg6581[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6581_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Arg6581_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6581_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6581_0[1]]), Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6581_0[2]])]
  : Arg6581_0))}, 1, [], "shen.insert_lazyderef"];





Shen.fns["shen.m_prolog_to_s-prolog_predicate"] = [Shen.type_func, function shen_user_lambda6584(Arg6583) {
  if (Arg6583.length < 1) return [Shen.type_func, shen_user_lambda6584, 1, Arg6583];
  var Arg6583_0 = Arg6583[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6583_0)))
  ? [Shen.type_symbol, "unify"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=!"], Arg6583_0)))
  ? [Shen.type_symbol, "unify!"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=="], Arg6583_0)))
  ? [Shen.type_symbol, "identical"]
  : Arg6583_0)))}, 1, [], "shen.m_prolog_to_s-prolog_predicate"];





Shen.fns["shen.group_clauses"] = [Shen.type_func, function shen_user_lambda6586(Arg6585) {
  if (Arg6585.length < 1) return [Shen.type_func, shen_user_lambda6586, 1, Arg6585];
  var Arg6585_0 = Arg6585[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6585_0))
  ? []
  : ((Shen.is_type(Arg6585_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.collect"], [[Shen.type_func, function shen_user_lambda6588(Arg6587) {
  if (Arg6587.length < 2) return [Shen.type_func, shen_user_lambda6588, 2, Arg6587];
  var Arg6587_0 = Arg6587[0], Arg6587_1 = Arg6587[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.same_predicate?"], [Arg6587_0[1], Arg6587_1]);})}, 2, [Arg6585_0], undefined], Arg6585_0])),
  (R1 = Shen.call(Shen.fns["difference"], [Arg6585_0, R0])),
  [Shen.type_cons, R0, Shen.call(Shen.fns["shen.group_clauses"], [R1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.group_clauses"]]);})))}, 1, [], "shen.group_clauses"];





Shen.fns["shen.collect"] = [Shen.type_func, function shen_user_lambda6590(Arg6589) {
  if (Arg6589.length < 2) return [Shen.type_func, shen_user_lambda6590, 2, Arg6589];
  var Arg6589_0 = Arg6589[0], Arg6589_1 = Arg6589[1];
  return ((Shen.empty$question$(Arg6589_1))
  ? []
  : ((Shen.is_type(Arg6589_1, Shen.type_cons))
  ? ((Shen.call(Arg6589_0, [Arg6589_1[1]]))
  ? [Shen.type_cons, Arg6589_1[1], Shen.call(Shen.fns["shen.collect"], [Arg6589_0, Arg6589_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.collect"], [Arg6589_0, Arg6589_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.collect"]]);})))}, 2, [], "shen.collect"];





Shen.fns["shen.same_predicate?"] = [Shen.type_func, function shen_user_lambda6592(Arg6591) {
  if (Arg6591.length < 2) return [Shen.type_func, shen_user_lambda6592, 2, Arg6591];
  var Arg6591_0 = Arg6591[0], Arg6591_1 = Arg6591[1];
  return (((Shen.is_type(Arg6591_0, Shen.type_cons) && (Shen.is_type(Arg6591_0[1], Shen.type_cons) && (Shen.is_type(Arg6591_1, Shen.type_cons) && Shen.is_type(Arg6591_1[1], Shen.type_cons)))))
  ? Shen.$eq$(Arg6591_0[1][1], Arg6591_1[1][1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.same_predicate?"]]);}))}, 2, [], "shen.same_predicate?"];





Shen.fns["shen.compile_prolog_procedure"] = [Shen.type_func, function shen_user_lambda6594(Arg6593) {
  if (Arg6593.length < 1) return [Shen.type_func, shen_user_lambda6594, 1, Arg6593];
  var Arg6593_0 = Arg6593[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.procedure_name"], [Arg6593_0])),
  (R0 = Shen.call(Shen.fns["shen.clauses-to-shen"], [R0, Arg6593_0])),
  R0)}, 1, [], "shen.compile_prolog_procedure"];





Shen.fns["shen.procedure_name"] = [Shen.type_func, function shen_user_lambda6596(Arg6595) {
  if (Arg6595.length < 1) return [Shen.type_func, shen_user_lambda6596, 1, Arg6595];
  var Arg6595_0 = Arg6595[0];
  return (((Shen.is_type(Arg6595_0, Shen.type_cons) && (Shen.is_type(Arg6595_0[1], Shen.type_cons) && Shen.is_type(Arg6595_0[1][1], Shen.type_cons))))
  ? Arg6595_0[1][1][1]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.procedure_name"]]);}))}, 1, [], "shen.procedure_name"];





Shen.fns["shen.clauses-to-shen"] = [Shen.type_func, function shen_user_lambda6598(Arg6597) {
  if (Arg6597.length < 2) return [Shen.type_func, shen_user_lambda6598, 2, Arg6597];
  var Arg6597_0 = Arg6597[0], Arg6597_1 = Arg6597[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.linearise-clause"], Arg6597_1])),
  (R1 = Shen.call(Shen.fns["shen.prolog-aritycheck"], [Arg6597_0, Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6600(Arg6599) {
  if (Arg6599.length < 1) return [Shen.type_func, shen_user_lambda6600, 1, Arg6599];
  var Arg6599_0 = Arg6599[0];
  return (function() {
  return Shen.call_tail(Shen.fns["head"], [Arg6599_0]);})}, 1, [], undefined], Arg6597_1])])),
  (R1 = Shen.call(Shen.fns["shen.parameters"], [R1])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6602(Arg6601) {
  if (Arg6601.length < 2) return [Shen.type_func, shen_user_lambda6602, 2, Arg6601];
  var Arg6601_0 = Arg6601[0], Arg6601_1 = Arg6601[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aum"], [Arg6601_1, Arg6601_0]);})}, 2, [R1], undefined], R0])),
  (R0 = Shen.call(Shen.fns["shen.catch-cut"], [Shen.call(Shen.fns["shen.nest-disjunct"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.aum_to_shen"], R0])])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6597_0, Shen.call(Shen.fns["append"], [R1, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  R1)}, 2, [], "shen.clauses-to-shen"];





Shen.fns["shen.catch-cut"] = [Shen.type_func, function shen_user_lambda6604(Arg6603) {
  if (Arg6603.length < 1) return [Shen.type_func, shen_user_lambda6604, 1, Arg6603];
  var Arg6603_0 = Arg6603[0];
  return (((!Shen.call(Shen.fns["shen.occurs?"], [[Shen.type_symbol, "cut"], Arg6603_0])))
  ? Arg6603_0
  : [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.catchpoint"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.cutpoint"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, Arg6603_0, []]]], []]]]])}, 1, [], "shen.catch-cut"];





Shen.fns["shen.catchpoint"] = [Shen.type_func, function shen_user_lambda6606(Arg6605) {
  if (Arg6605.length < 0) return [Shen.type_func, shen_user_lambda6606, 0, Arg6605];
  return (Shen.globals["shen.*catch*"] = (1 + (Shen.globals["shen.*catch*"])))}, 0, [], "shen.catchpoint"];





Shen.fns["shen.cutpoint"] = [Shen.type_func, function shen_user_lambda6608(Arg6607) {
  if (Arg6607.length < 2) return [Shen.type_func, shen_user_lambda6608, 2, Arg6607];
  var Arg6607_0 = Arg6607[0], Arg6607_1 = Arg6607[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6607_1, Arg6607_0)))
  ? false
  : Arg6607_1)}, 2, [], "shen.cutpoint"];





Shen.fns["shen.nest-disjunct"] = [Shen.type_func, function shen_user_lambda6610(Arg6609) {
  if (Arg6609.length < 1) return [Shen.type_func, shen_user_lambda6610, 1, Arg6609];
  var Arg6609_0 = Arg6609[0];
  return (((Shen.is_type(Arg6609_0, Shen.type_cons) && Shen.empty$question$(Arg6609_0[2])))
  ? Arg6609_0[1]
  : ((Shen.is_type(Arg6609_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lisp-or"], [Arg6609_0[1], Shen.call(Shen.fns["shen.nest-disjunct"], [Arg6609_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.nest-disjunct"]]);})))}, 1, [], "shen.nest-disjunct"];





Shen.fns["shen.lisp-or"] = [Shen.type_func, function shen_user_lambda6612(Arg6611) {
  if (Arg6611.length < 2) return [Shen.type_func, shen_user_lambda6612, 2, Arg6611];
  var Arg6611_0 = Arg6611[0], Arg6611_1 = Arg6611[1];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, Arg6611_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, false, []]]], [Shen.type_cons, Arg6611_1, [Shen.type_cons, [Shen.type_symbol, "Case"], []]]]], []]]]]}, 2, [], "shen.lisp-or"];





Shen.fns["shen.prolog-aritycheck"] = [Shen.type_func, function shen_user_lambda6614(Arg6613) {
  if (Arg6613.length < 2) return [Shen.type_func, shen_user_lambda6614, 2, Arg6613];
  var Arg6613_0 = Arg6613[0], Arg6613_1 = Arg6613[1];
  return (((Shen.is_type(Arg6613_1, Shen.type_cons) && Shen.empty$question$(Arg6613_1[2])))
  ? (Shen.call(Shen.fns["length"], [Arg6613_1[1]]) - 1)
  : (((Shen.is_type(Arg6613_1, Shen.type_cons) && Shen.is_type(Arg6613_1[2], Shen.type_cons)))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6613_1[1]]), Shen.call(Shen.fns["length"], [Arg6613_1[2][1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-aritycheck"], [Arg6613_0, Arg6613_1[2]]);})
  : (function() {
  return Shen.simple_error(("arity error in prolog procedure " + Shen.call(Shen.fns["shen.app"], [[Shen.type_cons, Arg6613_0, []], "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.prolog-aritycheck"]]);})))}, 2, [], "shen.prolog-aritycheck"];





Shen.fns["shen.linearise-clause"] = [Shen.type_func, function shen_user_lambda6616(Arg6615) {
  if (Arg6615.length < 1) return [Shen.type_func, shen_user_lambda6616, 1, Arg6615];
  var Arg6615_0 = Arg6615[0];
  var R0;
  return (((Shen.is_type(Arg6615_0, Shen.type_cons) && (Shen.is_type(Arg6615_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6615_0[2][1])) && (Shen.is_type(Arg6615_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6615_0[2][2][2]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise"], [[Shen.type_cons, Arg6615_0[1], Arg6615_0[2][2]]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.clause_form"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise-clause"]]);}))}, 1, [], "shen.linearise-clause"];





Shen.fns["shen.clause_form"] = [Shen.type_func, function shen_user_lambda6618(Arg6617) {
  if (Arg6617.length < 1) return [Shen.type_func, shen_user_lambda6618, 1, Arg6617];
  var Arg6617_0 = Arg6617[0];
  return (((Shen.is_type(Arg6617_0, Shen.type_cons) && (Shen.is_type(Arg6617_0[2], Shen.type_cons) && Shen.empty$question$(Arg6617_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.explicit_modes"], [Arg6617_0[1]]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.cf_help"], [Arg6617_0[2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.clause_form"]]);}))}, 1, [], "shen.clause_form"];





Shen.fns["shen.explicit_modes"] = [Shen.type_func, function shen_user_lambda6620(Arg6619) {
  if (Arg6619.length < 1) return [Shen.type_func, shen_user_lambda6620, 1, Arg6619];
  var Arg6619_0 = Arg6619[0];
  return ((Shen.is_type(Arg6619_0, Shen.type_cons))
  ? [Shen.type_cons, Arg6619_0[1], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.em_help"], Arg6619_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explicit_modes"]]);}))}, 1, [], "shen.explicit_modes"];





Shen.fns["shen.em_help"] = [Shen.type_func, function shen_user_lambda6622(Arg6621) {
  if (Arg6621.length < 1) return [Shen.type_func, shen_user_lambda6622, 1, Arg6621];
  var Arg6621_0 = Arg6621[0];
  return (((Shen.is_type(Arg6621_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6621_0[1])) && (Shen.is_type(Arg6621_0[2], Shen.type_cons) && (Shen.is_type(Arg6621_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6621_0[2][2][2]))))))
  ? Arg6621_0
  : [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6621_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]])}, 1, [], "shen.em_help"];





Shen.fns["shen.cf_help"] = [Shen.type_func, function shen_user_lambda6624(Arg6623) {
  if (Arg6623.length < 1) return [Shen.type_func, shen_user_lambda6624, 1, Arg6623];
  var Arg6623_0 = Arg6623[0];
  return (((Shen.is_type(Arg6623_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6623_0[1])) && (Shen.is_type(Arg6623_0[2], Shen.type_cons) && (Shen.is_type(Arg6623_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6623_0[2][1][1])) && (Shen.is_type(Arg6623_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6623_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6623_0[2][1][2][2][2]) && (Shen.is_type(Arg6623_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6623_0[2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, (((Shen.globals["shen.*occurs*"]))
  ? [Shen.type_symbol, "unify!"]
  : [Shen.type_symbol, "unify"]), Arg6623_0[2][1][2]], Shen.call(Shen.fns["shen.cf_help"], [Arg6623_0[2][2][1]])]
  : Arg6623_0)}, 1, [], "shen.cf_help"];





Shen.fns["occurs-check"] = [Shen.type_func, function shen_user_lambda6626(Arg6625) {
  if (Arg6625.length < 1) return [Shen.type_func, shen_user_lambda6626, 1, Arg6625];
  var Arg6625_0 = Arg6625[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6625_0)))
  ? (Shen.globals["shen.*occurs*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6625_0)))
  ? (Shen.globals["shen.*occurs*"] = false)
  : (function() {
  return Shen.simple_error("occurs-check expects + or -\x0a");})))}, 1, [], "occurs-check"];





Shen.fns["shen.aum"] = [Shen.type_func, function shen_user_lambda6628(Arg6627) {
  if (Arg6627.length < 2) return [Shen.type_func, shen_user_lambda6628, 2, Arg6627];
  var Arg6627_0 = Arg6627[0], Arg6627_1 = Arg6627[1];
  var R0;
  return (((Shen.is_type(Arg6627_0, Shen.type_cons) && (Shen.is_type(Arg6627_0[1], Shen.type_cons) && (Shen.is_type(Arg6627_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6627_0[2][1])) && (Shen.is_type(Arg6627_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6627_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6627_0[1][2], [Shen.type_cons, Shen.call(Shen.fns["shen.continuation_call"], [Arg6627_0[1][2], Arg6627_0[2][2][1]]), []]]], Arg6627_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [R0, [Shen.type_symbol, "+"]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aum"]]);}))}, 2, [], "shen.aum"];





Shen.fns["shen.continuation_call"] = [Shen.type_func, function shen_user_lambda6630(Arg6629) {
  if (Arg6629.length < 2) return [Shen.type_func, shen_user_lambda6630, 2, Arg6629];
  var Arg6629_0 = Arg6629[0], Arg6629_1 = Arg6629[1];
  var R0, R1;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "ProcessN"], Shen.call(Shen.fns["shen.extract_vars"], [Arg6629_0])]),
  (R1 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6629_1])),
  (R1 = Shen.call(Shen.fns["remove"], [[Shen.type_symbol, "Throwcontrol"], Shen.call(Shen.fns["difference"], [R1, R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cc_help"], [R1, Arg6629_1]);}))}, 2, [], "shen.continuation_call"];





Shen.fns["remove"] = [Shen.type_func, function shen_user_lambda6632(Arg6631) {
  if (Arg6631.length < 2) return [Shen.type_func, shen_user_lambda6632, 2, Arg6631];
  var Arg6631_0 = Arg6631[0], Arg6631_1 = Arg6631[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6631_0, Arg6631_1, []]);})}, 2, [], "remove"];





Shen.fns["shen.remove-h"] = [Shen.type_func, function shen_user_lambda6634(Arg6633) {
  if (Arg6633.length < 3) return [Shen.type_func, shen_user_lambda6634, 3, Arg6633];
  var Arg6633_0 = Arg6633[0], Arg6633_1 = Arg6633[1], Arg6633_2 = Arg6633[2];
  return ((Shen.empty$question$(Arg6633_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg6633_2]);})
  : (((Shen.is_type(Arg6633_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6633_1[1], Arg6633_0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6633_1[1], Arg6633_1[2], Arg6633_2]);})
  : ((Shen.is_type(Arg6633_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6633_0, Arg6633_1[2], [Shen.type_cons, Arg6633_1[1], Arg6633_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remove-h"]]);}))))}, 3, [], "shen.remove-h"];





Shen.fns["shen.cc_help"] = [Shen.type_func, function shen_user_lambda6636(Arg6635) {
  if (Arg6635.length < 2) return [Shen.type_func, shen_user_lambda6636, 2, Arg6635];
  var Arg6635_0 = Arg6635[0], Arg6635_1 = Arg6635[1];
  return (((Shen.empty$question$(Arg6635_0) && Shen.empty$question$(Arg6635_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]]
  : ((Shen.empty$question$(Arg6635_1))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6635_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]], []]]]]]]]]
  : ((Shen.empty$question$(Arg6635_0))
  ? [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6635_1, []]]]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6635_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6635_1, []]]]], []]]]]]]]])))}, 2, [], "shen.cc_help"];





Shen.fns["shen.make_mu_application"] = [Shen.type_func, function shen_user_lambda6638(Arg6637) {
  if (Arg6637.length < 2) return [Shen.type_func, shen_user_lambda6638, 2, Arg6637];
  var Arg6637_0 = Arg6637[0], Arg6637_1 = Arg6637[1];
  return (((Shen.is_type(Arg6637_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6637_0[1])) && (Shen.is_type(Arg6637_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6637_0[2][1]) && (Shen.is_type(Arg6637_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6637_0[2][2][2]) && Shen.empty$question$(Arg6637_1))))))))
  ? Arg6637_0[2][2][1]
  : (((Shen.is_type(Arg6637_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6637_0[1])) && (Shen.is_type(Arg6637_0[2], Shen.type_cons) && (Shen.is_type(Arg6637_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6637_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6637_0[2][2][2]) && Shen.is_type(Arg6637_1, Shen.type_cons))))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6637_0[2][1][1], [Shen.type_cons, Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6637_0[2][1][2], Arg6637_0[2][2]]], Arg6637_1[2]]), []]]], [Shen.type_cons, Arg6637_1[1], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.make_mu_application"]]);})))}, 2, [], "shen.make_mu_application"];





Shen.fns["shen.mu_reduction"] = [Shen.type_func, function shen_user_lambda6640(Arg6639) {
  if (Arg6639.length < 2) return [Shen.type_func, shen_user_lambda6640, 2, Arg6639];
  var Arg6639_0 = Arg6639[0], Arg6639_1 = Arg6639[1];
  var R0;
  return (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.is_type(Arg6639_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6639_0[1][1])) && (Shen.is_type(Arg6639_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6639_0[1][2][1][1])) && (Shen.is_type(Arg6639_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6639_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[1][2][2][2]) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && Shen.empty$question$(Arg6639_0[2][2]))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6639_0[1][2][1][2][1], Arg6639_0[1][2][2]]], Arg6639_0[2]], Arg6639_0[1][2][1][2][2][1]]);})
  : (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.is_type(Arg6639_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6639_0[1][1])) && (Shen.is_type(Arg6639_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[1][2][2][2]) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "_"], Arg6639_0[1][2][1])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [Arg6639_0[1][2][2][1], Arg6639_1]);})
  : (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.is_type(Arg6639_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6639_0[1][1])) && (Shen.is_type(Arg6639_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[1][2][2][2]) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[2][2]) && Shen.call(Shen.fns["shen.ephemeral_variable?"], [Arg6639_0[1][2][1], Arg6639_0[2][1]]))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["subst"], [Arg6639_0[2][1], Arg6639_0[1][2][1], Shen.call(Shen.fns["shen.mu_reduction"], [Arg6639_0[1][2][2][1], Arg6639_1])]);})
  : (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.is_type(Arg6639_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6639_0[1][1])) && (Shen.is_type(Arg6639_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[1][2][2][2]) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[2][2]) && Shen.call(Shen.fns["variable?"], [Arg6639_0[1][2][1]]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6639_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, Arg6639_0[2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6639_0[1][2][2][1], Arg6639_1]), []]]]]]]
  : (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.is_type(Arg6639_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6639_0[1][1])) && (Shen.is_type(Arg6639_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[1][2][2][2]) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6639_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6639_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6639_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6639_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6639_0[1][2][2][1], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.is_type(Arg6639_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6639_0[1][1])) && (Shen.is_type(Arg6639_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[1][2][2][2]) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6639_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6639_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6639_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6639_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6639_0[1][2][2][1], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6639_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6639_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.is_type(Arg6639_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6639_0[1][1])) && (Shen.is_type(Arg6639_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[1][2][2][2]) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6639_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6639_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6639_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6639_0[1][2][1][2], Arg6639_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6639_0, Shen.type_cons) && (Shen.is_type(Arg6639_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6639_0[1][1])) && (Shen.is_type(Arg6639_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6639_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[1][2][2][2]) && (Shen.is_type(Arg6639_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6639_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6639_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6639_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6639_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6639_0[1][2][1][2], Arg6639_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.extract_vars"], [Arg6639_0[1][2][1]]), [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6639_0[1][2][1]])]), [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6639_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], []]]]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : Arg6639_0))))))))}, 2, [], "shen.mu_reduction"];





Shen.fns["shen.rcons_form"] = [Shen.type_func, function shen_user_lambda6642(Arg6641) {
  if (Arg6641.length < 1) return [Shen.type_func, shen_user_lambda6642, 1, Arg6641];
  var Arg6641_0 = Arg6641[0];
  return ((Shen.is_type(Arg6641_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6641_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6641_0[2]]), []]]]
  : Arg6641_0)}, 1, [], "shen.rcons_form"];





Shen.fns["shen.remove_modes"] = [Shen.type_func, function shen_user_lambda6644(Arg6643) {
  if (Arg6643.length < 1) return [Shen.type_func, shen_user_lambda6644, 1, Arg6643];
  var Arg6643_0 = Arg6643[0];
  return (((Shen.is_type(Arg6643_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6643_0[1])) && (Shen.is_type(Arg6643_0[2], Shen.type_cons) && (Shen.is_type(Arg6643_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6643_0[2][2][1])) && Shen.empty$question$(Arg6643_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6643_0[2][1]]);})
  : (((Shen.is_type(Arg6643_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6643_0[1])) && (Shen.is_type(Arg6643_0[2], Shen.type_cons) && (Shen.is_type(Arg6643_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6643_0[2][2][1])) && Shen.empty$question$(Arg6643_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6643_0[2][1]]);})
  : ((Shen.is_type(Arg6643_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove_modes"], [Arg6643_0[1]]), Shen.call(Shen.fns["shen.remove_modes"], [Arg6643_0[2]])]
  : Arg6643_0)))}, 1, [], "shen.remove_modes"];





Shen.fns["shen.ephemeral_variable?"] = [Shen.type_func, function shen_user_lambda6646(Arg6645) {
  if (Arg6645.length < 2) return [Shen.type_func, shen_user_lambda6646, 2, Arg6645];
  var Arg6645_0 = Arg6645[0], Arg6645_1 = Arg6645[1];
  return (Shen.call(Shen.fns["variable?"], [Arg6645_0]) && Shen.call(Shen.fns["variable?"], [Arg6645_1]))}, 2, [], "shen.ephemeral_variable?"];





Shen.fns["shen.prolog_constant?"] = [Shen.type_func, function shen_user_lambda6648(Arg6647) {
  if (Arg6647.length < 1) return [Shen.type_func, shen_user_lambda6648, 1, Arg6647];
  var Arg6647_0 = Arg6647[0];
  return ((Shen.is_type(Arg6647_0, Shen.type_cons))
  ? false
  : true)}, 1, [], "shen.prolog_constant?"];





Shen.fns["shen.aum_to_shen"] = [Shen.type_func, function shen_user_lambda6650(Arg6649) {
  if (Arg6649.length < 1) return [Shen.type_func, shen_user_lambda6650, 1, Arg6649];
  var Arg6649_0 = Arg6649[0];
  return (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.be"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6649_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6649_0[2][2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6649_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6649_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6649_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.result"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.dereferencing"], Arg6649_0[2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6649_0[2][2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6649_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.else"], Arg6649_0[2][2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6649_0[2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6649_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6649_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variable"], Arg6649_0[2][2][2][1])) && Shen.empty$question$(Arg6649_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pvar?"], [Shen.type_cons, Arg6649_0[1], []]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.non-empty"], Arg6649_0[2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6649_0[2][2][2][2][1])) && Shen.empty$question$(Arg6649_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, Arg6649_0[1], []]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6649_0[2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6649_0[2][2][2][2][1]) && (Shen.is_type(Arg6649_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6649_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6649_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.aum_to_shen"], [Arg6649_0[2][2][2][2][2][2][2][1]]);})
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6649_0[2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6649_0[2][2][2][2][1], Shen.type_cons) && (Shen.is_type(Arg6649_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6649_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6649_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6649_0[2][2][2][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [[Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6649_0[2][2][2][2][1][2], Arg6649_0[2][2][2][2][2]]]]]]]), []]]]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6649_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6649_0[2][2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.bindv"], [Shen.type_cons, Arg6649_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.chwild"], [Arg6649_0[2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6649_0[2][2][2][2][2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.unbindv"], [Shen.type_cons, Arg6649_0[2][1], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]]], []]]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "identical"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6649_0[2][2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6649_0[2][2][2][2][1], [Shen.type_cons, Arg6649_0[1], []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.failed!"], Arg6649_0)))
  ? false
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "head"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6649_0[2][2][2]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tail"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6649_0[2][2][2]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.pop"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.stack"], Arg6649_0[2][2][1])) && Shen.empty$question$(Arg6649_0[2][2][2]))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], []]]]
  : (((Shen.is_type(Arg6649_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "call"], Arg6649_0[1])) && (Shen.is_type(Arg6649_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6649_0[2][1])) && (Shen.is_type(Arg6649_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.continuation"], Arg6649_0[2][2][1])) && (Shen.is_type(Arg6649_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6649_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, Shen.call(Shen.fns["shen.call_the_continuation"], [Shen.call(Shen.fns["shen.chwild"], [Arg6649_0[2][2][2][1]]), [Shen.type_symbol, "ProcessN"], [Shen.type_symbol, "Continuation"]]), []]]]
  : Arg6649_0))))))))))))))}, 1, [], "shen.aum_to_shen"];





Shen.fns["shen.chwild"] = [Shen.type_func, function shen_user_lambda6652(Arg6651) {
  if (Arg6651.length < 1) return [Shen.type_func, shen_user_lambda6652, 1, Arg6651];
  var Arg6651_0 = Arg6651[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6651_0, [Shen.type_symbol, "_"])))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]
  : ((Shen.is_type(Arg6651_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.chwild"], Arg6651_0]);})
  : Arg6651_0))}, 1, [], "shen.chwild"];





Shen.fns["shen.newpv"] = [Shen.type_func, function shen_user_lambda6654(Arg6653) {
  if (Arg6653.length < 1) return [Shen.type_func, shen_user_lambda6654, 1, Arg6653];
  var Arg6653_0 = Arg6653[0];
  var R0, R1;
  return ((R0 = (Shen.absvector_ref((Shen.globals["shen.*varcounter*"]), Arg6653_0) + 1)),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6653_0, R0),
  (R1 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6653_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.call(Shen.fns["limit"], [R1]))))
  ? Shen.call(Shen.fns["shen.resizeprocessvector"], [Arg6653_0, R0])
  : [Shen.type_symbol, "shen.skip"]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mk-pvar"], [R0]);}))}, 1, [], "shen.newpv"];





Shen.fns["shen.resizeprocessvector"] = [Shen.type_func, function shen_user_lambda6656(Arg6655) {
  if (Arg6655.length < 2) return [Shen.type_func, shen_user_lambda6656, 2, Arg6655];
  var Arg6655_0 = Arg6655[0], Arg6655_1 = Arg6655[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6655_0)),
  (R0 = Shen.call(Shen.fns["shen.resize-vector"], [R0, (Arg6655_1 + Arg6655_1), [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6655_0, R0))}, 2, [], "shen.resizeprocessvector"];





Shen.fns["shen.resize-vector"] = [Shen.type_func, function shen_user_lambda6658(Arg6657) {
  if (Arg6657.length < 3) return [Shen.type_func, shen_user_lambda6658, 3, Arg6657];
  var Arg6657_0 = Arg6657[0], Arg6657_1 = Arg6657[1], Arg6657_2 = Arg6657[2];
  var R0;
  return ((R0 = Shen.absvector_set(Shen.absvector((1 + Arg6657_1)), 0, Arg6657_1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector"], [Arg6657_0, R0, Shen.call(Shen.fns["limit"], [Arg6657_0]), Arg6657_1, Arg6657_2]);}))}, 3, [], "shen.resize-vector"];





Shen.fns["shen.copy-vector"] = [Shen.type_func, function shen_user_lambda6660(Arg6659) {
  if (Arg6659.length < 5) return [Shen.type_func, shen_user_lambda6660, 5, Arg6659];
  var Arg6659_0 = Arg6659[0], Arg6659_1 = Arg6659[1], Arg6659_2 = Arg6659[2], Arg6659_3 = Arg6659[3], Arg6659_4 = Arg6659[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(1 + Arg6659_2), (Arg6659_3 + 1), Arg6659_4, Shen.call(Shen.fns["shen.copy-vector-stage-1"], [1, Arg6659_0, Arg6659_1, (1 + Arg6659_2)])]);})}, 5, [], "shen.copy-vector"];





Shen.fns["shen.copy-vector-stage-1"] = [Shen.type_func, function shen_user_lambda6662(Arg6661) {
  if (Arg6661.length < 4) return [Shen.type_func, shen_user_lambda6662, 4, Arg6661];
  var Arg6661_0 = Arg6661[0], Arg6661_1 = Arg6661[1], Arg6661_2 = Arg6661[2], Arg6661_3 = Arg6661[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6661_3, Arg6661_0)))
  ? Arg6661_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-1"], [(1 + Arg6661_0), Arg6661_1, Shen.absvector_set(Arg6661_2, Arg6661_0, Shen.absvector_ref(Arg6661_1, Arg6661_0)), Arg6661_3]);}))}, 4, [], "shen.copy-vector-stage-1"];





Shen.fns["shen.copy-vector-stage-2"] = [Shen.type_func, function shen_user_lambda6664(Arg6663) {
  if (Arg6663.length < 4) return [Shen.type_func, shen_user_lambda6664, 4, Arg6663];
  var Arg6663_0 = Arg6663[0], Arg6663_1 = Arg6663[1], Arg6663_2 = Arg6663[2], Arg6663_3 = Arg6663[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6663_1, Arg6663_0)))
  ? Arg6663_3
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(Arg6663_0 + 1), Arg6663_1, Arg6663_2, Shen.absvector_set(Arg6663_3, Arg6663_0, Arg6663_2)]);}))}, 4, [], "shen.copy-vector-stage-2"];





Shen.fns["shen.mk-pvar"] = [Shen.type_func, function shen_user_lambda6666(Arg6665) {
  if (Arg6665.length < 1) return [Shen.type_func, shen_user_lambda6666, 1, Arg6665];
  var Arg6665_0 = Arg6665[0];
  return Shen.absvector_set(Shen.absvector_set(Shen.absvector(2), 0, [Shen.type_symbol, "shen.pvar"]), 1, Arg6665_0)}, 1, [], "shen.mk-pvar"];





Shen.fns["shen.pvar?"] = [Shen.type_func, function shen_user_lambda6668(Arg6667) {
  if (Arg6667.length < 1) return [Shen.type_func, shen_user_lambda6668, 1, Arg6667];
  var Arg6667_0 = Arg6667[0];
  return (Shen.absvector$question$(Arg6667_0) && Shen.unwind_tail(Shen.$eq$(Shen.absvector_ref(Arg6667_0, 0), [Shen.type_symbol, "shen.pvar"])))}, 1, [], "shen.pvar?"];





Shen.fns["shen.bindv"] = [Shen.type_func, function shen_user_lambda6670(Arg6669) {
  if (Arg6669.length < 3) return [Shen.type_func, shen_user_lambda6670, 3, Arg6669];
  var Arg6669_0 = Arg6669[0], Arg6669_1 = Arg6669[1], Arg6669_2 = Arg6669[2];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6669_2)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6669_0, 1), Arg6669_1))}, 3, [], "shen.bindv"];





Shen.fns["shen.unbindv"] = [Shen.type_func, function shen_user_lambda6672(Arg6671) {
  if (Arg6671.length < 2) return [Shen.type_func, shen_user_lambda6672, 2, Arg6671];
  var Arg6671_0 = Arg6671[0], Arg6671_1 = Arg6671[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6671_1)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6671_0, 1), [Shen.type_symbol, "shen.-null-"]))}, 2, [], "shen.unbindv"];





Shen.fns["shen.incinfs"] = [Shen.type_func, function shen_user_lambda6674(Arg6673) {
  if (Arg6673.length < 0) return [Shen.type_func, shen_user_lambda6674, 0, Arg6673];
  return (Shen.globals["shen.*infs*"] = (1 + (Shen.globals["shen.*infs*"])))}, 0, [], "shen.incinfs"];





Shen.fns["shen.call_the_continuation"] = [Shen.type_func, function shen_user_lambda6676(Arg6675) {
  if (Arg6675.length < 3) return [Shen.type_func, shen_user_lambda6676, 3, Arg6675];
  var Arg6675_0 = Arg6675[0], Arg6675_1 = Arg6675[1], Arg6675_2 = Arg6675[2];
  var R0;
  return (((Shen.is_type(Arg6675_0, Shen.type_cons) && (Shen.is_type(Arg6675_0[1], Shen.type_cons) && Shen.empty$question$(Arg6675_0[2]))))
  ? [Shen.type_cons, Arg6675_0[1][1], Shen.call(Shen.fns["append"], [Arg6675_0[1][2], [Shen.type_cons, Arg6675_1, [Shen.type_cons, Arg6675_2, []]]])]
  : (((Shen.is_type(Arg6675_0, Shen.type_cons) && Shen.is_type(Arg6675_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.newcontinuation"], [Arg6675_0[2], Arg6675_1, Arg6675_2])),
  [Shen.type_cons, Arg6675_0[1][1], Shen.call(Shen.fns["append"], [Arg6675_0[1][2], [Shen.type_cons, Arg6675_1, [Shen.type_cons, R0, []]]])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call_the_continuation"]]);})))}, 3, [], "shen.call_the_continuation"];





Shen.fns["shen.newcontinuation"] = [Shen.type_func, function shen_user_lambda6678(Arg6677) {
  if (Arg6677.length < 3) return [Shen.type_func, shen_user_lambda6678, 3, Arg6677];
  var Arg6677_0 = Arg6677[0], Arg6677_1 = Arg6677[1], Arg6677_2 = Arg6677[2];
  return ((Shen.empty$question$(Arg6677_0))
  ? Arg6677_2
  : (((Shen.is_type(Arg6677_0, Shen.type_cons) && Shen.is_type(Arg6677_0[1], Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_cons, Arg6677_0[1][1], Shen.call(Shen.fns["append"], [Arg6677_0[1][2], [Shen.type_cons, Arg6677_1, [Shen.type_cons, Shen.call(Shen.fns["shen.newcontinuation"], [Arg6677_0[2], Arg6677_1, Arg6677_2]), []]]])], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.newcontinuation"]]);})))}, 3, [], "shen.newcontinuation"];





Shen.fns["return"] = [Shen.type_func, function shen_user_lambda6680(Arg6679) {
  if (Arg6679.length < 3) return [Shen.type_func, shen_user_lambda6680, 3, Arg6679];
  var Arg6679_0 = Arg6679[0], Arg6679_1 = Arg6679[1], Arg6679_2 = Arg6679[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6679_0, Arg6679_1]);})}, 3, [], "return"];





Shen.fns["shen.measure&return"] = [Shen.type_func, function shen_user_lambda6682(Arg6681) {
  if (Arg6681.length < 3) return [Shen.type_func, shen_user_lambda6682, 3, Arg6681];
  var Arg6681_0 = Arg6681[0], Arg6681_1 = Arg6681[1], Arg6681_2 = Arg6681[2];
  return (Shen.pr(Shen.call(Shen.fns["shen.app"], [(Shen.globals["shen.*infs*"]), " inferences\x0a", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6681_0, Arg6681_1]);}))}, 3, [], "shen.measure&return"];





Shen.fns["unify"] = [Shen.type_func, function shen_user_lambda6684(Arg6683) {
  if (Arg6683.length < 4) return [Shen.type_func, shen_user_lambda6684, 4, Arg6683];
  var Arg6683_0 = Arg6683[0], Arg6683_1 = Arg6683[1], Arg6683_2 = Arg6683[2], Arg6683_3 = Arg6683[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6683_0, Arg6683_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6683_1, Arg6683_2]), Arg6683_2, Arg6683_3]);})}, 4, [], "unify"];





Shen.fns["shen.lzy="] = [Shen.type_func, function shen_user_lambda6686(Arg6685) {
  if (Arg6685.length < 4) return [Shen.type_func, shen_user_lambda6686, 4, Arg6685];
  var Arg6685_0 = Arg6685[0], Arg6685_1 = Arg6685[1], Arg6685_2 = Arg6685[2], Arg6685_3 = Arg6685[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6685_1, Arg6685_0)))
  ? Shen.thaw(Arg6685_3)
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6685_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6685_0, Arg6685_1, Arg6685_2, Arg6685_3]);})
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6685_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6685_1, Arg6685_0, Arg6685_2, Arg6685_3]);})
  : (((Shen.is_type(Arg6685_0, Shen.type_cons) && Shen.is_type(Arg6685_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6685_0[1], Arg6685_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6685_1[1], Arg6685_2]), Arg6685_2, (new Shen.Freeze([Arg6685_0, Arg6685_1, Arg6685_2, Arg6685_3], function(Arg6687) {
  var Arg6687_0 = Arg6687[0], Arg6687_1 = Arg6687[1], Arg6687_2 = Arg6687[2], Arg6687_3 = Arg6687[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6687_0[2], Arg6687_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6687_1[2], Arg6687_2]), Arg6687_2, Arg6687_3]);});})}))]);})
  : false))))}, 4, [], "shen.lzy="];





Shen.fns["shen.deref"] = [Shen.type_func, function shen_user_lambda6690(Arg6689) {
  if (Arg6689.length < 2) return [Shen.type_func, shen_user_lambda6690, 2, Arg6689];
  var Arg6689_0 = Arg6689[0], Arg6689_1 = Arg6689[1];
  var R0;
  return ((Shen.is_type(Arg6689_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6689_0[1], Arg6689_1]), Shen.call(Shen.fns["shen.deref"], [Arg6689_0[2], Arg6689_1])]
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6689_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6689_0, Arg6689_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6689_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [R0, Arg6689_1]);})))
  : Arg6689_0))}, 2, [], "shen.deref"];





Shen.fns["shen.lazyderef"] = [Shen.type_func, function shen_user_lambda6692(Arg6691) {
  if (Arg6691.length < 2) return [Shen.type_func, shen_user_lambda6692, 2, Arg6691];
  var Arg6691_0 = Arg6691[0], Arg6691_1 = Arg6691[1];
  var R0;
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg6691_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6691_0, Arg6691_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6691_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lazyderef"], [R0, Arg6691_1]);})))
  : Arg6691_0)}, 2, [], "shen.lazyderef"];





Shen.fns["shen.valvector"] = [Shen.type_func, function shen_user_lambda6694(Arg6693) {
  if (Arg6693.length < 2) return [Shen.type_func, shen_user_lambda6694, 2, Arg6693];
  var Arg6693_0 = Arg6693[0], Arg6693_1 = Arg6693[1];
  return Shen.absvector_ref(Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6693_1), Shen.absvector_ref(Arg6693_0, 1))}, 2, [], "shen.valvector"];





Shen.fns["unify!"] = [Shen.type_func, function shen_user_lambda6696(Arg6695) {
  if (Arg6695.length < 4) return [Shen.type_func, shen_user_lambda6696, 4, Arg6695];
  var Arg6695_0 = Arg6695[0], Arg6695_1 = Arg6695[1], Arg6695_2 = Arg6695[2], Arg6695_3 = Arg6695[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6695_0, Arg6695_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6695_1, Arg6695_2]), Arg6695_2, Arg6695_3]);})}, 4, [], "unify!"];





Shen.fns["shen.lzy=!"] = [Shen.type_func, function shen_user_lambda6698(Arg6697) {
  if (Arg6697.length < 4) return [Shen.type_func, shen_user_lambda6698, 4, Arg6697];
  var Arg6697_0 = Arg6697[0], Arg6697_1 = Arg6697[1], Arg6697_2 = Arg6697[2], Arg6697_3 = Arg6697[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6697_1, Arg6697_0)))
  ? Shen.thaw(Arg6697_3)
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6697_0]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6697_0, Shen.call(Shen.fns["shen.deref"], [Arg6697_1, Arg6697_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6697_0, Arg6697_1, Arg6697_2, Arg6697_3]);})
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6697_1]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6697_1, Shen.call(Shen.fns["shen.deref"], [Arg6697_0, Arg6697_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6697_1, Arg6697_0, Arg6697_2, Arg6697_3]);})
  : (((Shen.is_type(Arg6697_0, Shen.type_cons) && Shen.is_type(Arg6697_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6697_0[1], Arg6697_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6697_1[1], Arg6697_2]), Arg6697_2, (new Shen.Freeze([Arg6697_0, Arg6697_1, Arg6697_2, Arg6697_3], function(Arg6699) {
  var Arg6699_0 = Arg6699[0], Arg6699_1 = Arg6699[1], Arg6699_2 = Arg6699[2], Arg6699_3 = Arg6699[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6699_0[2], Arg6699_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6699_1[2], Arg6699_2]), Arg6699_2, Arg6699_3]);});})}))]);})
  : false))))}, 4, [], "shen.lzy=!"];





Shen.fns["shen.occurs?"] = [Shen.type_func, function shen_user_lambda6702(Arg6701) {
  if (Arg6701.length < 2) return [Shen.type_func, shen_user_lambda6702, 2, Arg6701];
  var Arg6701_0 = Arg6701[0], Arg6701_1 = Arg6701[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6701_1, Arg6701_0)))
  ? true
  : ((Shen.is_type(Arg6701_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.occurs?"], [Arg6701_0, Arg6701_1[1]]) || Shen.call(Shen.fns["shen.occurs?"], [Arg6701_0, Arg6701_1[2]]))
  : false))}, 2, [], "shen.occurs?"];





Shen.fns["identical"] = [Shen.type_func, function shen_user_lambda6704(Arg6703) {
  if (Arg6703.length < 4) return [Shen.type_func, shen_user_lambda6704, 4, Arg6703];
  var Arg6703_0 = Arg6703[0], Arg6703_1 = Arg6703[1], Arg6703_2 = Arg6703[2], Arg6703_3 = Arg6703[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6703_0, Arg6703_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6703_1, Arg6703_2]), Arg6703_2, Arg6703_3]);})}, 4, [], "identical"];





Shen.fns["shen.lzy=="] = [Shen.type_func, function shen_user_lambda6706(Arg6705) {
  if (Arg6705.length < 4) return [Shen.type_func, shen_user_lambda6706, 4, Arg6705];
  var Arg6705_0 = Arg6705[0], Arg6705_1 = Arg6705[1], Arg6705_2 = Arg6705[2], Arg6705_3 = Arg6705[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6705_1, Arg6705_0)))
  ? Shen.thaw(Arg6705_3)
  : (((Shen.is_type(Arg6705_0, Shen.type_cons) && Shen.is_type(Arg6705_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6705_0[1], Arg6705_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6705_1[1], Arg6705_2]), Arg6705_2, (new Shen.Freeze([Arg6705_0, Arg6705_1, Arg6705_2, Arg6705_3], function(Arg6707) {
  var Arg6707_0 = Arg6707[0], Arg6707_1 = Arg6707[1], Arg6707_2 = Arg6707[2], Arg6707_3 = Arg6707[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Arg6707_0[2], Arg6707_1[2], Arg6707_2, Arg6707_3]);});})}))]);})
  : false))}, 4, [], "shen.lzy=="];





Shen.fns["shen.pvar"] = [Shen.type_func, function shen_user_lambda6710(Arg6709) {
  if (Arg6709.length < 1) return [Shen.type_func, shen_user_lambda6710, 1, Arg6709];
  var Arg6709_0 = Arg6709[0];
  return ("Var" + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg6709_0, 1), "", [Shen.type_symbol, "shen.a"]]))}, 1, [], "shen.pvar"];





Shen.fns["bind"] = [Shen.type_func, function shen_user_lambda6712(Arg6711) {
  if (Arg6711.length < 4) return [Shen.type_func, shen_user_lambda6712, 4, Arg6711];
  var Arg6711_0 = Arg6711[0], Arg6711_1 = Arg6711[1], Arg6711_2 = Arg6711[2], Arg6711_3 = Arg6711[3];
  var R0;
  return (Shen.call(Shen.fns["shen.bindv"], [Arg6711_0, Arg6711_1, Arg6711_2]),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6711_3))),
  Shen.call(Shen.fns["shen.unbindv"], [Arg6711_0, Arg6711_2]),
  R0)}, 4, [], "bind"];





Shen.fns["fwhen"] = [Shen.type_func, function shen_user_lambda6714(Arg6713) {
  if (Arg6713.length < 3) return [Shen.type_func, shen_user_lambda6714, 3, Arg6713];
  var Arg6713_0 = Arg6713[0], Arg6713_1 = Arg6713[1], Arg6713_2 = Arg6713[2];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg6713_0)))
  ? Shen.thaw(Arg6713_2)
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg6713_0)))
  ? false
  : (function() {
  return Shen.simple_error(("fwhen expects a boolean: not " + Shen.call(Shen.fns["shen.app"], [Arg6713_0, "%", [Shen.type_symbol, "shen.s"]])));})))}, 3, [], "fwhen"];





Shen.fns["call"] = [Shen.type_func, function shen_user_lambda6716(Arg6715) {
  if (Arg6715.length < 3) return [Shen.type_func, shen_user_lambda6716, 3, Arg6715];
  var Arg6715_0 = Arg6715[0], Arg6715_1 = Arg6715[1], Arg6715_2 = Arg6715[2];
  return ((Shen.is_type(Arg6715_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6715_0[1], Arg6715_1])]), Arg6715_0[2], Arg6715_1, Arg6715_2]);})
  : false)}, 3, [], "call"];





Shen.fns["shen.call-help"] = [Shen.type_func, function shen_user_lambda6718(Arg6717) {
  if (Arg6717.length < 4) return [Shen.type_func, shen_user_lambda6718, 4, Arg6717];
  var Arg6717_0 = Arg6717[0], Arg6717_1 = Arg6717[1], Arg6717_2 = Arg6717[2], Arg6717_3 = Arg6717[3];
  return ((Shen.empty$question$(Arg6717_1))
  ? (function() {
  return Shen.call_tail(Arg6717_0, [Arg6717_2, Arg6717_3]);})
  : ((Shen.is_type(Arg6717_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Arg6717_0, [Arg6717_1[1]]), Arg6717_1[2], Arg6717_2, Arg6717_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-help"]]);})))}, 4, [], "shen.call-help"];





Shen.fns["shen.intprolog"] = [Shen.type_func, function shen_user_lambda6720(Arg6719) {
  if (Arg6719.length < 1) return [Shen.type_func, shen_user_lambda6720, 1, Arg6719];
  var Arg6719_0 = Arg6719[0];
  var R0;
  return (((Shen.is_type(Arg6719_0, Shen.type_cons) && Shen.is_type(Arg6719_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help"], [Arg6719_0[1][1], Shen.call(Shen.fns["shen.insert-prolog-variables"], [[Shen.type_cons, Arg6719_0[1][2], [Shen.type_cons, Arg6719_0[2], []]], R0]), R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog"]]);}))}, 1, [], "shen.intprolog"];





Shen.fns["shen.intprolog-help"] = [Shen.type_func, function shen_user_lambda6722(Arg6721) {
  if (Arg6721.length < 3) return [Shen.type_func, shen_user_lambda6722, 3, Arg6721];
  var Arg6721_0 = Arg6721[0], Arg6721_1 = Arg6721[1], Arg6721_2 = Arg6721[2];
  return (((Shen.is_type(Arg6721_1, Shen.type_cons) && (Shen.is_type(Arg6721_1[2], Shen.type_cons) && Shen.empty$question$(Arg6721_1[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Arg6721_0, Arg6721_1[1], Arg6721_1[2][1], Arg6721_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help"]]);}))}, 3, [], "shen.intprolog-help"];





Shen.fns["shen.intprolog-help-help"] = [Shen.type_func, function shen_user_lambda6724(Arg6723) {
  if (Arg6723.length < 4) return [Shen.type_func, shen_user_lambda6724, 4, Arg6723];
  var Arg6723_0 = Arg6723[0], Arg6723_1 = Arg6723[1], Arg6723_2 = Arg6723[2], Arg6723_3 = Arg6723[3];
  return ((Shen.empty$question$(Arg6723_1))
  ? (function() {
  return Shen.call_tail(Arg6723_0, [Arg6723_3, (new Shen.Freeze([Arg6723_0, Arg6723_1, Arg6723_2, Arg6723_3], function(Arg6725) {
  var Arg6725_0 = Arg6725[0], Arg6725_1 = Arg6725[1], Arg6725_2 = Arg6725[2], Arg6725_3 = Arg6725[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6725_2, Arg6725_3]);});})}))]);})
  : ((Shen.is_type(Arg6723_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Shen.call(Arg6723_0, [Arg6723_1[1]]), Arg6723_1[2], Arg6723_2, Arg6723_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help-help"]]);})))}, 4, [], "shen.intprolog-help-help"];





Shen.fns["shen.call-rest"] = [Shen.type_func, function shen_user_lambda6728(Arg6727) {
  if (Arg6727.length < 2) return [Shen.type_func, shen_user_lambda6728, 2, Arg6727];
  var Arg6727_0 = Arg6727[0], Arg6727_1 = Arg6727[1];
  return ((Shen.empty$question$(Arg6727_0))
  ? true
  : (((Shen.is_type(Arg6727_0, Shen.type_cons) && (Shen.is_type(Arg6727_0[1], Shen.type_cons) && Shen.is_type(Arg6727_0[1][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [[Shen.type_cons, [Shen.type_cons, Shen.call(Arg6727_0[1][1], [Arg6727_0[1][2][1]]), Arg6727_0[1][2][2]], Arg6727_0[2]], Arg6727_1]);})
  : (((Shen.is_type(Arg6727_0, Shen.type_cons) && (Shen.is_type(Arg6727_0[1], Shen.type_cons) && Shen.empty$question$(Arg6727_0[1][2]))))
  ? (function() {
  return Shen.call_tail(Arg6727_0[1][1], [Arg6727_1, (new Shen.Freeze([Arg6727_0, Arg6727_1], function(Arg6729) {
  var Arg6729_0 = Arg6729[0], Arg6729_1 = Arg6729[1];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6729_0[2], Arg6729_1]);});})}))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-rest"]]);}))))}, 2, [], "shen.call-rest"];





Shen.fns["shen.start-new-prolog-process"] = [Shen.type_func, function shen_user_lambda6732(Arg6731) {
  if (Arg6731.length < 0) return [Shen.type_func, shen_user_lambda6732, 0, Arg6731];
  var R0;
  return ((R0 = (Shen.globals["shen.*process-counter*"] = (1 + (Shen.globals["shen.*process-counter*"])))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise-prolog"], [R0]);}))}, 0, [], "shen.start-new-prolog-process"];





Shen.fns["shen.insert-prolog-variables"] = [Shen.type_func, function shen_user_lambda6734(Arg6733) {
  if (Arg6733.length < 2) return [Shen.type_func, shen_user_lambda6734, 2, Arg6733];
  var Arg6733_0 = Arg6733[0], Arg6733_1 = Arg6733[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6733_0, Shen.call(Shen.fns["shen.flatten"], [Arg6733_0]), Arg6733_1]);})}, 2, [], "shen.insert-prolog-variables"];





Shen.fns["shen.insert-prolog-variables-help"] = [Shen.type_func, function shen_user_lambda6736(Arg6735) {
  if (Arg6735.length < 3) return [Shen.type_func, shen_user_lambda6736, 3, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6735_1))
  ? Arg6735_0
  : (((Shen.is_type(Arg6735_1, Shen.type_cons) && Shen.call(Shen.fns["variable?"], [Arg6735_1[1]])))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  (R0 = Shen.call(Shen.fns["subst"], [R0, Arg6735_1[1], Arg6735_0])),
  (R1 = Shen.call(Shen.fns["remove"], [Arg6735_1[1], Arg6735_1[2]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [R0, R1, Arg6735_2]);}))
  : ((Shen.is_type(Arg6735_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6735_0, Arg6735_1[2], Arg6735_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-prolog-variables-help"]]);}))))}, 3, [], "shen.insert-prolog-variables-help"];





Shen.fns["shen.initialise-prolog"] = [Shen.type_func, function shen_user_lambda6738(Arg6737) {
  if (Arg6737.length < 1) return [Shen.type_func, shen_user_lambda6738, 1, Arg6737];
  var Arg6737_0 = Arg6737[0];
  return (Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6737_0, Shen.call(Shen.fns["shen.fillvector"], [Shen.vector(10), 1, 10, [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6737_0, 1),
  Arg6737_0)}, 1, [], "shen.initialise-prolog"];










Shen.fns["shen.f_error"] = [Shen.type_func, function shen_user_lambda7292(Arg7291) {
  if (Arg7291.length < 1) return [Shen.type_func, shen_user_lambda7292, 1, Arg7291];
  var Arg7291_0 = Arg7291[0];
  return (Shen.pr(("partial function " + Shen.call(Shen.fns["shen.app"], [Arg7291_0, ";\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  ((((!Shen.call(Shen.fns["shen.tracked?"], [Arg7291_0])) && Shen.call(Shen.fns["y-or-n?"], [("track " + Shen.call(Shen.fns["shen.app"], [Arg7291_0, "? ", [Shen.type_symbol, "shen.a"]]))])))
  ? Shen.call(Shen.fns["shen.track-function"], [Shen.call(Shen.fns["ps"], [Arg7291_0])])
  : [Shen.type_symbol, "shen.ok"]),
  (function() {
  return Shen.simple_error("aborted");}))}, 1, [], "shen.f_error"];





Shen.fns["shen.tracked?"] = [Shen.type_func, function shen_user_lambda7294(Arg7293) {
  if (Arg7293.length < 1) return [Shen.type_func, shen_user_lambda7294, 1, Arg7293];
  var Arg7293_0 = Arg7293[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7293_0, (Shen.globals["shen.*tracking*"])]);})}, 1, [], "shen.tracked?"];





Shen.fns["track"] = [Shen.type_func, function shen_user_lambda7296(Arg7295) {
  if (Arg7295.length < 1) return [Shen.type_func, shen_user_lambda7296, 1, Arg7295];
  var Arg7295_0 = Arg7295[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["ps"], [Arg7295_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.track-function"], [R0]);}))}, 1, [], "track"];





Shen.fns["shen.track-function"] = [Shen.type_func, function shen_user_lambda7298(Arg7297) {
  if (Arg7297.length < 1) return [Shen.type_func, shen_user_lambda7298, 1, Arg7297];
  var Arg7297_0 = Arg7297[0];
  var R0;
  return (((Shen.is_type(Arg7297_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7297_0[1])) && (Shen.is_type(Arg7297_0[2], Shen.type_cons) && (Shen.is_type(Arg7297_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7297_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7297_0[2][2][2][2])))))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7297_0[2][1], [Shen.type_cons, Arg7297_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-tracking-code"], [Arg7297_0[2][1], Arg7297_0[2][2][1], Arg7297_0[2][2][2][1]]), []]]]]),
  (R0 = Shen.call(Shen.fns["eval"], [R0])),
  (Shen.globals["shen.*tracking*"] = [Shen.type_cons, R0, (Shen.globals["shen.*tracking*"])]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.track-function"]]);}))}, 1, [], "shen.track-function"];





Shen.fns["shen.insert-tracking-code"] = [Shen.type_func, function shen_user_lambda7300(Arg7299) {
  if (Arg7299.length < 3) return [Shen.type_func, shen_user_lambda7300, 3, Arg7299];
  var Arg7299_0 = Arg7299[0], Arg7299_1 = Arg7299[1], Arg7299_2 = Arg7299[2];
  return [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.input-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg7299_0, [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg7299_1]), []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7299_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.output-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg7299_0, [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]], []]]], []]]]], []]]], []]]], []]]]}, 3, [], "shen.insert-tracking-code"];





Shen.fns["reg-kl.shen-toplevel-7302"] = [Shen.type_func, function shen_user_lambda7303(Arg7301) {
  if (Arg7301.length < 0) return [Shen.type_func, shen_user_lambda7303, 0, Arg7301];
  return (Shen.globals["shen.*step*"] = false)}, 0, [], "reg-kl.shen-toplevel-7302"];

Shen.call_toplevel("reg-kl.shen-toplevel-7302")





Shen.fns["step"] = [Shen.type_func, function shen_user_lambda7305(Arg7304) {
  if (Arg7304.length < 1) return [Shen.type_func, shen_user_lambda7305, 1, Arg7304];
  var Arg7304_0 = Arg7304[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7304_0)))
  ? (Shen.globals["shen.*step*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7304_0)))
  ? (Shen.globals["shen.*step*"] = false)
  : (function() {
  return Shen.simple_error("step expects a + or a -.\x0a");})))}, 1, [], "step"];





Shen.fns["spy"] = [Shen.type_func, function shen_user_lambda7307(Arg7306) {
  if (Arg7306.length < 1) return [Shen.type_func, shen_user_lambda7307, 1, Arg7306];
  var Arg7306_0 = Arg7306[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7306_0)))
  ? (Shen.globals["shen.*spy*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7306_0)))
  ? (Shen.globals["shen.*spy*"] = false)
  : (function() {
  return Shen.simple_error("spy expects a + or a -.\x0a");})))}, 1, [], "spy"];





Shen.fns["shen.terpri-or-read-char"] = [Shen.type_func, function shen_user_lambda7309(Arg7308) {
  if (Arg7308.length < 0) return [Shen.type_func, shen_user_lambda7309, 0, Arg7308];
  return (((Shen.globals["shen.*step*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check-byte"], [Shen.read_byte((Shen.globals["*stinput*"]))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 0, [], "shen.terpri-or-read-char"];





Shen.fns["shen.check-byte"] = [Shen.type_func, function shen_user_lambda7311(Arg7310) {
  if (Arg7310.length < 1) return [Shen.type_func, shen_user_lambda7311, 1, Arg7310];
  var Arg7310_0 = Arg7310[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7310_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("aborted");})
  : true)}, 1, [], "shen.check-byte"];





Shen.fns["shen.input-track"] = [Shen.type_func, function shen_user_lambda7313(Arg7312) {
  if (Arg7312.length < 3) return [Shen.type_func, shen_user_lambda7313, 3, Arg7312];
  var Arg7312_0 = Arg7312[0], Arg7312_1 = Arg7312[1], Arg7312_2 = Arg7312[2];
  return (Shen.pr(("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7312_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg7312_0, ("> Inputs to " + Shen.call(Shen.fns["shen.app"], [Arg7312_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7312_0]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg7312_2]);}))}, 3, [], "shen.input-track"];





Shen.fns["shen.recursively-print"] = [Shen.type_func, function shen_user_lambda7315(Arg7314) {
  if (Arg7314.length < 1) return [Shen.type_func, shen_user_lambda7315, 1, Arg7314];
  var Arg7314_0 = Arg7314[0];
  return ((Shen.empty$question$(Arg7314_0))
  ? (function() {
  return Shen.pr(" ==>", Shen.call(Shen.fns["stoutput"], []));})
  : ((Shen.is_type(Arg7314_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["print"], [Arg7314_0[1]]),
  Shen.pr(", ", Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg7314_0[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursively-print"]]);})))}, 1, [], "shen.recursively-print"];





Shen.fns["shen.spaces"] = [Shen.type_func, function shen_user_lambda7317(Arg7316) {
  if (Arg7316.length < 1) return [Shen.type_func, shen_user_lambda7317, 1, Arg7316];
  var Arg7316_0 = Arg7316[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7316_0)))
  ? ""
  : (" " + Shen.call(Shen.fns["shen.spaces"], [(Arg7316_0 - 1)])))}, 1, [], "shen.spaces"];





Shen.fns["shen.output-track"] = [Shen.type_func, function shen_user_lambda7319(Arg7318) {
  if (Arg7318.length < 3) return [Shen.type_func, shen_user_lambda7319, 3, Arg7318];
  var Arg7318_0 = Arg7318[0], Arg7318_1 = Arg7318[1], Arg7318_2 = Arg7318[2];
  return (function() {
  return Shen.pr(("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7318_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg7318_0, ("> Output from " + Shen.call(Shen.fns["shen.app"], [Arg7318_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7318_0]), ("==> " + Shen.call(Shen.fns["shen.app"], [Arg7318_2, "", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));})}, 3, [], "shen.output-track"];





Shen.fns["untrack"] = [Shen.type_func, function shen_user_lambda7321(Arg7320) {
  if (Arg7320.length < 1) return [Shen.type_func, shen_user_lambda7321, 1, Arg7320];
  var Arg7320_0 = Arg7320[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["ps"], [Arg7320_0])]);})}, 1, [], "untrack"];





Shen.fns["profile"] = [Shen.type_func, function shen_user_lambda7323(Arg7322) {
  if (Arg7322.length < 1) return [Shen.type_func, shen_user_lambda7323, 1, Arg7322];
  var Arg7322_0 = Arg7322[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.profile-help"], [Shen.call(Shen.fns["ps"], [Arg7322_0])]);})}, 1, [], "profile"];





Shen.fns["shen.profile-help"] = [Shen.type_func, function shen_user_lambda7325(Arg7324) {
  if (Arg7324.length < 1) return [Shen.type_func, shen_user_lambda7325, 1, Arg7324];
  var Arg7324_0 = Arg7324[0];
  var R0, R1;
  return (((Shen.is_type(Arg7324_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7324_0[1])) && (Shen.is_type(Arg7324_0[2], Shen.type_cons) && (Shen.is_type(Arg7324_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7324_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7324_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.f"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7324_0[2][1], [Shen.type_cons, Arg7324_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.profile-func"], [Arg7324_0[2][1], Arg7324_0[2][2][1], [Shen.type_cons, R0, Arg7324_0[2][2][1]]]), []]]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, Arg7324_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["subst"], [R0, Arg7324_0[2][1], Arg7324_0[2][2][2][1]]), []]]]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R1]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R0]),
  Arg7324_0[2][1])
  : (function() {
  return Shen.simple_error("Cannot profile.\x0a");}))}, 1, [], "shen.profile-help"];





Shen.fns["unprofile"] = [Shen.type_func, function shen_user_lambda7327(Arg7326) {
  if (Arg7326.length < 1) return [Shen.type_func, shen_user_lambda7327, 1, Arg7326];
  var Arg7326_0 = Arg7326[0];
  return (function() {
  return Shen.call_tail(Shen.fns["untrack"], [Arg7326_0]);})}, 1, [], "unprofile"];





Shen.fns["shen.profile-func"] = [Shen.type_func, function shen_user_lambda7329(Arg7328) {
  if (Arg7328.length < 3) return [Shen.type_func, shen_user_lambda7329, 3, Arg7328];
  var Arg7328_0 = Arg7328[0], Arg7328_1 = Arg7328[1], Arg7328_2 = Arg7328[2];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7328_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Record"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.put-profile"], [Shen.type_cons, Arg7328_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.get-profile"], [Shen.type_cons, Arg7328_0, []]], [Shen.type_cons, [Shen.type_symbol, "Finish"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]]]], []]]]]}, 3, [], "shen.profile-func"];





Shen.fns["profile-results"] = [Shen.type_func, function shen_user_lambda7331(Arg7330) {
  if (Arg7330.length < 1) return [Shen.type_func, shen_user_lambda7331, 1, Arg7330];
  var Arg7330_0 = Arg7330[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.get-profile"], [Arg7330_0])),
  Shen.call(Shen.fns["shen.put-profile"], [Arg7330_0, 0]),
  [Shen.fns['shen.tuple'], Arg7330_0, R0])}, 1, [], "profile-results"];





Shen.fns["shen.get-profile"] = [Shen.type_func, function shen_user_lambda7333(Arg7332) {
  if (Arg7332.length < 1) return [Shen.type_func, shen_user_lambda7333, 1, Arg7332];
  var Arg7332_0 = Arg7332[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7332_0, [Shen.type_symbol, "profile"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7335(Arg7334) {
  if (Arg7334.length < 1) return [Shen.type_func, shen_user_lambda7335, 1, Arg7334];
  var Arg7334_0 = Arg7334[0];
  return 0}, 1, [], undefined]);})}, 1, [], "shen.get-profile"];





Shen.fns["shen.put-profile"] = [Shen.type_func, function shen_user_lambda7337(Arg7336) {
  if (Arg7336.length < 2) return [Shen.type_func, shen_user_lambda7337, 2, Arg7336];
  var Arg7336_0 = Arg7336[0], Arg7336_1 = Arg7336[1];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg7336_0, [Shen.type_symbol, "profile"], Arg7336_1, (Shen.globals["*property-vector*"])]);})}, 2, [], "shen.put-profile"];










Shen.fns["reg-kl.shen-toplevel-6327"] = [Shen.type_func, function shen_user_lambda6328(Arg6326) {
  if (Arg6326.length < 0) return [Shen.type_func, shen_user_lambda6328, 0, Arg6326];
  return (Shen.globals["shen.*installing-kl*"] = false)}, 0, [], "reg-kl.shen-toplevel-6327"];

Shen.call_toplevel("reg-kl.shen-toplevel-6327")





Shen.fns["reg-kl.shen-toplevel-6330"] = [Shen.type_func, function shen_user_lambda6331(Arg6329) {
  if (Arg6329.length < 0) return [Shen.type_func, shen_user_lambda6331, 0, Arg6329];
  return (Shen.globals["shen.*history*"] = [])}, 0, [], "reg-kl.shen-toplevel-6330"];

Shen.call_toplevel("reg-kl.shen-toplevel-6330")





Shen.fns["reg-kl.shen-toplevel-6333"] = [Shen.type_func, function shen_user_lambda6334(Arg6332) {
  if (Arg6332.length < 0) return [Shen.type_func, shen_user_lambda6334, 0, Arg6332];
  return (Shen.globals["shen.*tc*"] = false)}, 0, [], "reg-kl.shen-toplevel-6333"];

Shen.call_toplevel("reg-kl.shen-toplevel-6333")





Shen.fns["reg-kl.shen-toplevel-6336"] = [Shen.type_func, function shen_user_lambda6337(Arg6335) {
  if (Arg6335.length < 0) return [Shen.type_func, shen_user_lambda6337, 0, Arg6335];
  return (Shen.globals["*property-vector*"] = Shen.vector(20000))}, 0, [], "reg-kl.shen-toplevel-6336"];

Shen.call_toplevel("reg-kl.shen-toplevel-6336")





Shen.fns["reg-kl.shen-toplevel-6339"] = [Shen.type_func, function shen_user_lambda6340(Arg6338) {
  if (Arg6338.length < 0) return [Shen.type_func, shen_user_lambda6340, 0, Arg6338];
  return (Shen.globals["shen.*process-counter*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6339"];

Shen.call_toplevel("reg-kl.shen-toplevel-6339")





Shen.fns["reg-kl.shen-toplevel-6342"] = [Shen.type_func, function shen_user_lambda6343(Arg6341) {
  if (Arg6341.length < 0) return [Shen.type_func, shen_user_lambda6343, 0, Arg6341];
  return (Shen.globals["shen.*varcounter*"] = Shen.vector(1000))}, 0, [], "reg-kl.shen-toplevel-6342"];

Shen.call_toplevel("reg-kl.shen-toplevel-6342")





Shen.fns["reg-kl.shen-toplevel-6345"] = [Shen.type_func, function shen_user_lambda6346(Arg6344) {
  if (Arg6344.length < 0) return [Shen.type_func, shen_user_lambda6346, 0, Arg6344];
  return (Shen.globals["shen.*prologvectors*"] = Shen.vector(1000))}, 0, [], "reg-kl.shen-toplevel-6345"];

Shen.call_toplevel("reg-kl.shen-toplevel-6345")





Shen.fns["reg-kl.shen-toplevel-6348"] = [Shen.type_func, function shen_user_lambda6349(Arg6347) {
  if (Arg6347.length < 0) return [Shen.type_func, shen_user_lambda6349, 0, Arg6347];
  return (Shen.globals["shen.*reader-macros*"] = [])}, 0, [], "reg-kl.shen-toplevel-6348"];

Shen.call_toplevel("reg-kl.shen-toplevel-6348")





Shen.fns["reg-kl.shen-toplevel-6351"] = [Shen.type_func, function shen_user_lambda6352(Arg6350) {
  if (Arg6350.length < 0) return [Shen.type_func, shen_user_lambda6352, 0, Arg6350];
  return (Shen.globals["*home-directory*"] = [])}, 0, [], "reg-kl.shen-toplevel-6351"];

Shen.call_toplevel("reg-kl.shen-toplevel-6351")





Shen.fns["reg-kl.shen-toplevel-6354"] = [Shen.type_func, function shen_user_lambda6355(Arg6353) {
  if (Arg6353.length < 0) return [Shen.type_func, shen_user_lambda6355, 0, Arg6353];
  return (Shen.globals["shen.*gensym*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6354"];

Shen.call_toplevel("reg-kl.shen-toplevel-6354")





Shen.fns["reg-kl.shen-toplevel-6357"] = [Shen.type_func, function shen_user_lambda6358(Arg6356) {
  if (Arg6356.length < 0) return [Shen.type_func, shen_user_lambda6358, 0, Arg6356];
  return (Shen.globals["shen.*tracking*"] = [])}, 0, [], "reg-kl.shen-toplevel-6357"];

Shen.call_toplevel("reg-kl.shen-toplevel-6357")





Shen.fns["reg-kl.shen-toplevel-6360"] = [Shen.type_func, function shen_user_lambda6361(Arg6359) {
  if (Arg6359.length < 0) return [Shen.type_func, shen_user_lambda6361, 0, Arg6359];
  return (Shen.globals["*home-directory*"] = "")}, 0, [], "reg-kl.shen-toplevel-6360"];

Shen.call_toplevel("reg-kl.shen-toplevel-6360")





Shen.fns["reg-kl.shen-toplevel-6363"] = [Shen.type_func, function shen_user_lambda6364(Arg6362) {
  if (Arg6362.length < 0) return [Shen.type_func, shen_user_lambda6364, 0, Arg6362];
  return (Shen.globals["shen.*alphabet*"] = [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "C"], [Shen.type_cons, [Shen.type_symbol, "D"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_symbol, "F"], [Shen.type_cons, [Shen.type_symbol, "G"], [Shen.type_cons, [Shen.type_symbol, "H"], [Shen.type_cons, [Shen.type_symbol, "I"], [Shen.type_cons, [Shen.type_symbol, "J"], [Shen.type_cons, [Shen.type_symbol, "K"], [Shen.type_cons, [Shen.type_symbol, "L"], [Shen.type_cons, [Shen.type_symbol, "M"], [Shen.type_cons, [Shen.type_symbol, "N"], [Shen.type_cons, [Shen.type_symbol, "O"], [Shen.type_cons, [Shen.type_symbol, "P"], [Shen.type_cons, [Shen.type_symbol, "Q"], [Shen.type_cons, [Shen.type_symbol, "R"], [Shen.type_cons, [Shen.type_symbol, "S"], [Shen.type_cons, [Shen.type_symbol, "T"], [Shen.type_cons, [Shen.type_symbol, "U"], [Shen.type_cons, [Shen.type_symbol, "V"], [Shen.type_cons, [Shen.type_symbol, "W"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]]]]]]]]]]]]]]]]]]]]]]]]])}, 0, [], "reg-kl.shen-toplevel-6363"];

Shen.call_toplevel("reg-kl.shen-toplevel-6363")





Shen.fns["reg-kl.shen-toplevel-6366"] = [Shen.type_func, function shen_user_lambda6367(Arg6365) {
  if (Arg6365.length < 0) return [Shen.type_func, shen_user_lambda6367, 0, Arg6365];
  return (Shen.globals["shen.*special*"] = [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]]]]]]]]])}, 0, [], "reg-kl.shen-toplevel-6366"];

Shen.call_toplevel("reg-kl.shen-toplevel-6366")





Shen.fns["reg-kl.shen-toplevel-6369"] = [Shen.type_func, function shen_user_lambda6370(Arg6368) {
  if (Arg6368.length < 0) return [Shen.type_func, shen_user_lambda6370, 0, Arg6368];
  return (Shen.globals["shen.*extraspecial*"] = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "defcc"], []]]]])}, 0, [], "reg-kl.shen-toplevel-6369"];

Shen.call_toplevel("reg-kl.shen-toplevel-6369")





Shen.fns["reg-kl.shen-toplevel-6372"] = [Shen.type_func, function shen_user_lambda6373(Arg6371) {
  if (Arg6371.length < 0) return [Shen.type_func, shen_user_lambda6373, 0, Arg6371];
  return (Shen.globals["shen.*spy*"] = false)}, 0, [], "reg-kl.shen-toplevel-6372"];

Shen.call_toplevel("reg-kl.shen-toplevel-6372")





Shen.fns["reg-kl.shen-toplevel-6375"] = [Shen.type_func, function shen_user_lambda6376(Arg6374) {
  if (Arg6374.length < 0) return [Shen.type_func, shen_user_lambda6376, 0, Arg6374];
  return (Shen.globals["shen.*datatypes*"] = [])}, 0, [], "reg-kl.shen-toplevel-6375"];

Shen.call_toplevel("reg-kl.shen-toplevel-6375")





Shen.fns["reg-kl.shen-toplevel-6378"] = [Shen.type_func, function shen_user_lambda6379(Arg6377) {
  if (Arg6377.length < 0) return [Shen.type_func, shen_user_lambda6379, 0, Arg6377];
  return (Shen.globals["shen.*alldatatypes*"] = [])}, 0, [], "reg-kl.shen-toplevel-6378"];

Shen.call_toplevel("reg-kl.shen-toplevel-6378")





Shen.fns["reg-kl.shen-toplevel-6381"] = [Shen.type_func, function shen_user_lambda6382(Arg6380) {
  if (Arg6380.length < 0) return [Shen.type_func, shen_user_lambda6382, 0, Arg6380];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)}, 0, [], "reg-kl.shen-toplevel-6381"];

Shen.call_toplevel("reg-kl.shen-toplevel-6381")





Shen.fns["reg-kl.shen-toplevel-6384"] = [Shen.type_func, function shen_user_lambda6385(Arg6383) {
  if (Arg6383.length < 0) return [Shen.type_func, shen_user_lambda6385, 0, Arg6383];
  return (Shen.globals["shen.*synonyms*"] = [])}, 0, [], "reg-kl.shen-toplevel-6384"];

Shen.call_toplevel("reg-kl.shen-toplevel-6384")





Shen.fns["reg-kl.shen-toplevel-6387"] = [Shen.type_func, function shen_user_lambda6388(Arg6386) {
  if (Arg6386.length < 0) return [Shen.type_func, shen_user_lambda6388, 0, Arg6386];
  return (Shen.globals["shen.*system*"] = [])}, 0, [], "reg-kl.shen-toplevel-6387"];

Shen.call_toplevel("reg-kl.shen-toplevel-6387")





Shen.fns["reg-kl.shen-toplevel-6390"] = [Shen.type_func, function shen_user_lambda6391(Arg6389) {
  if (Arg6389.length < 0) return [Shen.type_func, shen_user_lambda6391, 0, Arg6389];
  return (Shen.globals["shen.*signedfuncs*"] = [])}, 0, [], "reg-kl.shen-toplevel-6390"];

Shen.call_toplevel("reg-kl.shen-toplevel-6390")





Shen.fns["reg-kl.shen-toplevel-6393"] = [Shen.type_func, function shen_user_lambda6394(Arg6392) {
  if (Arg6392.length < 0) return [Shen.type_func, shen_user_lambda6394, 0, Arg6392];
  return (Shen.globals["shen.*maxcomplexity*"] = 128)}, 0, [], "reg-kl.shen-toplevel-6393"];

Shen.call_toplevel("reg-kl.shen-toplevel-6393")





Shen.fns["reg-kl.shen-toplevel-6396"] = [Shen.type_func, function shen_user_lambda6397(Arg6395) {
  if (Arg6395.length < 0) return [Shen.type_func, shen_user_lambda6397, 0, Arg6395];
  return (Shen.globals["shen.*occurs*"] = true)}, 0, [], "reg-kl.shen-toplevel-6396"];

Shen.call_toplevel("reg-kl.shen-toplevel-6396")





Shen.fns["reg-kl.shen-toplevel-6399"] = [Shen.type_func, function shen_user_lambda6400(Arg6398) {
  if (Arg6398.length < 0) return [Shen.type_func, shen_user_lambda6400, 0, Arg6398];
  return (Shen.globals["shen.*maxinferences*"] = 1000000)}, 0, [], "reg-kl.shen-toplevel-6399"];

Shen.call_toplevel("reg-kl.shen-toplevel-6399")





Shen.fns["reg-kl.shen-toplevel-6402"] = [Shen.type_func, function shen_user_lambda6403(Arg6401) {
  if (Arg6401.length < 0) return [Shen.type_func, shen_user_lambda6403, 0, Arg6401];
  return (Shen.globals["*maximum-print-sequence-size*"] = 20)}, 0, [], "reg-kl.shen-toplevel-6402"];

Shen.call_toplevel("reg-kl.shen-toplevel-6402")





Shen.fns["reg-kl.shen-toplevel-6405"] = [Shen.type_func, function shen_user_lambda6406(Arg6404) {
  if (Arg6404.length < 0) return [Shen.type_func, shen_user_lambda6406, 0, Arg6404];
  return (Shen.globals["shen.*catch*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6405"];

Shen.call_toplevel("reg-kl.shen-toplevel-6405")





Shen.fns["reg-kl.shen-toplevel-6408"] = [Shen.type_func, function shen_user_lambda6409(Arg6407) {
  if (Arg6407.length < 0) return [Shen.type_func, shen_user_lambda6409, 0, Arg6407];
  return (Shen.globals["shen.*call*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6408"];

Shen.call_toplevel("reg-kl.shen-toplevel-6408")





Shen.fns["reg-kl.shen-toplevel-6411"] = [Shen.type_func, function shen_user_lambda6412(Arg6410) {
  if (Arg6410.length < 0) return [Shen.type_func, shen_user_lambda6412, 0, Arg6410];
  return (Shen.globals["shen.*infs*"] = 0)}, 0, [], "reg-kl.shen-toplevel-6411"];

Shen.call_toplevel("reg-kl.shen-toplevel-6411")





Shen.fns["shen.initialise_arity_table"] = [Shen.type_func, function shen_user_lambda6414(Arg6413) {
  if (Arg6413.length < 1) return [Shen.type_func, shen_user_lambda6414, 1, Arg6413];
  var Arg6413_0 = Arg6413[0];
  return ((Shen.empty$question$(Arg6413_0))
  ? []
  : (((Shen.is_type(Arg6413_0, Shen.type_cons) && Shen.is_type(Arg6413_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["put"], [Arg6413_0[1], [Shen.type_symbol, "arity"], Arg6413_0[2][1], (Shen.globals["*property-vector*"])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [Arg6413_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.initialise_arity_table"]]);})))}, 1, [], "shen.initialise_arity_table"];





Shen.fns["arity"] = [Shen.type_func, function shen_user_lambda6416(Arg6415) {
  if (Arg6415.length < 1) return [Shen.type_func, shen_user_lambda6416, 1, Arg6415];
  var Arg6415_0 = Arg6415[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6415_0, [Shen.type_symbol, "arity"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6418(Arg6417) {
  if (Arg6417.length < 1) return [Shen.type_func, shen_user_lambda6418, 1, Arg6417];
  var Arg6417_0 = Arg6417[0];
  return -1}, 1, [], undefined]);})}, 1, [], "arity"];





Shen.fns["reg-kl.shen-toplevel-6420"] = [Shen.type_func, function shen_user_lambda6421(Arg6419) {
  if (Arg6419.length < 0) return [Shen.type_func, shen_user_lambda6421, 0, Arg6419];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [[Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "interror"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, 5, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "shen.reassemble"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "shen.strong-warning"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "shen.sum"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "shen.<1>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, 2, []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 0, [], "reg-kl.shen-toplevel-6420"];

Shen.call_toplevel("reg-kl.shen-toplevel-6420")





Shen.fns["systemf"] = [Shen.type_func, function shen_user_lambda6423(Arg6422) {
  if (Arg6422.length < 1) return [Shen.type_func, shen_user_lambda6423, 1, Arg6422];
  var Arg6422_0 = Arg6422[0];
  var R0, R1;
  return ((R0 = [Shen.type_symbol, "shen"]),
  (R1 = Shen.call(Shen.fns["get"], [R0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [R0, [Shen.type_symbol, "shen.external-symbols"], Shen.call(Shen.fns["adjoin"], [Arg6422_0, R1]), (Shen.globals["*property-vector*"])]);}))}, 1, [], "systemf"];





Shen.fns["adjoin"] = [Shen.type_func, function shen_user_lambda6425(Arg6424) {
  if (Arg6424.length < 2) return [Shen.type_func, shen_user_lambda6425, 2, Arg6424];
  var Arg6424_0 = Arg6424[0], Arg6424_1 = Arg6424[1];
  return ((Shen.call(Shen.fns["element?"], [Arg6424_0, Arg6424_1]))
  ? Arg6424_1
  : [Shen.type_cons, Arg6424_0, Arg6424_1])}, 2, [], "adjoin"];





Shen.fns["reg-kl.shen-toplevel-6427"] = [Shen.type_func, function shen_user_lambda6428(Arg6426) {
  if (Arg6426.length < 0) return [Shen.type_func, shen_user_lambda6428, 0, Arg6426];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], [Shen.type_cons, [Shen.type_symbol, "!"], [Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "<--"], [Shen.type_cons, [Shen.type_symbol, "&&"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "*language*"], [Shen.type_cons, [Shen.type_symbol, "*implementation*"], [Shen.type_cons, [Shen.type_symbol, "*stinput*"], [Shen.type_cons, [Shen.type_symbol, "*home-directory*"], [Shen.type_cons, [Shen.type_symbol, "*version*"], [Shen.type_cons, [Shen.type_symbol, "*maximum-print-sequence-size*"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_symbol, "*os*"], [Shen.type_cons, [Shen.type_symbol, "*release*"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "*port*"], [Shen.type_cons, [Shen.type_symbol, "*porters*"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, [Shen.type_symbol, "=!"], [Shen.type_cons, [Shen.type_symbol, "$"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, Shen.vector(0), [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "when"], [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "verified"], [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "unit"], [Shen.type_cons, [Shen.type_symbol, "shen.unix"], [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, true, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "time"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "synonyms"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "save"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "run"], [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "quit"], [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "prolog?"], [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "output"], [Shen.type_cons, [Shen.type_symbol, "out"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_symbol, "macro"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_symbol, "make-string"], [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "loaded"], [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_symbol, "file"], [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, false, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "defprolog"], [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, [Shen.type_symbol, "datatype"], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "cond"], [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "cases"], [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "bar!"], [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "abort"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], (Shen.globals["*property-vector*"])]);})}, 0, [], "reg-kl.shen-toplevel-6427"];

Shen.call_toplevel("reg-kl.shen-toplevel-6427")





Shen.fns["specialise"] = [Shen.type_func, function shen_user_lambda6430(Arg6429) {
  if (Arg6429.length < 1) return [Shen.type_func, shen_user_lambda6430, 1, Arg6429];
  var Arg6429_0 = Arg6429[0];
  return ((Shen.globals["shen.*special*"] = [Shen.type_cons, Arg6429_0, (Shen.globals["shen.*special*"])]),
  Arg6429_0)}, 1, [], "specialise"];





Shen.fns["unspecialise"] = [Shen.type_func, function shen_user_lambda6432(Arg6431) {
  if (Arg6431.length < 1) return [Shen.type_func, shen_user_lambda6432, 1, Arg6431];
  var Arg6431_0 = Arg6431[0];
  return ((Shen.globals["shen.*special*"] = Shen.call(Shen.fns["remove"], [Arg6431_0, (Shen.globals["shen.*special*"])])),
  Arg6431_0)}, 1, [], "unspecialise"];










Shen.fns["load"] = [Shen.type_func, function shen_user_lambda6435(Arg6434) {
  if (Arg6434.length < 1) return [Shen.type_func, shen_user_lambda6435, 1, Arg6434];
  var Arg6434_0 = Arg6434[0];
  var R0, R1, R2;
  return (((R0 = Shen.get_time([Shen.type_symbol, "run"])),
  (R1 = Shen.call(Shen.fns["shen.load-help"], [(Shen.globals["shen.*tc*"]), Shen.call(Shen.fns["read-file"], [Arg6434_0])])),
  (R2 = Shen.get_time([Shen.type_symbol, "run"])),
  (R2 = (R2 - R0)),
  Shen.pr(("\x0arun time: " + (Shen.str(R2) + " secs\x0a")), Shen.call(Shen.fns["stoutput"], [])),
  R1),
  (((Shen.globals["shen.*tc*"]))
  ? Shen.pr(("\x0atypechecked in " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["inferences"], []), " inferences\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []))
  : [Shen.type_symbol, "shen.skip"]),
  [Shen.type_symbol, "loaded"])}, 1, [], "load"];





Shen.fns["shen.load-help"] = [Shen.type_func, function shen_user_lambda6437(Arg6436) {
  if (Arg6436.length < 2) return [Shen.type_func, shen_user_lambda6437, 2, Arg6436];
  var Arg6436_0 = Arg6436[0], Arg6436_1 = Arg6436[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg6436_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6439(Arg6438) {
  if (Arg6438.length < 1) return [Shen.type_func, shen_user_lambda6439, 1, Arg6438];
  var Arg6438_0 = Arg6438[0];
  return (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6438_0]), "\x0a", [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined], Arg6436_1]);})
  : ((R0 = Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.remove-synonyms"], Arg6436_1])),
  (R1 = Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.typetable"], R0])),
  Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.assumetype"], R1]),
  (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.typecheck-and-load"], R0]);}, [Shen.type_func, function shen_user_lambda6441(Arg6440) {
  if (Arg6440.length < 2) return [Shen.type_func, shen_user_lambda6441, 2, Arg6440];
  var Arg6440_0 = Arg6440[0], Arg6440_1 = Arg6440[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6440_1, Arg6440_0]);})}, 2, [R1], undefined]);})))}, 2, [], "shen.load-help"];





Shen.fns["shen.remove-synonyms"] = [Shen.type_func, function shen_user_lambda6443(Arg6442) {
  if (Arg6442.length < 1) return [Shen.type_func, shen_user_lambda6443, 1, Arg6442];
  var Arg6442_0 = Arg6442[0];
  return (((Shen.is_type(Arg6442_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], Arg6442_0[1]))))
  ? (Shen.call(Shen.fns["eval"], [Arg6442_0]),
  [])
  : [Shen.type_cons, Arg6442_0, []])}, 1, [], "shen.remove-synonyms"];





Shen.fns["shen.typecheck-and-load"] = [Shen.type_func, function shen_user_lambda6445(Arg6444) {
  if (Arg6444.length < 1) return [Shen.type_func, shen_user_lambda6445, 1, Arg6444];
  var Arg6444_0 = Arg6444[0];
  return (Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg6444_0, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);}))}, 1, [], "shen.typecheck-and-load"];





Shen.fns["shen.typetable"] = [Shen.type_func, function shen_user_lambda6447(Arg6446) {
  if (Arg6446.length < 1) return [Shen.type_func, shen_user_lambda6447, 1, Arg6446];
  var Arg6446_0 = Arg6446[0];
  var R0;
  return (((Shen.is_type(Arg6446_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg6446_0[1])) && Shen.is_type(Arg6446_0[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<sig+rest>"], Arg6446_0[2][2], []])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6446_0[2][1], " lacks a proper signature.\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [Shen.type_cons, [Shen.type_cons, Arg6446_0[2][1], R0], []]))
  : (((Shen.is_type(Arg6446_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6446_0[1])) && (Shen.is_type(Arg6446_0[2], Shen.type_cons) && (Shen.is_type(Arg6446_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg6446_0[2][2][1])) && (Shen.is_type(Arg6446_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6446_0[2][2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6446_0[2][2][2][1][1])) && (Shen.is_type(Arg6446_0[2][2][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6446_0[2][2][2][1][2][2]) && (Shen.is_type(Arg6446_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg6446_0[2][2][2][2][1])) && (Shen.is_type(Arg6446_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6446_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg6446_0[2][2][2][2][2][2][1])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6446_0[2][1], [Shen.type_cons, Arg6446_0[2][2][2][1], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6446_0[2][2][2][2][2][1], []]]]], []]
  : (((Shen.is_type(Arg6446_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6446_0[1])) && Shen.is_type(Arg6446_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6446_0[2][1], " lacks a proper signature.\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [])))}, 1, [], "shen.typetable"];





Shen.fns["shen.assumetype"] = [Shen.type_func, function shen_user_lambda6449(Arg6448) {
  if (Arg6448.length < 1) return [Shen.type_func, shen_user_lambda6449, 1, Arg6448];
  var Arg6448_0 = Arg6448[0];
  return ((Shen.is_type(Arg6448_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg6448_0[1], Arg6448_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.assumetype"]]);}))}, 1, [], "shen.assumetype"];





Shen.fns["shen.unwind-types"] = [Shen.type_func, function shen_user_lambda6451(Arg6450) {
  if (Arg6450.length < 2) return [Shen.type_func, shen_user_lambda6451, 2, Arg6450];
  var Arg6450_0 = Arg6450[0], Arg6450_1 = Arg6450[1];
  return ((Shen.empty$question$(Arg6450_1))
  ? (function() {
  return Shen.simple_error(Shen.error_to_string(Arg6450_0));})
  : (((Shen.is_type(Arg6450_1, Shen.type_cons) && Shen.is_type(Arg6450_1[1], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.remtype"], [Arg6450_1[1][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6450_0, Arg6450_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.unwind-types"]]);})))}, 2, [], "shen.unwind-types"];





Shen.fns["shen.remtype"] = [Shen.type_func, function shen_user_lambda6453(Arg6452) {
  if (Arg6452.length < 1) return [Shen.type_func, shen_user_lambda6453, 1, Arg6452];
  var Arg6452_0 = Arg6452[0];
  return ((Shen.globals["shen.*signedfuncs*"] = Shen.call(Shen.fns["remove"], [Arg6452_0, (Shen.globals["shen.*signedfuncs*"])])),
  Arg6452_0)}, 1, [], "shen.remtype"];





Shen.fns["shen.<sig+rest>"] = [Shen.type_func, function shen_user_lambda6455(Arg6454) {
  if (Arg6454.length < 1) return [Shen.type_func, shen_user_lambda6455, 1, Arg6454];
  var Arg6454_0 = Arg6454[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg6454_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<any>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rest>"];





Shen.fns["write-to-file"] = [Shen.type_func, function shen_user_lambda6457(Arg6456) {
  if (Arg6456.length < 2) return [Shen.type_func, shen_user_lambda6457, 2, Arg6456];
  var Arg6456_0 = Arg6456[0], Arg6456_1 = Arg6456[1];
  var R0, R1;
  return ((R0 = Shen.open([Shen.type_symbol, "file"], Arg6456_0, [Shen.type_symbol, "out"])),
  (((typeof(Arg6456_1) == 'string'))
  ? (R1 = Shen.call(Shen.fns["shen.app"], [Arg6456_1, "\x0a\x0a", [Shen.type_symbol, "shen.a"]]))
  : (R1 = Shen.call(Shen.fns["shen.app"], [Arg6456_1, "\x0a\x0a", [Shen.type_symbol, "shen.s"]]))),
  Shen.pr(R1, R0),
  Shen.close(R0),
  Arg6456_1)}, 2, [], "write-to-file"];










Shen.fns["macroexpand"] = [Shen.type_func, function shen_user_lambda6460(Arg6459) {
  if (Arg6459.length < 1) return [Shen.type_func, shen_user_lambda6460, 1, Arg6459];
  var Arg6459_0 = Arg6459[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compose"], [(Shen.globals["*macros*"]), Arg6459_0])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6459_0, R0)))
  ? Arg6459_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [[Shen.type_symbol, "macroexpand"], R0]);})))}, 1, [], "macroexpand"];





Shen.fns["reg-kl.shen-toplevel-6462"] = [Shen.type_func, function shen_user_lambda6463(Arg6461) {
  if (Arg6461.length < 0) return [Shen.type_func, shen_user_lambda6463, 0, Arg6461];
  return (Shen.globals["*macros*"] = [Shen.type_cons, [Shen.type_symbol, "shen.timer-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.cases-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.abs-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.put/get-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.compile-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.let-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.assoc-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.make-string-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.output-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.error-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.prolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.nl-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.@s-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.defmacro-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.defprolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.function-macro"], []]]]]]]]]]]]]]]]]]])}, 0, [], "reg-kl.shen-toplevel-6462"];

Shen.call_toplevel("reg-kl.shen-toplevel-6462")





Shen.fns["shen.error-macro"] = [Shen.type_func, function shen_user_lambda6465(Arg6464) {
  if (Arg6464.length < 1) return [Shen.type_func, shen_user_lambda6465, 1, Arg6464];
  var Arg6464_0 = Arg6464[0];
  return (((Shen.is_type(Arg6464_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "error"], Arg6464_0[1])) && Shen.is_type(Arg6464_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6464_0[2][1], Arg6464_0[2][2]]), []]]
  : Arg6464_0)}, 1, [], "shen.error-macro"];





Shen.fns["shen.output-macro"] = [Shen.type_func, function shen_user_lambda6467(Arg6466) {
  if (Arg6466.length < 1) return [Shen.type_func, shen_user_lambda6467, 1, Arg6466];
  var Arg6466_0 = Arg6466[0];
  return (((Shen.is_type(Arg6466_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "output"], Arg6466_0[1])) && Shen.is_type(Arg6466_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6466_0[2][1], Arg6466_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]]
  : Arg6466_0)}, 1, [], "shen.output-macro"];





Shen.fns["shen.make-string-macro"] = [Shen.type_func, function shen_user_lambda6469(Arg6468) {
  if (Arg6468.length < 1) return [Shen.type_func, shen_user_lambda6469, 1, Arg6468];
  var Arg6468_0 = Arg6468[0];
  return (((Shen.is_type(Arg6468_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "make-string"], Arg6468_0[1])) && Shen.is_type(Arg6468_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr"], [Arg6468_0[2][1], Arg6468_0[2][2]]);})
  : Arg6468_0)}, 1, [], "shen.make-string-macro"];





Shen.fns["shen.compose"] = [Shen.type_func, function shen_user_lambda6471(Arg6470) {
  if (Arg6470.length < 2) return [Shen.type_func, shen_user_lambda6471, 2, Arg6470];
  var Arg6470_0 = Arg6470[0], Arg6470_1 = Arg6470[1];
  return ((Shen.empty$question$(Arg6470_0))
  ? Arg6470_1
  : ((Shen.is_type(Arg6470_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.compose"], [Arg6470_0[2], Shen.call(Arg6470_0[1], [Arg6470_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compose"]]);})))}, 2, [], "shen.compose"];





Shen.fns["shen.compile-macro"] = [Shen.type_func, function shen_user_lambda6473(Arg6472) {
  if (Arg6472.length < 1) return [Shen.type_func, shen_user_lambda6473, 1, Arg6472];
  var Arg6472_0 = Arg6472[0];
  return (((Shen.is_type(Arg6472_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "compile"], Arg6472_0[1])) && (Shen.is_type(Arg6472_0[2], Shen.type_cons) && (Shen.is_type(Arg6472_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6472_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, Arg6472_0[2][1], [Shen.type_cons, Arg6472_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "E"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error here: ~S~%", [Shen.type_cons, [Shen.type_symbol, "E"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error~%", []]], []]]]], []]]], []]]]]
  : Arg6472_0)}, 1, [], "shen.compile-macro"];





Shen.fns["shen.prolog-macro"] = [Shen.type_func, function shen_user_lambda6475(Arg6474) {
  if (Arg6474.length < 1) return [Shen.type_func, shen_user_lambda6475, 1, Arg6474];
  var Arg6474_0 = Arg6474[0];
  return (((Shen.is_type(Arg6474_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "prolog?"], Arg6474_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.intprolog"], [Shen.type_cons, Shen.call(Shen.fns["shen.prolog-form"], [Arg6474_0[2]]), []]]
  : Arg6474_0)}, 1, [], "shen.prolog-macro"];





Shen.fns["shen.defprolog-macro"] = [Shen.type_func, function shen_user_lambda6477(Arg6476) {
  if (Arg6476.length < 1) return [Shen.type_func, shen_user_lambda6477, 1, Arg6476];
  var Arg6476_0 = Arg6476[0];
  return (((Shen.is_type(Arg6476_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defprolog"], Arg6476_0[1])) && Shen.is_type(Arg6476_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<defprolog>"], Arg6476_0[2], [Shen.type_func, function shen_user_lambda6479(Arg6478) {
  if (Arg6478.length < 2) return [Shen.type_func, shen_user_lambda6479, 2, Arg6478];
  var Arg6478_0 = Arg6478[0], Arg6478_1 = Arg6478[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-error"], [Arg6478_0[2][1], Arg6478_1]);})}, 2, [Arg6476_0], undefined]]);})
  : Arg6476_0)}, 1, [], "shen.defprolog-macro"];





Shen.fns["shen.prolog-form"] = [Shen.type_func, function shen_user_lambda6481(Arg6480) {
  if (Arg6480.length < 1) return [Shen.type_func, shen_user_lambda6481, 1, Arg6480];
  var Arg6480_0 = Arg6480[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.cons_form"], Arg6480_0])]);})}, 1, [], "shen.prolog-form"];





Shen.fns["shen.datatype-macro"] = [Shen.type_func, function shen_user_lambda6483(Arg6482) {
  if (Arg6482.length < 1) return [Shen.type_func, shen_user_lambda6483, 1, Arg6482];
  var Arg6482_0 = Arg6482[0];
  return (((Shen.is_type(Arg6482_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "datatype"], Arg6482_0[1])) && Shen.is_type(Arg6482_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, Shen.intern(("type#" + Shen.str(Arg6482_0[2][1]))), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.<datatype-rules>"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6482_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-error"], []]], []]]]], []]]]
  : Arg6482_0)}, 1, [], "shen.datatype-macro"];





Shen.fns["shen.defmacro-macro"] = [Shen.type_func, function shen_user_lambda6485(Arg6484) {
  if (Arg6484.length < 1) return [Shen.type_func, shen_user_lambda6485, 1, Arg6484];
  var Arg6484_0 = Arg6484[0];
  var R0, R1;
  return (((Shen.is_type(Arg6484_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], Arg6484_0[1])) && Shen.is_type(Arg6484_0[2], Shen.type_cons))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6484_0[2][1], Shen.call(Shen.fns["append"], [Arg6484_0[2][2], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]])]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, Arg6484_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "macro"], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [], [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]]]),
  R1)
  : Arg6484_0)}, 1, [], "shen.defmacro-macro"];





Shen.fns["shen.<defmacro>"] = [Shen.type_func, function shen_user_lambda6487(Arg6486) {
  if (Arg6486.length < 1) return [Shen.type_func, shen_user_lambda6487, 1, Arg6486];
  var Arg6486_0 = Arg6486[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6486_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macrorules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<defmacro>"];





Shen.fns["shen.<macrorules>"] = [Shen.type_func, function shen_user_lambda6489(Arg6488) {
  if (Arg6488.length < 1) return [Shen.type_func, shen_user_lambda6489, 1, Arg6488];
  var Arg6488_0 = Arg6488[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<macrorule>"], [Arg6488_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macrorules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), []])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<macrorule>"], [Arg6488_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "Parse_X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "Parse_X"], []]]]])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<macrorules>"];





Shen.fns["shen.<macrorule>"] = [Shen.type_func, function shen_user_lambda6491(Arg6490) {
  if (Arg6490.length < 1) return [Shen.type_func, shen_user_lambda6491, 1, Arg6490];
  var Arg6490_0 = Arg6490[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6490_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "->"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, [Shen.type_symbol, "where"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R2]), []])]])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6490_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "->"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), []])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6490_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "<-"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, [Shen.type_symbol, "where"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R2]), []])]])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6490_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<macroaction>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_symbol, "<-"], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), []])]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<macrorule>"];





Shen.fns["shen.<macroaction>"] = [Shen.type_func, function shen_user_lambda6493(Arg6492) {
  if (Arg6492.length < 1) return [Shen.type_func, shen_user_lambda6493, 1, Arg6492];
  var Arg6492_0 = Arg6492[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<action>"], [Arg6492_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.walk"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]], []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<macroaction>"];





Shen.fns["shen.@s-macro"] = [Shen.type_func, function shen_user_lambda6495(Arg6494) {
  if (Arg6494.length < 1) return [Shen.type_func, shen_user_lambda6495, 1, Arg6494];
  var Arg6494_0 = Arg6494[0];
  var R0;
  return (((Shen.is_type(Arg6494_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6494_0[1])) && (Shen.is_type(Arg6494_0[2], Shen.type_cons) && (Shen.is_type(Arg6494_0[2][2], Shen.type_cons) && Shen.is_type(Arg6494_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Arg6494_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Arg6494_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6494_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6494_0[1])) && (Shen.is_type(Arg6494_0[2], Shen.type_cons) && (Shen.is_type(Arg6494_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6494_0[2][2][2]) && (typeof(Arg6494_0[2][1]) == 'string')))))))
  ? ((R0 = Shen.call(Shen.fns["explode"], [Arg6494_0[2][1]])),
  (((Shen.call(Shen.fns["length"], [R0]) > 1))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Shen.call(Shen.fns["append"], [R0, Arg6494_0[2][2]])]]);})
  : Arg6494_0))
  : Arg6494_0))}, 1, [], "shen.@s-macro"];





Shen.fns["shen.synonyms-macro"] = [Shen.type_func, function shen_user_lambda6497(Arg6496) {
  if (Arg6496.length < 1) return [Shen.type_func, shen_user_lambda6497, 1, Arg6496];
  var Arg6496_0 = Arg6496[0];
  return (((Shen.is_type(Arg6496_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "synonyms"], Arg6496_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-help"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6496_0[2]]), []]]
  : Arg6496_0)}, 1, [], "shen.synonyms-macro"];





Shen.fns["shen.nl-macro"] = [Shen.type_func, function shen_user_lambda6499(Arg6498) {
  if (Arg6498.length < 1) return [Shen.type_func, shen_user_lambda6499, 1, Arg6498];
  var Arg6498_0 = Arg6498[0];
  return (((Shen.is_type(Arg6498_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "nl"], Arg6498_0[1])) && Shen.empty$question$(Arg6498_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, 1, []]]
  : Arg6498_0)}, 1, [], "shen.nl-macro"];





Shen.fns["shen.assoc-macro"] = [Shen.type_func, function shen_user_lambda6501(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6501, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  return (((Shen.is_type(Arg6500_0, Shen.type_cons) && (Shen.is_type(Arg6500_0[2], Shen.type_cons) && (Shen.is_type(Arg6500_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6500_0[2][2][2], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6500_0[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "do"], []]]]]]]]]]))))))
  ? [Shen.type_cons, Arg6500_0[1], [Shen.type_cons, Arg6500_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assoc-macro"], [[Shen.type_cons, Arg6500_0[1], Arg6500_0[2][2]]]), []]]]
  : Arg6500_0)}, 1, [], "shen.assoc-macro"];





Shen.fns["shen.let-macro"] = [Shen.type_func, function shen_user_lambda6503(Arg6502) {
  if (Arg6502.length < 1) return [Shen.type_func, shen_user_lambda6503, 1, Arg6502];
  var Arg6502_0 = Arg6502[0];
  return (((Shen.is_type(Arg6502_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6502_0[1])) && (Shen.is_type(Arg6502_0[2], Shen.type_cons) && (Shen.is_type(Arg6502_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6502_0[2][2][2], Shen.type_cons) && Shen.is_type(Arg6502_0[2][2][2][2], Shen.type_cons)))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6502_0[2][1], [Shen.type_cons, Arg6502_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], Arg6502_0[2][2][2]]]), []]]]]
  : Arg6502_0)}, 1, [], "shen.let-macro"];





Shen.fns["shen.abs-macro"] = [Shen.type_func, function shen_user_lambda6505(Arg6504) {
  if (Arg6504.length < 1) return [Shen.type_func, shen_user_lambda6505, 1, Arg6504];
  var Arg6504_0 = Arg6504[0];
  return (((Shen.is_type(Arg6504_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6504_0[1])) && (Shen.is_type(Arg6504_0[2], Shen.type_cons) && (Shen.is_type(Arg6504_0[2][2], Shen.type_cons) && Shen.is_type(Arg6504_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg6504_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.abs-macro"], [[Shen.type_cons, [Shen.type_symbol, "/."], Arg6504_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6504_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6504_0[1])) && (Shen.is_type(Arg6504_0[2], Shen.type_cons) && (Shen.is_type(Arg6504_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6504_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], Arg6504_0[2]]
  : Arg6504_0))}, 1, [], "shen.abs-macro"];





Shen.fns["shen.cases-macro"] = [Shen.type_func, function shen_user_lambda6507(Arg6506) {
  if (Arg6506.length < 1) return [Shen.type_func, shen_user_lambda6507, 1, Arg6506];
  var Arg6506_0 = Arg6506[0];
  return (((Shen.is_type(Arg6506_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6506_0[1])) && (Shen.is_type(Arg6506_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6506_0[2][1])) && Shen.is_type(Arg6506_0[2][2], Shen.type_cons))))))
  ? Arg6506_0[2][2][1]
  : (((Shen.is_type(Arg6506_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6506_0[1])) && (Shen.is_type(Arg6506_0[2], Shen.type_cons) && (Shen.is_type(Arg6506_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6506_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6506_0[2][1], [Shen.type_cons, Arg6506_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, "error: cases exhausted", []]], []]]]]
  : (((Shen.is_type(Arg6506_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6506_0[1])) && (Shen.is_type(Arg6506_0[2], Shen.type_cons) && Shen.is_type(Arg6506_0[2][2], Shen.type_cons)))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6506_0[2][1], [Shen.type_cons, Arg6506_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.cases-macro"], [[Shen.type_cons, [Shen.type_symbol, "cases"], Arg6506_0[2][2][2]]]), []]]]]
  : (((Shen.is_type(Arg6506_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6506_0[1])) && (Shen.is_type(Arg6506_0[2], Shen.type_cons) && Shen.empty$question$(Arg6506_0[2][2])))))
  ? (function() {
  return Shen.simple_error("error: odd number of case elements\x0a");})
  : Arg6506_0))))}, 1, [], "shen.cases-macro"];





Shen.fns["shen.timer-macro"] = [Shen.type_func, function shen_user_lambda6509(Arg6508) {
  if (Arg6508.length < 1) return [Shen.type_func, shen_user_lambda6509, 1, Arg6508];
  var Arg6508_0 = Arg6508[0];
  return (((Shen.is_type(Arg6508_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "time"], Arg6508_0[1])) && (Shen.is_type(Arg6508_0[2], Shen.type_cons) && Shen.empty$question$(Arg6508_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6508_0[2][1], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Time"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_symbol, "Message"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, "\x0arun time: ", [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "Time"], []]], [Shen.type_cons, " secs\x0a", []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]]]]]]]]]]]);})
  : Arg6508_0)}, 1, [], "shen.timer-macro"];





Shen.fns["shen.tuple-up"] = [Shen.type_func, function shen_user_lambda6511(Arg6510) {
  if (Arg6510.length < 1) return [Shen.type_func, shen_user_lambda6511, 1, Arg6510];
  var Arg6510_0 = Arg6510[0];
  return ((Shen.is_type(Arg6510_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Arg6510_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.tuple-up"], [Arg6510_0[2]]), []]]]
  : Arg6510_0)}, 1, [], "shen.tuple-up"];





Shen.fns["shen.put/get-macro"] = [Shen.type_func, function shen_user_lambda6513(Arg6512) {
  if (Arg6512.length < 1) return [Shen.type_func, shen_user_lambda6513, 1, Arg6512];
  var Arg6512_0 = Arg6512[0];
  return (((Shen.is_type(Arg6512_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "put"], Arg6512_0[1])) && (Shen.is_type(Arg6512_0[2], Shen.type_cons) && (Shen.is_type(Arg6512_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6512_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6512_0[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, Arg6512_0[2][1], [Shen.type_cons, Arg6512_0[2][2][1], [Shen.type_cons, Arg6512_0[2][2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]]
  : (((Shen.is_type(Arg6512_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "get"], Arg6512_0[1])) && (Shen.is_type(Arg6512_0[2], Shen.type_cons) && (Shen.is_type(Arg6512_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6512_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, Arg6512_0[2][1], [Shen.type_cons, Arg6512_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]
  : Arg6512_0))}, 1, [], "shen.put/get-macro"];





Shen.fns["shen.function-macro"] = [Shen.type_func, function shen_user_lambda6515(Arg6514) {
  if (Arg6514.length < 1) return [Shen.type_func, shen_user_lambda6515, 1, Arg6514];
  var Arg6514_0 = Arg6514[0];
  return (((Shen.is_type(Arg6514_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg6514_0[1])) && (Shen.is_type(Arg6514_0[2], Shen.type_cons) && Shen.empty$question$(Arg6514_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction"], [Arg6514_0[2][1], Shen.call(Shen.fns["arity"], [Arg6514_0[2][1]])]);})
  : Arg6514_0)}, 1, [], "shen.function-macro"];





Shen.fns["shen.function-abstraction"] = [Shen.type_func, function shen_user_lambda6517(Arg6516) {
  if (Arg6516.length < 2) return [Shen.type_func, shen_user_lambda6517, 2, Arg6516];
  var Arg6516_0 = Arg6516[0], Arg6516_1 = Arg6516[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6516_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Arg6516_0, []]]
  : ((Shen.unwind_tail(Shen.$eq$(-1, Arg6516_1)))
  ? Arg6516_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction-help"], [Arg6516_0, Arg6516_1, []]);})))}, 2, [], "shen.function-abstraction"];





Shen.fns["shen.function-abstraction-help"] = [Shen.type_func, function shen_user_lambda6519(Arg6518) {
  if (Arg6518.length < 3) return [Shen.type_func, shen_user_lambda6519, 3, Arg6518];
  var Arg6518_0 = Arg6518[0], Arg6518_1 = Arg6518[1], Arg6518_2 = Arg6518[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6518_1)))
  ? [Shen.type_cons, Arg6518_0, Arg6518_2]
  : ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["shen.function-abstraction-help"], [Arg6518_0, (Arg6518_1 - 1), Shen.call(Shen.fns["append"], [Arg6518_2, [Shen.type_cons, R0, []]])]), []]]]))}, 3, [], "shen.function-abstraction-help"];





Shen.fns["undefmacro"] = [Shen.type_func, function shen_user_lambda6521(Arg6520) {
  if (Arg6520.length < 1) return [Shen.type_func, shen_user_lambda6521, 1, Arg6520];
  var Arg6520_0 = Arg6520[0];
  return ((Shen.globals["*macros*"] = Shen.call(Shen.fns["remove"], [Arg6520_0, (Shen.globals["*macros*"])])),
  Arg6520_0)}, 1, [], "undefmacro"];










Shen.fns["declare"] = [Shen.type_func, function shen_user_lambda7340(Arg7339) {
  if (Arg7339.length < 2) return [Shen.type_func, shen_user_lambda7340, 2, Arg7339];
  var Arg7339_0 = Arg7339[0], Arg7339_1 = Arg7339[1];
  var R0, R1, R2;
  return ((Shen.globals["shen.*signedfuncs*"] = Shen.call(Shen.fns["adjoin"], [Arg7339_0, (Shen.globals["shen.*signedfuncs*"])])),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen.variancy-test"], [Arg7339_0, Arg7339_1]);}, [Shen.type_func, function shen_user_lambda7342(Arg7341) {
  if (Arg7341.length < 1) return [Shen.type_func, shen_user_lambda7342, 1, Arg7341];
  var Arg7341_0 = Arg7341[0];
  return [Shen.type_symbol, "shen.skip"]}, 1, [], undefined]),
  (R0 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.demodulate"], [Arg7339_1])])),
  (R1 = Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg7339_0])),
  (R2 = Shen.call(Shen.fns["shen.parameters"], [1])),
  (R0 = [Shen.type_cons, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "X"], []]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, R0, []]]], []], []]]]),
  (R0 = Shen.call(Shen.fns["shen.aum"], [R0, R2])),
  (R0 = Shen.call(Shen.fns["shen.aum_to_shen"], [R0])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, R1, Shen.call(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R2]),
  Arg7339_0)}, 2, [], "declare"];





Shen.fns["shen.demodulate"] = [Shen.type_func, function shen_user_lambda7344(Arg7343) {
  if (Arg7343.length < 1) return [Shen.type_func, shen_user_lambda7344, 1, Arg7343];
  var Arg7343_0 = Arg7343[0];
  return (function() {
  return Shen.call_tail(Shen.fns["fix"], [[Shen.type_symbol, "shen.demodh"], Arg7343_0]);})}, 1, [], "shen.demodulate"];





Shen.fns["shen.demodh"] = [Shen.type_func, function shen_user_lambda7346(Arg7345) {
  if (Arg7345.length < 1) return [Shen.type_func, shen_user_lambda7346, 1, Arg7345];
  var Arg7345_0 = Arg7345[0];
  return ((Shen.is_type(Arg7345_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.demodh"], Arg7345_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.demod-atom"], [Arg7345_0]);}))}, 1, [], "shen.demodh"];





Shen.fns["shen.demod-atom"] = [Shen.type_func, function shen_user_lambda7348(Arg7347) {
  if (Arg7347.length < 1) return [Shen.type_func, shen_user_lambda7348, 1, Arg7347];
  var Arg7347_0 = Arg7347[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["assoc"], [Arg7347_0, (Shen.globals["shen.*synonyms*"])])),
  ((Shen.empty$question$(R0))
  ? Arg7347_0
  : R0[2]))}, 1, [], "shen.demod-atom"];





Shen.fns["shen.variancy-test"] = [Shen.type_func, function shen_user_lambda7350(Arg7349) {
  if (Arg7349.length < 2) return [Shen.type_func, shen_user_lambda7350, 2, Arg7349];
  var Arg7349_0 = Arg7349[0], Arg7349_1 = Arg7349[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg7349_0, [Shen.type_symbol, "B"]])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.call(Shen.fns["shen.variant?"], [R0, Arg7349_1]))
  ? [Shen.type_symbol, "shen.skip"]
  : Shen.pr(("warning: changing the type of " + Shen.call(Shen.fns["shen.app"], [Arg7349_0, " may create errors\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])))),
  [Shen.type_symbol, "shen.skip"])}, 2, [], "shen.variancy-test"];





Shen.fns["shen.variant?"] = [Shen.type_func, function shen_user_lambda7352(Arg7351) {
  if (Arg7351.length < 2) return [Shen.type_func, shen_user_lambda7352, 2, Arg7351];
  var Arg7351_0 = Arg7351[0], Arg7351_1 = Arg7351[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7351_1, Arg7351_0)))
  ? true
  : (((Shen.is_type(Arg7351_0, Shen.type_cons) && (Shen.is_type(Arg7351_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7351_1[1], Arg7351_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Arg7351_0[2], Arg7351_1[2]]);})
  : (((Shen.is_type(Arg7351_0, Shen.type_cons) && (Shen.is_type(Arg7351_1, Shen.type_cons) && (Shen.call(Shen.fns["shen.pvar?"], [Arg7351_0[1]]) && Shen.call(Shen.fns["variable?"], [Arg7351_1[1]])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg7351_0[1], Arg7351_0[2]]), Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg7351_1[1], Arg7351_1[2]])]);})
  : (((Shen.is_type(Arg7351_0, Shen.type_cons) && (Shen.is_type(Arg7351_0[1], Shen.type_cons) && (Shen.is_type(Arg7351_1, Shen.type_cons) && Shen.is_type(Arg7351_1[1], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["append"], [Arg7351_0[1], Arg7351_0[2]]), Shen.call(Shen.fns["append"], [Arg7351_1[1], Arg7351_1[2]])]);})
  : false))))}, 2, [], "shen.variant?"];





Shen.fns["reg-kl.shen-toplevel-7354"] = [Shen.type_func, function shen_user_lambda7355(Arg7353) {
  if (Arg7353.length < 0) return [Shen.type_func, shen_user_lambda7355, 0, Arg7353];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7354"];

Shen.call_toplevel("reg-kl.shen-toplevel-7354")





Shen.fns["reg-kl.shen-toplevel-7357"] = [Shen.type_func, function shen_user_lambda7358(Arg7356) {
  if (Arg7356.length < 0) return [Shen.type_func, shen_user_lambda7358, 0, Arg7356];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7357"];

Shen.call_toplevel("reg-kl.shen-toplevel-7357")





Shen.fns["reg-kl.shen-toplevel-7360"] = [Shen.type_func, function shen_user_lambda7361(Arg7359) {
  if (Arg7359.length < 0) return [Shen.type_func, shen_user_lambda7361, 0, Arg7359];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7360"];

Shen.call_toplevel("reg-kl.shen-toplevel-7360")





Shen.fns["reg-kl.shen-toplevel-7363"] = [Shen.type_func, function shen_user_lambda7364(Arg7362) {
  if (Arg7362.length < 0) return [Shen.type_func, shen_user_lambda7364, 0, Arg7362];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.app"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7363"];

Shen.call_toplevel("reg-kl.shen-toplevel-7363")





Shen.fns["reg-kl.shen-toplevel-7366"] = [Shen.type_func, function shen_user_lambda7367(Arg7365) {
  if (Arg7365.length < 0) return [Shen.type_func, shen_user_lambda7367, 0, Arg7365];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7366"];

Shen.call_toplevel("reg-kl.shen-toplevel-7366")





Shen.fns["reg-kl.shen-toplevel-7369"] = [Shen.type_func, function shen_user_lambda7370(Arg7368) {
  if (Arg7368.length < 0) return [Shen.type_func, shen_user_lambda7370, 0, Arg7368];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7369"];

Shen.call_toplevel("reg-kl.shen-toplevel-7369")





Shen.fns["reg-kl.shen-toplevel-7372"] = [Shen.type_func, function shen_user_lambda7373(Arg7371) {
  if (Arg7371.length < 0) return [Shen.type_func, shen_user_lambda7373, 0, Arg7371];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7372"];

Shen.call_toplevel("reg-kl.shen-toplevel-7372")





Shen.fns["reg-kl.shen-toplevel-7375"] = [Shen.type_func, function shen_user_lambda7376(Arg7374) {
  if (Arg7374.length < 0) return [Shen.type_func, shen_user_lambda7376, 0, Arg7374];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7375"];

Shen.call_toplevel("reg-kl.shen-toplevel-7375")





Shen.fns["reg-kl.shen-toplevel-7378"] = [Shen.type_func, function shen_user_lambda7379(Arg7377) {
  if (Arg7377.length < 0) return [Shen.type_func, shen_user_lambda7379, 0, Arg7377];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7378"];

Shen.call_toplevel("reg-kl.shen-toplevel-7378")





Shen.fns["reg-kl.shen-toplevel-7381"] = [Shen.type_func, function shen_user_lambda7382(Arg7380) {
  if (Arg7380.length < 0) return [Shen.type_func, shen_user_lambda7382, 0, Arg7380];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7381"];

Shen.call_toplevel("reg-kl.shen-toplevel-7381")





Shen.fns["reg-kl.shen-toplevel-7384"] = [Shen.type_func, function shen_user_lambda7385(Arg7383) {
  if (Arg7383.length < 0) return [Shen.type_func, shen_user_lambda7385, 0, Arg7383];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7384"];

Shen.call_toplevel("reg-kl.shen-toplevel-7384")





Shen.fns["reg-kl.shen-toplevel-7387"] = [Shen.type_func, function shen_user_lambda7388(Arg7386) {
  if (Arg7386.length < 0) return [Shen.type_func, shen_user_lambda7388, 0, Arg7386];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7387"];

Shen.call_toplevel("reg-kl.shen-toplevel-7387")





Shen.fns["reg-kl.shen-toplevel-7390"] = [Shen.type_func, function shen_user_lambda7391(Arg7389) {
  if (Arg7389.length < 0) return [Shen.type_func, shen_user_lambda7391, 0, Arg7389];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7390"];

Shen.call_toplevel("reg-kl.shen-toplevel-7390")





Shen.fns["reg-kl.shen-toplevel-7393"] = [Shen.type_func, function shen_user_lambda7394(Arg7392) {
  if (Arg7392.length < 0) return [Shen.type_func, shen_user_lambda7394, 0, Arg7392];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7393"];

Shen.call_toplevel("reg-kl.shen-toplevel-7393")





Shen.fns["reg-kl.shen-toplevel-7396"] = [Shen.type_func, function shen_user_lambda7397(Arg7395) {
  if (Arg7395.length < 0) return [Shen.type_func, shen_user_lambda7397, 0, Arg7395];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7396"];

Shen.call_toplevel("reg-kl.shen-toplevel-7396")





Shen.fns["reg-kl.shen-toplevel-7399"] = [Shen.type_func, function shen_user_lambda7400(Arg7398) {
  if (Arg7398.length < 0) return [Shen.type_func, shen_user_lambda7400, 0, Arg7398];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7399"];

Shen.call_toplevel("reg-kl.shen-toplevel-7399")





Shen.fns["reg-kl.shen-toplevel-7402"] = [Shen.type_func, function shen_user_lambda7403(Arg7401) {
  if (Arg7401.length < 0) return [Shen.type_func, shen_user_lambda7403, 0, Arg7401];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7402"];

Shen.call_toplevel("reg-kl.shen-toplevel-7402")





Shen.fns["reg-kl.shen-toplevel-7405"] = [Shen.type_func, function shen_user_lambda7406(Arg7404) {
  if (Arg7404.length < 0) return [Shen.type_func, shen_user_lambda7406, 0, Arg7404];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7405"];

Shen.call_toplevel("reg-kl.shen-toplevel-7405")





Shen.fns["reg-kl.shen-toplevel-7408"] = [Shen.type_func, function shen_user_lambda7409(Arg7407) {
  if (Arg7407.length < 0) return [Shen.type_func, shen_user_lambda7409, 0, Arg7407];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<!>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7408"];

Shen.call_toplevel("reg-kl.shen-toplevel-7408")





Shen.fns["reg-kl.shen-toplevel-7411"] = [Shen.type_func, function shen_user_lambda7412(Arg7410) {
  if (Arg7410.length < 0) return [Shen.type_func, shen_user_lambda7412, 0, Arg7410];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7411"];

Shen.call_toplevel("reg-kl.shen-toplevel-7411")





Shen.fns["reg-kl.shen-toplevel-7414"] = [Shen.type_func, function shen_user_lambda7415(Arg7413) {
  if (Arg7413.length < 0) return [Shen.type_func, shen_user_lambda7415, 0, Arg7413];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7414"];

Shen.call_toplevel("reg-kl.shen-toplevel-7414")





Shen.fns["reg-kl.shen-toplevel-7417"] = [Shen.type_func, function shen_user_lambda7418(Arg7416) {
  if (Arg7416.length < 0) return [Shen.type_func, shen_user_lambda7418, 0, Arg7416];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7417"];

Shen.call_toplevel("reg-kl.shen-toplevel-7417")





Shen.fns["reg-kl.shen-toplevel-7420"] = [Shen.type_func, function shen_user_lambda7421(Arg7419) {
  if (Arg7419.length < 0) return [Shen.type_func, shen_user_lambda7421, 0, Arg7419];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7420"];

Shen.call_toplevel("reg-kl.shen-toplevel-7420")





Shen.fns["reg-kl.shen-toplevel-7423"] = [Shen.type_func, function shen_user_lambda7424(Arg7422) {
  if (Arg7422.length < 0) return [Shen.type_func, shen_user_lambda7424, 0, Arg7422];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7423"];

Shen.call_toplevel("reg-kl.shen-toplevel-7423")





Shen.fns["reg-kl.shen-toplevel-7426"] = [Shen.type_func, function shen_user_lambda7427(Arg7425) {
  if (Arg7425.length < 0) return [Shen.type_func, shen_user_lambda7427, 0, Arg7425];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "string"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7426"];

Shen.call_toplevel("reg-kl.shen-toplevel-7426")





Shen.fns["reg-kl.shen-toplevel-7429"] = [Shen.type_func, function shen_user_lambda7430(Arg7428) {
  if (Arg7428.length < 0) return [Shen.type_func, shen_user_lambda7430, 0, Arg7428];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7429"];

Shen.call_toplevel("reg-kl.shen-toplevel-7429")





Shen.fns["reg-kl.shen-toplevel-7432"] = [Shen.type_func, function shen_user_lambda7433(Arg7431) {
  if (Arg7431.length < 0) return [Shen.type_func, shen_user_lambda7433, 0, Arg7431];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7432"];

Shen.call_toplevel("reg-kl.shen-toplevel-7432")





Shen.fns["reg-kl.shen-toplevel-7435"] = [Shen.type_func, function shen_user_lambda7436(Arg7434) {
  if (Arg7434.length < 0) return [Shen.type_func, shen_user_lambda7436, 0, Arg7434];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "format"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7435"];

Shen.call_toplevel("reg-kl.shen-toplevel-7435")





Shen.fns["reg-kl.shen-toplevel-7438"] = [Shen.type_func, function shen_user_lambda7439(Arg7437) {
  if (Arg7437.length < 0) return [Shen.type_func, shen_user_lambda7439, 0, Arg7437];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7438"];

Shen.call_toplevel("reg-kl.shen-toplevel-7438")





Shen.fns["reg-kl.shen-toplevel-7441"] = [Shen.type_func, function shen_user_lambda7442(Arg7440) {
  if (Arg7440.length < 0) return [Shen.type_func, shen_user_lambda7442, 0, Arg7440];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7441"];

Shen.call_toplevel("reg-kl.shen-toplevel-7441")





Shen.fns["reg-kl.shen-toplevel-7444"] = [Shen.type_func, function shen_user_lambda7445(Arg7443) {
  if (Arg7443.length < 0) return [Shen.type_func, shen_user_lambda7445, 0, Arg7443];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7444"];

Shen.call_toplevel("reg-kl.shen-toplevel-7444")





Shen.fns["reg-kl.shen-toplevel-7447"] = [Shen.type_func, function shen_user_lambda7448(Arg7446) {
  if (Arg7446.length < 0) return [Shen.type_func, shen_user_lambda7448, 0, Arg7446];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7447"];

Shen.call_toplevel("reg-kl.shen-toplevel-7447")





Shen.fns["reg-kl.shen-toplevel-7450"] = [Shen.type_func, function shen_user_lambda7451(Arg7449) {
  if (Arg7449.length < 0) return [Shen.type_func, shen_user_lambda7451, 0, Arg7449];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7450"];

Shen.call_toplevel("reg-kl.shen-toplevel-7450")





Shen.fns["reg-kl.shen-toplevel-7453"] = [Shen.type_func, function shen_user_lambda7454(Arg7452) {
  if (Arg7452.length < 0) return [Shen.type_func, shen_user_lambda7454, 0, Arg7452];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7453"];

Shen.call_toplevel("reg-kl.shen-toplevel-7453")





Shen.fns["reg-kl.shen-toplevel-7456"] = [Shen.type_func, function shen_user_lambda7457(Arg7455) {
  if (Arg7455.length < 0) return [Shen.type_func, shen_user_lambda7457, 0, Arg7455];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7456"];

Shen.call_toplevel("reg-kl.shen-toplevel-7456")





Shen.fns["reg-kl.shen-toplevel-7459"] = [Shen.type_func, function shen_user_lambda7460(Arg7458) {
  if (Arg7458.length < 0) return [Shen.type_func, shen_user_lambda7460, 0, Arg7458];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7459"];

Shen.call_toplevel("reg-kl.shen-toplevel-7459")





Shen.fns["reg-kl.shen-toplevel-7462"] = [Shen.type_func, function shen_user_lambda7463(Arg7461) {
  if (Arg7461.length < 0) return [Shen.type_func, shen_user_lambda7463, 0, Arg7461];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7462"];

Shen.call_toplevel("reg-kl.shen-toplevel-7462")





Shen.fns["reg-kl.shen-toplevel-7465"] = [Shen.type_func, function shen_user_lambda7466(Arg7464) {
  if (Arg7464.length < 0) return [Shen.type_func, shen_user_lambda7466, 0, Arg7464];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7465"];

Shen.call_toplevel("reg-kl.shen-toplevel-7465")





Shen.fns["reg-kl.shen-toplevel-7468"] = [Shen.type_func, function shen_user_lambda7469(Arg7467) {
  if (Arg7467.length < 0) return [Shen.type_func, shen_user_lambda7469, 0, Arg7467];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7468"];

Shen.call_toplevel("reg-kl.shen-toplevel-7468")





Shen.fns["reg-kl.shen-toplevel-7471"] = [Shen.type_func, function shen_user_lambda7472(Arg7470) {
  if (Arg7470.length < 0) return [Shen.type_func, shen_user_lambda7472, 0, Arg7470];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7471"];

Shen.call_toplevel("reg-kl.shen-toplevel-7471")





Shen.fns["reg-kl.shen-toplevel-7474"] = [Shen.type_func, function shen_user_lambda7475(Arg7473) {
  if (Arg7473.length < 0) return [Shen.type_func, shen_user_lambda7475, 0, Arg7473];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7474"];

Shen.call_toplevel("reg-kl.shen-toplevel-7474")





Shen.fns["reg-kl.shen-toplevel-7477"] = [Shen.type_func, function shen_user_lambda7478(Arg7476) {
  if (Arg7476.length < 0) return [Shen.type_func, shen_user_lambda7478, 0, Arg7476];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7477"];

Shen.call_toplevel("reg-kl.shen-toplevel-7477")





Shen.fns["reg-kl.shen-toplevel-7480"] = [Shen.type_func, function shen_user_lambda7481(Arg7479) {
  if (Arg7479.length < 0) return [Shen.type_func, shen_user_lambda7481, 0, Arg7479];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]);})}, 0, [], "reg-kl.shen-toplevel-7480"];

Shen.call_toplevel("reg-kl.shen-toplevel-7480")





Shen.fns["reg-kl.shen-toplevel-7483"] = [Shen.type_func, function shen_user_lambda7484(Arg7482) {
  if (Arg7482.length < 0) return [Shen.type_func, shen_user_lambda7484, 0, Arg7482];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.insert"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7483"];

Shen.call_toplevel("reg-kl.shen-toplevel-7483")





Shen.fns["reg-kl.shen-toplevel-7486"] = [Shen.type_func, function shen_user_lambda7487(Arg7485) {
  if (Arg7485.length < 0) return [Shen.type_func, shen_user_lambda7487, 0, Arg7485];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7486"];

Shen.call_toplevel("reg-kl.shen-toplevel-7486")





Shen.fns["reg-kl.shen-toplevel-7489"] = [Shen.type_func, function shen_user_lambda7490(Arg7488) {
  if (Arg7488.length < 0) return [Shen.type_func, shen_user_lambda7490, 0, Arg7488];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7489"];

Shen.call_toplevel("reg-kl.shen-toplevel-7489")





Shen.fns["reg-kl.shen-toplevel-7492"] = [Shen.type_func, function shen_user_lambda7493(Arg7491) {
  if (Arg7491.length < 0) return [Shen.type_func, shen_user_lambda7493, 0, Arg7491];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7492"];

Shen.call_toplevel("reg-kl.shen-toplevel-7492")





Shen.fns["reg-kl.shen-toplevel-7495"] = [Shen.type_func, function shen_user_lambda7496(Arg7494) {
  if (Arg7494.length < 0) return [Shen.type_func, shen_user_lambda7496, 0, Arg7494];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7495"];

Shen.call_toplevel("reg-kl.shen-toplevel-7495")





Shen.fns["reg-kl.shen-toplevel-7498"] = [Shen.type_func, function shen_user_lambda7499(Arg7497) {
  if (Arg7497.length < 0) return [Shen.type_func, shen_user_lambda7499, 0, Arg7497];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7498"];

Shen.call_toplevel("reg-kl.shen-toplevel-7498")





Shen.fns["reg-kl.shen-toplevel-7501"] = [Shen.type_func, function shen_user_lambda7502(Arg7500) {
  if (Arg7500.length < 0) return [Shen.type_func, shen_user_lambda7502, 0, Arg7500];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7501"];

Shen.call_toplevel("reg-kl.shen-toplevel-7501")





Shen.fns["reg-kl.shen-toplevel-7504"] = [Shen.type_func, function shen_user_lambda7505(Arg7503) {
  if (Arg7503.length < 0) return [Shen.type_func, shen_user_lambda7505, 0, Arg7503];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7504"];

Shen.call_toplevel("reg-kl.shen-toplevel-7504")





Shen.fns["reg-kl.shen-toplevel-7507"] = [Shen.type_func, function shen_user_lambda7508(Arg7506) {
  if (Arg7506.length < 0) return [Shen.type_func, shen_user_lambda7508, 0, Arg7506];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7507"];

Shen.call_toplevel("reg-kl.shen-toplevel-7507")





Shen.fns["reg-kl.shen-toplevel-7510"] = [Shen.type_func, function shen_user_lambda7511(Arg7509) {
  if (Arg7509.length < 0) return [Shen.type_func, shen_user_lambda7511, 0, Arg7509];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7510"];

Shen.call_toplevel("reg-kl.shen-toplevel-7510")





Shen.fns["reg-kl.shen-toplevel-7513"] = [Shen.type_func, function shen_user_lambda7514(Arg7512) {
  if (Arg7512.length < 0) return [Shen.type_func, shen_user_lambda7514, 0, Arg7512];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7513"];

Shen.call_toplevel("reg-kl.shen-toplevel-7513")





Shen.fns["reg-kl.shen-toplevel-7516"] = [Shen.type_func, function shen_user_lambda7517(Arg7515) {
  if (Arg7515.length < 0) return [Shen.type_func, shen_user_lambda7517, 0, Arg7515];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7516"];

Shen.call_toplevel("reg-kl.shen-toplevel-7516")





Shen.fns["reg-kl.shen-toplevel-7519"] = [Shen.type_func, function shen_user_lambda7520(Arg7518) {
  if (Arg7518.length < 0) return [Shen.type_func, shen_user_lambda7520, 0, Arg7518];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7519"];

Shen.call_toplevel("reg-kl.shen-toplevel-7519")





Shen.fns["reg-kl.shen-toplevel-7522"] = [Shen.type_func, function shen_user_lambda7523(Arg7521) {
  if (Arg7521.length < 0) return [Shen.type_func, shen_user_lambda7523, 0, Arg7521];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7522"];

Shen.call_toplevel("reg-kl.shen-toplevel-7522")





Shen.fns["reg-kl.shen-toplevel-7525"] = [Shen.type_func, function shen_user_lambda7526(Arg7524) {
  if (Arg7524.length < 0) return [Shen.type_func, shen_user_lambda7526, 0, Arg7524];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7525"];

Shen.call_toplevel("reg-kl.shen-toplevel-7525")





Shen.fns["reg-kl.shen-toplevel-7528"] = [Shen.type_func, function shen_user_lambda7529(Arg7527) {
  if (Arg7527.length < 0) return [Shen.type_func, shen_user_lambda7529, 0, Arg7527];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7528"];

Shen.call_toplevel("reg-kl.shen-toplevel-7528")





Shen.fns["reg-kl.shen-toplevel-7531"] = [Shen.type_func, function shen_user_lambda7532(Arg7530) {
  if (Arg7530.length < 0) return [Shen.type_func, shen_user_lambda7532, 0, Arg7530];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7531"];

Shen.call_toplevel("reg-kl.shen-toplevel-7531")





Shen.fns["reg-kl.shen-toplevel-7534"] = [Shen.type_func, function shen_user_lambda7535(Arg7533) {
  if (Arg7533.length < 0) return [Shen.type_func, shen_user_lambda7535, 0, Arg7533];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7534"];

Shen.call_toplevel("reg-kl.shen-toplevel-7534")





Shen.fns["reg-kl.shen-toplevel-7537"] = [Shen.type_func, function shen_user_lambda7538(Arg7536) {
  if (Arg7536.length < 0) return [Shen.type_func, shen_user_lambda7538, 0, Arg7536];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7537"];

Shen.call_toplevel("reg-kl.shen-toplevel-7537")





Shen.fns["reg-kl.shen-toplevel-7540"] = [Shen.type_func, function shen_user_lambda7541(Arg7539) {
  if (Arg7539.length < 0) return [Shen.type_func, shen_user_lambda7541, 0, Arg7539];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7540"];

Shen.call_toplevel("reg-kl.shen-toplevel-7540")





Shen.fns["reg-kl.shen-toplevel-7543"] = [Shen.type_func, function shen_user_lambda7544(Arg7542) {
  if (Arg7542.length < 0) return [Shen.type_func, shen_user_lambda7544, 0, Arg7542];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7543"];

Shen.call_toplevel("reg-kl.shen-toplevel-7543")





Shen.fns["reg-kl.shen-toplevel-7546"] = [Shen.type_func, function shen_user_lambda7547(Arg7545) {
  if (Arg7545.length < 0) return [Shen.type_func, shen_user_lambda7547, 0, Arg7545];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7546"];

Shen.call_toplevel("reg-kl.shen-toplevel-7546")





Shen.fns["reg-kl.shen-toplevel-7549"] = [Shen.type_func, function shen_user_lambda7550(Arg7548) {
  if (Arg7548.length < 0) return [Shen.type_func, shen_user_lambda7550, 0, Arg7548];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7549"];

Shen.call_toplevel("reg-kl.shen-toplevel-7549")





Shen.fns["reg-kl.shen-toplevel-7552"] = [Shen.type_func, function shen_user_lambda7553(Arg7551) {
  if (Arg7551.length < 0) return [Shen.type_func, shen_user_lambda7553, 0, Arg7551];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7552"];

Shen.call_toplevel("reg-kl.shen-toplevel-7552")





Shen.fns["reg-kl.shen-toplevel-7555"] = [Shen.type_func, function shen_user_lambda7556(Arg7554) {
  if (Arg7554.length < 0) return [Shen.type_func, shen_user_lambda7556, 0, Arg7554];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7555"];

Shen.call_toplevel("reg-kl.shen-toplevel-7555")





Shen.fns["reg-kl.shen-toplevel-7558"] = [Shen.type_func, function shen_user_lambda7559(Arg7557) {
  if (Arg7557.length < 0) return [Shen.type_func, shen_user_lambda7559, 0, Arg7557];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7558"];

Shen.call_toplevel("reg-kl.shen-toplevel-7558")





Shen.fns["reg-kl.shen-toplevel-7561"] = [Shen.type_func, function shen_user_lambda7562(Arg7560) {
  if (Arg7560.length < 0) return [Shen.type_func, shen_user_lambda7562, 0, Arg7560];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7561"];

Shen.call_toplevel("reg-kl.shen-toplevel-7561")





Shen.fns["reg-kl.shen-toplevel-7564"] = [Shen.type_func, function shen_user_lambda7565(Arg7563) {
  if (Arg7563.length < 0) return [Shen.type_func, shen_user_lambda7565, 0, Arg7563];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7564"];

Shen.call_toplevel("reg-kl.shen-toplevel-7564")





Shen.fns["reg-kl.shen-toplevel-7567"] = [Shen.type_func, function shen_user_lambda7568(Arg7566) {
  if (Arg7566.length < 0) return [Shen.type_func, shen_user_lambda7568, 0, Arg7566];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7567"];

Shen.call_toplevel("reg-kl.shen-toplevel-7567")





Shen.fns["reg-kl.shen-toplevel-7570"] = [Shen.type_func, function shen_user_lambda7571(Arg7569) {
  if (Arg7569.length < 0) return [Shen.type_func, shen_user_lambda7571, 0, Arg7569];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7570"];

Shen.call_toplevel("reg-kl.shen-toplevel-7570")





Shen.fns["reg-kl.shen-toplevel-7573"] = [Shen.type_func, function shen_user_lambda7574(Arg7572) {
  if (Arg7572.length < 0) return [Shen.type_func, shen_user_lambda7574, 0, Arg7572];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7573"];

Shen.call_toplevel("reg-kl.shen-toplevel-7573")





Shen.fns["reg-kl.shen-toplevel-7576"] = [Shen.type_func, function shen_user_lambda7577(Arg7575) {
  if (Arg7575.length < 0) return [Shen.type_func, shen_user_lambda7577, 0, Arg7575];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7576"];

Shen.call_toplevel("reg-kl.shen-toplevel-7576")





Shen.fns["reg-kl.shen-toplevel-7579"] = [Shen.type_func, function shen_user_lambda7580(Arg7578) {
  if (Arg7578.length < 0) return [Shen.type_func, shen_user_lambda7580, 0, Arg7578];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7579"];

Shen.call_toplevel("reg-kl.shen-toplevel-7579")





Shen.fns["reg-kl.shen-toplevel-7582"] = [Shen.type_func, function shen_user_lambda7583(Arg7581) {
  if (Arg7581.length < 0) return [Shen.type_func, shen_user_lambda7583, 0, Arg7581];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7582"];

Shen.call_toplevel("reg-kl.shen-toplevel-7582")





Shen.fns["reg-kl.shen-toplevel-7585"] = [Shen.type_func, function shen_user_lambda7586(Arg7584) {
  if (Arg7584.length < 0) return [Shen.type_func, shen_user_lambda7586, 0, Arg7584];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7585"];

Shen.call_toplevel("reg-kl.shen-toplevel-7585")





Shen.fns["reg-kl.shen-toplevel-7588"] = [Shen.type_func, function shen_user_lambda7589(Arg7587) {
  if (Arg7587.length < 0) return [Shen.type_func, shen_user_lambda7589, 0, Arg7587];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7588"];

Shen.call_toplevel("reg-kl.shen-toplevel-7588")





Shen.fns["reg-kl.shen-toplevel-7591"] = [Shen.type_func, function shen_user_lambda7592(Arg7590) {
  if (Arg7590.length < 0) return [Shen.type_func, shen_user_lambda7592, 0, Arg7590];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7591"];

Shen.call_toplevel("reg-kl.shen-toplevel-7591")





Shen.fns["reg-kl.shen-toplevel-7594"] = [Shen.type_func, function shen_user_lambda7595(Arg7593) {
  if (Arg7593.length < 0) return [Shen.type_func, shen_user_lambda7595, 0, Arg7593];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7594"];

Shen.call_toplevel("reg-kl.shen-toplevel-7594")





Shen.fns["reg-kl.shen-toplevel-7597"] = [Shen.type_func, function shen_user_lambda7598(Arg7596) {
  if (Arg7596.length < 0) return [Shen.type_func, shen_user_lambda7598, 0, Arg7596];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7597"];

Shen.call_toplevel("reg-kl.shen-toplevel-7597")





Shen.fns["reg-kl.shen-toplevel-7600"] = [Shen.type_func, function shen_user_lambda7601(Arg7599) {
  if (Arg7599.length < 0) return [Shen.type_func, shen_user_lambda7601, 0, Arg7599];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], []]]]);})}, 0, [], "reg-kl.shen-toplevel-7600"];

Shen.call_toplevel("reg-kl.shen-toplevel-7600")





Shen.fns["reg-kl.shen-toplevel-7603"] = [Shen.type_func, function shen_user_lambda7604(Arg7602) {
  if (Arg7602.length < 0) return [Shen.type_func, shen_user_lambda7604, 0, Arg7602];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], []]]]);})}, 0, [], "reg-kl.shen-toplevel-7603"];

Shen.call_toplevel("reg-kl.shen-toplevel-7603")





Shen.fns["reg-kl.shen-toplevel-7606"] = [Shen.type_func, function shen_user_lambda7607(Arg7605) {
  if (Arg7605.length < 0) return [Shen.type_func, shen_user_lambda7607, 0, Arg7605];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7606"];

Shen.call_toplevel("reg-kl.shen-toplevel-7606")





Shen.fns["reg-kl.shen-toplevel-7609"] = [Shen.type_func, function shen_user_lambda7610(Arg7608) {
  if (Arg7608.length < 0) return [Shen.type_func, shen_user_lambda7610, 0, Arg7608];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7609"];

Shen.call_toplevel("reg-kl.shen-toplevel-7609")





Shen.fns["reg-kl.shen-toplevel-7612"] = [Shen.type_func, function shen_user_lambda7613(Arg7611) {
  if (Arg7611.length < 0) return [Shen.type_func, shen_user_lambda7613, 0, Arg7611];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7612"];

Shen.call_toplevel("reg-kl.shen-toplevel-7612")





Shen.fns["reg-kl.shen-toplevel-7615"] = [Shen.type_func, function shen_user_lambda7616(Arg7614) {
  if (Arg7614.length < 0) return [Shen.type_func, shen_user_lambda7616, 0, Arg7614];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7615"];

Shen.call_toplevel("reg-kl.shen-toplevel-7615")





Shen.fns["reg-kl.shen-toplevel-7618"] = [Shen.type_func, function shen_user_lambda7619(Arg7617) {
  if (Arg7617.length < 0) return [Shen.type_func, shen_user_lambda7619, 0, Arg7617];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.sum"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7618"];

Shen.call_toplevel("reg-kl.shen-toplevel-7618")





Shen.fns["reg-kl.shen-toplevel-7621"] = [Shen.type_func, function shen_user_lambda7622(Arg7620) {
  if (Arg7620.length < 0) return [Shen.type_func, shen_user_lambda7622, 0, Arg7620];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7621"];

Shen.call_toplevel("reg-kl.shen-toplevel-7621")





Shen.fns["reg-kl.shen-toplevel-7624"] = [Shen.type_func, function shen_user_lambda7625(Arg7623) {
  if (Arg7623.length < 0) return [Shen.type_func, shen_user_lambda7625, 0, Arg7623];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7624"];

Shen.call_toplevel("reg-kl.shen-toplevel-7624")





Shen.fns["reg-kl.shen-toplevel-7627"] = [Shen.type_func, function shen_user_lambda7628(Arg7626) {
  if (Arg7626.length < 0) return [Shen.type_func, shen_user_lambda7628, 0, Arg7626];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7627"];

Shen.call_toplevel("reg-kl.shen-toplevel-7627")





Shen.fns["reg-kl.shen-toplevel-7630"] = [Shen.type_func, function shen_user_lambda7631(Arg7629) {
  if (Arg7629.length < 0) return [Shen.type_func, shen_user_lambda7631, 0, Arg7629];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7630"];

Shen.call_toplevel("reg-kl.shen-toplevel-7630")





Shen.fns["reg-kl.shen-toplevel-7633"] = [Shen.type_func, function shen_user_lambda7634(Arg7632) {
  if (Arg7632.length < 0) return [Shen.type_func, shen_user_lambda7634, 0, Arg7632];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7633"];

Shen.call_toplevel("reg-kl.shen-toplevel-7633")





Shen.fns["reg-kl.shen-toplevel-7636"] = [Shen.type_func, function shen_user_lambda7637(Arg7635) {
  if (Arg7635.length < 0) return [Shen.type_func, shen_user_lambda7637, 0, Arg7635];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7636"];

Shen.call_toplevel("reg-kl.shen-toplevel-7636")





Shen.fns["reg-kl.shen-toplevel-7639"] = [Shen.type_func, function shen_user_lambda7640(Arg7638) {
  if (Arg7638.length < 0) return [Shen.type_func, shen_user_lambda7640, 0, Arg7638];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7639"];

Shen.call_toplevel("reg-kl.shen-toplevel-7639")





Shen.fns["reg-kl.shen-toplevel-7642"] = [Shen.type_func, function shen_user_lambda7643(Arg7641) {
  if (Arg7641.length < 0) return [Shen.type_func, shen_user_lambda7643, 0, Arg7641];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7642"];

Shen.call_toplevel("reg-kl.shen-toplevel-7642")





Shen.fns["reg-kl.shen-toplevel-7645"] = [Shen.type_func, function shen_user_lambda7646(Arg7644) {
  if (Arg7644.length < 0) return [Shen.type_func, shen_user_lambda7646, 0, Arg7644];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7645"];

Shen.call_toplevel("reg-kl.shen-toplevel-7645")





Shen.fns["reg-kl.shen-toplevel-7648"] = [Shen.type_func, function shen_user_lambda7649(Arg7647) {
  if (Arg7647.length < 0) return [Shen.type_func, shen_user_lambda7649, 0, Arg7647];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7648"];

Shen.call_toplevel("reg-kl.shen-toplevel-7648")





Shen.fns["reg-kl.shen-toplevel-7651"] = [Shen.type_func, function shen_user_lambda7652(Arg7650) {
  if (Arg7650.length < 0) return [Shen.type_func, shen_user_lambda7652, 0, Arg7650];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.truncate"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7651"];

Shen.call_toplevel("reg-kl.shen-toplevel-7651")





Shen.fns["reg-kl.shen-toplevel-7654"] = [Shen.type_func, function shen_user_lambda7655(Arg7653) {
  if (Arg7653.length < 0) return [Shen.type_func, shen_user_lambda7655, 0, Arg7653];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tuple?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7654"];

Shen.call_toplevel("reg-kl.shen-toplevel-7654")





Shen.fns["reg-kl.shen-toplevel-7657"] = [Shen.type_func, function shen_user_lambda7658(Arg7656) {
  if (Arg7656.length < 0) return [Shen.type_func, shen_user_lambda7658, 0, Arg7656];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7657"];

Shen.call_toplevel("reg-kl.shen-toplevel-7657")





Shen.fns["reg-kl.shen-toplevel-7660"] = [Shen.type_func, function shen_user_lambda7661(Arg7659) {
  if (Arg7659.length < 0) return [Shen.type_func, shen_user_lambda7661, 0, Arg7659];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7660"];

Shen.call_toplevel("reg-kl.shen-toplevel-7660")





Shen.fns["reg-kl.shen-toplevel-7663"] = [Shen.type_func, function shen_user_lambda7664(Arg7662) {
  if (Arg7662.length < 0) return [Shen.type_func, shen_user_lambda7664, 0, Arg7662];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7663"];

Shen.call_toplevel("reg-kl.shen-toplevel-7663")





Shen.fns["reg-kl.shen-toplevel-7666"] = [Shen.type_func, function shen_user_lambda7667(Arg7665) {
  if (Arg7665.length < 0) return [Shen.type_func, shen_user_lambda7667, 0, Arg7665];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7666"];

Shen.call_toplevel("reg-kl.shen-toplevel-7666")





Shen.fns["reg-kl.shen-toplevel-7669"] = [Shen.type_func, function shen_user_lambda7670(Arg7668) {
  if (Arg7668.length < 0) return [Shen.type_func, shen_user_lambda7670, 0, Arg7668];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7669"];

Shen.call_toplevel("reg-kl.shen-toplevel-7669")





Shen.fns["reg-kl.shen-toplevel-7672"] = [Shen.type_func, function shen_user_lambda7673(Arg7671) {
  if (Arg7671.length < 0) return [Shen.type_func, shen_user_lambda7673, 0, Arg7671];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7672"];

Shen.call_toplevel("reg-kl.shen-toplevel-7672")





Shen.fns["reg-kl.shen-toplevel-7675"] = [Shen.type_func, function shen_user_lambda7676(Arg7674) {
  if (Arg7674.length < 0) return [Shen.type_func, shen_user_lambda7676, 0, Arg7674];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7675"];

Shen.call_toplevel("reg-kl.shen-toplevel-7675")





Shen.fns["reg-kl.shen-toplevel-7678"] = [Shen.type_func, function shen_user_lambda7679(Arg7677) {
  if (Arg7677.length < 0) return [Shen.type_func, shen_user_lambda7679, 0, Arg7677];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7678"];

Shen.call_toplevel("reg-kl.shen-toplevel-7678")





Shen.fns["reg-kl.shen-toplevel-7681"] = [Shen.type_func, function shen_user_lambda7682(Arg7680) {
  if (Arg7680.length < 0) return [Shen.type_func, shen_user_lambda7682, 0, Arg7680];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7681"];

Shen.call_toplevel("reg-kl.shen-toplevel-7681")





Shen.fns["reg-kl.shen-toplevel-7684"] = [Shen.type_func, function shen_user_lambda7685(Arg7683) {
  if (Arg7683.length < 0) return [Shen.type_func, shen_user_lambda7685, 0, Arg7683];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7684"];

Shen.call_toplevel("reg-kl.shen-toplevel-7684")





Shen.fns["reg-kl.shen-toplevel-7687"] = [Shen.type_func, function shen_user_lambda7688(Arg7686) {
  if (Arg7686.length < 0) return [Shen.type_func, shen_user_lambda7688, 0, Arg7686];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7687"];

Shen.call_toplevel("reg-kl.shen-toplevel-7687")





Shen.fns["reg-kl.shen-toplevel-7690"] = [Shen.type_func, function shen_user_lambda7691(Arg7689) {
  if (Arg7689.length < 0) return [Shen.type_func, shen_user_lambda7691, 0, Arg7689];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7690"];

Shen.call_toplevel("reg-kl.shen-toplevel-7690")





Shen.fns["reg-kl.shen-toplevel-7693"] = [Shen.type_func, function shen_user_lambda7694(Arg7692) {
  if (Arg7692.length < 0) return [Shen.type_func, shen_user_lambda7694, 0, Arg7692];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7693"];

Shen.call_toplevel("reg-kl.shen-toplevel-7693")





Shen.fns["reg-kl.shen-toplevel-7696"] = [Shen.type_func, function shen_user_lambda7697(Arg7695) {
  if (Arg7695.length < 0) return [Shen.type_func, shen_user_lambda7697, 0, Arg7695];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7696"];

Shen.call_toplevel("reg-kl.shen-toplevel-7696")





Shen.fns["reg-kl.shen-toplevel-7699"] = [Shen.type_func, function shen_user_lambda7700(Arg7698) {
  if (Arg7698.length < 0) return [Shen.type_func, shen_user_lambda7700, 0, Arg7698];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7699"];

Shen.call_toplevel("reg-kl.shen-toplevel-7699")





Shen.fns["reg-kl.shen-toplevel-7702"] = [Shen.type_func, function shen_user_lambda7703(Arg7701) {
  if (Arg7701.length < 0) return [Shen.type_func, shen_user_lambda7703, 0, Arg7701];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7702"];

Shen.call_toplevel("reg-kl.shen-toplevel-7702")





Shen.fns["reg-kl.shen-toplevel-7705"] = [Shen.type_func, function shen_user_lambda7706(Arg7704) {
  if (Arg7704.length < 0) return [Shen.type_func, shen_user_lambda7706, 0, Arg7704];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7705"];

Shen.call_toplevel("reg-kl.shen-toplevel-7705")





Shen.fns["reg-kl.shen-toplevel-7708"] = [Shen.type_func, function shen_user_lambda7709(Arg7707) {
  if (Arg7707.length < 0) return [Shen.type_func, shen_user_lambda7709, 0, Arg7707];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7708"];

Shen.call_toplevel("reg-kl.shen-toplevel-7708")





Shen.fns["reg-kl.shen-toplevel-7711"] = [Shen.type_func, function shen_user_lambda7712(Arg7710) {
  if (Arg7710.length < 0) return [Shen.type_func, shen_user_lambda7712, 0, Arg7710];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7711"];

Shen.call_toplevel("reg-kl.shen-toplevel-7711")





Shen.fns["reg-kl.shen-toplevel-7714"] = [Shen.type_func, function shen_user_lambda7715(Arg7713) {
  if (Arg7713.length < 0) return [Shen.type_func, shen_user_lambda7715, 0, Arg7713];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})}, 0, [], "reg-kl.shen-toplevel-7714"];

Shen.call_toplevel("reg-kl.shen-toplevel-7714")










Shen.fns["shen.typecheck"] = [Shen.type_func, function shen_user_lambda5675(Arg5674) {
  if (Arg5674.length < 2) return [Shen.type_func, shen_user_lambda5675, 2, Arg5674];
  var Arg5674_0 = Arg5674[0], Arg5674_1 = Arg5674[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.curry"], [Arg5674_0])),
  (R1 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (R2 = Shen.call(Shen.fns["shen.insert-prolog-variables"], [Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Arg5674_1])]), R1])),
  (R3 = (new Shen.Freeze([R0, R2, R1], function(Arg5676) {
  var Arg5676_0 = Arg5676[0], Arg5676_1 = Arg5676[1], Arg5676_2 = Arg5676[2];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["return"], [Arg5676_1, Arg5676_2, [Shen.type_symbol, "shen.void"]]);});})}))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R2, []]]], [], R1, R3]);}))}, 2, [], "shen.typecheck"];





Shen.fns["shen.curry"] = [Shen.type_func, function shen_user_lambda5679(Arg5678) {
  if (Arg5678.length < 1) return [Shen.type_func, shen_user_lambda5679, 1, Arg5678];
  var Arg5678_0 = Arg5678[0];
  return (((Shen.is_type(Arg5678_0, Shen.type_cons) && Shen.call(Shen.fns["shen.special?"], [Arg5678_0[1]])))
  ? [Shen.type_cons, Arg5678_0[1], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.curry"], Arg5678_0[2]])]
  : (((Shen.is_type(Arg5678_0, Shen.type_cons) && (Shen.is_type(Arg5678_0[2], Shen.type_cons) && Shen.call(Shen.fns["shen.extraspecial?"], [Arg5678_0[1]]))))
  ? Arg5678_0
  : (((Shen.is_type(Arg5678_0, Shen.type_cons) && (Shen.is_type(Arg5678_0[2], Shen.type_cons) && Shen.is_type(Arg5678_0[2][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry"], [[Shen.type_cons, [Shen.type_cons, Arg5678_0[1], [Shen.type_cons, Arg5678_0[2][1], []]], Arg5678_0[2][2]]]);})
  : (((Shen.is_type(Arg5678_0, Shen.type_cons) && (Shen.is_type(Arg5678_0[2], Shen.type_cons) && Shen.empty$question$(Arg5678_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg5678_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg5678_0[2][1]]), []]]
  : Arg5678_0))))}, 1, [], "shen.curry"];





Shen.fns["shen.special?"] = [Shen.type_func, function shen_user_lambda5681(Arg5680) {
  if (Arg5680.length < 1) return [Shen.type_func, shen_user_lambda5681, 1, Arg5680];
  var Arg5680_0 = Arg5680[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5680_0, (Shen.globals["shen.*special*"])]);})}, 1, [], "shen.special?"];





Shen.fns["shen.extraspecial?"] = [Shen.type_func, function shen_user_lambda5683(Arg5682) {
  if (Arg5682.length < 1) return [Shen.type_func, shen_user_lambda5683, 1, Arg5682];
  var Arg5682_0 = Arg5682[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5682_0, (Shen.globals["shen.*extraspecial*"])]);})}, 1, [], "shen.extraspecial?"];





Shen.fns["shen.t*"] = [Shen.type_func, function shen_user_lambda5685(Arg5684) {
  if (Arg5684.length < 4) return [Shen.type_func, shen_user_lambda5685, 4, Arg5684];
  var Arg5684_0 = Arg5684[0], Arg5684_1 = Arg5684[1], Arg5684_2 = Arg5684[2], Arg5684_3 = Arg5684[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5684_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.maxinfexceeded?"], []), Arg5684_2, (new Shen.Freeze([R1, Arg5684_2, Arg5684_3, R0, Arg5684_0, Arg5684_1, Arg5684_2, Arg5684_3], function(Arg5686) {
  var Arg5686_0 = Arg5686[0], Arg5686_1 = Arg5686[1], Arg5686_2 = Arg5686[2], Arg5686_3 = Arg5686[3], Arg5686_4 = Arg5686[4], Arg5686_5 = Arg5686[5], Arg5686_6 = Arg5686[6], Arg5686_7 = Arg5686[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5686_0, Shen.call(Shen.fns["shen.errormaxinfs"], []), Arg5686_1, Arg5686_2]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5684_0, Arg5684_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5684_2, (new Shen.Freeze([R0, Arg5684_0, Arg5684_1, Arg5684_2, Arg5684_3], function(Arg5688) {
  var Arg5688_0 = Arg5688[0], Arg5688_1 = Arg5688[1], Arg5688_2 = Arg5688[2], Arg5688_3 = Arg5688[3], Arg5688_4 = Arg5688[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-failure"], [Arg5688_3, Arg5688_4]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5684_0, Arg5684_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5684_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5684_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5684_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5684_2])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.type-theory-enabled?"], []), Arg5684_2, (new Shen.Freeze([R0, R2, R1, Arg5684_0, Arg5684_1, Arg5684_2, Arg5684_3], function(Arg5690) {
  var Arg5690_0 = Arg5690[0], Arg5690_1 = Arg5690[1], Arg5690_2 = Arg5690[2], Arg5690_3 = Arg5690[3], Arg5690_4 = Arg5690[4], Arg5690_5 = Arg5690[5], Arg5690_6 = Arg5690[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5690_0, Arg5690_5, (new Shen.Freeze([Arg5690_0, Arg5690_1, Arg5690_2, Arg5690_4, Arg5690_5, Arg5690_6], function(Arg5692) {
  var Arg5692_0 = Arg5692[0], Arg5692_1 = Arg5692[1], Arg5692_2 = Arg5692[2], Arg5692_3 = Arg5692[3], Arg5692_4 = Arg5692[4], Arg5692_5 = Arg5692[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5692_1, Arg5692_2, Arg5692_3, Arg5692_4, Arg5692_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5684_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.show"], [Arg5684_0, Arg5684_1, Arg5684_2, (new Shen.Freeze([Arg5684_0, Arg5684_1, R1, Arg5684_2, Arg5684_3], function(Arg5694) {
  var Arg5694_0 = Arg5694[0], Arg5694_1 = Arg5694[1], Arg5694_2 = Arg5694[2], Arg5694_3 = Arg5694[3], Arg5694_4 = Arg5694[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5694_2, (Shen.globals["shen.*datatypes*"]), Arg5694_3, (new Shen.Freeze([Arg5694_0, Arg5694_1, Arg5694_2, Arg5694_3, Arg5694_4], function(Arg5696) {
  var Arg5696_0 = Arg5696[0], Arg5696_1 = Arg5696[1], Arg5696_2 = Arg5696[2], Arg5696_3 = Arg5696[3], Arg5696_4 = Arg5696[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg5696_0, Arg5696_1, Arg5696_2, Arg5696_3, Arg5696_4]);});})}))]);});})}))]))
  : R1))
  : R1))
  : R1))]);}))}, 4, [], "shen.t*"];





Shen.fns["shen.type-theory-enabled?"] = [Shen.type_func, function shen_user_lambda5699(Arg5698) {
  if (Arg5698.length < 0) return [Shen.type_func, shen_user_lambda5699, 0, Arg5698];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"])}, 0, [], "shen.type-theory-enabled?"];





Shen.fns["enable-type-theory"] = [Shen.type_func, function shen_user_lambda5701(Arg5700) {
  if (Arg5700.length < 1) return [Shen.type_func, shen_user_lambda5701, 1, Arg5700];
  var Arg5700_0 = Arg5700[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5700_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5700_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = false)
  : (function() {
  return Shen.simple_error("enable-type-theory expects a + or a -\x0a");})))}, 1, [], "enable-type-theory"];





Shen.fns["shen.prolog-failure"] = [Shen.type_func, function shen_user_lambda5703(Arg5702) {
  if (Arg5702.length < 2) return [Shen.type_func, shen_user_lambda5703, 2, Arg5702];
  var Arg5702_0 = Arg5702[0], Arg5702_1 = Arg5702[1];
  return false}, 2, [], "shen.prolog-failure"];





Shen.fns["shen.maxinfexceeded?"] = [Shen.type_func, function shen_user_lambda5705(Arg5704) {
  if (Arg5704.length < 0) return [Shen.type_func, shen_user_lambda5705, 0, Arg5704];
  return (Shen.call(Shen.fns["inferences"], []) > (Shen.globals["shen.*maxinferences*"]))}, 0, [], "shen.maxinfexceeded?"];





Shen.fns["shen.errormaxinfs"] = [Shen.type_func, function shen_user_lambda5707(Arg5706) {
  if (Arg5706.length < 0) return [Shen.type_func, shen_user_lambda5707, 0, Arg5706];
  return (function() {
  return Shen.simple_error("maximum inferences exceeded~%");})}, 0, [], "shen.errormaxinfs"];





Shen.fns["shen.udefs*"] = [Shen.type_func, function shen_user_lambda5709(Arg5708) {
  if (Arg5708.length < 5) return [Shen.type_func, shen_user_lambda5709, 5, Arg5708];
  var Arg5708_0 = Arg5708[0], Arg5708_1 = Arg5708[1], Arg5708_2 = Arg5708[2], Arg5708_3 = Arg5708[3], Arg5708_4 = Arg5708[4];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5708_2, Arg5708_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[1]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [[Shen.type_cons, R0, [Shen.type_cons, Arg5708_0, [Shen.type_cons, Arg5708_1, []]]], Arg5708_3, Arg5708_4])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5708_2, Arg5708_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg5708_0, Arg5708_1, R0, Arg5708_3, Arg5708_4]);}))
  : false))
  : R0))}, 5, [], "shen.udefs*"];





Shen.fns["shen.th*"] = [Shen.type_func, function shen_user_lambda5711(Arg5710) {
  if (Arg5710.length < 5) return [Shen.type_func, shen_user_lambda5711, 5, Arg5710];
  var Arg5710_0 = Arg5710[0], Arg5710_1 = Arg5710[1], Arg5710_2 = Arg5710[2], Arg5710_3 = Arg5710[3], Arg5710_4 = Arg5710[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.show"], [[Shen.type_cons, Arg5710_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5710_1, []]]], Arg5710_2, Arg5710_3, (new Shen.Freeze([R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5712) {
  var Arg5712_0 = Arg5712[0], Arg5712_1 = Arg5712[1], Arg5712_2 = Arg5712[2], Arg5712_3 = Arg5712[3], Arg5712_4 = Arg5712[4], Arg5712_5 = Arg5712[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg5712_4, Arg5712_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.typedf?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])]), Arg5710_3, (new Shen.Freeze([Arg5710_0, R1, Arg5710_1, Arg5710_3, Arg5710_4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5714) {
  var Arg5714_0 = Arg5714[0], Arg5714_1 = Arg5714[1], Arg5714_2 = Arg5714[2], Arg5714_3 = Arg5714[3], Arg5714_4 = Arg5714[4], Arg5714_5 = Arg5714[5], Arg5714_6 = Arg5714[6], Arg5714_7 = Arg5714[7], Arg5714_8 = Arg5714[8], Arg5714_9 = Arg5714[9], Arg5714_10 = Arg5714[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5714_1, Shen.call(Shen.fns["shen.sigf"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5714_0, Arg5714_3])]), Arg5714_3, (new Shen.Freeze([Arg5714_0, Arg5714_1, Arg5714_2, Arg5714_3, Arg5714_4], function(Arg5716) {
  var Arg5716_0 = Arg5716[0], Arg5716_1 = Arg5716[1], Arg5716_2 = Arg5716[2], Arg5716_3 = Arg5716[3], Arg5716_4 = Arg5716[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["call"], [[Shen.type_cons, Arg5716_1, [Shen.type_cons, Arg5716_2, []]], Arg5716_3, Arg5716_4]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.base"], [Arg5710_0, Arg5710_1, Arg5710_3, Arg5710_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.by_hypothesis"], [Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5710_1, []]], Arg5710_2, Arg5710_3, Arg5710_4])))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5710_1, []]]], Arg5710_2, Arg5710_3, (new Shen.Freeze([R2, Arg5710_1, R3, R1, Arg5710_2, Arg5710_3, Arg5710_4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5718) {
  var Arg5718_0 = Arg5718[0], Arg5718_1 = Arg5718[1], Arg5718_2 = Arg5718[2], Arg5718_3 = Arg5718[3], Arg5718_4 = Arg5718[4], Arg5718_5 = Arg5718[5], Arg5718_6 = Arg5718[6], Arg5718_7 = Arg5718[7], Arg5718_8 = Arg5718[8], Arg5718_9 = Arg5718[9], Arg5718_10 = Arg5718[10], Arg5718_11 = Arg5718[11], Arg5718_12 = Arg5718[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5718_2, Arg5718_3, Arg5718_4, Arg5718_5, Arg5718_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_1, Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5710_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5720) {
  var Arg5720_0 = Arg5720[0], Arg5720_1 = Arg5720[1], Arg5720_2 = Arg5720[2], Arg5720_3 = Arg5720[3], Arg5720_4 = Arg5720[4], Arg5720_5 = Arg5720[5], Arg5720_6 = Arg5720[6], Arg5720_7 = Arg5720[7], Arg5720_8 = Arg5720[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5720_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5720_2, []]], Arg5720_6, Arg5720_7, Arg5720_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5722) {
  var Arg5722_0 = Arg5722[0], Arg5722_1 = Arg5722[1], Arg5722_2 = Arg5722[2], Arg5722_3 = Arg5722[3], Arg5722_4 = Arg5722[4], Arg5722_5 = Arg5722[5], Arg5722_6 = Arg5722[6], Arg5722_7 = Arg5722[7], Arg5722_8 = Arg5722[8], Arg5722_9 = Arg5722[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5722_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5722_2, []]], Arg5722_7, Arg5722_8, Arg5722_9]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R2, Arg5710_2, Arg5710_4, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5724) {
  var Arg5724_0 = Arg5724[0], Arg5724_1 = Arg5724[1], Arg5724_2 = Arg5724[2], Arg5724_3 = Arg5724[3], Arg5724_4 = Arg5724[4], Arg5724_5 = Arg5724[5], Arg5724_6 = Arg5724[6], Arg5724_7 = Arg5724[7], Arg5724_8 = Arg5724[8], Arg5724_9 = Arg5724[9], Arg5724_10 = Arg5724[10], Arg5724_11 = Arg5724[11], Arg5724_12 = Arg5724[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5724_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5724_2, []]], Arg5724_3, Arg5724_6, Arg5724_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "list"], Arg5710_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R5, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5726) {
  var Arg5726_0 = Arg5726[0], Arg5726_1 = Arg5726[1], Arg5726_2 = Arg5726[2], Arg5726_3 = Arg5726[3], Arg5726_4 = Arg5726[4], Arg5726_5 = Arg5726[5], Arg5726_6 = Arg5726[6], Arg5726_7 = Arg5726[7], Arg5726_8 = Arg5726[8], Arg5726_9 = Arg5726[9], Arg5726_10 = Arg5726[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5726_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5726_2, []]], Arg5726_8, Arg5726_4, Arg5726_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5728) {
  var Arg5728_0 = Arg5728[0], Arg5728_1 = Arg5728[1], Arg5728_2 = Arg5728[2], Arg5728_3 = Arg5728[3], Arg5728_4 = Arg5728[4], Arg5728_5 = Arg5728[5], Arg5728_6 = Arg5728[6], Arg5728_7 = Arg5728[7], Arg5728_8 = Arg5728[8], Arg5728_9 = Arg5728[9], Arg5728_10 = Arg5728[10], Arg5728_11 = Arg5728[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5728_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5728_2, []]], Arg5728_9, Arg5728_5, Arg5728_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R5, Arg5710_2, Arg5710_4, R2, Arg5710_3, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5730) {
  var Arg5730_0 = Arg5730[0], Arg5730_1 = Arg5730[1], Arg5730_2 = Arg5730[2], Arg5730_3 = Arg5730[3], Arg5730_4 = Arg5730[4], Arg5730_5 = Arg5730[5], Arg5730_6 = Arg5730[6], Arg5730_7 = Arg5730[7], Arg5730_8 = Arg5730[8], Arg5730_9 = Arg5730[9], Arg5730_10 = Arg5730[10], Arg5730_11 = Arg5730[11], Arg5730_12 = Arg5730[12], Arg5730_13 = Arg5730[13], Arg5730_14 = Arg5730[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5730_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5730_2, []]], Arg5730_3, Arg5730_6, Arg5730_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R4, []]], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R4, Arg5710_2, Arg5710_4, R2, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5732) {
  var Arg5732_0 = Arg5732[0], Arg5732_1 = Arg5732[1], Arg5732_2 = Arg5732[2], Arg5732_3 = Arg5732[3], Arg5732_4 = Arg5732[4], Arg5732_5 = Arg5732[5], Arg5732_6 = Arg5732[6], Arg5732_7 = Arg5732[7], Arg5732_8 = Arg5732[8], Arg5732_9 = Arg5732[9], Arg5732_10 = Arg5732[10], Arg5732_11 = Arg5732[11], Arg5732_12 = Arg5732[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5732_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5732_2, []]], Arg5732_3, Arg5732_6, Arg5732_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_1, Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5710_3])),
  ((Shen.empty$question$(R5))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R4, R3, R2, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5734) {
  var Arg5734_0 = Arg5734[0], Arg5734_1 = Arg5734[1], Arg5734_2 = Arg5734[2], Arg5734_3 = Arg5734[3], Arg5734_4 = Arg5734[4], Arg5734_5 = Arg5734[5], Arg5734_6 = Arg5734[6], Arg5734_7 = Arg5734[7], Arg5734_8 = Arg5734[8], Arg5734_9 = Arg5734[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5734_2, Arg5734_3, Arg5734_7, Arg5734_8, Arg5734_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R4, R3, R2, R5, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5736) {
  var Arg5736_0 = Arg5736[0], Arg5736_1 = Arg5736[1], Arg5736_2 = Arg5736[2], Arg5736_3 = Arg5736[3], Arg5736_4 = Arg5736[4], Arg5736_5 = Arg5736[5], Arg5736_6 = Arg5736[6], Arg5736_7 = Arg5736[7], Arg5736_8 = Arg5736[8], Arg5736_9 = Arg5736[9], Arg5736_10 = Arg5736[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5736_2, Arg5736_3, Arg5736_8, Arg5736_9, Arg5736_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5710_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R4, R3, R2, Arg5710_2, Arg5710_4, R5, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5738) {
  var Arg5738_0 = Arg5738[0], Arg5738_1 = Arg5738[1], Arg5738_2 = Arg5738[2], Arg5738_3 = Arg5738[3], Arg5738_4 = Arg5738[4], Arg5738_5 = Arg5738[5], Arg5738_6 = Arg5738[6], Arg5738_7 = Arg5738[7], Arg5738_8 = Arg5738[8], Arg5738_9 = Arg5738[9], Arg5738_10 = Arg5738[10], Arg5738_11 = Arg5738[11], Arg5738_12 = Arg5738[12], Arg5738_13 = Arg5738[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5738_2, Arg5738_3, Arg5738_4, Arg5738_7, Arg5738_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5710_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "*"], Arg5710_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R4, R3, R6, R5, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5740) {
  var Arg5740_0 = Arg5740[0], Arg5740_1 = Arg5740[1], Arg5740_2 = Arg5740[2], Arg5740_3 = Arg5740[3], Arg5740_4 = Arg5740[4], Arg5740_5 = Arg5740[5], Arg5740_6 = Arg5740[6], Arg5740_7 = Arg5740[7], Arg5740_8 = Arg5740[8], Arg5740_9 = Arg5740[9], Arg5740_10 = Arg5740[10], Arg5740_11 = Arg5740[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5740_2, Arg5740_3, Arg5740_9, Arg5740_5, Arg5740_10]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R4, R3, R6, R2, R5, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5742) {
  var Arg5742_0 = Arg5742[0], Arg5742_1 = Arg5742[1], Arg5742_2 = Arg5742[2], Arg5742_3 = Arg5742[3], Arg5742_4 = Arg5742[4], Arg5742_5 = Arg5742[5], Arg5742_6 = Arg5742[6], Arg5742_7 = Arg5742[7], Arg5742_8 = Arg5742[8], Arg5742_9 = Arg5742[9], Arg5742_10 = Arg5742[10], Arg5742_11 = Arg5742[11], Arg5742_12 = Arg5742[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5742_2, Arg5742_3, Arg5742_10, Arg5742_6, Arg5742_11]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R4, R3, R6, Arg5710_2, Arg5710_4, R2, Arg5710_3, R5, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5744) {
  var Arg5744_0 = Arg5744[0], Arg5744_1 = Arg5744[1], Arg5744_2 = Arg5744[2], Arg5744_3 = Arg5744[3], Arg5744_4 = Arg5744[4], Arg5744_5 = Arg5744[5], Arg5744_6 = Arg5744[6], Arg5744_7 = Arg5744[7], Arg5744_8 = Arg5744[8], Arg5744_9 = Arg5744[9], Arg5744_10 = Arg5744[10], Arg5744_11 = Arg5744[11], Arg5744_12 = Arg5744[12], Arg5744_13 = Arg5744[13], Arg5744_14 = Arg5744[14], Arg5744_15 = Arg5744[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5744_2, Arg5744_3, Arg5744_4, Arg5744_7, Arg5744_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5710_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R4, R3, R5, Arg5710_2, Arg5710_4, R2, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5746) {
  var Arg5746_0 = Arg5746[0], Arg5746_1 = Arg5746[1], Arg5746_2 = Arg5746[2], Arg5746_3 = Arg5746[3], Arg5746_4 = Arg5746[4], Arg5746_5 = Arg5746[5], Arg5746_6 = Arg5746[6], Arg5746_7 = Arg5746[7], Arg5746_8 = Arg5746[8], Arg5746_9 = Arg5746[9], Arg5746_10 = Arg5746[10], Arg5746_11 = Arg5746[11], Arg5746_12 = Arg5746[12], Arg5746_13 = Arg5746[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5746_2, Arg5746_3, Arg5746_4, Arg5746_7, Arg5746_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]]], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R4, R3, R5, Arg5710_2, Arg5710_4, R2, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5748) {
  var Arg5748_0 = Arg5748[0], Arg5748_1 = Arg5748[1], Arg5748_2 = Arg5748[2], Arg5748_3 = Arg5748[3], Arg5748_4 = Arg5748[4], Arg5748_5 = Arg5748[5], Arg5748_6 = Arg5748[6], Arg5748_7 = Arg5748[7], Arg5748_8 = Arg5748[8], Arg5748_9 = Arg5748[9], Arg5748_10 = Arg5748[10], Arg5748_11 = Arg5748[11], Arg5748_12 = Arg5748[12], Arg5748_13 = Arg5748[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5748_2, Arg5748_3, Arg5748_4, Arg5748_7, Arg5748_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_1, Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5710_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5750) {
  var Arg5750_0 = Arg5750[0], Arg5750_1 = Arg5750[1], Arg5750_2 = Arg5750[2], Arg5750_3 = Arg5750[3], Arg5750_4 = Arg5750[4], Arg5750_5 = Arg5750[5], Arg5750_6 = Arg5750[6], Arg5750_7 = Arg5750[7], Arg5750_8 = Arg5750[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5750_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5750_2, []]], Arg5750_6, Arg5750_7, Arg5750_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5752) {
  var Arg5752_0 = Arg5752[0], Arg5752_1 = Arg5752[1], Arg5752_2 = Arg5752[2], Arg5752_3 = Arg5752[3], Arg5752_4 = Arg5752[4], Arg5752_5 = Arg5752[5], Arg5752_6 = Arg5752[6], Arg5752_7 = Arg5752[7], Arg5752_8 = Arg5752[8], Arg5752_9 = Arg5752[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5752_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5752_2, []]], Arg5752_7, Arg5752_8, Arg5752_9]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R2, Arg5710_2, Arg5710_4, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5754) {
  var Arg5754_0 = Arg5754[0], Arg5754_1 = Arg5754[1], Arg5754_2 = Arg5754[2], Arg5754_3 = Arg5754[3], Arg5754_4 = Arg5754[4], Arg5754_5 = Arg5754[5], Arg5754_6 = Arg5754[6], Arg5754_7 = Arg5754[7], Arg5754_8 = Arg5754[8], Arg5754_9 = Arg5754[9], Arg5754_10 = Arg5754[10], Arg5754_11 = Arg5754[11], Arg5754_12 = Arg5754[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5754_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5754_2, []]], Arg5754_3, Arg5754_6, Arg5754_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "vector"], Arg5710_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R5, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5756) {
  var Arg5756_0 = Arg5756[0], Arg5756_1 = Arg5756[1], Arg5756_2 = Arg5756[2], Arg5756_3 = Arg5756[3], Arg5756_4 = Arg5756[4], Arg5756_5 = Arg5756[5], Arg5756_6 = Arg5756[6], Arg5756_7 = Arg5756[7], Arg5756_8 = Arg5756[8], Arg5756_9 = Arg5756[9], Arg5756_10 = Arg5756[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5756_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5756_2, []]], Arg5756_8, Arg5756_4, Arg5756_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5758) {
  var Arg5758_0 = Arg5758[0], Arg5758_1 = Arg5758[1], Arg5758_2 = Arg5758[2], Arg5758_3 = Arg5758[3], Arg5758_4 = Arg5758[4], Arg5758_5 = Arg5758[5], Arg5758_6 = Arg5758[6], Arg5758_7 = Arg5758[7], Arg5758_8 = Arg5758[8], Arg5758_9 = Arg5758[9], Arg5758_10 = Arg5758[10], Arg5758_11 = Arg5758[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5758_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5758_2, []]], Arg5758_9, Arg5758_5, Arg5758_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R5, Arg5710_2, Arg5710_4, R2, Arg5710_3, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5760) {
  var Arg5760_0 = Arg5760[0], Arg5760_1 = Arg5760[1], Arg5760_2 = Arg5760[2], Arg5760_3 = Arg5760[3], Arg5760_4 = Arg5760[4], Arg5760_5 = Arg5760[5], Arg5760_6 = Arg5760[6], Arg5760_7 = Arg5760[7], Arg5760_8 = Arg5760[8], Arg5760_9 = Arg5760[9], Arg5760_10 = Arg5760[10], Arg5760_11 = Arg5760[11], Arg5760_12 = Arg5760[12], Arg5760_13 = Arg5760[13], Arg5760_14 = Arg5760[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5760_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5760_2, []]], Arg5760_3, Arg5760_6, Arg5760_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R4, []]], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R4, Arg5710_2, Arg5710_4, R2, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5762) {
  var Arg5762_0 = Arg5762[0], Arg5762_1 = Arg5762[1], Arg5762_2 = Arg5762[2], Arg5762_3 = Arg5762[3], Arg5762_4 = Arg5762[4], Arg5762_5 = Arg5762[5], Arg5762_6 = Arg5762[6], Arg5762_7 = Arg5762[7], Arg5762_8 = Arg5762[8], Arg5762_9 = Arg5762[9], Arg5762_10 = Arg5762[10], Arg5762_11 = Arg5762[11], Arg5762_12 = Arg5762[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5762_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5762_2, []]], Arg5762_3, Arg5762_6, Arg5762_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_1, Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5764) {
  var Arg5764_0 = Arg5764[0], Arg5764_1 = Arg5764[1], Arg5764_2 = Arg5764[2], Arg5764_3 = Arg5764[3], Arg5764_4 = Arg5764[4], Arg5764_5 = Arg5764[5], Arg5764_6 = Arg5764[6], Arg5764_7 = Arg5764[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5764_1, [Shen.type_symbol, "string"], Arg5764_5, Arg5764_6, Arg5764_7]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "string"], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg5710_2, Arg5710_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5766) {
  var Arg5766_0 = Arg5766[0], Arg5766_1 = Arg5766[1], Arg5766_2 = Arg5766[2], Arg5766_3 = Arg5766[3], Arg5766_4 = Arg5766[4], Arg5766_5 = Arg5766[5], Arg5766_6 = Arg5766[6], Arg5766_7 = Arg5766[7], Arg5766_8 = Arg5766[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5766_1, [Shen.type_symbol, "string"], Arg5766_6, Arg5766_7, Arg5766_8]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_1, Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5710_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R3, R5, R2, R6, R4, Arg5710_2, Arg5710_3, Arg5710_4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5768) {
  var Arg5768_0 = Arg5768[0], Arg5768_1 = Arg5768[1], Arg5768_2 = Arg5768[2], Arg5768_3 = Arg5768[3], Arg5768_4 = Arg5768[4], Arg5768_5 = Arg5768[5], Arg5768_6 = Arg5768[6], Arg5768_7 = Arg5768[7], Arg5768_8 = Arg5768[8], Arg5768_9 = Arg5768[9], Arg5768_10 = Arg5768[10], Arg5768_11 = Arg5768[11], Arg5768_12 = Arg5768[12], Arg5768_13 = Arg5768[13], Arg5768_14 = Arg5768[14], Arg5768_15 = Arg5768[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5768_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5768_8, (new Shen.Freeze([Arg5768_1, Arg5768_2, Arg5768_3, Arg5768_4, Arg5768_5, Arg5768_6, Arg5768_7, Arg5768_8, Arg5768_9], function(Arg5770) {
  var Arg5770_0 = Arg5770[0], Arg5770_1 = Arg5770[1], Arg5770_2 = Arg5770[2], Arg5770_3 = Arg5770[3], Arg5770_4 = Arg5770[4], Arg5770_5 = Arg5770[5], Arg5770_6 = Arg5770[6], Arg5770_7 = Arg5770[7], Arg5770_8 = Arg5770[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5770_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5770_4, Arg5770_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5770_0, Arg5770_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5770_1, Arg5770_7])]), Arg5770_7, (new Shen.Freeze([Arg5770_0, Arg5770_1, Arg5770_2, Arg5770_3, Arg5770_4, Arg5770_5, Arg5770_6, Arg5770_7, Arg5770_8], function(Arg5772) {
  var Arg5772_0 = Arg5772[0], Arg5772_1 = Arg5772[1], Arg5772_2 = Arg5772[2], Arg5772_3 = Arg5772[3], Arg5772_4 = Arg5772[4], Arg5772_5 = Arg5772[5], Arg5772_6 = Arg5772[6], Arg5772_7 = Arg5772[7], Arg5772_8 = Arg5772[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5772_2, Arg5772_3, [Shen.type_cons, [Shen.type_cons, Arg5772_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5772_5, []]]], Arg5772_6], Arg5772_7, Arg5772_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5710_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg5710_2, Arg5710_3, Arg5710_4, R5, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5774) {
  var Arg5774_0 = Arg5774[0], Arg5774_1 = Arg5774[1], Arg5774_2 = Arg5774[2], Arg5774_3 = Arg5774[3], Arg5774_4 = Arg5774[4], Arg5774_5 = Arg5774[5], Arg5774_6 = Arg5774[6], Arg5774_7 = Arg5774[7], Arg5774_8 = Arg5774[8], Arg5774_9 = Arg5774[9], Arg5774_10 = Arg5774[10], Arg5774_11 = Arg5774[11], Arg5774_12 = Arg5774[12], Arg5774_13 = Arg5774[13], Arg5774_14 = Arg5774[14], Arg5774_15 = Arg5774[15], Arg5774_16 = Arg5774[16], Arg5774_17 = Arg5774[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5774_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5774_8, (new Shen.Freeze([Arg5774_1, Arg5774_2, Arg5774_3, Arg5774_4, Arg5774_5, Arg5774_6, Arg5774_7, Arg5774_8, Arg5774_9], function(Arg5776) {
  var Arg5776_0 = Arg5776[0], Arg5776_1 = Arg5776[1], Arg5776_2 = Arg5776[2], Arg5776_3 = Arg5776[3], Arg5776_4 = Arg5776[4], Arg5776_5 = Arg5776[5], Arg5776_6 = Arg5776[6], Arg5776_7 = Arg5776[7], Arg5776_8 = Arg5776[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5776_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5776_4, Arg5776_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5776_0, Arg5776_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5776_1, Arg5776_7])]), Arg5776_7, (new Shen.Freeze([Arg5776_0, Arg5776_1, Arg5776_2, Arg5776_3, Arg5776_4, Arg5776_5, Arg5776_6, Arg5776_7, Arg5776_8], function(Arg5778) {
  var Arg5778_0 = Arg5778[0], Arg5778_1 = Arg5778[1], Arg5778_2 = Arg5778[2], Arg5778_3 = Arg5778[3], Arg5778_4 = Arg5778[4], Arg5778_5 = Arg5778[5], Arg5778_6 = Arg5778[6], Arg5778_7 = Arg5778[7], Arg5778_8 = Arg5778[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5778_2, Arg5778_3, [Shen.type_cons, [Shen.type_cons, Arg5778_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5778_5, []]]], Arg5778_6], Arg5778_7, Arg5778_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5710_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg5710_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg5710_2, Arg5710_3, Arg5710_4, R5, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5780) {
  var Arg5780_0 = Arg5780[0], Arg5780_1 = Arg5780[1], Arg5780_2 = Arg5780[2], Arg5780_3 = Arg5780[3], Arg5780_4 = Arg5780[4], Arg5780_5 = Arg5780[5], Arg5780_6 = Arg5780[6], Arg5780_7 = Arg5780[7], Arg5780_8 = Arg5780[8], Arg5780_9 = Arg5780[9], Arg5780_10 = Arg5780[10], Arg5780_11 = Arg5780[11], Arg5780_12 = Arg5780[12], Arg5780_13 = Arg5780[13], Arg5780_14 = Arg5780[14], Arg5780_15 = Arg5780[15], Arg5780_16 = Arg5780[16], Arg5780_17 = Arg5780[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5780_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5780_8, (new Shen.Freeze([Arg5780_1, Arg5780_2, Arg5780_3, Arg5780_4, Arg5780_5, Arg5780_6, Arg5780_7, Arg5780_8, Arg5780_9], function(Arg5782) {
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1], Arg5782_2 = Arg5782[2], Arg5782_3 = Arg5782[3], Arg5782_4 = Arg5782[4], Arg5782_5 = Arg5782[5], Arg5782_6 = Arg5782[6], Arg5782_7 = Arg5782[7], Arg5782_8 = Arg5782[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5782_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5782_4, Arg5782_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5782_0, Arg5782_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5782_1, Arg5782_7])]), Arg5782_7, (new Shen.Freeze([Arg5782_0, Arg5782_1, Arg5782_2, Arg5782_3, Arg5782_4, Arg5782_5, Arg5782_6, Arg5782_7, Arg5782_8], function(Arg5784) {
  var Arg5784_0 = Arg5784[0], Arg5784_1 = Arg5784[1], Arg5784_2 = Arg5784[2], Arg5784_3 = Arg5784[3], Arg5784_4 = Arg5784[4], Arg5784_5 = Arg5784[5], Arg5784_6 = Arg5784[6], Arg5784_7 = Arg5784[7], Arg5784_8 = Arg5784[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5784_2, Arg5784_3, [Shen.type_cons, [Shen.type_cons, Arg5784_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5784_5, []]]], Arg5784_6], Arg5784_7, Arg5784_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5710_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "-->"], Arg5710_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R3, R2, R6, R7, R4, Arg5710_2, Arg5710_3, Arg5710_4, R5, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5786) {
  var Arg5786_0 = Arg5786[0], Arg5786_1 = Arg5786[1], Arg5786_2 = Arg5786[2], Arg5786_3 = Arg5786[3], Arg5786_4 = Arg5786[4], Arg5786_5 = Arg5786[5], Arg5786_6 = Arg5786[6], Arg5786_7 = Arg5786[7], Arg5786_8 = Arg5786[8], Arg5786_9 = Arg5786[9], Arg5786_10 = Arg5786[10], Arg5786_11 = Arg5786[11], Arg5786_12 = Arg5786[12], Arg5786_13 = Arg5786[13], Arg5786_14 = Arg5786[14], Arg5786_15 = Arg5786[15], Arg5786_16 = Arg5786[16], Arg5786_17 = Arg5786[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5786_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5786_8, (new Shen.Freeze([Arg5786_1, Arg5786_2, Arg5786_3, Arg5786_4, Arg5786_5, Arg5786_6, Arg5786_7, Arg5786_8, Arg5786_9], function(Arg5788) {
  var Arg5788_0 = Arg5788[0], Arg5788_1 = Arg5788[1], Arg5788_2 = Arg5788[2], Arg5788_3 = Arg5788[3], Arg5788_4 = Arg5788[4], Arg5788_5 = Arg5788[5], Arg5788_6 = Arg5788[6], Arg5788_7 = Arg5788[7], Arg5788_8 = Arg5788[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5788_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5788_4, Arg5788_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5788_0, Arg5788_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5788_1, Arg5788_7])]), Arg5788_7, (new Shen.Freeze([Arg5788_0, Arg5788_1, Arg5788_2, Arg5788_3, Arg5788_4, Arg5788_5, Arg5788_6, Arg5788_7, Arg5788_8], function(Arg5790) {
  var Arg5790_0 = Arg5790[0], Arg5790_1 = Arg5790[1], Arg5790_2 = Arg5790[2], Arg5790_3 = Arg5790[3], Arg5790_4 = Arg5790[4], Arg5790_5 = Arg5790[5], Arg5790_6 = Arg5790[6], Arg5790_7 = Arg5790[7], Arg5790_8 = Arg5790[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5790_2, Arg5790_3, [Shen.type_cons, [Shen.type_cons, Arg5790_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5790_5, []]]], Arg5790_6], Arg5790_7, Arg5790_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5710_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg5710_2, Arg5710_3, Arg5710_4, R2, Arg5710_3, R5, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5792) {
  var Arg5792_0 = Arg5792[0], Arg5792_1 = Arg5792[1], Arg5792_2 = Arg5792[2], Arg5792_3 = Arg5792[3], Arg5792_4 = Arg5792[4], Arg5792_5 = Arg5792[5], Arg5792_6 = Arg5792[6], Arg5792_7 = Arg5792[7], Arg5792_8 = Arg5792[8], Arg5792_9 = Arg5792[9], Arg5792_10 = Arg5792[10], Arg5792_11 = Arg5792[11], Arg5792_12 = Arg5792[12], Arg5792_13 = Arg5792[13], Arg5792_14 = Arg5792[14], Arg5792_15 = Arg5792[15], Arg5792_16 = Arg5792[16], Arg5792_17 = Arg5792[17], Arg5792_18 = Arg5792[18], Arg5792_19 = Arg5792[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5792_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5792_8, (new Shen.Freeze([Arg5792_1, Arg5792_2, Arg5792_3, Arg5792_4, Arg5792_5, Arg5792_6, Arg5792_7, Arg5792_8, Arg5792_9], function(Arg5794) {
  var Arg5794_0 = Arg5794[0], Arg5794_1 = Arg5794[1], Arg5794_2 = Arg5794[2], Arg5794_3 = Arg5794[3], Arg5794_4 = Arg5794[4], Arg5794_5 = Arg5794[5], Arg5794_6 = Arg5794[6], Arg5794_7 = Arg5794[7], Arg5794_8 = Arg5794[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5794_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5794_4, Arg5794_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5794_0, Arg5794_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5794_1, Arg5794_7])]), Arg5794_7, (new Shen.Freeze([Arg5794_0, Arg5794_1, Arg5794_2, Arg5794_3, Arg5794_4, Arg5794_5, Arg5794_6, Arg5794_7, Arg5794_8], function(Arg5796) {
  var Arg5796_0 = Arg5796[0], Arg5796_1 = Arg5796[1], Arg5796_2 = Arg5796[2], Arg5796_3 = Arg5796[3], Arg5796_4 = Arg5796[4], Arg5796_5 = Arg5796[5], Arg5796_6 = Arg5796[6], Arg5796_7 = Arg5796[7], Arg5796_8 = Arg5796[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5796_2, Arg5796_3, [Shen.type_cons, [Shen.type_cons, Arg5796_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5796_5, []]]], Arg5796_6], Arg5796_7, Arg5796_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg5710_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg5710_2, Arg5710_3, Arg5710_4, R2, Arg5710_3, R5, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5798) {
  var Arg5798_0 = Arg5798[0], Arg5798_1 = Arg5798[1], Arg5798_2 = Arg5798[2], Arg5798_3 = Arg5798[3], Arg5798_4 = Arg5798[4], Arg5798_5 = Arg5798[5], Arg5798_6 = Arg5798[6], Arg5798_7 = Arg5798[7], Arg5798_8 = Arg5798[8], Arg5798_9 = Arg5798[9], Arg5798_10 = Arg5798[10], Arg5798_11 = Arg5798[11], Arg5798_12 = Arg5798[12], Arg5798_13 = Arg5798[13], Arg5798_14 = Arg5798[14], Arg5798_15 = Arg5798[15], Arg5798_16 = Arg5798[16], Arg5798_17 = Arg5798[17], Arg5798_18 = Arg5798[18], Arg5798_19 = Arg5798[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5798_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5798_8, (new Shen.Freeze([Arg5798_1, Arg5798_2, Arg5798_3, Arg5798_4, Arg5798_5, Arg5798_6, Arg5798_7, Arg5798_8, Arg5798_9], function(Arg5800) {
  var Arg5800_0 = Arg5800[0], Arg5800_1 = Arg5800[1], Arg5800_2 = Arg5800[2], Arg5800_3 = Arg5800[3], Arg5800_4 = Arg5800[4], Arg5800_5 = Arg5800[5], Arg5800_6 = Arg5800[6], Arg5800_7 = Arg5800[7], Arg5800_8 = Arg5800[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5800_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5800_4, Arg5800_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5800_0, Arg5800_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5800_1, Arg5800_7])]), Arg5800_7, (new Shen.Freeze([Arg5800_0, Arg5800_1, Arg5800_2, Arg5800_3, Arg5800_4, Arg5800_5, Arg5800_6, Arg5800_7, Arg5800_8], function(Arg5802) {
  var Arg5802_0 = Arg5802[0], Arg5802_1 = Arg5802[1], Arg5802_2 = Arg5802[2], Arg5802_3 = Arg5802[3], Arg5802_4 = Arg5802[4], Arg5802_5 = Arg5802[5], Arg5802_6 = Arg5802[6], Arg5802_7 = Arg5802[7], Arg5802_8 = Arg5802[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5802_2, Arg5802_3, [Shen.type_cons, [Shen.type_cons, Arg5802_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5802_5, []]]], Arg5802_6], Arg5802_7, Arg5802_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5710_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]], Arg5710_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg5710_2, Arg5710_3, Arg5710_4, R2, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5804) {
  var Arg5804_0 = Arg5804[0], Arg5804_1 = Arg5804[1], Arg5804_2 = Arg5804[2], Arg5804_3 = Arg5804[3], Arg5804_4 = Arg5804[4], Arg5804_5 = Arg5804[5], Arg5804_6 = Arg5804[6], Arg5804_7 = Arg5804[7], Arg5804_8 = Arg5804[8], Arg5804_9 = Arg5804[9], Arg5804_10 = Arg5804[10], Arg5804_11 = Arg5804[11], Arg5804_12 = Arg5804[12], Arg5804_13 = Arg5804[13], Arg5804_14 = Arg5804[14], Arg5804_15 = Arg5804[15], Arg5804_16 = Arg5804[16], Arg5804_17 = Arg5804[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5804_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5804_8, (new Shen.Freeze([Arg5804_1, Arg5804_2, Arg5804_3, Arg5804_4, Arg5804_5, Arg5804_6, Arg5804_7, Arg5804_8, Arg5804_9], function(Arg5806) {
  var Arg5806_0 = Arg5806[0], Arg5806_1 = Arg5806[1], Arg5806_2 = Arg5806[2], Arg5806_3 = Arg5806[3], Arg5806_4 = Arg5806[4], Arg5806_5 = Arg5806[5], Arg5806_6 = Arg5806[6], Arg5806_7 = Arg5806[7], Arg5806_8 = Arg5806[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5806_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5806_4, Arg5806_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5806_0, Arg5806_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5806_1, Arg5806_7])]), Arg5806_7, (new Shen.Freeze([Arg5806_0, Arg5806_1, Arg5806_2, Arg5806_3, Arg5806_4, Arg5806_5, Arg5806_6, Arg5806_7, Arg5806_8], function(Arg5808) {
  var Arg5808_0 = Arg5808[0], Arg5808_1 = Arg5808[1], Arg5808_2 = Arg5808[2], Arg5808_3 = Arg5808[3], Arg5808_4 = Arg5808[4], Arg5808_5 = Arg5808[5], Arg5808_6 = Arg5808[6], Arg5808_7 = Arg5808[7], Arg5808_8 = Arg5808[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5808_2, Arg5808_3, [Shen.type_cons, [Shen.type_cons, Arg5808_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5808_5, []]]], Arg5808_6], Arg5808_7, Arg5808_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]]], Arg5710_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg5710_2, Arg5710_3, Arg5710_4, R2, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5810) {
  var Arg5810_0 = Arg5810[0], Arg5810_1 = Arg5810[1], Arg5810_2 = Arg5810[2], Arg5810_3 = Arg5810[3], Arg5810_4 = Arg5810[4], Arg5810_5 = Arg5810[5], Arg5810_6 = Arg5810[6], Arg5810_7 = Arg5810[7], Arg5810_8 = Arg5810[8], Arg5810_9 = Arg5810[9], Arg5810_10 = Arg5810[10], Arg5810_11 = Arg5810[11], Arg5810_12 = Arg5810[12], Arg5810_13 = Arg5810[13], Arg5810_14 = Arg5810[14], Arg5810_15 = Arg5810[15], Arg5810_16 = Arg5810[16], Arg5810_17 = Arg5810[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5810_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5810_8, (new Shen.Freeze([Arg5810_1, Arg5810_2, Arg5810_3, Arg5810_4, Arg5810_5, Arg5810_6, Arg5810_7, Arg5810_8, Arg5810_9], function(Arg5812) {
  var Arg5812_0 = Arg5812[0], Arg5812_1 = Arg5812[1], Arg5812_2 = Arg5812[2], Arg5812_3 = Arg5812[3], Arg5812_4 = Arg5812[4], Arg5812_5 = Arg5812[5], Arg5812_6 = Arg5812[6], Arg5812_7 = Arg5812[7], Arg5812_8 = Arg5812[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5812_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5812_4, Arg5812_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5812_0, Arg5812_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5812_1, Arg5812_7])]), Arg5812_7, (new Shen.Freeze([Arg5812_0, Arg5812_1, Arg5812_2, Arg5812_3, Arg5812_4, Arg5812_5, Arg5812_6, Arg5812_7, Arg5812_8], function(Arg5814) {
  var Arg5814_0 = Arg5814[0], Arg5814_1 = Arg5814[1], Arg5814_2 = Arg5814[2], Arg5814_3 = Arg5814[3], Arg5814_4 = Arg5814[4], Arg5814_5 = Arg5814[5], Arg5814_6 = Arg5814[6], Arg5814_7 = Arg5814[7], Arg5814_8 = Arg5814[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5814_2, Arg5814_3, [Shen.type_cons, [Shen.type_cons, Arg5814_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5814_5, []]]], Arg5814_6], Arg5814_7, Arg5814_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R3, R1, R4, R2, Arg5710_1, R5, R6, Arg5710_2, Arg5710_3, Arg5710_4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5816) {
  var Arg5816_0 = Arg5816[0], Arg5816_1 = Arg5816[1], Arg5816_2 = Arg5816[2], Arg5816_3 = Arg5816[3], Arg5816_4 = Arg5816[4], Arg5816_5 = Arg5816[5], Arg5816_6 = Arg5816[6], Arg5816_7 = Arg5816[7], Arg5816_8 = Arg5816[8], Arg5816_9 = Arg5816[9], Arg5816_10 = Arg5816[10], Arg5816_11 = Arg5816[11], Arg5816_12 = Arg5816[12], Arg5816_13 = Arg5816[13], Arg5816_14 = Arg5816[14], Arg5816_15 = Arg5816[15], Arg5816_16 = Arg5816[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5816_1, Arg5816_7, Arg5816_8, Arg5816_9, (new Shen.Freeze([Arg5816_1, Arg5816_2, Arg5816_3, Arg5816_4, Arg5816_5, Arg5816_6, Arg5816_7, Arg5816_8, Arg5816_9, Arg5816_10], function(Arg5818) {
  var Arg5818_0 = Arg5818[0], Arg5818_1 = Arg5818[1], Arg5818_2 = Arg5818[2], Arg5818_3 = Arg5818[3], Arg5818_4 = Arg5818[4], Arg5818_5 = Arg5818[5], Arg5818_6 = Arg5818[6], Arg5818_7 = Arg5818[7], Arg5818_8 = Arg5818[8], Arg5818_9 = Arg5818[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5818_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5818_8, (new Shen.Freeze([Arg5818_1, Arg5818_2, Arg5818_3, Arg5818_4, Arg5818_5, Arg5818_6, Arg5818_7, Arg5818_8, Arg5818_9], function(Arg5820) {
  var Arg5820_0 = Arg5820[0], Arg5820_1 = Arg5820[1], Arg5820_2 = Arg5820[2], Arg5820_3 = Arg5820[3], Arg5820_4 = Arg5820[4], Arg5820_5 = Arg5820[5], Arg5820_6 = Arg5820[6], Arg5820_7 = Arg5820[7], Arg5820_8 = Arg5820[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5820_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5820_4, Arg5820_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5820_0, Arg5820_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5820_1, Arg5820_7])]), Arg5820_7, (new Shen.Freeze([Arg5820_0, Arg5820_1, Arg5820_2, Arg5820_3, Arg5820_4, Arg5820_5, Arg5820_6, Arg5820_7, Arg5820_8], function(Arg5822) {
  var Arg5822_0 = Arg5822[0], Arg5822_1 = Arg5822[1], Arg5822_2 = Arg5822[2], Arg5822_3 = Arg5822[3], Arg5822_4 = Arg5822[4], Arg5822_5 = Arg5822[5], Arg5822_6 = Arg5822[6], Arg5822_7 = Arg5822[7], Arg5822_8 = Arg5822[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5822_2, Arg5822_3, [Shen.type_cons, [Shen.type_cons, Arg5822_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5822_5, []]]], Arg5822_6], Arg5822_7, Arg5822_8]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "open"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "file"], R1)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_1, Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "stream"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5710_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5710_3, (new Shen.Freeze([R2, R3, R1, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5824) {
  var Arg5824_0 = Arg5824[0], Arg5824_1 = Arg5824[1], Arg5824_2 = Arg5824[2], Arg5824_3 = Arg5824[3], Arg5824_4 = Arg5824[4], Arg5824_5 = Arg5824[5], Arg5824_6 = Arg5824[6], Arg5824_7 = Arg5824[7], Arg5824_8 = Arg5824[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5824_3, Arg5824_7, (new Shen.Freeze([Arg5824_3, Arg5824_2, Arg5824_6, Arg5824_7, Arg5824_8], function(Arg5826) {
  var Arg5826_0 = Arg5826[0], Arg5826_1 = Arg5826[1], Arg5826_2 = Arg5826[2], Arg5826_3 = Arg5826[3], Arg5826_4 = Arg5826[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5826_1, [Shen.type_symbol, "string"], Arg5826_2, Arg5826_3, Arg5826_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5710_3, (new Shen.Freeze([R2, R3, R1, R4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5828) {
  var Arg5828_0 = Arg5828[0], Arg5828_1 = Arg5828[1], Arg5828_2 = Arg5828[2], Arg5828_3 = Arg5828[3], Arg5828_4 = Arg5828[4], Arg5828_5 = Arg5828[5], Arg5828_6 = Arg5828[6], Arg5828_7 = Arg5828[7], Arg5828_8 = Arg5828[8], Arg5828_9 = Arg5828[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5828_4, Arg5828_8, (new Shen.Freeze([Arg5828_4, Arg5828_2, Arg5828_7, Arg5828_8, Arg5828_9], function(Arg5830) {
  var Arg5830_0 = Arg5830[0], Arg5830_1 = Arg5830[1], Arg5830_2 = Arg5830[2], Arg5830_3 = Arg5830[3], Arg5830_4 = Arg5830[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5830_1, [Shen.type_symbol, "string"], Arg5830_2, Arg5830_3, Arg5830_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5710_3, (new Shen.Freeze([R2, R3, R0, R1, Arg5710_2, Arg5710_4, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5832) {
  var Arg5832_0 = Arg5832[0], Arg5832_1 = Arg5832[1], Arg5832_2 = Arg5832[2], Arg5832_3 = Arg5832[3], Arg5832_4 = Arg5832[4], Arg5832_5 = Arg5832[5], Arg5832_6 = Arg5832[6], Arg5832_7 = Arg5832[7], Arg5832_8 = Arg5832[8], Arg5832_9 = Arg5832[9], Arg5832_10 = Arg5832[10], Arg5832_11 = Arg5832[11], Arg5832_12 = Arg5832[12], Arg5832_13 = Arg5832[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5832_2, Arg5832_7, (new Shen.Freeze([Arg5832_2, Arg5832_3, Arg5832_4, Arg5832_7, Arg5832_5], function(Arg5834) {
  var Arg5834_0 = Arg5834[0], Arg5834_1 = Arg5834[1], Arg5834_2 = Arg5834[2], Arg5834_3 = Arg5834[3], Arg5834_4 = Arg5834[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5834_1, [Shen.type_symbol, "string"], Arg5834_2, Arg5834_3, Arg5834_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "stream"], Arg5710_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5710_3, (new Shen.Freeze([R5, R3, R1, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5836) {
  var Arg5836_0 = Arg5836[0], Arg5836_1 = Arg5836[1], Arg5836_2 = Arg5836[2], Arg5836_3 = Arg5836[3], Arg5836_4 = Arg5836[4], Arg5836_5 = Arg5836[5], Arg5836_6 = Arg5836[6], Arg5836_7 = Arg5836[7], Arg5836_8 = Arg5836[8], Arg5836_9 = Arg5836[9], Arg5836_10 = Arg5836[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5836_5, Arg5836_4, (new Shen.Freeze([Arg5836_5, Arg5836_2, Arg5836_8, Arg5836_4, Arg5836_9], function(Arg5838) {
  var Arg5838_0 = Arg5838[0], Arg5838_1 = Arg5838[1], Arg5838_2 = Arg5838[2], Arg5838_3 = Arg5838[3], Arg5838_4 = Arg5838[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5838_1, [Shen.type_symbol, "string"], Arg5838_2, Arg5838_3, Arg5838_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5710_3, (new Shen.Freeze([R5, R3, R1, R2, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5840) {
  var Arg5840_0 = Arg5840[0], Arg5840_1 = Arg5840[1], Arg5840_2 = Arg5840[2], Arg5840_3 = Arg5840[3], Arg5840_4 = Arg5840[4], Arg5840_5 = Arg5840[5], Arg5840_6 = Arg5840[6], Arg5840_7 = Arg5840[7], Arg5840_8 = Arg5840[8], Arg5840_9 = Arg5840[9], Arg5840_10 = Arg5840[10], Arg5840_11 = Arg5840[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5840_6, Arg5840_5, (new Shen.Freeze([Arg5840_6, Arg5840_2, Arg5840_9, Arg5840_5, Arg5840_10], function(Arg5842) {
  var Arg5842_0 = Arg5842[0], Arg5842_1 = Arg5842[1], Arg5842_2 = Arg5842[2], Arg5842_3 = Arg5842[3], Arg5842_4 = Arg5842[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5842_1, [Shen.type_symbol, "string"], Arg5842_2, Arg5842_3, Arg5842_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5710_3, (new Shen.Freeze([R5, R3, R0, R1, Arg5710_2, Arg5710_4, R2, Arg5710_3, R4, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5844) {
  var Arg5844_0 = Arg5844[0], Arg5844_1 = Arg5844[1], Arg5844_2 = Arg5844[2], Arg5844_3 = Arg5844[3], Arg5844_4 = Arg5844[4], Arg5844_5 = Arg5844[5], Arg5844_6 = Arg5844[6], Arg5844_7 = Arg5844[7], Arg5844_8 = Arg5844[8], Arg5844_9 = Arg5844[9], Arg5844_10 = Arg5844[10], Arg5844_11 = Arg5844[11], Arg5844_12 = Arg5844[12], Arg5844_13 = Arg5844[13], Arg5844_14 = Arg5844[14], Arg5844_15 = Arg5844[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5844_2, Arg5844_7, (new Shen.Freeze([Arg5844_2, Arg5844_3, Arg5844_4, Arg5844_7, Arg5844_5], function(Arg5846) {
  var Arg5846_0 = Arg5846[0], Arg5846_1 = Arg5846[1], Arg5846_2 = Arg5846[2], Arg5846_3 = Arg5846[3], Arg5846_4 = Arg5846[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5846_1, [Shen.type_symbol, "string"], Arg5846_2, Arg5846_3, Arg5846_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5710_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, R4, []]], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R3, Arg5710_3, (new Shen.Freeze([R4, R3, R0, R1, Arg5710_2, Arg5710_4, R2, Arg5710_3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5848) {
  var Arg5848_0 = Arg5848[0], Arg5848_1 = Arg5848[1], Arg5848_2 = Arg5848[2], Arg5848_3 = Arg5848[3], Arg5848_4 = Arg5848[4], Arg5848_5 = Arg5848[5], Arg5848_6 = Arg5848[6], Arg5848_7 = Arg5848[7], Arg5848_8 = Arg5848[8], Arg5848_9 = Arg5848[9], Arg5848_10 = Arg5848[10], Arg5848_11 = Arg5848[11], Arg5848_12 = Arg5848[12], Arg5848_13 = Arg5848[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5848_2, Arg5848_7, (new Shen.Freeze([Arg5848_2, Arg5848_3, Arg5848_4, Arg5848_7, Arg5848_5], function(Arg5850) {
  var Arg5850_0 = Arg5850[0], Arg5850_1 = Arg5850[1], Arg5850_2 = Arg5850[2], Arg5850_3 = Arg5850[3], Arg5850_4 = Arg5850[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5850_1, [Shen.type_symbol, "string"], Arg5850_2, Arg5850_3, Arg5850_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R1, R3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5852) {
  var Arg5852_0 = Arg5852[0], Arg5852_1 = Arg5852[1], Arg5852_2 = Arg5852[2], Arg5852_3 = Arg5852[3], Arg5852_4 = Arg5852[4], Arg5852_5 = Arg5852[5], Arg5852_6 = Arg5852[6], Arg5852_7 = Arg5852[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg5852_1, Arg5852_4, Arg5852_6, (new Shen.Freeze([Arg5852_4, Arg5852_0, Arg5852_1, Arg5852_5, Arg5852_6, Arg5852_7], function(Arg5854) {
  var Arg5854_0 = Arg5854[0], Arg5854_1 = Arg5854[1], Arg5854_2 = Arg5854[2], Arg5854_3 = Arg5854[3], Arg5854_4 = Arg5854[4], Arg5854_5 = Arg5854[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5854_1, Arg5854_2, Arg5854_3, Arg5854_4, Arg5854_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["bind"], [R2, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5710_3])]), Arg5710_3, (new Shen.Freeze([R1, Arg5710_1, R2, Arg5710_3, Arg5710_4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5856) {
  var Arg5856_0 = Arg5856[0], Arg5856_1 = Arg5856[1], Arg5856_2 = Arg5856[2], Arg5856_3 = Arg5856[3], Arg5856_4 = Arg5856[4], Arg5856_5 = Arg5856[5], Arg5856_6 = Arg5856[6], Arg5856_7 = Arg5856[7], Arg5856_8 = Arg5856[8], Arg5856_9 = Arg5856[9], Arg5856_10 = Arg5856[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg5856_1, Arg5856_2, Arg5856_3, Arg5856_4]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R3, R1, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5858) {
  var Arg5858_0 = Arg5858[0], Arg5858_1 = Arg5858[1], Arg5858_2 = Arg5858[2], Arg5858_3 = Arg5858[3], Arg5858_4 = Arg5858[4], Arg5858_5 = Arg5858[5], Arg5858_6 = Arg5858[6], Arg5858_7 = Arg5858[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5858_1, [Shen.type_symbol, "boolean"], Arg5858_5, Arg5858_6, (new Shen.Freeze([Arg5858_2, Arg5858_0, Arg5858_4, Arg5858_1, Arg5858_5, Arg5858_6, Arg5858_7], function(Arg5860) {
  var Arg5860_0 = Arg5860[0], Arg5860_1 = Arg5860[1], Arg5860_2 = Arg5860[2], Arg5860_3 = Arg5860[3], Arg5860_4 = Arg5860[4], Arg5860_5 = Arg5860[5], Arg5860_6 = Arg5860[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5860_0, Arg5860_5, (new Shen.Freeze([Arg5860_0, Arg5860_1, Arg5860_2, Arg5860_3, Arg5860_4, Arg5860_5, Arg5860_6], function(Arg5862) {
  var Arg5862_0 = Arg5862[0], Arg5862_1 = Arg5862[1], Arg5862_2 = Arg5862[2], Arg5862_3 = Arg5862[3], Arg5862_4 = Arg5862[4], Arg5862_5 = Arg5862[5], Arg5862_6 = Arg5862[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5862_1, Arg5862_2, [Shen.type_cons, [Shen.type_cons, Arg5862_3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "verified"], []]]], Arg5862_4], Arg5862_5, Arg5862_6]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R1, R3, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5864) {
  var Arg5864_0 = Arg5864[0], Arg5864_1 = Arg5864[1], Arg5864_2 = Arg5864[2], Arg5864_3 = Arg5864[3], Arg5864_4 = Arg5864[4], Arg5864_5 = Arg5864[5], Arg5864_6 = Arg5864[6], Arg5864_7 = Arg5864[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [[Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, Arg5864_0, []]], Arg5864_4, Arg5864_5, Arg5864_6, (new Shen.Freeze([Arg5864_0, Arg5864_1, Arg5864_4, Arg5864_5, Arg5864_6, Arg5864_7], function(Arg5866) {
  var Arg5866_0 = Arg5866[0], Arg5866_1 = Arg5866[1], Arg5866_2 = Arg5866[2], Arg5866_3 = Arg5866[3], Arg5866_4 = Arg5866[4], Arg5866_5 = Arg5866[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5866_1, Arg5866_2, Arg5866_3, Arg5866_4, Arg5866_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.<-sem"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R2, R1, R0, Arg5710_1, R3, R4, Arg5710_2, Arg5710_3, Arg5710_4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5868) {
  var Arg5868_0 = Arg5868[0], Arg5868_1 = Arg5868[1], Arg5868_2 = Arg5868[2], Arg5868_3 = Arg5868[3], Arg5868_4 = Arg5868[4], Arg5868_5 = Arg5868[5], Arg5868_6 = Arg5868[6], Arg5868_7 = Arg5868[7], Arg5868_8 = Arg5868[8], Arg5868_9 = Arg5868[9], Arg5868_10 = Arg5868[10], Arg5868_11 = Arg5868[11], Arg5868_12 = Arg5868[12], Arg5868_13 = Arg5868[13], Arg5868_14 = Arg5868[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5868_1, [Shen.type_cons, Arg5868_0, [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg5868_5, []]]], Arg5868_6, Arg5868_7, (new Shen.Freeze([Arg5868_0, Arg5868_1, Arg5868_2, Arg5868_3, Arg5868_4, Arg5868_5, Arg5868_6, Arg5868_7, Arg5868_8], function(Arg5870) {
  var Arg5870_0 = Arg5870[0], Arg5870_1 = Arg5870[1], Arg5870_2 = Arg5870[2], Arg5870_3 = Arg5870[3], Arg5870_4 = Arg5870[4], Arg5870_5 = Arg5870[5], Arg5870_6 = Arg5870[6], Arg5870_7 = Arg5870[7], Arg5870_8 = Arg5870[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5870_2, Arg5870_7, (new Shen.Freeze([Arg5870_1, Arg5870_2, Arg5870_3, Arg5870_4, Arg5870_5, Arg5870_6, Arg5870_7, Arg5870_8], function(Arg5872) {
  var Arg5872_0 = Arg5872[0], Arg5872_1 = Arg5872[1], Arg5872_2 = Arg5872[2], Arg5872_3 = Arg5872[3], Arg5872_4 = Arg5872[4], Arg5872_5 = Arg5872[5], Arg5872_6 = Arg5872[6], Arg5872_7 = Arg5872[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5872_3, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Shen.call(Shen.fns["shen.lazyderef"], [Arg5872_0, Arg5872_6])]), Arg5872_6, (new Shen.Freeze([Arg5872_0, Arg5872_1, Arg5872_2, Arg5872_3, Arg5872_4, Arg5872_5, Arg5872_6, Arg5872_7], function(Arg5874) {
  var Arg5874_0 = Arg5874[0], Arg5874_1 = Arg5874[1], Arg5874_2 = Arg5874[2], Arg5874_3 = Arg5874[3], Arg5874_4 = Arg5874[4], Arg5874_5 = Arg5874[5], Arg5874_6 = Arg5874[6], Arg5874_7 = Arg5874[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5874_1, Arg5874_6, (new Shen.Freeze([Arg5874_1, Arg5874_2, Arg5874_3, Arg5874_4, Arg5874_5, Arg5874_6, Arg5874_7], function(Arg5876) {
  var Arg5876_0 = Arg5876[0], Arg5876_1 = Arg5876[1], Arg5876_2 = Arg5876[2], Arg5876_3 = Arg5876[3], Arg5876_4 = Arg5876[4], Arg5876_5 = Arg5876[5], Arg5876_6 = Arg5876[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5876_2, Arg5876_1, [Shen.type_cons, [Shen.type_cons, Arg5876_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5876_3, []]]], Arg5876_4], Arg5876_5, Arg5876_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_1, Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5710_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "symbol"], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5710_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5710_3]),
  (R1 = R1))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-hyps"], [Arg5710_2, R1, Arg5710_3, (new Shen.Freeze([Arg5710_2, Arg5710_0, Arg5710_1, R1, Arg5710_3, Arg5710_4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5878) {
  var Arg5878_0 = Arg5878[0], Arg5878_1 = Arg5878[1], Arg5878_2 = Arg5878[2], Arg5878_3 = Arg5878[3], Arg5878_4 = Arg5878[4], Arg5878_5 = Arg5878[5], Arg5878_6 = Arg5878[6], Arg5878_7 = Arg5878[7], Arg5878_8 = Arg5878[8], Arg5878_9 = Arg5878[9], Arg5878_10 = Arg5878[10], Arg5878_11 = Arg5878[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5878_1, Arg5878_2, Arg5878_3, Arg5878_4, Arg5878_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R2, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4, R0, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5880) {
  var Arg5880_0 = Arg5880[0], Arg5880_1 = Arg5880[1], Arg5880_2 = Arg5880[2], Arg5880_3 = Arg5880[3], Arg5880_4 = Arg5880[4], Arg5880_5 = Arg5880[5], Arg5880_6 = Arg5880[6], Arg5880_7 = Arg5880[7], Arg5880_8 = Arg5880[8], Arg5880_9 = Arg5880[9], Arg5880_10 = Arg5880[10], Arg5880_11 = Arg5880[11], Arg5880_12 = Arg5880[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg5880_1, Arg5880_2]], Arg5880_3, Arg5880_4, Arg5880_5, Arg5880_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5710_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5710_3, (new Shen.Freeze([R0, R1, R2, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4, Arg5710_0, Arg5710_1, Arg5710_2, Arg5710_3, Arg5710_4], function(Arg5882) {
  var Arg5882_0 = Arg5882[0], Arg5882_1 = Arg5882[1], Arg5882_2 = Arg5882[2], Arg5882_3 = Arg5882[3], Arg5882_4 = Arg5882[4], Arg5882_5 = Arg5882[5], Arg5882_6 = Arg5882[6], Arg5882_7 = Arg5882[7], Arg5882_8 = Arg5882[8], Arg5882_9 = Arg5882[9], Arg5882_10 = Arg5882[10], Arg5882_11 = Arg5882[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defcc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg5882_1, Arg5882_2]], Arg5882_3, Arg5882_4, Arg5882_5, Arg5882_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.process-datatype"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_1, Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5710_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5710_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5710_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_0, Arg5710_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5710_1, Arg5710_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5710_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg5710_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5710_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5710_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5710_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, (Shen.globals["shen.*datatypes*"]), Arg5710_3, (new Shen.Freeze([Arg5710_0, Arg5710_1, Arg5710_2, R1, Arg5710_3, Arg5710_4], function(Arg5884) {
  var Arg5884_0 = Arg5884[0], Arg5884_1 = Arg5884[1], Arg5884_2 = Arg5884[2], Arg5884_3 = Arg5884[3], Arg5884_4 = Arg5884[4], Arg5884_5 = Arg5884[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [[Shen.type_cons, Arg5884_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5884_1, []]]], Arg5884_2, Arg5884_3, Arg5884_4, Arg5884_5]);});})}))]))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.th*"];





Shen.fns["shen.t*-hyps"] = [Shen.type_func, function shen_user_lambda5887(Arg5886) {
  if (Arg5886.length < 4) return [Shen.type_func, shen_user_lambda5887, 4, Arg5886];
  var Arg5886_0 = Arg5886[0], Arg5886_1 = Arg5886[1], Arg5886_2 = Arg5886[2], Arg5886_3 = Arg5886[3];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5886_0, Arg5886_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5886_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5886_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5886_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "list"], Arg5886_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R5, []]], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5886_0, Arg5886_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5886_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg5886_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg5886_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5886_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5886_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R1, []], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5886_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, "*"], Arg5886_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R7 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R7, []], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5886_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R0 = R6))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]]], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R0 = R6))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5886_0, Arg5886_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5886_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5886_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5886_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "vector"], Arg5886_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R5, []]], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5886_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5886_0, Arg5886_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5886_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5886_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5886_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "string"], Arg5886_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5886_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5886_2])]], Arg5886_2, Arg5886_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5886_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5886_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5886_2])]], Arg5886_2, Arg5886_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5886_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5886_2]),
  (R0 = R4))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5886_0, Arg5886_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5886_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5886_1, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5886_2]), Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5886_2])], Arg5886_2, (new Shen.Freeze([Arg5886_1, R1, R0, R2, Arg5886_2, Arg5886_3], function(Arg5888) {
  var Arg5888_0 = Arg5888[0], Arg5888_1 = Arg5888[1], Arg5888_2 = Arg5888[2], Arg5888_3 = Arg5888[3], Arg5888_4 = Arg5888[4], Arg5888_5 = Arg5888[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-hyps"], [Arg5888_2, Arg5888_3, Arg5888_4, Arg5888_5]);});})}))]);}))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.t*-hyps"];





Shen.fns["shen.show"] = [Shen.type_func, function shen_user_lambda5891(Arg5890) {
  if (Arg5890.length < 4) return [Shen.type_func, shen_user_lambda5891, 4, Arg5890];
  var Arg5890_0 = Arg5890[0], Arg5890_1 = Arg5890[1], Arg5890_2 = Arg5890[2], Arg5890_3 = Arg5890[3];
  return (((Shen.globals["shen.*spy*"]))
  ? (Shen.call(Shen.fns["shen.line"], []),
  Shen.call(Shen.fns["shen.show-p"], [Shen.call(Shen.fns["shen.deref"], [Arg5890_0, Arg5890_2])]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["shen.show-assumptions"], [Shen.call(Shen.fns["shen.deref"], [Arg5890_1, Arg5890_2]), 1]),
  Shen.pr("\x0a> ", Shen.call(Shen.fns["stoutput"], [])),
  Shen.call(Shen.fns["shen.pause-for-user"], [(Shen.globals["*language*"])]),
  Shen.thaw(Arg5890_3))
  : Shen.thaw(Arg5890_3))}, 4, [], "shen.show"];





Shen.fns["shen.line"] = [Shen.type_func, function shen_user_lambda5893(Arg5892) {
  if (Arg5892.length < 0) return [Shen.type_func, shen_user_lambda5893, 0, Arg5892];
  var R0;
  return ((R0 = Shen.call(Shen.fns["inferences"], [])),
  (function() {
  return Shen.pr(("____________________________________________________________ " + Shen.call(Shen.fns["shen.app"], [R0, (" inference" + Shen.call(Shen.fns["shen.app"], [((Shen.unwind_tail(Shen.$eq$(1, R0)))
  ? ""
  : "s"), " \x0a?- ", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));}))}, 0, [], "shen.line"];





Shen.fns["shen.show-p"] = [Shen.type_func, function shen_user_lambda5895(Arg5894) {
  if (Arg5894.length < 1) return [Shen.type_func, shen_user_lambda5895, 1, Arg5894];
  var Arg5894_0 = Arg5894[0];
  return (((Shen.is_type(Arg5894_0, Shen.type_cons) && (Shen.is_type(Arg5894_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg5894_0[2][1])) && (Shen.is_type(Arg5894_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5894_0[2][2][2]))))))
  ? (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg5894_0[1], (" : " + Shen.call(Shen.fns["shen.app"], [Arg5894_0[2][2][1], "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], []));})
  : (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg5894_0, "", [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], []));}))}, 1, [], "shen.show-p"];





Shen.fns["shen.show-assumptions"] = [Shen.type_func, function shen_user_lambda5897(Arg5896) {
  if (Arg5896.length < 2) return [Shen.type_func, shen_user_lambda5897, 2, Arg5896];
  var Arg5896_0 = Arg5896[0], Arg5896_1 = Arg5896[1];
  return ((Shen.empty$question$(Arg5896_0))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.is_type(Arg5896_0, Shen.type_cons))
  ? (Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg5896_1, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])),
  Shen.call(Shen.fns["shen.show-p"], [Arg5896_0[1]]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.show-assumptions"], [Arg5896_0[2], (Arg5896_1 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.show-assumptions"]]);})))}, 2, [], "shen.show-assumptions"];





Shen.fns["shen.pause-for-user"] = [Shen.type_func, function shen_user_lambda5899(Arg5898) {
  if (Arg5898.length < 1) return [Shen.type_func, shen_user_lambda5899, 1, Arg5898];
  var Arg5898_0 = Arg5898[0];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$("Common Lisp", Arg5898_0)))
  ? ((R0 = Shen.call(Shen.fns["FORMAT"], [[], "~C", Shen.call(Shen.fns["READ-CHAR"], [])])),
  ((Shen.unwind_tail(Shen.$eq$(R0, "a")))
  ? (function() {
  return Shen.simple_error("input aborted\x0a");})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);})))
  : ((R0 = Shen.call(Shen.fns["shen.read-char"], [])),
  ((Shen.unwind_tail(Shen.$eq$(R0, "a")))
  ? (function() {
  return Shen.simple_error("input aborted\x0a");})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))))}, 1, [], "shen.pause-for-user"];





Shen.fns["shen.read-char"] = [Shen.type_func, function shen_user_lambda5901(Arg5900) {
  if (Arg5900.length < 0) return [Shen.type_func, shen_user_lambda5901, 0, Arg5900];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 0]);})}, 0, [], "shen.read-char"];





Shen.fns["shen.read-char-h"] = [Shen.type_func, function shen_user_lambda5903(Arg5902) {
  if (Arg5902.length < 2) return [Shen.type_func, shen_user_lambda5903, 2, Arg5902];
  var Arg5902_0 = Arg5902[0], Arg5902_1 = Arg5902[1];
  return (((Shen.unwind_tail(Shen.$eq$(-1, Arg5902_0)) && Shen.unwind_tail(Shen.$eq$(0, Arg5902_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 1]);})
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg5902_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 0]);})
  : (((Shen.unwind_tail(Shen.$eq$(-1, Arg5902_0)) && Shen.unwind_tail(Shen.$eq$(1, Arg5902_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-char-h"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), 1]);})
  : ((Shen.unwind_tail(Shen.$eq$(1, Arg5902_1)))
  ? (function() {
  return Shen.n_$gt$string(Arg5902_0);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.read-char-h"]]);})))))}, 2, [], "shen.read-char-h"];





Shen.fns["shen.typedf?"] = [Shen.type_func, function shen_user_lambda5905(Arg5904) {
  if (Arg5904.length < 1) return [Shen.type_func, shen_user_lambda5905, 1, Arg5904];
  var Arg5904_0 = Arg5904[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5904_0, (Shen.globals["shen.*signedfuncs*"])]);})}, 1, [], "shen.typedf?"];





Shen.fns["shen.sigf"] = [Shen.type_func, function shen_user_lambda5907(Arg5906) {
  if (Arg5906.length < 1) return [Shen.type_func, shen_user_lambda5907, 1, Arg5906];
  var Arg5906_0 = Arg5906[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg5906_0]);})}, 1, [], "shen.sigf"];





Shen.fns["shen.placeholder"] = [Shen.type_func, function shen_user_lambda5909(Arg5908) {
  if (Arg5908.length < 0) return [Shen.type_func, shen_user_lambda5909, 0, Arg5908];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "&&"]]);})}, 0, [], "shen.placeholder"];





Shen.fns["shen.base"] = [Shen.type_func, function shen_user_lambda5911(Arg5910) {
  if (Arg5910.length < 4) return [Shen.type_func, shen_user_lambda5911, 4, Arg5910];
  var Arg5910_0 = Arg5910[0], Arg5910_1 = Arg5910[1], Arg5910_2 = Arg5910[2], Arg5910_3 = Arg5910[3];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_1, Arg5910_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_2])) == 'number'), Arg5910_2, Arg5910_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "number"], Arg5910_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_2])) == 'number'), Arg5910_2, Arg5910_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5910_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_1, Arg5910_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_2])), Arg5910_2, Arg5910_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "boolean"], Arg5910_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_2])), Arg5910_2, Arg5910_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5910_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_1, Arg5910_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_2])) == 'string'), Arg5910_2, Arg5910_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "string"], Arg5910_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_2])) == 'string'), Arg5910_2, Arg5910_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5910_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_1, Arg5910_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_2]), Shen.type_symbol), Arg5910_2, (new Shen.Freeze([Arg5910_0, Arg5910_1, Arg5910_3, Arg5910_2], function(Arg5912) {
  var Arg5912_0 = Arg5912[0], Arg5912_1 = Arg5912[1], Arg5912_2 = Arg5912[2], Arg5912_3 = Arg5912[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5912_0, Arg5912_3])])), Arg5912_3, Arg5912_2]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "symbol"], Arg5910_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_2]), Shen.type_symbol), Arg5910_2, (new Shen.Freeze([R0, Arg5910_0, Arg5910_1, Arg5910_3, Arg5910_2], function(Arg5914) {
  var Arg5914_0 = Arg5914[0], Arg5914_1 = Arg5914[1], Arg5914_2 = Arg5914[2], Arg5914_3 = Arg5914[3], Arg5914_4 = Arg5914[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5914_1, Arg5914_4])])), Arg5914_4, Arg5914_3]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5910_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_0, Arg5910_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5910_1, Arg5910_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5910_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5910_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? (R1[1],
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5910_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.thaw(Arg5910_3))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5910_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5910_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5910_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg5910_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, []], Arg5910_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5910_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5910_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "list"], Arg5910_2]),
  ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5910_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0[1],
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5910_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5910_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg5910_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg5910_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5910_2]),
  (R0 = R2))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5910_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, R2, []], Arg5910_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg5910_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5910_2]),
  (R0 = R2))
  : (R0 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5910_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5910_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R1, []]], Arg5910_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5910_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5910_2]),
  R1)
  : false)))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.base"];





Shen.fns["shen.placeholder?"] = [Shen.type_func, function shen_user_lambda5917(Arg5916) {
  if (Arg5916.length < 1) return [Shen.type_func, shen_user_lambda5917, 1, Arg5916];
  var Arg5916_0 = Arg5916[0];
  return (Shen.is_type(Arg5916_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.placeholder-help?"], [Shen.str(Arg5916_0)]))}, 1, [], "shen.placeholder?"];





Shen.fns["shen.placeholder-help?"] = [Shen.type_func, function shen_user_lambda5919(Arg5918) {
  if (Arg5918.length < 1) return [Shen.type_func, shen_user_lambda5919, 1, Arg5918];
  var Arg5918_0 = Arg5918[0];
  return (((Shen.call(Shen.fns["shen.+string?"], [Arg5918_0]) && (Shen.unwind_tail(Shen.$eq$("&", Arg5918_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg5918_0)]) && Shen.unwind_tail(Shen.$eq$("&", Shen.tlstr(Arg5918_0)[0]))))))
  ? true
  : false)}, 1, [], "shen.placeholder-help?"];





Shen.fns["shen.by_hypothesis"] = [Shen.type_func, function shen_user_lambda5921(Arg5920) {
  if (Arg5920.length < 5) return [Shen.type_func, shen_user_lambda5921, 5, Arg5920];
  var Arg5920_0 = Arg5920[0], Arg5920_1 = Arg5920[1], Arg5920_2 = Arg5920[2], Arg5920_3 = Arg5920[3], Arg5920_4 = Arg5920[4];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5920_2, Arg5920_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5920_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5920_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5920_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5920_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R0 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5920_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["identical"], [Arg5920_0, R1, Arg5920_3, (new Shen.Freeze([R1, R0, Arg5920_2, Arg5920_0, Arg5920_1, Arg5920_3, Arg5920_4], function(Arg5922) {
  var Arg5922_0 = Arg5922[0], Arg5922_1 = Arg5922[1], Arg5922_2 = Arg5922[2], Arg5922_3 = Arg5922[3], Arg5922_4 = Arg5922[4], Arg5922_5 = Arg5922[5], Arg5922_6 = Arg5922[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg5922_4, Arg5922_1, Arg5922_5, Arg5922_6]);});})}))])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5920_2, Arg5920_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.by_hypothesis"], [Arg5920_0, Arg5920_1, R0, Arg5920_3, Arg5920_4]);}))
  : false))
  : R0))}, 5, [], "shen.by_hypothesis"];





Shen.fns["shen.t*-def"] = [Shen.type_func, function shen_user_lambda5925(Arg5924) {
  if (Arg5924.length < 5) return [Shen.type_func, shen_user_lambda5925, 5, Arg5924];
  var Arg5924_0 = Arg5924[0], Arg5924_1 = Arg5924[1], Arg5924_2 = Arg5924[2], Arg5924_3 = Arg5924[3], Arg5924_4 = Arg5924[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5924_0, Arg5924_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5924_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5924_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.newpv"], [Arg5924_3]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defh"], [Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<sig+rules>"], R1, [Shen.type_func, function shen_user_lambda5927(Arg5926) {
  if (Arg5926.length < 1) return [Shen.type_func, shen_user_lambda5927, 1, Arg5926];
  var Arg5926_0 = Arg5926[0];
  return ((Shen.is_type(Arg5926_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg5926_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]]), R0, Arg5924_1, Arg5924_2, Arg5924_3, Arg5924_4]);}))
  : false))
  : false))
  : false))}, 5, [], "shen.t*-def"];





Shen.fns["shen.t*-defh"] = [Shen.type_func, function shen_user_lambda5929(Arg5928) {
  if (Arg5928.length < 6) return [Shen.type_func, shen_user_lambda5929, 6, Arg5928];
  var Arg5928_0 = Arg5928[0], Arg5928_1 = Arg5928[1], Arg5928_2 = Arg5928[2], Arg5928_3 = Arg5928[3], Arg5928_4 = Arg5928[4], Arg5928_5 = Arg5928[5];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5928_0, Arg5928_4])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defhh"], [R1, Shen.call(Shen.fns["shen.ue"], [R1]), Arg5928_1, Arg5928_2, Arg5928_3, R0, Arg5928_4, Arg5928_5]);}))
  : false))}, 6, [], "shen.t*-defh"];





Shen.fns["shen.t*-defhh"] = [Shen.type_func, function shen_user_lambda5931(Arg5930) {
  if (Arg5930.length < 8) return [Shen.type_func, shen_user_lambda5931, 8, Arg5930];
  var Arg5930_0 = Arg5930[0], Arg5930_1 = Arg5930[1], Arg5930_2 = Arg5930[2], Arg5930_3 = Arg5930[3], Arg5930_4 = Arg5930[4], Arg5930_5 = Arg5930[5], Arg5930_6 = Arg5930[6], Arg5930_7 = Arg5930[7];
  return (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5930_5, Arg5930_1, 1, Arg5930_2, [Shen.type_cons, [Shen.type_cons, Arg5930_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5930_1, []]]], Arg5930_4], Arg5930_6, (new Shen.Freeze([Arg5930_5, Arg5930_1, Arg5930_4, Arg5930_2, Arg5930_0, Arg5930_3, Arg5930_6, Arg5930_7], function(Arg5932) {
  var Arg5932_0 = Arg5932[0], Arg5932_1 = Arg5932[1], Arg5932_2 = Arg5932[2], Arg5932_3 = Arg5932[3], Arg5932_4 = Arg5932[4], Arg5932_5 = Arg5932[5], Arg5932_6 = Arg5932[6], Arg5932_7 = Arg5932[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.memo"], [Arg5932_3, Arg5932_4, Arg5932_5, Arg5932_6, Arg5932_7]);});})}))]);}))}, 8, [], "shen.t*-defhh"];





Shen.fns["shen.memo"] = [Shen.type_func, function shen_user_lambda5935(Arg5934) {
  if (Arg5934.length < 5) return [Shen.type_func, shen_user_lambda5935, 5, Arg5934];
  var Arg5934_0 = Arg5934[0], Arg5934_1 = Arg5934[1], Arg5934_2 = Arg5934[2], Arg5934_3 = Arg5934[3], Arg5934_4 = Arg5934[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg5934_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg5934_2, Arg5934_1, Arg5934_3, (new Shen.Freeze([Arg5934_1, R0, Arg5934_0, Arg5934_2, Arg5934_3, Arg5934_4], function(Arg5936) {
  var Arg5936_0 = Arg5936[0], Arg5936_1 = Arg5936[1], Arg5936_2 = Arg5936[2], Arg5936_3 = Arg5936[3], Arg5936_4 = Arg5936[4], Arg5936_5 = Arg5936[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5936_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5936_2, Arg5936_4]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5936_3, Arg5936_4])]), Arg5936_4, Arg5936_5]);});})}))]);}))}, 5, [], "shen.memo"];





Shen.fns["shen.<sig+rules>"] = [Shen.type_func, function shen_user_lambda5939(Arg5938) {
  if (Arg5938.length < 1) return [Shen.type_func, shen_user_lambda5939, 1, Arg5938];
  var Arg5938_0 = Arg5938[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg5938_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rules>"];





Shen.fns["shen.ue"] = [Shen.type_func, function shen_user_lambda5941(Arg5940) {
  if (Arg5940.length < 1) return [Shen.type_func, shen_user_lambda5941, 1, Arg5940];
  var Arg5940_0 = Arg5940[0];
  return ((Shen.is_type(Arg5940_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.ue"], Arg5940_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg5940_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Arg5940_0]);})
  : Arg5940_0))}, 1, [], "shen.ue"];





Shen.fns["shen.t*-rules"] = [Shen.type_func, function shen_user_lambda5943(Arg5942) {
  if (Arg5942.length < 7) return [Shen.type_func, shen_user_lambda5943, 7, Arg5942];
  var Arg5942_0 = Arg5942[0], Arg5942_1 = Arg5942[1], Arg5942_2 = Arg5942[2], Arg5942_3 = Arg5942[3], Arg5942_4 = Arg5942[4], Arg5942_5 = Arg5942[5], Arg5942_6 = Arg5942[6];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5942_0, Arg5942_5])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5942_6))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5942_0, Arg5942_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5942_5])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5942_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5942_5])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5942_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R1[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5942_1, Arg5942_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5942_5])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5942_5])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5942_5])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [[Shen.type_cons, [], [Shen.type_cons, Shen.call(Shen.fns["shen.ue"], [R2]), []]], R1, Arg5942_4, Arg5942_5, (new Shen.Freeze([R2, R3, R1, Arg5942_0, R0, Arg5942_1, Arg5942_4, Arg5942_2, Arg5942_3, Arg5942_5, Arg5942_6], function(Arg5944) {
  var Arg5944_0 = Arg5944[0], Arg5944_1 = Arg5944[1], Arg5944_2 = Arg5944[2], Arg5944_3 = Arg5944[3], Arg5944_4 = Arg5944[4], Arg5944_5 = Arg5944[5], Arg5944_6 = Arg5944[6], Arg5944_7 = Arg5944[7], Arg5944_8 = Arg5944[8], Arg5944_9 = Arg5944[9], Arg5944_10 = Arg5944[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5944_4, Arg5944_9, (new Shen.Freeze([Arg5944_4, Arg5944_1, Arg5944_2, Arg5944_7, Arg5944_8, Arg5944_6, Arg5944_9, Arg5944_10], function(Arg5946) {
  var Arg5946_0 = Arg5946[0], Arg5946_1 = Arg5946[1], Arg5946_2 = Arg5946[2], Arg5946_3 = Arg5946[3], Arg5946_4 = Arg5946[4], Arg5946_5 = Arg5946[5], Arg5946_6 = Arg5946[6], Arg5946_7 = Arg5946[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5946_1, Arg5946_2, (Arg5946_3 + 1), Arg5946_4, Arg5946_5, Arg5946_6, Arg5946_7]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5942_0, Arg5942_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [Shen.call(Shen.fns["shen.ue"], [R2]), Arg5942_1, Arg5942_4, Arg5942_5, (new Shen.Freeze([R2, R0, R1, Arg5942_1, Arg5942_2, Arg5942_3, Arg5942_4, Arg5942_5, Arg5942_6, Arg5942_2, Arg5942_3, Arg5942_5, Arg5942_6], function(Arg5948) {
  var Arg5948_0 = Arg5948[0], Arg5948_1 = Arg5948[1], Arg5948_2 = Arg5948[2], Arg5948_3 = Arg5948[3], Arg5948_4 = Arg5948[4], Arg5948_5 = Arg5948[5], Arg5948_6 = Arg5948[6], Arg5948_7 = Arg5948[7], Arg5948_8 = Arg5948[8], Arg5948_9 = Arg5948[9], Arg5948_10 = Arg5948[10], Arg5948_11 = Arg5948[11], Arg5948_12 = Arg5948[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5948_1, Arg5948_7, (new Shen.Freeze([Arg5948_1, Arg5948_2, Arg5948_3, Arg5948_4, Arg5948_5, Arg5948_6, Arg5948_7, Arg5948_8], function(Arg5950) {
  var Arg5950_0 = Arg5950[0], Arg5950_1 = Arg5950[1], Arg5950_2 = Arg5950[2], Arg5950_3 = Arg5950[3], Arg5950_4 = Arg5950[4], Arg5950_5 = Arg5950[5], Arg5950_6 = Arg5950[6], Arg5950_7 = Arg5950[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5950_1, Arg5950_2, (Arg5950_3 + 1), Arg5950_4, Arg5950_5, Arg5950_6, Arg5950_7]);});})}))]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5942_5])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5942_2, Arg5942_5]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5942_3, Arg5942_5]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg5942_5, Arg5942_6]))
  : R1))
  : R1))
  : R1))]);}))}, 7, [], "shen.t*-rules"];





Shen.fns["shen.t*-rule"] = [Shen.type_func, function shen_user_lambda5953(Arg5952) {
  if (Arg5952.length < 5) return [Shen.type_func, shen_user_lambda5953, 5, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2], Arg5952_3 = Arg5952[3], Arg5952_4 = Arg5952[4];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5952_0, Arg5952_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5952_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5952_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5952_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5952_3, (new Shen.Freeze([R1, Arg5952_0, Arg5952_1, R0, Arg5952_2, Arg5952_3, Arg5952_4], function(Arg5954) {
  var Arg5954_0 = Arg5954[0], Arg5954_1 = Arg5954[1], Arg5954_2 = Arg5954[2], Arg5954_3 = Arg5954[3], Arg5954_4 = Arg5954[4], Arg5954_5 = Arg5954[5], Arg5954_6 = Arg5954[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Shen.call(Shen.fns["shen.curry"], [Arg5954_0]), Arg5954_2, Arg5954_4, Arg5954_5, Arg5954_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5952_0, Arg5952_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5952_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5952_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5952_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5952_1, Arg5952_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5952_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5952_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5952_3])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg5952_3])),
  ((Shen.empty$question$(R6))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*-pattern"], [R3, R5, Arg5952_3, (new Shen.Freeze([R0, R2, R4, R1, R3, R5, Arg5952_2, Arg5952_3, Arg5952_4], function(Arg5956) {
  var Arg5956_0 = Arg5956[0], Arg5956_1 = Arg5956[1], Arg5956_2 = Arg5956[2], Arg5956_3 = Arg5956[3], Arg5956_4 = Arg5956[4], Arg5956_5 = Arg5956[5], Arg5956_6 = Arg5956[6], Arg5956_7 = Arg5956[7], Arg5956_8 = Arg5956[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5956_0, Arg5956_7, (new Shen.Freeze([Arg5956_0, Arg5956_1, Arg5956_2, Arg5956_3, Arg5956_4, Arg5956_5, Arg5956_6, Arg5956_7, Arg5956_8], function(Arg5958) {
  var Arg5958_0 = Arg5958[0], Arg5958_1 = Arg5958[1], Arg5958_2 = Arg5958[2], Arg5958_3 = Arg5958[3], Arg5958_4 = Arg5958[4], Arg5958_5 = Arg5958[5], Arg5958_6 = Arg5958[6], Arg5958_7 = Arg5958[7], Arg5958_8 = Arg5958[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rule"], [[Shen.type_cons, Arg5958_1, [Shen.type_cons, Arg5958_2, []]], Arg5958_3, [Shen.type_cons, [Shen.type_cons, Arg5958_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5958_5, []]]], Arg5958_6], Arg5958_7, Arg5958_8]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 5, [], "shen.t*-rule"];





Shen.fns["shen.t*-action"] = [Shen.type_func, function shen_user_lambda5961(Arg5960) {
  if (Arg5960.length < 5) return [Shen.type_func, shen_user_lambda5961, 5, Arg5960];
  var Arg5960_0 = Arg5960[0], Arg5960_1 = Arg5960[1], Arg5960_2 = Arg5960[2], Arg5960_3 = Arg5960[3], Arg5960_4 = Arg5960[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5960_0, Arg5960_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5960_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5960_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5960_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5960_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5960_3, (new Shen.Freeze([R3, R1, R0, Arg5960_0, Arg5960_1, Arg5960_2, Arg5960_3, Arg5960_4], function(Arg5962) {
  var Arg5962_0 = Arg5962[0], Arg5962_1 = Arg5962[1], Arg5962_2 = Arg5962[2], Arg5962_3 = Arg5962[3], Arg5962_4 = Arg5962[4], Arg5962_5 = Arg5962[5], Arg5962_6 = Arg5962[6], Arg5962_7 = Arg5962[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg5962_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], Arg5962_5, Arg5962_6, (new Shen.Freeze([Arg5962_2, Arg5962_0, Arg5962_4, Arg5962_1, Arg5962_5, Arg5962_6, Arg5962_7], function(Arg5964) {
  var Arg5964_0 = Arg5964[0], Arg5964_1 = Arg5964[1], Arg5964_2 = Arg5964[2], Arg5964_3 = Arg5964[3], Arg5964_4 = Arg5964[4], Arg5964_5 = Arg5964[5], Arg5964_6 = Arg5964[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5964_0, Arg5964_5, (new Shen.Freeze([Arg5964_0, Arg5964_1, Arg5964_2, Arg5964_3, Arg5964_4, Arg5964_5, Arg5964_6], function(Arg5966) {
  var Arg5966_0 = Arg5966[0], Arg5966_1 = Arg5966[1], Arg5966_2 = Arg5966[2], Arg5966_3 = Arg5966[3], Arg5966_4 = Arg5966[4], Arg5966_5 = Arg5966[5], Arg5966_6 = Arg5966[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Arg5966_1, Arg5966_2, [Shen.type_cons, [Shen.type_cons, Arg5966_3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "verified"], []]]], Arg5966_4], Arg5966_5, Arg5966_6]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5960_0, Arg5960_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5960_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5960_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5960_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5960_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5960_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail-if"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5960_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5960_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5960_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5960_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5960_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5960_3, (new Shen.Freeze([R3, R1, R0, Arg5960_0, Arg5960_1, Arg5960_2, Arg5960_3, Arg5960_4], function(Arg5968) {
  var Arg5968_0 = Arg5968[0], Arg5968_1 = Arg5968[1], Arg5968_2 = Arg5968[2], Arg5968_3 = Arg5968[3], Arg5968_4 = Arg5968[4], Arg5968_5 = Arg5968[5], Arg5968_6 = Arg5968[6], Arg5968_7 = Arg5968[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, Arg5968_0, [Shen.type_cons, Arg5968_1, []]], []]], [Shen.type_cons, Arg5968_1, []]]], Arg5968_4, Arg5968_5, Arg5968_6, Arg5968_7]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5960_0, Arg5960_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5960_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5960_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5960_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5960_3, (new Shen.Freeze([R0, R1, Arg5960_0, Arg5960_1, Arg5960_2, Arg5960_3, Arg5960_4], function(Arg5970) {
  var Arg5970_0 = Arg5970[0], Arg5970_1 = Arg5970[1], Arg5970_2 = Arg5970[2], Arg5970_3 = Arg5970[3], Arg5970_4 = Arg5970[4], Arg5970_5 = Arg5970[5], Arg5970_6 = Arg5970[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg5970_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]], []]], [Shen.type_cons, Arg5970_1, []]]], Arg5970_3, Arg5970_4, Arg5970_5, Arg5970_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, Arg5960_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5960_1, []]]], Arg5960_2, Arg5960_3, Arg5960_4]))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.t*-action"];





Shen.fns["shen.t*-pattern"] = [Shen.type_func, function shen_user_lambda5973(Arg5972) {
  if (Arg5972.length < 4) return [Shen.type_func, shen_user_lambda5973, 4, Arg5972];
  var Arg5972_0 = Arg5972[0], Arg5972_1 = Arg5972[1], Arg5972_2 = Arg5972[2], Arg5972_3 = Arg5972[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5972_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tms->hyp"], [Shen.call(Shen.fns["shen.ues"], [Arg5972_0]), R1, Arg5972_2, (new Shen.Freeze([R0, Arg5972_0, Arg5972_1, R1, Arg5972_2, Arg5972_3], function(Arg5974) {
  var Arg5974_0 = Arg5974[0], Arg5974_1 = Arg5974[1], Arg5974_2 = Arg5974[2], Arg5974_3 = Arg5974[3], Arg5974_4 = Arg5974[4], Arg5974_5 = Arg5974[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5974_0, Arg5974_4, (new Shen.Freeze([Arg5974_0, Arg5974_1, Arg5974_2, Arg5974_3, Arg5974_4, Arg5974_5], function(Arg5976) {
  var Arg5976_0 = Arg5976[0], Arg5976_1 = Arg5976[1], Arg5976_2 = Arg5976[2], Arg5976_3 = Arg5976[3], Arg5976_4 = Arg5976[4], Arg5976_5 = Arg5976[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg5976_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5976_2, []]]], Arg5976_3, Arg5976_4, Arg5976_5]);});})}))]);});})}))]))]);}))}, 4, [], "shen.t*-pattern"];





Shen.fns["shen.ues"] = [Shen.type_func, function shen_user_lambda5979(Arg5978) {
  if (Arg5978.length < 1) return [Shen.type_func, shen_user_lambda5979, 1, Arg5978];
  var Arg5978_0 = Arg5978[0];
  return ((Shen.call(Shen.fns["shen.ue?"], [Arg5978_0]))
  ? [Shen.type_cons, Arg5978_0, []]
  : ((Shen.is_type(Arg5978_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.ues"], [Arg5978_0[1]]), Shen.call(Shen.fns["shen.ues"], [Arg5978_0[2]])]);})
  : []))}, 1, [], "shen.ues"];





Shen.fns["shen.ue?"] = [Shen.type_func, function shen_user_lambda5981(Arg5980) {
  if (Arg5980.length < 1) return [Shen.type_func, shen_user_lambda5981, 1, Arg5980];
  var Arg5980_0 = Arg5980[0];
  return (Shen.is_type(Arg5980_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.ue-h?"], [Shen.str(Arg5980_0)]))}, 1, [], "shen.ue?"];





Shen.fns["shen.ue-h?"] = [Shen.type_func, function shen_user_lambda5983(Arg5982) {
  if (Arg5982.length < 1) return [Shen.type_func, shen_user_lambda5983, 1, Arg5982];
  var Arg5982_0 = Arg5982[0];
  return (((Shen.call(Shen.fns["shen.+string?"], [Arg5982_0]) && (Shen.unwind_tail(Shen.$eq$("&", Arg5982_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg5982_0)]) && Shen.unwind_tail(Shen.$eq$("&", Shen.tlstr(Arg5982_0)[0]))))))
  ? true
  : false)}, 1, [], "shen.ue-h?"];





Shen.fns["shen.tms->hyp"] = [Shen.type_func, function shen_user_lambda5985(Arg5984) {
  if (Arg5984.length < 4) return [Shen.type_func, shen_user_lambda5985, 4, Arg5984];
  var Arg5984_0 = Arg5984[0], Arg5984_1 = Arg5984[1], Arg5984_2 = Arg5984[2], Arg5984_3 = Arg5984[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5984_0, Arg5984_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5984_1, Arg5984_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5984_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg5984_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5984_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5984_2]),
  (R0 = R1))
  : (R0 = false))))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5984_0, Arg5984_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5984_1, Arg5984_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5984_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5984_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5984_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5984_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? (R5[1],
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5984_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [R4, R1, Arg5984_2, (new Shen.Freeze([R4, R1, R0, R5, Arg5984_2, Arg5984_3], function(Arg5986) {
  var Arg5986_0 = Arg5986[0], Arg5986_1 = Arg5986[1], Arg5986_2 = Arg5986[2], Arg5986_3 = Arg5986[3], Arg5986_4 = Arg5986[4], Arg5986_5 = Arg5986[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5986_2, Arg5986_3, Arg5986_4, Arg5986_5]);});})}))]);}))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5984_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5984_2, (new Shen.Freeze([R4, R1, R0, R3, Arg5984_2, Arg5984_3, R5, Arg5984_2], function(Arg5988) {
  var Arg5988_0 = Arg5988[0], Arg5988_1 = Arg5988[1], Arg5988_2 = Arg5988[2], Arg5988_3 = Arg5988[3], Arg5988_4 = Arg5988[4], Arg5988_5 = Arg5988[5], Arg5988_6 = Arg5988[6], Arg5988_7 = Arg5988[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5988_2, Arg5988_3, Arg5988_4, Arg5988_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5984_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg5984_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R3, []], Arg5984_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5984_2, (new Shen.Freeze([R4, R1, R0, R3, Arg5984_2, Arg5984_3, R5, Arg5984_2], function(Arg5990) {
  var Arg5990_0 = Arg5990[0], Arg5990_1 = Arg5990[1], Arg5990_2 = Arg5990[2], Arg5990_3 = Arg5990[3], Arg5990_4 = Arg5990[4], Arg5990_5 = Arg5990[5], Arg5990_6 = Arg5990[6], Arg5990_7 = Arg5990[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5990_2, Arg5990_3, Arg5990_4, Arg5990_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5984_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, ":"], Arg5984_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5984_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? (R3[1],
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5984_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5984_2, (new Shen.Freeze([R4, R1, R0, R3, Arg5984_2, Arg5984_3, R5, Arg5984_2], function(Arg5992) {
  var Arg5992_0 = Arg5992[0], Arg5992_1 = Arg5992[1], Arg5992_2 = Arg5992[2], Arg5992_3 = Arg5992[3], Arg5992_4 = Arg5992[4], Arg5992_5 = Arg5992[5], Arg5992_6 = Arg5992[6], Arg5992_7 = Arg5992[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5992_2, Arg5992_3, Arg5992_4, Arg5992_5]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5984_2]),
  ((R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5984_2, (new Shen.Freeze([R4, R1, R0, R2, Arg5984_2, Arg5984_3, R3, Arg5984_2, R5, Arg5984_2], function(Arg5994) {
  var Arg5994_0 = Arg5994[0], Arg5994_1 = Arg5994[1], Arg5994_2 = Arg5994[2], Arg5994_3 = Arg5994[3], Arg5994_4 = Arg5994[4], Arg5994_5 = Arg5994[5], Arg5994_6 = Arg5994[6], Arg5994_7 = Arg5994[7], Arg5994_8 = Arg5994[8], Arg5994_9 = Arg5994[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5994_2, Arg5994_3, Arg5994_4, Arg5994_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5984_2]),
  (R4 = R4))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5984_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R6, []], Arg5984_2]),
  ((R6 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5984_2, (new Shen.Freeze([R4, R1, R0, R6, Arg5984_2, Arg5984_3, R3, Arg5984_2, R5, Arg5984_2], function(Arg5996) {
  var Arg5996_0 = Arg5996[0], Arg5996_1 = Arg5996[1], Arg5996_2 = Arg5996[2], Arg5996_3 = Arg5996[3], Arg5996_4 = Arg5996[4], Arg5996_5 = Arg5996[5], Arg5996_6 = Arg5996[6], Arg5996_7 = Arg5996[7], Arg5996_8 = Arg5996[8], Arg5996_9 = Arg5996[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5996_2, Arg5996_3, Arg5996_4, Arg5996_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5984_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5984_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5984_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]], Arg5984_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5984_2, (new Shen.Freeze([R4, R1, R0, R5, Arg5984_2, Arg5984_3, R3, Arg5984_2], function(Arg5998) {
  var Arg5998_0 = Arg5998[0], Arg5998_1 = Arg5998[1], Arg5998_2 = Arg5998[2], Arg5998_3 = Arg5998[3], Arg5998_4 = Arg5998[4], Arg5998_5 = Arg5998[5], Arg5998_6 = Arg5998[6], Arg5998_7 = Arg5998[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg5998_2, Arg5998_3, Arg5998_4, Arg5998_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5984_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5984_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5984_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], Arg5984_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg5984_2, (new Shen.Freeze([R4, R1, R0, R5, Arg5984_2, Arg5984_3, R3, Arg5984_2], function(Arg6000) {
  var Arg6000_0 = Arg6000[0], Arg6000_1 = Arg6000[1], Arg6000_2 = Arg6000[2], Arg6000_3 = Arg6000[3], Arg6000_4 = Arg6000[4], Arg6000_5 = Arg6000[5], Arg6000_6 = Arg6000[6], Arg6000_7 = Arg6000[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6000_2, Arg6000_3, Arg6000_4, Arg6000_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5984_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg5984_2])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5984_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5984_2])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_cons, R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R4, []]]], R5], Arg5984_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg5984_2, (new Shen.Freeze([R4, R3, R1, R0, R5, Arg5984_3, R2, Arg5984_2], function(Arg6002) {
  var Arg6002_0 = Arg6002[0], Arg6002_1 = Arg6002[1], Arg6002_2 = Arg6002[2], Arg6002_3 = Arg6002[3], Arg6002_4 = Arg6002[4], Arg6002_5 = Arg6002[5], Arg6002_6 = Arg6002[6], Arg6002_7 = Arg6002[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6002_3, Arg6002_4, Arg6002_7, Arg6002_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5984_2]),
  R5)
  : false)))
  : false))
  : R0))}, 4, [], "shen.tms->hyp"];





Shen.fns["findall"] = [Shen.type_func, function shen_user_lambda6005(Arg6004) {
  if (Arg6004.length < 5) return [Shen.type_func, shen_user_lambda6005, 5, Arg6004];
  var Arg6004_0 = Arg6004[0], Arg6004_1 = Arg6004[1], Arg6004_2 = Arg6004[2], Arg6004_3 = Arg6004[3], Arg6004_4 = Arg6004[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6004_3])),
  (R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6004_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R1, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.a"]]), Arg6004_3, (new Shen.Freeze([R0, Arg6004_0, Arg6004_1, Arg6004_2, R1, Arg6004_3, Arg6004_4], function(Arg6006) {
  var Arg6006_0 = Arg6006[0], Arg6006_1 = Arg6006[1], Arg6006_2 = Arg6006[2], Arg6006_3 = Arg6006[3], Arg6006_4 = Arg6006[4], Arg6006_5 = Arg6006[5], Arg6006_6 = Arg6006[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6006_0, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6006_4, Arg6006_5])[1]] = []), Arg6006_5, (new Shen.Freeze([Arg6006_0, Arg6006_1, Arg6006_2, Arg6006_3, Arg6006_4, Arg6006_5, Arg6006_6], function(Arg6008) {
  var Arg6008_0 = Arg6008[0], Arg6008_1 = Arg6008[1], Arg6008_2 = Arg6008[2], Arg6008_3 = Arg6008[3], Arg6008_4 = Arg6008[4], Arg6008_5 = Arg6008[5], Arg6008_6 = Arg6008[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.findallhelp"], [Arg6008_1, Arg6008_2, Arg6008_3, Arg6008_4, Arg6008_5, Arg6008_6]);});})}))]);});})}))]);}))}, 5, [], "findall"];





Shen.fns["shen.findallhelp"] = [Shen.type_func, function shen_user_lambda6011(Arg6010) {
  if (Arg6010.length < 6) return [Shen.type_func, shen_user_lambda6011, 6, Arg6010];
  var Arg6010_0 = Arg6010[0], Arg6010_1 = Arg6010[1], Arg6010_2 = Arg6010[2], Arg6010_3 = Arg6010[3], Arg6010_4 = Arg6010[4], Arg6010_5 = Arg6010[5];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [Arg6010_1, Arg6010_4, (new Shen.Freeze([Arg6010_1, Arg6010_0, Arg6010_2, Arg6010_3, Arg6010_4, Arg6010_5], function(Arg6012) {
  var Arg6012_0 = Arg6012[0], Arg6012_1 = Arg6012[1], Arg6012_2 = Arg6012[2], Arg6012_3 = Arg6012[3], Arg6012_4 = Arg6012[4], Arg6012_5 = Arg6012[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember"], [Arg6012_3, Arg6012_1, Arg6012_4, (new Shen.Freeze([Arg6012_3, Arg6012_1, Arg6012_4, Arg6012_5], function(Arg6014) {
  var Arg6014_0 = Arg6014[0], Arg6014_1 = Arg6014[1], Arg6014_2 = Arg6014[2], Arg6014_3 = Arg6014[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg6014_2, Arg6014_3]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6010_2, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6010_3, Arg6010_4])[1]]), Arg6010_4, Arg6010_5]);}))
  : R0))}, 6, [], "shen.findallhelp"];





Shen.fns["shen.remember"] = [Shen.type_func, function shen_user_lambda6017(Arg6016) {
  if (Arg6016.length < 4) return [Shen.type_func, shen_user_lambda6017, 4, Arg6016];
  var Arg6016_0 = Arg6016[0], Arg6016_1 = Arg6016[1], Arg6016_2 = Arg6016[2], Arg6016_3 = Arg6016[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6016_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6016_0, Arg6016_2])[1]] = [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6016_1, Arg6016_2]), (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6016_0, Arg6016_2])[1]])]), Arg6016_2, Arg6016_3]);}))}, 4, [], "shen.remember"];





Shen.fns["shen.t*-defcc"] = [Shen.type_func, function shen_user_lambda6019(Arg6018) {
  if (Arg6018.length < 5) return [Shen.type_func, shen_user_lambda6019, 5, Arg6018];
  var Arg6018_0 = Arg6018[0], Arg6018_1 = Arg6018[1], Arg6018_2 = Arg6018[2], Arg6018_3 = Arg6018[3], Arg6018_4 = Arg6018[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6018_0, Arg6018_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6018_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6018_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6018_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6018_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6018_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6018_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6018_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6018_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6018_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6018_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6018_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], R3)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6018_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6018_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6018_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R5)))
  ? ((R5 = R4[2]),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_3])),
  (R9 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_3])),
  (R10 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_3])),
  (R11 = Shen.call(Shen.fns["shen.newpv"], [Arg6018_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R10, Shen.call(Shen.fns["shen.placeholders"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6018_3]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6018_3]), []]]], Shen.call(Shen.fns["shen.extract_vars"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6018_3]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6018_3]), []]]]])]), Arg6018_3, (new Shen.Freeze([R5, R4, R6, R0, R7, R8, R9, R10, Arg6018_2, Arg6018_1, R11, R1, R2, R3, Arg6018_3, Arg6018_4], function(Arg6020) {
  var Arg6020_0 = Arg6020[0], Arg6020_1 = Arg6020[1], Arg6020_2 = Arg6020[2], Arg6020_3 = Arg6020[3], Arg6020_4 = Arg6020[4], Arg6020_5 = Arg6020[5], Arg6020_6 = Arg6020[6], Arg6020_7 = Arg6020[7], Arg6020_8 = Arg6020[8], Arg6020_9 = Arg6020[9], Arg6020_10 = Arg6020[10], Arg6020_11 = Arg6020[11], Arg6020_12 = Arg6020[12], Arg6020_13 = Arg6020[13], Arg6020_14 = Arg6020[14], Arg6020_15 = Arg6020[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6020_5, Shen.call(Shen.fns["shen.lazyderef"], [Arg6020_7, Arg6020_14])[1], Arg6020_14, (new Shen.Freeze([Arg6020_0, Arg6020_1, Arg6020_2, Arg6020_3, Arg6020_4, Arg6020_5, Arg6020_6, Arg6020_7, Arg6020_8, Arg6020_9, Arg6020_10, Arg6020_11, Arg6020_12, Arg6020_13, Arg6020_14, Arg6020_15], function(Arg6022) {
  var Arg6022_0 = Arg6022[0], Arg6022_1 = Arg6022[1], Arg6022_2 = Arg6022[2], Arg6022_3 = Arg6022[3], Arg6022_4 = Arg6022[4], Arg6022_5 = Arg6022[5], Arg6022_6 = Arg6022[6], Arg6022_7 = Arg6022[7], Arg6022_8 = Arg6022[8], Arg6022_9 = Arg6022[9], Arg6022_10 = Arg6022[10], Arg6022_11 = Arg6022[11], Arg6022_12 = Arg6022[12], Arg6022_13 = Arg6022[13], Arg6022_14 = Arg6022[14], Arg6022_15 = Arg6022[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6022_6, Shen.call(Shen.fns["shen.lazyderef"], [Arg6022_7, Arg6022_14])[2][2][1], Arg6022_14, (new Shen.Freeze([Arg6022_0, Arg6022_1, Arg6022_2, Arg6022_3, Arg6022_4, Arg6022_5, Arg6022_6, Arg6022_7, Arg6022_8, Arg6022_9, Arg6022_10, Arg6022_11, Arg6022_12, Arg6022_13, Arg6022_14, Arg6022_15], function(Arg6024) {
  var Arg6024_0 = Arg6024[0], Arg6024_1 = Arg6024[1], Arg6024_2 = Arg6024[2], Arg6024_3 = Arg6024[3], Arg6024_4 = Arg6024[4], Arg6024_5 = Arg6024[5], Arg6024_6 = Arg6024[6], Arg6024_7 = Arg6024[7], Arg6024_8 = Arg6024[8], Arg6024_9 = Arg6024[9], Arg6024_10 = Arg6024[10], Arg6024_11 = Arg6024[11], Arg6024_12 = Arg6024[12], Arg6024_13 = Arg6024[13], Arg6024_14 = Arg6024[14], Arg6024_15 = Arg6024[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6024_1, Shen.call(Shen.fns["shen.plug-wildcards"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6024_0, Arg6024_14])]), Arg6024_14, (new Shen.Freeze([Arg6024_0, Arg6024_1, Arg6024_2, Arg6024_3, Arg6024_4, Arg6024_5, Arg6024_6, Arg6024_7, Arg6024_8, Arg6024_9, Arg6024_10, Arg6024_11, Arg6024_12, Arg6024_13, Arg6024_14, Arg6024_15], function(Arg6026) {
  var Arg6026_0 = Arg6026[0], Arg6026_1 = Arg6026[1], Arg6026_2 = Arg6026[2], Arg6026_3 = Arg6026[3], Arg6026_4 = Arg6026[4], Arg6026_5 = Arg6026[5], Arg6026_6 = Arg6026[6], Arg6026_7 = Arg6026[7], Arg6026_8 = Arg6026[8], Arg6026_9 = Arg6026[9], Arg6026_10 = Arg6026[10], Arg6026_11 = Arg6026[11], Arg6026_12 = Arg6026[12], Arg6026_13 = Arg6026[13], Arg6026_14 = Arg6026[14], Arg6026_15 = Arg6026[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6026_2, Shen.call(Shen.fns["shen.placeholders"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6026_1, Arg6026_14]), Shen.call(Shen.fns["shen.extract_vars"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6026_1, Arg6026_14])])]), Arg6026_14, (new Shen.Freeze([Arg6026_1, Arg6026_2, Arg6026_3, Arg6026_4, Arg6026_5, Arg6026_6, Arg6026_7, Arg6026_8, Arg6026_9, Arg6026_10, Arg6026_11, Arg6026_12, Arg6026_13, Arg6026_14, Arg6026_15], function(Arg6028) {
  var Arg6028_0 = Arg6028[0], Arg6028_1 = Arg6028[1], Arg6028_2 = Arg6028[2], Arg6028_3 = Arg6028[3], Arg6028_4 = Arg6028[4], Arg6028_5 = Arg6028[5], Arg6028_6 = Arg6028[6], Arg6028_7 = Arg6028[7], Arg6028_8 = Arg6028[8], Arg6028_9 = Arg6028[9], Arg6028_10 = Arg6028[10], Arg6028_11 = Arg6028[11], Arg6028_12 = Arg6028[12], Arg6028_13 = Arg6028[13], Arg6028_14 = Arg6028[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6028_3, Arg6028_1, Arg6028_13, (new Shen.Freeze([Arg6028_1, Arg6028_2, Arg6028_3, Arg6028_4, Arg6028_5, Arg6028_6, Arg6028_7, Arg6028_8, Arg6028_9, Arg6028_10, Arg6028_11, Arg6028_12, Arg6028_13, Arg6028_14], function(Arg6030) {
  var Arg6030_0 = Arg6030[0], Arg6030_1 = Arg6030[1], Arg6030_2 = Arg6030[2], Arg6030_3 = Arg6030[3], Arg6030_4 = Arg6030[4], Arg6030_5 = Arg6030[5], Arg6030_6 = Arg6030[6], Arg6030_7 = Arg6030[7], Arg6030_8 = Arg6030[8], Arg6030_9 = Arg6030[9], Arg6030_10 = Arg6030[10], Arg6030_11 = Arg6030[11], Arg6030_12 = Arg6030[12], Arg6030_13 = Arg6030[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6030_1, Arg6030_12, (new Shen.Freeze([Arg6030_1, Arg6030_2, Arg6030_3, Arg6030_4, Arg6030_5, Arg6030_6, Arg6030_7, Arg6030_8, Arg6030_9, Arg6030_10, Arg6030_11, Arg6030_12, Arg6030_13], function(Arg6032) {
  var Arg6032_0 = Arg6032[0], Arg6032_1 = Arg6032[1], Arg6032_2 = Arg6032[2], Arg6032_3 = Arg6032[3], Arg6032_4 = Arg6032[4], Arg6032_5 = Arg6032[5], Arg6032_6 = Arg6032[6], Arg6032_7 = Arg6032[7], Arg6032_8 = Arg6032[8], Arg6032_9 = Arg6032[9], Arg6032_10 = Arg6032[10], Arg6032_11 = Arg6032[11], Arg6032_12 = Arg6032[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6032_8, Arg6032_1, Arg6032_2, Arg6032_3, [Shen.type_cons, [Shen.type_cons, Arg6032_8, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6032_4, []]]], Arg6032_5], 1, Arg6032_11, (new Shen.Freeze([Arg6032_1, Arg6032_2, Arg6032_3, Arg6032_4, Arg6032_5, Arg6032_6, Arg6032_7, Arg6032_8, Arg6032_9, Arg6032_10, Arg6032_11, Arg6032_12], function(Arg6034) {
  var Arg6034_0 = Arg6034[0], Arg6034_1 = Arg6034[1], Arg6034_2 = Arg6034[2], Arg6034_3 = Arg6034[3], Arg6034_4 = Arg6034[4], Arg6034_5 = Arg6034[5], Arg6034_6 = Arg6034[6], Arg6034_7 = Arg6034[7], Arg6034_8 = Arg6034[8], Arg6034_9 = Arg6034[9], Arg6034_10 = Arg6034[10], Arg6034_11 = Arg6034[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg6034_5, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6034_8, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6034_9, []]]], Arg6034_10, (new Shen.Freeze([Arg6034_5, Arg6034_6, Arg6034_7, Arg6034_8, Arg6034_9, Arg6034_10, Arg6034_11], function(Arg6036) {
  var Arg6036_0 = Arg6036[0], Arg6036_1 = Arg6036[1], Arg6036_2 = Arg6036[2], Arg6036_3 = Arg6036[3], Arg6036_4 = Arg6036[4], Arg6036_5 = Arg6036[5], Arg6036_6 = Arg6036[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6036_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6036_2, Arg6036_5]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6036_3, Arg6036_5]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6036_4, Arg6036_5]), []]]]]), Arg6036_5, Arg6036_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))]);}))}, 5, [], "shen.t*-defcc"];





Shen.fns["shen.plug-wildcards"] = [Shen.type_func, function shen_user_lambda6039(Arg6038) {
  if (Arg6038.length < 1) return [Shen.type_func, shen_user_lambda6039, 1, Arg6038];
  var Arg6038_0 = Arg6038[0];
  return ((Shen.is_type(Arg6038_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.plug-wildcards"], Arg6038_0]);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg6038_0, [Shen.type_symbol, "_"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "X"]]);})
  : Arg6038_0))}, 1, [], "shen.plug-wildcards"];





Shen.fns["shen.get-rules"] = [Shen.type_func, function shen_user_lambda6041(Arg6040) {
  if (Arg6040.length < 4) return [Shen.type_func, shen_user_lambda6041, 4, Arg6040];
  var Arg6040_0 = Arg6040[0], Arg6040_1 = Arg6040[1], Arg6040_2 = Arg6040[2], Arg6040_3 = Arg6040[3];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6040_0, Arg6040_2])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6040_1, Arg6040_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6040_2, Arg6040_3])))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6040_2]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6040_1, Arg6040_2])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["cut"], [R0, Arg6040_2, Arg6040_3])))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6040_2]),
  (R1 = R2))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6040_0, Arg6040_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6040_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.first-rule"], [Arg6040_1, R2, R3, Arg6040_2, (new Shen.Freeze([Arg6040_1, R2, R0, R1, R3, Arg6040_2, Arg6040_3], function(Arg6042) {
  var Arg6042_0 = Arg6042[0], Arg6042_1 = Arg6042[1], Arg6042_2 = Arg6042[2], Arg6042_3 = Arg6042[3], Arg6042_4 = Arg6042[4], Arg6042_5 = Arg6042[5], Arg6042_6 = Arg6042[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6042_2, Arg6042_5, (new Shen.Freeze([Arg6042_2, Arg6042_3, Arg6042_4, Arg6042_5, Arg6042_6], function(Arg6044) {
  var Arg6044_0 = Arg6044[0], Arg6044_1 = Arg6044[1], Arg6044_2 = Arg6044[2], Arg6044_3 = Arg6044[3], Arg6044_4 = Arg6044[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6044_1, Arg6044_2, Arg6044_3, Arg6044_4]);});})}))]);});})}))]))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6040_2])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6040_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R2, R3], Arg6040_2]),
  ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6040_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.first-rule"], [Arg6040_1, R2, R4, Arg6040_2, (new Shen.Freeze([Arg6040_1, R2, R0, R3, R4, Arg6040_2, Arg6040_3, R1, Arg6040_2], function(Arg6046) {
  var Arg6046_0 = Arg6046[0], Arg6046_1 = Arg6046[1], Arg6046_2 = Arg6046[2], Arg6046_3 = Arg6046[3], Arg6046_4 = Arg6046[4], Arg6046_5 = Arg6046[5], Arg6046_6 = Arg6046[6], Arg6046_7 = Arg6046[7], Arg6046_8 = Arg6046[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6046_2, Arg6046_5, (new Shen.Freeze([Arg6046_2, Arg6046_3, Arg6046_4, Arg6046_5, Arg6046_6], function(Arg6048) {
  var Arg6048_0 = Arg6048[0], Arg6048_1 = Arg6048[1], Arg6048_2 = Arg6048[2], Arg6048_3 = Arg6048[3], Arg6048_4 = Arg6048[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6048_1, Arg6048_2, Arg6048_3, Arg6048_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6040_2]),
  R3)
  : false)))
  : R1))]);}))}, 4, [], "shen.get-rules"];





Shen.fns["shen.first-rule"] = [Shen.type_func, function shen_user_lambda6051(Arg6050) {
  if (Arg6050.length < 5) return [Shen.type_func, shen_user_lambda6051, 5, Arg6050];
  var Arg6050_0 = Arg6050[0], Arg6050_1 = Arg6050[1], Arg6050_2 = Arg6050[2], Arg6050_3 = Arg6050[3], Arg6050_4 = Arg6050[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6050_0, Arg6050_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6050_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], R2)))
  ? ((R2 = R1[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6050_1, Arg6050_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["unify!"], [Arg6050_2, R2, Arg6050_3, (new Shen.Freeze([R2, R0, Arg6050_0, Arg6050_1, Arg6050_2, Arg6050_4, Arg6050_3], function(Arg6052) {
  var Arg6052_0 = Arg6052[0], Arg6052_1 = Arg6052[1], Arg6052_2 = Arg6052[2], Arg6052_3 = Arg6052[3], Arg6052_4 = Arg6052[4], Arg6052_5 = Arg6052[5], Arg6052_6 = Arg6052[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6052_1, Arg6052_6, Arg6052_5]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6050_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["unify!"], [Arg6050_2, R2, Arg6050_3, (new Shen.Freeze([R2, R0, R1, Arg6050_0, Arg6050_1, Arg6050_2, Arg6050_4, Arg6050_3], function(Arg6054) {
  var Arg6054_0 = Arg6054[0], Arg6054_1 = Arg6054[1], Arg6054_2 = Arg6054[2], Arg6054_3 = Arg6054[3], Arg6054_4 = Arg6054[4], Arg6054_5 = Arg6054[5], Arg6054_6 = Arg6054[6], Arg6054_7 = Arg6054[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6054_1, Arg6054_7, Arg6054_6]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6050_3]),
  (R0 = R2))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6050_0, Arg6050_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6050_1, Arg6050_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["unify!"], [R3, R1, Arg6050_3, (new Shen.Freeze([R3, R1, R0, R2, Arg6050_2, Arg6050_3, Arg6050_4], function(Arg6056) {
  var Arg6056_0 = Arg6056[0], Arg6056_1 = Arg6056[1], Arg6056_2 = Arg6056[2], Arg6056_3 = Arg6056[3], Arg6056_4 = Arg6056[4], Arg6056_5 = Arg6056[5], Arg6056_6 = Arg6056[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.first-rule"], [Arg6056_2, Arg6056_3, Arg6056_4, Arg6056_5, Arg6056_6]);});})}))]))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6050_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6050_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R3, R4], Arg6050_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg6050_3, (new Shen.Freeze([R3, R1, R0, R4, Arg6050_2, Arg6050_4, R2, Arg6050_3], function(Arg6058) {
  var Arg6058_0 = Arg6058[0], Arg6058_1 = Arg6058[1], Arg6058_2 = Arg6058[2], Arg6058_3 = Arg6058[3], Arg6058_4 = Arg6058[4], Arg6058_5 = Arg6058[5], Arg6058_6 = Arg6058[6], Arg6058_7 = Arg6058[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.first-rule"], [Arg6058_2, Arg6058_3, Arg6058_4, Arg6058_7, Arg6058_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6050_3]),
  R4)
  : false)))
  : false))
  : R0))]);}))}, 5, [], "shen.first-rule"];





Shen.fns["shen.tc-rules"] = [Shen.type_func, function shen_user_lambda6061(Arg6060) {
  if (Arg6060.length < 8) return [Shen.type_func, shen_user_lambda6061, 8, Arg6060];
  var Arg6060_0 = Arg6060[0], Arg6060_1 = Arg6060[1], Arg6060_2 = Arg6060[2], Arg6060_3 = Arg6060[3], Arg6060_4 = Arg6060[4], Arg6060_5 = Arg6060[5], Arg6060_6 = Arg6060[6], Arg6060_7 = Arg6060[7];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6060_1, Arg6060_6])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6060_7))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6060_1, Arg6060_6])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6060_2, Arg6060_6])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6060_6])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6060_6])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6060_6])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6060_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tc-rule"], [Arg6060_0, R2, R3, Arg6060_3, Arg6060_4, Arg6060_5, Arg6060_6, (new Shen.Freeze([R2, Arg6060_5, R0, Arg6060_0, R1, R3, Arg6060_3, Arg6060_4, R4, Arg6060_6, Arg6060_7], function(Arg6062) {
  var Arg6062_0 = Arg6062[0], Arg6062_1 = Arg6062[1], Arg6062_2 = Arg6062[2], Arg6062_3 = Arg6062[3], Arg6062_4 = Arg6062[4], Arg6062_5 = Arg6062[5], Arg6062_6 = Arg6062[6], Arg6062_7 = Arg6062[7], Arg6062_8 = Arg6062[8], Arg6062_9 = Arg6062[9], Arg6062_10 = Arg6062[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6062_8, (Shen.call(Shen.fns["shen.deref"], [Arg6062_1, Arg6062_9]) + 1), Arg6062_9, (new Shen.Freeze([Arg6062_1, Arg6062_2, Arg6062_3, Arg6062_4, Arg6062_5, Arg6062_6, Arg6062_7, Arg6062_8, Arg6062_9, Arg6062_10], function(Arg6064) {
  var Arg6064_0 = Arg6064[0], Arg6064_1 = Arg6064[1], Arg6064_2 = Arg6064[2], Arg6064_3 = Arg6064[3], Arg6064_4 = Arg6064[4], Arg6064_5 = Arg6064[5], Arg6064_6 = Arg6064[6], Arg6064_7 = Arg6064[7], Arg6064_8 = Arg6064[8], Arg6064_9 = Arg6064[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6064_1, Arg6064_8, (new Shen.Freeze([Arg6064_1, Arg6064_2, Arg6064_3, Arg6064_4, Arg6064_5, Arg6064_6, Arg6064_7, Arg6064_8, Arg6064_9], function(Arg6066) {
  var Arg6066_0 = Arg6066[0], Arg6066_1 = Arg6066[1], Arg6066_2 = Arg6066[2], Arg6066_3 = Arg6066[3], Arg6066_4 = Arg6066[4], Arg6066_5 = Arg6066[5], Arg6066_6 = Arg6066[6], Arg6066_7 = Arg6066[7], Arg6066_8 = Arg6066[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6066_1, Arg6066_2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6066_3, []]], Arg6066_4, Arg6066_5, Arg6066_6, Arg6066_7, Arg6066_8]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 8, [], "shen.tc-rules"];





Shen.fns["shen.tc-rule"] = [Shen.type_func, function shen_user_lambda6069(Arg6068) {
  if (Arg6068.length < 8) return [Shen.type_func, shen_user_lambda6069, 8, Arg6068];
  var Arg6068_0 = Arg6068[0], Arg6068_1 = Arg6068[1], Arg6068_2 = Arg6068[2], Arg6068_3 = Arg6068[3], Arg6068_4 = Arg6068[4], Arg6068_5 = Arg6068[5], Arg6068_6 = Arg6068[6], Arg6068_7 = Arg6068[7];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["shen.check-defcc-rule"], [Arg6068_1, Arg6068_2, Arg6068_3, Arg6068_4, Arg6068_6, Arg6068_7]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6068_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6068_5, Arg6068_6]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6068_0, Arg6068_6]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg6068_6, Arg6068_7]);}))
  : R0))}, 8, [], "shen.tc-rule"];





Shen.fns["shen.check-defcc-rule"] = [Shen.type_func, function shen_user_lambda6071(Arg6070) {
  if (Arg6070.length < 6) return [Shen.type_func, shen_user_lambda6071, 6, Arg6070];
  var Arg6070_0 = Arg6070[0], Arg6070_1 = Arg6070[1], Arg6070_2 = Arg6070[2], Arg6070_3 = Arg6070[3], Arg6070_4 = Arg6070[4], Arg6070_5 = Arg6070[5];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6070_4])),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6070_4])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6070_4])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.get-syntax+semantics"], [R1, R2, Arg6070_0, Arg6070_4, (new Shen.Freeze([Arg6070_0, Arg6070_3, R1, Arg6070_1, R0, R2, Arg6070_2, R3, Arg6070_4, Arg6070_5], function(Arg6072) {
  var Arg6072_0 = Arg6072[0], Arg6072_1 = Arg6072[1], Arg6072_2 = Arg6072[2], Arg6072_3 = Arg6072[3], Arg6072_4 = Arg6072[4], Arg6072_5 = Arg6072[5], Arg6072_6 = Arg6072[6], Arg6072_7 = Arg6072[7], Arg6072_8 = Arg6072[8], Arg6072_9 = Arg6072[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6072_4, Arg6072_8, (new Shen.Freeze([Arg6072_1, Arg6072_2, Arg6072_3, Arg6072_4, Arg6072_5, Arg6072_6, Arg6072_7, Arg6072_8, Arg6072_9], function(Arg6074) {
  var Arg6074_0 = Arg6074[0], Arg6074_1 = Arg6074[1], Arg6074_2 = Arg6074[2], Arg6074_3 = Arg6074[3], Arg6074_4 = Arg6074[4], Arg6074_5 = Arg6074[5], Arg6074_6 = Arg6074[6], Arg6074_7 = Arg6074[7], Arg6074_8 = Arg6074[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6074_1, Arg6074_0, Arg6074_6, Arg6074_2, Arg6074_7, (new Shen.Freeze([Arg6074_0, Arg6074_1, Arg6074_2, Arg6074_3, Arg6074_4, Arg6074_5, Arg6074_6, Arg6074_7, Arg6074_8], function(Arg6076) {
  var Arg6076_0 = Arg6076[0], Arg6076_1 = Arg6076[1], Arg6076_2 = Arg6076[2], Arg6076_3 = Arg6076[3], Arg6076_4 = Arg6076[4], Arg6076_5 = Arg6076[5], Arg6076_6 = Arg6076[6], Arg6076_7 = Arg6076[7], Arg6076_8 = Arg6076[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6076_3, Arg6076_7, (new Shen.Freeze([Arg6076_1, Arg6076_2, Arg6076_3, Arg6076_4, Arg6076_5, Arg6076_6, Arg6076_7, Arg6076_8], function(Arg6078) {
  var Arg6078_0 = Arg6078[0], Arg6078_1 = Arg6078[1], Arg6078_2 = Arg6078[2], Arg6078_3 = Arg6078[3], Arg6078_4 = Arg6078[4], Arg6078_5 = Arg6078[5], Arg6078_6 = Arg6078[6], Arg6078_7 = Arg6078[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6078_0, Arg6078_1, Arg6078_5, Arg6078_6, (new Shen.Freeze([Arg6078_0, Arg6078_1, Arg6078_2, Arg6078_3, Arg6078_4, Arg6078_5, Arg6078_6, Arg6078_7], function(Arg6080) {
  var Arg6080_0 = Arg6080[0], Arg6080_1 = Arg6080[1], Arg6080_2 = Arg6080[2], Arg6080_3 = Arg6080[3], Arg6080_4 = Arg6080[4], Arg6080_5 = Arg6080[5], Arg6080_6 = Arg6080[6], Arg6080_7 = Arg6080[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6080_2, Arg6080_6, (new Shen.Freeze([Arg6080_2, Arg6080_3, Arg6080_4, Arg6080_5, Arg6080_6, Arg6080_7], function(Arg6082) {
  var Arg6082_0 = Arg6082[0], Arg6082_1 = Arg6082[1], Arg6082_2 = Arg6082[2], Arg6082_3 = Arg6082[3], Arg6082_4 = Arg6082[4], Arg6082_5 = Arg6082[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.semantics-check"], [Arg6082_1, Arg6082_2, Arg6082_3, Arg6082_4, Arg6082_5]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))]);}))}, 6, [], "shen.check-defcc-rule"];





Shen.fns["shen.syntax-hyps"] = [Shen.type_func, function shen_user_lambda6085(Arg6084) {
  if (Arg6084.length < 6) return [Shen.type_func, shen_user_lambda6085, 6, Arg6084];
  var Arg6084_0 = Arg6084[0], Arg6084_1 = Arg6084[1], Arg6084_2 = Arg6084[2], Arg6084_3 = Arg6084[3], Arg6084_4 = Arg6084[4], Arg6084_5 = Arg6084[5];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6084_0, Arg6084_4])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6084_2, Arg6084_1, Arg6084_4, Arg6084_5])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6084_0, Arg6084_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6084_4])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  (R1 = R1[2]),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_4])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6084_4, (new Shen.Freeze([R3, R2, R1, R0, R4, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5, R0, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6086) {
  var Arg6086_0 = Arg6086[0], Arg6086_1 = Arg6086[1], Arg6086_2 = Arg6086[2], Arg6086_3 = Arg6086[3], Arg6086_4 = Arg6086[4], Arg6086_5 = Arg6086[5], Arg6086_6 = Arg6086[6], Arg6086_7 = Arg6086[7], Arg6086_8 = Arg6086[8], Arg6086_9 = Arg6086[9], Arg6086_10 = Arg6086[10], Arg6086_11 = Arg6086[11], Arg6086_12 = Arg6086[12], Arg6086_13 = Arg6086[13], Arg6086_14 = Arg6086[14], Arg6086_15 = Arg6086[15], Arg6086_16 = Arg6086[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.conc"], [[Shen.type_cons, Arg6086_0, Arg6086_1], Arg6086_2, Arg6086_4, Arg6086_8, (new Shen.Freeze([Arg6086_0, Arg6086_1, Arg6086_2, Arg6086_3, Arg6086_4, Arg6086_5, Arg6086_6, Arg6086_7, Arg6086_8, Arg6086_9], function(Arg6088) {
  var Arg6088_0 = Arg6088[0], Arg6088_1 = Arg6088[1], Arg6088_2 = Arg6088[2], Arg6088_3 = Arg6088[3], Arg6088_4 = Arg6088[4], Arg6088_5 = Arg6088[5], Arg6088_6 = Arg6088[6], Arg6088_7 = Arg6088[7], Arg6088_8 = Arg6088[8], Arg6088_9 = Arg6088[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6088_3, Arg6088_8, (new Shen.Freeze([Arg6088_3, Arg6088_4, Arg6088_5, Arg6088_6, Arg6088_7, Arg6088_8, Arg6088_9], function(Arg6090) {
  var Arg6090_0 = Arg6090[0], Arg6090_1 = Arg6090[1], Arg6090_2 = Arg6090[2], Arg6090_3 = Arg6090[3], Arg6090_4 = Arg6090[4], Arg6090_5 = Arg6090[5], Arg6090_6 = Arg6090[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6090_1, Arg6090_2, Arg6090_3, Arg6090_4, Arg6090_5, Arg6090_6]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6084_0, Arg6084_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6084_2, Arg6084_4])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6084_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6084_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6084_4])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6084_4])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R4 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg6084_4])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6084_3, R4, Arg6084_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6084_1, R6, Arg6084_3, Arg6084_4, Arg6084_5, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6092) {
  var Arg6092_0 = Arg6092[0], Arg6092_1 = Arg6092[1], Arg6092_2 = Arg6092[2], Arg6092_3 = Arg6092[3], Arg6092_4 = Arg6092[4], Arg6092_5 = Arg6092[5], Arg6092_6 = Arg6092[6], Arg6092_7 = Arg6092[7], Arg6092_8 = Arg6092[8], Arg6092_9 = Arg6092[9], Arg6092_10 = Arg6092[10], Arg6092_11 = Arg6092[11], Arg6092_12 = Arg6092[12], Arg6092_13 = Arg6092[13], Arg6092_14 = Arg6092[14], Arg6092_15 = Arg6092[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6092_2, Arg6092_1, Arg6092_8, (new Shen.Freeze([Arg6092_1, Arg6092_2, Arg6092_3, Arg6092_4, Arg6092_5, Arg6092_6, Arg6092_7, Arg6092_8, Arg6092_9], function(Arg6094) {
  var Arg6094_0 = Arg6094[0], Arg6094_1 = Arg6094[1], Arg6094_2 = Arg6094[2], Arg6094_3 = Arg6094[3], Arg6094_4 = Arg6094[4], Arg6094_5 = Arg6094[5], Arg6094_6 = Arg6094[6], Arg6094_7 = Arg6094[7], Arg6094_8 = Arg6094[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6094_1, Arg6094_7])]), Arg6094_7, (new Shen.Freeze([Arg6094_1, Arg6094_2, Arg6094_3, Arg6094_4, Arg6094_5, Arg6094_6, Arg6094_7, Arg6094_8], function(Arg6096) {
  var Arg6096_0 = Arg6096[0], Arg6096_1 = Arg6096[1], Arg6096_2 = Arg6096[2], Arg6096_3 = Arg6096[3], Arg6096_4 = Arg6096[4], Arg6096_5 = Arg6096[5], Arg6096_6 = Arg6096[6], Arg6096_7 = Arg6096[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6096_1, Arg6096_6, (new Shen.Freeze([Arg6096_1, Arg6096_2, Arg6096_3, Arg6096_4, Arg6096_5, Arg6096_6, Arg6096_7], function(Arg6098) {
  var Arg6098_0 = Arg6098[0], Arg6098_1 = Arg6098[1], Arg6098_2 = Arg6098[2], Arg6098_3 = Arg6098[3], Arg6098_4 = Arg6098[4], Arg6098_5 = Arg6098[5], Arg6098_6 = Arg6098[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6098_1, Arg6098_2, Arg6098_3, Arg6098_4, Arg6098_5, Arg6098_6]);});})}))]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg6084_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6084_3, R4, Arg6084_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6084_1, R3, Arg6084_3, Arg6084_4, Arg6084_5, R6, Arg6084_4, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6100) {
  var Arg6100_0 = Arg6100[0], Arg6100_1 = Arg6100[1], Arg6100_2 = Arg6100[2], Arg6100_3 = Arg6100[3], Arg6100_4 = Arg6100[4], Arg6100_5 = Arg6100[5], Arg6100_6 = Arg6100[6], Arg6100_7 = Arg6100[7], Arg6100_8 = Arg6100[8], Arg6100_9 = Arg6100[9], Arg6100_10 = Arg6100[10], Arg6100_11 = Arg6100[11], Arg6100_12 = Arg6100[12], Arg6100_13 = Arg6100[13], Arg6100_14 = Arg6100[14], Arg6100_15 = Arg6100[15], Arg6100_16 = Arg6100[16], Arg6100_17 = Arg6100[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6100_2, Arg6100_1, Arg6100_8, (new Shen.Freeze([Arg6100_1, Arg6100_2, Arg6100_3, Arg6100_4, Arg6100_5, Arg6100_6, Arg6100_7, Arg6100_8, Arg6100_9], function(Arg6102) {
  var Arg6102_0 = Arg6102[0], Arg6102_1 = Arg6102[1], Arg6102_2 = Arg6102[2], Arg6102_3 = Arg6102[3], Arg6102_4 = Arg6102[4], Arg6102_5 = Arg6102[5], Arg6102_6 = Arg6102[6], Arg6102_7 = Arg6102[7], Arg6102_8 = Arg6102[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6102_1, Arg6102_7])]), Arg6102_7, (new Shen.Freeze([Arg6102_1, Arg6102_2, Arg6102_3, Arg6102_4, Arg6102_5, Arg6102_6, Arg6102_7, Arg6102_8], function(Arg6104) {
  var Arg6104_0 = Arg6104[0], Arg6104_1 = Arg6104[1], Arg6104_2 = Arg6104[2], Arg6104_3 = Arg6104[3], Arg6104_4 = Arg6104[4], Arg6104_5 = Arg6104[5], Arg6104_6 = Arg6104[6], Arg6104_7 = Arg6104[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6104_1, Arg6104_6, (new Shen.Freeze([Arg6104_1, Arg6104_2, Arg6104_3, Arg6104_4, Arg6104_5, Arg6104_6, Arg6104_7], function(Arg6106) {
  var Arg6106_0 = Arg6106[0], Arg6106_1 = Arg6106[1], Arg6106_2 = Arg6106[2], Arg6106_3 = Arg6106[3], Arg6106_4 = Arg6106[4], Arg6106_5 = Arg6106[5], Arg6106_6 = Arg6106[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6106_1, Arg6106_2, Arg6106_3, Arg6106_4, Arg6106_5, Arg6106_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6084_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_4])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R4, []], Arg6084_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6084_3, R4, Arg6084_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6084_1, R3, Arg6084_3, Arg6084_4, Arg6084_5, R6, Arg6084_4, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6108) {
  var Arg6108_0 = Arg6108[0], Arg6108_1 = Arg6108[1], Arg6108_2 = Arg6108[2], Arg6108_3 = Arg6108[3], Arg6108_4 = Arg6108[4], Arg6108_5 = Arg6108[5], Arg6108_6 = Arg6108[6], Arg6108_7 = Arg6108[7], Arg6108_8 = Arg6108[8], Arg6108_9 = Arg6108[9], Arg6108_10 = Arg6108[10], Arg6108_11 = Arg6108[11], Arg6108_12 = Arg6108[12], Arg6108_13 = Arg6108[13], Arg6108_14 = Arg6108[14], Arg6108_15 = Arg6108[15], Arg6108_16 = Arg6108[16], Arg6108_17 = Arg6108[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6108_2, Arg6108_1, Arg6108_8, (new Shen.Freeze([Arg6108_1, Arg6108_2, Arg6108_3, Arg6108_4, Arg6108_5, Arg6108_6, Arg6108_7, Arg6108_8, Arg6108_9], function(Arg6110) {
  var Arg6110_0 = Arg6110[0], Arg6110_1 = Arg6110[1], Arg6110_2 = Arg6110[2], Arg6110_3 = Arg6110[3], Arg6110_4 = Arg6110[4], Arg6110_5 = Arg6110[5], Arg6110_6 = Arg6110[6], Arg6110_7 = Arg6110[7], Arg6110_8 = Arg6110[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6110_1, Arg6110_7])]), Arg6110_7, (new Shen.Freeze([Arg6110_1, Arg6110_2, Arg6110_3, Arg6110_4, Arg6110_5, Arg6110_6, Arg6110_7, Arg6110_8], function(Arg6112) {
  var Arg6112_0 = Arg6112[0], Arg6112_1 = Arg6112[1], Arg6112_2 = Arg6112[2], Arg6112_3 = Arg6112[3], Arg6112_4 = Arg6112[4], Arg6112_5 = Arg6112[5], Arg6112_6 = Arg6112[6], Arg6112_7 = Arg6112[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6112_1, Arg6112_6, (new Shen.Freeze([Arg6112_1, Arg6112_2, Arg6112_3, Arg6112_4, Arg6112_5, Arg6112_6, Arg6112_7], function(Arg6114) {
  var Arg6114_0 = Arg6114[0], Arg6114_1 = Arg6114[1], Arg6114_2 = Arg6114[2], Arg6114_3 = Arg6114[3], Arg6114_4 = Arg6114[4], Arg6114_5 = Arg6114[5], Arg6114_6 = Arg6114[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6114_1, Arg6114_2, Arg6114_3, Arg6114_4, Arg6114_5, Arg6114_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6084_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, ":"], Arg6084_4]),
  ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6084_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R7 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6084_4])),
  ((Shen.empty$question$(R4))
  ? ((R4 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6084_3, R7, Arg6084_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6084_1, R4, Arg6084_3, Arg6084_4, Arg6084_5, R6, Arg6084_4, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6116) {
  var Arg6116_0 = Arg6116[0], Arg6116_1 = Arg6116[1], Arg6116_2 = Arg6116[2], Arg6116_3 = Arg6116[3], Arg6116_4 = Arg6116[4], Arg6116_5 = Arg6116[5], Arg6116_6 = Arg6116[6], Arg6116_7 = Arg6116[7], Arg6116_8 = Arg6116[8], Arg6116_9 = Arg6116[9], Arg6116_10 = Arg6116[10], Arg6116_11 = Arg6116[11], Arg6116_12 = Arg6116[12], Arg6116_13 = Arg6116[13], Arg6116_14 = Arg6116[14], Arg6116_15 = Arg6116[15], Arg6116_16 = Arg6116[16], Arg6116_17 = Arg6116[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6116_2, Arg6116_1, Arg6116_8, (new Shen.Freeze([Arg6116_1, Arg6116_2, Arg6116_3, Arg6116_4, Arg6116_5, Arg6116_6, Arg6116_7, Arg6116_8, Arg6116_9], function(Arg6118) {
  var Arg6118_0 = Arg6118[0], Arg6118_1 = Arg6118[1], Arg6118_2 = Arg6118[2], Arg6118_3 = Arg6118[3], Arg6118_4 = Arg6118[4], Arg6118_5 = Arg6118[5], Arg6118_6 = Arg6118[6], Arg6118_7 = Arg6118[7], Arg6118_8 = Arg6118[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6118_1, Arg6118_7])]), Arg6118_7, (new Shen.Freeze([Arg6118_1, Arg6118_2, Arg6118_3, Arg6118_4, Arg6118_5, Arg6118_6, Arg6118_7, Arg6118_8], function(Arg6120) {
  var Arg6120_0 = Arg6120[0], Arg6120_1 = Arg6120[1], Arg6120_2 = Arg6120[2], Arg6120_3 = Arg6120[3], Arg6120_4 = Arg6120[4], Arg6120_5 = Arg6120[5], Arg6120_6 = Arg6120[6], Arg6120_7 = Arg6120[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6120_1, Arg6120_6, (new Shen.Freeze([Arg6120_1, Arg6120_2, Arg6120_3, Arg6120_4, Arg6120_5, Arg6120_6, Arg6120_7], function(Arg6122) {
  var Arg6122_0 = Arg6122[0], Arg6122_1 = Arg6122[1], Arg6122_2 = Arg6122[2], Arg6122_3 = Arg6122[3], Arg6122_4 = Arg6122[4], Arg6122_5 = Arg6122[5], Arg6122_6 = Arg6122[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6122_1, Arg6122_2, Arg6122_3, Arg6122_4, Arg6122_5, Arg6122_6]);});})}))]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6084_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6084_3, R7, Arg6084_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6084_1, R3, Arg6084_3, Arg6084_4, Arg6084_5, R4, Arg6084_4, R6, Arg6084_4, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6124) {
  var Arg6124_0 = Arg6124[0], Arg6124_1 = Arg6124[1], Arg6124_2 = Arg6124[2], Arg6124_3 = Arg6124[3], Arg6124_4 = Arg6124[4], Arg6124_5 = Arg6124[5], Arg6124_6 = Arg6124[6], Arg6124_7 = Arg6124[7], Arg6124_8 = Arg6124[8], Arg6124_9 = Arg6124[9], Arg6124_10 = Arg6124[10], Arg6124_11 = Arg6124[11], Arg6124_12 = Arg6124[12], Arg6124_13 = Arg6124[13], Arg6124_14 = Arg6124[14], Arg6124_15 = Arg6124[15], Arg6124_16 = Arg6124[16], Arg6124_17 = Arg6124[17], Arg6124_18 = Arg6124[18], Arg6124_19 = Arg6124[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6124_2, Arg6124_1, Arg6124_8, (new Shen.Freeze([Arg6124_1, Arg6124_2, Arg6124_3, Arg6124_4, Arg6124_5, Arg6124_6, Arg6124_7, Arg6124_8, Arg6124_9], function(Arg6126) {
  var Arg6126_0 = Arg6126[0], Arg6126_1 = Arg6126[1], Arg6126_2 = Arg6126[2], Arg6126_3 = Arg6126[3], Arg6126_4 = Arg6126[4], Arg6126_5 = Arg6126[5], Arg6126_6 = Arg6126[6], Arg6126_7 = Arg6126[7], Arg6126_8 = Arg6126[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6126_1, Arg6126_7])]), Arg6126_7, (new Shen.Freeze([Arg6126_1, Arg6126_2, Arg6126_3, Arg6126_4, Arg6126_5, Arg6126_6, Arg6126_7, Arg6126_8], function(Arg6128) {
  var Arg6128_0 = Arg6128[0], Arg6128_1 = Arg6128[1], Arg6128_2 = Arg6128[2], Arg6128_3 = Arg6128[3], Arg6128_4 = Arg6128[4], Arg6128_5 = Arg6128[5], Arg6128_6 = Arg6128[6], Arg6128_7 = Arg6128[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6128_1, Arg6128_6, (new Shen.Freeze([Arg6128_1, Arg6128_2, Arg6128_3, Arg6128_4, Arg6128_5, Arg6128_6, Arg6128_7], function(Arg6130) {
  var Arg6130_0 = Arg6130[0], Arg6130_1 = Arg6130[1], Arg6130_2 = Arg6130[2], Arg6130_3 = Arg6130[3], Arg6130_4 = Arg6130[4], Arg6130_5 = Arg6130[5], Arg6130_6 = Arg6130[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6130_1, Arg6130_2, Arg6130_3, Arg6130_4, Arg6130_5, Arg6130_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6084_4]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R7, []], Arg6084_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6084_3, R7, Arg6084_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6084_1, R3, Arg6084_3, Arg6084_4, Arg6084_5, R4, Arg6084_4, R6, Arg6084_4, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6132) {
  var Arg6132_0 = Arg6132[0], Arg6132_1 = Arg6132[1], Arg6132_2 = Arg6132[2], Arg6132_3 = Arg6132[3], Arg6132_4 = Arg6132[4], Arg6132_5 = Arg6132[5], Arg6132_6 = Arg6132[6], Arg6132_7 = Arg6132[7], Arg6132_8 = Arg6132[8], Arg6132_9 = Arg6132[9], Arg6132_10 = Arg6132[10], Arg6132_11 = Arg6132[11], Arg6132_12 = Arg6132[12], Arg6132_13 = Arg6132[13], Arg6132_14 = Arg6132[14], Arg6132_15 = Arg6132[15], Arg6132_16 = Arg6132[16], Arg6132_17 = Arg6132[17], Arg6132_18 = Arg6132[18], Arg6132_19 = Arg6132[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6132_2, Arg6132_1, Arg6132_8, (new Shen.Freeze([Arg6132_1, Arg6132_2, Arg6132_3, Arg6132_4, Arg6132_5, Arg6132_6, Arg6132_7, Arg6132_8, Arg6132_9], function(Arg6134) {
  var Arg6134_0 = Arg6134[0], Arg6134_1 = Arg6134[1], Arg6134_2 = Arg6134[2], Arg6134_3 = Arg6134[3], Arg6134_4 = Arg6134[4], Arg6134_5 = Arg6134[5], Arg6134_6 = Arg6134[6], Arg6134_7 = Arg6134[7], Arg6134_8 = Arg6134[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6134_1, Arg6134_7])]), Arg6134_7, (new Shen.Freeze([Arg6134_1, Arg6134_2, Arg6134_3, Arg6134_4, Arg6134_5, Arg6134_6, Arg6134_7, Arg6134_8], function(Arg6136) {
  var Arg6136_0 = Arg6136[0], Arg6136_1 = Arg6136[1], Arg6136_2 = Arg6136[2], Arg6136_3 = Arg6136[3], Arg6136_4 = Arg6136[4], Arg6136_5 = Arg6136[5], Arg6136_6 = Arg6136[6], Arg6136_7 = Arg6136[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6136_1, Arg6136_6, (new Shen.Freeze([Arg6136_1, Arg6136_2, Arg6136_3, Arg6136_4, Arg6136_5, Arg6136_6, Arg6136_7], function(Arg6138) {
  var Arg6138_0 = Arg6138[0], Arg6138_1 = Arg6138[1], Arg6138_2 = Arg6138[2], Arg6138_3 = Arg6138[3], Arg6138_4 = Arg6138[4], Arg6138_5 = Arg6138[5], Arg6138_6 = Arg6138[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6138_1, Arg6138_2, Arg6138_3, Arg6138_4, Arg6138_5, Arg6138_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6084_4]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6084_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]], Arg6084_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6084_3, R6, Arg6084_4, (new Shen.Freeze([R6, R2, R5, R0, R1, Arg6084_1, R3, Arg6084_3, Arg6084_4, Arg6084_5, R4, Arg6084_4, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6140) {
  var Arg6140_0 = Arg6140[0], Arg6140_1 = Arg6140[1], Arg6140_2 = Arg6140[2], Arg6140_3 = Arg6140[3], Arg6140_4 = Arg6140[4], Arg6140_5 = Arg6140[5], Arg6140_6 = Arg6140[6], Arg6140_7 = Arg6140[7], Arg6140_8 = Arg6140[8], Arg6140_9 = Arg6140[9], Arg6140_10 = Arg6140[10], Arg6140_11 = Arg6140[11], Arg6140_12 = Arg6140[12], Arg6140_13 = Arg6140[13], Arg6140_14 = Arg6140[14], Arg6140_15 = Arg6140[15], Arg6140_16 = Arg6140[16], Arg6140_17 = Arg6140[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6140_2, Arg6140_1, Arg6140_8, (new Shen.Freeze([Arg6140_1, Arg6140_2, Arg6140_3, Arg6140_4, Arg6140_5, Arg6140_6, Arg6140_7, Arg6140_8, Arg6140_9], function(Arg6142) {
  var Arg6142_0 = Arg6142[0], Arg6142_1 = Arg6142[1], Arg6142_2 = Arg6142[2], Arg6142_3 = Arg6142[3], Arg6142_4 = Arg6142[4], Arg6142_5 = Arg6142[5], Arg6142_6 = Arg6142[6], Arg6142_7 = Arg6142[7], Arg6142_8 = Arg6142[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6142_1, Arg6142_7])]), Arg6142_7, (new Shen.Freeze([Arg6142_1, Arg6142_2, Arg6142_3, Arg6142_4, Arg6142_5, Arg6142_6, Arg6142_7, Arg6142_8], function(Arg6144) {
  var Arg6144_0 = Arg6144[0], Arg6144_1 = Arg6144[1], Arg6144_2 = Arg6144[2], Arg6144_3 = Arg6144[3], Arg6144_4 = Arg6144[4], Arg6144_5 = Arg6144[5], Arg6144_6 = Arg6144[6], Arg6144_7 = Arg6144[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6144_1, Arg6144_6, (new Shen.Freeze([Arg6144_1, Arg6144_2, Arg6144_3, Arg6144_4, Arg6144_5, Arg6144_6, Arg6144_7], function(Arg6146) {
  var Arg6146_0 = Arg6146[0], Arg6146_1 = Arg6146[1], Arg6146_2 = Arg6146[2], Arg6146_3 = Arg6146[3], Arg6146_4 = Arg6146[4], Arg6146_5 = Arg6146[5], Arg6146_6 = Arg6146[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6146_1, Arg6146_2, Arg6146_3, Arg6146_4, Arg6146_5, Arg6146_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6084_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]]], Arg6084_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6084_3, R6, Arg6084_4, (new Shen.Freeze([R6, R2, R5, R0, R1, Arg6084_1, R3, Arg6084_3, Arg6084_4, Arg6084_5, R4, Arg6084_4, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6148) {
  var Arg6148_0 = Arg6148[0], Arg6148_1 = Arg6148[1], Arg6148_2 = Arg6148[2], Arg6148_3 = Arg6148[3], Arg6148_4 = Arg6148[4], Arg6148_5 = Arg6148[5], Arg6148_6 = Arg6148[6], Arg6148_7 = Arg6148[7], Arg6148_8 = Arg6148[8], Arg6148_9 = Arg6148[9], Arg6148_10 = Arg6148[10], Arg6148_11 = Arg6148[11], Arg6148_12 = Arg6148[12], Arg6148_13 = Arg6148[13], Arg6148_14 = Arg6148[14], Arg6148_15 = Arg6148[15], Arg6148_16 = Arg6148[16], Arg6148_17 = Arg6148[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6148_2, Arg6148_1, Arg6148_8, (new Shen.Freeze([Arg6148_1, Arg6148_2, Arg6148_3, Arg6148_4, Arg6148_5, Arg6148_6, Arg6148_7, Arg6148_8, Arg6148_9], function(Arg6150) {
  var Arg6150_0 = Arg6150[0], Arg6150_1 = Arg6150[1], Arg6150_2 = Arg6150[2], Arg6150_3 = Arg6150[3], Arg6150_4 = Arg6150[4], Arg6150_5 = Arg6150[5], Arg6150_6 = Arg6150[6], Arg6150_7 = Arg6150[7], Arg6150_8 = Arg6150[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6150_1, Arg6150_7])]), Arg6150_7, (new Shen.Freeze([Arg6150_1, Arg6150_2, Arg6150_3, Arg6150_4, Arg6150_5, Arg6150_6, Arg6150_7, Arg6150_8], function(Arg6152) {
  var Arg6152_0 = Arg6152[0], Arg6152_1 = Arg6152[1], Arg6152_2 = Arg6152[2], Arg6152_3 = Arg6152[3], Arg6152_4 = Arg6152[4], Arg6152_5 = Arg6152[5], Arg6152_6 = Arg6152[6], Arg6152_7 = Arg6152[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6152_1, Arg6152_6, (new Shen.Freeze([Arg6152_1, Arg6152_2, Arg6152_3, Arg6152_4, Arg6152_5, Arg6152_6, Arg6152_7], function(Arg6154) {
  var Arg6154_0 = Arg6154[0], Arg6154_1 = Arg6154[1], Arg6154_2 = Arg6154[2], Arg6154_3 = Arg6154[3], Arg6154_4 = Arg6154[4], Arg6154_5 = Arg6154[5], Arg6154_6 = Arg6154[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6154_1, Arg6154_2, Arg6154_3, Arg6154_4, Arg6154_5, Arg6154_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6084_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_4])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6084_4])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], R6], Arg6084_4]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6084_3, R5, Arg6084_4, (new Shen.Freeze([R5, R2, R4, R0, R1, Arg6084_1, R6, Arg6084_3, Arg6084_5, R3, Arg6084_4, Arg6084_0, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5], function(Arg6156) {
  var Arg6156_0 = Arg6156[0], Arg6156_1 = Arg6156[1], Arg6156_2 = Arg6156[2], Arg6156_3 = Arg6156[3], Arg6156_4 = Arg6156[4], Arg6156_5 = Arg6156[5], Arg6156_6 = Arg6156[6], Arg6156_7 = Arg6156[7], Arg6156_8 = Arg6156[8], Arg6156_9 = Arg6156[9], Arg6156_10 = Arg6156[10], Arg6156_11 = Arg6156[11], Arg6156_12 = Arg6156[12], Arg6156_13 = Arg6156[13], Arg6156_14 = Arg6156[14], Arg6156_15 = Arg6156[15], Arg6156_16 = Arg6156[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6156_2, Arg6156_1, Arg6156_10, (new Shen.Freeze([Arg6156_1, Arg6156_2, Arg6156_3, Arg6156_4, Arg6156_5, Arg6156_6, Arg6156_7, Arg6156_10, Arg6156_8], function(Arg6158) {
  var Arg6158_0 = Arg6158[0], Arg6158_1 = Arg6158[1], Arg6158_2 = Arg6158[2], Arg6158_3 = Arg6158[3], Arg6158_4 = Arg6158[4], Arg6158_5 = Arg6158[5], Arg6158_6 = Arg6158[6], Arg6158_7 = Arg6158[7], Arg6158_8 = Arg6158[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.placeholder?"], [Shen.call(Shen.fns["shen.deref"], [Arg6158_1, Arg6158_7])]), Arg6158_7, (new Shen.Freeze([Arg6158_1, Arg6158_2, Arg6158_3, Arg6158_4, Arg6158_5, Arg6158_6, Arg6158_7, Arg6158_8], function(Arg6160) {
  var Arg6160_0 = Arg6160[0], Arg6160_1 = Arg6160[1], Arg6160_2 = Arg6160[2], Arg6160_3 = Arg6160[3], Arg6160_4 = Arg6160[4], Arg6160_5 = Arg6160[5], Arg6160_6 = Arg6160[6], Arg6160_7 = Arg6160[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6160_1, Arg6160_6, (new Shen.Freeze([Arg6160_1, Arg6160_2, Arg6160_3, Arg6160_4, Arg6160_5, Arg6160_6, Arg6160_7], function(Arg6162) {
  var Arg6162_0 = Arg6162[0], Arg6162_1 = Arg6162[1], Arg6162_2 = Arg6162[2], Arg6162_3 = Arg6162[3], Arg6162_4 = Arg6162[4], Arg6162_5 = Arg6162[5], Arg6162_6 = Arg6162[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6162_1, Arg6162_2, Arg6162_3, Arg6162_4, Arg6162_5, Arg6162_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6084_4]),
  (R1 = R6))
  : (R1 = false))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6084_0, Arg6084_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.syntax-hyps"], [R1, Arg6084_1, Arg6084_2, Arg6084_3, Arg6084_4, Arg6084_5]))
  : false))
  : R1))
  : R1))
  : R1))]);}))}, 6, [], "shen.syntax-hyps"];





Shen.fns["shen.get-syntax+semantics"] = [Shen.type_func, function shen_user_lambda6165(Arg6164) {
  if (Arg6164.length < 5) return [Shen.type_func, shen_user_lambda6165, 5, Arg6164];
  var Arg6164_0 = Arg6164[0], Arg6164_1 = Arg6164[1], Arg6164_2 = Arg6164[2], Arg6164_3 = Arg6164[3], Arg6164_4 = Arg6164[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_0, Arg6164_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_2, Arg6164_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6164_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6164_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6164_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6164_3, (new Shen.Freeze([R1, R0, Arg6164_0, Arg6164_2, Arg6164_1, Arg6164_4, Arg6164_3], function(Arg6166) {
  var Arg6166_0 = Arg6166[0], Arg6166_1 = Arg6166[1], Arg6166_2 = Arg6166[2], Arg6166_3 = Arg6166[3], Arg6166_4 = Arg6166[4], Arg6166_5 = Arg6166[5], Arg6166_6 = Arg6166[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6166_4, Shen.call(Shen.fns["shen.lazyderef"], [Arg6166_0, Arg6166_6]), Arg6166_6, Arg6166_5]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6164_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_2, Arg6164_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6164_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6164_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6164_3])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["cut"], [R0, Arg6164_3, (new Shen.Freeze([R2, R1, Arg6164_3, R0, Arg6164_0, Arg6164_2, Arg6164_1, Arg6164_4, Arg6164_3], function(Arg6168) {
  var Arg6168_0 = Arg6168[0], Arg6168_1 = Arg6168[1], Arg6168_2 = Arg6168[2], Arg6168_3 = Arg6168[3], Arg6168_4 = Arg6168[4], Arg6168_5 = Arg6168[5], Arg6168_6 = Arg6168[6], Arg6168_7 = Arg6168[7], Arg6168_8 = Arg6168[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6168_6, Shen.call(Shen.fns["shen.lazyderef"], [Arg6168_0, Arg6168_2]), Arg6168_2, Arg6168_7]);});})}))])))
  : (R2 = false)))
  : (R2 = false)))
  : (R2 = false)))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6164_3]),
  (R1 = R2))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_0, Arg6164_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_2, Arg6164_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6164_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6164_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6164_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6164_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6164_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6164_3])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6164_3, (new Shen.Freeze([R0, R2, R1, Arg6164_0, Arg6164_2, Arg6164_1, Arg6164_4, Arg6164_3], function(Arg6170) {
  var Arg6170_0 = Arg6170[0], Arg6170_1 = Arg6170[1], Arg6170_2 = Arg6170[2], Arg6170_3 = Arg6170[3], Arg6170_4 = Arg6170[4], Arg6170_5 = Arg6170[5], Arg6170_6 = Arg6170[6], Arg6170_7 = Arg6170[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6170_5, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6170_1, Arg6170_7]), [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6170_2, Arg6170_7]), []]]], Arg6170_7, Arg6170_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6164_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_2, Arg6164_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6164_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6164_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6164_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6164_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6164_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6164_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["cut"], [R0, Arg6164_3, (new Shen.Freeze([R0, R3, R2, R1, Arg6164_3, Arg6164_0, Arg6164_2, Arg6164_1, Arg6164_4, Arg6164_3], function(Arg6172) {
  var Arg6172_0 = Arg6172[0], Arg6172_1 = Arg6172[1], Arg6172_2 = Arg6172[2], Arg6172_3 = Arg6172[3], Arg6172_4 = Arg6172[4], Arg6172_5 = Arg6172[5], Arg6172_6 = Arg6172[6], Arg6172_7 = Arg6172[7], Arg6172_8 = Arg6172[8], Arg6172_9 = Arg6172[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6172_7, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6172_1, Arg6172_4]), [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6172_2, Arg6172_4]), []]]], Arg6172_4, Arg6172_8]);});})}))])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6164_3]),
  (R1 = R0))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_0, Arg6164_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_2, Arg6164_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["unify!"], [R3, R0, Arg6164_3, (new Shen.Freeze([R3, R0, R1, Arg6164_1, R2, Arg6164_3, Arg6164_4], function(Arg6174) {
  var Arg6174_0 = Arg6174[0], Arg6174_1 = Arg6174[1], Arg6174_2 = Arg6174[2], Arg6174_3 = Arg6174[3], Arg6174_4 = Arg6174[4], Arg6174_5 = Arg6174[5], Arg6174_6 = Arg6174[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-syntax+semantics"], [Arg6174_2, Arg6174_3, Arg6174_4, Arg6174_5, Arg6174_6]);});})}))]))
  : false))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6164_3])),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6164_3])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, R2], Arg6164_3]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6164_2, Arg6164_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["unify!"], [R4, R0, Arg6164_3, (new Shen.Freeze([R4, R0, R2, Arg6164_1, R3, Arg6164_3, Arg6164_4, R1, Arg6164_3], function(Arg6176) {
  var Arg6176_0 = Arg6176[0], Arg6176_1 = Arg6176[1], Arg6176_2 = Arg6176[2], Arg6176_3 = Arg6176[3], Arg6176_4 = Arg6176[4], Arg6176_5 = Arg6176[5], Arg6176_6 = Arg6176[6], Arg6176_7 = Arg6176[7], Arg6176_8 = Arg6176[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-syntax+semantics"], [Arg6176_2, Arg6176_3, Arg6176_4, Arg6176_5, Arg6176_6]);});})}))])))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6164_3]),
  R2)
  : false)))
  : R1))
  : R1))]);}))}, 5, [], "shen.get-syntax+semantics"];





Shen.fns["shen.syntax-check"] = [Shen.type_func, function shen_user_lambda6179(Arg6178) {
  if (Arg6178.length < 5) return [Shen.type_func, shen_user_lambda6179, 5, Arg6178];
  var Arg6178_0 = Arg6178[0], Arg6178_1 = Arg6178[1], Arg6178_2 = Arg6178[2], Arg6178_3 = Arg6178[3], Arg6178_4 = Arg6178[4];
  var R0, R1, R2, R3, R4, R5;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6178_0, Arg6178_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6178_4))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6178_0, Arg6178_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6178_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6178_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6178_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.grammar_symbol?"], [Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6178_3])]), Arg6178_3, (new Shen.Freeze([R3, R2, R4, R5, R0, R1, Arg6178_1, Arg6178_2, Arg6178_3, Arg6178_4, Arg6178_0, R0, Arg6178_1, Arg6178_2, Arg6178_3, Arg6178_4], function(Arg6180) {
  var Arg6180_0 = Arg6180[0], Arg6180_1 = Arg6180[1], Arg6180_2 = Arg6180[2], Arg6180_3 = Arg6180[3], Arg6180_4 = Arg6180[4], Arg6180_5 = Arg6180[5], Arg6180_6 = Arg6180[6], Arg6180_7 = Arg6180[7], Arg6180_8 = Arg6180[8], Arg6180_9 = Arg6180[9], Arg6180_10 = Arg6180[10], Arg6180_11 = Arg6180[11], Arg6180_12 = Arg6180[12], Arg6180_13 = Arg6180[13], Arg6180_14 = Arg6180[14], Arg6180_15 = Arg6180[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6180_4, Arg6180_8, (new Shen.Freeze([Arg6180_0, Arg6180_1, Arg6180_2, Arg6180_3, Arg6180_4, Arg6180_5, Arg6180_6, Arg6180_7, Arg6180_8, Arg6180_9], function(Arg6182) {
  var Arg6182_0 = Arg6182[0], Arg6182_1 = Arg6182[1], Arg6182_2 = Arg6182[2], Arg6182_3 = Arg6182[3], Arg6182_4 = Arg6182[4], Arg6182_5 = Arg6182[5], Arg6182_6 = Arg6182[6], Arg6182_7 = Arg6182[7], Arg6182_8 = Arg6182[8], Arg6182_9 = Arg6182[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6182_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6182_3, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6182_0, []]]], []]]], Arg6182_7, Arg6182_8, (new Shen.Freeze([Arg6182_0, Arg6182_1, Arg6182_2, Arg6182_3, Arg6182_4, Arg6182_5, Arg6182_6, Arg6182_7, Arg6182_8, Arg6182_9], function(Arg6184) {
  var Arg6184_0 = Arg6184[0], Arg6184_1 = Arg6184[1], Arg6184_2 = Arg6184[2], Arg6184_3 = Arg6184[3], Arg6184_4 = Arg6184[4], Arg6184_5 = Arg6184[5], Arg6184_6 = Arg6184[6], Arg6184_7 = Arg6184[7], Arg6184_8 = Arg6184[8], Arg6184_9 = Arg6184[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6184_4, Arg6184_8, (new Shen.Freeze([Arg6184_1, Arg6184_2, Arg6184_3, Arg6184_4, Arg6184_5, Arg6184_6, Arg6184_7, Arg6184_8, Arg6184_9], function(Arg6186) {
  var Arg6186_0 = Arg6186[0], Arg6186_1 = Arg6186[1], Arg6186_2 = Arg6186[2], Arg6186_3 = Arg6186[3], Arg6186_4 = Arg6186[4], Arg6186_5 = Arg6186[5], Arg6186_6 = Arg6186[6], Arg6186_7 = Arg6186[7], Arg6186_8 = Arg6186[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6186_1, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Shen.call(Shen.fns["shen.lazyderef"], [Arg6186_0, Arg6186_7])]), Arg6186_7, (new Shen.Freeze([Arg6186_0, Arg6186_1, Arg6186_2, Arg6186_3, Arg6186_4, Arg6186_5, Arg6186_6, Arg6186_7, Arg6186_8], function(Arg6188) {
  var Arg6188_0 = Arg6188[0], Arg6188_1 = Arg6188[1], Arg6188_2 = Arg6188[2], Arg6188_3 = Arg6188[3], Arg6188_4 = Arg6188[4], Arg6188_5 = Arg6188[5], Arg6188_6 = Arg6188[6], Arg6188_7 = Arg6188[7], Arg6188_8 = Arg6188[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6188_3, Arg6188_7, (new Shen.Freeze([Arg6188_1, Arg6188_2, Arg6188_3, Arg6188_4, Arg6188_5, Arg6188_6, Arg6188_7, Arg6188_8], function(Arg6190) {
  var Arg6190_0 = Arg6190[0], Arg6190_1 = Arg6190[1], Arg6190_2 = Arg6190[2], Arg6190_3 = Arg6190[3], Arg6190_4 = Arg6190[4], Arg6190_5 = Arg6190[5], Arg6190_6 = Arg6190[6], Arg6190_7 = Arg6190[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6190_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6190_4, []]], []]]], [Shen.type_cons, [Shen.type_cons, Arg6190_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6190_1, []]], []]]], Arg6190_5], Arg6190_6, (new Shen.Freeze([Arg6190_0, Arg6190_1, Arg6190_2, Arg6190_3, Arg6190_4, Arg6190_5, Arg6190_6, Arg6190_7], function(Arg6192) {
  var Arg6192_0 = Arg6192[0], Arg6192_1 = Arg6192[1], Arg6192_2 = Arg6192[2], Arg6192_3 = Arg6192[3], Arg6192_4 = Arg6192[4], Arg6192_5 = Arg6192[5], Arg6192_6 = Arg6192[6], Arg6192_7 = Arg6192[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6192_2, Arg6192_6, (new Shen.Freeze([Arg6192_2, Arg6192_3, Arg6192_4, Arg6192_5, Arg6192_6, Arg6192_7], function(Arg6194) {
  var Arg6194_0 = Arg6194[0], Arg6194_1 = Arg6194[1], Arg6194_2 = Arg6194[2], Arg6194_3 = Arg6194[3], Arg6194_4 = Arg6194[4], Arg6194_5 = Arg6194[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6194_1, Arg6194_2, Arg6194_3, Arg6194_4, Arg6194_5]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6178_0, Arg6178_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, R2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6178_1, []]]], Arg6178_2, Arg6178_3, (new Shen.Freeze([R2, R0, R1, Arg6178_1, Arg6178_2, Arg6178_3, Arg6178_4], function(Arg6196) {
  var Arg6196_0 = Arg6196[0], Arg6196_1 = Arg6196[1], Arg6196_2 = Arg6196[2], Arg6196_3 = Arg6196[3], Arg6196_4 = Arg6196[4], Arg6196_5 = Arg6196[5], Arg6196_6 = Arg6196[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6196_1, Arg6196_5, (new Shen.Freeze([Arg6196_1, Arg6196_2, Arg6196_3, Arg6196_4, Arg6196_5, Arg6196_6], function(Arg6198) {
  var Arg6198_0 = Arg6198[0], Arg6198_1 = Arg6198[1], Arg6198_2 = Arg6198[2], Arg6198_3 = Arg6198[3], Arg6198_4 = Arg6198[4], Arg6198_5 = Arg6198[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6198_1, Arg6198_2, Arg6198_3, Arg6198_4, Arg6198_5]);});})}))]);});})}))]))
  : false))
  : R1))
  : R1))]);}))}, 5, [], "shen.syntax-check"];





Shen.fns["shen.semantics-check"] = [Shen.type_func, function shen_user_lambda6201(Arg6200) {
  if (Arg6200.length < 5) return [Shen.type_func, shen_user_lambda6201, 5, Arg6200];
  var Arg6200_0 = Arg6200[0], Arg6200_1 = Arg6200[1], Arg6200_2 = Arg6200[2], Arg6200_3 = Arg6200[3], Arg6200_4 = Arg6200[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6200_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.rename-semantics"], [Shen.call(Shen.fns["shen.deref"], [Arg6200_0, Arg6200_3])])]), Arg6200_3, (new Shen.Freeze([Arg6200_0, R0, Arg6200_1, Arg6200_2, Arg6200_3, Arg6200_4], function(Arg6202) {
  var Arg6202_0 = Arg6202[0], Arg6202_1 = Arg6202[1], Arg6202_2 = Arg6202[2], Arg6202_3 = Arg6202[3], Arg6202_4 = Arg6202[4], Arg6202_5 = Arg6202[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6202_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6202_2, []]]], Arg6202_3, Arg6202_4, Arg6202_5]);});})}))]);}))}, 5, [], "shen.semantics-check"];





Shen.fns["shen.rename-semantics"] = [Shen.type_func, function shen_user_lambda6205(Arg6204) {
  if (Arg6204.length < 1) return [Shen.type_func, shen_user_lambda6205, 1, Arg6204];
  var Arg6204_0 = Arg6204[0];
  return ((Shen.is_type(Arg6204_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rename-semantics"], [Arg6204_0[1]]), Shen.call(Shen.fns["shen.rename-semantics"], [Arg6204_0[2]])]
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg6204_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.<-sem"], [Shen.type_cons, Arg6204_0, []]]
  : Arg6204_0))}, 1, [], "shen.rename-semantics"];










Shen.fns["shen.shen"] = [Shen.type_func, function shen_user_lambda7201(Arg7200) {
  if (Arg7200.length < 0) return [Shen.type_func, shen_user_lambda7201, 0, Arg7200];
  return (Shen.call(Shen.fns["shen.credits"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.shen"];





Shen.fns["shen.loop"] = [Shen.type_func, function shen_user_lambda7203(Arg7202) {
  if (Arg7202.length < 0) return [Shen.type_func, shen_user_lambda7203, 0, Arg7202];
  return (Shen.call(Shen.fns["shen.initialise_environment"], []),
  Shen.call(Shen.fns["shen.prompt"], []),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen.read-evaluate-print"], []);}, [Shen.type_func, function shen_user_lambda7205(Arg7204) {
  if (Arg7204.length < 1) return [Shen.type_func, shen_user_lambda7205, 1, Arg7204];
  var Arg7204_0 = Arg7204[0];
  return (function() {
  return Shen.pr(Shen.error_to_string(Arg7204_0), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.loop"];





Shen.fns["version"] = [Shen.type_func, function shen_user_lambda7207(Arg7206) {
  if (Arg7206.length < 1) return [Shen.type_func, shen_user_lambda7207, 1, Arg7206];
  var Arg7206_0 = Arg7206[0];
  return (Shen.globals["*version*"] = Arg7206_0)}, 1, [], "version"];





Shen.fns["reg-kl.shen-toplevel-7209"] = [Shen.type_func, function shen_user_lambda7210(Arg7208) {
  if (Arg7208.length < 0) return [Shen.type_func, shen_user_lambda7210, 0, Arg7208];
  return (function() {
  return Shen.call_tail(Shen.fns["version"], ["version 9.1"]);})}, 0, [], "reg-kl.shen-toplevel-7209"];

Shen.call_toplevel("reg-kl.shen-toplevel-7209")





Shen.fns["shen.credits"] = [Shen.type_func, function shen_user_lambda7212(Arg7211) {
  if (Arg7211.length < 0) return [Shen.type_func, shen_user_lambda7212, 0, Arg7211];
  return (Shen.pr("\x0aShen 2010, copyright (C) 2010 Mark Tarver\x0a", Shen.call(Shen.fns["stoutput"], [])),
  Shen.pr(("www.shenlanguage.org, " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*version*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  Shen.pr(("running under " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*language*"]), (", implementation: " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*implementation*"]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])),
  (function() {
  return Shen.pr(("\x0aport " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*port*"]), (" ported by " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*porters*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));}))}, 0, [], "shen.credits"];





Shen.fns["shen.initialise_environment"] = [Shen.type_func, function shen_user_lambda7214(Arg7213) {
  if (Arg7213.length < 0) return [Shen.type_func, shen_user_lambda7214, 0, Arg7213];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [[Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*infs*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*process-counter*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*catch*"], [Shen.type_cons, 0, []]]]]]]]]]);})}, 0, [], "shen.initialise_environment"];





Shen.fns["shen.multiple-set"] = [Shen.type_func, function shen_user_lambda7216(Arg7215) {
  if (Arg7215.length < 1) return [Shen.type_func, shen_user_lambda7216, 1, Arg7215];
  var Arg7215_0 = Arg7215[0];
  return ((Shen.empty$question$(Arg7215_0))
  ? []
  : (((Shen.is_type(Arg7215_0, Shen.type_cons) && Shen.is_type(Arg7215_0[2], Shen.type_cons)))
  ? ((Shen.globals[Arg7215_0[1][1]] = Arg7215_0[2][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [Arg7215_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiple-set"]]);})))}, 1, [], "shen.multiple-set"];





Shen.fns["destroy"] = [Shen.type_func, function shen_user_lambda7218(Arg7217) {
  if (Arg7217.length < 1) return [Shen.type_func, shen_user_lambda7218, 1, Arg7217];
  var Arg7217_0 = Arg7217[0];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg7217_0, []]);})}, 1, [], "destroy"];





Shen.fns["reg-kl.shen-toplevel-7220"] = [Shen.type_func, function shen_user_lambda7221(Arg7219) {
  if (Arg7219.length < 0) return [Shen.type_func, shen_user_lambda7221, 0, Arg7219];
  return (Shen.globals["shen.*history*"] = [])}, 0, [], "reg-kl.shen-toplevel-7220"];

Shen.call_toplevel("reg-kl.shen-toplevel-7220")





Shen.fns["shen.read-evaluate-print"] = [Shen.type_func, function shen_user_lambda7223(Arg7222) {
  if (Arg7222.length < 0) return [Shen.type_func, shen_user_lambda7223, 0, Arg7222];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.toplineread"], [])),
  (R1 = (Shen.globals["shen.*history*"])),
  (R0 = Shen.call(Shen.fns["shen.retrieve-from-history-if-needed"], [R0, R1])),
  Shen.call(Shen.fns["shen.update_history"], [R0, R1]),
  (R1 = Shen.call(Shen.fns["fst"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel"], [R1]);}))}, 0, [], "shen.read-evaluate-print"];





Shen.fns["shen.retrieve-from-history-if-needed"] = [Shen.type_func, function shen_user_lambda7225(Arg7224) {
  if (Arg7224.length < 2) return [Shen.type_func, shen_user_lambda7225, 2, Arg7224];
  var Arg7224_0 = Arg7224[0], Arg7224_1 = Arg7224[1];
  var R0;
  return (((Shen.is_type(Arg7224_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7224_0]), Shen.type_cons) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7224_0])[2], Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg7224_0])[2][2]) && (Shen.is_type(Arg7224_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7224_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7224_0])[2][1], Shen.call(Shen.fns["shen.exclamation"], []))))))))))
  ? (Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg7224_1[1]])]),
  Arg7224_1[1])
  : (((Shen.is_type(Arg7224_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7224_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7224_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg7224_0])[2], Arg7224_1])),
  (R0 = Shen.call(Shen.fns["head"], [Shen.call(Shen.fns["shen.find-past-inputs"], [R0, Arg7224_1])])),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [R0])]),
  R0)
  : (((Shen.is_type(Arg7224_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7224_0]), Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg7224_0])[2]) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7224_0])[1], Shen.call(Shen.fns["shen.percent"], [])))))))
  ? (Shen.call(Shen.fns["shen.print-past-inputs"], [[Shen.type_func, function shen_user_lambda7227(Arg7226) {
  if (Arg7226.length < 1) return [Shen.type_func, shen_user_lambda7227, 1, Arg7226];
  var Arg7226_0 = Arg7226[0];
  return true}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg7224_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : (((Shen.is_type(Arg7224_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7224_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7224_0])[1], Shen.call(Shen.fns["shen.percent"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg7224_0])[2], Arg7224_1])),
  Shen.call(Shen.fns["shen.print-past-inputs"], [R0, Shen.call(Shen.fns["reverse"], [Arg7224_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : Arg7224_0))))}, 2, [], "shen.retrieve-from-history-if-needed"];





Shen.fns["shen.percent"] = [Shen.type_func, function shen_user_lambda7229(Arg7228) {
  if (Arg7228.length < 0) return [Shen.type_func, shen_user_lambda7229, 0, Arg7228];
  return 37}, 0, [], "shen.percent"];





Shen.fns["shen.exclamation"] = [Shen.type_func, function shen_user_lambda7231(Arg7230) {
  if (Arg7230.length < 0) return [Shen.type_func, shen_user_lambda7231, 0, Arg7230];
  return 33}, 0, [], "shen.exclamation"];





Shen.fns["shen.prbytes"] = [Shen.type_func, function shen_user_lambda7233(Arg7232) {
  if (Arg7232.length < 1) return [Shen.type_func, shen_user_lambda7233, 1, Arg7232];
  var Arg7232_0 = Arg7232[0];
  return (Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7235(Arg7234) {
  if (Arg7234.length < 1) return [Shen.type_func, shen_user_lambda7235, 1, Arg7234];
  var Arg7234_0 = Arg7234[0];
  return (function() {
  return Shen.pr(Shen.n_$gt$string(Arg7234_0), Shen.call(Shen.fns["stoutput"], []));})}, 1, [], undefined], Arg7232_0]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 1, [], "shen.prbytes"];





Shen.fns["shen.update_history"] = [Shen.type_func, function shen_user_lambda7237(Arg7236) {
  if (Arg7236.length < 2) return [Shen.type_func, shen_user_lambda7237, 2, Arg7236];
  var Arg7236_0 = Arg7236[0], Arg7236_1 = Arg7236[1];
  return (Shen.globals["shen.*history*"] = [Shen.type_cons, Arg7236_0, Arg7236_1])}, 2, [], "shen.update_history"];





Shen.fns["shen.toplineread"] = [Shen.type_func, function shen_user_lambda7239(Arg7238) {
  if (Arg7238.length < 0) return [Shen.type_func, shen_user_lambda7239, 0, Arg7238];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), []]);})}, 0, [], "shen.toplineread"];





Shen.fns["shen.toplineread_loop"] = [Shen.type_func, function shen_user_lambda7241(Arg7240) {
  if (Arg7240.length < 2) return [Shen.type_func, shen_user_lambda7241, 2, Arg7240];
  var Arg7240_0 = Arg7240[0], Arg7240_1 = Arg7240[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7240_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg7240_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg7240_1, [Shen.type_func, function shen_user_lambda7243(Arg7242) {
  if (Arg7242.length < 1) return [Shen.type_func, shen_user_lambda7243, 1, Arg7242];
  var Arg7242_0 = Arg7242[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg7240_1, [Shen.type_cons, Arg7240_0, []]])]);})
  : [Shen.fns['shen.tuple'], R0, Arg7240_1]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg7240_1, [Shen.type_cons, Arg7240_0, []]])]);})))}, 2, [], "shen.toplineread_loop"];





Shen.fns["shen.hat"] = [Shen.type_func, function shen_user_lambda7245(Arg7244) {
  if (Arg7244.length < 0) return [Shen.type_func, shen_user_lambda7245, 0, Arg7244];
  return 94}, 0, [], "shen.hat"];





Shen.fns["shen.newline"] = [Shen.type_func, function shen_user_lambda7247(Arg7246) {
  if (Arg7246.length < 0) return [Shen.type_func, shen_user_lambda7247, 0, Arg7246];
  return 10}, 0, [], "shen.newline"];





Shen.fns["shen.carriage-return"] = [Shen.type_func, function shen_user_lambda7249(Arg7248) {
  if (Arg7248.length < 0) return [Shen.type_func, shen_user_lambda7249, 0, Arg7248];
  return 13}, 0, [], "shen.carriage-return"];





Shen.fns["tc"] = [Shen.type_func, function shen_user_lambda7251(Arg7250) {
  if (Arg7250.length < 1) return [Shen.type_func, shen_user_lambda7251, 1, Arg7250];
  var Arg7250_0 = Arg7250[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7250_0)))
  ? (Shen.globals["shen.*tc*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7250_0)))
  ? (Shen.globals["shen.*tc*"] = false)
  : (function() {
  return Shen.simple_error("tc expects a + or -");})))}, 1, [], "tc"];





Shen.fns["shen.prompt"] = [Shen.type_func, function shen_user_lambda7253(Arg7252) {
  if (Arg7252.length < 0) return [Shen.type_func, shen_user_lambda7253, 0, Arg7252];
  return (((Shen.globals["shen.*tc*"]))
  ? (function() {
  return Shen.pr(("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "+) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));})
  : (function() {
  return Shen.pr(("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "-) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], []));}))}, 0, [], "shen.prompt"];





Shen.fns["shen.toplevel"] = [Shen.type_func, function shen_user_lambda7255(Arg7254) {
  if (Arg7254.length < 1) return [Shen.type_func, shen_user_lambda7255, 1, Arg7254];
  var Arg7254_0 = Arg7254[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg7254_0, (Shen.globals["shen.*tc*"])]);})}, 1, [], "shen.toplevel"];





Shen.fns["shen.find-past-inputs"] = [Shen.type_func, function shen_user_lambda7257(Arg7256) {
  if (Arg7256.length < 2) return [Shen.type_func, shen_user_lambda7257, 2, Arg7256];
  var Arg7256_0 = Arg7256[0], Arg7256_1 = Arg7256[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.find"], [Arg7256_0, Arg7256_1])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("input not found\x0a");})
  : R0))}, 2, [], "shen.find-past-inputs"];





Shen.fns["shen.make-key"] = [Shen.type_func, function shen_user_lambda7259(Arg7258) {
  if (Arg7258.length < 2) return [Shen.type_func, shen_user_lambda7259, 2, Arg7258];
  var Arg7258_0 = Arg7258[0], Arg7258_1 = Arg7258[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg7258_0, [Shen.type_func, function shen_user_lambda7261(Arg7260) {
  if (Arg7260.length < 1) return [Shen.type_func, shen_user_lambda7261, 1, Arg7260];
  var Arg7260_0 = Arg7260[0];
  return ((Shen.is_type(Arg7260_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg7260_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]])[1]),
  ((Shen.call(Shen.fns["integer?"], [R0]))
  ? [Shen.type_func, function shen_user_lambda7263(Arg7262) {
  if (Arg7262.length < 3) return [Shen.type_func, shen_user_lambda7263, 3, Arg7262];
  var Arg7262_0 = Arg7262[0], Arg7262_1 = Arg7262[1], Arg7262_2 = Arg7262[2];
  return Shen.$eq$(Arg7262_2, Shen.call(Shen.fns["nth"], [(Arg7262_0 + 1), Shen.call(Shen.fns["reverse"], [Arg7262_1])]))}, 3, [R0, Arg7258_1], undefined]
  : [Shen.type_func, function shen_user_lambda7265(Arg7264) {
  if (Arg7264.length < 2) return [Shen.type_func, shen_user_lambda7265, 2, Arg7264];
  var Arg7264_0 = Arg7264[0], Arg7264_1 = Arg7264[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg7264_0, Shen.call(Shen.fns["shen.trim-gubbins"], [Shen.call(Shen.fns["snd"], [Arg7264_1])])]);})}, 2, [Arg7258_0], undefined]))}, 2, [], "shen.make-key"];





Shen.fns["shen.trim-gubbins"] = [Shen.type_func, function shen_user_lambda7267(Arg7266) {
  if (Arg7266.length < 1) return [Shen.type_func, shen_user_lambda7267, 1, Arg7266];
  var Arg7266_0 = Arg7266[0];
  return (((Shen.is_type(Arg7266_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7266_0[1], Shen.call(Shen.fns["shen.space"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7266_0[2]]);})
  : (((Shen.is_type(Arg7266_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7266_0[1], Shen.call(Shen.fns["shen.newline"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7266_0[2]]);})
  : (((Shen.is_type(Arg7266_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7266_0[1], Shen.call(Shen.fns["shen.carriage-return"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7266_0[2]]);})
  : (((Shen.is_type(Arg7266_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7266_0[1], Shen.call(Shen.fns["shen.tab"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7266_0[2]]);})
  : (((Shen.is_type(Arg7266_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7266_0[1], Shen.call(Shen.fns["shen.left-round"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7266_0[2]]);})
  : Arg7266_0)))))}, 1, [], "shen.trim-gubbins"];





Shen.fns["shen.space"] = [Shen.type_func, function shen_user_lambda7269(Arg7268) {
  if (Arg7268.length < 0) return [Shen.type_func, shen_user_lambda7269, 0, Arg7268];
  return 32}, 0, [], "shen.space"];





Shen.fns["shen.tab"] = [Shen.type_func, function shen_user_lambda7271(Arg7270) {
  if (Arg7270.length < 0) return [Shen.type_func, shen_user_lambda7271, 0, Arg7270];
  return 9}, 0, [], "shen.tab"];





Shen.fns["shen.left-round"] = [Shen.type_func, function shen_user_lambda7273(Arg7272) {
  if (Arg7272.length < 0) return [Shen.type_func, shen_user_lambda7273, 0, Arg7272];
  return 40}, 0, [], "shen.left-round"];





Shen.fns["shen.find"] = [Shen.type_func, function shen_user_lambda7275(Arg7274) {
  if (Arg7274.length < 2) return [Shen.type_func, shen_user_lambda7275, 2, Arg7274];
  var Arg7274_0 = Arg7274[0], Arg7274_1 = Arg7274[1];
  return ((Shen.empty$question$(Arg7274_1))
  ? []
  : (((Shen.is_type(Arg7274_1, Shen.type_cons) && Shen.call(Arg7274_0, [Arg7274_1[1]])))
  ? [Shen.type_cons, Arg7274_1[1], Shen.call(Shen.fns["shen.find"], [Arg7274_0, Arg7274_1[2]])]
  : ((Shen.is_type(Arg7274_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.find"], [Arg7274_0, Arg7274_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.find"]]);}))))}, 2, [], "shen.find"];





Shen.fns["shen.prefix?"] = [Shen.type_func, function shen_user_lambda7277(Arg7276) {
  if (Arg7276.length < 2) return [Shen.type_func, shen_user_lambda7277, 2, Arg7276];
  var Arg7276_0 = Arg7276[0], Arg7276_1 = Arg7276[1];
  return ((Shen.empty$question$(Arg7276_0))
  ? true
  : (((Shen.is_type(Arg7276_0, Shen.type_cons) && (Shen.is_type(Arg7276_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7276_1[1], Arg7276_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg7276_0[2], Arg7276_1[2]]);})
  : false))}, 2, [], "shen.prefix?"];





Shen.fns["shen.print-past-inputs"] = [Shen.type_func, function shen_user_lambda7279(Arg7278) {
  if (Arg7278.length < 3) return [Shen.type_func, shen_user_lambda7279, 3, Arg7278];
  var Arg7278_0 = Arg7278[0], Arg7278_1 = Arg7278[1], Arg7278_2 = Arg7278[2];
  return ((Shen.empty$question$(Arg7278_1))
  ? [Shen.type_symbol, "_"]
  : (((Shen.is_type(Arg7278_1, Shen.type_cons) && (!Shen.call(Arg7278_0, [Arg7278_1[1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg7278_0, Arg7278_1[2], (Arg7278_2 + 1)]);})
  : (((Shen.is_type(Arg7278_1, Shen.type_cons) && Shen.is_type(Arg7278_1[1], Shen.fns['shen.tuple'])))
  ? (Shen.pr(Shen.call(Shen.fns["shen.app"], [Arg7278_2, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg7278_1[1]])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg7278_0, Arg7278_1[2], (Arg7278_2 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.print-past-inputs"]]);}))))}, 3, [], "shen.print-past-inputs"];





Shen.fns["shen.toplevel_evaluate"] = [Shen.type_func, function shen_user_lambda7281(Arg7280) {
  if (Arg7280.length < 2) return [Shen.type_func, shen_user_lambda7281, 2, Arg7280];
  var Arg7280_0 = Arg7280[0], Arg7280_1 = Arg7280[1];
  var R0;
  return (((Shen.is_type(Arg7280_0, Shen.type_cons) && (Shen.is_type(Arg7280_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg7280_0[2][1])) && (Shen.is_type(Arg7280_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7280_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7280_1))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg7280_0[1], Arg7280_0[2][2][1]]);})
  : (((Shen.is_type(Arg7280_0, Shen.type_cons) && Shen.is_type(Arg7280_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.toplevel_evaluate"], [[Shen.type_cons, Arg7280_0[1], []], Arg7280_1]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg7280_0[2], Arg7280_1]);}))
  : (((Shen.is_type(Arg7280_0, Shen.type_cons) && (Shen.empty$question$(Arg7280_0[2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7280_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg7280_0[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);})
  : (((Shen.is_type(Arg7280_0, Shen.type_cons) && (Shen.empty$question$(Arg7280_0[2]) && Shen.unwind_tail(Shen.$eq$(false, Arg7280_1)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7280_0[1]])),
  (function() {
  return Shen.call_tail(Shen.fns["print"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.toplevel_evaluate"]]);})))))}, 2, [], "shen.toplevel_evaluate"];





Shen.fns["shen.typecheck-and-evaluate"] = [Shen.type_func, function shen_user_lambda7283(Arg7282) {
  if (Arg7282.length < 2) return [Shen.type_func, shen_user_lambda7283, 2, Arg7282];
  var Arg7282_0 = Arg7282[0], Arg7282_1 = Arg7282[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg7282_0, Arg7282_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (function() {
  return Shen.simple_error("type error\x0a");})
  : ((R1 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7282_0])),
  (R0 = Shen.call(Shen.fns["shen.pretty-type"], [R0])),
  (function() {
  return Shen.pr(Shen.call(Shen.fns["shen.app"], [R1, (" : " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], []));}))))}, 2, [], "shen.typecheck-and-evaluate"];





Shen.fns["shen.pretty-type"] = [Shen.type_func, function shen_user_lambda7285(Arg7284) {
  if (Arg7284.length < 1) return [Shen.type_func, shen_user_lambda7285, 1, Arg7284];
  var Arg7284_0 = Arg7284[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [(Shen.globals["shen.*alphabet*"]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg7284_0]), Arg7284_0]);})}, 1, [], "shen.pretty-type"];





Shen.fns["shen.extract-pvars"] = [Shen.type_func, function shen_user_lambda7287(Arg7286) {
  if (Arg7286.length < 1) return [Shen.type_func, shen_user_lambda7287, 1, Arg7286];
  var Arg7286_0 = Arg7286[0];
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg7286_0]))
  ? [Shen.type_cons, Arg7286_0, []]
  : ((Shen.is_type(Arg7286_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract-pvars"], [Arg7286_0[1]]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg7286_0[2]])]);})
  : []))}, 1, [], "shen.extract-pvars"];





Shen.fns["shen.mult_subst"] = [Shen.type_func, function shen_user_lambda7289(Arg7288) {
  if (Arg7288.length < 3) return [Shen.type_func, shen_user_lambda7289, 3, Arg7288];
  var Arg7288_0 = Arg7288[0], Arg7288_1 = Arg7288[1], Arg7288_2 = Arg7288[2];
  return ((Shen.empty$question$(Arg7288_0))
  ? Arg7288_2
  : ((Shen.empty$question$(Arg7288_1))
  ? Arg7288_2
  : (((Shen.is_type(Arg7288_0, Shen.type_cons) && Shen.is_type(Arg7288_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [Arg7288_0[2], Arg7288_1[2], Shen.call(Shen.fns["subst"], [Arg7288_0[1], Arg7288_1[1], Arg7288_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mult_subst"]]);}))))}, 3, [], "shen.mult_subst"];



