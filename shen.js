/*
The License
-----------
The user is free to produce commercial applications with the software, to
distribute these applications in source or binary form, and to charge monies
for them as he sees fit and in concordance with the laws of the land subject
to the following license.

1. The license applies to all the software and all derived software and must
   appear on such.

2. It is illegal to distribute the software without this license attached to
   it and use of the software implies agreement with the license as such. It
   is illegal for anyone who is not the copyright holder to tamper with or
   change the license.

3. Neither the names of Lambda Associates or the copyright holder may be used
   to endorse or promote products built using the software without specific
   prior written permission from the copyright holder.

4. That possession of this license does not confer on the copyright holder any
   special contractual obligation towards the user. That in no event shall the
   copyright holder be liable for any direct, indirect, incidental, special,
   exemplary or consequential damages (including but not limited to
   procurement of substitute goods or services, loss of use, data, or profits;
   or business interruption), however caused and on any theory of liability,
   whether in contract, strict liability or tort (including negligence)
   arising in any way out of the use of the software, even if advised of the
   possibility of such damage.

5. It is permitted for the user to change the software, for the purpose of
   improving performance, correcting an error, or porting to a new platform,
   and distribute the modified version of Shen (hereafter the modified
   version) provided the resulting program conforms in all respects to the
   Shen standard and is issued under that title. The user must make it clear
   with his distribution that he/she is the author of the changes and what
   these changes are and why.

6. Derived versions of this software in whatever form are subject to the same
   restrictions. In particular it is not permitted to make derived copies of
   this software which do not conform to the Shen standard or appear under a
   different title.

7. It is permitted to distribute versions of Shen which incorporate libraries,
   graphics or other facilities which are not part of the Shen standard.

For an explication of this license see
[http://www.lambdassociates.org/News/june11/license.htm] which explains this
license in full.
*/

Shen = {}

Shen.globals = {}

Shen.globals["*language*"] = "Javascript"
Shen.globals["*implementation*"] = "cli"
Shen.globals["*port*"] = Shen.version = "13.0.2"
Shen.globals["*porters*"] = Shen.author = "Ramil Farkhshatov"

Shen.Tag = function(name) {
  this.toString = function() {
    return "#<Shen.Tag " + name + ">"
  }
}

Shen.fail_obj = new Shen.Tag('fail_obj')
Shen.fns = {}

Shen.type_func = new Shen.Tag('func')
Shen.type_symbol = new Shen.Tag('sym')
Shen.type_cons = new Shen.Tag('cons')
Shen.type_stream_in = new Shen.Tag('stream_in')
Shen.type_stream_out = new Shen.Tag('stream_out')
Shen.type_stream_inout = new Shen.Tag('stream_inout')
Shen.type_error = new Shen.Tag('error')

Shen.Freeze = function(vars, fn) {
  this.vars = vars
  this.fn = fn
}

Shen.mkfunction = function(name, nargs, fn) {
  var x = [Shen.type_func, fn, nargs, [], name]
  Shen.fns[name] = x
  return x
}

Shen.defun = function(name, nargs, fn) {
  var partfn = {}
  partfn = (function (args) {
    if (args.length < nargs) return [Shen.type_func, partfn, nargs, args]
    return fn(args)
  })
  return Shen.mkfunction(name, nargs, partfn)
}

Shen.call_tail = function(x, args) {
  var j = 0, nargs = args.length
  for (;;) {
    if (typeof(x) == "function") {
      x = x([args[j++]])
    } else if (x[0] == Shen.type_func) {
      var c = x[3], n = c.length, k = x[2], a
      if (!j && !n && nargs <= k) {
        a = args
        j += nargs
      } else {
        k = (k > n + nargs) ? n + nargs : k
        a = new Array(k)

        for (var i = 0; i < n; ++i)
          a[i] = c[i]
        for (;i < k && j < nargs; ++j, ++i)
          a[i] = args[j]
      }
      x = (x[1])(a)
    } else if (x[0] == Shen.type_symbol) {
      x = Shen.get_fn(x)
    } else
      return Shen.error("Shen.call: Wrong function: '" + x + "'")
    if (j >= nargs)
      return x
    while (typeof(x) == "function")
      x = x()
  }
  return x
}

Shen.call = function(x, args) {
  var x = Shen.call_tail(x, args)
  while (typeof(x) == "function")
    x = x()
  return x
}

Shen.call_by_name = function(x, args) {
  return Shen.call(Shen.fns[x], args)
}

Shen.call_toplevel = function(fn) {
  return Shen.call(fn, [])
}

Shen.unwind_tail = function(x) {
  while(typeof(x) == "function")
    x = x()
  return x
}

Shen.get_fn = function(x) {
  if (typeof(x) == "function")
    Shen.error("passed function into get_fn")
  switch (x[0]) {
  case Shen.type_func: return x
  case Shen.type_symbol:
    var v = Shen.fns[x[1]]
    if (v != undefined)
      return v
    Shen.error("Cannot find '" + x[1] + "'")
    return Shen.fail_obj
  }
  throw new Error("function " + x[1] + " not found")
}

Shen.thaw = function(f) {
  return f.fn(f.vars)
}

Shen.error = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts("# err: " + s + "\n")
  throw new Error(s);
  return Shen.fail_obj
}

Shen.error_to_string = function(s) {
  var stack = s.stack;
  var show = (stack !== undefined);
  show &= Shen.is_true(Shen.globals["shenjs.*show-error-stack*"]);
  return (show) ? ("" + s + " " + stack) : ("" + s);
}

Shen.get_time = function(x) {
  return (new Date()).getTime() / 1000.0
}

Shen.simple_error = Shen.error
Shen.log_eq = false

Shen.trap_error = function(fn, handler) {
  try {
    return fn()
  } catch (e) {
    return Shen.call(handler, [e])
  }
}

Shen.notrap_error = function(fn, handler) {
  return fn()
}

Shen.equal_boolean = function(b, x) {
  return ((x instanceof Array)
          && x[0] == Shen.type_symbol
          && ((x[1] == "true" && b === true)
              || (x[1] == "false" && b === false)))
}

Shen.equal_function = function(f, x) {
  return (x[0] == Shen.type_symbol && f[0] == Shen.type_func && x[1] == f[4])
}

Shen.$eq$ = function(x, y) {
  if (x === y)
    return true
  var tx = typeof(x), ty = typeof(y)
  if (tx != ty)
    return ((tx == "boolean" && Shen.equal_boolean(x, y))
            || (ty == "boolean" && Shen.equal_boolean(y, x)))
  switch (tx) {
  case "number":
  case "boolean":
  case "function":
  case "string":
    return x == y;

  case "object":
    if (x == y)
      return true

    if ((x instanceof Array) ^ (y instanceof Array))
      return false

    if (Shen.equal_function(x, y) || Shen.equal_function(y, x))
      return true
    if (x.length != y.length)
      return false
    if (x.length == 0)
      return true
    if (x == Shen.fail_obj && y == Shen.fail_obj)
      return true
    if (x[0] != y[0])
      return false
    switch (x[0]) {
    case Shen.type_func:
     if (x[1] != y[1] || x[2] != y[2])
        return false
      var n = x[3].length
      if (n != y[3].length)
        return false
      for (var i = 0; i < n; ++i)
        if (x[3][i] != y[3][i])
          return false
      return true
    case Shen.type_symbol: return x[1] == y[1];
    case Shen.type_cons:
      var r = Shen.$eq$(x[1], y[1])
      while (typeof(r) == "function")
        r = r()
      if (!r)
        return false
      return (function() {
        var r = Shen.$eq$(x[2], y[2])
        while (typeof(r) == "function")
          r = r()
        return r
      });
    case Shen.type_stream_out:
    case Shen.type_stream_in: return x[1] == y[1] && x[2] == y[2];
    default:
      for (var i = 1; i < x.length; ++i) {
        var r = Shen.$eq$(x[i], y[i])
        while (typeof(r) == "function")
          r = r()
        if (!r)
          return false;
      }
      return true;
    }
    break;
  default: return false;
  }
}

Shen.empty$question$ = function(x) {
  return ((x instanceof Array) && !x.length)
}

Shen.is_type = function(x, type) {
  if (type == Shen.type_symbol && (x === true || x === false))
    return true
  return ((x instanceof Array) && x[0] == type)
}

Shen.boolean$question$ = function(x) {
  return (typeof(x) == "boolean") || (Shen.is_type(x, Shen.type_symbol)
                                      && (x[1] == "true" || x[1] == "false"))
}

Shen.vector$question$ = function(x) {
  return ((x instanceof Array) && x[0] > 0)
}

Shen.absvector$question$ = function(x) {
  return ((x instanceof Array) && x.length > 0
          && (!(x[0] instanceof Shen.Tag)))
}

Shen.absvector = function(n) {
  var ret = new Array(n)
  for (var i = 0; i < n; ++i)
    ret[i] = Shen.fail_obj
  return ret
}

Shen.dbg_princ = function(s, x) {
  dbg_print(" " + s + x)
  return x
}

Shen.dbg_print = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts(s + "\n")
}

Shen.is_true = function(x) {
  return x != false || ((x instanceof Array)
                        && (x[0] == Shen.type_symbol)
                        && (x[1] != "false"))
}

Shen.absvector_ref = function(x, i) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  return x[i]
}

Shen.absvector_set = function(x, i, v) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  x[i] = v
  return x
}

Shen.value = function(x) {
  var y = Shen.globals[s[1]]
  if (y === undefined)
    Shen.error("The variable " + x + " is unbound.")
  else
    return y
}

Shen.vector = function(n) {
  var r = new Array(n + 1)
  r[0] = n
  for (var i = 1; i <= n; ++i)
    r[i] = Shen.fail_obj
  return r
}

Shen.esc = function(x) {
  var ret = ""
  for (var i = 0; i < x.length; ++i)
    switch (x[i]) {
      case '"': ret += '\\"'; break;
      default: ret += x[i]; break
    }
  return ret
}

Shen.str = function(x) {
  var err = " is not an atom in Shen; str cannot print it to a string."
  switch (typeof(x)) {
    case "string": return "\"" + Shen.esc(x) + "\""
    case "number":
    case "boolean": return "" + x
    case "function":
      return "#<function>"
    case "object":
      if (x == Shen.fail_obj)
        return "fail!"
      if (x instanceof Array) {
        if (x.length <= 0) {
          Shen.error("[]" + err)
          return Shen.fail_obj
        }
        switch (x[0]) {
          case Shen.type_symbol: return x[1]
          case Shen.type_func:
            if (!x[3].length && x[4] != undefined)
              return x[4]
            if (Shen.is_true(Shen.globals['shenjs.*show-func-js*']))
              Shen.io.puts("\n func: " + x + "\n\n")
            return (x[3].length == 0) ? "#<function>" : "#<closure>"
        }
      }
  }
  Shen.error([x + err])
  return Shen.fail_obj
}

Shen.intern = function(x) {
  switch (x) {
  case "true": return true
  case "false": return false
  default: return [Shen.type_symbol, x]
  }
}

Shen.tlstr = function(x) {
  if (x == "")
    return [Shen.type_symbol, "shen_eos"]
  return x.substring(1, x.length)
}

Shen.n_$gt$string = function(x) {
  return String.fromCharCode(x)
}

Shen.string_$gt$n = function(x) {
  return x.charCodeAt(0)
}

Shen.eval_kl = function(x) {
  var log = false
  if (Shen.is_true(Shen.globals['shenjs.*show-eval-js*']))
    log = true
  if (log)
    Shen.io.puts("# eval-kl[KL]: " + "\n" + Shen.shenstr(x) + "\n\n")
  var js = Shen.call_by_name("js-from-kl", [x])
  if (log)
    Shen.io.puts("eval-kl[JS]:\n" + js + "\n\n")
  var ret = eval(js)
  if (log)
    Shen.io.puts("eval-kl => '" + ret + "'\n\n")
  if (ret === undefined)
    Shen.error("evaluated '" + js + "' to undefined")
  return ret
}

Shen.eval_string = function(str) {
  var x = Shen.call_by_name("read-from-string", [str])
  if (Shen.empty$question$(x))
    return []
  if (!Shen.is_type(x, Shen.type_cons)) {
    Shen.error("Broken read-from-string return value")
    return Shen.fail_obj
  }
  var js = Shen.call_by_name("js-from-shen", [x[1]])
  return eval(js)
}

Shen.mkfunction("shenjs.load", 1, function self(x) {
  if (x.length < 1) return [Shen.type_func, self, 1, x]
  return (function() {
    load(x)
    return []
  })
})

Shen.Utf8_reader = function (str) {
  this.str = (str == null) ? "" : str
  this.strpos = 0
  this.bytes = Array(6)
  this.bytepos = 0
  this.nbytes = 0
  this.read_byte = function () {
    if (this.bytepos < this.nbytes)
      return this.bytes[this.bytepos++]
    if (this.strpos >= this.str.length)
      return -1
    var c = this.str.charCodeAt(this.strpos++)
    this.bytepos = 0
    this.nbytes = 0
    if (c <= 0x7f)
      return c
    if (c <= 0x7ff) {
      var n = 1
      var c0 = (c >> 6) | 192
    } else if (c <= 0xffff) {
      var n = 2
      var c0 = (c >> 12) | 224
    } else if (c <= 0x1fffff) {
      var n = 3
      var c0 = (c >> 18) | 240
    } else if (c <= 0x3ffffff) {
      var n = 4
      var c0 = (c >> 24) | 248
    } else if (c <= 0x7fffffff) {
      var n = 5
      var c0 = (c >> 30) | 252
    } else {
      return Shen.error('Character ' + c + ' cannot be coded to UTF-8')
    }
    this.nbytes = n
    var shift = (n - 1) * 6
    for (i = 0; i < n; ++i, shift -= 6)
      this.bytes[i] = ((c >> shift) & 63) | 128
    return c0
  }
}

Shen.Utf8_writer = function(char_fn) {
  this.nbytes = 0
  this.char = 0
  this.bytespos = 0
  this.write_byte = function(byte) {
    if (!(byte & 0x80)) {
      char_fn(byte)
      this.bytespos = 0
    } else if ((byte & 224) == 192) {
      this.char = byte & 31
      this.nbytes = 2
      this.bytespos = 1
    } else if ((byte & 240) == 224) {
      this.char = byte & 15
      this.nbytes = 3
      this.bytespos = 1
    } else if ((byte & 248) == 240) {
      this.char = byte & 7
      this.nbytes = 4
      this.bytespos = 1
    } else if ((byte & 252) == 248) {
      this.char = byte & 3
      this.nbytes = 5
      this.bytespos = 1
    } else if ((byte & 254) == 252) {
      this.char = byte & 1
      this.nbytes = 6
      this.bytespos = 1
    } else {
      this.char = (this.char << 6) | (byte & 0x7f)
      this.bytespos++
      if (this.bytespos >= this.nbytes) {
        char_fn(this.char)
        this.bytespos = 0
        this.nbytes = 0
      }
    }
  }
}

Shen.str_from_utf8 = function(s) {
  var ret = ""
  function emit(x) {ret += String.fromCharCode(x)}
  var w = new Shen.Utf8_writer(emit)
  var n = s.length
  for (var i = 0; i < n; ++i)
    w.write_byte(s[i])
  return ret
}

Shen.file_instream_get_buf = function(stream, buf, pos) {
  if (buf.byteLength <= pos) {
    stream[1] = (function() {return -1})
    return -1
  }
  stream[1] = (function() {
    return Shen.file_instream_get_buf(stream, buf, pos + 1)
  })
  return buf[pos]
}

Shen.read_byte = function(stream) {
 switch (stream[0]) {
    case Shen.type_stream_in: return stream[1]()
    case Shen.type_stream_inout: return Shen.read_byte(stream[1])
    default:
      Shen.error("read-byte: Wrong stream type.")
      return -1;
  }
}

Shen.write_byte = function(byte, stream) {
 switch (stream[0]) {
    case Shen.type_stream_out: stream[1](byte); break;
    case Shen.type_stream_inout: Shen.write_byte(byte, stream[2]); break;
    default: Shen.error("write-byte: Wrong stream type.")
  }
  return []
}

Shen.close = function(stream) {
  switch (stream[0]) {
    case Shen.type_stream_in:
      stream[2]()
      stream[1] = (function() {return -1});
      break;
    case Shen.type_stream_out:
      stream[2]()
      stream[1] = (function(_) {return []});
      break;
    case Shen.type_stream_inout:
      Shen.close(stream[1])
      Shen.close(stream[2])
      break;
  }
  return []
}

Shen.open = function() {
  return this.io.open.apply(this.io, arguments)
}

Shen.repl_read_byte = function (stream, strbuf) {
  var x = strbuf.read_byte()
  if (x >= 0)
    return x
  var str = Shen.io.gets()
  if (str == null) {
    quit()
    return -1
  }
  strbuf = new Shen.Utf8_reader(str + '\n')
  stream[1] = (function() {
    return Shen.repl_read_byte(stream, strbuf)
  })
  return stream[1]()
}

Shen.pr = function(s, stream) {
  for (i = 0; i < s.length; ++i)
    Shen.write_byte(s.charCodeAt(i), stream)
  return s
}

Shen.shenstr = function(x) {
  return Shen.call_by_name("shen.app", [x, "", [Shen.type_symbol, "shen.s"]])
}

Shen.mkfunction("shenjs.exit", 1, function self(x) {quit()})
Shen.globals["js.skip-internals"] = true

Shen.globals["shenjs.*show-error-js*"] = false
Shen.globals["shenjs.*show-error-stack*"] = false
Shen.globals["shenjs.*show-eval-js*"] = false
Shen.globals["shenjs.*show-func-js*"] = false
Shen.globals["shenjs.*dbg-js*"] = false
Shen.globals["*home-directory*"] = ""

/* dummy functions to bypass defstruct's declarations */
Shen.mkfunction("shen.process-datatype", 2, function(_) {return []})
Shen.mkfunction("compile", 3, function(_) {return []})
Shen.mkfunction("declare", 2, function(_) {return []})

Shen.console_io = {
  open: function(name, dir) {
    var filename = Shen.globals["*home-directory*"] + name
    if (dir[1] == "in") {
      try {
        var buf = readbuffer(filename)
      } catch(e) {
        try {
          var buf = read(filename, 'binary')
        } catch (e) {
          Shen.error(e)
          return Shen.fail_obj
        }
      }
      var stream = [Shen.type_stream_in, null, function(){}]
      if (buf.byteLength !== undefined) {
        stream[1] = (function() {
          return Shen.file_instream_get_buf(stream, buf, 0)
        })
      } else {
        var strbuf = new Shen.Utf8_reader(buf)
        stream[1] = (function() {return strbuf.read_byte()})
      }
      return stream
    } else if (dir[1] == "out") {
      Shen.error("Writing files is not supported in cli interpreter")
      return Shen.fail_obj
    }
    Shen.error("Unsupported open flags")
    return Shen.fail_obj
  },

  init: function() {
    try {
      this.puts = putstr;
    } catch (e) {
      this.puts = write;
    }
    this.gets = readline;
    var writer = new Shen.Utf8_writer(function(char) {
       Shen.io.puts(String.fromCharCode(char))
    })
    var fout = [Shen.type_stream_out,
                function(byte) {return writer.write_byte(byte)},
                function() {}]
    Shen.globals["*stoutput*"] = fout
    
    var fin = [Shen.type_stream_in, null, quit]
    var strbuf = new Shen.Utf8_reader(null)
    fin[1] = (function() {
      return Shen.repl_read_byte(fin, strbuf)
    })
    
    var finout = [Shen.type_stream_inout, fin, fout]
    Shen.globals["*stinput*"] = finout
  }
}

Shen.init = function(conf) {
  Shen.io = conf.io
  Shen.io.init()
  function assert_io(func) {
    if (Shen.io[func] === undefined)
      throw new Error("Shen: IO has no method " + func)
  }
  assert_io('gets')
  assert_io('puts')
  assert_io('open')
  if (conf.start_repl)
    Shen.call_by_name("shen.shen", [])
}

Shen.console_repl = function () {
  Shen.init({io: Shen.console_io, start_repl: true})
}

try {
  module.exports = Shen
} catch (e) {}


Shen.fns["hd"] = [Shen.type_func, function shen_user_lambda5625(Arg5624) {
  if (Arg5624.length < 1) return [Shen.type_func, shen_user_lambda5625, 1, Arg5624];
  var Arg5624_0 = Arg5624[0];
  return Arg5624_0[1]}, 1, [], "hd"];






Shen.fns["tl"] = [Shen.type_func, function shen_user_lambda5627(Arg5626) {
  if (Arg5626.length < 1) return [Shen.type_func, shen_user_lambda5627, 1, Arg5626];
  var Arg5626_0 = Arg5626[0];
  return Arg5626_0[2]}, 1, [], "tl"];






Shen.fns["not"] = [Shen.type_func, function shen_user_lambda5629(Arg5628) {
  if (Arg5628.length < 1) return [Shen.type_func, shen_user_lambda5629, 1, Arg5628];
  var Arg5628_0 = Arg5628[0];
  return (!Arg5628_0)}, 1, [], "not"];






Shen.fns["thaw"] = [Shen.type_func, function shen_user_lambda5631(Arg5630) {
  if (Arg5630.length < 1) return [Shen.type_func, shen_user_lambda5631, 1, Arg5630];
  var Arg5630_0 = Arg5630[0];
  return Shen.thaw(Arg5630_0)}, 1, [], "thaw"];






Shen.fns["string?"] = [Shen.type_func, function shen_user_lambda5633(Arg5632) {
  if (Arg5632.length < 1) return [Shen.type_func, shen_user_lambda5633, 1, Arg5632];
  var Arg5632_0 = Arg5632[0];
  return (typeof(Arg5632_0) == 'string')}, 1, [], "string?"];






Shen.fns["number?"] = [Shen.type_func, function shen_user_lambda5635(Arg5634) {
  if (Arg5634.length < 1) return [Shen.type_func, shen_user_lambda5635, 1, Arg5634];
  var Arg5634_0 = Arg5634[0];
  return (typeof(Arg5634_0) == 'number')}, 1, [], "number?"];






Shen.fns["symbol?"] = [Shen.type_func, function shen_user_lambda5637(Arg5636) {
  if (Arg5636.length < 1) return [Shen.type_func, shen_user_lambda5637, 1, Arg5636];
  var Arg5636_0 = Arg5636[0];
  return Shen.is_type(Arg5636_0, Shen.type_symbol)}, 1, [], "symbol?"];






Shen.fns["cons?"] = [Shen.type_func, function shen_user_lambda5639(Arg5638) {
  if (Arg5638.length < 1) return [Shen.type_func, shen_user_lambda5639, 1, Arg5638];
  var Arg5638_0 = Arg5638[0];
  return Shen.is_type(Arg5638_0, Shen.type_cons)}, 1, [], "cons?"];






Shen.fns["vector?"] = [Shen.type_func, function shen_user_lambda5641(Arg5640) {
  if (Arg5640.length < 1) return [Shen.type_func, shen_user_lambda5641, 1, Arg5640];
  var Arg5640_0 = Arg5640[0];
  return (function() {
  return Shen.vector$question$(Arg5640_0);})}, 1, [], "vector?"];






Shen.fns["absvector?"] = [Shen.type_func, function shen_user_lambda5643(Arg5642) {
  if (Arg5642.length < 1) return [Shen.type_func, shen_user_lambda5643, 1, Arg5642];
  var Arg5642_0 = Arg5642[0];
  return (function() {
  return Shen.absvector$question$(Arg5642_0);})}, 1, [], "absvector?"];






Shen.fns["value"] = [Shen.type_func, function shen_user_lambda5645(Arg5644) {
  if (Arg5644.length < 1) return [Shen.type_func, shen_user_lambda5645, 1, Arg5644];
  var Arg5644_0 = Arg5644[0];
  return (Shen.globals[Arg5644_0[1]])}, 1, [], "value"];






Shen.fns["intern"] = [Shen.type_func, function shen_user_lambda5647(Arg5646) {
  if (Arg5646.length < 1) return [Shen.type_func, shen_user_lambda5647, 1, Arg5646];
  var Arg5646_0 = Arg5646[0];
  return (function() {
  return Shen.intern(Arg5646_0);})}, 1, [], "intern"];






Shen.fns["vector"] = [Shen.type_func, function shen_user_lambda5649(Arg5648) {
  if (Arg5648.length < 1) return [Shen.type_func, shen_user_lambda5649, 1, Arg5648];
  var Arg5648_0 = Arg5648[0];
  return (function() {
  return Shen.vector(Arg5648_0);})}, 1, [], "vector"];






Shen.fns["read-byte"] = [Shen.type_func, function shen_user_lambda5651(Arg5650) {
  if (Arg5650.length < 1) return [Shen.type_func, shen_user_lambda5651, 1, Arg5650];
  var Arg5650_0 = Arg5650[0];
  return (function() {
  return Shen.read_byte(Arg5650_0);})}, 1, [], "read-byte"];






Shen.fns["close"] = [Shen.type_func, function shen_user_lambda5653(Arg5652) {
  if (Arg5652.length < 1) return [Shen.type_func, shen_user_lambda5653, 1, Arg5652];
  var Arg5652_0 = Arg5652[0];
  return (function() {
  return Shen.close(Arg5652_0);})}, 1, [], "close"];






Shen.fns["absvector"] = [Shen.type_func, function shen_user_lambda5655(Arg5654) {
  if (Arg5654.length < 1) return [Shen.type_func, shen_user_lambda5655, 1, Arg5654];
  var Arg5654_0 = Arg5654[0];
  return (function() {
  return Shen.absvector(Arg5654_0);})}, 1, [], "absvector"];






Shen.fns["str"] = [Shen.type_func, function shen_user_lambda5657(Arg5656) {
  if (Arg5656.length < 1) return [Shen.type_func, shen_user_lambda5657, 1, Arg5656];
  var Arg5656_0 = Arg5656[0];
  return (function() {
  return Shen.str(Arg5656_0);})}, 1, [], "str"];






Shen.fns["tlstr"] = [Shen.type_func, function shen_user_lambda5659(Arg5658) {
  if (Arg5658.length < 1) return [Shen.type_func, shen_user_lambda5659, 1, Arg5658];
  var Arg5658_0 = Arg5658[0];
  return (function() {
  return Shen.tlstr(Arg5658_0);})}, 1, [], "tlstr"];






Shen.fns["n->string"] = [Shen.type_func, function shen_user_lambda5661(Arg5660) {
  if (Arg5660.length < 1) return [Shen.type_func, shen_user_lambda5661, 1, Arg5660];
  var Arg5660_0 = Arg5660[0];
  return (function() {
  return Shen.n_$gt$string(Arg5660_0);})}, 1, [], "n->string"];






Shen.fns["string->n"] = [Shen.type_func, function shen_user_lambda5663(Arg5662) {
  if (Arg5662.length < 1) return [Shen.type_func, shen_user_lambda5663, 1, Arg5662];
  var Arg5662_0 = Arg5662[0];
  return (function() {
  return Shen.string_$gt$n(Arg5662_0);})}, 1, [], "string->n"];






Shen.fns["empty?"] = [Shen.type_func, function shen_user_lambda5665(Arg5664) {
  if (Arg5664.length < 1) return [Shen.type_func, shen_user_lambda5665, 1, Arg5664];
  var Arg5664_0 = Arg5664[0];
  return (function() {
  return Shen.empty$question$(Arg5664_0);})}, 1, [], "empty?"];






Shen.fns["get-time"] = [Shen.type_func, function shen_user_lambda5667(Arg5666) {
  if (Arg5666.length < 1) return [Shen.type_func, shen_user_lambda5667, 1, Arg5666];
  var Arg5666_0 = Arg5666[0];
  return (function() {
  return Shen.get_time(Arg5666_0);})}, 1, [], "get-time"];






Shen.fns["error"] = [Shen.type_func, function shen_user_lambda5669(Arg5668) {
  if (Arg5668.length < 1) return [Shen.type_func, shen_user_lambda5669, 1, Arg5668];
  var Arg5668_0 = Arg5668[0];
  return (function() {
  return Shen.error(Arg5668_0);})}, 1, [], "error"];






Shen.fns["simple-error"] = [Shen.type_func, function shen_user_lambda5671(Arg5670) {
  if (Arg5670.length < 1) return [Shen.type_func, shen_user_lambda5671, 1, Arg5670];
  var Arg5670_0 = Arg5670[0];
  return (function() {
  return Shen.simple_error(Arg5670_0);})}, 1, [], "simple-error"];






Shen.fns["eval-kl"] = [Shen.type_func, function shen_user_lambda5673(Arg5672) {
  if (Arg5672.length < 1) return [Shen.type_func, shen_user_lambda5673, 1, Arg5672];
  var Arg5672_0 = Arg5672[0];
  return (function() {
  return Shen.eval_kl(Arg5672_0);})}, 1, [], "eval-kl"];






Shen.fns["error-to-string"] = [Shen.type_func, function shen_user_lambda5675(Arg5674) {
  if (Arg5674.length < 1) return [Shen.type_func, shen_user_lambda5675, 1, Arg5674];
  var Arg5674_0 = Arg5674[0];
  return (function() {
  return Shen.error_to_string(Arg5674_0);})}, 1, [], "error-to-string"];






Shen.fns["js.call-js"] = [Shen.type_func, function shen_user_lambda5677(Arg5676) {
  if (Arg5676.length < 1) return [Shen.type_func, shen_user_lambda5677, 1, Arg5676];
  var Arg5676_0 = Arg5676[0];
  return (function() {
  return Shen.js$dot$call_js(Arg5676_0);})}, 1, [], "js.call-js"];






Shen.fns["+"] = [Shen.type_func, function shen_user_lambda5679(Arg5678) {
  if (Arg5678.length < 2) return [Shen.type_func, shen_user_lambda5679, 2, Arg5678];
  var Arg5678_0 = Arg5678[0], Arg5678_1 = Arg5678[1];
  return (Arg5678_0 + Arg5678_1)}, 2, [], "+"];






Shen.fns["-"] = [Shen.type_func, function shen_user_lambda5681(Arg5680) {
  if (Arg5680.length < 2) return [Shen.type_func, shen_user_lambda5681, 2, Arg5680];
  var Arg5680_0 = Arg5680[0], Arg5680_1 = Arg5680[1];
  return (Arg5680_0 - Arg5680_1)}, 2, [], "-"];






Shen.fns["*"] = [Shen.type_func, function shen_user_lambda5683(Arg5682) {
  if (Arg5682.length < 2) return [Shen.type_func, shen_user_lambda5683, 2, Arg5682];
  var Arg5682_0 = Arg5682[0], Arg5682_1 = Arg5682[1];
  return (Arg5682_0 * Arg5682_1)}, 2, [], "*"];






Shen.fns["/"] = [Shen.type_func, function shen_user_lambda5685(Arg5684) {
  if (Arg5684.length < 2) return [Shen.type_func, shen_user_lambda5685, 2, Arg5684];
  var Arg5684_0 = Arg5684[0], Arg5684_1 = Arg5684[1];
  return (Arg5684_0 / Arg5684_1)}, 2, [], "/"];






Shen.fns["and"] = [Shen.type_func, function shen_user_lambda5687(Arg5686) {
  if (Arg5686.length < 2) return [Shen.type_func, shen_user_lambda5687, 2, Arg5686];
  var Arg5686_0 = Arg5686[0], Arg5686_1 = Arg5686[1];
  return (Arg5686_0 && Arg5686_1)}, 2, [], "and"];






Shen.fns["or"] = [Shen.type_func, function shen_user_lambda5689(Arg5688) {
  if (Arg5688.length < 2) return [Shen.type_func, shen_user_lambda5689, 2, Arg5688];
  var Arg5688_0 = Arg5688[0], Arg5688_1 = Arg5688[1];
  return (Arg5688_0 || Arg5688_1)}, 2, [], "or"];






Shen.fns["="] = [Shen.type_func, function shen_user_lambda5691(Arg5690) {
  if (Arg5690.length < 2) return [Shen.type_func, shen_user_lambda5691, 2, Arg5690];
  var Arg5690_0 = Arg5690[0], Arg5690_1 = Arg5690[1];
  return Shen.$eq$(Arg5690_0, Arg5690_1)}, 2, [], "="];






Shen.fns[">"] = [Shen.type_func, function shen_user_lambda5693(Arg5692) {
  if (Arg5692.length < 2) return [Shen.type_func, shen_user_lambda5693, 2, Arg5692];
  var Arg5692_0 = Arg5692[0], Arg5692_1 = Arg5692[1];
  return (Arg5692_0 > Arg5692_1)}, 2, [], ">"];






Shen.fns[">="] = [Shen.type_func, function shen_user_lambda5695(Arg5694) {
  if (Arg5694.length < 2) return [Shen.type_func, shen_user_lambda5695, 2, Arg5694];
  var Arg5694_0 = Arg5694[0], Arg5694_1 = Arg5694[1];
  return (Arg5694_0 >= Arg5694_1)}, 2, [], ">="];






Shen.fns["<"] = [Shen.type_func, function shen_user_lambda5697(Arg5696) {
  if (Arg5696.length < 2) return [Shen.type_func, shen_user_lambda5697, 2, Arg5696];
  var Arg5696_0 = Arg5696[0], Arg5696_1 = Arg5696[1];
  return (Arg5696_0 < Arg5696_1)}, 2, [], "<"];






Shen.fns["<="] = [Shen.type_func, function shen_user_lambda5699(Arg5698) {
  if (Arg5698.length < 2) return [Shen.type_func, shen_user_lambda5699, 2, Arg5698];
  var Arg5698_0 = Arg5698[0], Arg5698_1 = Arg5698[1];
  return (Arg5698_0 <= Arg5698_1)}, 2, [], "<="];






Shen.fns["cons"] = [Shen.type_func, function shen_user_lambda5701(Arg5700) {
  if (Arg5700.length < 2) return [Shen.type_func, shen_user_lambda5701, 2, Arg5700];
  var Arg5700_0 = Arg5700[0], Arg5700_1 = Arg5700[1];
  return [Shen.type_cons, Arg5700_0, Arg5700_1]}, 2, [], "cons"];






Shen.fns["set"] = [Shen.type_func, function shen_user_lambda5703(Arg5702) {
  if (Arg5702.length < 2) return [Shen.type_func, shen_user_lambda5703, 2, Arg5702];
  var Arg5702_0 = Arg5702[0], Arg5702_1 = Arg5702[1];
  return (Shen.globals[Arg5702_0[1]] = Arg5702_1)}, 2, [], "set"];






Shen.fns["<-address"] = [Shen.type_func, function shen_user_lambda5705(Arg5704) {
  if (Arg5704.length < 2) return [Shen.type_func, shen_user_lambda5705, 2, Arg5704];
  var Arg5704_0 = Arg5704[0], Arg5704_1 = Arg5704[1];
  return Shen.absvector_ref(Arg5704_0, Arg5704_1)}, 2, [], "<-address"];






Shen.fns["cn"] = [Shen.type_func, function shen_user_lambda5707(Arg5706) {
  if (Arg5706.length < 2) return [Shen.type_func, shen_user_lambda5707, 2, Arg5706];
  var Arg5706_0 = Arg5706[0], Arg5706_1 = Arg5706[1];
  return (Arg5706_0 + Arg5706_1)}, 2, [], "cn"];






Shen.fns["pos"] = [Shen.type_func, function shen_user_lambda5709(Arg5708) {
  if (Arg5708.length < 2) return [Shen.type_func, shen_user_lambda5709, 2, Arg5708];
  var Arg5708_0 = Arg5708[0], Arg5708_1 = Arg5708[1];
  return Arg5708_0[Arg5708_1]}, 2, [], "pos"];






Shen.fns["@p"] = [Shen.type_func, function shen_user_lambda5711(Arg5710) {
  if (Arg5710.length < 2) return [Shen.type_func, shen_user_lambda5711, 2, Arg5710];
  var Arg5710_0 = Arg5710[0], Arg5710_1 = Arg5710[1];
  return [Shen.fns['shen.tuple'], Arg5710_0, Arg5710_1]}, 2, [], "@p"];






Shen.fns["open"] = [Shen.type_func, function shen_user_lambda5713(Arg5712) {
  if (Arg5712.length < 2) return [Shen.type_func, shen_user_lambda5713, 2, Arg5712];
  var Arg5712_0 = Arg5712[0], Arg5712_1 = Arg5712[1];
  return (function() {
  return Shen.open(Arg5712_0, Arg5712_1);})}, 2, [], "open"];






Shen.fns["write-byte"] = [Shen.type_func, function shen_user_lambda5715(Arg5714) {
  if (Arg5714.length < 2) return [Shen.type_func, shen_user_lambda5715, 2, Arg5714];
  var Arg5714_0 = Arg5714[0], Arg5714_1 = Arg5714[1];
  return (function() {
  return Shen.write_byte(Arg5714_0, Arg5714_1);})}, 2, [], "write-byte"];






Shen.fns["address->"] = [Shen.type_func, function shen_user_lambda5717(Arg5716) {
  if (Arg5716.length < 3) return [Shen.type_func, shen_user_lambda5717, 3, Arg5716];
  var Arg5716_0 = Arg5716[0], Arg5716_1 = Arg5716[1], Arg5716_2 = Arg5716[2];
  return Shen.absvector_set(Arg5716_0, Arg5716_1, Arg5716_2)}, 3, [], "address->"];






Shen.call_toplevel(function shen_toplevel3897(Arg3895) {
  if (Arg3895.length < 0) return [Shen.type_func, shen_toplevel3897, 0, Arg3895];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "reg-kl.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "reg-kl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})});




Shen.fns["reg-kl.mk-context"] = [Shen.type_func, function shen_user_lambda3901(Arg3900) {
  if (Arg3900.length < 2) return [Shen.type_func, shen_user_lambda3901, 2, Arg3900];
  var Arg3900_0 = Arg3900[0], Arg3900_1 = Arg3900[1];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg3900_0, Shen.call(Shen.fns["@v"], [Arg3900_1, Shen.vector(0)])]);})}, 2, [], "reg-kl.mk-context"];





Shen.fns["reg-kl.context-nregs->"] = [Shen.type_func, function shen_user_lambda3905(Arg3904) {
  if (Arg3904.length < 2) return [Shen.type_func, shen_user_lambda3905, 2, Arg3904];
  var Arg3904_0 = Arg3904[0], Arg3904_1 = Arg3904[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg3904_0, 2, Arg3904_1]);})}, 2, [], "reg-kl.context-nregs->"];





Shen.fns["reg-kl.context-toplevel->"] = [Shen.type_func, function shen_user_lambda3909(Arg3908) {
  if (Arg3908.length < 2) return [Shen.type_func, shen_user_lambda3909, 2, Arg3908];
  var Arg3908_0 = Arg3908[0], Arg3908_1 = Arg3908[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg3908_0, 1, Arg3908_1]);})}, 2, [], "reg-kl.context-toplevel->"];





Shen.fns["reg-kl.context-nregs"] = [Shen.type_func, function shen_user_lambda3912(Arg3911) {
  if (Arg3911.length < 1) return [Shen.type_func, shen_user_lambda3912, 1, Arg3911];
  var Arg3911_0 = Arg3911[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg3911_0, 2]);})}, 1, [], "reg-kl.context-nregs"];





Shen.fns["reg-kl.context-toplevel"] = [Shen.type_func, function shen_user_lambda3915(Arg3914) {
  if (Arg3914.length < 1) return [Shen.type_func, shen_user_lambda3915, 1, Arg3914];
  var Arg3914_0 = Arg3914[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg3914_0, 1]);})}, 1, [], "reg-kl.context-toplevel"];





Shen.fns["reg-kl.var-idx-aux"] = [Shen.type_func, function shen_user_lambda3925(Arg3924) {
  if (Arg3924.length < 3) return [Shen.type_func, shen_user_lambda3925, 3, Arg3924];
  var Arg3924_0 = Arg3924[0], Arg3924_1 = Arg3924[1], Arg3924_2 = Arg3924[2];
  return ((Shen.empty$question$(Arg3924_2))
  ? (function() {
  return Shen.simple_error(("Unknown var: " + Shen.call(Shen.fns["shen.app"], [Arg3924_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (((Shen.is_type(Arg3924_2, Shen.type_cons) && (Shen.is_type(Arg3924_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3924_2[1][1], Arg3924_0)))))
  ? Arg3924_2[1][2]
  : ((Shen.is_type(Arg3924_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-idx-aux"], [Arg3924_0, (Arg3924_1 + 1), Arg3924_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.var-idx-aux"]]);}))))}, 3, [], "reg-kl.var-idx-aux"];





Shen.fns["reg-kl.var-idx"] = [Shen.type_func, function shen_user_lambda3929(Arg3928) {
  if (Arg3928.length < 2) return [Shen.type_func, shen_user_lambda3929, 2, Arg3928];
  var Arg3928_0 = Arg3928[0], Arg3928_1 = Arg3928[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-idx-aux"], [Arg3928_0, 0, Arg3928_1]);})}, 2, [], "reg-kl.var-idx"];





Shen.fns["reg-kl.new-var-idx-aux"] = [Shen.type_func, function shen_user_lambda3942(Arg3941) {
  if (Arg3941.length < 3) return [Shen.type_func, shen_user_lambda3942, 3, Arg3941];
  var Arg3941_0 = Arg3941[0], Arg3941_1 = Arg3941[1], Arg3941_2 = Arg3941[2];
  return ((Shen.empty$question$(Arg3941_2))
  ? Arg3941_1
  : (((Shen.is_type(Arg3941_2, Shen.type_cons) && (Shen.is_type(Arg3941_2[1], Shen.type_cons) && (Arg3941_2[1][2] < 0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3941_0, Arg3941_1, Arg3941_2[2]]);})
  : (((Shen.is_type(Arg3941_2, Shen.type_cons) && (Shen.is_type(Arg3941_2[1], Shen.type_cons) && (Arg3941_2[1][2] >= Arg3941_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3941_0, (Arg3941_2[1][2] + 1), Arg3941_2[2]]);})
  : ((Shen.is_type(Arg3941_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3941_0, Arg3941_1, Arg3941_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.new-var-idx-aux"]]);})))))}, 3, [], "reg-kl.new-var-idx-aux"];





Shen.fns["reg-kl.new-var-idx"] = [Shen.type_func, function shen_user_lambda3946(Arg3945) {
  if (Arg3945.length < 2) return [Shen.type_func, shen_user_lambda3946, 2, Arg3945];
  var Arg3945_0 = Arg3945[0], Arg3945_1 = Arg3945[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-aux"], [Arg3945_0, 0, Arg3945_1]);})}, 2, [], "reg-kl.new-var-idx"];





Shen.fns["reg-kl.var-defined?"] = [Shen.type_func, function shen_user_lambda3964(Arg3963) {
  if (Arg3963.length < 2) return [Shen.type_func, shen_user_lambda3964, 2, Arg3963];
  var Arg3963_0 = Arg3963[0], Arg3963_1 = Arg3963[1];
  return ((Shen.empty$question$(Arg3963_1))
  ? false
  : (((Shen.is_type(Arg3963_1, Shen.type_cons) && (Shen.is_type(Arg3963_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3963_1[1][1], Arg3963_0)))))
  ? true
  : (((Shen.is_type(Arg3963_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg3963_1[1], Arg3963_0))))
  ? true
  : ((Shen.is_type(Arg3963_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.var-defined?"], [Arg3963_0, Arg3963_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.var-defined?"]]);})))))}, 2, [], "reg-kl.var-defined?"];





Shen.fns["reg-kl.used-vars-aux"] = [Shen.type_func, function shen_user_lambda3982(Arg3981) {
  if (Arg3981.length < 4) return [Shen.type_func, shen_user_lambda3982, 4, Arg3981];
  var Arg3981_0 = Arg3981[0], Arg3981_1 = Arg3981[1], Arg3981_2 = Arg3981[2], Arg3981_3 = Arg3981[3];
  var R0;
  return (((Shen.is_type(Arg3981_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg3981_0[1])) && (Shen.is_type(Arg3981_0[2], Shen.type_cons) && (Shen.is_type(Arg3981_0[2][2], Shen.type_cons) && (Shen.is_type(Arg3981_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg3981_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3981_0[2][2][2][1], Arg3981_1, [Shen.type_cons, Arg3981_0[2][1], Arg3981_2], Arg3981_3])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3981_0[2][2][1], Arg3981_1, Arg3981_2, R0]);}))
  : (((Shen.is_type(Arg3981_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg3981_0[1])) && (Shen.is_type(Arg3981_0[2], Shen.type_cons) && (Shen.is_type(Arg3981_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg3981_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3981_0[2][2][1], Arg3981_1, [Shen.type_cons, Arg3981_0[2][1], Arg3981_2], Arg3981_3]);})
  : ((Shen.is_type(Arg3981_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3981_0[1], Arg3981_1, Arg3981_2, Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg3981_0[2], Arg3981_1, Arg3981_2, Arg3981_3])]);})
  : (((Shen.is_type(Arg3981_0, Shen.type_symbol) && ((!Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg3981_0, Arg3981_2])) && Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg3981_0, Arg3981_1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["adjoin"], [Arg3981_0, Arg3981_3]);})
  : Arg3981_3))))}, 4, [], "reg-kl.used-vars-aux"];





Shen.fns["reg-kl.used-vars"] = [Shen.type_func, function shen_user_lambda3986(Arg3985) {
  if (Arg3985.length < 2) return [Shen.type_func, shen_user_lambda3986, 2, Arg3985];
  var Arg3985_0 = Arg3985[0], Arg3985_1 = Arg3985[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-aux"], [Arg3985_0, Arg3985_1, [], []]);})}, 2, [], "reg-kl.used-vars"];





Shen.fns["reg-kl.remove-do"] = [Shen.type_func, function shen_user_lambda3989(Arg3988) {
  if (Arg3988.length < 1) return [Shen.type_func, shen_user_lambda3989, 1, Arg3988];
  var Arg3988_0 = Arg3988[0];
  return (((Shen.is_type(Arg3988_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg3988_0[1]))))
  ? Arg3988_0[2]
  : [Shen.type_cons, Arg3988_0, []])}, 1, [], "reg-kl.remove-do"];





Shen.fns["reg-kl.remove-duplicates-aux"] = [Shen.type_func, function shen_user_lambda3993(Arg3992) {
  if (Arg3992.length < 2) return [Shen.type_func, shen_user_lambda3993, 2, Arg3992];
  var Arg3992_0 = Arg3992[0], Arg3992_1 = Arg3992[1];
  return ((Shen.empty$question$(Arg3992_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg3992_1]);})
  : ((Shen.is_type(Arg3992_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.remove-duplicates-aux"], [Arg3992_0[2], Shen.call(Shen.fns["adjoin"], [Arg3992_0[1], Arg3992_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.remove-duplicates-aux"]]);})))}, 2, [], "reg-kl.remove-duplicates-aux"];





Shen.fns["reg-kl.remove-duplicates"] = [Shen.type_func, function shen_user_lambda3996(Arg3995) {
  if (Arg3995.length < 1) return [Shen.type_func, shen_user_lambda3996, 1, Arg3995];
  var Arg3995_0 = Arg3995[0];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.remove-duplicates-aux"], [Arg3995_0, []]);})}, 1, [], "reg-kl.remove-duplicates"];





Shen.fns["reg-kl.used-vars-cascade-aux"] = [Shen.type_func, function shen_user_lambda4006(Arg4005) {
  if (Arg4005.length < 4) return [Shen.type_func, shen_user_lambda4006, 4, Arg4005];
  var Arg4005_0 = Arg4005[0], Arg4005_1 = Arg4005[1], Arg4005_2 = Arg4005[2], Arg4005_3 = Arg4005[3];
  var R0;
  return ((Shen.empty$question$(Arg4005_0))
  ? Arg4005_3
  : ((Shen.is_type(Arg4005_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4005_0[1], Arg4005_1, [], Arg4005_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-cascade-aux"], [Arg4005_0[2], Arg4005_1, R0, [Shen.type_cons, R0, Arg4005_3]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.used-vars-cascade-aux"]]);})))}, 4, [], "reg-kl.used-vars-cascade-aux"];





Shen.fns["reg-kl.used-vars-cascade"] = [Shen.type_func, function shen_user_lambda4011(Arg4010) {
  if (Arg4010.length < 3) return [Shen.type_func, shen_user_lambda4011, 3, Arg4010];
  var Arg4010_0 = Arg4010[0], Arg4010_1 = Arg4010[1], Arg4010_2 = Arg4010[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.used-vars-cascade-aux"], [Shen.call(Shen.fns["reverse"], [Arg4010_0]), Arg4010_1, Arg4010_2, []]);})}, 3, [], "reg-kl.used-vars-cascade"];





Shen.fns["reg-kl.mk-shen-set-reg"] = [Shen.type_func, function shen_user_lambda4016(Arg4015) {
  if (Arg4015.length < 2) return [Shen.type_func, shen_user_lambda4016, 2, Arg4015];
  var Arg4015_0 = Arg4015[0], Arg4015_1 = Arg4015[1];
  return (((Arg4015_0 < 0))
  ? (function() {
  return Shen.simple_error("Cannot set function argument\x0a");})
  : [Shen.type_cons, [Shen.type_symbol, "shen-set-reg!"], [Shen.type_cons, Arg4015_0, [Shen.type_cons, Arg4015_1, []]]])}, 2, [], "reg-kl.mk-shen-set-reg"];





Shen.fns["reg-kl.mk-shen-get-reg"] = [Shen.type_func, function shen_user_lambda4019(Arg4018) {
  if (Arg4018.length < 1) return [Shen.type_func, shen_user_lambda4019, 1, Arg4018];
  var Arg4018_0 = Arg4018[0];
  return (((Arg4018_0 < 0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen-get-arg"], [Shen.type_cons, ((0 - Arg4018_0) - 1), []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen-get-reg"], [Shen.type_cons, Arg4018_0, []]])}, 1, [], "reg-kl.mk-shen-get-reg"];





Shen.fns["reg-kl.reuse-idx"] = [Shen.type_func, function shen_user_lambda4028(Arg4027) {
  if (Arg4027.length < 2) return [Shen.type_func, shen_user_lambda4028, 2, Arg4027];
  var Arg4027_0 = Arg4027[0], Arg4027_1 = Arg4027[1];
  return ((Shen.empty$question$(Arg4027_1))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg4027_1, Shen.type_cons) && (Shen.is_type(Arg4027_1[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Arg4027_1[1][1], Arg4027_0)) && (Arg4027_1[1][2] >= 0)))))
  ? Arg4027_1[1][2]
  : ((Shen.is_type(Arg4027_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.reuse-idx"], [Arg4027_0, Arg4027_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.reuse-idx"]]);}))))}, 2, [], "reg-kl.reuse-idx"];





Shen.fns["reg-kl.new-var-idx-or-reuse"] = [Shen.type_func, function shen_user_lambda4033(Arg4032) {
  if (Arg4032.length < 3) return [Shen.type_func, shen_user_lambda4033, 3, Arg4032];
  var Arg4032_0 = Arg4032[0], Arg4032_1 = Arg4032[1], Arg4032_2 = Arg4032[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg4032_2))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx"], [Arg4032_0, Arg4032_1]);})
  : ((R0 = (new Shen.Freeze([Arg4032_0, Arg4032_2, Arg4032_1], function(Arg4034) {
  var Arg4034_0 = Arg4034[0], Arg4034_1 = Arg4034[1], Arg4034_2 = Arg4034[2];
  return (function() {
  return ((Shen.is_type(Arg4034_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.new-var-idx-or-reuse"], [Arg4034_0, Arg4034_2, Arg4034_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.new-var-idx-or-reuse"]]);}));})}))),
  ((Shen.is_type(Arg4032_2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["reg-kl.reuse-idx"], [Arg4032_2[1], Arg4032_1])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))}, 3, [], "reg-kl.new-var-idx-or-reuse"];





Shen.fns["reg-kl.add-var-aux"] = [Shen.type_func, function shen_user_lambda4042(Arg4041) {
  if (Arg4041.length < 4) return [Shen.type_func, shen_user_lambda4042, 4, Arg4041];
  var Arg4041_0 = Arg4041[0], Arg4041_1 = Arg4041[1], Arg4041_2 = Arg4041[2], Arg4041_3 = Arg4041[3];
  return ((Shen.empty$question$(Arg4041_2))
  ? [Shen.type_cons, [Shen.type_cons, Arg4041_0, Arg4041_1], Shen.call(Shen.fns["reverse"], [Arg4041_3])]
  : (((Shen.is_type(Arg4041_2, Shen.type_cons) && (Shen.is_type(Arg4041_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4041_2[1][2], Arg4041_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["reverse"], [[Shen.type_cons, [Shen.type_cons, Arg4041_0, Arg4041_2[1][2]], Arg4041_3]]), Arg4041_2[2]]);})
  : ((Shen.is_type(Arg4041_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.add-var-aux"], [Arg4041_0, Arg4041_1, Arg4041_2[2], [Shen.type_cons, Arg4041_2[1], Arg4041_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.add-var-aux"]]);}))))}, 4, [], "reg-kl.add-var-aux"];





Shen.fns["reg-kl.add-var"] = [Shen.type_func, function shen_user_lambda4047(Arg4046) {
  if (Arg4046.length < 3) return [Shen.type_func, shen_user_lambda4047, 3, Arg4046];
  var Arg4046_0 = Arg4046[0], Arg4046_1 = Arg4046[1], Arg4046_2 = Arg4046[2];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.add-var-aux"], [Arg4046_0, Arg4046_1, Arg4046_2, []]);})}, 3, [], "reg-kl.add-var"];





Shen.fns["reg-kl.max"] = [Shen.type_func, function shen_user_lambda4055(Arg4054) {
  if (Arg4054.length < 2) return [Shen.type_func, shen_user_lambda4055, 2, Arg4054];
  var Arg4054_0 = Arg4054[0], Arg4054_1 = Arg4054[1];
  return (((Arg4054_0 > Arg4054_1))
  ? Arg4054_0
  : Arg4054_1)}, 2, [], "reg-kl.max"];





Shen.fns["reg-kl.setreg-unexpr"] = [Shen.type_func, function shen_user_lambda4060(Arg4059) {
  if (Arg4059.length < 3) return [Shen.type_func, shen_user_lambda4060, 3, Arg4059];
  var Arg4059_0 = Arg4059[0], Arg4059_1 = Arg4059[1], Arg4059_2 = Arg4059[2];
  return (((Shen.is_type(Arg4059_1, Shen.type_cons) && Shen.empty$question$(Arg4059_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4059_0, Arg4059_1[1]]), Arg4059_2]]);})
  : ((Shen.is_type(Arg4059_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.setreg-unexpr"], [Arg4059_0, Arg4059_1[2], [Shen.type_cons, Arg4059_1[1], Arg4059_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4059_0, Arg4059_1]);})))}, 3, [], "reg-kl.setreg-unexpr"];





Shen.fns["reg-kl.setreg-do-expr"] = [Shen.type_func, function shen_user_lambda4069(Arg4068) {
  if (Arg4068.length < 3) return [Shen.type_func, shen_user_lambda4069, 3, Arg4068];
  var Arg4068_0 = Arg4068[0], Arg4068_1 = Arg4068[1], Arg4068_2 = Arg4068[2];
  return ((Shen.empty$question$(Arg4068_1))
  ? (function() {
  return Shen.simple_error("Broken `do` expression.");})
  : (((Shen.is_type(Arg4068_1, Shen.type_cons) && Shen.empty$question$(Arg4068_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4068_0, Arg4068_1[1]]), Arg4068_2]]);})
  : ((Shen.is_type(Arg4068_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.setreg-do-expr"], [Arg4068_0, Arg4068_1[2], [Shen.type_cons, Arg4068_1[1], Arg4068_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.setreg-do-expr"]]);}))))}, 3, [], "reg-kl.setreg-do-expr"];





Shen.fns["reg-kl.mk-shen-set-reg-unexpr"] = [Shen.type_func, function shen_user_lambda4073(Arg4072) {
  if (Arg4072.length < 2) return [Shen.type_func, shen_user_lambda4073, 2, Arg4072];
  var Arg4072_0 = Arg4072[0], Arg4072_1 = Arg4072[1];
  var R0, R1;
  return (((Shen.is_type(Arg4072_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4072_1[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["reg-kl.setreg-do-expr"], [Arg4072_0, Arg4072_1[2], []])]
  : (((Shen.is_type(Arg4072_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4072_1[1])) && (Shen.is_type(Arg4072_1[2], Shen.type_cons) && (Shen.is_type(Arg4072_1[2][2], Shen.type_cons) && (Shen.is_type(Arg4072_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4072_1[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4072_0, Arg4072_1[2][2][1]])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [Arg4072_0, Arg4072_1[2][2][2][1]])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4072_1[2][1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-set-reg"], [Arg4072_0, Arg4072_1]);})))}, 2, [], "reg-kl.mk-shen-set-reg-unexpr"];





Shen.fns["reg-kl.walk-let-expr"] = [Shen.type_func, function shen_user_lambda4091(Arg4090) {
  if (Arg4090.length < 8) return [Shen.type_func, shen_user_lambda4091, 8, Arg4090];
  var Arg4090_0 = Arg4090[0], Arg4090_1 = Arg4090[1], Arg4090_2 = Arg4090[2], Arg4090_3 = Arg4090[3], Arg4090_4 = Arg4090[4], Arg4090_5 = Arg4090[5], Arg4090_6 = Arg4090[6], Arg4090_7 = Arg4090[7];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4090_7)))
  ? ((R0 = Shen.call(Shen.fns["remove"], [Arg4090_0, Arg4090_3])),
  (R0 = Shen.call(Shen.fns["append"], [R0, Arg4090_5])),
  (R1 = Shen.call(Shen.fns["difference"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "head"], Arg4090_2]), R0])),
  (R1 = Shen.call(Shen.fns["reg-kl.new-var-idx-or-reuse"], [Arg4090_0, Arg4090_2, R1])),
  Shen.call(Shen.fns["reg-kl.context-nregs->"], [Arg4090_6, Shen.call(Shen.fns["reg-kl.max"], [(R1 + 1), Shen.call(Shen.fns["reg-kl.context-nregs"], [Arg4090_6])])]),
  (R2 = Shen.call(Shen.fns["reg-kl.add-var"], [Arg4090_0, R1, Arg4090_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4090_1, Arg4090_2, Arg4090_4, R0, Arg4090_6])),
  [Shen.fns['shen.tuple'], Shen.call(Shen.fns["reg-kl.mk-shen-set-reg-unexpr"], [R1, R0]), R2])
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4090_7)))
  ? [Shen.fns['shen.tuple'], Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4090_1, Arg4090_2, Arg4090_4, Arg4090_5, Arg4090_6]), Arg4090_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-let-expr"]]);})))}, 8, [], "reg-kl.walk-let-expr"];





Shen.fns["reg-kl.walk-let"] = [Shen.type_func, function shen_user_lambda4100(Arg4099) {
  if (Arg4099.length < 7) return [Shen.type_func, shen_user_lambda4100, 7, Arg4099];
  var Arg4099_0 = Arg4099[0], Arg4099_1 = Arg4099[1], Arg4099_2 = Arg4099[2], Arg4099_3 = Arg4099[3], Arg4099_4 = Arg4099[4], Arg4099_5 = Arg4099[5], Arg4099_6 = Arg4099[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [Arg4099_2, [Shen.type_cons, Arg4099_0, Arg4099_3]])),
  (R1 = Shen.call(Shen.fns["element?"], [Arg4099_0, R0])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk-let-expr"], [Arg4099_0, Arg4099_1, Arg4099_3, R0, Arg4099_4, Arg4099_5, Arg4099_6, R1])),
  (R2 = Shen.call(Shen.fns["fst"], [R1])),
  (R1 = Shen.call(Shen.fns["snd"], [R1])),
  (R1 = Shen.call(Shen.fns["reg-kl.remove-do"], [Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4099_2, R1, Shen.call(Shen.fns["append"], [R0, Arg4099_5]), Arg4099_5, Arg4099_6])])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? (R2 = [Shen.type_cons, R2, R1])
  : (R2 = R1)),
  [Shen.type_cons, [Shen.type_symbol, "do"], R2])}, 7, [], "reg-kl.walk-let"];





Shen.fns["reg-kl.walk-do-aux"] = [Shen.type_func, function shen_user_lambda4114(Arg4113) {
  if (Arg4113.length < 6) return [Shen.type_func, shen_user_lambda4114, 6, Arg4113];
  var Arg4113_0 = Arg4113[0], Arg4113_1 = Arg4113[1], Arg4113_2 = Arg4113[2], Arg4113_3 = Arg4113[3], Arg4113_4 = Arg4113[4], Arg4113_5 = Arg4113[5];
  var R0, R1;
  return (((Shen.empty$question$(Arg4113_0) && Shen.empty$question$(Arg4113_2)))
  ? Arg4113_5
  : (((Shen.is_type(Arg4113_0, Shen.type_cons) && (Shen.empty$question$(Arg4113_0[2]) && (Shen.is_type(Arg4113_2, Shen.type_cons) && Shen.empty$question$(Arg4113_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4113_0[1], Arg4113_1, Arg4113_2[1], Arg4113_3, Arg4113_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4113_5, Shen.call(Shen.fns["reg-kl.remove-do"], [R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do-aux"], [[], Arg4113_1, [], Arg4113_3, Arg4113_4, R0]);}))
  : (((Shen.is_type(Arg4113_0, Shen.type_cons) && (Shen.is_type(Arg4113_2, Shen.type_cons) && Shen.is_type(Arg4113_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4113_0[1], Arg4113_1, Arg4113_2[1], Arg4113_2[2][1], Arg4113_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4113_5, Shen.call(Shen.fns["reg-kl.remove-do"], [R0])])),
  (R1 = Arg4113_2[2]),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do-aux"], [Arg4113_0[2], Arg4113_1, R1, Arg4113_3, Arg4113_4, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-do-aux"]]);}))))}, 6, [], "reg-kl.walk-do-aux"];





Shen.fns["reg-kl.walk-do"] = [Shen.type_func, function shen_user_lambda4121(Arg4120) {
  if (Arg4120.length < 5) return [Shen.type_func, shen_user_lambda4121, 5, Arg4120];
  var Arg4120_0 = Arg4120[0], Arg4120_1 = Arg4120[1], Arg4120_2 = Arg4120[2], Arg4120_3 = Arg4120[3], Arg4120_4 = Arg4120[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-cascade"], [Arg4120_0, Arg4120_1, Arg4120_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-do-aux"], [Arg4120_0, Arg4120_1, R0, Arg4120_3, Arg4120_4, []])),
  [Shen.type_cons, [Shen.type_symbol, "do"], R0])}, 5, [], "reg-kl.walk-do"];





Shen.fns["reg-kl.walk-apply-aux"] = [Shen.type_func, function shen_user_lambda4135(Arg4134) {
  if (Arg4134.length < 6) return [Shen.type_func, shen_user_lambda4135, 6, Arg4134];
  var Arg4134_0 = Arg4134[0], Arg4134_1 = Arg4134[1], Arg4134_2 = Arg4134[2], Arg4134_3 = Arg4134[3], Arg4134_4 = Arg4134[4], Arg4134_5 = Arg4134[5];
  var R0;
  return (((Shen.empty$question$(Arg4134_0) && Shen.empty$question$(Arg4134_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4134_5]);})
  : (((Shen.is_type(Arg4134_0, Shen.type_cons) && (Shen.empty$question$(Arg4134_0[2]) && (Shen.is_type(Arg4134_2, Shen.type_cons) && Shen.empty$question$(Arg4134_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4134_0[1], Arg4134_1, Arg4134_2[1], Arg4134_3, Arg4134_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [[], Arg4134_1, [], Arg4134_3, Arg4134_4, [Shen.type_cons, R0, Arg4134_5]]);}))
  : (((Shen.is_type(Arg4134_0, Shen.type_cons) && (Shen.is_type(Arg4134_2, Shen.type_cons) && Shen.is_type(Arg4134_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4134_0[1], Arg4134_1, Arg4134_2[1], Arg4134_2[2][1], Arg4134_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [Arg4134_0[2], Arg4134_1, Arg4134_2[2], Arg4134_3, Arg4134_4, [Shen.type_cons, R0, Arg4134_5]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-apply-aux"]]);}))))}, 6, [], "reg-kl.walk-apply-aux"];





Shen.fns["reg-kl.walk-apply"] = [Shen.type_func, function shen_user_lambda4142(Arg4141) {
  if (Arg4141.length < 5) return [Shen.type_func, shen_user_lambda4142, 5, Arg4141];
  var Arg4141_0 = Arg4141[0], Arg4141_1 = Arg4141[1], Arg4141_2 = Arg4141[2], Arg4141_3 = Arg4141[3], Arg4141_4 = Arg4141[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-cascade"], [Arg4141_0, Arg4141_1, Arg4141_2])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply-aux"], [Arg4141_0, Arg4141_1, R0, Arg4141_3, Arg4141_4, []]);}))}, 5, [], "reg-kl.walk-apply"];





Shen.fns["reg-kl.walk-if"] = [Shen.type_func, function shen_user_lambda4151(Arg4150) {
  if (Arg4150.length < 7) return [Shen.type_func, shen_user_lambda4151, 7, Arg4150];
  var Arg4150_0 = Arg4150[0], Arg4150_1 = Arg4150[1], Arg4150_2 = Arg4150[2], Arg4150_3 = Arg4150[3], Arg4150_4 = Arg4150[4], Arg4150_5 = Arg4150[5], Arg4150_6 = Arg4150[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4150_1, Arg4150_3, [], Arg4150_5])),
  (R1 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4150_2, Arg4150_3, [], Arg4150_5])),
  (R2 = Shen.call(Shen.fns["append"], [R0, R1])),
  (R2 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4150_0, Arg4150_3, Arg4150_4, R2, Arg4150_6])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4150_1, Arg4150_3, R0, Arg4150_5, Arg4150_6])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk-expr"], [Arg4150_2, Arg4150_3, R1, Arg4150_5, Arg4150_6])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R2, [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])}, 7, [], "reg-kl.walk-if"];





Shen.fns["reg-kl.walk-cond"] = [Shen.type_func, function shen_user_lambda4166(Arg4165) {
  if (Arg4165.length < 5) return [Shen.type_func, shen_user_lambda4166, 5, Arg4165];
  var Arg4165_0 = Arg4165[0], Arg4165_1 = Arg4165[1], Arg4165_2 = Arg4165[2], Arg4165_3 = Arg4165[3], Arg4165_4 = Arg4165[4];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4165_0))
  ? [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "error: cond failure", []]]
  : (((Shen.is_type(Arg4165_0, Shen.type_cons) && (Shen.is_type(Arg4165_0[1], Shen.type_cons) && (Shen.is_type(Arg4165_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4165_0[1][2][2])))))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4165_0[1][2][1], Arg4165_1, [], Arg4165_3])),
  (R1 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4165_0[2], Arg4165_1, [], Arg4165_3])),
  (R0 = Shen.call(Shen.fns["reg-kl.used-vars-aux"], [Arg4165_0[1][1], Arg4165_1, [], Shen.call(Shen.fns["append"], [R0, R1])])),
  (R2 = Shen.call(Shen.fns["reg-kl.walk-cond"], [Arg4165_0[2], Arg4165_1, Arg4165_2, Arg4165_3, Arg4165_4])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-if"], [Arg4165_0[1][1], Arg4165_0[1][2][1], R2, Arg4165_1, R0, R1, Arg4165_4]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-cond"]]);})))}, 5, [], "reg-kl.walk-cond"];





Shen.fns["reg-kl.mk-closure-args-init"] = [Shen.type_func, function shen_user_lambda4173(Arg4172) {
  if (Arg4172.length < 3) return [Shen.type_func, shen_user_lambda4173, 3, Arg4172];
  var Arg4172_0 = Arg4172[0], Arg4172_1 = Arg4172[1], Arg4172_2 = Arg4172[2];
  var R0;
  return ((Shen.empty$question$(Arg4172_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4172_2]);})
  : ((Shen.is_type(Arg4172_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["reg-kl.mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl.var-idx"], [Arg4172_0[1], Arg4172_1])])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-closure-args-init"], [Arg4172_0[2], Arg4172_1, [Shen.type_cons, R0, Arg4172_2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-closure-args-init"]]);})))}, 3, [], "reg-kl.mk-closure-args-init"];





Shen.fns["reg-kl.mk-closure-env"] = [Shen.type_func, function shen_user_lambda4177(Arg4176) {
  if (Arg4176.length < 2) return [Shen.type_func, shen_user_lambda4177, 2, Arg4176];
  var Arg4176_0 = Arg4176[0], Arg4176_1 = Arg4176[1];
  return ((Shen.empty$question$(Arg4176_0))
  ? Arg4176_1
  : ((Shen.is_type(Arg4176_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-closure-env"], [Arg4176_0[2], [Shen.type_cons, [Shen.type_cons, Arg4176_0[1], Shen.call(Shen.fns["reg-kl.new-var-idx"], [Arg4176_0[1], Arg4176_1])], Arg4176_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-closure-env"]]);})))}, 2, [], "reg-kl.mk-closure-env"];





Shen.fns["reg-kl.mk-closure-list"] = [Shen.type_func, function shen_user_lambda4184(Arg4183) {
  if (Arg4183.length < 5) return [Shen.type_func, shen_user_lambda4184, 5, Arg4183];
  var Arg4183_0 = Arg4183[0], Arg4183_1 = Arg4183[1], Arg4183_2 = Arg4183[2], Arg4183_3 = Arg4183[3], Arg4183_4 = Arg4183[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-closure-env"], [Arg4183_3, []])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-args-init"], [Arg4183_3, Arg4183_2, []])),
  (R0 = Shen.call(Shen.fns["reg-kl.mk-function-kl"], [Arg4183_0, Arg4183_1, R0, Arg4183_4])),
  [Shen.type_cons, R1, [Shen.type_cons, R0, []]])}, 5, [], "reg-kl.mk-closure-list"];





Shen.fns["reg-kl.walk-lambda-aux"] = [Shen.type_func, function shen_user_lambda4192(Arg4191) {
  if (Arg4191.length < 6) return [Shen.type_func, shen_user_lambda4192, 6, Arg4191];
  var Arg4191_0 = Arg4191[0], Arg4191_1 = Arg4191[1], Arg4191_2 = Arg4191[2], Arg4191_3 = Arg4191[3], Arg4191_4 = Arg4191[4], Arg4191_5 = Arg4191[5];
  var R0, R1;
  return (((Shen.is_type(Arg4191_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4191_1[1])) && (Shen.is_type(Arg4191_1[2], Shen.type_cons) && (Shen.is_type(Arg4191_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg4191_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-lambda-aux"], [Arg4191_1[2][1], Arg4191_1[2][2][1], [Shen.type_cons, Arg4191_0, Arg4191_2], Arg4191_3, Arg4191_4, Arg4191_5]);})
  : ((R0 = Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4191_0, Arg4191_2]])),
  (R1 = Shen.call(Shen.fns["append"], [Arg4191_4, Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4191_0, R0]])])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-list"], [R1, Arg4191_1, Arg4191_3, Arg4191_4, Arg4191_5])),
  [Shen.type_cons, [Shen.type_symbol, "shen-closure"], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [Arg4191_5]), R1]]]))}, 6, [], "reg-kl.walk-lambda-aux"];





Shen.fns["reg-kl.walk-lambda"] = [Shen.type_func, function shen_user_lambda4199(Arg4198) {
  if (Arg4198.length < 5) return [Shen.type_func, shen_user_lambda4199, 5, Arg4198];
  var Arg4198_0 = Arg4198[0], Arg4198_1 = Arg4198[1], Arg4198_2 = Arg4198[2], Arg4198_3 = Arg4198[3], Arg4198_4 = Arg4198[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [[Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg4198_0, [Shen.type_cons, Arg4198_1, []]]], Arg4198_3])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4198_4]), 0])),
  (R0 = Shen.call(Shen.fns["reg-kl.walk-lambda-aux"], [Arg4198_0, Arg4198_1, Arg4198_2, Arg4198_3, R0, R1])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4198_4, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R1])]),
  R0)}, 5, [], "reg-kl.walk-lambda"];





Shen.fns["reg-kl.walk-freeze"] = [Shen.type_func, function shen_user_lambda4205(Arg4204) {
  if (Arg4204.length < 4) return [Shen.type_func, shen_user_lambda4205, 4, Arg4204];
  var Arg4204_0 = Arg4204[0], Arg4204_1 = Arg4204[1], Arg4204_2 = Arg4204[2], Arg4204_3 = Arg4204[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4204_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-closure-list"], [Arg4204_2, Arg4204_0, Arg4204_1, Arg4204_2, R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4204_3, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "shen-freeze"], [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [R0]), R1]])}, 4, [], "reg-kl.walk-freeze"];





Shen.fns["reg-kl.lift-defun"] = [Shen.type_func, function shen_user_lambda4211(Arg4210) {
  if (Arg4210.length < 4) return [Shen.type_func, shen_user_lambda4211, 4, Arg4210];
  var Arg4210_0 = Arg4210[0], Arg4210_1 = Arg4210[1], Arg4210_2 = Arg4210[2], Arg4210_3 = Arg4210[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4210_3]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-kl"], [Arg4210_0, Arg4210_1, Arg4210_2, [], R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4210_3, [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]]),
  [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, Arg4210_0, []]])}, 4, [], "reg-kl.lift-defun"];





Shen.fns["reg-kl.walk-expr"] = [Shen.type_func, function shen_user_lambda4249(Arg4248) {
  if (Arg4248.length < 5) return [Shen.type_func, shen_user_lambda4249, 5, Arg4248];
  var Arg4248_0 = Arg4248[0], Arg4248_1 = Arg4248[1], Arg4248_2 = Arg4248[2], Arg4248_3 = Arg4248[3], Arg4248_4 = Arg4248[4];
  return (((Shen.is_type(Arg4248_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4248_0[1])) && (Shen.is_type(Arg4248_0[2], Shen.type_cons) && (Shen.is_type(Arg4248_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4248_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4248_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-let"], [Arg4248_0[2][1], Arg4248_0[2][2][1], Arg4248_0[2][2][2][1], Arg4248_1, Arg4248_2, Arg4248_3, Arg4248_4]);})
  : (((Shen.is_type(Arg4248_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4248_0[1])) && (Shen.is_type(Arg4248_0[2], Shen.type_cons) && (Shen.is_type(Arg4248_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4248_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4248_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-if"], [Arg4248_0[2][1], Arg4248_0[2][2][1], Arg4248_0[2][2][2][1], Arg4248_1, Arg4248_2, Arg4248_3, Arg4248_4]);})
  : (((Shen.is_type(Arg4248_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg4248_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-cond"], [Arg4248_0[2], Arg4248_1, Arg4248_2, Arg4248_3, Arg4248_4]);})
  : (((Shen.is_type(Arg4248_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4248_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-do"], [Arg4248_0[2], Arg4248_1, Arg4248_2, Arg4248_3, Arg4248_4]);})
  : (((Shen.is_type(Arg4248_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4248_0[1])) && (Shen.is_type(Arg4248_0[2], Shen.type_cons) && (Shen.is_type(Arg4248_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4248_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-lambda"], [Arg4248_0[2][1], Arg4248_0[2][2][1], [], Arg4248_1, Arg4248_4]);})
  : (((Shen.is_type(Arg4248_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg4248_0[1])) && (Shen.is_type(Arg4248_0[2], Shen.type_cons) && Shen.empty$question$(Arg4248_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-freeze"], [Arg4248_0[2][1], Arg4248_1, Arg4248_2, Arg4248_4]);})
  : (((Shen.is_type(Arg4248_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4248_0[1])) && (Shen.is_type(Arg4248_0[2], Shen.type_cons) && (Shen.is_type(Arg4248_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4248_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4248_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.lift-defun"], [Arg4248_0[2][1], Arg4248_0[2][2][1], Arg4248_0[2][2][2][1], Arg4248_4]);})
  : ((Shen.is_type(Arg4248_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-apply"], [Arg4248_0, Arg4248_1, Arg4248_2, Arg4248_3, Arg4248_4]);})
  : (((Shen.call(Shen.fns["reg-kl.var-defined?"], [Arg4248_0, Arg4248_1]) && Shen.is_type(Arg4248_0, Shen.type_symbol)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-shen-get-reg"], [Shen.call(Shen.fns["reg-kl.var-idx"], [Arg4248_0, Arg4248_1])]);})
  : Arg4248_0)))))))))}, 5, [], "reg-kl.walk-expr"];





Shen.fns["reg-kl.mk-defun-env"] = [Shen.type_func, function shen_user_lambda4254(Arg4253) {
  if (Arg4253.length < 3) return [Shen.type_func, shen_user_lambda4254, 3, Arg4253];
  var Arg4253_0 = Arg4253[0], Arg4253_1 = Arg4253[1], Arg4253_2 = Arg4253[2];
  return ((Shen.empty$question$(Arg4253_0))
  ? Arg4253_2
  : ((Shen.is_type(Arg4253_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.mk-defun-env"], [Arg4253_0[2], (Arg4253_1 - 1), [Shen.type_cons, [Shen.type_cons, Arg4253_0[1], Arg4253_1], Arg4253_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.mk-defun-env"]]);})))}, 3, [], "reg-kl.mk-defun-env"];





Shen.fns["reg-kl.mk-function-kl"] = [Shen.type_func, function shen_user_lambda4260(Arg4259) {
  if (Arg4259.length < 4) return [Shen.type_func, shen_user_lambda4260, 4, Arg4259];
  var Arg4259_0 = Arg4259[0], Arg4259_1 = Arg4259[1], Arg4259_2 = Arg4259[2], Arg4259_3 = Arg4259[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.remove-duplicates"], [Arg4259_0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-env"], [R0, -1, Arg4259_2])),
  (R0 = Shen.call(Shen.fns["reg-kl.used-vars"], [Arg4259_1, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-expr"], [Arg4259_1, R1, R0, [], Arg4259_3]);}))}, 4, [], "reg-kl.mk-function-kl"];





Shen.fns["reg-kl.defun-hdr"] = [Shen.type_func, function shen_user_lambda4263(Arg4262) {
  if (Arg4262.length < 1) return [Shen.type_func, shen_user_lambda4263, 1, Arg4262];
  var Arg4262_0 = Arg4262[0];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4262_0)))
  ? [Shen.type_symbol, "shen-toplevel"]
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4262_0)))
  ? [Shen.type_symbol, "shen-func"]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.defun-hdr"]]);})))}, 1, [], "reg-kl.defun-hdr"];





Shen.fns["reg-kl.mk-defun-kl"] = [Shen.type_func, function shen_user_lambda4271(Arg4270) {
  if (Arg4270.length < 6) return [Shen.type_func, shen_user_lambda4271, 6, Arg4270];
  var Arg4270_0 = Arg4270[0], Arg4270_1 = Arg4270[1], Arg4270_2 = Arg4270[2], Arg4270_3 = Arg4270[3], Arg4270_4 = Arg4270[4], Arg4270_5 = Arg4270[5];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Shen.call(Shen.fns["reg-kl.context-toplevel"], [Arg4270_5]), 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-function-kl"], [Arg4270_1, Arg4270_2, Arg4270_3, R0])),
  Shen.call(Shen.fns["reg-kl.context-toplevel->"], [Arg4270_5, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])]),
  [Shen.type_cons, Shen.call(Shen.fns["reg-kl.defun-hdr"], [Arg4270_4]), [Shen.type_cons, Arg4270_0, [Shen.type_cons, Arg4270_1, [Shen.type_cons, Shen.call(Shen.fns["reg-kl.context-nregs"], [R0]), [Shen.type_cons, R1, []]]]]])}, 6, [], "reg-kl.mk-defun-kl"];





Shen.fns["reg-kl.walk-defun"] = [Shen.type_func, function shen_user_lambda4278(Arg4277) {
  if (Arg4277.length < 5) return [Shen.type_func, shen_user_lambda4278, 5, Arg4277];
  var Arg4277_0 = Arg4277[0], Arg4277_1 = Arg4277[1], Arg4277_2 = Arg4277[2], Arg4277_3 = Arg4277[3], Arg4277_4 = Arg4277[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.mk-context"], [Arg4277_4, 0])),
  (R1 = Shen.call(Shen.fns["reg-kl.mk-defun-kl"], [Arg4277_0, Arg4277_1, Arg4277_2, [], Arg4277_3, R0])),
  [Shen.type_cons, R1, Shen.call(Shen.fns["reg-kl.context-toplevel"], [R0])])}, 5, [], "reg-kl.walk-defun"];





Shen.fns["reg-kl.walk-toplevel"] = [Shen.type_func, function shen_user_lambda4287(Arg4286) {
  if (Arg4286.length < 3) return [Shen.type_func, shen_user_lambda4287, 3, Arg4286];
  var Arg4286_0 = Arg4286[0], Arg4286_1 = Arg4286[1], Arg4286_2 = Arg4286[2];
  var R0;
  return (((Shen.is_type(Arg4286_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4286_0[1])) && (Shen.is_type(Arg4286_0[2], Shen.type_cons) && (Shen.is_type(Arg4286_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4286_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4286_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-defun"], [Arg4286_0[2][1], Arg4286_0[2][2][1], Arg4286_0[2][2][2][1], false, Arg4286_2]);})
  : ((Shen.is_type(Arg4286_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "reg-kl.shen-toplevel-"]])),
  (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-defun"], [R0, [], Arg4286_0, true, Arg4286_2]);}))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4286_1)))
  ? Arg4286_2
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4286_1)))
  ? [Shen.type_cons, Arg4286_0, Arg4286_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-toplevel"]]);})))))}, 3, [], "reg-kl.walk-toplevel"];





Shen.fns["reg-kl.walk-aux"] = [Shen.type_func, function shen_user_lambda4294(Arg4293) {
  if (Arg4293.length < 3) return [Shen.type_func, shen_user_lambda4294, 3, Arg4293];
  var Arg4293_0 = Arg4293[0], Arg4293_1 = Arg4293[1], Arg4293_2 = Arg4293[2];
  return ((Shen.empty$question$(Arg4293_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4293_2]);})
  : ((Shen.is_type(Arg4293_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-aux"], [Arg4293_0[2], Arg4293_1, Shen.call(Shen.fns["reg-kl.walk-toplevel"], [Arg4293_0[1], Arg4293_1, Arg4293_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "reg-kl.walk-aux"]]);})))}, 3, [], "reg-kl.walk-aux"];





Shen.fns["reg-kl.walk"] = [Shen.type_func, function shen_user_lambda4298(Arg4297) {
  if (Arg4297.length < 2) return [Shen.type_func, shen_user_lambda4298, 2, Arg4297];
  var Arg4297_0 = Arg4297[0], Arg4297_1 = Arg4297[1];
  return (function() {
  return Shen.call_tail(Shen.fns["reg-kl.walk-aux"], [Arg4297_0, Arg4297_1, []]);})}, 2, [], "reg-kl.walk"];





Shen.call_toplevel(function shen_toplevel4890(Arg4888) {
  if (Arg4888.length < 0) return [Shen.type_func, shen_toplevel4890, 0, Arg4888];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "js.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<datatype-rules>"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_symbol, "shen.datatype-error"]])]);})});




Shen.fns["js.mk-context"] = [Shen.type_func, function shen_user_lambda4896(Arg4895) {
  if (Arg4895.length < 4) return [Shen.type_func, shen_user_lambda4896, 4, Arg4895];
  var Arg4895_0 = Arg4895[0], Arg4895_1 = Arg4895[1], Arg4895_2 = Arg4895[2], Arg4895_3 = Arg4895[3];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg4895_0, Shen.call(Shen.fns["@v"], [Arg4895_1, Shen.call(Shen.fns["@v"], [Arg4895_2, Shen.call(Shen.fns["@v"], [Arg4895_3, Shen.vector(0)])])])]);})}, 4, [], "js.mk-context"];





Shen.fns["js.context-varname->"] = [Shen.type_func, function shen_user_lambda4900(Arg4899) {
  if (Arg4899.length < 2) return [Shen.type_func, shen_user_lambda4900, 2, Arg4899];
  var Arg4899_0 = Arg4899[0], Arg4899_1 = Arg4899[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4899_0, 4, Arg4899_1]);})}, 2, [], "js.context-varname->"];





Shen.fns["js.context-argname->"] = [Shen.type_func, function shen_user_lambda4904(Arg4903) {
  if (Arg4903.length < 2) return [Shen.type_func, shen_user_lambda4904, 2, Arg4903];
  var Arg4903_0 = Arg4903[0], Arg4903_1 = Arg4903[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4903_0, 3, Arg4903_1]);})}, 2, [], "js.context-argname->"];





Shen.fns["js.context-toplevel->"] = [Shen.type_func, function shen_user_lambda4908(Arg4907) {
  if (Arg4907.length < 2) return [Shen.type_func, shen_user_lambda4908, 2, Arg4907];
  var Arg4907_0 = Arg4907[0], Arg4907_1 = Arg4907[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4907_0, 2, Arg4907_1]);})}, 2, [], "js.context-toplevel->"];





Shen.fns["js.context-nregs->"] = [Shen.type_func, function shen_user_lambda4912(Arg4911) {
  if (Arg4911.length < 2) return [Shen.type_func, shen_user_lambda4912, 2, Arg4911];
  var Arg4911_0 = Arg4911[0], Arg4911_1 = Arg4911[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4911_0, 1, Arg4911_1]);})}, 2, [], "js.context-nregs->"];





Shen.fns["js.context-varname"] = [Shen.type_func, function shen_user_lambda4915(Arg4914) {
  if (Arg4914.length < 1) return [Shen.type_func, shen_user_lambda4915, 1, Arg4914];
  var Arg4914_0 = Arg4914[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4914_0, 4]);})}, 1, [], "js.context-varname"];





Shen.fns["js.context-argname"] = [Shen.type_func, function shen_user_lambda4918(Arg4917) {
  if (Arg4917.length < 1) return [Shen.type_func, shen_user_lambda4918, 1, Arg4917];
  var Arg4917_0 = Arg4917[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4917_0, 3]);})}, 1, [], "js.context-argname"];





Shen.fns["js.context-toplevel"] = [Shen.type_func, function shen_user_lambda4921(Arg4920) {
  if (Arg4920.length < 1) return [Shen.type_func, shen_user_lambda4921, 1, Arg4920];
  var Arg4920_0 = Arg4920[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4920_0, 2]);})}, 1, [], "js.context-toplevel"];





Shen.fns["js.context-nregs"] = [Shen.type_func, function shen_user_lambda4924(Arg4923) {
  if (Arg4923.length < 1) return [Shen.type_func, shen_user_lambda4924, 1, Arg4923];
  var Arg4923_0 = Arg4923[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4923_0, 1]);})}, 1, [], "js.context-nregs"];





Shen.fns["js.max"] = [Shen.type_func, function shen_user_lambda4932(Arg4931) {
  if (Arg4931.length < 2) return [Shen.type_func, shen_user_lambda4932, 2, Arg4931];
  var Arg4931_0 = Arg4931[0], Arg4931_1 = Arg4931[1];
  return (((Arg4931_0 > Arg4931_1))
  ? Arg4931_0
  : Arg4931_1)}, 2, [], "js.max"];





Shen.fns["js.str-js-from-shen*"] = [Shen.type_func, function shen_user_lambda4936(Arg4935) {
  if (Arg4935.length < 2) return [Shen.type_func, shen_user_lambda4936, 2, Arg4935];
  var Arg4935_0 = Arg4935[0], Arg4935_1 = Arg4935[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg4935_0)))
  ? Arg4935_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("-", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("_", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("$", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("'", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$quote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("`", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$bquote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("/", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$slash$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("*", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$asterisk$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("+", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$plus$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("%", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$percent$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("=", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$eq$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("?", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$question$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("!", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$excl$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$(">", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$gt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("<", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$lt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$(".", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$dot$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("|", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$bar$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("#", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$sharp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("~", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$tilde$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$(":", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$colon$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$(";", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$sc$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("@", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$at$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("&", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$amp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("{", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$cbraceopen$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]) && Shen.unwind_tail(Shen.$eq$("}", Arg4935_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + "$cbraceclose$")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg4935_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg4935_0), (Arg4935_1 + Arg4935_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-js-from-shen*"]]);})))))))))))))))))))))))))))}, 2, [], "js.str-js-from-shen*"];





Shen.fns["js.str-js-from-shen"] = [Shen.type_func, function shen_user_lambda4939(Arg4938) {
  if (Arg4938.length < 1) return [Shen.type_func, shen_user_lambda4939, 1, Arg4938];
  var Arg4938_0 = Arg4938[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Arg4938_0, ""]);})}, 1, [], "js.str-js-from-shen"];





Shen.fns["js.sym-js-from-shen"] = [Shen.type_func, function shen_user_lambda4942(Arg4941) {
  if (Arg4941.length < 1) return [Shen.type_func, shen_user_lambda4942, 1, Arg4941];
  var Arg4941_0 = Arg4941[0];
  return (function() {
  return Shen.intern(Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg4941_0)]));})}, 1, [], "js.sym-js-from-shen"];





Shen.fns["js.backslash"] = [Shen.type_func, function shen_user_lambda4944(Arg4943) {
  if (Arg4943.length < 0) return [Shen.type_func, shen_user_lambda4944, 0, Arg4943];
  return (function() {
  return Shen.n_$gt$string(92);})}, 0, [], "js.backslash"];





Shen.fns["js.dquote"] = [Shen.type_func, function shen_user_lambda4946(Arg4945) {
  if (Arg4945.length < 0) return [Shen.type_func, shen_user_lambda4946, 0, Arg4945];
  return (function() {
  return Shen.n_$gt$string(34);})}, 0, [], "js.dquote"];





Shen.fns["js.esc-string"] = [Shen.type_func, function shen_user_lambda4950(Arg4949) {
  if (Arg4949.length < 2) return [Shen.type_func, shen_user_lambda4950, 2, Arg4949];
  var Arg4949_0 = Arg4949[0], Arg4949_1 = Arg4949[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg4949_0)))
  ? Arg4949_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4949_0]) && (Shen.unwind_tail(Shen.$eq$(Arg4949_0[0], Shen.call(Shen.fns["js.backslash"], []))) || Shen.unwind_tail(Shen.$eq$(Arg4949_0[0], Shen.call(Shen.fns["js.dquote"], []))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4949_0), (Arg4949_1 + (Shen.call(Shen.fns["js.backslash"], []) + Arg4949_0[0]))]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4949_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg4949_0[0]), 10))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4949_0), (Arg4949_1 + "\\x0a")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg4949_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg4949_0[0]), 13))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4949_0), (Arg4949_1 + "\\x0d")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg4949_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg4949_0), (Arg4949_1 + Arg4949_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.esc-string"]]);}))))))}, 2, [], "js.esc-string"];





Shen.fns["js.func-name"] = [Shen.type_func, function shen_user_lambda4953(Arg4952) {
  if (Arg4952.length < 1) return [Shen.type_func, shen_user_lambda4953, 1, Arg4952];
  var Arg4952_0 = Arg4952[0];
  return ((Shen.is_type(Arg4952_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4952_0]);})
  : Arg4952_0)}, 1, [], "js.func-name"];





Shen.fns["js.intfunc-name"] = [Shen.type_func, function shen_user_lambda4956(Arg4955) {
  if (Arg4955.length < 1) return [Shen.type_func, shen_user_lambda4956, 1, Arg4955];
  var Arg4955_0 = Arg4955[0];
  return (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg4955_0]) || (Shen.globals["shen.*installing-kl*"])))
  ? (function() {
  return Shen.intern(("Shen." + Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg4955_0)])));})
  : ((Shen.is_type(Arg4955_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4955_0]);})
  : Arg4955_0))}, 1, [], "js.intfunc-name"];





Shen.call_toplevel(function shen_toplevel4959(Arg4957) {
  if (Arg4957.length < 0) return [Shen.type_func, shen_toplevel4959, 0, Arg4957];
  return (Shen.globals["js.int-funcs"] = [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], []], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], []]], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "write-byte"], []]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]], [Shen.type_cons, [Shen.type_symbol, "address->"], []]], []]]])});




Shen.call_toplevel(function shen_toplevel4962(Arg4960) {
  if (Arg4960.length < 0) return [Shen.type_func, shen_toplevel4962, 0, Arg4960];
  return (Shen.globals["js.internals"] = [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "write-byte"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]]]]]]]]]]]]]]]]]]]]]]]])});




Shen.call_toplevel(function shen_toplevel4965(Arg4963) {
  if (Arg4963.length < 0) return [Shen.type_func, shen_toplevel4965, 0, Arg4963];
  return (Shen.globals["js.tail-internals"] = [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]])});




Shen.fns["js.int-func-args*"] = [Shen.type_func, function shen_user_lambda4977(Arg4976) {
  if (Arg4976.length < 2) return [Shen.type_func, shen_user_lambda4977, 2, Arg4976];
  var Arg4976_0 = Arg4976[0], Arg4976_1 = Arg4976[1];
  return ((Shen.empty$question$(Arg4976_1))
  ? []
  : (((Shen.is_type(Arg4976_1, Shen.type_cons) && (Shen.is_type(Arg4976_1[1], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg4976_0, Arg4976_1[1][2]]))))
  ? Arg4976_1[1][1]
  : (((Shen.is_type(Arg4976_1, Shen.type_cons) && Shen.is_type(Arg4976_1[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg4976_0, Arg4976_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-func-args*"]]);}))))}, 2, [], "js.int-func-args*"];





Shen.fns["js.int-func-args"] = [Shen.type_func, function shen_user_lambda4980(Arg4979) {
  if (Arg4979.length < 1) return [Shen.type_func, shen_user_lambda4980, 1, Arg4979];
  var Arg4979_0 = Arg4979[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg4979_0, (Shen.globals["js.int-funcs"])]);})}, 1, [], "js.int-func-args"];





Shen.fns["js.int-func?"] = [Shen.type_func, function shen_user_lambda4983(Arg4982) {
  if (Arg4982.length < 1) return [Shen.type_func, shen_user_lambda4983, 1, Arg4982];
  var Arg4982_0 = Arg4982[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg4982_0)))
  ? true
  : (!Shen.empty$question$(Shen.call(Shen.fns["js.int-func-args"], [Arg4982_0]))))}, 1, [], "js.int-func?"];





Shen.fns["js.esc-obj"] = [Shen.type_func, function shen_user_lambda4986(Arg4985) {
  if (Arg4985.length < 1) return [Shen.type_func, shen_user_lambda4986, 1, Arg4985];
  var Arg4985_0 = Arg4985[0];
  return (((typeof(Arg4985_0) == 'string'))
  ? ("\"" + (Shen.call(Shen.fns["js.esc-string"], [Arg4985_0, ""]) + "\""))
  : ((Shen.is_type(Arg4985_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg4985_0]);})
  : (function() {
  return Shen.simple_error(("Object " + Shen.call(Shen.fns["shen.app"], [Arg4985_0, " cannot be escaped", [Shen.type_symbol, "shen.r"]])));})))}, 1, [], "js.esc-obj"];





Shen.fns["js.str-join*"] = [Shen.type_func, function shen_user_lambda4991(Arg4990) {
  if (Arg4990.length < 3) return [Shen.type_func, shen_user_lambda4991, 3, Arg4990];
  var Arg4990_0 = Arg4990[0], Arg4990_1 = Arg4990[1], Arg4990_2 = Arg4990[2];
  return ((Shen.empty$question$(Arg4990_0))
  ? Arg4990_2
  : (((Shen.is_type(Arg4990_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("", Arg4990_2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4990_0[2], Arg4990_1, Shen.call(Shen.fns["shen.app"], [Arg4990_0[1], "", [Shen.type_symbol, "shen.a"]])]);})
  : ((Shen.is_type(Arg4990_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4990_0[2], Arg4990_1, (Arg4990_2 + (Arg4990_1 + Shen.call(Shen.fns["shen.app"], [Arg4990_0[1], "", [Shen.type_symbol, "shen.a"]])))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-join*"]]);}))))}, 3, [], "js.str-join*"];





Shen.fns["js.str-join"] = [Shen.type_func, function shen_user_lambda4995(Arg4994) {
  if (Arg4994.length < 2) return [Shen.type_func, shen_user_lambda4995, 2, Arg4994];
  var Arg4994_0 = Arg4994[0], Arg4994_1 = Arg4994[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg4994_0, Arg4994_1, ""]);})}, 2, [], "js.str-join"];





Shen.fns["js.arg-list"] = [Shen.type_func, function shen_user_lambda4998(Arg4997) {
  if (Arg4997.length < 1) return [Shen.type_func, shen_user_lambda4998, 1, Arg4997];
  var Arg4997_0 = Arg4997[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join"], [Arg4997_0, ", "]);})}, 1, [], "js.arg-list"];





Shen.fns["js.arg-name"] = [Shen.type_func, function shen_user_lambda5002(Arg5001) {
  if (Arg5001.length < 2) return [Shen.type_func, shen_user_lambda5002, 2, Arg5001];
  var Arg5001_0 = Arg5001[0], Arg5001_1 = Arg5001[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg5001_1]), ("_" + Shen.call(Shen.fns["shen.app"], [Arg5001_0, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.arg-name"];





Shen.fns["js.tail-call-ret"] = [Shen.type_func, function shen_user_lambda5005(Arg5004) {
  if (Arg5004.length < 1) return [Shen.type_func, shen_user_lambda5005, 1, Arg5004];
  var Arg5004_0 = Arg5004[0];
  return ("(function() {\x0a  return " + Shen.call(Shen.fns["shen.app"], [Arg5004_0, ";})", [Shen.type_symbol, "shen.a"]]))}, 1, [], "js.tail-call-ret"];





Shen.fns["js.tail-call-expr"] = [Shen.type_func, function shen_user_lambda5009(Arg5008) {
  if (Arg5008.length < 2) return [Shen.type_func, shen_user_lambda5009, 2, Arg5008];
  var Arg5008_0 = Arg5008[0], Arg5008_1 = Arg5008[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5008_0, false, Arg5008_1]);})}, 2, [], "js.tail-call-expr"];





Shen.fns["js.cond-case"] = [Shen.type_func, function shen_user_lambda5013(Arg5012) {
  if (Arg5012.length < 2) return [Shen.type_func, shen_user_lambda5013, 2, Arg5012];
  var Arg5012_0 = Arg5012[0], Arg5012_1 = Arg5012[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-expr"], [Arg5012_0, Arg5012_1]);})}, 2, [], "js.cond-case"];





Shen.fns["js.emit-cond*"] = [Shen.type_func, function shen_user_lambda5018(Arg5017) {
  if (Arg5017.length < 3) return [Shen.type_func, shen_user_lambda5018, 3, Arg5017];
  var Arg5017_0 = Arg5017[0], Arg5017_1 = Arg5017[1], Arg5017_2 = Arg5017[2];
  return ((Shen.empty$question$(Arg5017_0))
  ? (function() {
  return Shen.simple_error("cond failure: no default branch");})
  : (((Shen.is_type(Arg5017_0, Shen.type_cons) && (Shen.is_type(Arg5017_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5017_0[1][1])) && (Shen.is_type(Arg5017_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5017_0[1][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5017_0[1][2][1], Arg5017_1, Arg5017_2]);})
  : (((Shen.is_type(Arg5017_0, Shen.type_cons) && (Shen.is_type(Arg5017_0[1], Shen.type_cons) && (Shen.is_type(Arg5017_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5017_0[1][2][2])))))
  ? ("((" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.cond-case"], [Arg5017_0[1][1], Arg5017_2]), (")\x0a  ? " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5017_0[1][2][1], Arg5017_1, Arg5017_2]), ("\x0a  : " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-cond*"], [Arg5017_0[2], Arg5017_1, Arg5017_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-cond*"]]);}))))}, 3, [], "js.emit-cond*"];





Shen.fns["js.emit-cond"] = [Shen.type_func, function shen_user_lambda5023(Arg5022) {
  if (Arg5022.length < 3) return [Shen.type_func, shen_user_lambda5023, 3, Arg5022];
  var Arg5022_0 = Arg5022[0], Arg5022_1 = Arg5022[1], Arg5022_2 = Arg5022[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond*"], [Arg5022_0, Arg5022_1, Arg5022_2]);})}, 3, [], "js.emit-cond"];





Shen.fns["js.emit-trap-error"] = [Shen.type_func, function shen_user_lambda5029(Arg5028) {
  if (Arg5028.length < 4) return [Shen.type_func, shen_user_lambda5029, 4, Arg5028];
  var Arg5028_0 = Arg5028[0], Arg5028_1 = Arg5028[1], Arg5028_2 = Arg5028[2], Arg5028_3 = Arg5028[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5028_2)))
  ? ((R0 = ("function() {return " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5028_0, false, Arg5028_3]), ";}", [Shen.type_symbol, "shen.a"]]))),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5028_1, false, Arg5028_3])),
  ("Shen.trap_error(" + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5028_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.emit-trap-error"], [Arg5028_0, Arg5028_1, false, Arg5028_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-trap-error"]]);})))}, 4, [], "js.emit-trap-error"];





Shen.fns["js.predicate-op"] = [Shen.type_func, function shen_user_lambda5073(Arg5072) {
  if (Arg5072.length < 4) return [Shen.type_func, shen_user_lambda5073, 4, Arg5072];
  var Arg5072_0 = Arg5072[0], Arg5072_1 = Arg5072[1], Arg5072_2 = Arg5072[2], Arg5072_3 = Arg5072[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5072_0)) && (typeof(Arg5072_1) == 'number')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5072_0)) && (typeof(Arg5072_1) == 'string')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5072_0)) && Shen.unwind_tail(Shen.$eq$(true, Arg5072_1))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5072_0)) && Shen.unwind_tail(Shen.$eq$(false, Arg5072_1))))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5072_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, Arg5072_1, []], Arg5072_2, Arg5072_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5072_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5072_1, false, Arg5072_3]), ") == 'string')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5072_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5072_1, false, Arg5072_3]), ") == 'number')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol?"], Arg5072_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5072_1, false, Arg5072_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_symbol", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons?"], Arg5072_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5072_1, false, Arg5072_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_cons", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tuple?"], Arg5072_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5072_1, false, Arg5072_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.fns['shen.tuple']", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector?"], Arg5072_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, Arg5072_1, []], Arg5072_2, Arg5072_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "empty?"], Arg5072_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5072_1, []], Arg5072_2, Arg5072_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "absvector?"], Arg5072_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, Arg5072_1, []], Arg5072_2, Arg5072_3]);})
  : Shen.fail_obj)))))))))))))}, 4, [], "js.predicate-op"];





Shen.fns["js.math-op"] = [Shen.type_func, function shen_user_lambda5103(Arg5102) {
  if (Arg5102.length < 4) return [Shen.type_func, shen_user_lambda5103, 4, Arg5102];
  var Arg5102_0 = Arg5102[0], Arg5102_1 = Arg5102[1], Arg5102_2 = Arg5102[2], Arg5102_3 = Arg5102[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5102_0)) && (Shen.is_type(Arg5102_1, Shen.type_cons) && (Shen.is_type(Arg5102_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5102_1[2][2]) && ((typeof(Arg5102_1[1]) == 'number') && (typeof(Arg5102_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5102_1[1] + Arg5102_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5102_0)) && (Shen.is_type(Arg5102_1, Shen.type_cons) && (Shen.is_type(Arg5102_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5102_1[2][2]) && ((typeof(Arg5102_1[1]) == 'number') && (typeof(Arg5102_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5102_1[1] - Arg5102_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5102_0)) && (Shen.is_type(Arg5102_1, Shen.type_cons) && (Shen.is_type(Arg5102_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5102_1[2][2]) && ((typeof(Arg5102_1[1]) == 'number') && (typeof(Arg5102_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5102_1[1] * Arg5102_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/"], Arg5102_0)) && (Shen.is_type(Arg5102_1, Shen.type_cons) && (Shen.is_type(Arg5102_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5102_1[2][2]) && ((typeof(Arg5102_1[1]) == 'number') && (typeof(Arg5102_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5102_1[1] / Arg5102_1[2][1]));})
  : (((Shen.is_type(Arg5102_1, Shen.type_cons) && (Shen.is_type(Arg5102_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5102_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5102_0, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], []]]]]])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5102_1[1], false, Arg5102_3]), (" " + Shen.call(Shen.fns["shen.app"], [Arg5102_0, (" " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5102_1[2][1], false, Arg5102_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))}, 4, [], "js.math-op"];





Shen.fns["js.equality-op"] = [Shen.type_func, function shen_user_lambda5126(Arg5125) {
  if (Arg5125.length < 3) return [Shen.type_func, shen_user_lambda5126, 3, Arg5125];
  var Arg5125_0 = Arg5125[0], Arg5125_1 = Arg5125[1], Arg5125_2 = Arg5125[2];
  return (((Shen.is_type(Arg5125_0, Shen.type_cons) && (Shen.is_type(Arg5125_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5125_0[2][2]) && ((typeof(Arg5125_0[1]) == 'number') && (typeof(Arg5125_0[2][1]) == 'number'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5125_0[1], Arg5125_0[2][1])));})
  : (((Shen.is_type(Arg5125_0, Shen.type_cons) && (Shen.is_type(Arg5125_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5125_0[2][2]) && ((typeof(Arg5125_0[1]) == 'string') && (typeof(Arg5125_0[2][1]) == 'string'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5125_0[1], Arg5125_0[2][1])));})
  : (((Shen.is_type(Arg5125_0, Shen.type_cons) && (Shen.is_type(Arg5125_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5125_0[2][2]) && (Shen.boolean$question$(Arg5125_0[1]) && Shen.boolean$question$(Arg5125_0[2][1]))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5125_0[1], Arg5125_0[2][1])));})
  : (((Shen.is_type(Arg5125_0, Shen.type_cons) && (Shen.is_type(Arg5125_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5125_0[2][1]) && Shen.empty$question$(Arg5125_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5125_0[1], []], Arg5125_1, Arg5125_2]);})
  : (((Shen.is_type(Arg5125_0, Shen.type_cons) && (Shen.empty$question$(Arg5125_0[1]) && (Shen.is_type(Arg5125_0[2], Shen.type_cons) && Shen.empty$question$(Arg5125_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], Arg5125_0[2], Arg5125_1, Arg5125_2]);})
  : (((Shen.is_type(Arg5125_0, Shen.type_cons) && (Shen.is_type(Arg5125_0[2], Shen.type_cons) && Shen.empty$question$(Arg5125_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "="], Arg5125_0, Arg5125_1, Arg5125_2]);})
  : Shen.fail_obj))))))}, 3, [], "js.equality-op"];





Shen.fns["js.order-op"] = [Shen.type_func, function shen_user_lambda5149(Arg5148) {
  if (Arg5148.length < 4) return [Shen.type_func, shen_user_lambda5149, 4, Arg5148];
  var Arg5148_0 = Arg5148[0], Arg5148_1 = Arg5148[1], Arg5148_2 = Arg5148[2], Arg5148_3 = Arg5148[3];
  var R0, R1;
  return (((Shen.is_type(Arg5148_1, Shen.type_cons) && (Shen.is_type(Arg5148_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5148_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5148_0, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<="], []]]]]])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5148_1[1], false, Arg5148_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5148_1[2][1], false, Arg5148_3])),
  ("(" + Shen.call(Shen.fns["shen.app"], [R0, (" " + Shen.call(Shen.fns["shen.app"], [Arg5148_0, (" " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : Shen.fail_obj)}, 4, [], "js.order-op"];





Shen.fns["js.logic-op"] = [Shen.type_func, function shen_user_lambda5193(Arg5192) {
  if (Arg5192.length < 4) return [Shen.type_func, shen_user_lambda5193, 4, Arg5192];
  var Arg5192_0 = Arg5192[0], Arg5192_1 = Arg5192[1], Arg5192_2 = Arg5192[2], Arg5192_3 = Arg5192[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5192_0)) && (Shen.is_type(Arg5192_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5192_1[1])) && Shen.empty$question$(Arg5192_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5192_0)) && (Shen.is_type(Arg5192_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5192_1[1])) && Shen.empty$question$(Arg5192_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5192_0)) && (Shen.is_type(Arg5192_1, Shen.type_cons) && Shen.empty$question$(Arg5192_1[2]))))
  ? ("(!" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5192_1[1], false, Arg5192_3]), ")", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5192_0)) && (Shen.is_type(Arg5192_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5192_1[1])) && (Shen.is_type(Arg5192_1[2], Shen.type_cons) && Shen.empty$question$(Arg5192_1[2][2]))))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5192_0)) && (Shen.is_type(Arg5192_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5192_1[1])) && (Shen.is_type(Arg5192_1[2], Shen.type_cons) && Shen.empty$question$(Arg5192_1[2][2]))))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5192_0)) && (Shen.is_type(Arg5192_1, Shen.type_cons) && (Shen.is_type(Arg5192_1[2], Shen.type_cons) && Shen.empty$question$(Arg5192_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5192_1[1], false, Arg5192_3]), (" && " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5192_1[2][1], false, Arg5192_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5192_0)) && (Shen.is_type(Arg5192_1, Shen.type_cons) && (Shen.is_type(Arg5192_1[2], Shen.type_cons) && Shen.empty$question$(Arg5192_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5192_1[1], false, Arg5192_3]), (" || " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5192_1[2][1], false, Arg5192_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))))}, 4, [], "js.logic-op"];





Shen.fns["js.emit-set*"] = [Shen.type_func, function shen_user_lambda5199(Arg5198) {
  if (Arg5198.length < 4) return [Shen.type_func, shen_user_lambda5199, 4, Arg5198];
  var Arg5198_0 = Arg5198[0], Arg5198_1 = Arg5198[1], Arg5198_2 = Arg5198[2], Arg5198_3 = Arg5198[3];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5198_3)))
  ? ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5198_0)])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [Arg5198_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5198_3)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5198_0, false, Arg5198_2])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("[1]] = " + Shen.call(Shen.fns["shen.app"], [Arg5198_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-set*"]]);})))}, 4, [], "js.emit-set*"];





Shen.fns["js.emit-set"] = [Shen.type_func, function shen_user_lambda5204(Arg5203) {
  if (Arg5203.length < 3) return [Shen.type_func, shen_user_lambda5204, 3, Arg5203];
  var Arg5203_0 = Arg5203[0], Arg5203_1 = Arg5203[1], Arg5203_2 = Arg5203[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-set*"], [Arg5203_0, Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5203_1, false, Arg5203_2]), Arg5203_2, Shen.is_type(Arg5203_0, Shen.type_symbol)]);})}, 3, [], "js.emit-set"];





Shen.fns["js.emit-value"] = [Shen.type_func, function shen_user_lambda5209(Arg5208) {
  if (Arg5208.length < 3) return [Shen.type_func, shen_user_lambda5209, 3, Arg5208];
  var Arg5208_0 = Arg5208[0], Arg5208_1 = Arg5208[1], Arg5208_2 = Arg5208[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5208_2)))
  ? ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5208_0)]), "])", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5208_2)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5208_0, false, Arg5208_1])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, "[1]])", [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-value"]]);})))}, 3, [], "js.emit-value"];





Shen.fns["js.basic-op"] = [Shen.type_func, function shen_user_lambda5263(Arg5262) {
  if (Arg5262.length < 4) return [Shen.type_func, shen_user_lambda5263, 4, Arg5262];
  var Arg5262_0 = Arg5262[0], Arg5262_1 = Arg5262[1], Arg5262_2 = Arg5262[2], Arg5262_3 = Arg5262[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("true", Arg5262_1[1])) && Shen.empty$question$(Arg5262_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("false", Arg5262_1[1])) && Shen.empty$question$(Arg5262_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.empty$question$(Arg5262_1[2]) && (typeof(Arg5262_1[1]) == 'string')))))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Arg5262_1[1]]), "]", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && Shen.empty$question$(Arg5262_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "intern"], Arg5262_1, Arg5262_2, Arg5262_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.is_type(Arg5262_1[2], Shen.type_cons) && Shen.empty$question$(Arg5262_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[1], false, Arg5262_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[2][1], false, Arg5262_3])),
  ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.is_type(Arg5262_1[2], Shen.type_cons) && Shen.empty$question$(Arg5262_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[1], false, Arg5262_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[2][1], false, Arg5262_3])),
  ("[Shen.fns['shen.tuple'], " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.is_type(Arg5262_1[2], Shen.type_cons) && Shen.empty$question$(Arg5262_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set"], [Arg5262_1[1], Arg5262_1[2][1], Arg5262_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "value"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && Shen.empty$question$(Arg5262_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-value"], [Arg5262_1[1], Arg5262_3, Shen.is_type(Arg5262_1[1], Shen.type_symbol)]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "thaw"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && Shen.empty$question$(Arg5262_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-thaw"], [Arg5262_1[1], Arg5262_2, Arg5262_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && Shen.empty$question$(Arg5262_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[1], true, Arg5262_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "hd"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && Shen.empty$question$(Arg5262_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[1], false, Arg5262_3]), "[1]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tl"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && Shen.empty$question$(Arg5262_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[1], false, Arg5262_3]), "[2]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.is_type(Arg5262_1[2], Shen.type_cons) && Shen.empty$question$(Arg5262_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[1], false, Arg5262_3]), (" + " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[2][1], false, Arg5262_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pos"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.is_type(Arg5262_1[2], Shen.type_cons) && Shen.empty$question$(Arg5262_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[1], false, Arg5262_3]), ("[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[2][1], false, Arg5262_3]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "address->"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.is_type(Arg5262_1[2], Shen.type_cons) && (Shen.is_type(Arg5262_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg5262_1[2][2][2]))))))
  ? ("Shen.absvector_set(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[1], false, Arg5262_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[2][1], false, Arg5262_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[2][2][1], false, Arg5262_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-address"], Arg5262_0)) && (Shen.is_type(Arg5262_1, Shen.type_cons) && (Shen.is_type(Arg5262_1[2], Shen.type_cons) && Shen.empty$question$(Arg5262_1[2][2])))))
  ? ("Shen.absvector_ref(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[1], false, Arg5262_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5262_1[2][1], false, Arg5262_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj))))))))))))))))}, 4, [], "js.basic-op"];





Shen.fns["js.int-funcall*"] = [Shen.type_func, function shen_user_lambda5270(Arg5269) {
  if (Arg5269.length < 5) return [Shen.type_func, shen_user_lambda5270, 5, Arg5269];
  var Arg5269_0 = Arg5269[0], Arg5269_1 = Arg5269[1], Arg5269_2 = Arg5269[2], Arg5269_3 = Arg5269[3], Arg5269_4 = Arg5269[4];
  var R0;
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg5269_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5269_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5269_0, Arg5269_1, false, false, Arg5269_4]);})
  : (((Shen.unwind_tail(Shen.$eq$(true, Arg5269_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5269_3))))
  ? ((R0 = Shen.call(Shen.fns["js.int-funcall*"], [Arg5269_0, Arg5269_1, false, false, Arg5269_4])),
  ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5269_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5269_3))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5272(Arg5271) {
  if (Arg5271.length < 2) return [Shen.type_func, shen_user_lambda5272, 2, Arg5271];
  var Arg5271_0 = Arg5271[0], Arg5271_1 = Arg5271[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5271_1, false, Arg5271_0]);})}, 2, [Arg5269_4], undefined], Arg5269_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.intfunc-name"], [Arg5269_0]), ("(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);}))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5269_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5269_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.int-funcall*"], [Arg5269_0, Arg5269_1, false, false, Arg5269_4])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-funcall*"]]);})))))}, 5, [], "js.int-funcall*"];





Shen.fns["js.int-funcall"] = [Shen.type_func, function shen_user_lambda5278(Arg5277) {
  if (Arg5277.length < 4) return [Shen.type_func, shen_user_lambda5278, 4, Arg5277];
  var Arg5277_0 = Arg5277[0], Arg5277_1 = Arg5277[1], Arg5277_2 = Arg5277[2], Arg5277_3 = Arg5277[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["element?"], [Arg5277_0, (Shen.globals["js.tail-internals"])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5277_0, Arg5277_1, R0, Arg5277_2, Arg5277_3]);}))}, 4, [], "js.int-funcall"];





Shen.fns["js.int-curry"] = [Shen.type_func, function shen_user_lambda5284(Arg5283) {
  if (Arg5283.length < 4) return [Shen.type_func, shen_user_lambda5284, 4, Arg5283];
  var Arg5283_0 = Arg5283[0], Arg5283_1 = Arg5283[1], Arg5283_2 = Arg5283[2], Arg5283_3 = Arg5283[3];
  var R0, R1;
  return ((R0 = ("Shen.fns[\"" + Shen.call(Shen.fns["shen.app"], [Arg5283_0, "\"][1]", [Shen.type_symbol, "shen.a"]]))),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5286(Arg5285) {
  if (Arg5285.length < 2) return [Shen.type_func, shen_user_lambda5286, 2, Arg5285];
  var Arg5285_0 = Arg5285[0], Arg5285_1 = Arg5285[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5285_1, false, Arg5285_0]);})}, 2, [Arg5283_3], undefined], Arg5283_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [Shen.call(Shen.fns["length"], [Arg5283_1]), R0, R1, []]);}))}, 4, [], "js.int-curry"];





Shen.fns["js.internal-op*"] = [Shen.type_func, function shen_user_lambda5297(Arg5296) {
  if (Arg5296.length < 5) return [Shen.type_func, shen_user_lambda5297, 5, Arg5296];
  var Arg5296_0 = Arg5296[0], Arg5296_1 = Arg5296[1], Arg5296_2 = Arg5296[2], Arg5296_3 = Arg5296[3], Arg5296_4 = Arg5296[4];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg5296_1]), Shen.call(Shen.fns["length"], [Arg5296_2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [Arg5296_0, Arg5296_2, Arg5296_3, Arg5296_4]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.int-curry"], [Arg5296_0, Arg5296_1, Arg5296_2, Arg5296_4]);}))}, 5, [], "js.internal-op*"];





Shen.fns["js.internal-op"] = [Shen.type_func, function shen_user_lambda5303(Arg5302) {
  if (Arg5302.length < 4) return [Shen.type_func, shen_user_lambda5303, 4, Arg5302];
  var Arg5302_0 = Arg5302[0], Arg5302_1 = Arg5302[1], Arg5302_2 = Arg5302[2], Arg5302_3 = Arg5302[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.int-func-args"], [Arg5302_0])),
  Shen.call(Shen.fns["js.intfunc-name"], [Arg5302_0]),
  ((Shen.empty$question$(R0))
  ? Shen.fail_obj
  : (function() {
  return Shen.call_tail(Shen.fns["js.internal-op*"], [Arg5302_0, R0, Arg5302_1, Arg5302_2, Arg5302_3]);})))}, 4, [], "js.internal-op"];





Shen.fns["js.emit-do"] = [Shen.type_func, function shen_user_lambda5309(Arg5308) {
  if (Arg5308.length < 4) return [Shen.type_func, shen_user_lambda5309, 4, Arg5308];
  var Arg5308_0 = Arg5308[0], Arg5308_1 = Arg5308[1], Arg5308_2 = Arg5308[2], Arg5308_3 = Arg5308[3];
  var R0, R1;
  return (((Shen.is_type(Arg5308_0, Shen.type_cons) && Shen.empty$question$(Arg5308_0[2])))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5311(Arg5310) {
  if (Arg5310.length < 2) return [Shen.type_func, shen_user_lambda5311, 2, Arg5310];
  var Arg5310_0 = Arg5310[0], Arg5310_1 = Arg5310[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5310_1, false, Arg5310_0]);})}, 2, [Arg5308_2], undefined], Shen.call(Shen.fns["reverse"], [Arg5308_3])])),
  (R1 = ",\x0a  "),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.str-join"], [R0, R1]), (",\x0a  " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5308_0[1], Arg5308_1, Arg5308_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.is_type(Arg5308_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5308_0[2], Arg5308_1, Arg5308_2, [Shen.type_cons, Arg5308_0[1], Arg5308_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-do"]]);})))}, 4, [], "js.emit-do"];





Shen.fns["js.std-op"] = [Shen.type_func, function shen_user_lambda5337(Arg5336) {
  if (Arg5336.length < 4) return [Shen.type_func, shen_user_lambda5337, 4, Arg5336];
  var Arg5336_0 = Arg5336[0], Arg5336_1 = Arg5336[1], Arg5336_2 = Arg5336[2], Arg5336_3 = Arg5336[3];
  var R0, R1;
  return ((R0 = (new Shen.Freeze([Arg5336_0, Arg5336_1, Arg5336_2, Arg5336_3], function(Arg5338) {
  var Arg5338_0 = Arg5338[0], Arg5338_1 = Arg5338[1], Arg5338_2 = Arg5338[2], Arg5338_3 = Arg5338[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js.math-op"], [Arg5338_0, Arg5338_1, Arg5338_2, Arg5338_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5338_0, Arg5338_1, Arg5338_2, Arg5338_3], function(Arg5340) {
  var Arg5340_0 = Arg5340[0], Arg5340_1 = Arg5340[1], Arg5340_2 = Arg5340[2], Arg5340_3 = Arg5340[3];
  return (function() {
  return ((R4 = Shen.call(Shen.fns["js.logic-op"], [Arg5340_0, Arg5340_1, Arg5340_2, Arg5340_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.order-op"], [Arg5340_0, Arg5340_1, Arg5340_2, Arg5340_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.basic-op"], [Arg5340_0, Arg5340_1, Arg5340_2, Arg5340_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = (new Shen.Freeze([Arg5340_0, Arg5340_1, Arg5340_2, Arg5340_3], function(Arg5342) {
  var Arg5342_0 = Arg5342[0], Arg5342_1 = Arg5342[1], Arg5342_2 = Arg5342[2], Arg5342_3 = Arg5342[3];
  return (function() {
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "trap-error"], Arg5342_0)) && (Shen.is_type(Arg5342_1, Shen.type_cons) && (Shen.is_type(Arg5342_1[2], Shen.type_cons) && Shen.empty$question$(Arg5342_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-trap-error"], [Arg5342_1[1], Arg5342_1[2][1], Arg5342_2, Arg5342_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg5342_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5342_1, Arg5342_2, Arg5342_3, []]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5342_0)) && Shen.empty$question$(Arg5342_1)))
  ? "Shen.fail_obj"
  : Shen.fail_obj)));})}))),
  ((Shen.is_type(Arg5340_0, Shen.type_symbol))
  ? ((R3 = Shen.call(Shen.fns["js.internal-op"], [Arg5340_0, Arg5340_1, Arg5340_2, Arg5340_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4))
  : R4))
  : R4));})}))),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg5338_0)))
  ? ((R3 = Shen.call(Shen.fns["js.equality-op"], [Arg5338_1, Arg5338_2, Arg5338_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4));})}))),
  (((Shen.is_type(Arg5336_1, Shen.type_cons) && Shen.empty$question$(Arg5336_1[2])))
  ? ((R1 = Shen.call(Shen.fns["js.predicate-op"], [Arg5336_0, Arg5336_1[1], Arg5336_2, Arg5336_3])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))}, 4, [], "js.std-op"];





Shen.fns["js.mk-regs-aux"] = [Shen.type_func, function shen_user_lambda5355(Arg5354) {
  if (Arg5354.length < 5) return [Shen.type_func, shen_user_lambda5355, 5, Arg5354];
  var Arg5354_0 = Arg5354[0], Arg5354_1 = Arg5354[1], Arg5354_2 = Arg5354[2], Arg5354_3 = Arg5354[3], Arg5354_4 = Arg5354[4];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5354_1, Arg5354_0)))
  ? Arg5354_4
  : ((R0 = Shen.call(Shen.fns["@s"], [Arg5354_4, Shen.call(Shen.fns["@s"], [Arg5354_3, Shen.call(Shen.fns["@s"], [Shen.str(Shen.call(Shen.fns["js.context-varname"], [Arg5354_2])), Shen.str(Arg5354_0)])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [(Arg5354_0 + 1), Arg5354_1, Arg5354_2, ", ", R0]);})))}, 5, [], "js.mk-regs-aux"];





Shen.fns["js.mk-regs"] = [Shen.type_func, function shen_user_lambda5358(Arg5357) {
  if (Arg5357.length < 1) return [Shen.type_func, shen_user_lambda5358, 1, Arg5357];
  var Arg5357_0 = Arg5357[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [0, Shen.call(Shen.fns["js.context-nregs"], [Arg5357_0]), Arg5357_0, "var ", ""]);})}, 1, [], "js.mk-regs"];





Shen.fns["js.mk-regs-str"] = [Shen.type_func, function shen_user_lambda5361(Arg5360) {
  if (Arg5360.length < 1) return [Shen.type_func, shen_user_lambda5361, 1, Arg5360];
  var Arg5360_0 = Arg5360[0];
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["js.context-nregs"], [Arg5360_0]), 0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-regs"], [Arg5360_0]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 1, [], "js.mk-regs-str"];





Shen.fns["js.mk-args-str-aux"] = [Shen.type_func, function shen_user_lambda5373(Arg5372) {
  if (Arg5372.length < 5) return [Shen.type_func, shen_user_lambda5373, 5, Arg5372];
  var Arg5372_0 = Arg5372[0], Arg5372_1 = Arg5372[1], Arg5372_2 = Arg5372[2], Arg5372_3 = Arg5372[3], Arg5372_4 = Arg5372[4];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5372_1, Arg5372_0)))
  ? Arg5372_4
  : ((R0 = "~A~A~A = ~A[~A]"),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5372_2])),
  (R2 = Shen.call(Shen.fns["js.arg-name"], [Arg5372_1, Arg5372_2])),
  (R2 = Shen.call(Shen.fns["shen.insert"], [Arg5372_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [Arg5372_3, Shen.call(Shen.fns["shen.insert"], [Arg5372_4, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-args-str-aux"], [Arg5372_0, (Arg5372_1 + 1), Arg5372_2, ", ", R2]);})))}, 5, [], "js.mk-args-str-aux"];





Shen.fns["js.mk-args-str"] = [Shen.type_func, function shen_user_lambda5379(Arg5378) {
  if (Arg5378.length < 2) return [Shen.type_func, shen_user_lambda5379, 2, Arg5378];
  var Arg5378_0 = Arg5378[0], Arg5378_1 = Arg5378[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5378_0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-args-str-aux"], [Arg5378_0, 0, Arg5378_1, "var ", ""]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 2, [], "js.mk-args-str"];





Shen.fns["js.emit-func-obj"] = [Shen.type_func, function shen_user_lambda5385(Arg5384) {
  if (Arg5384.length < 4) return [Shen.type_func, shen_user_lambda5385, 4, Arg5384];
  var Arg5384_0 = Arg5384[0], Arg5384_1 = Arg5384[1], Arg5384_2 = Arg5384[2], Arg5384_3 = Arg5384[3];
  var R0, R1;
  return ((((Shen.unwind_tail(Shen.$eq$(Arg5384_3, "")) || Shen.empty$question$(Arg5384_3)))
  ? (R0 = "undefined")
  : (R0 = Arg5384_3)),
  (R1 = Shen.call(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [Arg5384_2, ", "]), "]"])])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], ["S", Shen.call(Shen.fns["@s"], ["h", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], [".", Shen.call(Shen.fns["@s"], ["t", Shen.call(Shen.fns["@s"], ["y", Shen.call(Shen.fns["@s"], ["p", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["_", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["c", Shen.call(Shen.fns["@s"], [",", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [[Shen.type_cons, Arg5384_1, [Shen.type_cons, Shen.str(Arg5384_0), [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]], ", "]), "]"])])])])])])])])])])])])])])])])])]);}))}, 4, [], "js.emit-func-obj"];





Shen.fns["js.emit-func-closure"] = [Shen.type_func, function shen_user_lambda5390(Arg5389) {
  if (Arg5389.length < 3) return [Shen.type_func, shen_user_lambda5390, 3, Arg5389];
  var Arg5389_0 = Arg5389[0], Arg5389_1 = Arg5389[1], Arg5389_2 = Arg5389[2];
  var R0, R1;
  return ((R0 = "[~A, ~A, ~A, ~A]"),
  (R1 = "Shen.type_func"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [Arg5389_2, Shen.call(Shen.fns["shen.insert"], [Arg5389_0, Shen.call(Shen.fns["shen.insert"], [Arg5389_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])]);}))}, 3, [], "js.emit-func-closure"];





Shen.fns["js.emit-func-body"] = [Shen.type_func, function shen_user_lambda5396(Arg5395) {
  if (Arg5395.length < 4) return [Shen.type_func, shen_user_lambda5396, 4, Arg5395];
  var Arg5395_0 = Arg5395[0], Arg5395_1 = Arg5395[1], Arg5395_2 = Arg5395[2], Arg5395_3 = Arg5395[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.func-name"], [Arg5395_0])),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5395_3])),
  (R2 = Shen.call(Shen.fns["js.emit-func-closure"], [Arg5395_1, R0, R1])),
  (R2 = ("if (" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg5395_3]), (".length < " + Shen.call(Shen.fns["shen.app"], [Arg5395_1, (") return " + Shen.call(Shen.fns["shen.app"], [R2, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))),
  (R3 = "function ~A(~A) {~%  ~A;~%  ~A~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5395_2, true, Arg5395_3])),
  (R5 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5395_3])),
  (R6 = Shen.call(Shen.fns["js.mk-args-str"], [Arg5395_1, Arg5395_3])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R5, Shen.call(Shen.fns["shen.insert"], [R6, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.proc-nl"], [R3])])])])])])]);}))}, 4, [], "js.emit-func-body"];





Shen.fns["js.emit-mk-func"] = [Shen.type_func, function shen_user_lambda5402(Arg5401) {
  if (Arg5401.length < 4) return [Shen.type_func, shen_user_lambda5402, 4, Arg5401];
  var Arg5401_0 = Arg5401[0], Arg5401_1 = Arg5401[1], Arg5401_2 = Arg5401[2], Arg5401_3 = Arg5401[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5401_0)])),
  Shen.call(Shen.fns["js.func-name"], [Arg5401_0]),
  (R1 = Shen.call(Shen.fns["length"], [Arg5401_1])),
  (R2 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R2 = Shen.call(Shen.fns["js.emit-func-body"], [R2, R1, Arg5401_2, Arg5401_3])),
  (R2 = Shen.call(Shen.fns["js.emit-func-obj"], [R1, R2, [], R0])),
  ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [R2, ";\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))}, 4, [], "js.emit-mk-func"];





Shen.fns["js.emit-mk-closure"] = [Shen.type_func, function shen_user_lambda5408(Arg5407) {
  if (Arg5407.length < 4) return [Shen.type_func, shen_user_lambda5408, 4, Arg5407];
  var Arg5407_0 = Arg5407[0], Arg5407_1 = Arg5407[1], Arg5407_2 = Arg5407[2], Arg5407_3 = Arg5407[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5407_3])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R2 = (Shen.call(Shen.fns["length"], [Arg5407_1]) + Shen.call(Shen.fns["length"], [Arg5407_0]))),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  (R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [R0, R2, Arg5407_2, R1])),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5407_3, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5410(Arg5409) {
  if (Arg5409.length < 2) return [Shen.type_func, shen_user_lambda5410, 2, Arg5409];
  var Arg5409_0 = Arg5409[0], Arg5409_1 = Arg5409[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5409_1, false, Arg5409_0]);})}, 2, [Arg5407_3], undefined], Arg5407_1])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [R2, R0, R1, []]);}))}, 4, [], "js.emit-mk-closure"];





Shen.fns["js.emit-mk-toplevel"] = [Shen.type_func, function shen_user_lambda5414(Arg5413) {
  if (Arg5413.length < 2) return [Shen.type_func, shen_user_lambda5414, 2, Arg5413];
  var Arg5413_0 = Arg5413[0], Arg5413_1 = Arg5413[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-toplevel"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [R0, 0, Arg5413_0, Arg5413_1])),
  ("Shen.call_toplevel(" + (R0 + ");")))}, 2, [], "js.emit-mk-toplevel"];





Shen.fns["js.emit-freeze"] = [Shen.type_func, function shen_user_lambda5419(Arg5418) {
  if (Arg5418.length < 3) return [Shen.type_func, shen_user_lambda5419, 3, Arg5418];
  var Arg5418_0 = Arg5418[0], Arg5418_1 = Arg5418[1], Arg5418_2 = Arg5418[2];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5418_2])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]]),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5418_2, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5421(Arg5420) {
  if (Arg5420.length < 2) return [Shen.type_func, shen_user_lambda5421, 2, Arg5420];
  var Arg5420_0 = Arg5420[0], Arg5420_1 = Arg5420[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5420_1, false, Arg5420_0]);})}, 2, [Arg5418_2], undefined], Arg5418_0])),
  (R2 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R3 = Shen.call(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5418_1, true, R1])])),
  (R0 = Shen.call(Shen.fns["js.mk-args-str"], [Shen.call(Shen.fns["length"], [R0]), R1])),
  (R4 = "function(~A) {~%  ~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["shen.insert"], [R3, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.insert"], [Shen.call(Shen.fns["js.context-argname"], [R1]), Shen.call(Shen.fns["shen.proc-nl"], [R4])])])])),
  (R3 = "(new Shen.Freeze([~A], ~A))"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.proc-nl"], [R3])])]);}))}, 3, [], "js.emit-freeze"];





Shen.fns["js.emit-thaw"] = [Shen.type_func, function shen_user_lambda5426(Arg5425) {
  if (Arg5425.length < 3) return [Shen.type_func, shen_user_lambda5426, 3, Arg5425];
  var Arg5425_0 = Arg5425[0], Arg5425_1 = Arg5425[1], Arg5425_2 = Arg5425[2];
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5425_1)))
  ? ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-thaw"], [Arg5425_0, true, Arg5425_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5425_1)))
  ? ("Shen.thaw(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5425_0, false, Arg5425_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-thaw"]]);})))}, 3, [], "js.emit-thaw"];





Shen.fns["js.emit-get-arg"] = [Shen.type_func, function shen_user_lambda5430(Arg5429) {
  if (Arg5429.length < 2) return [Shen.type_func, shen_user_lambda5430, 2, Arg5429];
  var Arg5429_0 = Arg5429[0], Arg5429_1 = Arg5429[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.arg-name"], [Arg5429_0, Arg5429_1]);})}, 2, [], "js.emit-get-arg"];





Shen.fns["js.emit-set-reg"] = [Shen.type_func, function shen_user_lambda5435(Arg5434) {
  if (Arg5434.length < 3) return [Shen.type_func, shen_user_lambda5435, 3, Arg5434];
  var Arg5434_0 = Arg5434[0], Arg5434_1 = Arg5434[1], Arg5434_2 = Arg5434[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5434_1, false, Arg5434_2])),
  Shen.call(Shen.fns["js.context-nregs->"], [Arg5434_2, Shen.call(Shen.fns["js.max"], [(Arg5434_0 + 1), Shen.call(Shen.fns["js.context-nregs"], [Arg5434_2])])]),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5434_2]), Shen.call(Shen.fns["shen.app"], [Arg5434_0, (" = " + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])))}, 3, [], "js.emit-set-reg"];





Shen.fns["js.emit-get-reg"] = [Shen.type_func, function shen_user_lambda5439(Arg5438) {
  if (Arg5438.length < 2) return [Shen.type_func, shen_user_lambda5439, 2, Arg5438];
  var Arg5438_0 = Arg5438[0], Arg5438_1 = Arg5438[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5438_1]), Shen.call(Shen.fns["shen.app"], [Arg5438_0, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.emit-get-reg"];





Shen.fns["js.func-arg"] = [Shen.type_func, function shen_user_lambda5443(Arg5442) {
  if (Arg5442.length < 2) return [Shen.type_func, shen_user_lambda5443, 2, Arg5442];
  var Arg5442_0 = Arg5442[0], Arg5442_1 = Arg5442[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5442_1, false, Arg5442_0]);})}, 2, [], "js.func-arg"];





Shen.fns["js.emit-funcall*"] = [Shen.type_func, function shen_user_lambda5449(Arg5448) {
  if (Arg5448.length < 4) return [Shen.type_func, shen_user_lambda5449, 4, Arg5448];
  var Arg5448_0 = Arg5448[0], Arg5448_1 = Arg5448[1], Arg5448_2 = Arg5448[2], Arg5448_3 = Arg5448[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5448_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5451(Arg5450) {
  if (Arg5450.length < 2) return [Shen.type_func, shen_user_lambda5451, 2, Arg5450];
  var Arg5450_0 = Arg5450[0], Arg5450_1 = Arg5450[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5450_1, false, Arg5450_0]);})}, 2, [Arg5448_3], undefined], Arg5448_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R1 = "Shen.call_tail"),
  (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["shen.app"], [R1, ("(" + Shen.call(Shen.fns["shen.app"], [Arg5448_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])]);}))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5448_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5453(Arg5452) {
  if (Arg5452.length < 2) return [Shen.type_func, shen_user_lambda5453, 2, Arg5452];
  var Arg5452_0 = Arg5452[0], Arg5452_1 = Arg5452[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5452_1, false, Arg5452_0]);})}, 2, [Arg5448_3], undefined], Arg5448_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  ("Shen.call(" + Shen.call(Shen.fns["shen.app"], [Arg5448_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-funcall*"]]);})))}, 4, [], "js.emit-funcall*"];





Shen.fns["js.emit-funcall"] = [Shen.type_func, function shen_user_lambda5459(Arg5458) {
  if (Arg5458.length < 4) return [Shen.type_func, shen_user_lambda5459, 4, Arg5458];
  var Arg5458_0 = Arg5458[0], Arg5458_1 = Arg5458[1], Arg5458_2 = Arg5458[2], Arg5458_3 = Arg5458[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5458_0)])),
  (R0 = ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, "]", [Shen.type_symbol, "shen.a"]]))),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R0, Arg5458_1, Arg5458_2, Arg5458_3]);}))}, 4, [], "js.emit-funcall"];





Shen.fns["js.js-from-kl-expr"] = [Shen.type_func, function shen_user_lambda5464(Arg5463) {
  if (Arg5463.length < 3) return [Shen.type_func, shen_user_lambda5464, 3, Arg5463];
  var Arg5463_0 = Arg5463[0], Arg5463_1 = Arg5463[1], Arg5463_2 = Arg5463[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr*"], [Arg5463_0, Arg5463_1, Arg5463_2])),
  (((typeof(R0) == 'string'))
  ? R0
  : (function() {
  return Shen.simple_error(("ERROR: expr " + Shen.call(Shen.fns["shen.app"], [Arg5463_0, (" => " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]])));})))}, 3, [], "js.js-from-kl-expr"];





Shen.fns["js.js-from-kl-expr*"] = [Shen.type_func, function shen_user_lambda5531(Arg5530) {
  if (Arg5530.length < 3) return [Shen.type_func, shen_user_lambda5531, 3, Arg5530];
  var Arg5530_0 = Arg5530[0], Arg5530_1 = Arg5530[1], Arg5530_2 = Arg5530[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg5530_0))
  ? "[]"
  : (((typeof(Arg5530_0) == 'number'))
  ? (function() {
  return Shen.str(Arg5530_0);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg5530_0, Shen.fail_obj)))
  ? "shen_fail_obj"
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5530_0)))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5530_0)))
  ? "false"
  : ((Shen.is_type(Arg5530_0, Shen.type_symbol))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.str(Arg5530_0), "]", [Shen.type_symbol, "shen.s"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bar!"], Arg5530_0)))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], ["|", "]", [Shen.type_symbol, "shen.s"]]))
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2][2]))))))
  ? ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5530_0[2][1], false, Arg5530_2]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5530_0[2][2][1], false, Arg5530_2]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5530_0[2][1], Arg5530_1, Arg5530_2]);})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg5530_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [Arg5530_0[2], Arg5530_1, Arg5530_2]);})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [[Shen.type_cons, [Shen.type_cons, Arg5530_0[2][1], [Shen.type_cons, Arg5530_0[2][2][1], []]], [Shen.type_cons, [Shen.type_cons, true, Arg5530_0[2][2][2]], []]], Arg5530_1, Arg5530_2]);})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2])))))
  ? (function() {
  return Shen.simple_error("Wrong freeze code!");})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-freeze"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-freeze"], [Arg5530_0[2][2][1], Arg5530_0[2][2][2][1], Arg5530_2]);})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-arg"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-arg"], [Arg5530_0[2][1], Arg5530_2]);})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-get-reg"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-reg"], [Arg5530_0[2][1], Arg5530_2]);})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-set-reg!"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set-reg"], [Arg5530_0[2][1], Arg5530_0[2][2][1], Arg5530_2]);})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-func"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-func"], [Arg5530_0[2][1], Arg5530_0[2][2][1], Arg5530_0[2][2][2][2][1], Arg5530_2]);})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-closure"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-closure"], [Arg5530_0[2][1], Arg5530_0[2][2][2][1], Arg5530_0[2][2][2][2][1], Arg5530_2]);})
  : (((Shen.is_type(Arg5530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-toplevel"], Arg5530_0[1])) && (Shen.is_type(Arg5530_0[2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5530_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5530_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-toplevel"], [Arg5530_0[2][2][2][2][1], Arg5530_2]);})
  : ((R0 = (new Shen.Freeze([Arg5530_0, Arg5530_1, Arg5530_2], function(Arg5532) {
  var Arg5532_0 = Arg5532[0], Arg5532_1 = Arg5532[1], Arg5532_2 = Arg5532[2];
  return (function() {
  return (((Shen.is_type(Arg5532_0, Shen.type_cons) && Shen.is_type(Arg5532_0[1], Shen.type_cons)))
  ? ((R3 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5532_0[1], false, Arg5532_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R3, Arg5532_0[2], Arg5532_1, Arg5532_2]);}))
  : ((Shen.is_type(Arg5532_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall"], [Arg5532_0[1], Arg5532_0[2], Arg5532_1, Arg5532_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.esc-obj"], [Arg5532_0]);})));})}))),
  ((Shen.is_type(Arg5530_0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["js.std-op"], [Arg5530_0[1], Arg5530_0[2], Arg5530_1, Arg5530_2])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))))))))))))))))))))}, 3, [], "js.js-from-kl-expr*"];





Shen.fns["js.js-from-kl-toplevel-expr"] = [Shen.type_func, function shen_user_lambda5537(Arg5536) {
  if (Arg5536.length < 2) return [Shen.type_func, shen_user_lambda5537, 2, Arg5536];
  var Arg5536_0 = Arg5536[0], Arg5536_1 = Arg5536[1];
  var R0, R1;
  return (((typeof(Arg5536_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5536_0, false, Arg5536_1]), ";\x0a", [Shen.type_symbol, "shen.a"]]);})
  : ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5536_0, false, Arg5536_1])),
  (R1 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5536_1])),
  (((Shen.call(Shen.fns["js.context-nregs"], [Arg5536_1]) > 0))
  ? ("((function() {\x0a  " + Shen.call(Shen.fns["shen.app"], [R1, ("return " + Shen.call(Shen.fns["shen.app"], [R0, "})());\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [R0, ";", [Shen.type_symbol, "shen.a"]]);}))))}, 2, [], "js.js-from-kl-toplevel-expr"];





Shen.fns["js.js-from-kl-toplevel"] = [Shen.type_func, function shen_user_lambda5557(Arg5556) {
  if (Arg5556.length < 3) return [Shen.type_func, shen_user_lambda5557, 3, Arg5556];
  var Arg5556_0 = Arg5556[0], Arg5556_1 = Arg5556[1], Arg5556_2 = Arg5556[2];
  return (((Shen.is_type(Arg5556_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5556_0[1])) && (Shen.is_type(Arg5556_0[2], Shen.type_cons) && (Shen.is_type(Arg5556_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5556_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.emit-set"], [Arg5556_0[2][1], Arg5556_0[2][2][1], Arg5556_2]), ";\x0a"]);})
  : (((Shen.is_type(Arg5556_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-func"], Arg5556_0[1])) && (Shen.is_type(Arg5556_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5556_1)) && Shen.call(Shen.fns["js.int-func?"], [Arg5556_0[2][1]]))))))
  ? ""
  : (((Shen.is_type(Arg5556_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-func"], Arg5556_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5556_0, true, Arg5556_2]);})
  : (((Shen.is_type(Arg5556_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen-toplevel"], Arg5556_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5556_0, true, Arg5556_2]);})
  : (((Shen.is_type(Arg5556_0, Shen.type_cons) && (Shen.empty$question$(Arg5556_0[2]) && Shen.is_type(Arg5556_0[1], Shen.type_symbol))))
  ? ("Shen.call_toplevel(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5556_0[1])]), ")\x0a", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5556_0, Shen.type_cons) && Shen.empty$question$(Arg5556_0[2])))
  ? (function() {
  return Shen.simple_error(("Unexpected toplevel expression: " + Shen.call(Shen.fns["shen.app"], [Arg5556_0[1], "\x0a", [Shen.type_symbol, "shen.r"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-expr"], [Arg5556_0, Arg5556_2]);})))))))}, 3, [], "js.js-from-kl-toplevel"];





Shen.fns["js.js-from-kl-toplevel-forms"] = [Shen.type_func, function shen_user_lambda5565(Arg5564) {
  if (Arg5564.length < 4) return [Shen.type_func, shen_user_lambda5565, 4, Arg5564];
  var Arg5564_0 = Arg5564[0], Arg5564_1 = Arg5564[1], Arg5564_2 = Arg5564[2], Arg5564_3 = Arg5564[3];
  var R0;
  return ((Shen.empty$question$(Arg5564_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [Arg5564_2]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [Arg5564_3, "\x0a"])])]);})
  : ((Shen.is_type(Arg5564_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-toplevel"], [Arg5564_0[1], Arg5564_1, Arg5564_2])),
  (R0 = (Arg5564_3 + (R0 + "\x0a"))),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-forms"], [Arg5564_0[2], Arg5564_1, Arg5564_2, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.js-from-kl-toplevel-forms"]]);})))}, 4, [], "js.js-from-kl-toplevel-forms"];





Shen.fns["js.js-from-kl*"] = [Shen.type_func, function shen_user_lambda5570(Arg5569) {
  if (Arg5569.length < 3) return [Shen.type_func, shen_user_lambda5570, 3, Arg5569];
  var Arg5569_0 = Arg5569[0], Arg5569_1 = Arg5569[1], Arg5569_2 = Arg5569[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel"], [Arg5569_0, Arg5569_1, Arg5569_2]);})}, 3, [], "js.js-from-kl*"];





Shen.fns["js-from-kl"] = [Shen.type_func, function shen_user_lambda5573(Arg5572) {
  if (Arg5572.length < 1) return [Shen.type_func, shen_user_lambda5573, 1, Arg5572];
  var Arg5572_0 = Arg5572[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (R1 = Shen.call(Shen.fns["reg-kl.walk"], [[Shen.type_cons, Arg5572_0, []], false])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-toplevel-forms"], [R1, (Shen.globals["js.skip-internals"]), R0, ""])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [R0]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [R1, "\x0a"])])]);}))}, 1, [], "js-from-kl"];





Shen.fns["js.js-from-kl-all"] = [Shen.type_func, function shen_user_lambda5576(Arg5575) {
  if (Arg5575.length < 1) return [Shen.type_func, shen_user_lambda5576, 1, Arg5575];
  var Arg5575_0 = Arg5575[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["reg-kl.walk"], [Arg5575_0, false])),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-all"], [R0, (Shen.globals["js.skip-internals"]), R1, ""]);}))}, 1, [], "js.js-from-kl-all"];





Shen.call_toplevel(function shen_toplevel5579(Arg5577) {
  if (Arg5577.length < 0) return [Shen.type_func, shen_toplevel5579, 0, Arg5577];
  return (Shen.globals["js.skip-internals"] = true)});




Shen.fns["js.dump-exprs-to-file"] = [Shen.type_func, function shen_user_lambda5585(Arg5584) {
  if (Arg5584.length < 2) return [Shen.type_func, shen_user_lambda5585, 2, Arg5584];
  var Arg5584_0 = Arg5584[0], Arg5584_1 = Arg5584[1];
  var R0;
  return ((Shen.empty$question$(Arg5584_0))
  ? true
  : ((Shen.is_type(Arg5584_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.kl-from-shen"], [Arg5584_0[1]])),
  (R0 = Shen.call(Shen.fns["js-from-kl"], [R0])),
  (((typeof(R0) == 'string'))
  ? [Shen.type_symbol, "_"]
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a string", [Shen.type_symbol, "shen.a"]]))),
  Shen.call(Shen.fns["pr"], [R0, Arg5584_1]),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-exprs-to-file"], [Arg5584_0[2], Arg5584_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.dump-exprs-to-file"]]);})))}, 2, [], "js.dump-exprs-to-file"];





Shen.fns["js.dump-to-file"] = [Shen.type_func, function shen_user_lambda5589(Arg5588) {
  if (Arg5588.length < 2) return [Shen.type_func, shen_user_lambda5589, 2, Arg5588];
  var Arg5588_0 = Arg5588[0], Arg5588_1 = Arg5588[1];
  var R0;
  return ((R0 = Shen.open(Arg5588_1, [Shen.type_symbol, "out"])),
  Shen.call(Shen.fns["js.dump-exprs-to-file"], [Arg5588_0, R0]),
  Shen.close(R0),
  true)}, 2, [], "js.dump-to-file"];





Shen.fns["js.kl-from-shen"] = [Shen.type_func, function shen_user_lambda5592(Arg5591) {
  if (Arg5591.length < 1) return [Shen.type_func, shen_user_lambda5592, 1, Arg5591];
  var Arg5591_0 = Arg5591[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda5594(Arg5593) {
  if (Arg5593.length < 1) return [Shen.type_func, shen_user_lambda5594, 1, Arg5593];
  var Arg5593_0 = Arg5593[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg5593_0]);})}, 1, [], undefined], Arg5591_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["js.package-contents"], [R0]))
  : (R0 = R0)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.elim-def"], [Shen.call(Shen.fns["shen.proc-input+"], [R0])]);}))}, 1, [], "js.kl-from-shen"];





Shen.fns["js-from-shen"] = [Shen.type_func, function shen_user_lambda5597(Arg5596) {
  if (Arg5596.length < 1) return [Shen.type_func, shen_user_lambda5597, 1, Arg5596];
  var Arg5596_0 = Arg5596[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js-from-kl"], [Shen.call(Shen.fns["js.kl-from-shen"], [Arg5596_0])]);})}, 1, [], "js-from-shen"];





Shen.call_toplevel(function shen_toplevel5600(Arg5598) {
  if (Arg5598.length < 0) return [Shen.type_func, shen_toplevel5600, 0, Arg5598];
  return (Shen.globals["js.*silence*"] = false)});




Shen.fns["js.dump"] = [Shen.type_func, function shen_user_lambda5605(Arg5604) {
  if (Arg5604.length < 3) return [Shen.type_func, shen_user_lambda5605, 3, Arg5604];
  var Arg5604_0 = Arg5604[0], Arg5604_1 = Arg5604[1], Arg5604_2 = Arg5604[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.app"], [Arg5604_2, Shen.call(Shen.fns["shen.app"], [Arg5604_1, ".js", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R1 = Shen.call(Shen.fns["shen.app"], [Arg5604_0, Shen.call(Shen.fns["shen.app"], [Arg5604_1, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])),
  (R2 = Shen.call(Shen.fns["read-file"], [R1])),
  (((Shen.globals["js.*silence*"]))
  ? [Shen.type_symbol, "_"]
  : Shen.call(Shen.fns["shen.prhush"], [("== " + Shen.call(Shen.fns["shen.app"], [R1, (" -> " + Shen.call(Shen.fns["shen.app"], [R0, "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.dump-to-file"], [R2, R0]);}))}, 3, [], "js.dump"];





Shen.call_toplevel(function shen_toplevel5608(Arg5606) {
  if (Arg5606.length < 0) return [Shen.type_func, shen_toplevel5608, 0, Arg5606];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "js.dump"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel5611(Arg5609) {
  if (Arg5609.length < 0) return [Shen.type_func, shen_toplevel5611, 0, Arg5609];
  return ((Shen.trap_error(function() {return (Shen.call(Shen.fns["register-dumper"], []),
  true);}, [Shen.type_func, function shen_user_lambda5613(Arg5612) {
  if (Arg5612.length < 1) return [Shen.type_func, shen_user_lambda5613, 1, Arg5612];
  var Arg5612_0 = Arg5612[0];
  return false}, 1, [], undefined]))
  ? (function() {
  return Shen.call_tail(Shen.fns["register-dumper"], [[Shen.type_symbol, "javascript"], [Shen.type_symbol, "all"], [Shen.type_symbol, "js.dump"]]);})
  : [Shen.type_symbol, "_"])});




Shen.fns["shenjs.repl-split-input-aux"] = [Shen.type_func, function shen_user_lambda5618(Arg5617) {
  if (Arg5617.length < 3) return [Shen.type_func, shen_user_lambda5618, 3, Arg5617];
  var Arg5617_0 = Arg5617[0], Arg5617_1 = Arg5617[1], Arg5617_2 = Arg5617[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5617_0))
  ? Arg5617_2
  : ((Shen.is_type(Arg5617_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg5617_0[1], Arg5617_1]),
  (R1 = Shen.call(Shen.fns["reverse"], [R0])),
  (R2 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R1, [Shen.type_func, function shen_user_lambda5620(Arg5619) {
  if (Arg5619.length < 1) return [Shen.type_func, shen_user_lambda5620, 1, Arg5619];
  var Arg5619_0 = Arg5619[0];
  return Shen.fail_obj}, 1, [], undefined]])),
  (function() {
  return Shen.call_tail(Shen.fns["shenjs.repl-split-input-aux"], [Arg5617_0[2], R0, (((Shen.unwind_tail(Shen.$eq$(R2, Shen.fail_obj)) || Shen.empty$question$(R2)))
  ? Arg5617_2
  : [Shen.fns['shen.tuple'], R1, Arg5617_0[2]])]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shenjs.repl-split-input-aux"]]);})))}, 3, [], "shenjs.repl-split-input-aux"];





Shen.fns["shenjs.repl-split-input"] = [Shen.type_func, function shen_user_lambda5623(Arg5622) {
  if (Arg5622.length < 1) return [Shen.type_func, shen_user_lambda5623, 1, Arg5622];
  var Arg5622_0 = Arg5622[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shenjs.repl-split-input-aux"], [Arg5622_0, [], []]);})}, 1, [], "shenjs.repl-split-input"];










Shen.fns["shen.shen->kl"] = [Shen.type_func, function shen_user_lambda6243(Arg6242) {
  if (Arg6242.length < 2) return [Shen.type_func, shen_user_lambda6243, 2, Arg6242];
  var Arg6242_0 = Arg6242[0], Arg6242_1 = Arg6242[1];
  return (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<define>"], [Shen.type_cons, Arg6242_0, Arg6242_1], [Shen.type_func, function shen_user_lambda6245(Arg6244) {
  if (Arg6244.length < 2) return [Shen.type_func, shen_user_lambda6245, 2, Arg6244];
  var Arg6244_0 = Arg6244[0], Arg6244_1 = Arg6244[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.shen-syntax-error"], [Arg6244_0, Arg6244_1]);})}, 2, [Arg6242_0], undefined]]);})}, 2, [], "shen.shen->kl"];





Shen.fns["shen.shen-syntax-error"] = [Shen.type_func, function shen_user_lambda6247(Arg6246) {
  if (Arg6246.length < 2) return [Shen.type_func, shen_user_lambda6247, 2, Arg6246];
  var Arg6246_0 = Arg6246[0], Arg6246_1 = Arg6246[1];
  return (function() {
  return Shen.simple_error(("syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6246_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6246_1]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})}, 2, [], "shen.shen-syntax-error"];





Shen.fns["shen.<define>"] = [Shen.type_func, function shen_user_lambda6249(Arg6248) {
  if (Arg6248.length < 1) return [Shen.type_func, shen_user_lambda6249, 1, Arg6248];
  var Arg6248_0 = Arg6248[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6248_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<signature>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg6248_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<define>"];





Shen.fns["shen.<name>"] = [Shen.type_func, function shen_user_lambda6251(Arg6250) {
  if (Arg6250.length < 1) return [Shen.type_func, shen_user_lambda6251, 1, Arg6250];
  var Arg6250_0 = Arg6250[0];
  var R0;
  return (((Shen.is_type(Arg6250_0[1], Shen.type_cons))
  ? ((R0 = Arg6250_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6250_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6250_0])])[1], (((Shen.is_type(R0, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.sysfunc?"], [R0]))))
  ? R0
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a legitimate function name.\x0a", [Shen.type_symbol, "shen.a"]])))])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<name>"];





Shen.fns["shen.sysfunc?"] = [Shen.type_func, function shen_user_lambda6253(Arg6252) {
  if (Arg6252.length < 1) return [Shen.type_func, shen_user_lambda6253, 1, Arg6252];
  var Arg6252_0 = Arg6252[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6252_0, Shen.call(Shen.fns["get"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])]);})}, 1, [], "shen.sysfunc?"];





Shen.fns["shen.<signature>"] = [Shen.type_func, function shen_user_lambda6255(Arg6254) {
  if (Arg6254.length < 1) return [Shen.type_func, shen_user_lambda6255, 1, Arg6254];
  var Arg6254_0 = Arg6254[0];
  var R0;
  return ((((Shen.is_type(Arg6254_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg6254_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6254_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6254_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])[1], Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])])]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<signature>"];





Shen.fns["shen.curry-type"] = [Shen.type_func, function shen_user_lambda6257(Arg6256) {
  if (Arg6256.length < 1) return [Shen.type_func, shen_user_lambda6257, 1, Arg6256];
  var Arg6256_0 = Arg6256[0];
  return (((Shen.is_type(Arg6256_0, Shen.type_cons) && (Shen.is_type(Arg6256_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6256_0[2][1])) && (Shen.is_type(Arg6256_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6256_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6256_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6256_0[1], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg6256_0[2][2], []]]]]);})
  : (((Shen.is_type(Arg6256_0, Shen.type_cons) && (Shen.is_type(Arg6256_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6256_0[2][1])) && (Shen.is_type(Arg6256_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6256_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg6256_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg6256_0[1], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, Arg6256_0[2][2], []]]]]);})
  : ((Shen.is_type(Arg6256_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.curry-type"], Arg6256_0]);})
  : Arg6256_0)))}, 1, [], "shen.curry-type"];





Shen.fns["shen.<signature-help>"] = [Shen.type_func, function shen_user_lambda6259(Arg6258) {
  if (Arg6258.length < 1) return [Shen.type_func, shen_user_lambda6259, 1, Arg6258];
  var Arg6258_0 = Arg6258[0];
  var R0, R1;
  return (((Shen.is_type(Arg6258_0[1], Shen.type_cons))
  ? ((R0 = Arg6258_0[1][1]),
  (R1 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg6258_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6258_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "}"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, R0, Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6258_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<signature-help>"];





Shen.fns["shen.<rules>"] = [Shen.type_func, function shen_user_lambda6261(Arg6260) {
  if (Arg6260.length < 1) return [Shen.type_func, shen_user_lambda6261, 1, Arg6260];
  var Arg6260_0 = Arg6260[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6260_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6260_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<rules>"];





Shen.fns["shen.<rule>"] = [Shen.type_func, function shen_user_lambda6263(Arg6262) {
  if (Arg6262.length < 1) return [Shen.type_func, shen_user_lambda6263, 1, Arg6262];
  var Arg6262_0 = Arg6262[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6262_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6262_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6262_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg6262_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<rule>"];





Shen.fns["shen.fail_if"] = [Shen.type_func, function shen_user_lambda6265(Arg6264) {
  if (Arg6264.length < 2) return [Shen.type_func, shen_user_lambda6265, 2, Arg6264];
  var Arg6264_0 = Arg6264[0], Arg6264_1 = Arg6264[1];
  return ((Shen.call(Arg6264_0, [Arg6264_1]))
  ? Shen.fail_obj
  : Arg6264_1)}, 2, [], "shen.fail_if"];





Shen.fns["shen.succeeds?"] = [Shen.type_func, function shen_user_lambda6267(Arg6266) {
  if (Arg6266.length < 1) return [Shen.type_func, shen_user_lambda6267, 1, Arg6266];
  var Arg6266_0 = Arg6266[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6266_0, Shen.fail_obj)))
  ? false
  : true)}, 1, [], "shen.succeeds?"];





Shen.fns["shen.<patterns>"] = [Shen.type_func, function shen_user_lambda6269(Arg6268) {
  if (Arg6268.length < 1) return [Shen.type_func, shen_user_lambda6269, 1, Arg6268];
  var Arg6268_0 = Arg6268[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6268_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<patterns>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6268_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<patterns>"];





Shen.fns["shen.<pattern>"] = [Shen.type_func, function shen_user_lambda6271(Arg6270) {
  if (Arg6270.length < 1) return [Shen.type_func, shen_user_lambda6271, 1, Arg6270];
  var Arg6270_0 = Arg6270[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6270_0[1], Shen.type_cons) && Shen.is_type(Arg6270_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6270_0[1], Shen.type_cons) && Shen.is_type(Arg6270_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6270_0[1], Shen.type_cons) && Shen.is_type(Arg6270_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6270_0[1], Shen.type_cons) && Shen.is_type(Arg6270_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]])])
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6270_0[1], Shen.type_cons) && Shen.is_type(Arg6270_0[1][1], Shen.type_cons)))
  ? (R0 = Shen.call(Shen.fns["shen.snd-or-fail"], [(((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][1]))))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(0, Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])])])[1][1]))))
  ? Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][1], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])])])])])[1], Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]])])
  : Shen.fail_obj)
  : Shen.fail_obj)]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6270_0[1], Shen.type_cons))
  ? ((R0 = Arg6270_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6270_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6270_0])])[1], Shen.call(Shen.fns["shen.constructor-error"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<simple_pattern>"], [Arg6270_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<pattern>"];





Shen.fns["shen.constructor-error"] = [Shen.type_func, function shen_user_lambda6273(Arg6272) {
  if (Arg6272.length < 1) return [Shen.type_func, shen_user_lambda6273, 1, Arg6272];
  var Arg6272_0 = Arg6272[0];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6272_0, " is not a legitimate constructor\x0a", [Shen.type_symbol, "shen.a"]]));})}, 1, [], "shen.constructor-error"];





Shen.fns["shen.<simple_pattern>"] = [Shen.type_func, function shen_user_lambda6275(Arg6274) {
  if (Arg6274.length < 1) return [Shen.type_func, shen_user_lambda6275, 1, Arg6274];
  var Arg6274_0 = Arg6274[0];
  var R0;
  return (((Shen.is_type(Arg6274_0[1], Shen.type_cons))
  ? ((R0 = Arg6274_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "_"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6274_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6274_0])])[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Parse_Y"]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6274_0[1], Shen.type_cons))
  ? ((R0 = Arg6274_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<-"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6274_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6274_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<simple_pattern>"];





Shen.fns["shen.<pattern1>"] = [Shen.type_func, function shen_user_lambda6277(Arg6276) {
  if (Arg6276.length < 1) return [Shen.type_func, shen_user_lambda6277, 1, Arg6276];
  var Arg6276_0 = Arg6276[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6276_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern1>"];





Shen.fns["shen.<pattern2>"] = [Shen.type_func, function shen_user_lambda6279(Arg6278) {
  if (Arg6278.length < 1) return [Shen.type_func, shen_user_lambda6279, 1, Arg6278];
  var Arg6278_0 = Arg6278[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg6278_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<pattern2>"];





Shen.fns["shen.<action>"] = [Shen.type_func, function shen_user_lambda6281(Arg6280) {
  if (Arg6280.length < 1) return [Shen.type_func, shen_user_lambda6281, 1, Arg6280];
  var Arg6280_0 = Arg6280[0];
  var R0;
  return (((Shen.is_type(Arg6280_0[1], Shen.type_cons))
  ? ((R0 = Arg6280_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6280_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6280_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<action>"];





Shen.fns["shen.<guard>"] = [Shen.type_func, function shen_user_lambda6283(Arg6282) {
  if (Arg6282.length < 1) return [Shen.type_func, shen_user_lambda6283, 1, Arg6282];
  var Arg6282_0 = Arg6282[0];
  var R0;
  return (((Shen.is_type(Arg6282_0[1], Shen.type_cons))
  ? ((R0 = Arg6282_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6282_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6282_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<guard>"];





Shen.fns["shen.compile_to_machine_code"] = [Shen.type_func, function shen_user_lambda6285(Arg6284) {
  if (Arg6284.length < 2) return [Shen.type_func, shen_user_lambda6285, 2, Arg6284];
  var Arg6284_0 = Arg6284[0], Arg6284_1 = Arg6284[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compile_to_lambda+"], [Arg6284_0, Arg6284_1])),
  (R0 = Shen.call(Shen.fns["shen.compile_to_kl"], [Arg6284_0, R0])),
  Shen.call(Shen.fns["shen.record-source"], [Arg6284_0, R0]),
  R0)}, 2, [], "shen.compile_to_machine_code"];





Shen.fns["shen.record-source"] = [Shen.type_func, function shen_user_lambda6287(Arg6286) {
  if (Arg6286.length < 2) return [Shen.type_func, shen_user_lambda6287, 2, Arg6286];
  var Arg6286_0 = Arg6286[0], Arg6286_1 = Arg6286[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6286_0, [Shen.type_symbol, "shen.source"], Arg6286_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-source"];





Shen.fns["shen.compile_to_lambda+"] = [Shen.type_func, function shen_user_lambda6289(Arg6288) {
  if (Arg6288.length < 2) return [Shen.type_func, shen_user_lambda6289, 2, Arg6288];
  var Arg6288_0 = Arg6288[0], Arg6288_1 = Arg6288[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.aritycheck"], [Arg6288_0, Arg6288_1])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6291(Arg6290) {
  if (Arg6290.length < 2) return [Shen.type_func, shen_user_lambda6291, 2, Arg6290];
  var Arg6290_0 = Arg6290[0], Arg6290_1 = Arg6290[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_check"], [Arg6290_0, Arg6290_1]);})}, 2, [Arg6288_0], undefined], Arg6288_1]),
  (R0 = Shen.call(Shen.fns["shen.parameters"], [R0])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.strip-protect"], Arg6288_1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.abstract_rule"], R1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6293(Arg6292) {
  if (Arg6292.length < 2) return [Shen.type_func, shen_user_lambda6293, 2, Arg6292];
  var Arg6292_0 = Arg6292[0], Arg6292_1 = Arg6292[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6292_0, Arg6292_1]);})}, 2, [R0], undefined], R1])),
  [Shen.type_cons, R0, [Shen.type_cons, R1, []]])}, 2, [], "shen.compile_to_lambda+"];





Shen.fns["shen.free_variable_check"] = [Shen.type_func, function shen_user_lambda6295(Arg6294) {
  if (Arg6294.length < 2) return [Shen.type_func, shen_user_lambda6295, 2, Arg6294];
  var Arg6294_0 = Arg6294[0], Arg6294_1 = Arg6294[1];
  var R0;
  return (((Shen.is_type(Arg6294_1, Shen.type_cons) && (Shen.is_type(Arg6294_1[2], Shen.type_cons) && Shen.empty$question$(Arg6294_1[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6294_1[1]])),
  (R0 = Shen.call(Shen.fns["shen.extract_free_vars"], [R0, Arg6294_1[2][1]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_warnings"], [Arg6294_0, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.free_variable_check"]]);}))}, 2, [], "shen.free_variable_check"];





Shen.fns["shen.extract_vars"] = [Shen.type_func, function shen_user_lambda6297(Arg6296) {
  if (Arg6296.length < 1) return [Shen.type_func, shen_user_lambda6297, 1, Arg6296];
  var Arg6296_0 = Arg6296[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6296_0]))
  ? [Shen.type_cons, Arg6296_0, []]
  : ((Shen.is_type(Arg6296_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_vars"], [Arg6296_0[1]]), Shen.call(Shen.fns["shen.extract_vars"], [Arg6296_0[2]])]);})
  : []))}, 1, [], "shen.extract_vars"];





Shen.fns["shen.extract_free_vars"] = [Shen.type_func, function shen_user_lambda6299(Arg6298) {
  if (Arg6298.length < 2) return [Shen.type_func, shen_user_lambda6299, 2, Arg6298];
  var Arg6298_0 = Arg6298[0], Arg6298_1 = Arg6298[1];
  return (((Shen.is_type(Arg6298_1, Shen.type_cons) && (Shen.is_type(Arg6298_1[2], Shen.type_cons) && (Shen.empty$question$(Arg6298_1[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6298_1[1], [Shen.type_symbol, "protect"]))))))
  ? []
  : (((Shen.call(Shen.fns["variable?"], [Arg6298_1]) && (!Shen.call(Shen.fns["element?"], [Arg6298_1, Arg6298_0]))))
  ? [Shen.type_cons, Arg6298_1, []]
  : (((Shen.is_type(Arg6298_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg6298_1[1])) && (Shen.is_type(Arg6298_1[2], Shen.type_cons) && (Shen.is_type(Arg6298_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg6298_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6298_1[2][1], Arg6298_0], Arg6298_1[2][2][1]]);})
  : (((Shen.is_type(Arg6298_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6298_1[1])) && (Shen.is_type(Arg6298_1[2], Shen.type_cons) && (Shen.is_type(Arg6298_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6298_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6298_1[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6298_0, Arg6298_1[2][2][1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg6298_1[2][1], Arg6298_0], Arg6298_1[2][2][2][1]])]);})
  : ((Shen.is_type(Arg6298_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6298_0, Arg6298_1[1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [Arg6298_0, Arg6298_1[2]])]);})
  : [])))))}, 2, [], "shen.extract_free_vars"];





Shen.fns["shen.free_variable_warnings"] = [Shen.type_func, function shen_user_lambda6301(Arg6300) {
  if (Arg6300.length < 2) return [Shen.type_func, shen_user_lambda6301, 2, Arg6300];
  var Arg6300_0 = Arg6300[0], Arg6300_1 = Arg6300[1];
  return ((Shen.empty$question$(Arg6300_1))
  ? [Shen.type_symbol, "_"]
  : (function() {
  return Shen.simple_error(("error: the following variables are free in " + Shen.call(Shen.fns["shen.app"], [Arg6300_0, (": " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.list_variables"], [Arg6300_1]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.free_variable_warnings"];





Shen.fns["shen.list_variables"] = [Shen.type_func, function shen_user_lambda6303(Arg6302) {
  if (Arg6302.length < 1) return [Shen.type_func, shen_user_lambda6303, 1, Arg6302];
  var Arg6302_0 = Arg6302[0];
  return (((Shen.is_type(Arg6302_0, Shen.type_cons) && Shen.empty$question$(Arg6302_0[2])))
  ? (Shen.str(Arg6302_0[1]) + ".")
  : ((Shen.is_type(Arg6302_0, Shen.type_cons))
  ? (Shen.str(Arg6302_0[1]) + (", " + Shen.call(Shen.fns["shen.list_variables"], [Arg6302_0[2]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.list_variables"]]);})))}, 1, [], "shen.list_variables"];





Shen.fns["shen.strip-protect"] = [Shen.type_func, function shen_user_lambda6305(Arg6304) {
  if (Arg6304.length < 1) return [Shen.type_func, shen_user_lambda6305, 1, Arg6304];
  var Arg6304_0 = Arg6304[0];
  return (((Shen.is_type(Arg6304_0, Shen.type_cons) && (Shen.is_type(Arg6304_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6304_0[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6304_0[1], [Shen.type_symbol, "protect"]))))))
  ? Arg6304_0[2][1]
  : ((Shen.is_type(Arg6304_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.strip-protect"], [Arg6304_0[1]]), Shen.call(Shen.fns["shen.strip-protect"], [Arg6304_0[2]])]
  : Arg6304_0))}, 1, [], "shen.strip-protect"];





Shen.fns["shen.linearise"] = [Shen.type_func, function shen_user_lambda6307(Arg6306) {
  if (Arg6306.length < 1) return [Shen.type_func, shen_user_lambda6307, 1, Arg6306];
  var Arg6306_0 = Arg6306[0];
  return (((Shen.is_type(Arg6306_0, Shen.type_cons) && (Shen.is_type(Arg6306_0[2], Shen.type_cons) && Shen.empty$question$(Arg6306_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Shen.call(Shen.fns["shen.flatten"], [Arg6306_0[1]]), Arg6306_0[1], Arg6306_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise"]]);}))}, 1, [], "shen.linearise"];





Shen.fns["shen.flatten"] = [Shen.type_func, function shen_user_lambda6309(Arg6308) {
  if (Arg6308.length < 1) return [Shen.type_func, shen_user_lambda6309, 1, Arg6308];
  var Arg6308_0 = Arg6308[0];
  return ((Shen.empty$question$(Arg6308_0))
  ? []
  : ((Shen.is_type(Arg6308_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.flatten"], [Arg6308_0[1]]), Shen.call(Shen.fns["shen.flatten"], [Arg6308_0[2]])]);})
  : [Shen.type_cons, Arg6308_0, []]))}, 1, [], "shen.flatten"];





Shen.fns["shen.linearise_help"] = [Shen.type_func, function shen_user_lambda6311(Arg6310) {
  if (Arg6310.length < 3) return [Shen.type_func, shen_user_lambda6311, 3, Arg6310];
  var Arg6310_0 = Arg6310[0], Arg6310_1 = Arg6310[1], Arg6310_2 = Arg6310[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6310_0))
  ? [Shen.type_cons, Arg6310_1, [Shen.type_cons, Arg6310_2, []]]
  : ((Shen.is_type(Arg6310_0, Shen.type_cons))
  ? (((Shen.call(Shen.fns["variable?"], [Arg6310_0[1]]) && Shen.call(Shen.fns["element?"], [Arg6310_0[1], Arg6310_0[2]])))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [Arg6310_0[1]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6310_0[1], [Shen.type_cons, R0, []]]], [Shen.type_cons, Arg6310_2, []]]]),
  (R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6310_0[1], R0, Arg6310_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6310_0[2], R0, R1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg6310_0[2], Arg6310_1, Arg6310_2]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise_help"]]);})))}, 3, [], "shen.linearise_help"];





Shen.fns["shen.linearise_X"] = [Shen.type_func, function shen_user_lambda6313(Arg6312) {
  if (Arg6312.length < 3) return [Shen.type_func, shen_user_lambda6313, 3, Arg6312];
  var Arg6312_0 = Arg6312[0], Arg6312_1 = Arg6312[1], Arg6312_2 = Arg6312[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6312_2, Arg6312_0)))
  ? Arg6312_1
  : ((Shen.is_type(Arg6312_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg6312_0, Arg6312_1, Arg6312_2[1]])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Arg6312_2[1])))
  ? [Shen.type_cons, Arg6312_2[1], Shen.call(Shen.fns["shen.linearise_X"], [Arg6312_0, Arg6312_1, Arg6312_2[2]])]
  : [Shen.type_cons, R0, Arg6312_2[2]]))
  : Arg6312_2))}, 3, [], "shen.linearise_X"];





Shen.fns["shen.aritycheck"] = [Shen.type_func, function shen_user_lambda6315(Arg6314) {
  if (Arg6314.length < 2) return [Shen.type_func, shen_user_lambda6315, 2, Arg6314];
  var Arg6314_0 = Arg6314[0], Arg6314_1 = Arg6314[1];
  return (((Shen.is_type(Arg6314_1, Shen.type_cons) && (Shen.is_type(Arg6314_1[1], Shen.type_cons) && (Shen.is_type(Arg6314_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6314_1[1][2][2]) && Shen.empty$question$(Arg6314_1[2]))))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6314_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck-name"], [Arg6314_0, Shen.call(Shen.fns["arity"], [Arg6314_0]), Shen.call(Shen.fns["length"], [Arg6314_1[1][1]])]);}))
  : (((Shen.is_type(Arg6314_1, Shen.type_cons) && (Shen.is_type(Arg6314_1[1], Shen.type_cons) && (Shen.is_type(Arg6314_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg6314_1[1][2][2]) && (Shen.is_type(Arg6314_1[2], Shen.type_cons) && (Shen.is_type(Arg6314_1[2][1], Shen.type_cons) && (Shen.is_type(Arg6314_1[2][1][2], Shen.type_cons) && Shen.empty$question$(Arg6314_1[2][1][2][2])))))))))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6314_1[1][1]]), Shen.call(Shen.fns["length"], [Arg6314_1[2][1][1]]))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg6314_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck"], [Arg6314_0, Arg6314_1[2]]);}))
  : (function() {
  return Shen.simple_error(("arity error in " + Shen.call(Shen.fns["shen.app"], [Arg6314_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aritycheck"]]);})))}, 2, [], "shen.aritycheck"];





Shen.fns["shen.aritycheck-name"] = [Shen.type_func, function shen_user_lambda6317(Arg6316) {
  if (Arg6316.length < 3) return [Shen.type_func, shen_user_lambda6317, 3, Arg6316];
  var Arg6316_0 = Arg6316[0], Arg6316_1 = Arg6316[1], Arg6316_2 = Arg6316[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6316_1)))
  ? Arg6316_2
  : ((Shen.unwind_tail(Shen.$eq$(Arg6316_2, Arg6316_1)))
  ? Arg6316_2
  : (Shen.call(Shen.fns["shen.prhush"], [("\x0awarning: changing the arity of " + Shen.call(Shen.fns["shen.app"], [Arg6316_0, " can cause errors.\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  Arg6316_2)))}, 3, [], "shen.aritycheck-name"];





Shen.fns["shen.aritycheck-action"] = [Shen.type_func, function shen_user_lambda6319(Arg6318) {
  if (Arg6318.length < 1) return [Shen.type_func, shen_user_lambda6319, 1, Arg6318];
  var Arg6318_0 = Arg6318[0];
  return ((Shen.is_type(Arg6318_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.aah"], [Arg6318_0[1], Arg6318_0[2]]),
  (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.aritycheck-action"], Arg6318_0]);}))
  : [Shen.type_symbol, "shen.skip"])}, 1, [], "shen.aritycheck-action"];





Shen.fns["shen.aah"] = [Shen.type_func, function shen_user_lambda6321(Arg6320) {
  if (Arg6320.length < 2) return [Shen.type_func, shen_user_lambda6321, 2, Arg6320];
  var Arg6320_0 = Arg6320[0], Arg6320_1 = Arg6320[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["arity"], [Arg6320_0])),
  (R1 = Shen.call(Shen.fns["length"], [Arg6320_1])),
  ((((R0 > -1) && (R1 > R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("warning: " + Shen.call(Shen.fns["shen.app"], [Arg6320_0, (" might not like " + Shen.call(Shen.fns["shen.app"], [R1, (" argument" + Shen.call(Shen.fns["shen.app"], [(((R1 > 1))
  ? "s"
  : ""), ".\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})
  : [Shen.type_symbol, "shen.skip"]))}, 2, [], "shen.aah"];





Shen.fns["shen.abstract_rule"] = [Shen.type_func, function shen_user_lambda6323(Arg6322) {
  if (Arg6322.length < 1) return [Shen.type_func, shen_user_lambda6323, 1, Arg6322];
  var Arg6322_0 = Arg6322[0];
  return (((Shen.is_type(Arg6322_0, Shen.type_cons) && (Shen.is_type(Arg6322_0[2], Shen.type_cons) && Shen.empty$question$(Arg6322_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.abstraction_build"], [Arg6322_0[1], Arg6322_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstract_rule"]]);}))}, 1, [], "shen.abstract_rule"];





Shen.fns["shen.abstraction_build"] = [Shen.type_func, function shen_user_lambda6325(Arg6324) {
  if (Arg6324.length < 2) return [Shen.type_func, shen_user_lambda6325, 2, Arg6324];
  var Arg6324_0 = Arg6324[0], Arg6324_1 = Arg6324[1];
  return ((Shen.empty$question$(Arg6324_0))
  ? Arg6324_1
  : ((Shen.is_type(Arg6324_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6324_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.abstraction_build"], [Arg6324_0[2], Arg6324_1]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.abstraction_build"]]);})))}, 2, [], "shen.abstraction_build"];





Shen.fns["shen.parameters"] = [Shen.type_func, function shen_user_lambda6327(Arg6326) {
  if (Arg6326.length < 1) return [Shen.type_func, shen_user_lambda6327, 1, Arg6326];
  var Arg6326_0 = Arg6326[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6326_0)))
  ? []
  : [Shen.type_cons, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]), Shen.call(Shen.fns["shen.parameters"], [(Arg6326_0 - 1)])])}, 1, [], "shen.parameters"];





Shen.fns["shen.application_build"] = [Shen.type_func, function shen_user_lambda6329(Arg6328) {
  if (Arg6328.length < 2) return [Shen.type_func, shen_user_lambda6329, 2, Arg6328];
  var Arg6328_0 = Arg6328[0], Arg6328_1 = Arg6328[1];
  return ((Shen.empty$question$(Arg6328_0))
  ? Arg6328_1
  : ((Shen.is_type(Arg6328_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg6328_0[2], [Shen.type_cons, Arg6328_1, [Shen.type_cons, Arg6328_0[1], []]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.application_build"]]);})))}, 2, [], "shen.application_build"];





Shen.fns["shen.compile_to_kl"] = [Shen.type_func, function shen_user_lambda6331(Arg6330) {
  if (Arg6330.length < 2) return [Shen.type_func, shen_user_lambda6331, 2, Arg6330];
  var Arg6330_0 = Arg6330[0], Arg6330_1 = Arg6330[1];
  var R0, R1;
  return (((Shen.is_type(Arg6330_1, Shen.type_cons) && (Shen.is_type(Arg6330_1[2], Shen.type_cons) && Shen.empty$question$(Arg6330_1[2][2]))))
  ? (Shen.call(Shen.fns["shen.store-arity"], [Arg6330_0, Shen.call(Shen.fns["length"], [Arg6330_1[1]])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.reduce"], Arg6330_1[2][1]])),
  (R0 = Shen.call(Shen.fns["shen.cond-expression"], [Arg6330_0, Arg6330_1[1], R0])),
  (((Shen.globals["shen.*optimise*"]))
  ? (R1 = Shen.call(Shen.fns["shen.typextable"], [Shen.call(Shen.fns["shen.get-type"], [Arg6330_0]), Arg6330_1[1]]))
  : (R1 = [Shen.type_symbol, "shen.skip"])),
  (((Shen.globals["shen.*optimise*"]))
  ? (R1 = Shen.call(Shen.fns["shen.assign-types"], [Arg6330_1[1], R1, R0]))
  : (R1 = R0)),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg6330_0, [Shen.type_cons, Arg6330_1[1], [Shen.type_cons, R1, []]]]]),
  R1)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compile_to_kl"]]);}))}, 2, [], "shen.compile_to_kl"];





Shen.fns["shen.get-type"] = [Shen.type_func, function shen_user_lambda6333(Arg6332) {
  if (Arg6332.length < 1) return [Shen.type_func, shen_user_lambda6333, 1, Arg6332];
  var Arg6332_0 = Arg6332[0];
  var R0;
  return ((Shen.is_type(Arg6332_0, Shen.type_cons))
  ? [Shen.type_symbol, "shen.skip"]
  : ((R0 = Shen.call(Shen.fns["assoc"], [Arg6332_0, (Shen.globals["shen.*signedfuncs*"])])),
  ((Shen.empty$question$(R0))
  ? [Shen.type_symbol, "shen.skip"]
  : R0[2])))}, 1, [], "shen.get-type"];





Shen.fns["shen.typextable"] = [Shen.type_func, function shen_user_lambda6335(Arg6334) {
  if (Arg6334.length < 2) return [Shen.type_func, shen_user_lambda6335, 2, Arg6334];
  var Arg6334_0 = Arg6334[0], Arg6334_1 = Arg6334[1];
  return (((Shen.is_type(Arg6334_0, Shen.type_cons) && (Shen.is_type(Arg6334_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6334_0[2][1])) && (Shen.is_type(Arg6334_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6334_0[2][2][2]) && Shen.is_type(Arg6334_1, Shen.type_cons)))))))
  ? ((Shen.call(Shen.fns["variable?"], [Arg6334_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typextable"], [Arg6334_0[2][2][1], Arg6334_1[2]]);})
  : [Shen.type_cons, [Shen.type_cons, Arg6334_1[1], Arg6334_0[1]], Shen.call(Shen.fns["shen.typextable"], [Arg6334_0[2][2][1], Arg6334_1[2]])])
  : [])}, 2, [], "shen.typextable"];





Shen.fns["shen.assign-types"] = [Shen.type_func, function shen_user_lambda6337(Arg6336) {
  if (Arg6336.length < 3) return [Shen.type_func, shen_user_lambda6337, 3, Arg6336];
  var Arg6336_0 = Arg6336[0], Arg6336_1 = Arg6336[1], Arg6336_2 = Arg6336[2];
  var R0;
  return (((Shen.is_type(Arg6336_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6336_2[1])) && (Shen.is_type(Arg6336_2[2], Shen.type_cons) && (Shen.is_type(Arg6336_2[2][2], Shen.type_cons) && (Shen.is_type(Arg6336_2[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6336_2[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6336_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [Arg6336_0, Arg6336_1, Arg6336_2[2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [[Shen.type_cons, Arg6336_2[2][1], Arg6336_0], Arg6336_1, Arg6336_2[2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6336_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg6336_2[1])) && (Shen.is_type(Arg6336_2[2], Shen.type_cons) && (Shen.is_type(Arg6336_2[2][2], Shen.type_cons) && Shen.empty$question$(Arg6336_2[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg6336_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [[Shen.type_cons, Arg6336_2[2][1], Arg6336_0], Arg6336_1, Arg6336_2[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6336_2, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg6336_2[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "cond"], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6339(Arg6338) {
  if (Arg6338.length < 3) return [Shen.type_func, shen_user_lambda6339, 3, Arg6338];
  var Arg6338_0 = Arg6338[0], Arg6338_1 = Arg6338[1], Arg6338_2 = Arg6338[2];
  return [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [Arg6338_0, Arg6338_1, Arg6338_2[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [Arg6338_0, Arg6338_1, Arg6338_2[2][1]]), []]]}, 3, [Arg6336_0, Arg6336_1], undefined], Arg6336_2[2]])]
  : ((Shen.is_type(Arg6336_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.typextable"], [Shen.call(Shen.fns["shen.get-type"], [Arg6336_2[1]]), Arg6336_2[2]])),
  [Shen.type_cons, Arg6336_2[1], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6341(Arg6340) {
  if (Arg6340.length < 4) return [Shen.type_func, shen_user_lambda6341, 4, Arg6340];
  var Arg6340_0 = Arg6340[0], Arg6340_1 = Arg6340[1], Arg6340_2 = Arg6340[2], Arg6340_3 = Arg6340[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.assign-types"], [Arg6340_0, Shen.call(Shen.fns["append"], [Arg6340_1, Arg6340_2]), Arg6340_3]);})}, 4, [Arg6336_0, Arg6336_1, R0], undefined], Arg6336_2[2]])])
  : ((R0 = Shen.call(Shen.fns["assoc"], [Arg6336_2, Arg6336_1])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6336_2, [Shen.type_cons, R0[2], []]]]
  : ((Shen.call(Shen.fns["element?"], [Arg6336_2, Arg6336_0]))
  ? Arg6336_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.atom-type"], [Arg6336_2]);}))))))))}, 3, [], "shen.assign-types"];





Shen.fns["shen.atom-type"] = [Shen.type_func, function shen_user_lambda6343(Arg6342) {
  if (Arg6342.length < 1) return [Shen.type_func, shen_user_lambda6343, 1, Arg6342];
  var Arg6342_0 = Arg6342[0];
  return (((typeof(Arg6342_0) == 'string'))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6342_0, [Shen.type_cons, [Shen.type_symbol, "string"], []]]]
  : (((typeof(Arg6342_0) == 'number'))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6342_0, [Shen.type_cons, [Shen.type_symbol, "number"], []]]]
  : ((Shen.boolean$question$(Arg6342_0))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6342_0, [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]
  : ((Shen.is_type(Arg6342_0, Shen.type_symbol))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg6342_0, [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]
  : Arg6342_0))))}, 1, [], "shen.atom-type"];





Shen.fns["shen.store-arity"] = [Shen.type_func, function shen_user_lambda6345(Arg6344) {
  if (Arg6344.length < 2) return [Shen.type_func, shen_user_lambda6345, 2, Arg6344];
  var Arg6344_0 = Arg6344[0], Arg6344_1 = Arg6344[1];
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6344_0, [Shen.type_symbol, "arity"], Arg6344_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.store-arity"];





Shen.fns["shen.reduce"] = [Shen.type_func, function shen_user_lambda6347(Arg6346) {
  if (Arg6346.length < 1) return [Shen.type_func, shen_user_lambda6347, 1, Arg6346];
  var Arg6346_0 = Arg6346[0];
  var R0;
  return ((Shen.globals["shen.*teststack*"] = []),
  (R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6346_0])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "shen.tests"], Shen.call(Shen.fns["reverse"], [(Shen.globals["shen.*teststack*"])])]], [Shen.type_cons, R0, []]])}, 1, [], "shen.reduce"];





Shen.fns["shen.reduce_help"] = [Shen.type_func, function shen_user_lambda6349(Arg6348) {
  if (Arg6348.length < 1) return [Shen.type_func, shen_user_lambda6349, 1, Arg6348];
  var Arg6348_0 = Arg6348[0];
  var R0;
  return (((Shen.is_type(Arg6348_0, Shen.type_cons) && (Shen.is_type(Arg6348_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6348_0[1][1])) && (Shen.is_type(Arg6348_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6348_0[1][2][1][1])) && (Shen.is_type(Arg6348_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6348_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][2][2]) && (Shen.is_type(Arg6348_0[2], Shen.type_cons) && Shen.empty$question$(Arg6348_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "cons?"], Arg6348_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6348_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6348_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6348_0[2][1], Arg6348_0[1][2][1], Arg6348_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6348_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6348_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6348_0, Shen.type_cons) && (Shen.is_type(Arg6348_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6348_0[1][1])) && (Shen.is_type(Arg6348_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg6348_0[1][2][1][1])) && (Shen.is_type(Arg6348_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6348_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][2][2]) && (Shen.is_type(Arg6348_0[2], Shen.type_cons) && Shen.empty$question$(Arg6348_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "tuple?"], Arg6348_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6348_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6348_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6348_0[2][1], Arg6348_0[1][2][1], Arg6348_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], Arg6348_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], Arg6348_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6348_0, Shen.type_cons) && (Shen.is_type(Arg6348_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6348_0[1][1])) && (Shen.is_type(Arg6348_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Arg6348_0[1][2][1][1])) && (Shen.is_type(Arg6348_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6348_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][2][2]) && (Shen.is_type(Arg6348_0[2], Shen.type_cons) && Shen.empty$question$(Arg6348_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+vector?"], Arg6348_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6348_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6348_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6348_0[2][1], Arg6348_0[1][2][1], Arg6348_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hdv"], Arg6348_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlv"], Arg6348_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6348_0, Shen.type_cons) && (Shen.is_type(Arg6348_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6348_0[1][1])) && (Shen.is_type(Arg6348_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6348_0[1][2][1][1])) && (Shen.is_type(Arg6348_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6348_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][2][2]) && (Shen.is_type(Arg6348_0[2], Shen.type_cons) && Shen.empty$question$(Arg6348_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+string?"], Arg6348_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6348_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg6348_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6348_0[2][1], Arg6348_0[1][2][1], Arg6348_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, Arg6348_0[2][1], [Shen.type_cons, 0, []]]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlstr"], Arg6348_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg6348_0, Shen.type_cons) && (Shen.is_type(Arg6348_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6348_0[1][1])) && (Shen.is_type(Arg6348_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][2][2]) && (Shen.is_type(Arg6348_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[2][2]) && (!Shen.call(Shen.fns["variable?"], [Arg6348_0[1][2][1]])))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6348_0[1][2][1], Arg6348_0[2]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6348_0[1][2][2][1]]);}))
  : (((Shen.is_type(Arg6348_0, Shen.type_cons) && (Shen.is_type(Arg6348_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6348_0[1][1])) && (Shen.is_type(Arg6348_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6348_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6348_0[1][2][2][2]) && (Shen.is_type(Arg6348_0[2], Shen.type_cons) && Shen.empty$question$(Arg6348_0[2][2])))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Shen.call(Shen.fns["shen.ebr"], [Arg6348_0[2][1], Arg6348_0[1][2][1], Arg6348_0[1][2][2][1]])]);})
  : (((Shen.is_type(Arg6348_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6348_0[1])) && (Shen.is_type(Arg6348_0[2], Shen.type_cons) && (Shen.is_type(Arg6348_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6348_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [Arg6348_0[2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg6348_0[2][2][1]]);}))
  : (((Shen.is_type(Arg6348_0, Shen.type_cons) && (Shen.is_type(Arg6348_0[2], Shen.type_cons) && Shen.empty$question$(Arg6348_0[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg6348_0[1]])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6348_0[1], R0)))
  ? Arg6348_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [[Shen.type_cons, R0, Arg6348_0[2]]]);})))
  : Arg6348_0))))))))}, 1, [], "shen.reduce_help"];





Shen.fns["shen.+string?"] = [Shen.type_func, function shen_user_lambda6351(Arg6350) {
  if (Arg6350.length < 1) return [Shen.type_func, shen_user_lambda6351, 1, Arg6350];
  var Arg6350_0 = Arg6350[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6350_0)))
  ? false
  : (typeof(Arg6350_0) == 'string'))}, 1, [], "shen.+string?"];





Shen.fns["shen.+vector"] = [Shen.type_func, function shen_user_lambda6353(Arg6352) {
  if (Arg6352.length < 1) return [Shen.type_func, shen_user_lambda6353, 1, Arg6352];
  var Arg6352_0 = Arg6352[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6352_0, Shen.vector(0))))
  ? false
  : (function() {
  return Shen.vector$question$(Arg6352_0);}))}, 1, [], "shen.+vector"];





Shen.fns["shen.ebr"] = [Shen.type_func, function shen_user_lambda6355(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6355, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6354_2, Arg6354_1)))
  ? Arg6354_0
  : (((Shen.is_type(Arg6354_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6354_2[1])) && (Shen.is_type(Arg6354_2[2], Shen.type_cons) && (Shen.is_type(Arg6354_2[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_2[2][2][2]) && (Shen.call(Shen.fns["occurrences"], [Arg6354_1, Arg6354_2[2][1]]) > 0)))))))
  ? Arg6354_2
  : (((Shen.is_type(Arg6354_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6354_2[1])) && (Shen.is_type(Arg6354_2[2], Shen.type_cons) && (Shen.is_type(Arg6354_2[2][2], Shen.type_cons) && (Shen.is_type(Arg6354_2[2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_2[2][2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6354_2[2][1], Arg6354_1)))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6354_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6354_0, Arg6354_2[2][1], Arg6354_2[2][2][1]]), Arg6354_2[2][2][2]]]]
  : ((Shen.is_type(Arg6354_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg6354_0, Arg6354_1, Arg6354_2[1]]), Shen.call(Shen.fns["shen.ebr"], [Arg6354_0, Arg6354_1, Arg6354_2[2]])]
  : Arg6354_2))))}, 3, [], "shen.ebr"];





Shen.fns["shen.add_test"] = [Shen.type_func, function shen_user_lambda6357(Arg6356) {
  if (Arg6356.length < 1) return [Shen.type_func, shen_user_lambda6357, 1, Arg6356];
  var Arg6356_0 = Arg6356[0];
  return (Shen.globals["shen.*teststack*"] = [Shen.type_cons, Arg6356_0, (Shen.globals["shen.*teststack*"])])}, 1, [], "shen.add_test"];





Shen.fns["shen.cond-expression"] = [Shen.type_func, function shen_user_lambda6359(Arg6358) {
  if (Arg6358.length < 3) return [Shen.type_func, shen_user_lambda6359, 3, Arg6358];
  var Arg6358_0 = Arg6358[0], Arg6358_1 = Arg6358[1], Arg6358_2 = Arg6358[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.err-condition"], [Arg6358_0])),
  (R0 = Shen.call(Shen.fns["shen.case-form"], [Arg6358_2, R0])),
  (R0 = Shen.call(Shen.fns["shen.encode-choices"], [R0, Arg6358_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cond-form"], [R0]);}))}, 3, [], "shen.cond-expression"];





Shen.fns["shen.cond-form"] = [Shen.type_func, function shen_user_lambda6361(Arg6360) {
  if (Arg6360.length < 1) return [Shen.type_func, shen_user_lambda6361, 1, Arg6360];
  var Arg6360_0 = Arg6360[0];
  return (((Shen.is_type(Arg6360_0, Shen.type_cons) && (Shen.is_type(Arg6360_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6360_0[1][1])) && (Shen.is_type(Arg6360_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6360_0[1][2][2]))))))
  ? Arg6360_0[1][2][1]
  : [Shen.type_cons, [Shen.type_symbol, "cond"], Arg6360_0])}, 1, [], "shen.cond-form"];





Shen.fns["shen.encode-choices"] = [Shen.type_func, function shen_user_lambda6363(Arg6362) {
  if (Arg6362.length < 2) return [Shen.type_func, shen_user_lambda6363, 2, Arg6362];
  var Arg6362_0 = Arg6362[0], Arg6362_1 = Arg6362[1];
  return ((Shen.empty$question$(Arg6362_0))
  ? []
  : (((Shen.is_type(Arg6362_0, Shen.type_cons) && (Shen.is_type(Arg6362_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6362_0[1][1])) && (Shen.is_type(Arg6362_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6362_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6362_0[1][2][1][1])) && (Shen.is_type(Arg6362_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6362_0[1][2][1][2][2]) && (Shen.empty$question$(Arg6362_0[1][2][2]) && Shen.empty$question$(Arg6362_0[2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6362_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.sys-error"], [Shen.type_cons, Arg6362_1, []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6362_1, []]]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6362_0, Shen.type_cons) && (Shen.is_type(Arg6362_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6362_0[1][1])) && (Shen.is_type(Arg6362_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6362_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6362_0[1][2][1][1])) && (Shen.is_type(Arg6362_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6362_0[1][2][1][2][2]) && Shen.empty$question$(Arg6362_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6362_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6362_0[2], Arg6362_1])]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6362_0, Shen.type_cons) && (Shen.is_type(Arg6362_0[1], Shen.type_cons) && (Shen.is_type(Arg6362_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6362_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6362_0[1][2][1][1])) && (Shen.is_type(Arg6362_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6362_0[1][2][1][2][2]) && Shen.empty$question$(Arg6362_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg6362_0[2], Arg6362_1])]), []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6362_0[1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6362_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg6362_0, Shen.type_cons) && (Shen.is_type(Arg6362_0[1], Shen.type_cons) && (Shen.is_type(Arg6362_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6362_0[1][2][2])))))
  ? [Shen.type_cons, Arg6362_0[1], Shen.call(Shen.fns["shen.encode-choices"], [Arg6362_0[2], Arg6362_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.encode-choices"]]);}))))))}, 2, [], "shen.encode-choices"];





Shen.fns["shen.case-form"] = [Shen.type_func, function shen_user_lambda6365(Arg6364) {
  if (Arg6364.length < 2) return [Shen.type_func, shen_user_lambda6365, 2, Arg6364];
  var Arg6364_0 = Arg6364[0], Arg6364_1 = Arg6364[1];
  return ((Shen.empty$question$(Arg6364_0))
  ? [Shen.type_cons, Arg6364_1, []]
  : (((Shen.is_type(Arg6364_0, Shen.type_cons) && (Shen.is_type(Arg6364_0[1], Shen.type_cons) && (Shen.is_type(Arg6364_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6364_0[1][1][1])) && (Shen.is_type(Arg6364_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6364_0[1][1][2][1])) && (Shen.empty$question$(Arg6364_0[1][1][2][2]) && (Shen.is_type(Arg6364_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6364_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg6364_0[1][2][1][1])) && (Shen.is_type(Arg6364_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6364_0[1][2][1][2][2]) && Shen.empty$question$(Arg6364_0[1][2][2]))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6364_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6364_0[2], Arg6364_1])]
  : (((Shen.is_type(Arg6364_0, Shen.type_cons) && (Shen.is_type(Arg6364_0[1], Shen.type_cons) && (Shen.is_type(Arg6364_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6364_0[1][1][1])) && (Shen.is_type(Arg6364_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6364_0[1][1][2][1])) && (Shen.empty$question$(Arg6364_0[1][1][2][2]) && (Shen.is_type(Arg6364_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6364_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg6364_0[1][2]], []]
  : (((Shen.is_type(Arg6364_0, Shen.type_cons) && (Shen.is_type(Arg6364_0[1], Shen.type_cons) && (Shen.is_type(Arg6364_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6364_0[1][1][1])) && (Shen.is_type(Arg6364_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg6364_0[1][1][2][1])) && (Shen.is_type(Arg6364_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6364_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6364_0[1][1][2][2]]), Arg6364_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg6364_0[2], Arg6364_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.case-form"]]);})))))}, 2, [], "shen.case-form"];





Shen.fns["shen.embed-and"] = [Shen.type_func, function shen_user_lambda6367(Arg6366) {
  if (Arg6366.length < 1) return [Shen.type_func, shen_user_lambda6367, 1, Arg6366];
  var Arg6366_0 = Arg6366[0];
  return (((Shen.is_type(Arg6366_0, Shen.type_cons) && Shen.empty$question$(Arg6366_0[2])))
  ? Arg6366_0[1]
  : ((Shen.is_type(Arg6366_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, Arg6366_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg6366_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.embed-and"]]);})))}, 1, [], "shen.embed-and"];





Shen.fns["shen.err-condition"] = [Shen.type_func, function shen_user_lambda6369(Arg6368) {
  if (Arg6368.length < 1) return [Shen.type_func, shen_user_lambda6369, 1, Arg6368];
  var Arg6368_0 = Arg6368[0];
  return [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg6368_0, []]], []]]}, 1, [], "shen.err-condition"];





Shen.fns["shen.sys-error"] = [Shen.type_func, function shen_user_lambda6371(Arg6370) {
  if (Arg6370.length < 1) return [Shen.type_func, shen_user_lambda6371, 1, Arg6370];
  var Arg6370_0 = Arg6370[0];
  return (function() {
  return Shen.simple_error(("system function " + Shen.call(Shen.fns["shen.app"], [Arg6370_0, ": unexpected argument\x0a", [Shen.type_symbol, "shen.a"]])));})}, 1, [], "shen.sys-error"];















Shen.fns["eval"] = [Shen.type_func, function shen_user_lambda7070(Arg7069) {
  if (Arg7069.length < 1) return [Shen.type_func, shen_user_lambda7070, 1, Arg7069];
  var Arg7069_0 = Arg7069[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda7072(Arg7071) {
  if (Arg7071.length < 1) return [Shen.type_func, shen_user_lambda7072, 1, Arg7071];
  var Arg7071_0 = Arg7071[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg7071_0]);})}, 1, [], undefined], Arg7069_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.eval-without-macros"], Shen.call(Shen.fns["shen.package-contents"], [R0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.eval-without-macros"], [R0]);})))}, 1, [], "eval"];





Shen.fns["shen.eval-without-macros"] = [Shen.type_func, function shen_user_lambda7074(Arg7073) {
  if (Arg7073.length < 1) return [Shen.type_func, shen_user_lambda7074, 1, Arg7073];
  var Arg7073_0 = Arg7073[0];
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["shen.elim-def"], [Shen.call(Shen.fns["shen.proc-input+"], [Arg7073_0])]));})}, 1, [], "shen.eval-without-macros"];





Shen.fns["shen.proc-input+"] = [Shen.type_func, function shen_user_lambda7076(Arg7075) {
  if (Arg7075.length < 1) return [Shen.type_func, shen_user_lambda7076, 1, Arg7075];
  var Arg7075_0 = Arg7075[0];
  return (((Shen.is_type(Arg7075_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg7075_0[1])) && (Shen.is_type(Arg7075_0[2], Shen.type_cons) && (Shen.is_type(Arg7075_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7075_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7075_0[2][1]]), Arg7075_0[2][2]]]
  : (((Shen.is_type(Arg7075_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read+"], Arg7075_0[1])) && (Shen.is_type(Arg7075_0[2], Shen.type_cons) && (Shen.is_type(Arg7075_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7075_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "read+"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg7075_0[2][1]]), Arg7075_0[2][2]]]
  : ((Shen.is_type(Arg7075_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.proc-input+"], Arg7075_0]);})
  : Arg7075_0)))}, 1, [], "shen.proc-input+"];





Shen.fns["shen.elim-def"] = [Shen.type_func, function shen_user_lambda7078(Arg7077) {
  if (Arg7077.length < 1) return [Shen.type_func, shen_user_lambda7078, 1, Arg7077];
  var Arg7077_0 = Arg7077[0];
  var R0;
  return (((Shen.is_type(Arg7077_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg7077_0[1])) && Shen.is_type(Arg7077_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.shen->kl"], [Arg7077_0[2][1], Arg7077_0[2][2]]);})
  : (((Shen.is_type(Arg7077_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], Arg7077_0[1])) && Shen.is_type(Arg7077_0[2], Shen.type_cons))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]),
  (R0 = Shen.call(Shen.fns["shen.elim-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7077_0[2][1], Shen.call(Shen.fns["append"], [Arg7077_0[2][2], R0])]]])),
  Shen.call(Shen.fns["shen.add-macro"], [Arg7077_0[2][1]]),
  R0)
  : (((Shen.is_type(Arg7077_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7077_0[1])) && Shen.is_type(Arg7077_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.elim-def"], [Shen.call(Shen.fns["shen.yacc"], [Arg7077_0])]);})
  : ((Shen.is_type(Arg7077_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.elim-def"], Arg7077_0]);})
  : Arg7077_0))))}, 1, [], "shen.elim-def"];





Shen.fns["shen.add-macro"] = [Shen.type_func, function shen_user_lambda7080(Arg7079) {
  if (Arg7079.length < 1) return [Shen.type_func, shen_user_lambda7080, 1, Arg7079];
  var Arg7079_0 = Arg7079[0];
  return (Shen.globals["*macros*"] = Shen.call(Shen.fns["adjoin"], [Arg7079_0, (Shen.globals["*macros*"])]))}, 1, [], "shen.add-macro"];





Shen.fns["shen.packaged?"] = [Shen.type_func, function shen_user_lambda7082(Arg7081) {
  if (Arg7081.length < 1) return [Shen.type_func, shen_user_lambda7082, 1, Arg7081];
  var Arg7081_0 = Arg7081[0];
  return (((Shen.is_type(Arg7081_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7081_0[1])) && (Shen.is_type(Arg7081_0[2], Shen.type_cons) && Shen.is_type(Arg7081_0[2][2], Shen.type_cons)))))
  ? true
  : false)}, 1, [], "shen.packaged?"];





Shen.fns["external"] = [Shen.type_func, function shen_user_lambda7084(Arg7083) {
  if (Arg7083.length < 1) return [Shen.type_func, shen_user_lambda7084, 1, Arg7083];
  var Arg7083_0 = Arg7083[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7083_0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7086(Arg7085) {
  if (Arg7085.length < 2) return [Shen.type_func, shen_user_lambda7086, 2, Arg7085];
  var Arg7085_0 = Arg7085[0], Arg7085_1 = Arg7085[1];
  return (function() {
  return Shen.simple_error(("package " + Shen.call(Shen.fns["shen.app"], [Arg7085_0, " has not been used.\x0a", [Shen.type_symbol, "shen.a"]])));})}, 2, [Arg7083_0], undefined]);})}, 1, [], "external"];





Shen.fns["shen.package-contents"] = [Shen.type_func, function shen_user_lambda7088(Arg7087) {
  if (Arg7087.length < 1) return [Shen.type_func, shen_user_lambda7088, 1, Arg7087];
  var Arg7087_0 = Arg7087[0];
  return (((Shen.is_type(Arg7087_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7087_0[1])) && (Shen.is_type(Arg7087_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg7087_0[2][1])) && Shen.is_type(Arg7087_0[2][2], Shen.type_cons))))))
  ? Arg7087_0[2][2][2]
  : (((Shen.is_type(Arg7087_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg7087_0[1])) && (Shen.is_type(Arg7087_0[2], Shen.type_cons) && Shen.is_type(Arg7087_0[2][2], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.packageh"], [Arg7087_0[2][1], Arg7087_0[2][2][1], Arg7087_0[2][2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.package-contents"]]);})))}, 1, [], "shen.package-contents"];





Shen.fns["shen.walk"] = [Shen.type_func, function shen_user_lambda7090(Arg7089) {
  if (Arg7089.length < 2) return [Shen.type_func, shen_user_lambda7090, 2, Arg7089];
  var Arg7089_0 = Arg7089[0], Arg7089_1 = Arg7089[1];
  return ((Shen.is_type(Arg7089_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Arg7089_0, [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7092(Arg7091) {
  if (Arg7091.length < 2) return [Shen.type_func, shen_user_lambda7092, 2, Arg7091];
  var Arg7091_0 = Arg7091[0], Arg7091_1 = Arg7091[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [Arg7091_0, Arg7091_1]);})}, 2, [Arg7089_0], undefined], Arg7089_1])]);})
  : (function() {
  return Shen.call_tail(Arg7089_0, [Arg7089_1]);}))}, 2, [], "shen.walk"];





Shen.fns["compile"] = [Shen.type_func, function shen_user_lambda7094(Arg7093) {
  if (Arg7093.length < 3) return [Shen.type_func, shen_user_lambda7094, 3, Arg7093];
  var Arg7093_0 = Arg7093[0], Arg7093_1 = Arg7093[1], Arg7093_2 = Arg7093[2];
  var R0;
  return ((R0 = Shen.call(Arg7093_0, [[Shen.type_cons, Arg7093_1, [Shen.type_cons, [], []]]])),
  (((Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0)) || (!Shen.empty$question$(R0[1]))))
  ? (function() {
  return Shen.call_tail(Arg7093_2, [R0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.hdtl"], [R0]);})))}, 3, [], "compile"];





Shen.fns["fail-if"] = [Shen.type_func, function shen_user_lambda7096(Arg7095) {
  if (Arg7095.length < 2) return [Shen.type_func, shen_user_lambda7096, 2, Arg7095];
  var Arg7095_0 = Arg7095[0], Arg7095_1 = Arg7095[1];
  return ((Shen.call(Arg7095_0, [Arg7095_1]))
  ? Shen.fail_obj
  : Arg7095_1)}, 2, [], "fail-if"];





Shen.fns["@s"] = [Shen.type_func, function shen_user_lambda7098(Arg7097) {
  if (Arg7097.length < 2) return [Shen.type_func, shen_user_lambda7098, 2, Arg7097];
  var Arg7097_0 = Arg7097[0], Arg7097_1 = Arg7097[1];
  return (Arg7097_0 + Arg7097_1)}, 2, [], "@s"];





Shen.fns["tc?"] = [Shen.type_func, function shen_user_lambda7100(Arg7099) {
  if (Arg7099.length < 0) return [Shen.type_func, shen_user_lambda7100, 0, Arg7099];
  return (Shen.globals["shen.*tc*"])}, 0, [], "tc?"];





Shen.fns["ps"] = [Shen.type_func, function shen_user_lambda7102(Arg7101) {
  if (Arg7101.length < 1) return [Shen.type_func, shen_user_lambda7102, 1, Arg7101];
  var Arg7101_0 = Arg7101[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7101_0, [Shen.type_symbol, "shen.source"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7104(Arg7103) {
  if (Arg7103.length < 2) return [Shen.type_func, shen_user_lambda7104, 2, Arg7103];
  var Arg7103_0 = Arg7103[0], Arg7103_1 = Arg7103[1];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7103_0, " not found.\x0a", [Shen.type_symbol, "shen.a"]]));})}, 2, [Arg7101_0], undefined]);})}, 1, [], "ps"];





Shen.fns["stinput"] = [Shen.type_func, function shen_user_lambda7106(Arg7105) {
  if (Arg7105.length < 0) return [Shen.type_func, shen_user_lambda7106, 0, Arg7105];
  return (Shen.globals["*stinput*"])}, 0, [], "stinput"];





Shen.fns["shen.+vector?"] = [Shen.type_func, function shen_user_lambda7108(Arg7107) {
  if (Arg7107.length < 1) return [Shen.type_func, shen_user_lambda7108, 1, Arg7107];
  var Arg7107_0 = Arg7107[0];
  return (Shen.absvector$question$(Arg7107_0) && (Shen.absvector_ref(Arg7107_0, 0) > 0))}, 1, [], "shen.+vector?"];










Shen.fns["shen.fillvector"] = [Shen.type_func, function shen_user_lambda7111(Arg7110) {
  if (Arg7110.length < 4) return [Shen.type_func, shen_user_lambda7111, 4, Arg7110];
  var Arg7110_0 = Arg7110[0], Arg7110_1 = Arg7110[1], Arg7110_2 = Arg7110[2], Arg7110_3 = Arg7110[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7110_2, Arg7110_1)))
  ? Shen.absvector_set(Arg7110_0, Arg7110_2, Arg7110_3)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fillvector"], [Shen.absvector_set(Arg7110_0, Arg7110_1, Arg7110_3), (1 + Arg7110_1), Arg7110_2, Arg7110_3]);}))}, 4, [], "shen.fillvector"];










Shen.fns["vector->"] = [Shen.type_func, function shen_user_lambda7114(Arg7113) {
  if (Arg7113.length < 3) return [Shen.type_func, shen_user_lambda7114, 3, Arg7113];
  var Arg7113_0 = Arg7113[0], Arg7113_1 = Arg7113[1], Arg7113_2 = Arg7113[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7113_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : Shen.absvector_set(Arg7113_0, Arg7113_1, Arg7113_2))}, 3, [], "vector->"];





Shen.fns["<-vector"] = [Shen.type_func, function shen_user_lambda7116(Arg7115) {
  if (Arg7115.length < 2) return [Shen.type_func, shen_user_lambda7116, 2, Arg7115];
  var Arg7115_0 = Arg7115[0], Arg7115_1 = Arg7115[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7115_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : ((R0 = Shen.absvector_ref(Arg7115_0, Arg7115_1)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error("vector element not found\x0a");})
  : R0)))}, 2, [], "<-vector"];





Shen.fns["shen.posint?"] = [Shen.type_func, function shen_user_lambda7118(Arg7117) {
  if (Arg7117.length < 1) return [Shen.type_func, shen_user_lambda7118, 1, Arg7117];
  var Arg7117_0 = Arg7117[0];
  return (Shen.call(Shen.fns["integer?"], [Arg7117_0]) && (Arg7117_0 >= 0))}, 1, [], "shen.posint?"];





Shen.fns["limit"] = [Shen.type_func, function shen_user_lambda7120(Arg7119) {
  if (Arg7119.length < 1) return [Shen.type_func, shen_user_lambda7120, 1, Arg7119];
  var Arg7119_0 = Arg7119[0];
  return Shen.absvector_ref(Arg7119_0, 0)}, 1, [], "limit"];










Shen.fns["shen.analyse-symbol?"] = [Shen.type_func, function shen_user_lambda7123(Arg7122) {
  if (Arg7122.length < 1) return [Shen.type_func, shen_user_lambda7123, 1, Arg7122];
  var Arg7122_0 = Arg7122[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7122_0]))
  ? (Shen.call(Shen.fns["shen.alpha?"], [Arg7122_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7122_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-symbol?"]]);}))}, 1, [], "shen.analyse-symbol?"];





Shen.fns["shen.alpha?"] = [Shen.type_func, function shen_user_lambda7125(Arg7124) {
  if (Arg7124.length < 1) return [Shen.type_func, shen_user_lambda7125, 1, Arg7124];
  var Arg7124_0 = Arg7124[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7124_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", [Shen.type_cons, "a", [Shen.type_cons, "b", [Shen.type_cons, "c", [Shen.type_cons, "d", [Shen.type_cons, "e", [Shen.type_cons, "f", [Shen.type_cons, "g", [Shen.type_cons, "h", [Shen.type_cons, "i", [Shen.type_cons, "j", [Shen.type_cons, "k", [Shen.type_cons, "l", [Shen.type_cons, "m", [Shen.type_cons, "n", [Shen.type_cons, "o", [Shen.type_cons, "p", [Shen.type_cons, "q", [Shen.type_cons, "r", [Shen.type_cons, "s", [Shen.type_cons, "t", [Shen.type_cons, "u", [Shen.type_cons, "v", [Shen.type_cons, "w", [Shen.type_cons, "x", [Shen.type_cons, "y", [Shen.type_cons, "z", [Shen.type_cons, "=", [Shen.type_cons, "*", [Shen.type_cons, "/", [Shen.type_cons, "+", [Shen.type_cons, "-", [Shen.type_cons, "_", [Shen.type_cons, "?", [Shen.type_cons, "$", [Shen.type_cons, "!", [Shen.type_cons, "@", [Shen.type_cons, "~", [Shen.type_cons, ">", [Shen.type_cons, "<", [Shen.type_cons, "&", [Shen.type_cons, "%", [Shen.type_cons, "{", [Shen.type_cons, "}", [Shen.type_cons, ":", [Shen.type_cons, ";", [Shen.type_cons, "`", [Shen.type_cons, "#", [Shen.type_cons, "'", [Shen.type_cons, ".", []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.alpha?"];





Shen.fns["shen.alphanums?"] = [Shen.type_func, function shen_user_lambda7127(Arg7126) {
  if (Arg7126.length < 1) return [Shen.type_func, shen_user_lambda7127, 1, Arg7126];
  var Arg7126_0 = Arg7126[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7126_0)))
  ? true
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7126_0]))
  ? (Shen.call(Shen.fns["shen.alphanum?"], [Arg7126_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7126_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.alphanums?"]]);})))}, 1, [], "shen.alphanums?"];





Shen.fns["shen.alphanum?"] = [Shen.type_func, function shen_user_lambda7129(Arg7128) {
  if (Arg7128.length < 1) return [Shen.type_func, shen_user_lambda7129, 1, Arg7128];
  var Arg7128_0 = Arg7128[0];
  return (Shen.call(Shen.fns["shen.alpha?"], [Arg7128_0]) || Shen.call(Shen.fns["shen.digit?"], [Arg7128_0]))}, 1, [], "shen.alphanum?"];





Shen.fns["shen.digit?"] = [Shen.type_func, function shen_user_lambda7131(Arg7130) {
  if (Arg7130.length < 1) return [Shen.type_func, shen_user_lambda7131, 1, Arg7130];
  var Arg7130_0 = Arg7130[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7130_0, [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]);})}, 1, [], "shen.digit?"];





Shen.fns["variable?"] = [Shen.type_func, function shen_user_lambda7133(Arg7132) {
  if (Arg7132.length < 1) return [Shen.type_func, shen_user_lambda7133, 1, Arg7132];
  var Arg7132_0 = Arg7132[0];
  var R0;
  return (((Shen.boolean$question$(Arg7132_0) || ((typeof(Arg7132_0) == 'number') || (typeof(Arg7132_0) == 'string'))))
  ? false
  : (function() {
  return Shen.trap_error(function() {return ((R0 = Shen.str(Arg7132_0)),
  Shen.call(Shen.fns["shen.analyse-variable?"], [R0]));}, [Shen.type_func, function shen_user_lambda7135(Arg7134) {
  if (Arg7134.length < 1) return [Shen.type_func, shen_user_lambda7135, 1, Arg7134];
  var Arg7134_0 = Arg7134[0];
  return false}, 1, [], undefined]);}))}, 1, [], "variable?"];





Shen.fns["shen.analyse-variable?"] = [Shen.type_func, function shen_user_lambda7137(Arg7136) {
  if (Arg7136.length < 1) return [Shen.type_func, shen_user_lambda7137, 1, Arg7136];
  var Arg7136_0 = Arg7136[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg7136_0]))
  ? (Shen.call(Shen.fns["shen.uppercase?"], [Arg7136_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg7136_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.analyse-variable?"]]);}))}, 1, [], "shen.analyse-variable?"];





Shen.fns["shen.uppercase?"] = [Shen.type_func, function shen_user_lambda7139(Arg7138) {
  if (Arg7138.length < 1) return [Shen.type_func, shen_user_lambda7139, 1, Arg7138];
  var Arg7138_0 = Arg7138[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7138_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", []]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.uppercase?"];





Shen.fns["gensym"] = [Shen.type_func, function shen_user_lambda7141(Arg7140) {
  if (Arg7140.length < 1) return [Shen.type_func, shen_user_lambda7141, 1, Arg7140];
  var Arg7140_0 = Arg7140[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg7140_0, (Shen.globals["shen.*gensym*"] = (1 + (Shen.globals["shen.*gensym*"])))]);})}, 1, [], "gensym"];





Shen.fns["concat"] = [Shen.type_func, function shen_user_lambda7143(Arg7142) {
  if (Arg7142.length < 2) return [Shen.type_func, shen_user_lambda7143, 2, Arg7142];
  var Arg7142_0 = Arg7142[0], Arg7142_1 = Arg7142[1];
  return (function() {
  return Shen.intern((Shen.str(Arg7142_0) + Shen.str(Arg7142_1)));})}, 2, [], "concat"];










Shen.fns["fst"] = [Shen.type_func, function shen_user_lambda7146(Arg7145) {
  if (Arg7145.length < 1) return [Shen.type_func, shen_user_lambda7146, 1, Arg7145];
  var Arg7145_0 = Arg7145[0];
  return Shen.absvector_ref(Arg7145_0, 1)}, 1, [], "fst"];





Shen.fns["snd"] = [Shen.type_func, function shen_user_lambda7148(Arg7147) {
  if (Arg7147.length < 1) return [Shen.type_func, shen_user_lambda7148, 1, Arg7147];
  var Arg7147_0 = Arg7147[0];
  return Shen.absvector_ref(Arg7147_0, 2)}, 1, [], "snd"];





Shen.fns["tuple?"] = [Shen.type_func, function shen_user_lambda7150(Arg7149) {
  if (Arg7149.length < 1) return [Shen.type_func, shen_user_lambda7150, 1, Arg7149];
  var Arg7149_0 = Arg7149[0];
  return (function() {
  return Shen.trap_error(function() {return (Shen.absvector$question$(Arg7149_0) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tuple"], Shen.absvector_ref(Arg7149_0, 0))));}, [Shen.type_func, function shen_user_lambda7152(Arg7151) {
  if (Arg7151.length < 1) return [Shen.type_func, shen_user_lambda7152, 1, Arg7151];
  var Arg7151_0 = Arg7151[0];
  return false}, 1, [], undefined]);})}, 1, [], "tuple?"];





Shen.fns["append"] = [Shen.type_func, function shen_user_lambda7154(Arg7153) {
  if (Arg7153.length < 2) return [Shen.type_func, shen_user_lambda7154, 2, Arg7153];
  var Arg7153_0 = Arg7153[0], Arg7153_1 = Arg7153[1];
  return ((Shen.empty$question$(Arg7153_0))
  ? Arg7153_1
  : ((Shen.is_type(Arg7153_0, Shen.type_cons))
  ? [Shen.type_cons, Arg7153_0[1], Shen.call(Shen.fns["append"], [Arg7153_0[2], Arg7153_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "append"]]);})))}, 2, [], "append"];





Shen.fns["@v"] = [Shen.type_func, function shen_user_lambda7156(Arg7155) {
  if (Arg7155.length < 2) return [Shen.type_func, shen_user_lambda7156, 2, Arg7155];
  var Arg7155_0 = Arg7155[0], Arg7155_1 = Arg7155[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7155_1])),
  (R1 = Shen.vector((R0 + 1))),
  (R1 = Shen.call(Shen.fns["vector->"], [R1, 1, Arg7155_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? R1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7155_1, 1, R0, R1]);})))}, 2, [], "@v"];





Shen.fns["shen.@v-help"] = [Shen.type_func, function shen_user_lambda7158(Arg7157) {
  if (Arg7157.length < 4) return [Shen.type_func, shen_user_lambda7158, 4, Arg7157];
  var Arg7157_0 = Arg7157[0], Arg7157_1 = Arg7157[1], Arg7157_2 = Arg7157[2], Arg7157_3 = Arg7157[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7157_2, Arg7157_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7157_0, Arg7157_3, Arg7157_2, (Arg7157_2 + 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg7157_0, (Arg7157_1 + 1), Arg7157_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7157_0, Arg7157_3, Arg7157_1, (Arg7157_1 + 1)])]);}))}, 4, [], "shen.@v-help"];





Shen.fns["shen.copyfromvector"] = [Shen.type_func, function shen_user_lambda7160(Arg7159) {
  if (Arg7159.length < 4) return [Shen.type_func, shen_user_lambda7160, 4, Arg7159];
  var Arg7159_0 = Arg7159[0], Arg7159_1 = Arg7159[1], Arg7159_2 = Arg7159[2], Arg7159_3 = Arg7159[3];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["vector->"], [Arg7159_1, Arg7159_3, Shen.call(Shen.fns["<-vector"], [Arg7159_0, Arg7159_2])]);}, [Shen.type_func, function shen_user_lambda7162(Arg7161) {
  if (Arg7161.length < 2) return [Shen.type_func, shen_user_lambda7162, 2, Arg7161];
  var Arg7161_0 = Arg7161[0], Arg7161_1 = Arg7161[1];
  return Arg7161_0}, 2, [Arg7159_1], undefined]);})}, 4, [], "shen.copyfromvector"];





Shen.fns["hdv"] = [Shen.type_func, function shen_user_lambda7164(Arg7163) {
  if (Arg7163.length < 1) return [Shen.type_func, shen_user_lambda7164, 1, Arg7163];
  var Arg7163_0 = Arg7163[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7163_0, 1]);}, [Shen.type_func, function shen_user_lambda7166(Arg7165) {
  if (Arg7165.length < 2) return [Shen.type_func, shen_user_lambda7166, 2, Arg7165];
  var Arg7165_0 = Arg7165[0], Arg7165_1 = Arg7165[1];
  return (function() {
  return Shen.simple_error(("hdv needs a non-empty vector as an argument; not " + Shen.call(Shen.fns["shen.app"], [Arg7165_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})}, 2, [Arg7163_0], undefined]);})}, 1, [], "hdv"];





Shen.fns["tlv"] = [Shen.type_func, function shen_user_lambda7168(Arg7167) {
  if (Arg7167.length < 1) return [Shen.type_func, shen_user_lambda7168, 1, Arg7167];
  var Arg7167_0 = Arg7167[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg7167_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? (function() {
  return Shen.simple_error("cannot take the tail of the empty vector\x0a");})
  : ((Shen.unwind_tail(Shen.$eq$(R0, 1)))
  ? (function() {
  return Shen.vector(0);})
  : (Shen.vector((R0 - 1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7167_0, 2, R0, Shen.vector((R0 - 1))]);})))))}, 1, [], "tlv"];





Shen.fns["shen.tlv-help"] = [Shen.type_func, function shen_user_lambda7170(Arg7169) {
  if (Arg7169.length < 4) return [Shen.type_func, shen_user_lambda7170, 4, Arg7169];
  var Arg7169_0 = Arg7169[0], Arg7169_1 = Arg7169[1], Arg7169_2 = Arg7169[2], Arg7169_3 = Arg7169[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7169_2, Arg7169_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg7169_0, Arg7169_3, Arg7169_2, (Arg7169_2 - 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg7169_0, (Arg7169_1 + 1), Arg7169_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg7169_0, Arg7169_3, Arg7169_1, (Arg7169_1 - 1)])]);}))}, 4, [], "shen.tlv-help"];





Shen.fns["assoc"] = [Shen.type_func, function shen_user_lambda7172(Arg7171) {
  if (Arg7171.length < 2) return [Shen.type_func, shen_user_lambda7172, 2, Arg7171];
  var Arg7171_0 = Arg7171[0], Arg7171_1 = Arg7171[1];
  return ((Shen.empty$question$(Arg7171_1))
  ? []
  : (((Shen.is_type(Arg7171_1, Shen.type_cons) && (Shen.is_type(Arg7171_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7171_1[1][1], Arg7171_0)))))
  ? Arg7171_1[1]
  : ((Shen.is_type(Arg7171_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["assoc"], [Arg7171_0, Arg7171_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "assoc"]]);}))))}, 2, [], "assoc"];





Shen.fns["boolean?"] = [Shen.type_func, function shen_user_lambda7174(Arg7173) {
  if (Arg7173.length < 1) return [Shen.type_func, shen_user_lambda7174, 1, Arg7173];
  var Arg7173_0 = Arg7173[0];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg7173_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg7173_0)))
  ? true
  : false))}, 1, [], "boolean?"];





Shen.fns["nl"] = [Shen.type_func, function shen_user_lambda7176(Arg7175) {
  if (Arg7175.length < 1) return [Shen.type_func, shen_user_lambda7176, 1, Arg7175];
  var Arg7175_0 = Arg7175[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7175_0)))
  ? 0
  : (Shen.call(Shen.fns["shen.prhush"], ["\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [(Arg7175_0 - 1)]);})))}, 1, [], "nl"];





Shen.fns["difference"] = [Shen.type_func, function shen_user_lambda7178(Arg7177) {
  if (Arg7177.length < 2) return [Shen.type_func, shen_user_lambda7178, 2, Arg7177];
  var Arg7177_0 = Arg7177[0], Arg7177_1 = Arg7177[1];
  return ((Shen.empty$question$(Arg7177_0))
  ? []
  : ((Shen.is_type(Arg7177_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7177_0[1], Arg7177_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["difference"], [Arg7177_0[2], Arg7177_1]);})
  : [Shen.type_cons, Arg7177_0[1], Shen.call(Shen.fns["difference"], [Arg7177_0[2], Arg7177_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "difference"]]);})))}, 2, [], "difference"];





Shen.fns["do"] = [Shen.type_func, function shen_user_lambda7180(Arg7179) {
  if (Arg7179.length < 2) return [Shen.type_func, shen_user_lambda7180, 2, Arg7179];
  var Arg7179_0 = Arg7179[0], Arg7179_1 = Arg7179[1];
  return Arg7179_1}, 2, [], "do"];





Shen.fns["element?"] = [Shen.type_func, function shen_user_lambda7182(Arg7181) {
  if (Arg7181.length < 2) return [Shen.type_func, shen_user_lambda7182, 2, Arg7181];
  var Arg7181_0 = Arg7181[0], Arg7181_1 = Arg7181[1];
  return ((Shen.empty$question$(Arg7181_1))
  ? false
  : (((Shen.is_type(Arg7181_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7181_1[1], Arg7181_0))))
  ? true
  : ((Shen.is_type(Arg7181_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7181_0, Arg7181_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "element?"]]);}))))}, 2, [], "element?"];










Shen.fns["fix"] = [Shen.type_func, function shen_user_lambda7185(Arg7184) {
  if (Arg7184.length < 2) return [Shen.type_func, shen_user_lambda7185, 2, Arg7184];
  var Arg7184_0 = Arg7184[0], Arg7184_1 = Arg7184[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7184_0, Arg7184_1, Shen.call(Arg7184_0, [Arg7184_1])]);})}, 2, [], "fix"];





Shen.fns["shen.fix-help"] = [Shen.type_func, function shen_user_lambda7187(Arg7186) {
  if (Arg7186.length < 3) return [Shen.type_func, shen_user_lambda7187, 3, Arg7186];
  var Arg7186_0 = Arg7186[0], Arg7186_1 = Arg7186[1], Arg7186_2 = Arg7186[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7186_2, Arg7186_1)))
  ? Arg7186_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg7186_0, Arg7186_2, Shen.call(Arg7186_0, [Arg7186_2])]);}))}, 3, [], "shen.fix-help"];





Shen.fns["put"] = [Shen.type_func, function shen_user_lambda7189(Arg7188) {
  if (Arg7188.length < 4) return [Shen.type_func, shen_user_lambda7189, 4, Arg7188];
  var Arg7188_0 = Arg7188[0], Arg7188_1 = Arg7188[1], Arg7188_2 = Arg7188[2], Arg7188_3 = Arg7188[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7188_0, Shen.call(Shen.fns["limit"], [Arg7188_3])])),
  (R1 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7188_3, R0]);}, [Shen.type_func, function shen_user_lambda7191(Arg7190) {
  if (Arg7190.length < 1) return [Shen.type_func, shen_user_lambda7191, 1, Arg7190];
  var Arg7190_0 = Arg7190[0];
  return []}, 1, [], undefined])),
  Shen.call(Shen.fns["vector->"], [Arg7188_3, R0, Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7188_0, Arg7188_1, Arg7188_2, R1])]),
  Arg7188_2)}, 4, [], "put"];





Shen.fns["shen.change-pointer-value"] = [Shen.type_func, function shen_user_lambda7193(Arg7192) {
  if (Arg7192.length < 4) return [Shen.type_func, shen_user_lambda7193, 4, Arg7192];
  var Arg7192_0 = Arg7192[0], Arg7192_1 = Arg7192[1], Arg7192_2 = Arg7192[2], Arg7192_3 = Arg7192[3];
  return ((Shen.empty$question$(Arg7192_3))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg7192_0, [Shen.type_cons, Arg7192_1, []]], Arg7192_2], []]
  : (((Shen.is_type(Arg7192_3, Shen.type_cons) && (Shen.is_type(Arg7192_3[1], Shen.type_cons) && (Shen.is_type(Arg7192_3[1][1], Shen.type_cons) && (Shen.is_type(Arg7192_3[1][1][2], Shen.type_cons) && (Shen.empty$question$(Arg7192_3[1][1][2][2]) && (Shen.unwind_tail(Shen.$eq$(Arg7192_3[1][1][2][1], Arg7192_1)) && Shen.unwind_tail(Shen.$eq$(Arg7192_3[1][1][1], Arg7192_0)))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg7192_3[1][1], Arg7192_2], Arg7192_3[2]]
  : ((Shen.is_type(Arg7192_3, Shen.type_cons))
  ? [Shen.type_cons, Arg7192_3[1], Shen.call(Shen.fns["shen.change-pointer-value"], [Arg7192_0, Arg7192_1, Arg7192_2, Arg7192_3[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.change-pointer-value"]]);}))))}, 4, [], "shen.change-pointer-value"];





Shen.fns["get"] = [Shen.type_func, function shen_user_lambda7195(Arg7194) {
  if (Arg7194.length < 3) return [Shen.type_func, shen_user_lambda7195, 3, Arg7194];
  var Arg7194_0 = Arg7194[0], Arg7194_1 = Arg7194[1], Arg7194_2 = Arg7194[2];
  var R0;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg7194_0, Shen.call(Shen.fns["limit"], [Arg7194_2])])),
  (R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["<-vector"], [Arg7194_2, R0]);}, [Shen.type_func, function shen_user_lambda7197(Arg7196) {
  if (Arg7196.length < 1) return [Shen.type_func, shen_user_lambda7197, 1, Arg7196];
  var Arg7196_0 = Arg7196[0];
  return (function() {
  return Shen.simple_error("pointer not found\x0a");})}, 1, [], undefined])),
  (R0 = Shen.call(Shen.fns["assoc"], [[Shen.type_cons, Arg7194_0, [Shen.type_cons, Arg7194_1, []]], R0])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("value not found\x0a");})
  : R0[2]))}, 3, [], "get"];





Shen.fns["hash"] = [Shen.type_func, function shen_user_lambda7199(Arg7198) {
  if (Arg7198.length < 2) return [Shen.type_func, shen_user_lambda7199, 2, Arg7198];
  var Arg7198_0 = Arg7198[0], Arg7198_1 = Arg7198[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.mod"], [Shen.call(Shen.fns["shen.sum"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7201(Arg7200) {
  if (Arg7200.length < 1) return [Shen.type_func, shen_user_lambda7201, 1, Arg7200];
  var Arg7200_0 = Arg7200[0];
  return (function() {
  return Shen.string_$gt$n(Arg7200_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg7198_0])])]), Arg7198_1])),
  ((Shen.unwind_tail(Shen.$eq$(0, R0)))
  ? 1
  : R0))}, 2, [], "hash"];





Shen.fns["shen.mod"] = [Shen.type_func, function shen_user_lambda7203(Arg7202) {
  if (Arg7202.length < 2) return [Shen.type_func, shen_user_lambda7203, 2, Arg7202];
  var Arg7202_0 = Arg7202[0], Arg7202_1 = Arg7202[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7202_0, Shen.call(Shen.fns["shen.multiples"], [Arg7202_0, [Shen.type_cons, Arg7202_1, []]])]);})}, 2, [], "shen.mod"];





Shen.fns["shen.multiples"] = [Shen.type_func, function shen_user_lambda7205(Arg7204) {
  if (Arg7204.length < 2) return [Shen.type_func, shen_user_lambda7205, 2, Arg7204];
  var Arg7204_0 = Arg7204[0], Arg7204_1 = Arg7204[1];
  return (((Shen.is_type(Arg7204_1, Shen.type_cons) && (Arg7204_1[1] > Arg7204_0)))
  ? Arg7204_1[2]
  : ((Shen.is_type(Arg7204_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.multiples"], [Arg7204_0, [Shen.type_cons, (2 * Arg7204_1[1]), Arg7204_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiples"]]);})))}, 2, [], "shen.multiples"];





Shen.fns["shen.modh"] = [Shen.type_func, function shen_user_lambda7207(Arg7206) {
  if (Arg7206.length < 2) return [Shen.type_func, shen_user_lambda7207, 2, Arg7206];
  var Arg7206_0 = Arg7206[0], Arg7206_1 = Arg7206[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7206_0)))
  ? 0
  : ((Shen.empty$question$(Arg7206_1))
  ? Arg7206_0
  : (((Shen.is_type(Arg7206_1, Shen.type_cons) && (Arg7206_1[1] > Arg7206_0)))
  ? ((Shen.empty$question$(Arg7206_1[2]))
  ? Arg7206_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg7206_0, Arg7206_1[2]]);}))
  : ((Shen.is_type(Arg7206_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [(Arg7206_0 - Arg7206_1[1]), Arg7206_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.modh"]]);})))))}, 2, [], "shen.modh"];





Shen.fns["shen.sum"] = [Shen.type_func, function shen_user_lambda7209(Arg7208) {
  if (Arg7208.length < 1) return [Shen.type_func, shen_user_lambda7209, 1, Arg7208];
  var Arg7208_0 = Arg7208[0];
  return ((Shen.empty$question$(Arg7208_0))
  ? 0
  : ((Shen.is_type(Arg7208_0, Shen.type_cons))
  ? (Arg7208_0[1] + Shen.call(Shen.fns["shen.sum"], [Arg7208_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.sum"]]);})))}, 1, [], "shen.sum"];





Shen.fns["head"] = [Shen.type_func, function shen_user_lambda7211(Arg7210) {
  if (Arg7210.length < 1) return [Shen.type_func, shen_user_lambda7211, 1, Arg7210];
  var Arg7210_0 = Arg7210[0];
  return ((Shen.is_type(Arg7210_0, Shen.type_cons))
  ? Arg7210_0[1]
  : (function() {
  return Shen.simple_error("head expects a non-empty list");}))}, 1, [], "head"];





Shen.fns["tail"] = [Shen.type_func, function shen_user_lambda7213(Arg7212) {
  if (Arg7212.length < 1) return [Shen.type_func, shen_user_lambda7213, 1, Arg7212];
  var Arg7212_0 = Arg7212[0];
  return ((Shen.is_type(Arg7212_0, Shen.type_cons))
  ? Arg7212_0[2]
  : (function() {
  return Shen.simple_error("tail expects a non-empty list");}))}, 1, [], "tail"];





Shen.fns["hdstr"] = [Shen.type_func, function shen_user_lambda7215(Arg7214) {
  if (Arg7214.length < 1) return [Shen.type_func, shen_user_lambda7215, 1, Arg7214];
  var Arg7214_0 = Arg7214[0];
  return Arg7214_0[0]}, 1, [], "hdstr"];





Shen.fns["intersection"] = [Shen.type_func, function shen_user_lambda7217(Arg7216) {
  if (Arg7216.length < 2) return [Shen.type_func, shen_user_lambda7217, 2, Arg7216];
  var Arg7216_0 = Arg7216[0], Arg7216_1 = Arg7216[1];
  return ((Shen.empty$question$(Arg7216_0))
  ? []
  : ((Shen.is_type(Arg7216_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7216_0[1], Arg7216_1]))
  ? [Shen.type_cons, Arg7216_0[1], Shen.call(Shen.fns["intersection"], [Arg7216_0[2], Arg7216_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["intersection"], [Arg7216_0[2], Arg7216_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "intersection"]]);})))}, 2, [], "intersection"];





Shen.fns["reverse"] = [Shen.type_func, function shen_user_lambda7219(Arg7218) {
  if (Arg7218.length < 1) return [Shen.type_func, shen_user_lambda7219, 1, Arg7218];
  var Arg7218_0 = Arg7218[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7218_0, []]);})}, 1, [], "reverse"];





Shen.fns["shen.reverse_help"] = [Shen.type_func, function shen_user_lambda7221(Arg7220) {
  if (Arg7220.length < 2) return [Shen.type_func, shen_user_lambda7221, 2, Arg7220];
  var Arg7220_0 = Arg7220[0], Arg7220_1 = Arg7220[1];
  return ((Shen.empty$question$(Arg7220_0))
  ? Arg7220_1
  : ((Shen.is_type(Arg7220_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg7220_0[2], [Shen.type_cons, Arg7220_0[1], Arg7220_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.reverse_help"]]);})))}, 2, [], "shen.reverse_help"];





Shen.fns["union"] = [Shen.type_func, function shen_user_lambda7223(Arg7222) {
  if (Arg7222.length < 2) return [Shen.type_func, shen_user_lambda7223, 2, Arg7222];
  var Arg7222_0 = Arg7222[0], Arg7222_1 = Arg7222[1];
  return ((Shen.empty$question$(Arg7222_0))
  ? Arg7222_1
  : ((Shen.is_type(Arg7222_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg7222_0[1], Arg7222_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Arg7222_0[2], Arg7222_1]);})
  : [Shen.type_cons, Arg7222_0[1], Shen.call(Shen.fns["union"], [Arg7222_0[2], Arg7222_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "union"]]);})))}, 2, [], "union"];





Shen.fns["y-or-n?"] = [Shen.type_func, function shen_user_lambda7225(Arg7224) {
  if (Arg7224.length < 1) return [Shen.type_func, shen_user_lambda7225, 1, Arg7224];
  var Arg7224_0 = Arg7224[0];
  var R0;
  return (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg7224_0]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [" (y/n) ", Shen.call(Shen.fns["stoutput"], [])]),
  (R0 = Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["read"], [Shen.call(Shen.fns["stinput"], [])]), "", [Shen.type_symbol, "shen.s"]])),
  ((Shen.unwind_tail(Shen.$eq$("y", R0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$("n", R0)))
  ? false
  : (Shen.call(Shen.fns["shen.prhush"], ["please answer y or n\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["y-or-n?"], [Arg7224_0]);})))))}, 1, [], "y-or-n?"];










Shen.fns["subst"] = [Shen.type_func, function shen_user_lambda7228(Arg7227) {
  if (Arg7227.length < 3) return [Shen.type_func, shen_user_lambda7228, 3, Arg7227];
  var Arg7227_0 = Arg7227[0], Arg7227_1 = Arg7227[1], Arg7227_2 = Arg7227[2];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7227_2, Arg7227_1)))
  ? Arg7227_0
  : ((Shen.is_type(Arg7227_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["subst"], [Arg7227_0, Arg7227_1, Arg7227_2[1]]), Shen.call(Shen.fns["subst"], [Arg7227_0, Arg7227_1, Arg7227_2[2]])]
  : Arg7227_2))}, 3, [], "subst"];





Shen.fns["explode"] = [Shen.type_func, function shen_user_lambda7230(Arg7229) {
  if (Arg7229.length < 1) return [Shen.type_func, shen_user_lambda7230, 1, Arg7229];
  var Arg7229_0 = Arg7229[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.explode-h"], [Shen.call(Shen.fns["shen.app"], [Arg7229_0, "", [Shen.type_symbol, "shen.a"]])]);})}, 1, [], "explode"];





Shen.fns["shen.explode-h"] = [Shen.type_func, function shen_user_lambda7232(Arg7231) {
  if (Arg7231.length < 1) return [Shen.type_func, shen_user_lambda7232, 1, Arg7231];
  var Arg7231_0 = Arg7231[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7231_0)))
  ? []
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7231_0]))
  ? [Shen.type_cons, Arg7231_0[0], Shen.call(Shen.fns["shen.explode-h"], [Shen.tlstr(Arg7231_0)])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explode-h"]]);})))}, 1, [], "shen.explode-h"];





Shen.fns["cd"] = [Shen.type_func, function shen_user_lambda7234(Arg7233) {
  if (Arg7233.length < 1) return [Shen.type_func, shen_user_lambda7234, 1, Arg7233];
  var Arg7233_0 = Arg7233[0];
  return (Shen.globals["*home-directory*"] = ((Shen.unwind_tail(Shen.$eq$(Arg7233_0, "")))
  ? ""
  : Shen.call(Shen.fns["shen.app"], [Arg7233_0, "/", [Shen.type_symbol, "shen.a"]])))}, 1, [], "cd"];





Shen.fns["map"] = [Shen.type_func, function shen_user_lambda7236(Arg7235) {
  if (Arg7235.length < 2) return [Shen.type_func, shen_user_lambda7236, 2, Arg7235];
  var Arg7235_0 = Arg7235[0], Arg7235_1 = Arg7235[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7235_0, Arg7235_1, []]);})}, 2, [], "map"];





Shen.fns["shen.map-h"] = [Shen.type_func, function shen_user_lambda7238(Arg7237) {
  if (Arg7237.length < 3) return [Shen.type_func, shen_user_lambda7238, 3, Arg7237];
  var Arg7237_0 = Arg7237[0], Arg7237_1 = Arg7237[1], Arg7237_2 = Arg7237[2];
  return ((Shen.empty$question$(Arg7237_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg7237_2]);})
  : ((Shen.is_type(Arg7237_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg7237_0, Arg7237_1[2], [Shen.type_cons, Shen.call(Arg7237_0, [Arg7237_1[1]]), Arg7237_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.map-h"]]);})))}, 3, [], "shen.map-h"];





Shen.fns["length"] = [Shen.type_func, function shen_user_lambda7240(Arg7239) {
  if (Arg7239.length < 1) return [Shen.type_func, shen_user_lambda7240, 1, Arg7239];
  var Arg7239_0 = Arg7239[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7239_0, 0]);})}, 1, [], "length"];





Shen.fns["shen.length-h"] = [Shen.type_func, function shen_user_lambda7242(Arg7241) {
  if (Arg7241.length < 2) return [Shen.type_func, shen_user_lambda7242, 2, Arg7241];
  var Arg7241_0 = Arg7241[0], Arg7241_1 = Arg7241[1];
  return ((Shen.empty$question$(Arg7241_0))
  ? Arg7241_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg7241_0[2], (Arg7241_1 + 1)]);}))}, 2, [], "shen.length-h"];





Shen.fns["occurrences"] = [Shen.type_func, function shen_user_lambda7244(Arg7243) {
  if (Arg7243.length < 2) return [Shen.type_func, shen_user_lambda7244, 2, Arg7243];
  var Arg7243_0 = Arg7243[0], Arg7243_1 = Arg7243[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7243_1, Arg7243_0)))
  ? 1
  : ((Shen.is_type(Arg7243_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["occurrences"], [Arg7243_0, Arg7243_1[1]]) + Shen.call(Shen.fns["occurrences"], [Arg7243_0, Arg7243_1[2]]))
  : 0))}, 2, [], "occurrences"];





Shen.fns["nth"] = [Shen.type_func, function shen_user_lambda7246(Arg7245) {
  if (Arg7245.length < 2) return [Shen.type_func, shen_user_lambda7246, 2, Arg7245];
  var Arg7245_0 = Arg7245[0], Arg7245_1 = Arg7245[1];
  return (((Shen.unwind_tail(Shen.$eq$(1, Arg7245_0)) && Shen.is_type(Arg7245_1, Shen.type_cons)))
  ? Arg7245_1[1]
  : ((Shen.is_type(Arg7245_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["nth"], [(Arg7245_0 - 1), Arg7245_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "nth"]]);})))}, 2, [], "nth"];





Shen.fns["integer?"] = [Shen.type_func, function shen_user_lambda7248(Arg7247) {
  if (Arg7247.length < 1) return [Shen.type_func, shen_user_lambda7248, 1, Arg7247];
  var Arg7247_0 = Arg7247[0];
  var R0;
  return ((typeof(Arg7247_0) == 'number') && ((R0 = Shen.call(Shen.fns["shen.abs"], [Arg7247_0])),
  Shen.call(Shen.fns["shen.integer-test?"], [R0, Shen.call(Shen.fns["shen.magless"], [R0, 1])])))}, 1, [], "integer?"];





Shen.fns["shen.abs"] = [Shen.type_func, function shen_user_lambda7250(Arg7249) {
  if (Arg7249.length < 1) return [Shen.type_func, shen_user_lambda7250, 1, Arg7249];
  var Arg7249_0 = Arg7249[0];
  return (((Arg7249_0 > 0))
  ? Arg7249_0
  : (0 - Arg7249_0))}, 1, [], "shen.abs"];





Shen.fns["shen.magless"] = [Shen.type_func, function shen_user_lambda7252(Arg7251) {
  if (Arg7251.length < 2) return [Shen.type_func, shen_user_lambda7252, 2, Arg7251];
  var Arg7251_0 = Arg7251[0], Arg7251_1 = Arg7251[1];
  var R0;
  return ((R0 = (Arg7251_1 * 2)),
  (((R0 > Arg7251_0))
  ? Arg7251_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.magless"], [Arg7251_0, R0]);})))}, 2, [], "shen.magless"];





Shen.fns["shen.integer-test?"] = [Shen.type_func, function shen_user_lambda7254(Arg7253) {
  if (Arg7253.length < 2) return [Shen.type_func, shen_user_lambda7254, 2, Arg7253];
  var Arg7253_0 = Arg7253[0], Arg7253_1 = Arg7253[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7253_0)))
  ? true
  : (((1 > Arg7253_0))
  ? false
  : ((R0 = (Arg7253_0 - Arg7253_1)),
  (((0 > R0))
  ? (function() {
  return Shen.call_tail(Shen.fns["integer?"], [Arg7253_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.integer-test?"], [R0, Arg7253_1]);})))))}, 2, [], "shen.integer-test?"];





Shen.fns["mapcan"] = [Shen.type_func, function shen_user_lambda7256(Arg7255) {
  if (Arg7255.length < 2) return [Shen.type_func, shen_user_lambda7256, 2, Arg7255];
  var Arg7255_0 = Arg7255[0], Arg7255_1 = Arg7255[1];
  return ((Shen.empty$question$(Arg7255_1))
  ? []
  : ((Shen.is_type(Arg7255_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Arg7255_0, [Arg7255_1[1]]), Shen.call(Shen.fns["mapcan"], [Arg7255_0, Arg7255_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "mapcan"]]);})))}, 2, [], "mapcan"];





Shen.fns["=="] = [Shen.type_func, function shen_user_lambda7258(Arg7257) {
  if (Arg7257.length < 2) return [Shen.type_func, shen_user_lambda7258, 2, Arg7257];
  var Arg7257_0 = Arg7257[0], Arg7257_1 = Arg7257[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7257_1, Arg7257_0)))
  ? true
  : false)}, 2, [], "=="];





Shen.fns["abort"] = [Shen.type_func, function shen_user_lambda7260(Arg7259) {
  if (Arg7259.length < 0) return [Shen.type_func, shen_user_lambda7260, 0, Arg7259];
  return (function() {
  return Shen.simple_error("");})}, 0, [], "abort"];





Shen.fns["bound?"] = [Shen.type_func, function shen_user_lambda7262(Arg7261) {
  if (Arg7261.length < 1) return [Shen.type_func, shen_user_lambda7262, 1, Arg7261];
  var Arg7261_0 = Arg7261[0];
  var R0;
  return (Shen.is_type(Arg7261_0, Shen.type_symbol) && ((R0 = Shen.trap_error(function() {return (Shen.globals[Arg7261_0[1]]);}, [Shen.type_func, function shen_user_lambda7264(Arg7263) {
  if (Arg7263.length < 1) return [Shen.type_func, shen_user_lambda7264, 1, Arg7263];
  var Arg7263_0 = Arg7263[0];
  return [Shen.type_symbol, "shen.this-symbol-is-unbound"]}, 1, [], undefined])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.this-symbol-is-unbound"])))
  ? false
  : true)))}, 1, [], "bound?"];





Shen.fns["shen.string->bytes"] = [Shen.type_func, function shen_user_lambda7266(Arg7265) {
  if (Arg7265.length < 1) return [Shen.type_func, shen_user_lambda7266, 1, Arg7265];
  var Arg7265_0 = Arg7265[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7265_0)))
  ? []
  : [Shen.type_cons, Shen.string_$gt$n(Arg7265_0[0]), Shen.call(Shen.fns["shen.string->bytes"], [Shen.tlstr(Arg7265_0)])])}, 1, [], "shen.string->bytes"];





Shen.fns["maxinferences"] = [Shen.type_func, function shen_user_lambda7268(Arg7267) {
  if (Arg7267.length < 1) return [Shen.type_func, shen_user_lambda7268, 1, Arg7267];
  var Arg7267_0 = Arg7267[0];
  return (Shen.globals["shen.*maxinferences*"] = Arg7267_0)}, 1, [], "maxinferences"];





Shen.fns["inferences"] = [Shen.type_func, function shen_user_lambda7270(Arg7269) {
  if (Arg7269.length < 0) return [Shen.type_func, shen_user_lambda7270, 0, Arg7269];
  return (Shen.globals["shen.*infs*"])}, 0, [], "inferences"];





Shen.fns["protect"] = [Shen.type_func, function shen_user_lambda7272(Arg7271) {
  if (Arg7271.length < 1) return [Shen.type_func, shen_user_lambda7272, 1, Arg7271];
  var Arg7271_0 = Arg7271[0];
  return Arg7271_0}, 1, [], "protect"];





Shen.fns["stoutput"] = [Shen.type_func, function shen_user_lambda7274(Arg7273) {
  if (Arg7273.length < 0) return [Shen.type_func, shen_user_lambda7274, 0, Arg7273];
  return (Shen.globals["*stoutput*"])}, 0, [], "stoutput"];





Shen.fns["string->symbol"] = [Shen.type_func, function shen_user_lambda7276(Arg7275) {
  if (Arg7275.length < 1) return [Shen.type_func, shen_user_lambda7276, 1, Arg7275];
  var Arg7275_0 = Arg7275[0];
  var R0;
  return ((R0 = Shen.intern(Arg7275_0)),
  ((Shen.is_type(R0, Shen.type_symbol))
  ? R0
  : (function() {
  return Shen.simple_error(("cannot intern " + Shen.call(Shen.fns["shen.app"], [Arg7275_0, " to a symbol", [Shen.type_symbol, "shen.s"]])));})))}, 1, [], "string->symbol"];





Shen.fns["shen.optimise"] = [Shen.type_func, function shen_user_lambda7278(Arg7277) {
  if (Arg7277.length < 1) return [Shen.type_func, shen_user_lambda7278, 1, Arg7277];
  var Arg7277_0 = Arg7277[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7277_0)))
  ? (Shen.globals["shen.*optimise*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7277_0)))
  ? (Shen.globals["shen.*optimise*"] = false)
  : (function() {
  return Shen.simple_error("optimise expects a + or a -.\x0a");})))}, 1, [], "shen.optimise"];










Shen.fns["shen.datatype-error"] = [Shen.type_func, function shen_user_lambda6960(Arg6959) {
  if (Arg6959.length < 1) return [Shen.type_func, shen_user_lambda6960, 1, Arg6959];
  var Arg6959_0 = Arg6959[0];
  return (((Shen.is_type(Arg6959_0, Shen.type_cons) && (Shen.is_type(Arg6959_0[2], Shen.type_cons) && Shen.empty$question$(Arg6959_0[2][2]))))
  ? (function() {
  return Shen.simple_error(("datatype syntax error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6959_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.datatype-error"]]);}))}, 1, [], "shen.datatype-error"];





Shen.fns["shen.<datatype-rules>"] = [Shen.type_func, function shen_user_lambda6962(Arg6961) {
  if (Arg6961.length < 1) return [Shen.type_func, shen_user_lambda6962, 1, Arg6961];
  var Arg6961_0 = Arg6961[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<datatype-rule>"], [Arg6961_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<datatype-rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6961_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rules>"];





Shen.fns["shen.<datatype-rule>"] = [Shen.type_func, function shen_user_lambda6964(Arg6963) {
  if (Arg6963.length < 1) return [Shen.type_func, shen_user_lambda6964, 1, Arg6963];
  var Arg6963_0 = Arg6963[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6963_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<singleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.single"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6963_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<doubleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.double"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<datatype-rule>"];





Shen.fns["shen.<side-conditions>"] = [Shen.type_func, function shen_user_lambda6966(Arg6965) {
  if (Arg6965.length < 1) return [Shen.type_func, shen_user_lambda6966, 1, Arg6965];
  var Arg6965_0 = Arg6965[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<side-condition>"], [Arg6965_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<side-conditions>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6965_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-conditions>"];





Shen.fns["shen.<side-condition>"] = [Shen.type_func, function shen_user_lambda6968(Arg6967) {
  if (Arg6967.length < 1) return [Shen.type_func, shen_user_lambda6968, 1, Arg6967];
  var Arg6967_0 = Arg6967[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6967_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6967_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<expr>"], [Shen.call(Shen.fns["shen.pair"], [Arg6967_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6967_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg6967_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6967_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<variable?>"], [Shen.call(Shen.fns["shen.pair"], [Arg6967_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6967_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<expr>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<side-condition>"];





Shen.fns["shen.<variable?>"] = [Shen.type_func, function shen_user_lambda6970(Arg6969) {
  if (Arg6969.length < 1) return [Shen.type_func, shen_user_lambda6970, 1, Arg6969];
  var Arg6969_0 = Arg6969[0];
  var R0;
  return (((Shen.is_type(Arg6969_0[1], Shen.type_cons))
  ? ((R0 = Arg6969_0[1][1]),
  ((Shen.call(Shen.fns["variable?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6969_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6969_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<variable?>"];





Shen.fns["shen.<expr>"] = [Shen.type_func, function shen_user_lambda6972(Arg6971) {
  if (Arg6971.length < 1) return [Shen.type_func, shen_user_lambda6972, 1, Arg6971];
  var Arg6971_0 = Arg6971[0];
  var R0;
  return (((Shen.is_type(Arg6971_0[1], Shen.type_cons))
  ? ((R0 = Arg6971_0[1][1]),
  (((!(Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]) || (Shen.call(Shen.fns["shen.singleunderline?"], [R0]) || Shen.call(Shen.fns["shen.doubleunderline?"], [R0])))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6971_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6971_0])])[1], Shen.call(Shen.fns["shen.remove-bar"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<expr>"];





Shen.fns["shen.remove-bar"] = [Shen.type_func, function shen_user_lambda6974(Arg6973) {
  if (Arg6973.length < 1) return [Shen.type_func, shen_user_lambda6974, 1, Arg6973];
  var Arg6973_0 = Arg6973[0];
  return (((Shen.is_type(Arg6973_0, Shen.type_cons) && (Shen.is_type(Arg6973_0[2], Shen.type_cons) && (Shen.is_type(Arg6973_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6973_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6973_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, Arg6973_0[1], Arg6973_0[2][2][1]]
  : ((Shen.is_type(Arg6973_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove-bar"], [Arg6973_0[1]]), Shen.call(Shen.fns["shen.remove-bar"], [Arg6973_0[2]])]
  : Arg6973_0))}, 1, [], "shen.remove-bar"];





Shen.fns["shen.<premises>"] = [Shen.type_func, function shen_user_lambda6976(Arg6975) {
  if (Arg6975.length < 1) return [Shen.type_func, shen_user_lambda6976, 1, Arg6975];
  var Arg6975_0 = Arg6975[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<premise>"], [Arg6975_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6975_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<premises>"];





Shen.fns["shen.<semicolon-symbol>"] = [Shen.type_func, function shen_user_lambda6978(Arg6977) {
  if (Arg6977.length < 1) return [Shen.type_func, shen_user_lambda6978, 1, Arg6977];
  var Arg6977_0 = Arg6977[0];
  var R0;
  return (((Shen.is_type(Arg6977_0[1], Shen.type_cons))
  ? ((R0 = Arg6977_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6977_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6977_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon-symbol>"];





Shen.fns["shen.<premise>"] = [Shen.type_func, function shen_user_lambda6980(Arg6979) {
  if (Arg6979.length < 1) return [Shen.type_func, shen_user_lambda6980, 1, Arg6979];
  var Arg6979_0 = Arg6979[0];
  var R0, R1;
  return ((((Shen.is_type(Arg6979_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6979_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6979_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6979_0])])[1], [Shen.type_symbol, "!"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6979_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6979_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<premise>"];





Shen.fns["shen.<conclusion>"] = [Shen.type_func, function shen_user_lambda6982(Arg6981) {
  if (Arg6981.length < 1) return [Shen.type_func, shen_user_lambda6982, 1, Arg6981];
  var Arg6981_0 = Arg6981[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6981_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6981_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<conclusion>"];





Shen.fns["shen.sequent"] = [Shen.type_func, function shen_user_lambda6984(Arg6983) {
  if (Arg6983.length < 2) return [Shen.type_func, shen_user_lambda6984, 2, Arg6983];
  var Arg6983_0 = Arg6983[0], Arg6983_1 = Arg6983[1];
  return [Shen.fns['shen.tuple'], Arg6983_0, Arg6983_1]}, 2, [], "shen.sequent"];





Shen.fns["shen.<formulae>"] = [Shen.type_func, function shen_user_lambda6986(Arg6985) {
  if (Arg6985.length < 1) return [Shen.type_func, shen_user_lambda6986, 1, Arg6985];
  var Arg6985_0 = Arg6985[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6985_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<comma-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formulae>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6985_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6985_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<formulae>"];





Shen.fns["shen.<comma-symbol>"] = [Shen.type_func, function shen_user_lambda6988(Arg6987) {
  if (Arg6987.length < 1) return [Shen.type_func, shen_user_lambda6988, 1, Arg6987];
  var Arg6987_0 = Arg6987[0];
  var R0;
  return (((Shen.is_type(Arg6987_0[1], Shen.type_cons))
  ? ((R0 = Arg6987_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ","])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6987_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6987_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma-symbol>"];





Shen.fns["shen.<formula>"] = [Shen.type_func, function shen_user_lambda6990(Arg6989) {
  if (Arg6989.length < 1) return [Shen.type_func, shen_user_lambda6990, 1, Arg6989];
  var Arg6989_0 = Arg6989[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6989_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<type>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.hdtl"], [R1])]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6989_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<formula>"];





Shen.fns["shen.<type>"] = [Shen.type_func, function shen_user_lambda6992(Arg6991) {
  if (Arg6991.length < 1) return [Shen.type_func, shen_user_lambda6992, 1, Arg6991];
  var Arg6991_0 = Arg6991[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6991_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<type>"];





Shen.fns["shen.<doubleunderline>"] = [Shen.type_func, function shen_user_lambda6994(Arg6993) {
  if (Arg6993.length < 1) return [Shen.type_func, shen_user_lambda6994, 1, Arg6993];
  var Arg6993_0 = Arg6993[0];
  var R0;
  return (((Shen.is_type(Arg6993_0[1], Shen.type_cons))
  ? ((R0 = Arg6993_0[1][1]),
  ((Shen.call(Shen.fns["shen.doubleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6993_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6993_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<doubleunderline>"];





Shen.fns["shen.<singleunderline>"] = [Shen.type_func, function shen_user_lambda6996(Arg6995) {
  if (Arg6995.length < 1) return [Shen.type_func, shen_user_lambda6996, 1, Arg6995];
  var Arg6995_0 = Arg6995[0];
  var R0;
  return (((Shen.is_type(Arg6995_0[1], Shen.type_cons))
  ? ((R0 = Arg6995_0[1][1]),
  ((Shen.call(Shen.fns["shen.singleunderline?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6995_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6995_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<singleunderline>"];





Shen.fns["shen.singleunderline?"] = [Shen.type_func, function shen_user_lambda6998(Arg6997) {
  if (Arg6997.length < 1) return [Shen.type_func, shen_user_lambda6998, 1, Arg6997];
  var Arg6997_0 = Arg6997[0];
  return (Shen.is_type(Arg6997_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.sh?"], [Shen.str(Arg6997_0)]))}, 1, [], "shen.singleunderline?"];





Shen.fns["shen.sh?"] = [Shen.type_func, function shen_user_lambda7000(Arg6999) {
  if (Arg6999.length < 1) return [Shen.type_func, shen_user_lambda7000, 1, Arg6999];
  var Arg6999_0 = Arg6999[0];
  return ((Shen.unwind_tail(Shen.$eq$("_", Arg6999_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6999_0[0], "_")) && Shen.call(Shen.fns["shen.sh?"], [Shen.tlstr(Arg6999_0)])))}, 1, [], "shen.sh?"];





Shen.fns["shen.doubleunderline?"] = [Shen.type_func, function shen_user_lambda7002(Arg7001) {
  if (Arg7001.length < 1) return [Shen.type_func, shen_user_lambda7002, 1, Arg7001];
  var Arg7001_0 = Arg7001[0];
  return (Shen.is_type(Arg7001_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.dh?"], [Shen.str(Arg7001_0)]))}, 1, [], "shen.doubleunderline?"];





Shen.fns["shen.dh?"] = [Shen.type_func, function shen_user_lambda7004(Arg7003) {
  if (Arg7003.length < 1) return [Shen.type_func, shen_user_lambda7004, 1, Arg7003];
  var Arg7003_0 = Arg7003[0];
  return ((Shen.unwind_tail(Shen.$eq$("=", Arg7003_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg7003_0[0], "=")) && Shen.call(Shen.fns["shen.dh?"], [Shen.tlstr(Arg7003_0)])))}, 1, [], "shen.dh?"];





Shen.fns["shen.process-datatype"] = [Shen.type_func, function shen_user_lambda7006(Arg7005) {
  if (Arg7005.length < 2) return [Shen.type_func, shen_user_lambda7006, 2, Arg7005];
  var Arg7005_0 = Arg7005[0], Arg7005_1 = Arg7005[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember-datatype"], [Shen.call(Shen.fns["shen.s-prolog"], [Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg7005_0, Arg7005_1])])]);})}, 2, [], "shen.process-datatype"];





Shen.fns["shen.remember-datatype"] = [Shen.type_func, function shen_user_lambda7008(Arg7007) {
  if (Arg7007.length < 1) return [Shen.type_func, shen_user_lambda7008, 1, Arg7007];
  var Arg7007_0 = Arg7007[0];
  return ((Shen.is_type(Arg7007_0, Shen.type_cons))
  ? ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg7007_0[1], (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*alldatatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg7007_0[1], (Shen.globals["shen.*alldatatypes*"])])),
  Arg7007_0[1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remember-datatype"]]);}))}, 1, [], "shen.remember-datatype"];





Shen.fns["shen.rules->horn-clauses"] = [Shen.type_func, function shen_user_lambda7010(Arg7009) {
  if (Arg7009.length < 2) return [Shen.type_func, shen_user_lambda7010, 2, Arg7009];
  var Arg7009_0 = Arg7009[0], Arg7009_1 = Arg7009[1];
  return ((Shen.empty$question$(Arg7009_1))
  ? []
  : (((Shen.is_type(Arg7009_1, Shen.type_cons) && (Shen.is_type(Arg7009_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.single"], Shen.call(Shen.fns["fst"], [Arg7009_1[1]]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause"], [Arg7009_0, Shen.call(Shen.fns["snd"], [Arg7009_1[1]])]), Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg7009_0, Arg7009_1[2]])]
  : (((Shen.is_type(Arg7009_1, Shen.type_cons) && (Shen.is_type(Arg7009_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.double"], Shen.call(Shen.fns["fst"], [Arg7009_1[1]]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.rules->horn-clauses"], [Arg7009_0, Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.double->singles"], [Shen.call(Shen.fns["snd"], [Arg7009_1[1]])]), Arg7009_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rules->horn-clauses"]]);}))))}, 2, [], "shen.rules->horn-clauses"];





Shen.fns["shen.double->singles"] = [Shen.type_func, function shen_user_lambda7012(Arg7011) {
  if (Arg7011.length < 1) return [Shen.type_func, shen_user_lambda7012, 1, Arg7011];
  var Arg7011_0 = Arg7011[0];
  return [Shen.type_cons, Shen.call(Shen.fns["shen.right-rule"], [Arg7011_0]), [Shen.type_cons, Shen.call(Shen.fns["shen.left-rule"], [Arg7011_0]), []]]}, 1, [], "shen.double->singles"];





Shen.fns["shen.right-rule"] = [Shen.type_func, function shen_user_lambda7014(Arg7013) {
  if (Arg7013.length < 1) return [Shen.type_func, shen_user_lambda7014, 1, Arg7013];
  var Arg7013_0 = Arg7013[0];
  return [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], Arg7013_0]}, 1, [], "shen.right-rule"];





Shen.fns["shen.left-rule"] = [Shen.type_func, function shen_user_lambda7016(Arg7015) {
  if (Arg7015.length < 1) return [Shen.type_func, shen_user_lambda7016, 1, Arg7015];
  var Arg7015_0 = Arg7015[0];
  var R0, R1;
  return (((Shen.is_type(Arg7015_0, Shen.type_cons) && (Shen.is_type(Arg7015_0[2], Shen.type_cons) && (Shen.is_type(Arg7015_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7015_0[2][2][1], Shen.fns['shen.tuple']) && (Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg7015_0[2][2][1]])) && Shen.empty$question$(Arg7015_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Qv"]])),
  (R1 = [Shen.fns['shen.tuple'], [Shen.type_cons, Shen.call(Shen.fns["snd"], [Arg7015_0[2][2][1]]), []], R0]),
  (R0 = [Shen.type_cons, [Shen.fns['shen.tuple'], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.right->left"], Arg7015_0[2][1]]), R0], []]),
  [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], [Shen.type_cons, Arg7015_0[1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.left-rule"]]);}))}, 1, [], "shen.left-rule"];





Shen.fns["shen.right->left"] = [Shen.type_func, function shen_user_lambda7018(Arg7017) {
  if (Arg7017.length < 1) return [Shen.type_func, shen_user_lambda7018, 1, Arg7017];
  var Arg7017_0 = Arg7017[0];
  return (((Shen.is_type(Arg7017_0, Shen.fns['shen.tuple']) && Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg7017_0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["snd"], [Arg7017_0]);})
  : (function() {
  return Shen.simple_error("syntax error with ==========\x0a");}))}, 1, [], "shen.right->left"];





Shen.fns["shen.rule->horn-clause"] = [Shen.type_func, function shen_user_lambda7020(Arg7019) {
  if (Arg7019.length < 2) return [Shen.type_func, shen_user_lambda7020, 2, Arg7019];
  var Arg7019_0 = Arg7019[0], Arg7019_1 = Arg7019[1];
  return (((Shen.is_type(Arg7019_1, Shen.type_cons) && (Shen.is_type(Arg7019_1[2], Shen.type_cons) && (Shen.is_type(Arg7019_1[2][2], Shen.type_cons) && (Shen.is_type(Arg7019_1[2][2][1], Shen.fns['shen.tuple']) && Shen.empty$question$(Arg7019_1[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-head"], [Arg7019_0, Shen.call(Shen.fns["snd"], [Arg7019_1[2][2][1]])]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-body"], [Arg7019_1[1], Arg7019_1[2][1], Shen.call(Shen.fns["fst"], [Arg7019_1[2][2][1]])]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.rule->horn-clause"]]);}))}, 2, [], "shen.rule->horn-clause"];





Shen.fns["shen.rule->horn-clause-head"] = [Shen.type_func, function shen_user_lambda7022(Arg7021) {
  if (Arg7021.length < 2) return [Shen.type_func, shen_user_lambda7022, 2, Arg7021];
  var Arg7021_0 = Arg7021[0], Arg7021_1 = Arg7021[1];
  return [Shen.type_cons, Arg7021_0, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg7021_1]), [Shen.type_cons, [Shen.type_symbol, "Context_1957"], []]]]}, 2, [], "shen.rule->horn-clause-head"];





Shen.fns["shen.mode-ify"] = [Shen.type_func, function shen_user_lambda7024(Arg7023) {
  if (Arg7023.length < 1) return [Shen.type_func, shen_user_lambda7024, 1, Arg7023];
  var Arg7023_0 = Arg7023[0];
  return (((Shen.is_type(Arg7023_0, Shen.type_cons) && (Shen.is_type(Arg7023_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg7023_0[2][1])) && (Shen.is_type(Arg7023_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7023_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_cons, Arg7023_0[1], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg7023_0[2][2][1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "-"], []]]]
  : Arg7023_0)}, 1, [], "shen.mode-ify"];





Shen.fns["shen.rule->horn-clause-body"] = [Shen.type_func, function shen_user_lambda7026(Arg7025) {
  if (Arg7025.length < 3) return [Shen.type_func, shen_user_lambda7026, 3, Arg7025];
  var Arg7025_0 = Arg7025[0], Arg7025_1 = Arg7025[1], Arg7025_2 = Arg7025[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.extract_vars"], Arg7025_2])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7028(Arg7027) {
  if (Arg7027.length < 1) return [Shen.type_func, shen_user_lambda7028, 1, Arg7027];
  var Arg7027_0 = Arg7027[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "shen.cl"]]);})}, 1, [], undefined], Arg7025_2])),
  (R2 = Shen.call(Shen.fns["shen.construct-search-literals"], [R1, R0, [Shen.type_symbol, "Context_1957"], [Shen.type_symbol, "Context1_1957"]])),
  Shen.call(Shen.fns["shen.construct-search-clauses"], [R1, Arg7025_2, R0]),
  (R1 = Shen.call(Shen.fns["shen.construct-side-literals"], [Arg7025_0])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7030(Arg7029) {
  if (Arg7029.length < 2) return [Shen.type_func, shen_user_lambda7030, 2, Arg7029];
  var Arg7029_0 = Arg7029[0], Arg7029_1 = Arg7029[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.construct-premiss-literal"], [Arg7029_1, Shen.empty$question$(Arg7029_0)]);})}, 2, [Arg7025_2], undefined], Arg7025_1])),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [R1, R0])]);}))}, 3, [], "shen.rule->horn-clause-body"];





Shen.fns["shen.construct-search-literals"] = [Shen.type_func, function shen_user_lambda7032(Arg7031) {
  if (Arg7031.length < 4) return [Shen.type_func, shen_user_lambda7032, 4, Arg7031];
  var Arg7031_0 = Arg7031[0], Arg7031_1 = Arg7031[1], Arg7031_2 = Arg7031[2], Arg7031_3 = Arg7031[3];
  return (((Shen.empty$question$(Arg7031_0) && Shen.empty$question$(Arg7031_1)))
  ? []
  : (function() {
  return Shen.call_tail(Shen.fns["shen.csl-help"], [Arg7031_0, Arg7031_1, Arg7031_2, Arg7031_3]);}))}, 4, [], "shen.construct-search-literals"];





Shen.fns["shen.csl-help"] = [Shen.type_func, function shen_user_lambda7034(Arg7033) {
  if (Arg7033.length < 4) return [Shen.type_func, shen_user_lambda7034, 4, Arg7033];
  var Arg7033_0 = Arg7033[0], Arg7033_1 = Arg7033[1], Arg7033_2 = Arg7033[2], Arg7033_3 = Arg7033[3];
  return (((Shen.empty$question$(Arg7033_0) && Shen.empty$question$(Arg7033_1)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "ContextOut_1957"], [Shen.type_cons, Arg7033_2, []]]], []]
  : (((Shen.is_type(Arg7033_0, Shen.type_cons) && Shen.is_type(Arg7033_1, Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_cons, Arg7033_0[1], [Shen.type_cons, Arg7033_2, [Shen.type_cons, Arg7033_3, Arg7033_1[1]]]], Shen.call(Shen.fns["shen.csl-help"], [Arg7033_0[2], Arg7033_1[2], Arg7033_3, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Context"]])])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.csl-help"]]);})))}, 4, [], "shen.csl-help"];





Shen.fns["shen.construct-search-clauses"] = [Shen.type_func, function shen_user_lambda7036(Arg7035) {
  if (Arg7035.length < 3) return [Shen.type_func, shen_user_lambda7036, 3, Arg7035];
  var Arg7035_0 = Arg7035[0], Arg7035_1 = Arg7035[1], Arg7035_2 = Arg7035[2];
  return (((Shen.empty$question$(Arg7035_0) && (Shen.empty$question$(Arg7035_1) && Shen.empty$question$(Arg7035_2))))
  ? [Shen.type_symbol, "shen.skip"]
  : (((Shen.is_type(Arg7035_0, Shen.type_cons) && (Shen.is_type(Arg7035_1, Shen.type_cons) && Shen.is_type(Arg7035_2, Shen.type_cons))))
  ? (Shen.call(Shen.fns["shen.construct-search-clause"], [Arg7035_0[1], Arg7035_1[1], Arg7035_2[1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.construct-search-clauses"], [Arg7035_0[2], Arg7035_1[2], Arg7035_2[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-search-clauses"]]);})))}, 3, [], "shen.construct-search-clauses"];





Shen.fns["shen.construct-search-clause"] = [Shen.type_func, function shen_user_lambda7038(Arg7037) {
  if (Arg7037.length < 3) return [Shen.type_func, shen_user_lambda7038, 3, Arg7037];
  var Arg7037_0 = Arg7037[0], Arg7037_1 = Arg7037[1], Arg7037_2 = Arg7037[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog"], [[Shen.type_cons, Shen.call(Shen.fns["shen.construct-base-search-clause"], [Arg7037_0, Arg7037_1, Arg7037_2]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-recursive-search-clause"], [Arg7037_0, Arg7037_1, Arg7037_2]), []]]]);})}, 3, [], "shen.construct-search-clause"];





Shen.fns["shen.construct-base-search-clause"] = [Shen.type_func, function shen_user_lambda7040(Arg7039) {
  if (Arg7039.length < 3) return [Shen.type_func, shen_user_lambda7040, 3, Arg7039];
  var Arg7039_0 = Arg7039[0], Arg7039_1 = Arg7039[1], Arg7039_2 = Arg7039[2];
  return [Shen.type_cons, [Shen.type_cons, Arg7039_0, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg7039_1]), [Shen.type_symbol, "In_1957"]], [Shen.type_cons, [Shen.type_symbol, "In_1957"], Arg7039_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [], []]]]}, 3, [], "shen.construct-base-search-clause"];





Shen.fns["shen.construct-recursive-search-clause"] = [Shen.type_func, function shen_user_lambda7042(Arg7041) {
  if (Arg7041.length < 3) return [Shen.type_func, shen_user_lambda7042, 3, Arg7041];
  var Arg7041_0 = Arg7041[0], Arg7041_1 = Arg7041[1], Arg7041_2 = Arg7041[2];
  return [Shen.type_cons, [Shen.type_cons, Arg7041_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Assumptions_1957"]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Out_1957"]], Arg7041_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg7041_0, [Shen.type_cons, [Shen.type_symbol, "Assumptions_1957"], [Shen.type_cons, [Shen.type_symbol, "Out_1957"], Arg7041_2]]], []], []]]]}, 3, [], "shen.construct-recursive-search-clause"];





Shen.fns["shen.construct-side-literals"] = [Shen.type_func, function shen_user_lambda7044(Arg7043) {
  if (Arg7043.length < 1) return [Shen.type_func, shen_user_lambda7044, 1, Arg7043];
  var Arg7043_0 = Arg7043[0];
  return ((Shen.empty$question$(Arg7043_0))
  ? []
  : (((Shen.is_type(Arg7043_0, Shen.type_cons) && (Shen.is_type(Arg7043_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg7043_0[1][1])) && (Shen.is_type(Arg7043_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg7043_0[1][2][2]))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "when"], Arg7043_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg7043_0[2]])]
  : (((Shen.is_type(Arg7043_0, Shen.type_cons) && (Shen.is_type(Arg7043_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg7043_0[1][1])) && (Shen.is_type(Arg7043_0[1][2], Shen.type_cons) && (Shen.is_type(Arg7043_0[1][2][2], Shen.type_cons) && Shen.empty$question$(Arg7043_0[1][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "is"], Arg7043_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg7043_0[2]])]
  : ((Shen.is_type(Arg7043_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.construct-side-literals"], [Arg7043_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-side-literals"]]);})))))}, 1, [], "shen.construct-side-literals"];





Shen.fns["shen.construct-premiss-literal"] = [Shen.type_func, function shen_user_lambda7046(Arg7045) {
  if (Arg7045.length < 2) return [Shen.type_func, shen_user_lambda7046, 2, Arg7045];
  var Arg7045_0 = Arg7045[0], Arg7045_1 = Arg7045[1];
  return ((Shen.is_type(Arg7045_0, Shen.fns['shen.tuple']))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.t*"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Shen.call(Shen.fns["snd"], [Arg7045_0])]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg7045_1, Shen.call(Shen.fns["fst"], [Arg7045_0])]), []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg7045_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-premiss-literal"]]);})))}, 2, [], "shen.construct-premiss-literal"];





Shen.fns["shen.construct-context"] = [Shen.type_func, function shen_user_lambda7048(Arg7047) {
  if (Arg7047.length < 2) return [Shen.type_func, shen_user_lambda7048, 2, Arg7047];
  var Arg7047_0 = Arg7047[0], Arg7047_1 = Arg7047[1];
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg7047_0)) && Shen.empty$question$(Arg7047_1)))
  ? [Shen.type_symbol, "Context_1957"]
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg7047_0)) && Shen.empty$question$(Arg7047_1)))
  ? [Shen.type_symbol, "ContextOut_1957"]
  : ((Shen.is_type(Arg7047_1, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg7047_1[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg7047_0, Arg7047_1[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.construct-context"]]);}))))}, 2, [], "shen.construct-context"];





Shen.fns["shen.recursive_cons_form"] = [Shen.type_func, function shen_user_lambda7050(Arg7049) {
  if (Arg7049.length < 1) return [Shen.type_func, shen_user_lambda7050, 1, Arg7049];
  var Arg7049_0 = Arg7049[0];
  return ((Shen.is_type(Arg7049_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg7049_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg7049_0[2]]), []]]]
  : Arg7049_0)}, 1, [], "shen.recursive_cons_form"];





Shen.fns["preclude"] = [Shen.type_func, function shen_user_lambda7052(Arg7051) {
  if (Arg7051.length < 1) return [Shen.type_func, shen_user_lambda7052, 1, Arg7051];
  var Arg7051_0 = Arg7051[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.preclude-h"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.intern-type"], Arg7051_0])]);})}, 1, [], "preclude"];





Shen.fns["shen.preclude-h"] = [Shen.type_func, function shen_user_lambda7054(Arg7053) {
  if (Arg7053.length < 1) return [Shen.type_func, shen_user_lambda7054, 1, Arg7053];
  var Arg7053_0 = Arg7053[0];
  return ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*datatypes*"]), Arg7053_0])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "shen.preclude-h"];





Shen.fns["include"] = [Shen.type_func, function shen_user_lambda7056(Arg7055) {
  if (Arg7055.length < 1) return [Shen.type_func, shen_user_lambda7056, 1, Arg7055];
  var Arg7055_0 = Arg7055[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.include-h"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.intern-type"], Arg7055_0])]);})}, 1, [], "include"];





Shen.fns["shen.include-h"] = [Shen.type_func, function shen_user_lambda7058(Arg7057) {
  if (Arg7057.length < 1) return [Shen.type_func, shen_user_lambda7058, 1, Arg7057];
  var Arg7057_0 = Arg7057[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["intersection"], [Arg7057_0, (Shen.globals["shen.*alldatatypes*"])])),
  (Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["union"], [R0, (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "shen.include-h"];





Shen.fns["preclude-all-but"] = [Shen.type_func, function shen_user_lambda7060(Arg7059) {
  if (Arg7059.length < 1) return [Shen.type_func, shen_user_lambda7060, 1, Arg7059];
  var Arg7059_0 = Arg7059[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.preclude-h"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.intern-type"], Arg7059_0])])]);})}, 1, [], "preclude-all-but"];





Shen.fns["include-all-but"] = [Shen.type_func, function shen_user_lambda7062(Arg7061) {
  if (Arg7061.length < 1) return [Shen.type_func, shen_user_lambda7062, 1, Arg7061];
  var Arg7061_0 = Arg7061[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.include-h"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.intern-type"], Arg7061_0])])]);})}, 1, [], "include-all-but"];





Shen.fns["shen.synonyms-help"] = [Shen.type_func, function shen_user_lambda7064(Arg7063) {
  if (Arg7063.length < 1) return [Shen.type_func, shen_user_lambda7064, 1, Arg7063];
  var Arg7063_0 = Arg7063[0];
  return ((Shen.empty$question$(Arg7063_0))
  ? [Shen.type_symbol, "synonyms"]
  : (((Shen.is_type(Arg7063_0, Shen.type_cons) && Shen.is_type(Arg7063_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.pushnew"], [[Shen.type_cons, Arg7063_0[1], Shen.call(Shen.fns["shen.curry-type"], [Arg7063_0[2][1]])], [Shen.type_symbol, "shen.*synonyms*"]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.synonyms-help"], [Arg7063_0[2][2]]);}))
  : (function() {
  return Shen.simple_error(("odd number of synonyms\x0a" + ""));})))}, 1, [], "shen.synonyms-help"];





Shen.fns["shen.pushnew"] = [Shen.type_func, function shen_user_lambda7066(Arg7065) {
  if (Arg7065.length < 2) return [Shen.type_func, shen_user_lambda7066, 2, Arg7065];
  var Arg7065_0 = Arg7065[0], Arg7065_1 = Arg7065[1];
  return ((Shen.call(Shen.fns["element?"], [Arg7065_0, (Shen.globals[Arg7065_1[1]])]))
  ? (Shen.globals[Arg7065_1[1]])
  : (Shen.globals[Arg7065_1[1]] = [Shen.type_cons, Arg7065_0, (Shen.globals[Arg7065_1[1]])]))}, 2, [], "shen.pushnew"];










Shen.fns["shen.yacc"] = [Shen.type_func, function shen_user_lambda7872(Arg7871) {
  if (Arg7871.length < 1) return [Shen.type_func, shen_user_lambda7872, 1, Arg7871];
  var Arg7871_0 = Arg7871[0];
  return (((Shen.is_type(Arg7871_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7871_0[1])) && (Shen.is_type(Arg7871_0[2], Shen.type_cons) && (Shen.is_type(Arg7871_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg7871_0[2][2][1])) && (Shen.is_type(Arg7871_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg7871_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg7871_0[2][2][2][2][1])) && (Shen.is_type(Arg7871_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg7871_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg7871_0[2][2][2][2][2][2][1])))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg7871_0[2][1], Arg7871_0[2][2][2][2][2][2][2]]]]);})
  : (((Shen.is_type(Arg7871_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg7871_0[1])) && Shen.is_type(Arg7871_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc->shen"], [Arg7871_0[2][1], Arg7871_0[2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.yacc"]]);})))}, 1, [], "shen.yacc"];





Shen.fns["shen.yacc->shen"] = [Shen.type_func, function shen_user_lambda7874(Arg7873) {
  if (Arg7873.length < 2) return [Shen.type_func, shen_user_lambda7874, 2, Arg7873];
  var Arg7873_0 = Arg7873[0], Arg7873_1 = Arg7873[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.split_cc_rules"], [Arg7873_1, []])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.cc_body"], R0])),
  (R0 = Shen.call(Shen.fns["shen.yacc_cases"], [R0])),
  (R0 = Shen.call(Shen.fns["shen.catchkill"], [R0])),
  [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg7873_0, [Shen.type_cons, [Shen.type_symbol, "Stream"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]]]])}, 2, [], "shen.yacc->shen"];





Shen.fns["shen.split_cc_rules"] = [Shen.type_func, function shen_user_lambda7876(Arg7875) {
  if (Arg7875.length < 2) return [Shen.type_func, shen_user_lambda7876, 2, Arg7875];
  var Arg7875_0 = Arg7875[0], Arg7875_1 = Arg7875[1];
  return (((Shen.empty$question$(Arg7875_0) && Shen.empty$question$(Arg7875_1)))
  ? []
  : ((Shen.empty$question$(Arg7875_0))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7875_1]), []]), []]
  : (((Shen.is_type(Arg7875_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], Arg7875_0[1]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Shen.call(Shen.fns["reverse"], [Arg7875_1]), []]), Shen.call(Shen.fns["shen.split_cc_rules"], [Arg7875_0[2], []])]
  : ((Shen.is_type(Arg7875_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rules"], [Arg7875_0[2], [Shen.type_cons, Arg7875_0[1], Arg7875_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rules"]]);})))))}, 2, [], "shen.split_cc_rules"];





Shen.fns["shen.split_cc_rule"] = [Shen.type_func, function shen_user_lambda7878(Arg7877) {
  if (Arg7877.length < 2) return [Shen.type_func, shen_user_lambda7878, 2, Arg7877];
  var Arg7877_0 = Arg7877[0], Arg7877_1 = Arg7877[1];
  return (((Shen.is_type(Arg7877_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7877_0[1])) && (Shen.is_type(Arg7877_0[2], Shen.type_cons) && Shen.empty$question$(Arg7877_0[2][2])))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7877_1]), Arg7877_0[2]]
  : (((Shen.is_type(Arg7877_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg7877_0[1])) && (Shen.is_type(Arg7877_0[2], Shen.type_cons) && (Shen.is_type(Arg7877_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg7877_0[2][2][1])) && (Shen.is_type(Arg7877_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7877_0[2][2][2][2]))))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg7877_1]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Arg7877_0[2][2][2][1], [Shen.type_cons, Arg7877_0[2][1], []]]], []]]
  : ((Shen.empty$question$(Arg7877_0))
  ? (Shen.call(Shen.fns["shen.prhush"], ["warning: ", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7880(Arg7879) {
  if (Arg7879.length < 1) return [Shen.type_func, shen_user_lambda7880, 1, Arg7879];
  var Arg7879_0 = Arg7879[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg7879_0, " ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg7877_1])]),
  Shen.call(Shen.fns["shen.prhush"], ["has no semantics.\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [[Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Shen.call(Shen.fns["reverse"], [Arg7877_1])]), []]], Arg7877_1]);}))
  : ((Shen.is_type(Arg7877_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [Arg7877_0[2], [Shen.type_cons, Arg7877_0[1], Arg7877_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.split_cc_rule"]]);})))))}, 2, [], "shen.split_cc_rule"];





Shen.fns["shen.default_semantics"] = [Shen.type_func, function shen_user_lambda7882(Arg7881) {
  if (Arg7881.length < 1) return [Shen.type_func, shen_user_lambda7882, 1, Arg7881];
  var Arg7881_0 = Arg7881[0];
  return ((Shen.empty$question$(Arg7881_0))
  ? []
  : (((Shen.is_type(Arg7881_0, Shen.type_cons) && Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7881_0[1]])))
  ? [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, Arg7881_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg7881_0[2]]), []]]]
  : ((Shen.is_type(Arg7881_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg7881_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg7881_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.default_semantics"]]);}))))}, 1, [], "shen.default_semantics"];





Shen.fns["shen.grammar_symbol?"] = [Shen.type_func, function shen_user_lambda7884(Arg7883) {
  if (Arg7883.length < 1) return [Shen.type_func, shen_user_lambda7884, 1, Arg7883];
  var Arg7883_0 = Arg7883[0];
  var R0;
  return (Shen.is_type(Arg7883_0, Shen.type_symbol) && ((R0 = Shen.call(Shen.fns["shen.strip-pathname"], [Shen.call(Shen.fns["explode"], [Arg7883_0])])),
  (Shen.unwind_tail(Shen.$eq$(R0[1], "<")) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["reverse"], [R0])[1], ">")))))}, 1, [], "shen.grammar_symbol?"];





Shen.fns["shen.yacc_cases"] = [Shen.type_func, function shen_user_lambda7886(Arg7885) {
  if (Arg7885.length < 1) return [Shen.type_func, shen_user_lambda7886, 1, Arg7885];
  var Arg7885_0 = Arg7885[0];
  var R0;
  return (((Shen.is_type(Arg7885_0, Shen.type_cons) && Shen.empty$question$(Arg7885_0[2])))
  ? Arg7885_0[1]
  : ((Shen.is_type(Arg7885_0, Shen.type_cons))
  ? ((R0 = [Shen.type_symbol, "YaccParse"]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, Arg7885_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen.yacc_cases"], [Arg7885_0[2]]), [Shen.type_cons, R0, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.yacc_cases"]]);})))}, 1, [], "shen.yacc_cases"];





Shen.fns["shen.cc_body"] = [Shen.type_func, function shen_user_lambda7888(Arg7887) {
  if (Arg7887.length < 1) return [Shen.type_func, shen_user_lambda7888, 1, Arg7887];
  var Arg7887_0 = Arg7887[0];
  return (((Shen.is_type(Arg7887_0, Shen.type_cons) && (Shen.is_type(Arg7887_0[2], Shen.type_cons) && Shen.empty$question$(Arg7887_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.syntax"], [Arg7887_0[1], [Shen.type_symbol, "Stream"], Arg7887_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cc_body"]]);}))}, 1, [], "shen.cc_body"];





Shen.fns["shen.syntax"] = [Shen.type_func, function shen_user_lambda7890(Arg7889) {
  if (Arg7889.length < 3) return [Shen.type_func, shen_user_lambda7890, 3, Arg7889];
  var Arg7889_0 = Arg7889[0], Arg7889_1 = Arg7889[1], Arg7889_2 = Arg7889[2];
  return (((Shen.empty$question$(Arg7889_0) && (Shen.is_type(Arg7889_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg7889_2[1])) && (Shen.is_type(Arg7889_2[2], Shen.type_cons) && (Shen.is_type(Arg7889_2[2][2], Shen.type_cons) && Shen.empty$question$(Arg7889_2[2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7889_2[2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7889_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7889_2[2][2][1]]), []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]
  : ((Shen.empty$question$(Arg7889_0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7889_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg7889_2]), []]]]
  : ((Shen.is_type(Arg7889_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7889_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.recursive_descent"], [Arg7889_0, Arg7889_1, Arg7889_2]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg7889_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variable-match"], [Arg7889_0, Arg7889_1, Arg7889_2]);})
  : ((Shen.call(Shen.fns["shen.jump_stream?"], [Arg7889_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.jump_stream"], [Arg7889_0, Arg7889_1, Arg7889_2]);})
  : ((Shen.call(Shen.fns["shen.terminal?"], [Arg7889_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check_stream"], [Arg7889_0, Arg7889_1, Arg7889_2]);})
  : ((Shen.call(Shen.fns["shen.list_stream?"], [Arg7889_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list_stream"], [Shen.call(Shen.fns["shen.decons"], [Arg7889_0[1]]), Arg7889_0[2], Arg7889_1, Arg7889_2]);})
  : (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg7889_0[1], " is not legal syntax\x0a", [Shen.type_symbol, "shen.a"]]));}))))))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.syntax"]]);}))))}, 3, [], "shen.syntax"];





Shen.fns["shen.list_stream?"] = [Shen.type_func, function shen_user_lambda7892(Arg7891) {
  if (Arg7891.length < 1) return [Shen.type_func, shen_user_lambda7892, 1, Arg7891];
  var Arg7891_0 = Arg7891[0];
  return ((Shen.is_type(Arg7891_0, Shen.type_cons))
  ? true
  : false)}, 1, [], "shen.list_stream?"];





Shen.fns["shen.decons"] = [Shen.type_func, function shen_user_lambda7894(Arg7893) {
  if (Arg7893.length < 1) return [Shen.type_func, shen_user_lambda7894, 1, Arg7893];
  var Arg7893_0 = Arg7893[0];
  return (((Shen.is_type(Arg7893_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg7893_0[1])) && (Shen.is_type(Arg7893_0[2], Shen.type_cons) && (Shen.is_type(Arg7893_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg7893_0[2][2][2]))))))
  ? [Shen.type_cons, Arg7893_0[2][1], Shen.call(Shen.fns["shen.decons"], [Arg7893_0[2][2][1]])]
  : Arg7893_0)}, 1, [], "shen.decons"];





Shen.fns["shen.list_stream"] = [Shen.type_func, function shen_user_lambda7896(Arg7895) {
  if (Arg7895.length < 4) return [Shen.type_func, shen_user_lambda7896, 4, Arg7895];
  var Arg7895_0 = Arg7895[0], Arg7895_1 = Arg7895[1], Arg7895_2 = Arg7895[2], Arg7895_3 = Arg7895[3];
  var R0, R1, R2;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7895_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7895_2, []]], []]], []]], []]]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "shen.snd-or-fail"], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7895_0, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7895_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7895_2, []]], []]]], [Shen.type_cons, [Shen.type_symbol, "shen.leave!"], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7895_1, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7895_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7895_2, []]], []]]], Arg7895_3]), []]]]), []]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])}, 4, [], "shen.list_stream"];





Shen.fns["shen.snd-or-fail"] = [Shen.type_func, function shen_user_lambda7898(Arg7897) {
  if (Arg7897.length < 1) return [Shen.type_func, shen_user_lambda7898, 1, Arg7897];
  var Arg7897_0 = Arg7897[0];
  return (((Shen.is_type(Arg7897_0, Shen.type_cons) && (Shen.is_type(Arg7897_0[2], Shen.type_cons) && Shen.empty$question$(Arg7897_0[2][2]))))
  ? Arg7897_0[2][1]
  : Shen.fail_obj)}, 1, [], "shen.snd-or-fail"];





Shen.fns["shen.strip-pathname"] = [Shen.type_func, function shen_user_lambda7900(Arg7899) {
  if (Arg7899.length < 1) return [Shen.type_func, shen_user_lambda7900, 1, Arg7899];
  var Arg7899_0 = Arg7899[0];
  return (((!Shen.call(Shen.fns["element?"], [".", Arg7899_0])))
  ? Arg7899_0
  : ((Shen.is_type(Arg7899_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.strip-pathname"], [Arg7899_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.strip-pathname"]]);})))}, 1, [], "shen.strip-pathname"];





Shen.fns["shen.recursive_descent"] = [Shen.type_func, function shen_user_lambda7902(Arg7901) {
  if (Arg7901.length < 3) return [Shen.type_func, shen_user_lambda7902, 3, Arg7901];
  var Arg7901_0 = Arg7901[0], Arg7901_1 = Arg7901[1], Arg7901_2 = Arg7901[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7901_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg7901_0[1], [Shen.type_cons, Arg7901_1, []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7901_0[2], Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7901_0[1]]), Arg7901_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7901_0[1]]), [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7901_0[1]]), []]]], []]], [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursive_descent"]]);}))}, 3, [], "shen.recursive_descent"];





Shen.fns["shen.variable-match"] = [Shen.type_func, function shen_user_lambda7904(Arg7903) {
  if (Arg7903.length < 3) return [Shen.type_func, shen_user_lambda7904, 3, Arg7903];
  var Arg7903_0 = Arg7903[0], Arg7903_1 = Arg7903[1], Arg7903_2 = Arg7903[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7903_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7903_1, []]], []]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7903_0[1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7903_1, []]], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg7903_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7903_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7903_1, []]], []]]], Arg7903_2]), []]]]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.variable-match"]]);}))}, 3, [], "shen.variable-match"];





Shen.fns["shen.terminal?"] = [Shen.type_func, function shen_user_lambda7906(Arg7905) {
  if (Arg7905.length < 1) return [Shen.type_func, shen_user_lambda7906, 1, Arg7905];
  var Arg7905_0 = Arg7905[0];
  return ((Shen.is_type(Arg7905_0, Shen.type_cons))
  ? false
  : ((Shen.call(Shen.fns["variable?"], [Arg7905_0]))
  ? false
  : true))}, 1, [], "shen.terminal?"];





Shen.fns["shen.jump_stream?"] = [Shen.type_func, function shen_user_lambda7908(Arg7907) {
  if (Arg7907.length < 1) return [Shen.type_func, shen_user_lambda7908, 1, Arg7907];
  var Arg7907_0 = Arg7907[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7907_0, [Shen.type_symbol, "_"])))
  ? true
  : false)}, 1, [], "shen.jump_stream?"];





Shen.fns["shen.check_stream"] = [Shen.type_func, function shen_user_lambda7910(Arg7909) {
  if (Arg7909.length < 3) return [Shen.type_func, shen_user_lambda7910, 3, Arg7909];
  var Arg7909_0 = Arg7909[0], Arg7909_1 = Arg7909[1], Arg7909_2 = Arg7909[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7909_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7909_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg7909_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7909_1, []]], []]], []]]], []]]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7909_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7909_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7909_1, []]], []]]], Arg7909_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.check_stream"]]);}))}, 3, [], "shen.check_stream"];





Shen.fns["shen.jump_stream"] = [Shen.type_func, function shen_user_lambda7912(Arg7911) {
  if (Arg7911.length < 3) return [Shen.type_func, shen_user_lambda7912, 3, Arg7911];
  var Arg7911_0 = Arg7911[0], Arg7911_1 = Arg7911[1], Arg7911_2 = Arg7911[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg7911_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7911_1, []]], []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg7911_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg7911_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg7911_1, []]], []]]], Arg7911_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.jump_stream"]]);}))}, 3, [], "shen.jump_stream"];





Shen.fns["shen.semantics"] = [Shen.type_func, function shen_user_lambda7914(Arg7913) {
  if (Arg7913.length < 1) return [Shen.type_func, shen_user_lambda7914, 1, Arg7913];
  var Arg7913_0 = Arg7913[0];
  return (((Shen.is_type(Arg7913_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.leave!"], Arg7913_0[1])) && (Shen.is_type(Arg7913_0[2], Shen.type_cons) && Shen.empty$question$(Arg7913_0[2][2])))))
  ? Arg7913_0[2][1]
  : ((Shen.empty$question$(Arg7913_0))
  ? []
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg7913_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7913_0]), []]]
  : ((Shen.call(Shen.fns["variable?"], [Arg7913_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg7913_0]);})
  : ((Shen.is_type(Arg7913_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.semantics"], Arg7913_0]);})
  : Arg7913_0)))))}, 1, [], "shen.semantics"];










Shen.fns["shen.pair"] = [Shen.type_func, function shen_user_lambda7917(Arg7916) {
  if (Arg7916.length < 2) return [Shen.type_func, shen_user_lambda7917, 2, Arg7916];
  var Arg7916_0 = Arg7916[0], Arg7916_1 = Arg7916[1];
  return [Shen.type_cons, Arg7916_0, [Shen.type_cons, Arg7916_1, []]]}, 2, [], "shen.pair"];





Shen.fns["shen.hdtl"] = [Shen.type_func, function shen_user_lambda7919(Arg7918) {
  if (Arg7918.length < 1) return [Shen.type_func, shen_user_lambda7919, 1, Arg7918];
  var Arg7918_0 = Arg7918[0];
  return Arg7918_0[2][1]}, 1, [], "shen.hdtl"];





Shen.fns["<!>"] = [Shen.type_func, function shen_user_lambda7921(Arg7920) {
  if (Arg7920.length < 1) return [Shen.type_func, shen_user_lambda7921, 1, Arg7920];
  var Arg7920_0 = Arg7920[0];
  return (((Shen.is_type(Arg7920_0, Shen.type_cons) && (Shen.is_type(Arg7920_0[2], Shen.type_cons) && Shen.empty$question$(Arg7920_0[2][2]))))
  ? [Shen.type_cons, [], [Shen.type_cons, Arg7920_0[1], []]]
  : Shen.fail_obj)}, 1, [], "<!>"];





Shen.fns["<e>"] = [Shen.type_func, function shen_user_lambda7923(Arg7922) {
  if (Arg7922.length < 1) return [Shen.type_func, shen_user_lambda7923, 1, Arg7922];
  var Arg7922_0 = Arg7922[0];
  return (((Shen.is_type(Arg7922_0, Shen.type_cons) && (Shen.is_type(Arg7922_0[2], Shen.type_cons) && Shen.empty$question$(Arg7922_0[2][2]))))
  ? [Shen.type_cons, Arg7922_0[1], [Shen.type_cons, [], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "<e>"]]);}))}, 1, [], "<e>"];





Shen.fns["shen.catchkill"] = [Shen.type_func, function shen_user_lambda7925(Arg7924) {
  if (Arg7924.length < 1) return [Shen.type_func, shen_user_lambda7925, 1, Arg7924];
  var Arg7924_0 = Arg7924[0];
  return [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, Arg7924_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.analyse-kill"], [Shen.type_cons, [Shen.type_symbol, "E"], []]], []]]], []]]]}, 1, [], "shen.catchkill"];





Shen.fns["shen.analyse-kill"] = [Shen.type_func, function shen_user_lambda7927(Arg7926) {
  if (Arg7926.length < 1) return [Shen.type_func, shen_user_lambda7927, 1, Arg7926];
  var Arg7926_0 = Arg7926[0];
  var R0;
  return ((R0 = Shen.error_to_string(Arg7926_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, "Shen YACC kill")))
  ? Shen.fail_obj
  : (function() {
  return Shen.simple_error(R0);})))}, 1, [], "shen.analyse-kill"];





Shen.fns["kill"] = [Shen.type_func, function shen_user_lambda7929(Arg7928) {
  if (Arg7928.length < 0) return [Shen.type_func, shen_user_lambda7929, 0, Arg7928];
  return (function() {
  return Shen.simple_error("Shen YACC kill");})}, 0, [], "kill"];










Shen.fns["pr"] = [Shen.type_func, function shen_user_lambda7807(Arg7806) {
  if (Arg7806.length < 2) return [Shen.type_func, shen_user_lambda7807, 2, Arg7806];
  var Arg7806_0 = Arg7806[0], Arg7806_1 = Arg7806[1];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["shen.prh"], [Arg7806_0, Arg7806_1, 0]);}, [Shen.type_func, function shen_user_lambda7809(Arg7808) {
  if (Arg7808.length < 2) return [Shen.type_func, shen_user_lambda7809, 2, Arg7808];
  var Arg7808_0 = Arg7808[0], Arg7808_1 = Arg7808[1];
  return Arg7808_0}, 2, [Arg7806_0], undefined]);})}, 2, [], "pr"];





Shen.fns["shen.prh"] = [Shen.type_func, function shen_user_lambda7811(Arg7810) {
  if (Arg7810.length < 3) return [Shen.type_func, shen_user_lambda7811, 3, Arg7810];
  var Arg7810_0 = Arg7810[0], Arg7810_1 = Arg7810[1], Arg7810_2 = Arg7810[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prh"], [Arg7810_0, Arg7810_1, Shen.call(Shen.fns["shen.write-char-and-inc"], [Arg7810_0, Arg7810_1, Arg7810_2])]);})}, 3, [], "shen.prh"];





Shen.fns["shen.write-char-and-inc"] = [Shen.type_func, function shen_user_lambda7813(Arg7812) {
  if (Arg7812.length < 3) return [Shen.type_func, shen_user_lambda7813, 3, Arg7812];
  var Arg7812_0 = Arg7812[0], Arg7812_1 = Arg7812[1], Arg7812_2 = Arg7812[2];
  return (Shen.write_byte(Shen.string_$gt$n(Arg7812_0[Arg7812_2]), Arg7812_1),
  (Arg7812_2 + 1))}, 3, [], "shen.write-char-and-inc"];





Shen.fns["print"] = [Shen.type_func, function shen_user_lambda7815(Arg7814) {
  if (Arg7814.length < 1) return [Shen.type_func, shen_user_lambda7815, 1, Arg7814];
  var Arg7814_0 = Arg7814[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.insert"], [Arg7814_0, "~S"])),
  Shen.call(Shen.fns["shen.prhush"], [R0, Shen.call(Shen.fns["stoutput"], [])]),
  Arg7814_0)}, 1, [], "print"];





Shen.fns["shen.prhush"] = [Shen.type_func, function shen_user_lambda7817(Arg7816) {
  if (Arg7816.length < 2) return [Shen.type_func, shen_user_lambda7817, 2, Arg7816];
  var Arg7816_0 = Arg7816[0], Arg7816_1 = Arg7816[1];
  return (((Shen.globals["*hush*"]))
  ? Arg7816_0
  : (function() {
  return Shen.call_tail(Shen.fns["pr"], [Arg7816_0, Arg7816_1]);}))}, 2, [], "shen.prhush"];





Shen.fns["shen.mkstr"] = [Shen.type_func, function shen_user_lambda7819(Arg7818) {
  if (Arg7818.length < 2) return [Shen.type_func, shen_user_lambda7819, 2, Arg7818];
  var Arg7818_0 = Arg7818[0], Arg7818_1 = Arg7818[1];
  return (((typeof(Arg7818_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg7818_0]), Arg7818_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, Arg7818_0, []]], Arg7818_1]);}))}, 2, [], "shen.mkstr"];





Shen.fns["shen.mkstr-l"] = [Shen.type_func, function shen_user_lambda7821(Arg7820) {
  if (Arg7820.length < 2) return [Shen.type_func, shen_user_lambda7821, 2, Arg7820];
  var Arg7820_0 = Arg7820[0], Arg7820_1 = Arg7820[1];
  return ((Shen.empty$question$(Arg7820_1))
  ? Arg7820_0
  : ((Shen.is_type(Arg7820_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.insert-l"], [Arg7820_1[1], Arg7820_0]), Arg7820_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-l"]]);})))}, 2, [], "shen.mkstr-l"];





Shen.fns["shen.insert-l"] = [Shen.type_func, function shen_user_lambda7823(Arg7822) {
  if (Arg7822.length < 2) return [Shen.type_func, shen_user_lambda7823, 2, Arg7822];
  var Arg7822_0 = Arg7822[0], Arg7822_1 = Arg7822[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7822_1)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7822_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7822_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7822_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg7822_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7822_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7822_1)), [Shen.type_cons, [Shen.type_symbol, "shen.a"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7822_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7822_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7822_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg7822_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7822_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7822_1)), [Shen.type_cons, [Shen.type_symbol, "shen.r"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7822_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7822_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7822_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg7822_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7822_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg7822_1)), [Shen.type_cons, [Shen.type_symbol, "shen.s"], []]]]]
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7822_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.factor-cn"], [[Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg7822_1[0], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7822_0, Shen.tlstr(Arg7822_1)]), []]]]]);})
  : (((Shen.is_type(Arg7822_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7822_1[1])) && (Shen.is_type(Arg7822_1[2], Shen.type_cons) && (Shen.is_type(Arg7822_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg7822_1[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg7822_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7822_0, Arg7822_1[2][2][1]]), []]]]
  : (((Shen.is_type(Arg7822_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.app"], Arg7822_1[1])) && (Shen.is_type(Arg7822_1[2], Shen.type_cons) && (Shen.is_type(Arg7822_1[2][2], Shen.type_cons) && (Shen.is_type(Arg7822_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7822_1[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg7822_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg7822_0, Arg7822_1[2][2][1]]), Arg7822_1[2][2][2]]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-l"]]);}))))))))}, 2, [], "shen.insert-l"];





Shen.fns["shen.factor-cn"] = [Shen.type_func, function shen_user_lambda7825(Arg7824) {
  if (Arg7824.length < 1) return [Shen.type_func, shen_user_lambda7825, 1, Arg7824];
  var Arg7824_0 = Arg7824[0];
  return (((Shen.is_type(Arg7824_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7824_0[1])) && (Shen.is_type(Arg7824_0[2], Shen.type_cons) && (Shen.is_type(Arg7824_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7824_0[2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg7824_0[2][2][1][1])) && (Shen.is_type(Arg7824_0[2][2][1][2], Shen.type_cons) && (Shen.is_type(Arg7824_0[2][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg7824_0[2][2][1][2][2][2]) && (Shen.empty$question$(Arg7824_0[2][2][2]) && ((typeof(Arg7824_0[2][1]) == 'string') && (typeof(Arg7824_0[2][2][1][2][1]) == 'string')))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, (Arg7824_0[2][1] + Arg7824_0[2][2][1][2][1]), Arg7824_0[2][2][1][2][2]]]
  : Arg7824_0)}, 1, [], "shen.factor-cn"];





Shen.fns["shen.proc-nl"] = [Shen.type_func, function shen_user_lambda7827(Arg7826) {
  if (Arg7826.length < 1) return [Shen.type_func, shen_user_lambda7827, 1, Arg7826];
  var Arg7826_0 = Arg7826[0];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7826_0)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7826_0]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7826_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7826_0)]) && Shen.unwind_tail(Shen.$eq$("%", Shen.tlstr(Arg7826_0)[0]))))))
  ? (Shen.n_$gt$string(10) + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Shen.tlstr(Arg7826_0))]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7826_0]))
  ? (Arg7826_0[0] + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Arg7826_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.proc-nl"]]);}))))}, 1, [], "shen.proc-nl"];





Shen.fns["shen.mkstr-r"] = [Shen.type_func, function shen_user_lambda7829(Arg7828) {
  if (Arg7828.length < 2) return [Shen.type_func, shen_user_lambda7829, 2, Arg7828];
  var Arg7828_0 = Arg7828[0], Arg7828_1 = Arg7828[1];
  return ((Shen.empty$question$(Arg7828_1))
  ? Arg7828_0
  : ((Shen.is_type(Arg7828_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.insert"], [Shen.type_cons, Arg7828_1[1], [Shen.type_cons, Arg7828_0, []]]], Arg7828_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mkstr-r"]]);})))}, 2, [], "shen.mkstr-r"];





Shen.fns["shen.insert"] = [Shen.type_func, function shen_user_lambda7831(Arg7830) {
  if (Arg7830.length < 2) return [Shen.type_func, shen_user_lambda7831, 2, Arg7830];
  var Arg7830_0 = Arg7830[0], Arg7830_1 = Arg7830[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-h"], [Arg7830_0, Arg7830_1, ""]);})}, 2, [], "shen.insert"];





Shen.fns["shen.insert-h"] = [Shen.type_func, function shen_user_lambda7833(Arg7832) {
  if (Arg7832.length < 3) return [Shen.type_func, shen_user_lambda7833, 3, Arg7832];
  var Arg7832_0 = Arg7832[0], Arg7832_1 = Arg7832[1], Arg7832_2 = Arg7832[2];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg7832_1)))
  ? Arg7832_2
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7832_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7832_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7832_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg7832_1)[0]))))))
  ? (Arg7832_2 + Shen.call(Shen.fns["shen.app"], [Arg7832_0, Shen.tlstr(Shen.tlstr(Arg7832_1)), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7832_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7832_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7832_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg7832_1)[0]))))))
  ? (Arg7832_2 + Shen.call(Shen.fns["shen.app"], [Arg7832_0, Shen.tlstr(Shen.tlstr(Arg7832_1)), [Shen.type_symbol, "shen.r"]]))
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg7832_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg7832_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg7832_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg7832_1)[0]))))))
  ? (Arg7832_2 + Shen.call(Shen.fns["shen.app"], [Arg7832_0, Shen.tlstr(Shen.tlstr(Arg7832_1)), [Shen.type_symbol, "shen.s"]]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg7832_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-h"], [Arg7832_0, Shen.tlstr(Arg7832_1), (Arg7832_2 + Arg7832_1[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-h"]]);}))))))}, 3, [], "shen.insert-h"];





Shen.fns["shen.app"] = [Shen.type_func, function shen_user_lambda7835(Arg7834) {
  if (Arg7834.length < 3) return [Shen.type_func, shen_user_lambda7835, 3, Arg7834];
  var Arg7834_0 = Arg7834[0], Arg7834_1 = Arg7834[1], Arg7834_2 = Arg7834[2];
  return (Shen.call(Shen.fns["shen.arg->str"], [Arg7834_0, Arg7834_2]) + Arg7834_1)}, 3, [], "shen.app"];





Shen.fns["shen.arg->str"] = [Shen.type_func, function shen_user_lambda7837(Arg7836) {
  if (Arg7836.length < 2) return [Shen.type_func, shen_user_lambda7837, 2, Arg7836];
  var Arg7836_0 = Arg7836[0], Arg7836_1 = Arg7836[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7836_0, Shen.fail_obj)))
  ? "..."
  : ((Shen.call(Shen.fns["shen.list?"], [Arg7836_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list->str"], [Arg7836_0, Arg7836_1]);})
  : (((typeof(Arg7836_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.str->str"], [Arg7836_0, Arg7836_1]);})
  : ((Shen.absvector$question$(Arg7836_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.vector->str"], [Arg7836_0, Arg7836_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.atom->str"], [Arg7836_0]);})))))}, 2, [], "shen.arg->str"];





Shen.fns["shen.list->str"] = [Shen.type_func, function shen_user_lambda7839(Arg7838) {
  if (Arg7838.length < 2) return [Shen.type_func, shen_user_lambda7839, 2, Arg7838];
  var Arg7838_0 = Arg7838[0], Arg7838_1 = Arg7838[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.r"], Arg7838_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["(", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg7838_0, [Shen.type_symbol, "shen.r"], Shen.call(Shen.fns["shen.maxseq"], [])]), ")"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg7838_0, Arg7838_1, Shen.call(Shen.fns["shen.maxseq"], [])]), "]"])]);}))}, 2, [], "shen.list->str"];





Shen.fns["shen.maxseq"] = [Shen.type_func, function shen_user_lambda7841(Arg7840) {
  if (Arg7840.length < 0) return [Shen.type_func, shen_user_lambda7841, 0, Arg7840];
  return (Shen.globals["*maximum-print-sequence-size*"])}, 0, [], "shen.maxseq"];





Shen.fns["shen.iter-list"] = [Shen.type_func, function shen_user_lambda7843(Arg7842) {
  if (Arg7842.length < 3) return [Shen.type_func, shen_user_lambda7843, 3, Arg7842];
  var Arg7842_0 = Arg7842[0], Arg7842_1 = Arg7842[1], Arg7842_2 = Arg7842[2];
  return ((Shen.empty$question$(Arg7842_0))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg7842_2)))
  ? "... etc"
  : (((Shen.is_type(Arg7842_0, Shen.type_cons) && Shen.empty$question$(Arg7842_0[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [Arg7842_0[1], Arg7842_1]);})
  : ((Shen.is_type(Arg7842_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Arg7842_0[1], Arg7842_1]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-list"], [Arg7842_0[2], Arg7842_1, (Arg7842_2 - 1)])])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["|", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.arg->str"], [Arg7842_0, Arg7842_1])])]);})))))}, 3, [], "shen.iter-list"];





Shen.fns["shen.str->str"] = [Shen.type_func, function shen_user_lambda7845(Arg7844) {
  if (Arg7844.length < 2) return [Shen.type_func, shen_user_lambda7845, 2, Arg7844];
  var Arg7844_0 = Arg7844[0], Arg7844_1 = Arg7844[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg7844_1)))
  ? Arg7844_0
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(34), Shen.call(Shen.fns["@s"], [Arg7844_0, Shen.n_$gt$string(34)])]);}))}, 2, [], "shen.str->str"];





Shen.fns["shen.vector->str"] = [Shen.type_func, function shen_user_lambda7847(Arg7846) {
  if (Arg7846.length < 2) return [Shen.type_func, shen_user_lambda7847, 2, Arg7846];
  var Arg7846_0 = Arg7846[0], Arg7846_1 = Arg7846[1];
  return ((Shen.call(Shen.fns["shen.print-vector?"], [Arg7846_0]))
  ? (function() {
  return Shen.call_tail(Shen.absvector_ref(Arg7846_0, 0), [Arg7846_0]);})
  : ((Shen.vector$question$(Arg7846_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg7846_0, 1, Arg7846_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg7846_0, 0, Arg7846_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">>"])])]);})))}, 2, [], "shen.vector->str"];





Shen.fns["shen.print-vector?"] = [Shen.type_func, function shen_user_lambda7849(Arg7848) {
  if (Arg7848.length < 1) return [Shen.type_func, shen_user_lambda7849, 1, Arg7848];
  var Arg7848_0 = Arg7848[0];
  var R0;
  return ((R0 = Shen.absvector_ref(Arg7848_0, 0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.tuple"])))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.pvar"])))
  ? true
  : (((!(typeof(R0) == 'number')))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.fbound?"], [R0]);})
  : false))))}, 1, [], "shen.print-vector?"];





Shen.fns["shen.fbound?"] = [Shen.type_func, function shen_user_lambda7851(Arg7850) {
  if (Arg7850.length < 1) return [Shen.type_func, shen_user_lambda7851, 1, Arg7850];
  var Arg7850_0 = Arg7850[0];
  return (function() {
  return Shen.trap_error(function() {return (Shen.call(Shen.fns["ps"], [Arg7850_0]),
  true);}, [Shen.type_func, function shen_user_lambda7853(Arg7852) {
  if (Arg7852.length < 1) return [Shen.type_func, shen_user_lambda7853, 1, Arg7852];
  var Arg7852_0 = Arg7852[0];
  return false}, 1, [], undefined]);})}, 1, [], "shen.fbound?"];





Shen.fns["shen.tuple"] = [Shen.type_func, function shen_user_lambda7855(Arg7854) {
  if (Arg7854.length < 1) return [Shen.type_func, shen_user_lambda7855, 1, Arg7854];
  var Arg7854_0 = Arg7854[0];
  return ("(@p " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg7854_0, 1), (" " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg7854_0, 2), ")", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.s"]]))}, 1, [], "shen.tuple"];





Shen.fns["shen.iter-vector"] = [Shen.type_func, function shen_user_lambda7857(Arg7856) {
  if (Arg7856.length < 4) return [Shen.type_func, shen_user_lambda7857, 4, Arg7856];
  var Arg7856_0 = Arg7856[0], Arg7856_1 = Arg7856[1], Arg7856_2 = Arg7856[2], Arg7856_3 = Arg7856[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7856_3)))
  ? "... etc"
  : ((R0 = Shen.trap_error(function() {return Shen.absvector_ref(Arg7856_0, Arg7856_1);}, [Shen.type_func, function shen_user_lambda7859(Arg7858) {
  if (Arg7858.length < 1) return [Shen.type_func, shen_user_lambda7859, 1, Arg7858];
  var Arg7858_0 = Arg7858[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined])),
  (R1 = Shen.trap_error(function() {return Shen.absvector_ref(Arg7856_0, (Arg7856_1 + 1));}, [Shen.type_func, function shen_user_lambda7861(Arg7860) {
  if (Arg7860.length < 1) return [Shen.type_func, shen_user_lambda7861, 1, Arg7860];
  var Arg7860_0 = Arg7860[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [R0, Arg7856_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [R0, Arg7856_2]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-vector"], [Arg7856_0, (Arg7856_1 + 1), Arg7856_2, (Arg7856_3 - 1)])])]);})))))}, 4, [], "shen.iter-vector"];





Shen.fns["shen.atom->str"] = [Shen.type_func, function shen_user_lambda7863(Arg7862) {
  if (Arg7862.length < 1) return [Shen.type_func, shen_user_lambda7863, 1, Arg7862];
  var Arg7862_0 = Arg7862[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.str(Arg7862_0);}, [Shen.type_func, function shen_user_lambda7865(Arg7864) {
  if (Arg7864.length < 1) return [Shen.type_func, shen_user_lambda7865, 1, Arg7864];
  var Arg7864_0 = Arg7864[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.funexstring"], []);})}, 1, [], undefined]);})}, 1, [], "shen.atom->str"];





Shen.fns["shen.funexstring"] = [Shen.type_func, function shen_user_lambda7867(Arg7866) {
  if (Arg7866.length < 0) return [Shen.type_func, shen_user_lambda7867, 0, Arg7866];
  return (function() {
  return Shen.call_tail(Shen.fns["@s"], ["", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "x"]]), [Shen.type_symbol, "shen.a"]]), ""])])])])])]);})}, 0, [], "shen.funexstring"];





Shen.fns["shen.list?"] = [Shen.type_func, function shen_user_lambda7869(Arg7868) {
  if (Arg7868.length < 1) return [Shen.type_func, shen_user_lambda7869, 1, Arg7868];
  var Arg7868_0 = Arg7868[0];
  return (Shen.empty$question$(Arg7868_0) || Shen.is_type(Arg7868_0, Shen.type_cons))}, 1, [], "shen.list?"];










Shen.fns["read-file-as-bytelist"] = [Shen.type_func, function shen_user_lambda6793(Arg6792) {
  if (Arg6792.length < 1) return [Shen.type_func, shen_user_lambda6793, 1, Arg6792];
  var Arg6792_0 = Arg6792[0];
  var R0, R1;
  return ((R0 = Shen.open(Arg6792_0, [Shen.type_symbol, "in"])),
  (R1 = Shen.read_byte(R0)),
  (R1 = Shen.call(Shen.fns["shen.read-file-as-bytelist-help"], [R0, R1, []])),
  Shen.close(R0),
  (function() {
  return Shen.call_tail(Shen.fns["reverse"], [R1]);}))}, 1, [], "read-file-as-bytelist"];





Shen.fns["shen.read-file-as-bytelist-help"] = [Shen.type_func, function shen_user_lambda6795(Arg6794) {
  if (Arg6794.length < 3) return [Shen.type_func, shen_user_lambda6795, 3, Arg6794];
  var Arg6794_0 = Arg6794[0], Arg6794_1 = Arg6794[1], Arg6794_2 = Arg6794[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6794_1)))
  ? Arg6794_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.read-file-as-bytelist-help"], [Arg6794_0, Shen.read_byte(Arg6794_0), [Shen.type_cons, Arg6794_1, Arg6794_2]]);}))}, 3, [], "shen.read-file-as-bytelist-help"];





Shen.fns["read-file-as-string"] = [Shen.type_func, function shen_user_lambda6797(Arg6796) {
  if (Arg6796.length < 1) return [Shen.type_func, shen_user_lambda6797, 1, Arg6796];
  var Arg6796_0 = Arg6796[0];
  var R0;
  return ((R0 = Shen.open(Arg6796_0, [Shen.type_symbol, "in"])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [R0, Shen.read_byte(R0), ""]);}))}, 1, [], "read-file-as-string"];





Shen.fns["shen.rfas-h"] = [Shen.type_func, function shen_user_lambda6799(Arg6798) {
  if (Arg6798.length < 3) return [Shen.type_func, shen_user_lambda6799, 3, Arg6798];
  var Arg6798_0 = Arg6798[0], Arg6798_1 = Arg6798[1], Arg6798_2 = Arg6798[2];
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6798_1)))
  ? (Shen.close(Arg6798_0),
  Arg6798_2)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [Arg6798_0, Shen.read_byte(Arg6798_0), (Arg6798_2 + Shen.n_$gt$string(Arg6798_1))]);}))}, 3, [], "shen.rfas-h"];





Shen.fns["input"] = [Shen.type_func, function shen_user_lambda6801(Arg6800) {
  if (Arg6800.length < 1) return [Shen.type_func, shen_user_lambda6801, 1, Arg6800];
  var Arg6800_0 = Arg6800[0];
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["read"], [Arg6800_0]));})}, 1, [], "input"];





Shen.fns["input+"] = [Shen.type_func, function shen_user_lambda6803(Arg6802) {
  if (Arg6802.length < 2) return [Shen.type_func, shen_user_lambda6803, 2, Arg6802];
  var Arg6802_0 = Arg6802[0], Arg6802_1 = Arg6802[1];
  var R0;
  return (Shen.call(Shen.fns["shen.monotype"], [Arg6802_0]),
  (R0 = Shen.call(Shen.fns["read"], [Arg6802_1])),
  ((Shen.unwind_tail(Shen.$eq$(false, Shen.call(Shen.fns["shen.typecheck"], [R0, Arg6802_0]))))
  ? (function() {
  return Shen.simple_error(("type error: " + Shen.call(Shen.fns["shen.app"], [R0, (" is not of type " + Shen.call(Shen.fns["shen.app"], [Arg6802_0, "\x0a", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]])));})
  : (function() {
  return Shen.eval_kl(R0);})))}, 2, [], "input+"];





Shen.fns["shen.monotype"] = [Shen.type_func, function shen_user_lambda6805(Arg6804) {
  if (Arg6804.length < 1) return [Shen.type_func, shen_user_lambda6805, 1, Arg6804];
  var Arg6804_0 = Arg6804[0];
  return ((Shen.is_type(Arg6804_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.monotype"], Arg6804_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg6804_0]))
  ? (function() {
  return Shen.simple_error(("input+ expects a monotype: not " + Shen.call(Shen.fns["shen.app"], [Arg6804_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : Arg6804_0))}, 1, [], "shen.monotype"];





Shen.fns["read"] = [Shen.type_func, function shen_user_lambda6807(Arg6806) {
  if (Arg6806.length < 1) return [Shen.type_func, shen_user_lambda6807, 1, Arg6806];
  var Arg6806_0 = Arg6806[0];
  return Shen.call(Shen.fns["shen.read-loop"], [Arg6806_0, Shen.read_byte(Arg6806_0), []])[1]}, 1, [], "read"];





Shen.fns["shen.read-loop"] = [Shen.type_func, function shen_user_lambda6809(Arg6808) {
  if (Arg6808.length < 3) return [Shen.type_func, shen_user_lambda6809, 3, Arg6808];
  var Arg6808_0 = Arg6808[0], Arg6808_1 = Arg6808[1], Arg6808_2 = Arg6808[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6808_1)))
  ? ((Shen.empty$question$(Arg6808_2))
  ? (function() {
  return Shen.simple_error("error: empty stream");})
  : (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg6808_2, [Shen.type_func, function shen_user_lambda6811(Arg6810) {
  if (Arg6810.length < 1) return [Shen.type_func, shen_user_lambda6811, 1, Arg6810];
  var Arg6810_0 = Arg6810[0];
  return Arg6810_0}, 1, [], undefined]]);}))
  : ((Shen.call(Shen.fns["shen.terminator?"], [Arg6808_1]))
  ? ((R0 = Shen.call(Shen.fns["append"], [Arg6808_2, [Shen.type_cons, Arg6808_1, []]])),
  (R1 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R0, [Shen.type_func, function shen_user_lambda6813(Arg6812) {
  if (Arg6812.length < 1) return [Shen.type_func, shen_user_lambda6813, 1, Arg6812];
  var Arg6812_0 = Arg6812[0];
  return [Shen.type_symbol, "shen.nextbyte"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen.nextbyte"])) || Shen.empty$question$(R1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-loop"], [Arg6808_0, Shen.read_byte(Arg6808_0), R0]);})
  : R1))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.read-loop"], [Arg6808_0, Shen.read_byte(Arg6808_0), Shen.call(Shen.fns["append"], [Arg6808_2, [Shen.type_cons, Arg6808_1, []]])]);})))}, 3, [], "shen.read-loop"];





Shen.fns["shen.terminator?"] = [Shen.type_func, function shen_user_lambda6815(Arg6814) {
  if (Arg6814.length < 1) return [Shen.type_func, shen_user_lambda6815, 1, Arg6814];
  var Arg6814_0 = Arg6814[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6814_0, [Shen.type_cons, 9, [Shen.type_cons, 10, [Shen.type_cons, 13, [Shen.type_cons, 32, [Shen.type_cons, 34, [Shen.type_cons, 41, [Shen.type_cons, 93, []]]]]]]]]);})}, 1, [], "shen.terminator?"];





Shen.fns["lineread"] = [Shen.type_func, function shen_user_lambda6817(Arg6816) {
  if (Arg6816.length < 1) return [Shen.type_func, shen_user_lambda6817, 1, Arg6816];
  var Arg6816_0 = Arg6816[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Arg6816_0), [], Arg6816_0]);})}, 1, [], "lineread"];





Shen.fns["shen.lineread-loop"] = [Shen.type_func, function shen_user_lambda6819(Arg6818) {
  if (Arg6818.length < 3) return [Shen.type_func, shen_user_lambda6819, 3, Arg6818];
  var Arg6818_0 = Arg6818[0], Arg6818_1 = Arg6818[1], Arg6818_2 = Arg6818[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6818_0)))
  ? ((Shen.empty$question$(Arg6818_1))
  ? (function() {
  return Shen.simple_error("empty stream");})
  : (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg6818_1, [Shen.type_func, function shen_user_lambda6821(Arg6820) {
  if (Arg6820.length < 1) return [Shen.type_func, shen_user_lambda6821, 1, Arg6820];
  var Arg6820_0 = Arg6820[0];
  return Arg6820_0}, 1, [], undefined]]);}))
  : ((Shen.unwind_tail(Shen.$eq$(Arg6818_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg6818_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg6818_1, [Shen.type_func, function shen_user_lambda6823(Arg6822) {
  if (Arg6822.length < 1) return [Shen.type_func, shen_user_lambda6823, 1, Arg6822];
  var Arg6822_0 = Arg6822[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Arg6818_2), Shen.call(Shen.fns["append"], [Arg6818_1, [Shen.type_cons, Arg6818_0, []]]), Arg6818_2]);})
  : R0))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Arg6818_2), Shen.call(Shen.fns["append"], [Arg6818_1, [Shen.type_cons, Arg6818_0, []]]), Arg6818_2]);}))))}, 3, [], "shen.lineread-loop"];





Shen.fns["read-file"] = [Shen.type_func, function shen_user_lambda6825(Arg6824) {
  if (Arg6824.length < 1) return [Shen.type_func, shen_user_lambda6825, 1, Arg6824];
  var Arg6824_0 = Arg6824[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["read-file-as-bytelist"], [Arg6824_0])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R0, [Shen.type_symbol, "shen.read-error"]]);}))}, 1, [], "read-file"];





Shen.fns["read-from-string"] = [Shen.type_func, function shen_user_lambda6827(Arg6826) {
  if (Arg6826.length < 1) return [Shen.type_func, shen_user_lambda6827, 1, Arg6826];
  var Arg6826_0 = Arg6826[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6829(Arg6828) {
  if (Arg6828.length < 1) return [Shen.type_func, shen_user_lambda6829, 1, Arg6828];
  var Arg6828_0 = Arg6828[0];
  return (function() {
  return Shen.string_$gt$n(Arg6828_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg6826_0])])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], R0, [Shen.type_symbol, "shen.read-error"]]);}))}, 1, [], "read-from-string"];





Shen.fns["shen.read-error"] = [Shen.type_func, function shen_user_lambda6831(Arg6830) {
  if (Arg6830.length < 1) return [Shen.type_func, shen_user_lambda6831, 1, Arg6830];
  var Arg6830_0 = Arg6830[0];
  return (((Shen.is_type(Arg6830_0, Shen.type_cons) && (Shen.is_type(Arg6830_0[1], Shen.type_cons) && (Shen.is_type(Arg6830_0[2], Shen.type_cons) && Shen.empty$question$(Arg6830_0[2][2])))))
  ? (function() {
  return Shen.simple_error(("read error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.compress-50"], [50, Arg6830_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error("read error\x0a");}))}, 1, [], "shen.read-error"];





Shen.fns["shen.compress-50"] = [Shen.type_func, function shen_user_lambda6833(Arg6832) {
  if (Arg6832.length < 2) return [Shen.type_func, shen_user_lambda6833, 2, Arg6832];
  var Arg6832_0 = Arg6832[0], Arg6832_1 = Arg6832[1];
  return ((Shen.empty$question$(Arg6832_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6832_0)))
  ? ""
  : ((Shen.is_type(Arg6832_1, Shen.type_cons))
  ? (Shen.n_$gt$string(Arg6832_1[1]) + Shen.call(Shen.fns["shen.compress-50"], [(Arg6832_0 - 1), Arg6832_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compress-50"]]);}))))}, 2, [], "shen.compress-50"];





Shen.fns["shen.<st_input>"] = [Shen.type_func, function shen_user_lambda6835(Arg6834) {
  if (Arg6834.length < 1) return [Shen.type_func, shen_user_lambda6835, 1, Arg6834];
  var Arg6834_0 = Arg6834[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<lsb>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rsb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lrb>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rrb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.package-macro"], [Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lcurly>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "{"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rcurly>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "}"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<bar>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "bar!"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<semicolon>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ";"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<equal>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":="], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<minus>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comma>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ","], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<atom>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6834_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<st_input>"];





Shen.fns["shen.<lsb>"] = [Shen.type_func, function shen_user_lambda6837(Arg6836) {
  if (Arg6836.length < 1) return [Shen.type_func, shen_user_lambda6837, 1, Arg6836];
  var Arg6836_0 = Arg6836[0];
  var R0;
  return ((((Shen.is_type(Arg6836_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(91, Arg6836_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6836_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6836_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lsb>"];





Shen.fns["shen.<rsb>"] = [Shen.type_func, function shen_user_lambda6839(Arg6838) {
  if (Arg6838.length < 1) return [Shen.type_func, shen_user_lambda6839, 1, Arg6838];
  var Arg6838_0 = Arg6838[0];
  var R0;
  return ((((Shen.is_type(Arg6838_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(93, Arg6838_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6838_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6838_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rsb>"];





Shen.fns["shen.<lcurly>"] = [Shen.type_func, function shen_user_lambda6841(Arg6840) {
  if (Arg6840.length < 1) return [Shen.type_func, shen_user_lambda6841, 1, Arg6840];
  var Arg6840_0 = Arg6840[0];
  var R0;
  return ((((Shen.is_type(Arg6840_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(123, Arg6840_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6840_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6840_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lcurly>"];





Shen.fns["shen.<rcurly>"] = [Shen.type_func, function shen_user_lambda6843(Arg6842) {
  if (Arg6842.length < 1) return [Shen.type_func, shen_user_lambda6843, 1, Arg6842];
  var Arg6842_0 = Arg6842[0];
  var R0;
  return ((((Shen.is_type(Arg6842_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(125, Arg6842_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6842_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6842_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rcurly>"];





Shen.fns["shen.<bar>"] = [Shen.type_func, function shen_user_lambda6845(Arg6844) {
  if (Arg6844.length < 1) return [Shen.type_func, shen_user_lambda6845, 1, Arg6844];
  var Arg6844_0 = Arg6844[0];
  var R0;
  return ((((Shen.is_type(Arg6844_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(124, Arg6844_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6844_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6844_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<bar>"];





Shen.fns["shen.<semicolon>"] = [Shen.type_func, function shen_user_lambda6847(Arg6846) {
  if (Arg6846.length < 1) return [Shen.type_func, shen_user_lambda6847, 1, Arg6846];
  var Arg6846_0 = Arg6846[0];
  var R0;
  return ((((Shen.is_type(Arg6846_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(59, Arg6846_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6846_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6846_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<semicolon>"];





Shen.fns["shen.<colon>"] = [Shen.type_func, function shen_user_lambda6849(Arg6848) {
  if (Arg6848.length < 1) return [Shen.type_func, shen_user_lambda6849, 1, Arg6848];
  var Arg6848_0 = Arg6848[0];
  var R0;
  return ((((Shen.is_type(Arg6848_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(58, Arg6848_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6848_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6848_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<colon>"];





Shen.fns["shen.<comma>"] = [Shen.type_func, function shen_user_lambda6851(Arg6850) {
  if (Arg6850.length < 1) return [Shen.type_func, shen_user_lambda6851, 1, Arg6850];
  var Arg6850_0 = Arg6850[0];
  var R0;
  return ((((Shen.is_type(Arg6850_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(44, Arg6850_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6850_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6850_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<comma>"];





Shen.fns["shen.<equal>"] = [Shen.type_func, function shen_user_lambda6853(Arg6852) {
  if (Arg6852.length < 1) return [Shen.type_func, shen_user_lambda6853, 1, Arg6852];
  var Arg6852_0 = Arg6852[0];
  var R0;
  return ((((Shen.is_type(Arg6852_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(61, Arg6852_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6852_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6852_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<equal>"];





Shen.fns["shen.<minus>"] = [Shen.type_func, function shen_user_lambda6855(Arg6854) {
  if (Arg6854.length < 1) return [Shen.type_func, shen_user_lambda6855, 1, Arg6854];
  var Arg6854_0 = Arg6854[0];
  var R0;
  return ((((Shen.is_type(Arg6854_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(45, Arg6854_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6854_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6854_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<minus>"];





Shen.fns["shen.<lrb>"] = [Shen.type_func, function shen_user_lambda6857(Arg6856) {
  if (Arg6856.length < 1) return [Shen.type_func, shen_user_lambda6857, 1, Arg6856];
  var Arg6856_0 = Arg6856[0];
  var R0;
  return ((((Shen.is_type(Arg6856_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(40, Arg6856_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6856_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6856_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<lrb>"];





Shen.fns["shen.<rrb>"] = [Shen.type_func, function shen_user_lambda6859(Arg6858) {
  if (Arg6858.length < 1) return [Shen.type_func, shen_user_lambda6859, 1, Arg6858];
  var Arg6858_0 = Arg6858[0];
  var R0;
  return ((((Shen.is_type(Arg6858_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(41, Arg6858_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6858_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6858_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<rrb>"];





Shen.fns["shen.<atom>"] = [Shen.type_func, function shen_user_lambda6861(Arg6860) {
  if (Arg6860.length < 1) return [Shen.type_func, shen_user_lambda6861, 1, Arg6860];
  var Arg6860_0 = Arg6860[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<str>"], [Arg6860_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.control-chars"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<number>"], [Arg6860_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<sym>"], [Arg6860_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["shen.hdtl"], [R0]), "<>")))
  ? [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]
  : Shen.intern(Shen.call(Shen.fns["shen.hdtl"], [R0])))]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<atom>"];





Shen.fns["shen.control-chars"] = [Shen.type_func, function shen_user_lambda6863(Arg6862) {
  if (Arg6862.length < 1) return [Shen.type_func, shen_user_lambda6863, 1, Arg6862];
  var Arg6862_0 = Arg6862[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6862_0))
  ? ""
  : (((Shen.is_type(Arg6862_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("c", Arg6862_0[1])) && (Shen.is_type(Arg6862_0[2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("#", Arg6862_0[2][1]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.code-point"], [Arg6862_0[2][2]])),
  (R1 = Shen.call(Shen.fns["shen.after-codepoint"], [Arg6862_0[2][2]])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(Shen.call(Shen.fns["shen.decimalise"], [R0])), Shen.call(Shen.fns["shen.control-chars"], [R1])]);}))
  : ((Shen.is_type(Arg6862_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Arg6862_0[1], Shen.call(Shen.fns["shen.control-chars"], [Arg6862_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.control-chars"]]);}))))}, 1, [], "shen.control-chars"];





Shen.fns["shen.code-point"] = [Shen.type_func, function shen_user_lambda6865(Arg6864) {
  if (Arg6864.length < 1) return [Shen.type_func, shen_user_lambda6865, 1, Arg6864];
  var Arg6864_0 = Arg6864[0];
  return (((Shen.is_type(Arg6864_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6864_0[1]))))
  ? ""
  : (((Shen.is_type(Arg6864_0, Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6864_0[1], [Shen.type_cons, "0", [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]])))
  ? [Shen.type_cons, Arg6864_0[1], Shen.call(Shen.fns["shen.code-point"], [Arg6864_0[2]])]
  : (function() {
  return Shen.simple_error(("code point parse error " + Shen.call(Shen.fns["shen.app"], [Arg6864_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})))}, 1, [], "shen.code-point"];





Shen.fns["shen.after-codepoint"] = [Shen.type_func, function shen_user_lambda6867(Arg6866) {
  if (Arg6866.length < 1) return [Shen.type_func, shen_user_lambda6867, 1, Arg6866];
  var Arg6866_0 = Arg6866[0];
  return ((Shen.empty$question$(Arg6866_0))
  ? []
  : (((Shen.is_type(Arg6866_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6866_0[1]))))
  ? Arg6866_0[2]
  : ((Shen.is_type(Arg6866_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.after-codepoint"], [Arg6866_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.after-codepoint"]]);}))))}, 1, [], "shen.after-codepoint"];





Shen.fns["shen.decimalise"] = [Shen.type_func, function shen_user_lambda6869(Arg6868) {
  if (Arg6868.length < 1) return [Shen.type_func, shen_user_lambda6869, 1, Arg6868];
  var Arg6868_0 = Arg6868[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.digits->integers"], [Arg6868_0])]), 0]);})}, 1, [], "shen.decimalise"];





Shen.fns["shen.digits->integers"] = [Shen.type_func, function shen_user_lambda6871(Arg6870) {
  if (Arg6870.length < 1) return [Shen.type_func, shen_user_lambda6871, 1, Arg6870];
  var Arg6870_0 = Arg6870[0];
  return (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("0", Arg6870_0[1]))))
  ? [Shen.type_cons, 0, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("1", Arg6870_0[1]))))
  ? [Shen.type_cons, 1, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("2", Arg6870_0[1]))))
  ? [Shen.type_cons, 2, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("3", Arg6870_0[1]))))
  ? [Shen.type_cons, 3, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("4", Arg6870_0[1]))))
  ? [Shen.type_cons, 4, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("5", Arg6870_0[1]))))
  ? [Shen.type_cons, 5, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("6", Arg6870_0[1]))))
  ? [Shen.type_cons, 6, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("7", Arg6870_0[1]))))
  ? [Shen.type_cons, 7, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("8", Arg6870_0[1]))))
  ? [Shen.type_cons, 8, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : (((Shen.is_type(Arg6870_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("9", Arg6870_0[1]))))
  ? [Shen.type_cons, 9, Shen.call(Shen.fns["shen.digits->integers"], [Arg6870_0[2]])]
  : []))))))))))}, 1, [], "shen.digits->integers"];





Shen.fns["shen.<sym>"] = [Shen.type_func, function shen_user_lambda6873(Arg6872) {
  if (Arg6872.length < 1) return [Shen.type_func, shen_user_lambda6873, 1, Arg6872];
  var Arg6872_0 = Arg6872[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6872_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sym>"];





Shen.fns["shen.<alphanums>"] = [Shen.type_func, function shen_user_lambda6875(Arg6874) {
  if (Arg6874.length < 1) return [Shen.type_func, shen_user_lambda6875, 1, Arg6874];
  var Arg6874_0 = Arg6874[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alphanum>"], [Arg6874_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6874_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], ""]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanums>"];





Shen.fns["shen.<alphanum>"] = [Shen.type_func, function shen_user_lambda6877(Arg6876) {
  if (Arg6876.length < 1) return [Shen.type_func, shen_user_lambda6877, 1, Arg6876];
  var Arg6876_0 = Arg6876[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6876_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<num>"], [Arg6876_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<alphanum>"];





Shen.fns["shen.<num>"] = [Shen.type_func, function shen_user_lambda6879(Arg6878) {
  if (Arg6878.length < 1) return [Shen.type_func, shen_user_lambda6879, 1, Arg6878];
  var Arg6878_0 = Arg6878[0];
  var R0;
  return (((Shen.is_type(Arg6878_0[1], Shen.type_cons))
  ? ((R0 = Arg6878_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6878_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6878_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<num>"];





Shen.fns["shen.numbyte?"] = [Shen.type_func, function shen_user_lambda6881(Arg6880) {
  if (Arg6880.length < 1) return [Shen.type_func, shen_user_lambda6881, 1, Arg6880];
  var Arg6880_0 = Arg6880[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6880_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6880_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6880_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6880_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6880_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6880_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6880_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6880_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6880_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6880_0)))
  ? true
  : false))))))))))}, 1, [], "shen.numbyte?"];





Shen.fns["shen.<alpha>"] = [Shen.type_func, function shen_user_lambda6883(Arg6882) {
  if (Arg6882.length < 1) return [Shen.type_func, shen_user_lambda6883, 1, Arg6882];
  var Arg6882_0 = Arg6882[0];
  var R0;
  return (((Shen.is_type(Arg6882_0[1], Shen.type_cons))
  ? ((R0 = Arg6882_0[1][1]),
  ((Shen.call(Shen.fns["shen.symbol-code?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6882_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6882_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<alpha>"];





Shen.fns["shen.symbol-code?"] = [Shen.type_func, function shen_user_lambda6885(Arg6884) {
  if (Arg6884.length < 1) return [Shen.type_func, shen_user_lambda6885, 1, Arg6884];
  var Arg6884_0 = Arg6884[0];
  return (Shen.unwind_tail(Shen.$eq$(Arg6884_0, 126)) || (((Arg6884_0 > 94) && (Arg6884_0 < 123)) || (((Arg6884_0 > 59) && (Arg6884_0 < 91)) || (((Arg6884_0 > 41) && ((Arg6884_0 < 58) && (!Shen.unwind_tail(Shen.$eq$(Arg6884_0, 44))))) || (((Arg6884_0 > 34) && (Arg6884_0 < 40)) || Shen.unwind_tail(Shen.$eq$(Arg6884_0, 33)))))))}, 1, [], "shen.symbol-code?"];





Shen.fns["shen.<str>"] = [Shen.type_func, function shen_user_lambda6887(Arg6886) {
  if (Arg6886.length < 1) return [Shen.type_func, shen_user_lambda6887, 1, Arg6886];
  var Arg6886_0 = Arg6886[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<dbq>"], [Arg6886_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<dbq>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<str>"];





Shen.fns["shen.<dbq>"] = [Shen.type_func, function shen_user_lambda6889(Arg6888) {
  if (Arg6888.length < 1) return [Shen.type_func, shen_user_lambda6889, 1, Arg6888];
  var Arg6888_0 = Arg6888[0];
  var R0;
  return (((Shen.is_type(Arg6888_0[1], Shen.type_cons))
  ? ((R0 = Arg6888_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 34)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6888_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6888_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<dbq>"];





Shen.fns["shen.<strcontents>"] = [Shen.type_func, function shen_user_lambda6891(Arg6890) {
  if (Arg6890.length < 1) return [Shen.type_func, shen_user_lambda6891, 1, Arg6890];
  var Arg6890_0 = Arg6890[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<strc>"], [Arg6890_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6890_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<strcontents>"];





Shen.fns["shen.<byte>"] = [Shen.type_func, function shen_user_lambda6893(Arg6892) {
  if (Arg6892.length < 1) return [Shen.type_func, shen_user_lambda6893, 1, Arg6892];
  var Arg6892_0 = Arg6892[0];
  var R0;
  return (((Shen.is_type(Arg6892_0[1], Shen.type_cons))
  ? ((R0 = Arg6892_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6892_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6892_0])])[1], Shen.n_$gt$string(R0)])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<byte>"];





Shen.fns["shen.<strc>"] = [Shen.type_func, function shen_user_lambda6895(Arg6894) {
  if (Arg6894.length < 1) return [Shen.type_func, shen_user_lambda6895, 1, Arg6894];
  var Arg6894_0 = Arg6894[0];
  var R0;
  return (((Shen.is_type(Arg6894_0[1], Shen.type_cons))
  ? ((R0 = Arg6894_0[1][1]),
  (((!Shen.unwind_tail(Shen.$eq$(R0, 34))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6894_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6894_0])])[1], Shen.n_$gt$string(R0)]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<strc>"];





Shen.fns["shen.<number>"] = [Shen.type_func, function shen_user_lambda6897(Arg6896) {
  if (Arg6896.length < 1) return [Shen.type_func, shen_user_lambda6897, 1, Arg6896];
  var Arg6896_0 = Arg6896[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6896_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.hdtl"], [R0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<plus>"], [Arg6896_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6896_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<E>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<log10>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R2])]) * (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1])))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6896_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<E>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<log10>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R1])]) * Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6896_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6896_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<number>"];





Shen.fns["shen.<E>"] = [Shen.type_func, function shen_user_lambda6899(Arg6898) {
  if (Arg6898.length < 1) return [Shen.type_func, shen_user_lambda6899, 1, Arg6898];
  var Arg6898_0 = Arg6898[0];
  var R0;
  return ((((Shen.is_type(Arg6898_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(101, Arg6898_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6898_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6898_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<E>"];





Shen.fns["shen.<log10>"] = [Shen.type_func, function shen_user_lambda6901(Arg6900) {
  if (Arg6900.length < 1) return [Shen.type_func, shen_user_lambda6901, 1, Arg6900];
  var Arg6900_0 = Arg6900[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6900_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6900_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<log10>"];





Shen.fns["shen.<plus>"] = [Shen.type_func, function shen_user_lambda6903(Arg6902) {
  if (Arg6902.length < 1) return [Shen.type_func, shen_user_lambda6903, 1, Arg6902];
  var Arg6902_0 = Arg6902[0];
  var R0;
  return (((Shen.is_type(Arg6902_0[1], Shen.type_cons))
  ? ((R0 = Arg6902_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 43)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6902_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6902_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<plus>"];





Shen.fns["shen.<stop>"] = [Shen.type_func, function shen_user_lambda6905(Arg6904) {
  if (Arg6904.length < 1) return [Shen.type_func, shen_user_lambda6905, 1, Arg6904];
  var Arg6904_0 = Arg6904[0];
  var R0;
  return (((Shen.is_type(Arg6904_0[1], Shen.type_cons))
  ? ((R0 = Arg6904_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 46)))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6904_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6904_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<stop>"];





Shen.fns["shen.<predigits>"] = [Shen.type_func, function shen_user_lambda6907(Arg6906) {
  if (Arg6906.length < 1) return [Shen.type_func, shen_user_lambda6907, 1, Arg6906];
  var Arg6906_0 = Arg6906[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6906_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6906_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], []]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<predigits>"];





Shen.fns["shen.<postdigits>"] = [Shen.type_func, function shen_user_lambda6909(Arg6908) {
  if (Arg6908.length < 1) return [Shen.type_func, shen_user_lambda6909, 1, Arg6908];
  var Arg6908_0 = Arg6908[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6908_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<postdigits>"];





Shen.fns["shen.<digits>"] = [Shen.type_func, function shen_user_lambda6911(Arg6910) {
  if (Arg6910.length < 1) return [Shen.type_func, shen_user_lambda6911, 1, Arg6910];
  var Arg6910_0 = Arg6910[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6910_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6910_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<digits>"];





Shen.fns["shen.<digit>"] = [Shen.type_func, function shen_user_lambda6913(Arg6912) {
  if (Arg6912.length < 1) return [Shen.type_func, shen_user_lambda6913, 1, Arg6912];
  var Arg6912_0 = Arg6912[0];
  var R0;
  return (((Shen.is_type(Arg6912_0[1], Shen.type_cons))
  ? ((R0 = Arg6912_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6912_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6912_0])])[1], Shen.call(Shen.fns["shen.byte->digit"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<digit>"];





Shen.fns["shen.byte->digit"] = [Shen.type_func, function shen_user_lambda6915(Arg6914) {
  if (Arg6914.length < 1) return [Shen.type_func, shen_user_lambda6915, 1, Arg6914];
  var Arg6914_0 = Arg6914[0];
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6914_0)))
  ? 0
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6914_0)))
  ? 1
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6914_0)))
  ? 2
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6914_0)))
  ? 3
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6914_0)))
  ? 4
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6914_0)))
  ? 5
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6914_0)))
  ? 6
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6914_0)))
  ? 7
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6914_0)))
  ? 8
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6914_0)))
  ? 9
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.byte->digit"]]);})))))))))))}, 1, [], "shen.byte->digit"];





Shen.fns["shen.pre"] = [Shen.type_func, function shen_user_lambda6917(Arg6916) {
  if (Arg6916.length < 2) return [Shen.type_func, shen_user_lambda6917, 2, Arg6916];
  var Arg6916_0 = Arg6916[0], Arg6916_1 = Arg6916[1];
  return ((Shen.empty$question$(Arg6916_0))
  ? 0
  : ((Shen.is_type(Arg6916_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, Arg6916_1]) * Arg6916_0[1]) + Shen.call(Shen.fns["shen.pre"], [Arg6916_0[2], (Arg6916_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.pre"]]);})))}, 2, [], "shen.pre"];





Shen.fns["shen.post"] = [Shen.type_func, function shen_user_lambda6919(Arg6918) {
  if (Arg6918.length < 2) return [Shen.type_func, shen_user_lambda6919, 2, Arg6918];
  var Arg6918_0 = Arg6918[0], Arg6918_1 = Arg6918[1];
  return ((Shen.empty$question$(Arg6918_0))
  ? 0
  : ((Shen.is_type(Arg6918_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, (0 - Arg6918_1)]) * Arg6918_0[1]) + Shen.call(Shen.fns["shen.post"], [Arg6918_0[2], (Arg6918_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.post"]]);})))}, 2, [], "shen.post"];





Shen.fns["shen.expt"] = [Shen.type_func, function shen_user_lambda6921(Arg6920) {
  if (Arg6920.length < 2) return [Shen.type_func, shen_user_lambda6921, 2, Arg6920];
  var Arg6920_0 = Arg6920[0], Arg6920_1 = Arg6920[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6920_1)))
  ? 1
  : (((Arg6920_1 > 0))
  ? (Arg6920_0 * Shen.call(Shen.fns["shen.expt"], [Arg6920_0, (Arg6920_1 - 1)]))
  : (1 * (Shen.call(Shen.fns["shen.expt"], [Arg6920_0, (Arg6920_1 + 1)]) / Arg6920_0))))}, 2, [], "shen.expt"];





Shen.fns["shen.<st_input1>"] = [Shen.type_func, function shen_user_lambda6923(Arg6922) {
  if (Arg6922.length < 1) return [Shen.type_func, shen_user_lambda6923, 1, Arg6922];
  var Arg6922_0 = Arg6922[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6922_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input1>"];





Shen.fns["shen.<st_input2>"] = [Shen.type_func, function shen_user_lambda6925(Arg6924) {
  if (Arg6924.length < 1) return [Shen.type_func, shen_user_lambda6925, 1, Arg6924];
  var Arg6924_0 = Arg6924[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6924_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<st_input2>"];





Shen.fns["shen.<comment>"] = [Shen.type_func, function shen_user_lambda6927(Arg6926) {
  if (Arg6926.length < 1) return [Shen.type_func, shen_user_lambda6927, 1, Arg6926];
  var Arg6926_0 = Arg6926[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<singleline>"], [Arg6926_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<multiline>"], [Arg6926_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<comment>"];





Shen.fns["shen.<singleline>"] = [Shen.type_func, function shen_user_lambda6929(Arg6928) {
  if (Arg6928.length < 1) return [Shen.type_func, shen_user_lambda6929, 1, Arg6928];
  var Arg6928_0 = Arg6928[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg6928_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anysingle>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<return>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<singleline>"];





Shen.fns["shen.<backslash>"] = [Shen.type_func, function shen_user_lambda6931(Arg6930) {
  if (Arg6930.length < 1) return [Shen.type_func, shen_user_lambda6931, 1, Arg6930];
  var Arg6930_0 = Arg6930[0];
  var R0;
  return ((((Shen.is_type(Arg6930_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(92, Arg6930_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6930_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6930_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<backslash>"];





Shen.fns["shen.<anysingle>"] = [Shen.type_func, function shen_user_lambda6933(Arg6932) {
  if (Arg6932.length < 1) return [Shen.type_func, shen_user_lambda6933, 1, Arg6932];
  var Arg6932_0 = Arg6932[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<non-return>"], [Arg6932_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anysingle>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6932_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<anysingle>"];





Shen.fns["shen.<non-return>"] = [Shen.type_func, function shen_user_lambda6935(Arg6934) {
  if (Arg6934.length < 1) return [Shen.type_func, shen_user_lambda6935, 1, Arg6934];
  var Arg6934_0 = Arg6934[0];
  var R0;
  return (((Shen.is_type(Arg6934_0[1], Shen.type_cons))
  ? ((R0 = Arg6934_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, 10, [Shen.type_cons, 13, []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6934_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6934_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<non-return>"];





Shen.fns["shen.<return>"] = [Shen.type_func, function shen_user_lambda6937(Arg6936) {
  if (Arg6936.length < 1) return [Shen.type_func, shen_user_lambda6937, 1, Arg6936];
  var Arg6936_0 = Arg6936[0];
  var R0;
  return (((Shen.is_type(Arg6936_0[1], Shen.type_cons))
  ? ((R0 = Arg6936_0[1][1]),
  ((Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, 10, [Shen.type_cons, 13, []]]]))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6936_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6936_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<return>"];





Shen.fns["shen.<multiline>"] = [Shen.type_func, function shen_user_lambda6939(Arg6938) {
  if (Arg6938.length < 1) return [Shen.type_func, shen_user_lambda6939, 1, Arg6938];
  var Arg6938_0 = Arg6938[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg6938_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anymulti>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<multiline>"];





Shen.fns["shen.<times>"] = [Shen.type_func, function shen_user_lambda6941(Arg6940) {
  if (Arg6940.length < 1) return [Shen.type_func, shen_user_lambda6941, 1, Arg6940];
  var Arg6940_0 = Arg6940[0];
  var R0;
  return ((((Shen.is_type(Arg6940_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(42, Arg6940_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6940_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6940_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<times>"];





Shen.fns["shen.<anymulti>"] = [Shen.type_func, function shen_user_lambda6943(Arg6942) {
  if (Arg6942.length < 1) return [Shen.type_func, shen_user_lambda6943, 1, Arg6942];
  var Arg6942_0 = Arg6942[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6942_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anymulti>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<times>"], [Arg6942_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6942_0[1], Shen.type_cons))
  ? (Arg6942_0[1][1],
  (R0 = Shen.call(Shen.fns["shen.<anymulti>"], [Shen.call(Shen.fns["shen.pair"], [Arg6942_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6942_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<anymulti>"];





Shen.fns["shen.<whitespaces>"] = [Shen.type_func, function shen_user_lambda6945(Arg6944) {
  if (Arg6944.length < 1) return [Shen.type_func, shen_user_lambda6945, 1, Arg6944];
  var Arg6944_0 = Arg6944[0];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6944_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6944_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<whitespaces>"];





Shen.fns["shen.<whitespace>"] = [Shen.type_func, function shen_user_lambda6947(Arg6946) {
  if (Arg6946.length < 1) return [Shen.type_func, shen_user_lambda6947, 1, Arg6946];
  var Arg6946_0 = Arg6946[0];
  var R0;
  return (((Shen.is_type(Arg6946_0[1], Shen.type_cons))
  ? ((R0 = Arg6946_0[1][1]),
  ((((R0 = R0),
  (Shen.unwind_tail(Shen.$eq$(R0, 32)) || (Shen.unwind_tail(Shen.$eq$(R0, 13)) || (Shen.unwind_tail(Shen.$eq$(R0, 10)) || Shen.unwind_tail(Shen.$eq$(R0, 9)))))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6946_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6946_0])])[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<whitespace>"];





Shen.fns["shen.cons_form"] = [Shen.type_func, function shen_user_lambda6949(Arg6948) {
  if (Arg6948.length < 1) return [Shen.type_func, shen_user_lambda6949, 1, Arg6948];
  var Arg6948_0 = Arg6948[0];
  return ((Shen.empty$question$(Arg6948_0))
  ? []
  : (((Shen.is_type(Arg6948_0, Shen.type_cons) && (Shen.is_type(Arg6948_0[2], Shen.type_cons) && (Shen.is_type(Arg6948_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6948_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6948_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6948_0[1], Arg6948_0[2][2]]]
  : ((Shen.is_type(Arg6948_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6948_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg6948_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.cons_form"]]);}))))}, 1, [], "shen.cons_form"];





Shen.fns["shen.package-macro"] = [Shen.type_func, function shen_user_lambda6951(Arg6950) {
  if (Arg6950.length < 2) return [Shen.type_func, shen_user_lambda6951, 2, Arg6950];
  var Arg6950_0 = Arg6950[0], Arg6950_1 = Arg6950[1];
  var R0, R1;
  return (((Shen.is_type(Arg6950_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "$"], Arg6950_0[1])) && (Shen.is_type(Arg6950_0[2], Shen.type_cons) && Shen.empty$question$(Arg6950_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["explode"], [Arg6950_0[2][1]]), Arg6950_1]);})
  : (((Shen.is_type(Arg6950_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6950_0[1])) && (Shen.is_type(Arg6950_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg6950_0[2][1])) && Shen.is_type(Arg6950_0[2][2], Shen.type_cons))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Arg6950_0[2][2][2], Arg6950_1]);})
  : (((Shen.is_type(Arg6950_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6950_0[1])) && (Shen.is_type(Arg6950_0[2], Shen.type_cons) && Shen.is_type(Arg6950_0[2][2], Shen.type_cons)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6950_0[2][2][1]])),
  Shen.call(Shen.fns["shen.record-exceptions"], [R0, Arg6950_0[2][1]]),
  (R1 = Shen.intern((Shen.str(Arg6950_0[2][1]) + "."))),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.packageh"], [R1, R0, Arg6950_0[2][2][2]]), Arg6950_1]);}))
  : [Shen.type_cons, Arg6950_0, Arg6950_1])))}, 2, [], "shen.package-macro"];





Shen.fns["shen.record-exceptions"] = [Shen.type_func, function shen_user_lambda6953(Arg6952) {
  if (Arg6952.length < 2) return [Shen.type_func, shen_user_lambda6953, 2, Arg6952];
  var Arg6952_0 = Arg6952[0], Arg6952_1 = Arg6952[1];
  var R0;
  return ((R0 = Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6952_1, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6955(Arg6954) {
  if (Arg6954.length < 1) return [Shen.type_func, shen_user_lambda6955, 1, Arg6954];
  var Arg6954_0 = Arg6954[0];
  return []}, 1, [], undefined])),
  (R0 = Shen.call(Shen.fns["union"], [Arg6952_0, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6952_1, [Shen.type_symbol, "shen.external-symbols"], R0, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-exceptions"];





Shen.fns["shen.packageh"] = [Shen.type_func, function shen_user_lambda6957(Arg6956) {
  if (Arg6956.length < 3) return [Shen.type_func, shen_user_lambda6957, 3, Arg6956];
  var Arg6956_0 = Arg6956[0], Arg6956_1 = Arg6956[1], Arg6956_2 = Arg6956[2];
  return ((Shen.is_type(Arg6956_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.packageh"], [Arg6956_0, Arg6956_1, Arg6956_2[1]]), Shen.call(Shen.fns["shen.packageh"], [Arg6956_0, Arg6956_1, Arg6956_2[2]])]
  : (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg6956_2]) || (Shen.call(Shen.fns["variable?"], [Arg6956_2]) || (Shen.call(Shen.fns["element?"], [Arg6956_2, Arg6956_1]) || (Shen.call(Shen.fns["shen.doubleunderline?"], [Arg6956_2]) || Shen.call(Shen.fns["shen.singleunderline?"], [Arg6956_2]))))))
  ? Arg6956_2
  : (((Shen.is_type(Arg6956_2, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.prefix?"], [[Shen.type_cons, "s", [Shen.type_cons, "h", [Shen.type_cons, "e", [Shen.type_cons, "n", [Shen.type_cons, ".", []]]]]], Shen.call(Shen.fns["explode"], [Arg6956_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg6956_0, Arg6956_2]);})
  : Arg6956_2)))}, 3, [], "shen.packageh"];










Shen.fns["shen.<defprolog>"] = [Shen.type_func, function shen_user_lambda6576(Arg6575) {
  if (Arg6575.length < 1) return [Shen.type_func, shen_user_lambda6576, 1, Arg6575];
  var Arg6575_0 = Arg6575[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<predicate*>"], [Arg6575_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.prolog->shen"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6578(Arg6577) {
  if (Arg6577.length < 2) return [Shen.type_func, shen_user_lambda6578, 2, Arg6577];
  var Arg6577_0 = Arg6577[0], Arg6577_1 = Arg6577[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-predicate"], [Shen.call(Shen.fns["shen.hdtl"], [Arg6577_0]), Arg6577_1]);})}, 2, [R0], undefined], Shen.call(Shen.fns["shen.hdtl"], [R1])])])[1]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<defprolog>"];





Shen.fns["shen.prolog-error"] = [Shen.type_func, function shen_user_lambda6580(Arg6579) {
  if (Arg6579.length < 2) return [Shen.type_func, shen_user_lambda6580, 2, Arg6579];
  var Arg6579_0 = Arg6579[0], Arg6579_1 = Arg6579[1];
  return (((Shen.is_type(Arg6579_1, Shen.type_cons) && (Shen.is_type(Arg6579_1[2], Shen.type_cons) && Shen.empty$question$(Arg6579_1[2][2]))))
  ? (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6579_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6579_1[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6579_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.prolog-error"];





Shen.fns["shen.next-50"] = [Shen.type_func, function shen_user_lambda6582(Arg6581) {
  if (Arg6581.length < 2) return [Shen.type_func, shen_user_lambda6582, 2, Arg6581];
  var Arg6581_0 = Arg6581[0], Arg6581_1 = Arg6581[1];
  return ((Shen.empty$question$(Arg6581_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6581_0)))
  ? ""
  : ((Shen.is_type(Arg6581_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.decons-string"], [Arg6581_1[1]]) + Shen.call(Shen.fns["shen.next-50"], [(Arg6581_0 - 1), Arg6581_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.next-50"]]);}))))}, 2, [], "shen.next-50"];





Shen.fns["shen.decons-string"] = [Shen.type_func, function shen_user_lambda6584(Arg6583) {
  if (Arg6583.length < 1) return [Shen.type_func, shen_user_lambda6584, 1, Arg6583];
  var Arg6583_0 = Arg6583[0];
  return (((Shen.is_type(Arg6583_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6583_0[1])) && (Shen.is_type(Arg6583_0[2], Shen.type_cons) && (Shen.is_type(Arg6583_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6583_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-cons"], [Arg6583_0]), " ", [Shen.type_symbol, "shen.s"]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg6583_0, " ", [Shen.type_symbol, "shen.r"]]);}))}, 1, [], "shen.decons-string"];





Shen.fns["shen.insert-predicate"] = [Shen.type_func, function shen_user_lambda6586(Arg6585) {
  if (Arg6585.length < 2) return [Shen.type_func, shen_user_lambda6586, 2, Arg6585];
  var Arg6585_0 = Arg6585[0], Arg6585_1 = Arg6585[1];
  return (((Shen.is_type(Arg6585_1, Shen.type_cons) && (Shen.is_type(Arg6585_1[2], Shen.type_cons) && Shen.empty$question$(Arg6585_1[2][2]))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6585_0, Arg6585_1[1]], [Shen.type_cons, [Shen.type_symbol, ":-"], Arg6585_1[2]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-predicate"]]);}))}, 2, [], "shen.insert-predicate"];





Shen.fns["shen.<predicate*>"] = [Shen.type_func, function shen_user_lambda6588(Arg6587) {
  if (Arg6587.length < 1) return [Shen.type_func, shen_user_lambda6588, 1, Arg6587];
  var Arg6587_0 = Arg6587[0];
  var R0;
  return (((Shen.is_type(Arg6587_0[1], Shen.type_cons))
  ? ((R0 = Arg6587_0[1][1]),
  (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6587_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6587_0])])[1], R0])))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<predicate*>"];





Shen.fns["shen.<clauses*>"] = [Shen.type_func, function shen_user_lambda6590(Arg6589) {
  if (Arg6589.length < 1) return [Shen.type_func, shen_user_lambda6590, 1, Arg6589];
  var Arg6589_0 = Arg6589[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<clause*>"], [Arg6589_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6589_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<clauses*>"];





Shen.fns["shen.<clause*>"] = [Shen.type_func, function shen_user_lambda6592(Arg6591) {
  if (Arg6591.length < 1) return [Shen.type_func, shen_user_lambda6592, 1, Arg6591];
  var Arg6591_0 = Arg6591[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<head*>"], [Arg6591_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<end*>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<clause*>"];





Shen.fns["shen.<head*>"] = [Shen.type_func, function shen_user_lambda6594(Arg6593) {
  if (Arg6593.length < 1) return [Shen.type_func, shen_user_lambda6594, 1, Arg6593];
  var Arg6593_0 = Arg6593[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<term*>"], [Arg6593_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<head*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6593_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<head*>"];





Shen.fns["shen.<term*>"] = [Shen.type_func, function shen_user_lambda6596(Arg6595) {
  if (Arg6595.length < 1) return [Shen.type_func, shen_user_lambda6596, 1, Arg6595];
  var Arg6595_0 = Arg6595[0];
  var R0;
  return (((Shen.is_type(Arg6595_0[1], Shen.type_cons))
  ? ((R0 = Arg6595_0[1][1]),
  ((((!Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0))) && Shen.call(Shen.fns["shen.legitimate-term?"], [R0])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6595_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6595_0])])[1], Shen.call(Shen.fns["shen.eval-cons"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<term*>"];





Shen.fns["shen.legitimate-term?"] = [Shen.type_func, function shen_user_lambda6598(Arg6597) {
  if (Arg6597.length < 1) return [Shen.type_func, shen_user_lambda6598, 1, Arg6597];
  var Arg6597_0 = Arg6597[0];
  return (((Shen.is_type(Arg6597_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6597_0[1])) && (Shen.is_type(Arg6597_0[2], Shen.type_cons) && (Shen.is_type(Arg6597_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6597_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6597_0[2][1]]) && Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6597_0[2][2][1]]))
  : (((Shen.is_type(Arg6597_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6597_0[1])) && (Shen.is_type(Arg6597_0[2], Shen.type_cons) && (Shen.is_type(Arg6597_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6597_0[2][2][1])) && Shen.empty$question$(Arg6597_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6597_0[2][1]]);})
  : (((Shen.is_type(Arg6597_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6597_0[1])) && (Shen.is_type(Arg6597_0[2], Shen.type_cons) && (Shen.is_type(Arg6597_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6597_0[2][2][1])) && Shen.empty$question$(Arg6597_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6597_0[2][1]]);})
  : ((Shen.is_type(Arg6597_0, Shen.type_cons))
  ? false
  : true))))}, 1, [], "shen.legitimate-term?"];





Shen.fns["shen.eval-cons"] = [Shen.type_func, function shen_user_lambda6600(Arg6599) {
  if (Arg6599.length < 1) return [Shen.type_func, shen_user_lambda6600, 1, Arg6599];
  var Arg6599_0 = Arg6599[0];
  return (((Shen.is_type(Arg6599_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6599_0[1])) && (Shen.is_type(Arg6599_0[2], Shen.type_cons) && (Shen.is_type(Arg6599_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6599_0[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6599_0[2][1]]), Shen.call(Shen.fns["shen.eval-cons"], [Arg6599_0[2][2][1]])]
  : (((Shen.is_type(Arg6599_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6599_0[1])) && (Shen.is_type(Arg6599_0[2], Shen.type_cons) && (Shen.is_type(Arg6599_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6599_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6599_0[2][1]]), Arg6599_0[2][2]]]
  : Arg6599_0))}, 1, [], "shen.eval-cons"];





Shen.fns["shen.<body*>"] = [Shen.type_func, function shen_user_lambda6602(Arg6601) {
  if (Arg6601.length < 1) return [Shen.type_func, shen_user_lambda6602, 1, Arg6601];
  var Arg6601_0 = Arg6601[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<literal*>"], [Arg6601_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["<e>"], [Arg6601_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), []])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<body*>"];





Shen.fns["shen.<literal*>"] = [Shen.type_func, function shen_user_lambda6604(Arg6603) {
  if (Arg6603.length < 1) return [Shen.type_func, shen_user_lambda6604, 1, Arg6603];
  var Arg6603_0 = Arg6603[0];
  var R0;
  return ((((Shen.is_type(Arg6603_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6603_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6603_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6603_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6603_0[1], Shen.type_cons))
  ? ((R0 = Arg6603_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6603_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6603_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))
  : R0))}, 1, [], "shen.<literal*>"];





Shen.fns["shen.<end*>"] = [Shen.type_func, function shen_user_lambda6606(Arg6605) {
  if (Arg6605.length < 1) return [Shen.type_func, shen_user_lambda6606, 1, Arg6605];
  var Arg6605_0 = Arg6605[0];
  var R0;
  return (((Shen.is_type(Arg6605_0[1], Shen.type_cons))
  ? ((R0 = Arg6605_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6605_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6605_0])])[1], R0]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<end*>"];





Shen.fns["cut"] = [Shen.type_func, function shen_user_lambda6608(Arg6607) {
  if (Arg6607.length < 3) return [Shen.type_func, shen_user_lambda6608, 3, Arg6607];
  var Arg6607_0 = Arg6607[0], Arg6607_1 = Arg6607[1], Arg6607_2 = Arg6607[2];
  var R0;
  return ((R0 = Shen.unwind_tail(Shen.thaw(Arg6607_2))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? Arg6607_0
  : R0))}, 3, [], "cut"];





Shen.fns["shen.insert_modes"] = [Shen.type_func, function shen_user_lambda6610(Arg6609) {
  if (Arg6609.length < 1) return [Shen.type_func, shen_user_lambda6610, 1, Arg6609];
  var Arg6609_0 = Arg6609[0];
  return (((Shen.is_type(Arg6609_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6609_0[1])) && (Shen.is_type(Arg6609_0[2], Shen.type_cons) && (Shen.is_type(Arg6609_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6609_0[2][2][2]))))))
  ? Arg6609_0
  : ((Shen.empty$question$(Arg6609_0))
  ? []
  : ((Shen.is_type(Arg6609_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6609_0[1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_modes"], [Arg6609_0[2]]), [Shen.type_cons, [Shen.type_symbol, "-"], []]]]]
  : Arg6609_0)))}, 1, [], "shen.insert_modes"];





Shen.fns["shen.s-prolog"] = [Shen.type_func, function shen_user_lambda6612(Arg6611) {
  if (Arg6611.length < 1) return [Shen.type_func, shen_user_lambda6612, 1, Arg6611];
  var Arg6611_0 = Arg6611[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6614(Arg6613) {
  if (Arg6613.length < 1) return [Shen.type_func, shen_user_lambda6614, 1, Arg6613];
  var Arg6613_0 = Arg6613[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Arg6613_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.prolog->shen"], [Arg6611_0])]);})}, 1, [], "shen.s-prolog"];





Shen.fns["shen.prolog->shen"] = [Shen.type_func, function shen_user_lambda6616(Arg6615) {
  if (Arg6615.length < 1) return [Shen.type_func, shen_user_lambda6616, 1, Arg6615];
  var Arg6615_0 = Arg6615[0];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.compile_prolog_procedure"], Shen.call(Shen.fns["shen.group_clauses"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.s-prolog_clause"], Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.head_abstraction"], Arg6615_0])])])]);})}, 1, [], "shen.prolog->shen"];





Shen.fns["shen.s-prolog_clause"] = [Shen.type_func, function shen_user_lambda6618(Arg6617) {
  if (Arg6617.length < 1) return [Shen.type_func, shen_user_lambda6618, 1, Arg6617];
  var Arg6617_0 = Arg6617[0];
  return (((Shen.is_type(Arg6617_0, Shen.type_cons) && (Shen.is_type(Arg6617_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6617_0[2][1])) && (Shen.is_type(Arg6617_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6617_0[2][2][2]))))))
  ? [Shen.type_cons, Arg6617_0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.s-prolog_literal"], Arg6617_0[2][2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_clause"]]);}))}, 1, [], "shen.s-prolog_clause"];





Shen.fns["shen.head_abstraction"] = [Shen.type_func, function shen_user_lambda6620(Arg6619) {
  if (Arg6619.length < 1) return [Shen.type_func, shen_user_lambda6620, 1, Arg6619];
  var Arg6619_0 = Arg6619[0];
  var R0, R1;
  return (((Shen.is_type(Arg6619_0, Shen.type_cons) && (Shen.is_type(Arg6619_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6619_0[2][1])) && (Shen.is_type(Arg6619_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6619_0[2][2][2]) && (Shen.call(Shen.fns["shen.complexity_head"], [Arg6619_0[1]]) < (Shen.globals["shen.*maxcomplexity*"]))))))))
  ? [Shen.type_cons, Arg6619_0, []]
  : (((Shen.is_type(Arg6619_0, Shen.type_cons) && (Shen.is_type(Arg6619_0[1], Shen.type_cons) && (Shen.is_type(Arg6619_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6619_0[2][1])) && (Shen.is_type(Arg6619_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6619_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6622(Arg6621) {
  if (Arg6621.length < 1) return [Shen.type_func, shen_user_lambda6622, 1, Arg6621];
  var Arg6621_0 = Arg6621[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]);})}, 1, [], undefined], Arg6619_0[1][2]])),
  (R1 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6619_0[1][2]])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [R0]), [Shen.type_cons, R1, []]]]),
  (R1 = [Shen.type_cons, [Shen.type_cons, Arg6619_0[1][1], R0], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, R1, Arg6619_0[2][2][1]], []]]]),
  [Shen.type_cons, R1, []])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.head_abstraction"]]);})))}, 1, [], "shen.head_abstraction"];





Shen.fns["shen.complexity_head"] = [Shen.type_func, function shen_user_lambda6624(Arg6623) {
  if (Arg6623.length < 1) return [Shen.type_func, shen_user_lambda6624, 1, Arg6623];
  var Arg6623_0 = Arg6623[0];
  return ((Shen.is_type(Arg6623_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.product"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.complexity"], Arg6623_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.complexity_head"]]);}))}, 1, [], "shen.complexity_head"];





Shen.fns["shen.complexity"] = [Shen.type_func, function shen_user_lambda6626(Arg6625) {
  if (Arg6625.length < 1) return [Shen.type_func, shen_user_lambda6626, 1, Arg6625];
  var Arg6625_0 = Arg6625[0];
  return (((Shen.is_type(Arg6625_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6625_0[1])) && (Shen.is_type(Arg6625_0[2], Shen.type_cons) && (Shen.is_type(Arg6625_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6625_0[2][1][1])) && (Shen.is_type(Arg6625_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6625_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6625_0[2][1][2][2][2]) && (Shen.is_type(Arg6625_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6625_0[2][2][2])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [Arg6625_0[2][1]]);})
  : (((Shen.is_type(Arg6625_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6625_0[1])) && (Shen.is_type(Arg6625_0[2], Shen.type_cons) && (Shen.is_type(Arg6625_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6625_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6625_0[2][2][1])) && Shen.empty$question$(Arg6625_0[2][2][2]))))))))
  ? (2 * (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6625_0[2][1][1], Arg6625_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6625_0[2][1][2], Arg6625_0[2][2]]]])))
  : (((Shen.is_type(Arg6625_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6625_0[1])) && (Shen.is_type(Arg6625_0[2], Shen.type_cons) && (Shen.is_type(Arg6625_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6625_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6625_0[2][2][1])) && Shen.empty$question$(Arg6625_0[2][2][2]))))))))
  ? (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6625_0[2][1][1], Arg6625_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6625_0[2][1][2], Arg6625_0[2][2]]]]))
  : (((Shen.is_type(Arg6625_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6625_0[1])) && (Shen.is_type(Arg6625_0[2], Shen.type_cons) && (Shen.is_type(Arg6625_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6625_0[2][2][2]) && Shen.call(Shen.fns["variable?"], [Arg6625_0[2][1]])))))))
  ? 1
  : (((Shen.is_type(Arg6625_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6625_0[1])) && (Shen.is_type(Arg6625_0[2], Shen.type_cons) && (Shen.is_type(Arg6625_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6625_0[2][2][1])) && Shen.empty$question$(Arg6625_0[2][2][2])))))))
  ? 2
  : (((Shen.is_type(Arg6625_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6625_0[1])) && (Shen.is_type(Arg6625_0[2], Shen.type_cons) && (Shen.is_type(Arg6625_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6625_0[2][2][1])) && Shen.empty$question$(Arg6625_0[2][2][2])))))))
  ? 1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6625_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]]]);})))))))}, 1, [], "shen.complexity"];





Shen.fns["shen.product"] = [Shen.type_func, function shen_user_lambda6628(Arg6627) {
  if (Arg6627.length < 1) return [Shen.type_func, shen_user_lambda6628, 1, Arg6627];
  var Arg6627_0 = Arg6627[0];
  return ((Shen.empty$question$(Arg6627_0))
  ? 1
  : ((Shen.is_type(Arg6627_0, Shen.type_cons))
  ? (Arg6627_0[1] * Shen.call(Shen.fns["shen.product"], [Arg6627_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.product"]]);})))}, 1, [], "shen.product"];





Shen.fns["shen.s-prolog_literal"] = [Shen.type_func, function shen_user_lambda6630(Arg6629) {
  if (Arg6629.length < 1) return [Shen.type_func, shen_user_lambda6630, 1, Arg6629];
  var Arg6629_0 = Arg6629[0];
  return (((Shen.is_type(Arg6629_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6629_0[1])) && (Shen.is_type(Arg6629_0[2], Shen.type_cons) && (Shen.is_type(Arg6629_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6629_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6629_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6629_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6629_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "when"], Arg6629_0[1])) && (Shen.is_type(Arg6629_0[2], Shen.type_cons) && Shen.empty$question$(Arg6629_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6629_0[2][1]]), []]]
  : (((Shen.is_type(Arg6629_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6629_0[1])) && (Shen.is_type(Arg6629_0[2], Shen.type_cons) && (Shen.is_type(Arg6629_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6629_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6629_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6629_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6629_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fwhen"], Arg6629_0[1])) && (Shen.is_type(Arg6629_0[2], Shen.type_cons) && Shen.empty$question$(Arg6629_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6629_0[2][1]]), []]]
  : ((Shen.is_type(Arg6629_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Arg6629_0[1]]), Arg6629_0[2]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.s-prolog_literal"]]);}))))))}, 1, [], "shen.s-prolog_literal"];





Shen.fns["shen.insert_deref"] = [Shen.type_func, function shen_user_lambda6632(Arg6631) {
  if (Arg6631.length < 1) return [Shen.type_func, shen_user_lambda6632, 1, Arg6631];
  var Arg6631_0 = Arg6631[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6631_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.deref"], [Shen.type_cons, Arg6631_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6631_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6631_0[1]]), Shen.call(Shen.fns["shen.insert_deref"], [Arg6631_0[2]])]
  : Arg6631_0))}, 1, [], "shen.insert_deref"];





Shen.fns["shen.insert_lazyderef"] = [Shen.type_func, function shen_user_lambda6634(Arg6633) {
  if (Arg6633.length < 1) return [Shen.type_func, shen_user_lambda6634, 1, Arg6633];
  var Arg6633_0 = Arg6633[0];
  return ((Shen.call(Shen.fns["variable?"], [Arg6633_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Arg6633_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6633_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6633_0[1]]), Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6633_0[2]])]
  : Arg6633_0))}, 1, [], "shen.insert_lazyderef"];





Shen.fns["shen.m_prolog_to_s-prolog_predicate"] = [Shen.type_func, function shen_user_lambda6636(Arg6635) {
  if (Arg6635.length < 1) return [Shen.type_func, shen_user_lambda6636, 1, Arg6635];
  var Arg6635_0 = Arg6635[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6635_0)))
  ? [Shen.type_symbol, "unify"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=!"], Arg6635_0)))
  ? [Shen.type_symbol, "unify!"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=="], Arg6635_0)))
  ? [Shen.type_symbol, "identical"]
  : Arg6635_0)))}, 1, [], "shen.m_prolog_to_s-prolog_predicate"];





Shen.fns["shen.group_clauses"] = [Shen.type_func, function shen_user_lambda6638(Arg6637) {
  if (Arg6637.length < 1) return [Shen.type_func, shen_user_lambda6638, 1, Arg6637];
  var Arg6637_0 = Arg6637[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6637_0))
  ? []
  : ((Shen.is_type(Arg6637_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.collect"], [[Shen.type_func, function shen_user_lambda6640(Arg6639) {
  if (Arg6639.length < 2) return [Shen.type_func, shen_user_lambda6640, 2, Arg6639];
  var Arg6639_0 = Arg6639[0], Arg6639_1 = Arg6639[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.same_predicate?"], [Arg6639_0[1], Arg6639_1]);})}, 2, [Arg6637_0], undefined], Arg6637_0])),
  (R1 = Shen.call(Shen.fns["difference"], [Arg6637_0, R0])),
  [Shen.type_cons, R0, Shen.call(Shen.fns["shen.group_clauses"], [R1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.group_clauses"]]);})))}, 1, [], "shen.group_clauses"];





Shen.fns["shen.collect"] = [Shen.type_func, function shen_user_lambda6642(Arg6641) {
  if (Arg6641.length < 2) return [Shen.type_func, shen_user_lambda6642, 2, Arg6641];
  var Arg6641_0 = Arg6641[0], Arg6641_1 = Arg6641[1];
  return ((Shen.empty$question$(Arg6641_1))
  ? []
  : ((Shen.is_type(Arg6641_1, Shen.type_cons))
  ? ((Shen.call(Arg6641_0, [Arg6641_1[1]]))
  ? [Shen.type_cons, Arg6641_1[1], Shen.call(Shen.fns["shen.collect"], [Arg6641_0, Arg6641_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.collect"], [Arg6641_0, Arg6641_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.collect"]]);})))}, 2, [], "shen.collect"];





Shen.fns["shen.same_predicate?"] = [Shen.type_func, function shen_user_lambda6644(Arg6643) {
  if (Arg6643.length < 2) return [Shen.type_func, shen_user_lambda6644, 2, Arg6643];
  var Arg6643_0 = Arg6643[0], Arg6643_1 = Arg6643[1];
  return (((Shen.is_type(Arg6643_0, Shen.type_cons) && (Shen.is_type(Arg6643_0[1], Shen.type_cons) && (Shen.is_type(Arg6643_1, Shen.type_cons) && Shen.is_type(Arg6643_1[1], Shen.type_cons)))))
  ? Shen.$eq$(Arg6643_0[1][1], Arg6643_1[1][1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.same_predicate?"]]);}))}, 2, [], "shen.same_predicate?"];





Shen.fns["shen.compile_prolog_procedure"] = [Shen.type_func, function shen_user_lambda6646(Arg6645) {
  if (Arg6645.length < 1) return [Shen.type_func, shen_user_lambda6646, 1, Arg6645];
  var Arg6645_0 = Arg6645[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.procedure_name"], [Arg6645_0])),
  (R0 = Shen.call(Shen.fns["shen.clauses-to-shen"], [R0, Arg6645_0])),
  R0)}, 1, [], "shen.compile_prolog_procedure"];





Shen.fns["shen.procedure_name"] = [Shen.type_func, function shen_user_lambda6648(Arg6647) {
  if (Arg6647.length < 1) return [Shen.type_func, shen_user_lambda6648, 1, Arg6647];
  var Arg6647_0 = Arg6647[0];
  return (((Shen.is_type(Arg6647_0, Shen.type_cons) && (Shen.is_type(Arg6647_0[1], Shen.type_cons) && Shen.is_type(Arg6647_0[1][1], Shen.type_cons))))
  ? Arg6647_0[1][1][1]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.procedure_name"]]);}))}, 1, [], "shen.procedure_name"];





Shen.fns["shen.clauses-to-shen"] = [Shen.type_func, function shen_user_lambda6650(Arg6649) {
  if (Arg6649.length < 2) return [Shen.type_func, shen_user_lambda6650, 2, Arg6649];
  var Arg6649_0 = Arg6649[0], Arg6649_1 = Arg6649[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.linearise-clause"], Arg6649_1])),
  (R1 = Shen.call(Shen.fns["shen.prolog-aritycheck"], [Arg6649_0, Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6652(Arg6651) {
  if (Arg6651.length < 1) return [Shen.type_func, shen_user_lambda6652, 1, Arg6651];
  var Arg6651_0 = Arg6651[0];
  return (function() {
  return Shen.call_tail(Shen.fns["head"], [Arg6651_0]);})}, 1, [], undefined], Arg6649_1])])),
  (R1 = Shen.call(Shen.fns["shen.parameters"], [R1])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6654(Arg6653) {
  if (Arg6653.length < 2) return [Shen.type_func, shen_user_lambda6654, 2, Arg6653];
  var Arg6653_0 = Arg6653[0], Arg6653_1 = Arg6653[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aum"], [Arg6653_1, Arg6653_0]);})}, 2, [R1], undefined], R0])),
  (R0 = Shen.call(Shen.fns["shen.catch-cut"], [Shen.call(Shen.fns["shen.nest-disjunct"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.aum_to_shen"], R0])])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6649_0, Shen.call(Shen.fns["append"], [R1, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  R1)}, 2, [], "shen.clauses-to-shen"];





Shen.fns["shen.catch-cut"] = [Shen.type_func, function shen_user_lambda6656(Arg6655) {
  if (Arg6655.length < 1) return [Shen.type_func, shen_user_lambda6656, 1, Arg6655];
  var Arg6655_0 = Arg6655[0];
  return (((!Shen.call(Shen.fns["shen.occurs?"], [[Shen.type_symbol, "cut"], Arg6655_0])))
  ? Arg6655_0
  : [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.catchpoint"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.cutpoint"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, Arg6655_0, []]]], []]]]])}, 1, [], "shen.catch-cut"];





Shen.fns["shen.catchpoint"] = [Shen.type_func, function shen_user_lambda6658(Arg6657) {
  if (Arg6657.length < 0) return [Shen.type_func, shen_user_lambda6658, 0, Arg6657];
  return (Shen.globals["shen.*catch*"] = (1 + (Shen.globals["shen.*catch*"])))}, 0, [], "shen.catchpoint"];





Shen.fns["shen.cutpoint"] = [Shen.type_func, function shen_user_lambda6660(Arg6659) {
  if (Arg6659.length < 2) return [Shen.type_func, shen_user_lambda6660, 2, Arg6659];
  var Arg6659_0 = Arg6659[0], Arg6659_1 = Arg6659[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6659_1, Arg6659_0)))
  ? false
  : Arg6659_1)}, 2, [], "shen.cutpoint"];





Shen.fns["shen.nest-disjunct"] = [Shen.type_func, function shen_user_lambda6662(Arg6661) {
  if (Arg6661.length < 1) return [Shen.type_func, shen_user_lambda6662, 1, Arg6661];
  var Arg6661_0 = Arg6661[0];
  return (((Shen.is_type(Arg6661_0, Shen.type_cons) && Shen.empty$question$(Arg6661_0[2])))
  ? Arg6661_0[1]
  : ((Shen.is_type(Arg6661_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lisp-or"], [Arg6661_0[1], Shen.call(Shen.fns["shen.nest-disjunct"], [Arg6661_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.nest-disjunct"]]);})))}, 1, [], "shen.nest-disjunct"];





Shen.fns["shen.lisp-or"] = [Shen.type_func, function shen_user_lambda6664(Arg6663) {
  if (Arg6663.length < 2) return [Shen.type_func, shen_user_lambda6664, 2, Arg6663];
  var Arg6663_0 = Arg6663[0], Arg6663_1 = Arg6663[1];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, Arg6663_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, false, []]]], [Shen.type_cons, Arg6663_1, [Shen.type_cons, [Shen.type_symbol, "Case"], []]]]], []]]]]}, 2, [], "shen.lisp-or"];





Shen.fns["shen.prolog-aritycheck"] = [Shen.type_func, function shen_user_lambda6666(Arg6665) {
  if (Arg6665.length < 2) return [Shen.type_func, shen_user_lambda6666, 2, Arg6665];
  var Arg6665_0 = Arg6665[0], Arg6665_1 = Arg6665[1];
  return (((Shen.is_type(Arg6665_1, Shen.type_cons) && Shen.empty$question$(Arg6665_1[2])))
  ? (Shen.call(Shen.fns["length"], [Arg6665_1[1]]) - 1)
  : (((Shen.is_type(Arg6665_1, Shen.type_cons) && Shen.is_type(Arg6665_1[2], Shen.type_cons)))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6665_1[1]]), Shen.call(Shen.fns["length"], [Arg6665_1[2][1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-aritycheck"], [Arg6665_0, Arg6665_1[2]]);})
  : (function() {
  return Shen.simple_error(("arity error in prolog procedure " + Shen.call(Shen.fns["shen.app"], [[Shen.type_cons, Arg6665_0, []], "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.prolog-aritycheck"]]);})))}, 2, [], "shen.prolog-aritycheck"];





Shen.fns["shen.linearise-clause"] = [Shen.type_func, function shen_user_lambda6668(Arg6667) {
  if (Arg6667.length < 1) return [Shen.type_func, shen_user_lambda6668, 1, Arg6667];
  var Arg6667_0 = Arg6667[0];
  var R0;
  return (((Shen.is_type(Arg6667_0, Shen.type_cons) && (Shen.is_type(Arg6667_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6667_0[2][1])) && (Shen.is_type(Arg6667_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6667_0[2][2][2]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise"], [[Shen.type_cons, Arg6667_0[1], Arg6667_0[2][2]]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.clause_form"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.linearise-clause"]]);}))}, 1, [], "shen.linearise-clause"];





Shen.fns["shen.clause_form"] = [Shen.type_func, function shen_user_lambda6670(Arg6669) {
  if (Arg6669.length < 1) return [Shen.type_func, shen_user_lambda6670, 1, Arg6669];
  var Arg6669_0 = Arg6669[0];
  return (((Shen.is_type(Arg6669_0, Shen.type_cons) && (Shen.is_type(Arg6669_0[2], Shen.type_cons) && Shen.empty$question$(Arg6669_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.explicit_modes"], [Arg6669_0[1]]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.cf_help"], [Arg6669_0[2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.clause_form"]]);}))}, 1, [], "shen.clause_form"];





Shen.fns["shen.explicit_modes"] = [Shen.type_func, function shen_user_lambda6672(Arg6671) {
  if (Arg6671.length < 1) return [Shen.type_func, shen_user_lambda6672, 1, Arg6671];
  var Arg6671_0 = Arg6671[0];
  return ((Shen.is_type(Arg6671_0, Shen.type_cons))
  ? [Shen.type_cons, Arg6671_0[1], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.em_help"], Arg6671_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.explicit_modes"]]);}))}, 1, [], "shen.explicit_modes"];





Shen.fns["shen.em_help"] = [Shen.type_func, function shen_user_lambda6674(Arg6673) {
  if (Arg6673.length < 1) return [Shen.type_func, shen_user_lambda6674, 1, Arg6673];
  var Arg6673_0 = Arg6673[0];
  return (((Shen.is_type(Arg6673_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6673_0[1])) && (Shen.is_type(Arg6673_0[2], Shen.type_cons) && (Shen.is_type(Arg6673_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6673_0[2][2][2]))))))
  ? Arg6673_0
  : [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6673_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]])}, 1, [], "shen.em_help"];





Shen.fns["shen.cf_help"] = [Shen.type_func, function shen_user_lambda6676(Arg6675) {
  if (Arg6675.length < 1) return [Shen.type_func, shen_user_lambda6676, 1, Arg6675];
  var Arg6675_0 = Arg6675[0];
  return (((Shen.is_type(Arg6675_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6675_0[1])) && (Shen.is_type(Arg6675_0[2], Shen.type_cons) && (Shen.is_type(Arg6675_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6675_0[2][1][1])) && (Shen.is_type(Arg6675_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6675_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6675_0[2][1][2][2][2]) && (Shen.is_type(Arg6675_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6675_0[2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, (((Shen.globals["shen.*occurs*"]))
  ? [Shen.type_symbol, "unify!"]
  : [Shen.type_symbol, "unify"]), Arg6675_0[2][1][2]], Shen.call(Shen.fns["shen.cf_help"], [Arg6675_0[2][2][1]])]
  : Arg6675_0)}, 1, [], "shen.cf_help"];





Shen.fns["occurs-check"] = [Shen.type_func, function shen_user_lambda6678(Arg6677) {
  if (Arg6677.length < 1) return [Shen.type_func, shen_user_lambda6678, 1, Arg6677];
  var Arg6677_0 = Arg6677[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6677_0)))
  ? (Shen.globals["shen.*occurs*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6677_0)))
  ? (Shen.globals["shen.*occurs*"] = false)
  : (function() {
  return Shen.simple_error("occurs-check expects + or -\x0a");})))}, 1, [], "occurs-check"];





Shen.fns["shen.aum"] = [Shen.type_func, function shen_user_lambda6680(Arg6679) {
  if (Arg6679.length < 2) return [Shen.type_func, shen_user_lambda6680, 2, Arg6679];
  var Arg6679_0 = Arg6679[0], Arg6679_1 = Arg6679[1];
  var R0;
  return (((Shen.is_type(Arg6679_0, Shen.type_cons) && (Shen.is_type(Arg6679_0[1], Shen.type_cons) && (Shen.is_type(Arg6679_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6679_0[2][1])) && (Shen.is_type(Arg6679_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6679_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6679_0[1][2], [Shen.type_cons, Shen.call(Shen.fns["shen.continuation_call"], [Arg6679_0[1][2], Arg6679_0[2][2][1]]), []]]], Arg6679_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [R0, [Shen.type_symbol, "+"]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.aum"]]);}))}, 2, [], "shen.aum"];





Shen.fns["shen.continuation_call"] = [Shen.type_func, function shen_user_lambda6682(Arg6681) {
  if (Arg6681.length < 2) return [Shen.type_func, shen_user_lambda6682, 2, Arg6681];
  var Arg6681_0 = Arg6681[0], Arg6681_1 = Arg6681[1];
  var R0, R1;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "ProcessN"], Shen.call(Shen.fns["shen.extract_vars"], [Arg6681_0])]),
  (R1 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6681_1])),
  (R1 = Shen.call(Shen.fns["remove"], [[Shen.type_symbol, "Throwcontrol"], Shen.call(Shen.fns["difference"], [R1, R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cc_help"], [R1, Arg6681_1]);}))}, 2, [], "shen.continuation_call"];





Shen.fns["remove"] = [Shen.type_func, function shen_user_lambda6684(Arg6683) {
  if (Arg6683.length < 2) return [Shen.type_func, shen_user_lambda6684, 2, Arg6683];
  var Arg6683_0 = Arg6683[0], Arg6683_1 = Arg6683[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6683_0, Arg6683_1, []]);})}, 2, [], "remove"];





Shen.fns["shen.remove-h"] = [Shen.type_func, function shen_user_lambda6686(Arg6685) {
  if (Arg6685.length < 3) return [Shen.type_func, shen_user_lambda6686, 3, Arg6685];
  var Arg6685_0 = Arg6685[0], Arg6685_1 = Arg6685[1], Arg6685_2 = Arg6685[2];
  return ((Shen.empty$question$(Arg6685_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg6685_2]);})
  : (((Shen.is_type(Arg6685_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6685_1[1], Arg6685_0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6685_1[1], Arg6685_1[2], Arg6685_2]);})
  : ((Shen.is_type(Arg6685_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6685_0, Arg6685_1[2], [Shen.type_cons, Arg6685_1[1], Arg6685_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.remove-h"]]);}))))}, 3, [], "shen.remove-h"];





Shen.fns["shen.cc_help"] = [Shen.type_func, function shen_user_lambda6688(Arg6687) {
  if (Arg6687.length < 2) return [Shen.type_func, shen_user_lambda6688, 2, Arg6687];
  var Arg6687_0 = Arg6687[0], Arg6687_1 = Arg6687[1];
  return (((Shen.empty$question$(Arg6687_0) && Shen.empty$question$(Arg6687_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]]
  : ((Shen.empty$question$(Arg6687_1))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6687_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]], []]]]]]]]]
  : ((Shen.empty$question$(Arg6687_0))
  ? [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6687_1, []]]]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6687_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6687_1, []]]]], []]]]]]]]])))}, 2, [], "shen.cc_help"];





Shen.fns["shen.make_mu_application"] = [Shen.type_func, function shen_user_lambda6690(Arg6689) {
  if (Arg6689.length < 2) return [Shen.type_func, shen_user_lambda6690, 2, Arg6689];
  var Arg6689_0 = Arg6689[0], Arg6689_1 = Arg6689[1];
  return (((Shen.is_type(Arg6689_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6689_0[1])) && (Shen.is_type(Arg6689_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6689_0[2][1]) && (Shen.is_type(Arg6689_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6689_0[2][2][2]) && Shen.empty$question$(Arg6689_1))))))))
  ? Arg6689_0[2][2][1]
  : (((Shen.is_type(Arg6689_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6689_0[1])) && (Shen.is_type(Arg6689_0[2], Shen.type_cons) && (Shen.is_type(Arg6689_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6689_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6689_0[2][2][2]) && Shen.is_type(Arg6689_1, Shen.type_cons))))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6689_0[2][1][1], [Shen.type_cons, Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6689_0[2][1][2], Arg6689_0[2][2]]], Arg6689_1[2]]), []]]], [Shen.type_cons, Arg6689_1[1], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.make_mu_application"]]);})))}, 2, [], "shen.make_mu_application"];





Shen.fns["shen.mu_reduction"] = [Shen.type_func, function shen_user_lambda6692(Arg6691) {
  if (Arg6691.length < 2) return [Shen.type_func, shen_user_lambda6692, 2, Arg6691];
  var Arg6691_0 = Arg6691[0], Arg6691_1 = Arg6691[1];
  var R0;
  return (((Shen.is_type(Arg6691_0, Shen.type_cons) && (Shen.is_type(Arg6691_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6691_0[1][1])) && (Shen.is_type(Arg6691_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6691_0[1][2][1][1])) && (Shen.is_type(Arg6691_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6691_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[1][2][2][2]) && (Shen.is_type(Arg6691_0[2], Shen.type_cons) && Shen.empty$question$(Arg6691_0[2][2]))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6691_0[1][2][1][2][1], Arg6691_0[1][2][2]]], Arg6691_0[2]], Arg6691_0[1][2][1][2][2][1]]);})
  : (((Shen.is_type(Arg6691_0, Shen.type_cons) && (Shen.is_type(Arg6691_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6691_0[1][1])) && (Shen.is_type(Arg6691_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[1][2][2][2]) && (Shen.is_type(Arg6691_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "_"], Arg6691_0[1][2][1])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [Arg6691_0[1][2][2][1], Arg6691_1]);})
  : (((Shen.is_type(Arg6691_0, Shen.type_cons) && (Shen.is_type(Arg6691_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6691_0[1][1])) && (Shen.is_type(Arg6691_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[1][2][2][2]) && (Shen.is_type(Arg6691_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[2][2]) && Shen.call(Shen.fns["shen.ephemeral_variable?"], [Arg6691_0[1][2][1], Arg6691_0[2][1]]))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["subst"], [Arg6691_0[2][1], Arg6691_0[1][2][1], Shen.call(Shen.fns["shen.mu_reduction"], [Arg6691_0[1][2][2][1], Arg6691_1])]);})
  : (((Shen.is_type(Arg6691_0, Shen.type_cons) && (Shen.is_type(Arg6691_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6691_0[1][1])) && (Shen.is_type(Arg6691_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[1][2][2][2]) && (Shen.is_type(Arg6691_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[2][2]) && Shen.call(Shen.fns["variable?"], [Arg6691_0[1][2][1]]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6691_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, Arg6691_0[2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6691_0[1][2][2][1], Arg6691_1]), []]]]]]]
  : (((Shen.is_type(Arg6691_0, Shen.type_cons) && (Shen.is_type(Arg6691_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6691_0[1][1])) && (Shen.is_type(Arg6691_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[1][2][2][2]) && (Shen.is_type(Arg6691_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6691_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6691_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6691_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6691_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6691_0[1][2][2][1], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6691_0, Shen.type_cons) && (Shen.is_type(Arg6691_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6691_0[1][1])) && (Shen.is_type(Arg6691_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[1][2][2][2]) && (Shen.is_type(Arg6691_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6691_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6691_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6691_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6691_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6691_0[1][2][2][1], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6691_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6691_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6691_0, Shen.type_cons) && (Shen.is_type(Arg6691_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6691_0[1][1])) && (Shen.is_type(Arg6691_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[1][2][2][2]) && (Shen.is_type(Arg6691_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6691_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6691_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6691_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6691_0[1][2][1][2], Arg6691_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6691_0, Shen.type_cons) && (Shen.is_type(Arg6691_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6691_0[1][1])) && (Shen.is_type(Arg6691_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6691_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[1][2][2][2]) && (Shen.is_type(Arg6691_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6691_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6691_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6691_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6691_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6691_0[1][2][1][2], Arg6691_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.extract_vars"], [Arg6691_0[1][2][1]]), [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6691_0[1][2][1]])]), [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6691_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], []]]]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : Arg6691_0))))))))}, 2, [], "shen.mu_reduction"];





Shen.fns["shen.rcons_form"] = [Shen.type_func, function shen_user_lambda6694(Arg6693) {
  if (Arg6693.length < 1) return [Shen.type_func, shen_user_lambda6694, 1, Arg6693];
  var Arg6693_0 = Arg6693[0];
  return ((Shen.is_type(Arg6693_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6693_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6693_0[2]]), []]]]
  : Arg6693_0)}, 1, [], "shen.rcons_form"];





Shen.fns["shen.remove_modes"] = [Shen.type_func, function shen_user_lambda6696(Arg6695) {
  if (Arg6695.length < 1) return [Shen.type_func, shen_user_lambda6696, 1, Arg6695];
  var Arg6695_0 = Arg6695[0];
  return (((Shen.is_type(Arg6695_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6695_0[1])) && (Shen.is_type(Arg6695_0[2], Shen.type_cons) && (Shen.is_type(Arg6695_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6695_0[2][2][1])) && Shen.empty$question$(Arg6695_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6695_0[2][1]]);})
  : (((Shen.is_type(Arg6695_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6695_0[1])) && (Shen.is_type(Arg6695_0[2], Shen.type_cons) && (Shen.is_type(Arg6695_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6695_0[2][2][1])) && Shen.empty$question$(Arg6695_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6695_0[2][1]]);})
  : ((Shen.is_type(Arg6695_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove_modes"], [Arg6695_0[1]]), Shen.call(Shen.fns["shen.remove_modes"], [Arg6695_0[2]])]
  : Arg6695_0)))}, 1, [], "shen.remove_modes"];





Shen.fns["shen.ephemeral_variable?"] = [Shen.type_func, function shen_user_lambda6698(Arg6697) {
  if (Arg6697.length < 2) return [Shen.type_func, shen_user_lambda6698, 2, Arg6697];
  var Arg6697_0 = Arg6697[0], Arg6697_1 = Arg6697[1];
  return (Shen.call(Shen.fns["variable?"], [Arg6697_0]) && Shen.call(Shen.fns["variable?"], [Arg6697_1]))}, 2, [], "shen.ephemeral_variable?"];





Shen.fns["shen.prolog_constant?"] = [Shen.type_func, function shen_user_lambda6700(Arg6699) {
  if (Arg6699.length < 1) return [Shen.type_func, shen_user_lambda6700, 1, Arg6699];
  var Arg6699_0 = Arg6699[0];
  return ((Shen.is_type(Arg6699_0, Shen.type_cons))
  ? false
  : true)}, 1, [], "shen.prolog_constant?"];





Shen.fns["shen.aum_to_shen"] = [Shen.type_func, function shen_user_lambda6702(Arg6701) {
  if (Arg6701.length < 1) return [Shen.type_func, shen_user_lambda6702, 1, Arg6701];
  var Arg6701_0 = Arg6701[0];
  return (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.be"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6701_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6701_0[2][2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6701_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6701_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6701_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.result"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.dereferencing"], Arg6701_0[2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6701_0[2][2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6701_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.else"], Arg6701_0[2][2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6701_0[2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6701_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6701_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variable"], Arg6701_0[2][2][2][1])) && Shen.empty$question$(Arg6701_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pvar?"], [Shen.type_cons, Arg6701_0[1], []]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.non-empty"], Arg6701_0[2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6701_0[2][2][2][2][1])) && Shen.empty$question$(Arg6701_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, Arg6701_0[1], []]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6701_0[2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6701_0[2][2][2][2][1]) && (Shen.is_type(Arg6701_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6701_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6701_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.aum_to_shen"], [Arg6701_0[2][2][2][2][2][2][2][1]]);})
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6701_0[2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6701_0[2][2][2][2][1], Shen.type_cons) && (Shen.is_type(Arg6701_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6701_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6701_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6701_0[2][2][2][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [[Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6701_0[2][2][2][2][1][2], Arg6701_0[2][2][2][2][2]]]]]]]), []]]]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6701_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6701_0[2][2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.bindv"], [Shen.type_cons, Arg6701_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.chwild"], [Arg6701_0[2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6701_0[2][2][2][2][2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.unbindv"], [Shen.type_cons, Arg6701_0[2][1], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]]], []]]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "identical"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6701_0[2][2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6701_0[2][2][2][2][1], [Shen.type_cons, Arg6701_0[1], []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.failed!"], Arg6701_0)))
  ? false
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "head"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6701_0[2][2][2]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tail"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6701_0[2][2][2]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.pop"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.stack"], Arg6701_0[2][2][1])) && Shen.empty$question$(Arg6701_0[2][2][2]))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], []]]]
  : (((Shen.is_type(Arg6701_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "call"], Arg6701_0[1])) && (Shen.is_type(Arg6701_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6701_0[2][1])) && (Shen.is_type(Arg6701_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.continuation"], Arg6701_0[2][2][1])) && (Shen.is_type(Arg6701_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6701_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, Shen.call(Shen.fns["shen.call_the_continuation"], [Shen.call(Shen.fns["shen.chwild"], [Arg6701_0[2][2][2][1]]), [Shen.type_symbol, "ProcessN"], [Shen.type_symbol, "Continuation"]]), []]]]
  : Arg6701_0))))))))))))))}, 1, [], "shen.aum_to_shen"];





Shen.fns["shen.chwild"] = [Shen.type_func, function shen_user_lambda6704(Arg6703) {
  if (Arg6703.length < 1) return [Shen.type_func, shen_user_lambda6704, 1, Arg6703];
  var Arg6703_0 = Arg6703[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6703_0, [Shen.type_symbol, "_"])))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]
  : ((Shen.is_type(Arg6703_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.chwild"], Arg6703_0]);})
  : Arg6703_0))}, 1, [], "shen.chwild"];





Shen.fns["shen.newpv"] = [Shen.type_func, function shen_user_lambda6706(Arg6705) {
  if (Arg6705.length < 1) return [Shen.type_func, shen_user_lambda6706, 1, Arg6705];
  var Arg6705_0 = Arg6705[0];
  var R0, R1;
  return ((R0 = (Shen.absvector_ref((Shen.globals["shen.*varcounter*"]), Arg6705_0) + 1)),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6705_0, R0),
  (R1 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6705_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.call(Shen.fns["limit"], [R1]))))
  ? Shen.call(Shen.fns["shen.resizeprocessvector"], [Arg6705_0, R0])
  : [Shen.type_symbol, "shen.skip"]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mk-pvar"], [R0]);}))}, 1, [], "shen.newpv"];





Shen.fns["shen.resizeprocessvector"] = [Shen.type_func, function shen_user_lambda6708(Arg6707) {
  if (Arg6707.length < 2) return [Shen.type_func, shen_user_lambda6708, 2, Arg6707];
  var Arg6707_0 = Arg6707[0], Arg6707_1 = Arg6707[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6707_0)),
  (R0 = Shen.call(Shen.fns["shen.resize-vector"], [R0, (Arg6707_1 + Arg6707_1), [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6707_0, R0))}, 2, [], "shen.resizeprocessvector"];





Shen.fns["shen.resize-vector"] = [Shen.type_func, function shen_user_lambda6710(Arg6709) {
  if (Arg6709.length < 3) return [Shen.type_func, shen_user_lambda6710, 3, Arg6709];
  var Arg6709_0 = Arg6709[0], Arg6709_1 = Arg6709[1], Arg6709_2 = Arg6709[2];
  var R0;
  return ((R0 = Shen.absvector_set(Shen.absvector((1 + Arg6709_1)), 0, Arg6709_1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector"], [Arg6709_0, R0, Shen.call(Shen.fns["limit"], [Arg6709_0]), Arg6709_1, Arg6709_2]);}))}, 3, [], "shen.resize-vector"];





Shen.fns["shen.copy-vector"] = [Shen.type_func, function shen_user_lambda6712(Arg6711) {
  if (Arg6711.length < 5) return [Shen.type_func, shen_user_lambda6712, 5, Arg6711];
  var Arg6711_0 = Arg6711[0], Arg6711_1 = Arg6711[1], Arg6711_2 = Arg6711[2], Arg6711_3 = Arg6711[3], Arg6711_4 = Arg6711[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(1 + Arg6711_2), (Arg6711_3 + 1), Arg6711_4, Shen.call(Shen.fns["shen.copy-vector-stage-1"], [1, Arg6711_0, Arg6711_1, (1 + Arg6711_2)])]);})}, 5, [], "shen.copy-vector"];





Shen.fns["shen.copy-vector-stage-1"] = [Shen.type_func, function shen_user_lambda6714(Arg6713) {
  if (Arg6713.length < 4) return [Shen.type_func, shen_user_lambda6714, 4, Arg6713];
  var Arg6713_0 = Arg6713[0], Arg6713_1 = Arg6713[1], Arg6713_2 = Arg6713[2], Arg6713_3 = Arg6713[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6713_3, Arg6713_0)))
  ? Arg6713_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-1"], [(1 + Arg6713_0), Arg6713_1, Shen.absvector_set(Arg6713_2, Arg6713_0, Shen.absvector_ref(Arg6713_1, Arg6713_0)), Arg6713_3]);}))}, 4, [], "shen.copy-vector-stage-1"];





Shen.fns["shen.copy-vector-stage-2"] = [Shen.type_func, function shen_user_lambda6716(Arg6715) {
  if (Arg6715.length < 4) return [Shen.type_func, shen_user_lambda6716, 4, Arg6715];
  var Arg6715_0 = Arg6715[0], Arg6715_1 = Arg6715[1], Arg6715_2 = Arg6715[2], Arg6715_3 = Arg6715[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6715_1, Arg6715_0)))
  ? Arg6715_3
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(Arg6715_0 + 1), Arg6715_1, Arg6715_2, Shen.absvector_set(Arg6715_3, Arg6715_0, Arg6715_2)]);}))}, 4, [], "shen.copy-vector-stage-2"];





Shen.fns["shen.mk-pvar"] = [Shen.type_func, function shen_user_lambda6718(Arg6717) {
  if (Arg6717.length < 1) return [Shen.type_func, shen_user_lambda6718, 1, Arg6717];
  var Arg6717_0 = Arg6717[0];
  return Shen.absvector_set(Shen.absvector_set(Shen.absvector(2), 0, [Shen.type_symbol, "shen.pvar"]), 1, Arg6717_0)}, 1, [], "shen.mk-pvar"];





Shen.fns["shen.pvar?"] = [Shen.type_func, function shen_user_lambda6720(Arg6719) {
  if (Arg6719.length < 1) return [Shen.type_func, shen_user_lambda6720, 1, Arg6719];
  var Arg6719_0 = Arg6719[0];
  return (Shen.absvector$question$(Arg6719_0) && Shen.unwind_tail(Shen.$eq$(Shen.absvector_ref(Arg6719_0, 0), [Shen.type_symbol, "shen.pvar"])))}, 1, [], "shen.pvar?"];





Shen.fns["shen.bindv"] = [Shen.type_func, function shen_user_lambda6722(Arg6721) {
  if (Arg6721.length < 3) return [Shen.type_func, shen_user_lambda6722, 3, Arg6721];
  var Arg6721_0 = Arg6721[0], Arg6721_1 = Arg6721[1], Arg6721_2 = Arg6721[2];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6721_2)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6721_0, 1), Arg6721_1))}, 3, [], "shen.bindv"];





Shen.fns["shen.unbindv"] = [Shen.type_func, function shen_user_lambda6724(Arg6723) {
  if (Arg6723.length < 2) return [Shen.type_func, shen_user_lambda6724, 2, Arg6723];
  var Arg6723_0 = Arg6723[0], Arg6723_1 = Arg6723[1];
  var R0;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6723_1)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6723_0, 1), [Shen.type_symbol, "shen.-null-"]))}, 2, [], "shen.unbindv"];





Shen.fns["shen.incinfs"] = [Shen.type_func, function shen_user_lambda6726(Arg6725) {
  if (Arg6725.length < 0) return [Shen.type_func, shen_user_lambda6726, 0, Arg6725];
  return (Shen.globals["shen.*infs*"] = (1 + (Shen.globals["shen.*infs*"])))}, 0, [], "shen.incinfs"];





Shen.fns["shen.call_the_continuation"] = [Shen.type_func, function shen_user_lambda6728(Arg6727) {
  if (Arg6727.length < 3) return [Shen.type_func, shen_user_lambda6728, 3, Arg6727];
  var Arg6727_0 = Arg6727[0], Arg6727_1 = Arg6727[1], Arg6727_2 = Arg6727[2];
  var R0;
  return (((Shen.is_type(Arg6727_0, Shen.type_cons) && (Shen.is_type(Arg6727_0[1], Shen.type_cons) && Shen.empty$question$(Arg6727_0[2]))))
  ? [Shen.type_cons, Arg6727_0[1][1], Shen.call(Shen.fns["append"], [Arg6727_0[1][2], [Shen.type_cons, Arg6727_1, [Shen.type_cons, Arg6727_2, []]]])]
  : (((Shen.is_type(Arg6727_0, Shen.type_cons) && Shen.is_type(Arg6727_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.newcontinuation"], [Arg6727_0[2], Arg6727_1, Arg6727_2])),
  [Shen.type_cons, Arg6727_0[1][1], Shen.call(Shen.fns["append"], [Arg6727_0[1][2], [Shen.type_cons, Arg6727_1, [Shen.type_cons, R0, []]]])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call_the_continuation"]]);})))}, 3, [], "shen.call_the_continuation"];





Shen.fns["shen.newcontinuation"] = [Shen.type_func, function shen_user_lambda6730(Arg6729) {
  if (Arg6729.length < 3) return [Shen.type_func, shen_user_lambda6730, 3, Arg6729];
  var Arg6729_0 = Arg6729[0], Arg6729_1 = Arg6729[1], Arg6729_2 = Arg6729[2];
  return ((Shen.empty$question$(Arg6729_0))
  ? Arg6729_2
  : (((Shen.is_type(Arg6729_0, Shen.type_cons) && Shen.is_type(Arg6729_0[1], Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_cons, Arg6729_0[1][1], Shen.call(Shen.fns["append"], [Arg6729_0[1][2], [Shen.type_cons, Arg6729_1, [Shen.type_cons, Shen.call(Shen.fns["shen.newcontinuation"], [Arg6729_0[2], Arg6729_1, Arg6729_2]), []]]])], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.newcontinuation"]]);})))}, 3, [], "shen.newcontinuation"];





Shen.fns["return"] = [Shen.type_func, function shen_user_lambda6732(Arg6731) {
  if (Arg6731.length < 3) return [Shen.type_func, shen_user_lambda6732, 3, Arg6731];
  var Arg6731_0 = Arg6731[0], Arg6731_1 = Arg6731[1], Arg6731_2 = Arg6731[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6731_0, Arg6731_1]);})}, 3, [], "return"];





Shen.fns["shen.measure&return"] = [Shen.type_func, function shen_user_lambda6734(Arg6733) {
  if (Arg6733.length < 3) return [Shen.type_func, shen_user_lambda6734, 3, Arg6733];
  var Arg6733_0 = Arg6733[0], Arg6733_1 = Arg6733[1], Arg6733_2 = Arg6733[2];
  return (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [(Shen.globals["shen.*infs*"]), " inferences\x0a", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6733_0, Arg6733_1]);}))}, 3, [], "shen.measure&return"];





Shen.fns["unify"] = [Shen.type_func, function shen_user_lambda6736(Arg6735) {
  if (Arg6735.length < 4) return [Shen.type_func, shen_user_lambda6736, 4, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_2]), Arg6735_2, Arg6735_3]);})}, 4, [], "unify"];





Shen.fns["shen.lzy="] = [Shen.type_func, function shen_user_lambda6738(Arg6737) {
  if (Arg6737.length < 4) return [Shen.type_func, shen_user_lambda6738, 4, Arg6737];
  var Arg6737_0 = Arg6737[0], Arg6737_1 = Arg6737[1], Arg6737_2 = Arg6737[2], Arg6737_3 = Arg6737[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6737_1, Arg6737_0)))
  ? Shen.thaw(Arg6737_3)
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6737_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6737_0, Arg6737_1, Arg6737_2, Arg6737_3]);})
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6737_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6737_1, Arg6737_0, Arg6737_2, Arg6737_3]);})
  : (((Shen.is_type(Arg6737_0, Shen.type_cons) && Shen.is_type(Arg6737_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6737_0[1], Arg6737_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6737_1[1], Arg6737_2]), Arg6737_2, (new Shen.Freeze([Arg6737_0, Arg6737_1, Arg6737_2, Arg6737_3], function(Arg6739) {
  var Arg6739_0 = Arg6739[0], Arg6739_1 = Arg6739[1], Arg6739_2 = Arg6739[2], Arg6739_3 = Arg6739[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6739_0[2], Arg6739_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6739_1[2], Arg6739_2]), Arg6739_2, Arg6739_3]);});})}))]);})
  : false))))}, 4, [], "shen.lzy="];





Shen.fns["shen.deref"] = [Shen.type_func, function shen_user_lambda6742(Arg6741) {
  if (Arg6741.length < 2) return [Shen.type_func, shen_user_lambda6742, 2, Arg6741];
  var Arg6741_0 = Arg6741[0], Arg6741_1 = Arg6741[1];
  var R0;
  return ((Shen.is_type(Arg6741_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6741_0[1], Arg6741_1]), Shen.call(Shen.fns["shen.deref"], [Arg6741_0[2], Arg6741_1])]
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6741_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6741_0, Arg6741_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6741_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [R0, Arg6741_1]);})))
  : Arg6741_0))}, 2, [], "shen.deref"];





Shen.fns["shen.lazyderef"] = [Shen.type_func, function shen_user_lambda6744(Arg6743) {
  if (Arg6743.length < 2) return [Shen.type_func, shen_user_lambda6744, 2, Arg6743];
  var Arg6743_0 = Arg6743[0], Arg6743_1 = Arg6743[1];
  var R0;
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg6743_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6743_0, Arg6743_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6743_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lazyderef"], [R0, Arg6743_1]);})))
  : Arg6743_0)}, 2, [], "shen.lazyderef"];





Shen.fns["shen.valvector"] = [Shen.type_func, function shen_user_lambda6746(Arg6745) {
  if (Arg6745.length < 2) return [Shen.type_func, shen_user_lambda6746, 2, Arg6745];
  var Arg6745_0 = Arg6745[0], Arg6745_1 = Arg6745[1];
  return Shen.absvector_ref(Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6745_1), Shen.absvector_ref(Arg6745_0, 1))}, 2, [], "shen.valvector"];





Shen.fns["unify!"] = [Shen.type_func, function shen_user_lambda6748(Arg6747) {
  if (Arg6747.length < 4) return [Shen.type_func, shen_user_lambda6748, 4, Arg6747];
  var Arg6747_0 = Arg6747[0], Arg6747_1 = Arg6747[1], Arg6747_2 = Arg6747[2], Arg6747_3 = Arg6747[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6747_0, Arg6747_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6747_1, Arg6747_2]), Arg6747_2, Arg6747_3]);})}, 4, [], "unify!"];





Shen.fns["shen.lzy=!"] = [Shen.type_func, function shen_user_lambda6750(Arg6749) {
  if (Arg6749.length < 4) return [Shen.type_func, shen_user_lambda6750, 4, Arg6749];
  var Arg6749_0 = Arg6749[0], Arg6749_1 = Arg6749[1], Arg6749_2 = Arg6749[2], Arg6749_3 = Arg6749[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6749_1, Arg6749_0)))
  ? Shen.thaw(Arg6749_3)
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6749_0]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6749_0, Shen.call(Shen.fns["shen.deref"], [Arg6749_1, Arg6749_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6749_0, Arg6749_1, Arg6749_2, Arg6749_3]);})
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6749_1]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6749_1, Shen.call(Shen.fns["shen.deref"], [Arg6749_0, Arg6749_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6749_1, Arg6749_0, Arg6749_2, Arg6749_3]);})
  : (((Shen.is_type(Arg6749_0, Shen.type_cons) && Shen.is_type(Arg6749_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6749_0[1], Arg6749_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6749_1[1], Arg6749_2]), Arg6749_2, (new Shen.Freeze([Arg6749_0, Arg6749_1, Arg6749_2, Arg6749_3], function(Arg6751) {
  var Arg6751_0 = Arg6751[0], Arg6751_1 = Arg6751[1], Arg6751_2 = Arg6751[2], Arg6751_3 = Arg6751[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6751_0[2], Arg6751_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6751_1[2], Arg6751_2]), Arg6751_2, Arg6751_3]);});})}))]);})
  : false))))}, 4, [], "shen.lzy=!"];





Shen.fns["shen.occurs?"] = [Shen.type_func, function shen_user_lambda6754(Arg6753) {
  if (Arg6753.length < 2) return [Shen.type_func, shen_user_lambda6754, 2, Arg6753];
  var Arg6753_0 = Arg6753[0], Arg6753_1 = Arg6753[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6753_1, Arg6753_0)))
  ? true
  : ((Shen.is_type(Arg6753_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.occurs?"], [Arg6753_0, Arg6753_1[1]]) || Shen.call(Shen.fns["shen.occurs?"], [Arg6753_0, Arg6753_1[2]]))
  : false))}, 2, [], "shen.occurs?"];





Shen.fns["identical"] = [Shen.type_func, function shen_user_lambda6756(Arg6755) {
  if (Arg6755.length < 4) return [Shen.type_func, shen_user_lambda6756, 4, Arg6755];
  var Arg6755_0 = Arg6755[0], Arg6755_1 = Arg6755[1], Arg6755_2 = Arg6755[2], Arg6755_3 = Arg6755[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6755_0, Arg6755_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6755_1, Arg6755_2]), Arg6755_2, Arg6755_3]);})}, 4, [], "identical"];





Shen.fns["shen.lzy=="] = [Shen.type_func, function shen_user_lambda6758(Arg6757) {
  if (Arg6757.length < 4) return [Shen.type_func, shen_user_lambda6758, 4, Arg6757];
  var Arg6757_0 = Arg6757[0], Arg6757_1 = Arg6757[1], Arg6757_2 = Arg6757[2], Arg6757_3 = Arg6757[3];
  return ((Shen.unwind_tail(Shen.$eq$(Arg6757_1, Arg6757_0)))
  ? Shen.thaw(Arg6757_3)
  : (((Shen.is_type(Arg6757_0, Shen.type_cons) && Shen.is_type(Arg6757_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6757_0[1], Arg6757_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6757_1[1], Arg6757_2]), Arg6757_2, (new Shen.Freeze([Arg6757_0, Arg6757_1, Arg6757_2, Arg6757_3], function(Arg6759) {
  var Arg6759_0 = Arg6759[0], Arg6759_1 = Arg6759[1], Arg6759_2 = Arg6759[2], Arg6759_3 = Arg6759[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Arg6759_0[2], Arg6759_1[2], Arg6759_2, Arg6759_3]);});})}))]);})
  : false))}, 4, [], "shen.lzy=="];





Shen.fns["shen.pvar"] = [Shen.type_func, function shen_user_lambda6762(Arg6761) {
  if (Arg6761.length < 1) return [Shen.type_func, shen_user_lambda6762, 1, Arg6761];
  var Arg6761_0 = Arg6761[0];
  return ("Var" + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg6761_0, 1), "", [Shen.type_symbol, "shen.a"]]))}, 1, [], "shen.pvar"];





Shen.fns["bind"] = [Shen.type_func, function shen_user_lambda6764(Arg6763) {
  if (Arg6763.length < 4) return [Shen.type_func, shen_user_lambda6764, 4, Arg6763];
  var Arg6763_0 = Arg6763[0], Arg6763_1 = Arg6763[1], Arg6763_2 = Arg6763[2], Arg6763_3 = Arg6763[3];
  var R0;
  return (Shen.call(Shen.fns["shen.bindv"], [Arg6763_0, Arg6763_1, Arg6763_2]),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6763_3))),
  Shen.call(Shen.fns["shen.unbindv"], [Arg6763_0, Arg6763_2]),
  R0)}, 4, [], "bind"];





Shen.fns["fwhen"] = [Shen.type_func, function shen_user_lambda6766(Arg6765) {
  if (Arg6765.length < 3) return [Shen.type_func, shen_user_lambda6766, 3, Arg6765];
  var Arg6765_0 = Arg6765[0], Arg6765_1 = Arg6765[1], Arg6765_2 = Arg6765[2];
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg6765_0)))
  ? Shen.thaw(Arg6765_2)
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg6765_0)))
  ? false
  : (function() {
  return Shen.simple_error(("fwhen expects a boolean: not " + Shen.call(Shen.fns["shen.app"], [Arg6765_0, "%", [Shen.type_symbol, "shen.s"]])));})))}, 3, [], "fwhen"];





Shen.fns["call"] = [Shen.type_func, function shen_user_lambda6768(Arg6767) {
  if (Arg6767.length < 3) return [Shen.type_func, shen_user_lambda6768, 3, Arg6767];
  var Arg6767_0 = Arg6767[0], Arg6767_1 = Arg6767[1], Arg6767_2 = Arg6767[2];
  return ((Shen.is_type(Arg6767_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6767_0[1], Arg6767_1])]), Arg6767_0[2], Arg6767_1, Arg6767_2]);})
  : false)}, 3, [], "call"];





Shen.fns["shen.call-help"] = [Shen.type_func, function shen_user_lambda6770(Arg6769) {
  if (Arg6769.length < 4) return [Shen.type_func, shen_user_lambda6770, 4, Arg6769];
  var Arg6769_0 = Arg6769[0], Arg6769_1 = Arg6769[1], Arg6769_2 = Arg6769[2], Arg6769_3 = Arg6769[3];
  return ((Shen.empty$question$(Arg6769_1))
  ? (function() {
  return Shen.call_tail(Arg6769_0, [Arg6769_2, Arg6769_3]);})
  : ((Shen.is_type(Arg6769_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Arg6769_0, [Arg6769_1[1]]), Arg6769_1[2], Arg6769_2, Arg6769_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-help"]]);})))}, 4, [], "shen.call-help"];





Shen.fns["shen.intprolog"] = [Shen.type_func, function shen_user_lambda6772(Arg6771) {
  if (Arg6771.length < 1) return [Shen.type_func, shen_user_lambda6772, 1, Arg6771];
  var Arg6771_0 = Arg6771[0];
  var R0;
  return (((Shen.is_type(Arg6771_0, Shen.type_cons) && Shen.is_type(Arg6771_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help"], [Arg6771_0[1][1], Shen.call(Shen.fns["shen.insert-prolog-variables"], [[Shen.type_cons, Arg6771_0[1][2], [Shen.type_cons, Arg6771_0[2], []]], R0]), R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog"]]);}))}, 1, [], "shen.intprolog"];





Shen.fns["shen.intprolog-help"] = [Shen.type_func, function shen_user_lambda6774(Arg6773) {
  if (Arg6773.length < 3) return [Shen.type_func, shen_user_lambda6774, 3, Arg6773];
  var Arg6773_0 = Arg6773[0], Arg6773_1 = Arg6773[1], Arg6773_2 = Arg6773[2];
  return (((Shen.is_type(Arg6773_1, Shen.type_cons) && (Shen.is_type(Arg6773_1[2], Shen.type_cons) && Shen.empty$question$(Arg6773_1[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Arg6773_0, Arg6773_1[1], Arg6773_1[2][1], Arg6773_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help"]]);}))}, 3, [], "shen.intprolog-help"];





Shen.fns["shen.intprolog-help-help"] = [Shen.type_func, function shen_user_lambda6776(Arg6775) {
  if (Arg6775.length < 4) return [Shen.type_func, shen_user_lambda6776, 4, Arg6775];
  var Arg6775_0 = Arg6775[0], Arg6775_1 = Arg6775[1], Arg6775_2 = Arg6775[2], Arg6775_3 = Arg6775[3];
  return ((Shen.empty$question$(Arg6775_1))
  ? (function() {
  return Shen.call_tail(Arg6775_0, [Arg6775_3, (new Shen.Freeze([Arg6775_0, Arg6775_1, Arg6775_2, Arg6775_3], function(Arg6777) {
  var Arg6777_0 = Arg6777[0], Arg6777_1 = Arg6777[1], Arg6777_2 = Arg6777[2], Arg6777_3 = Arg6777[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6777_2, Arg6777_3]);});})}))]);})
  : ((Shen.is_type(Arg6775_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Shen.call(Arg6775_0, [Arg6775_1[1]]), Arg6775_1[2], Arg6775_2, Arg6775_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.intprolog-help-help"]]);})))}, 4, [], "shen.intprolog-help-help"];





Shen.fns["shen.call-rest"] = [Shen.type_func, function shen_user_lambda6780(Arg6779) {
  if (Arg6779.length < 2) return [Shen.type_func, shen_user_lambda6780, 2, Arg6779];
  var Arg6779_0 = Arg6779[0], Arg6779_1 = Arg6779[1];
  return ((Shen.empty$question$(Arg6779_0))
  ? true
  : (((Shen.is_type(Arg6779_0, Shen.type_cons) && (Shen.is_type(Arg6779_0[1], Shen.type_cons) && Shen.is_type(Arg6779_0[1][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [[Shen.type_cons, [Shen.type_cons, Shen.call(Arg6779_0[1][1], [Arg6779_0[1][2][1]]), Arg6779_0[1][2][2]], Arg6779_0[2]], Arg6779_1]);})
  : (((Shen.is_type(Arg6779_0, Shen.type_cons) && (Shen.is_type(Arg6779_0[1], Shen.type_cons) && Shen.empty$question$(Arg6779_0[1][2]))))
  ? (function() {
  return Shen.call_tail(Arg6779_0[1][1], [Arg6779_1, (new Shen.Freeze([Arg6779_0, Arg6779_1], function(Arg6781) {
  var Arg6781_0 = Arg6781[0], Arg6781_1 = Arg6781[1];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6781_0[2], Arg6781_1]);});})}))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.call-rest"]]);}))))}, 2, [], "shen.call-rest"];





Shen.fns["shen.start-new-prolog-process"] = [Shen.type_func, function shen_user_lambda6784(Arg6783) {
  if (Arg6783.length < 0) return [Shen.type_func, shen_user_lambda6784, 0, Arg6783];
  var R0;
  return ((R0 = (Shen.globals["shen.*process-counter*"] = (1 + (Shen.globals["shen.*process-counter*"])))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise-prolog"], [R0]);}))}, 0, [], "shen.start-new-prolog-process"];





Shen.fns["shen.insert-prolog-variables"] = [Shen.type_func, function shen_user_lambda6786(Arg6785) {
  if (Arg6785.length < 2) return [Shen.type_func, shen_user_lambda6786, 2, Arg6785];
  var Arg6785_0 = Arg6785[0], Arg6785_1 = Arg6785[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6785_0, Shen.call(Shen.fns["shen.flatten"], [Arg6785_0]), Arg6785_1]);})}, 2, [], "shen.insert-prolog-variables"];





Shen.fns["shen.insert-prolog-variables-help"] = [Shen.type_func, function shen_user_lambda6788(Arg6787) {
  if (Arg6787.length < 3) return [Shen.type_func, shen_user_lambda6788, 3, Arg6787];
  var Arg6787_0 = Arg6787[0], Arg6787_1 = Arg6787[1], Arg6787_2 = Arg6787[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6787_1))
  ? Arg6787_0
  : (((Shen.is_type(Arg6787_1, Shen.type_cons) && Shen.call(Shen.fns["variable?"], [Arg6787_1[1]])))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6787_2])),
  (R0 = Shen.call(Shen.fns["subst"], [R0, Arg6787_1[1], Arg6787_0])),
  (R1 = Shen.call(Shen.fns["remove"], [Arg6787_1[1], Arg6787_1[2]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [R0, R1, Arg6787_2]);}))
  : ((Shen.is_type(Arg6787_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6787_0, Arg6787_1[2], Arg6787_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.insert-prolog-variables-help"]]);}))))}, 3, [], "shen.insert-prolog-variables-help"];





Shen.fns["shen.initialise-prolog"] = [Shen.type_func, function shen_user_lambda6790(Arg6789) {
  if (Arg6789.length < 1) return [Shen.type_func, shen_user_lambda6790, 1, Arg6789];
  var Arg6789_0 = Arg6789[0];
  return (Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6789_0, Shen.call(Shen.fns["shen.fillvector"], [Shen.vector(10), 1, 10, [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6789_0, 1),
  Arg6789_0)}, 1, [], "shen.initialise-prolog"];










Shen.fns["shen.f_error"] = [Shen.type_func, function shen_user_lambda7372(Arg7371) {
  if (Arg7371.length < 1) return [Shen.type_func, shen_user_lambda7372, 1, Arg7371];
  var Arg7371_0 = Arg7371[0];
  return (Shen.call(Shen.fns["shen.prhush"], [("partial function " + Shen.call(Shen.fns["shen.app"], [Arg7371_0, ";\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  ((((!Shen.call(Shen.fns["shen.tracked?"], [Arg7371_0])) && Shen.call(Shen.fns["y-or-n?"], [("track " + Shen.call(Shen.fns["shen.app"], [Arg7371_0, "? ", [Shen.type_symbol, "shen.a"]]))])))
  ? Shen.call(Shen.fns["shen.track-function"], [Shen.call(Shen.fns["ps"], [Arg7371_0])])
  : [Shen.type_symbol, "shen.ok"]),
  (function() {
  return Shen.simple_error("aborted");}))}, 1, [], "shen.f_error"];





Shen.fns["shen.tracked?"] = [Shen.type_func, function shen_user_lambda7374(Arg7373) {
  if (Arg7373.length < 1) return [Shen.type_func, shen_user_lambda7374, 1, Arg7373];
  var Arg7373_0 = Arg7373[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg7373_0, (Shen.globals["shen.*tracking*"])]);})}, 1, [], "shen.tracked?"];





Shen.fns["track"] = [Shen.type_func, function shen_user_lambda7376(Arg7375) {
  if (Arg7375.length < 1) return [Shen.type_func, shen_user_lambda7376, 1, Arg7375];
  var Arg7375_0 = Arg7375[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["ps"], [Arg7375_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.track-function"], [R0]);}))}, 1, [], "track"];





Shen.fns["shen.track-function"] = [Shen.type_func, function shen_user_lambda7378(Arg7377) {
  if (Arg7377.length < 1) return [Shen.type_func, shen_user_lambda7378, 1, Arg7377];
  var Arg7377_0 = Arg7377[0];
  var R0;
  return (((Shen.is_type(Arg7377_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7377_0[1])) && (Shen.is_type(Arg7377_0[2], Shen.type_cons) && (Shen.is_type(Arg7377_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7377_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7377_0[2][2][2][2])))))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7377_0[2][1], [Shen.type_cons, Arg7377_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-tracking-code"], [Arg7377_0[2][1], Arg7377_0[2][2][1], Arg7377_0[2][2][2][1]]), []]]]]),
  (R0 = Shen.call(Shen.fns["eval"], [R0])),
  (Shen.globals["shen.*tracking*"] = [Shen.type_cons, R0, (Shen.globals["shen.*tracking*"])]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.track-function"]]);}))}, 1, [], "shen.track-function"];





Shen.fns["shen.insert-tracking-code"] = [Shen.type_func, function shen_user_lambda7380(Arg7379) {
  if (Arg7379.length < 3) return [Shen.type_func, shen_user_lambda7380, 3, Arg7379];
  var Arg7379_0 = Arg7379[0], Arg7379_1 = Arg7379[1], Arg7379_2 = Arg7379[2];
  return [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.input-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg7379_0, [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg7379_1]), []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7379_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.output-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg7379_0, [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]], []]]], []]]]], []]]], []]]], []]]]}, 3, [], "shen.insert-tracking-code"];





Shen.call_toplevel(function shen_toplevel7383(Arg7381) {
  if (Arg7381.length < 0) return [Shen.type_func, shen_toplevel7383, 0, Arg7381];
  return (Shen.globals["shen.*step*"] = false)});




Shen.fns["step"] = [Shen.type_func, function shen_user_lambda7385(Arg7384) {
  if (Arg7384.length < 1) return [Shen.type_func, shen_user_lambda7385, 1, Arg7384];
  var Arg7384_0 = Arg7384[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7384_0)))
  ? (Shen.globals["shen.*step*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7384_0)))
  ? (Shen.globals["shen.*step*"] = false)
  : (function() {
  return Shen.simple_error("step expects a + or a -.\x0a");})))}, 1, [], "step"];





Shen.fns["spy"] = [Shen.type_func, function shen_user_lambda7387(Arg7386) {
  if (Arg7386.length < 1) return [Shen.type_func, shen_user_lambda7387, 1, Arg7386];
  var Arg7386_0 = Arg7386[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7386_0)))
  ? (Shen.globals["shen.*spy*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7386_0)))
  ? (Shen.globals["shen.*spy*"] = false)
  : (function() {
  return Shen.simple_error("spy expects a + or a -.\x0a");})))}, 1, [], "spy"];





Shen.fns["shen.terpri-or-read-char"] = [Shen.type_func, function shen_user_lambda7389(Arg7388) {
  if (Arg7388.length < 0) return [Shen.type_func, shen_user_lambda7389, 0, Arg7388];
  return (((Shen.globals["shen.*step*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check-byte"], [Shen.read_byte((Shen.globals["*stinput*"]))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 0, [], "shen.terpri-or-read-char"];





Shen.fns["shen.check-byte"] = [Shen.type_func, function shen_user_lambda7391(Arg7390) {
  if (Arg7390.length < 1) return [Shen.type_func, shen_user_lambda7391, 1, Arg7390];
  var Arg7390_0 = Arg7390[0];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7390_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("aborted");})
  : true)}, 1, [], "shen.check-byte"];





Shen.fns["shen.input-track"] = [Shen.type_func, function shen_user_lambda7393(Arg7392) {
  if (Arg7392.length < 3) return [Shen.type_func, shen_user_lambda7393, 3, Arg7392];
  var Arg7392_0 = Arg7392[0], Arg7392_1 = Arg7392[1], Arg7392_2 = Arg7392[2];
  return (Shen.call(Shen.fns["shen.prhush"], [("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7392_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg7392_0, ("> Inputs to " + Shen.call(Shen.fns["shen.app"], [Arg7392_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7392_0]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg7392_2]);}))}, 3, [], "shen.input-track"];





Shen.fns["shen.recursively-print"] = [Shen.type_func, function shen_user_lambda7395(Arg7394) {
  if (Arg7394.length < 1) return [Shen.type_func, shen_user_lambda7395, 1, Arg7394];
  var Arg7394_0 = Arg7394[0];
  return ((Shen.empty$question$(Arg7394_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [" ==>", Shen.call(Shen.fns["stoutput"], [])]);})
  : ((Shen.is_type(Arg7394_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["print"], [Arg7394_0[1]]),
  Shen.call(Shen.fns["shen.prhush"], [", ", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg7394_0[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.recursively-print"]]);})))}, 1, [], "shen.recursively-print"];





Shen.fns["shen.spaces"] = [Shen.type_func, function shen_user_lambda7397(Arg7396) {
  if (Arg7396.length < 1) return [Shen.type_func, shen_user_lambda7397, 1, Arg7396];
  var Arg7396_0 = Arg7396[0];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg7396_0)))
  ? ""
  : (" " + Shen.call(Shen.fns["shen.spaces"], [(Arg7396_0 - 1)])))}, 1, [], "shen.spaces"];





Shen.fns["shen.output-track"] = [Shen.type_func, function shen_user_lambda7399(Arg7398) {
  if (Arg7398.length < 3) return [Shen.type_func, shen_user_lambda7399, 3, Arg7398];
  var Arg7398_0 = Arg7398[0], Arg7398_1 = Arg7398[1], Arg7398_2 = Arg7398[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7398_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg7398_0, ("> Output from " + Shen.call(Shen.fns["shen.app"], [Arg7398_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg7398_0]), ("==> " + Shen.call(Shen.fns["shen.app"], [Arg7398_2, "", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})}, 3, [], "shen.output-track"];





Shen.fns["untrack"] = [Shen.type_func, function shen_user_lambda7401(Arg7400) {
  if (Arg7400.length < 1) return [Shen.type_func, shen_user_lambda7401, 1, Arg7400];
  var Arg7400_0 = Arg7400[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["ps"], [Arg7400_0])]);})}, 1, [], "untrack"];





Shen.fns["profile"] = [Shen.type_func, function shen_user_lambda7403(Arg7402) {
  if (Arg7402.length < 1) return [Shen.type_func, shen_user_lambda7403, 1, Arg7402];
  var Arg7402_0 = Arg7402[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.profile-help"], [Shen.call(Shen.fns["ps"], [Arg7402_0])]);})}, 1, [], "profile"];





Shen.fns["shen.profile-help"] = [Shen.type_func, function shen_user_lambda7405(Arg7404) {
  if (Arg7404.length < 1) return [Shen.type_func, shen_user_lambda7405, 1, Arg7404];
  var Arg7404_0 = Arg7404[0];
  var R0, R1;
  return (((Shen.is_type(Arg7404_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg7404_0[1])) && (Shen.is_type(Arg7404_0[2], Shen.type_cons) && (Shen.is_type(Arg7404_0[2][2], Shen.type_cons) && (Shen.is_type(Arg7404_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg7404_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.f"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg7404_0[2][1], [Shen.type_cons, Arg7404_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.profile-func"], [Arg7404_0[2][1], Arg7404_0[2][2][1], [Shen.type_cons, R0, Arg7404_0[2][2][1]]]), []]]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, Arg7404_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["subst"], [R0, Arg7404_0[2][1], Arg7404_0[2][2][2][1]]), []]]]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R1]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R0]),
  Arg7404_0[2][1])
  : (function() {
  return Shen.simple_error("Cannot profile.\x0a");}))}, 1, [], "shen.profile-help"];





Shen.fns["unprofile"] = [Shen.type_func, function shen_user_lambda7407(Arg7406) {
  if (Arg7406.length < 1) return [Shen.type_func, shen_user_lambda7407, 1, Arg7406];
  var Arg7406_0 = Arg7406[0];
  return (function() {
  return Shen.call_tail(Shen.fns["untrack"], [Arg7406_0]);})}, 1, [], "unprofile"];





Shen.fns["shen.profile-func"] = [Shen.type_func, function shen_user_lambda7409(Arg7408) {
  if (Arg7408.length < 3) return [Shen.type_func, shen_user_lambda7409, 3, Arg7408];
  var Arg7408_0 = Arg7408[0], Arg7408_1 = Arg7408[1], Arg7408_2 = Arg7408[2];
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg7408_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Record"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.put-profile"], [Shen.type_cons, Arg7408_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.get-profile"], [Shen.type_cons, Arg7408_0, []]], [Shen.type_cons, [Shen.type_symbol, "Finish"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]]]], []]]]]}, 3, [], "shen.profile-func"];





Shen.fns["profile-results"] = [Shen.type_func, function shen_user_lambda7411(Arg7410) {
  if (Arg7410.length < 1) return [Shen.type_func, shen_user_lambda7411, 1, Arg7410];
  var Arg7410_0 = Arg7410[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.get-profile"], [Arg7410_0])),
  Shen.call(Shen.fns["shen.put-profile"], [Arg7410_0, 0]),
  [Shen.fns['shen.tuple'], Arg7410_0, R0])}, 1, [], "profile-results"];





Shen.fns["shen.get-profile"] = [Shen.type_func, function shen_user_lambda7413(Arg7412) {
  if (Arg7412.length < 1) return [Shen.type_func, shen_user_lambda7413, 1, Arg7412];
  var Arg7412_0 = Arg7412[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg7412_0, [Shen.type_symbol, "profile"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda7415(Arg7414) {
  if (Arg7414.length < 1) return [Shen.type_func, shen_user_lambda7415, 1, Arg7414];
  var Arg7414_0 = Arg7414[0];
  return 0}, 1, [], undefined]);})}, 1, [], "shen.get-profile"];





Shen.fns["shen.put-profile"] = [Shen.type_func, function shen_user_lambda7417(Arg7416) {
  if (Arg7416.length < 2) return [Shen.type_func, shen_user_lambda7417, 2, Arg7416];
  var Arg7416_0 = Arg7416[0], Arg7416_1 = Arg7416[1];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg7416_0, [Shen.type_symbol, "profile"], Arg7416_1, (Shen.globals["*property-vector*"])]);})}, 2, [], "shen.put-profile"];










Shen.call_toplevel(function shen_toplevel6375(Arg6373) {
  if (Arg6373.length < 0) return [Shen.type_func, shen_toplevel6375, 0, Arg6373];
  return (Shen.globals["shen.*installing-kl*"] = false)});




Shen.call_toplevel(function shen_toplevel6378(Arg6376) {
  if (Arg6376.length < 0) return [Shen.type_func, shen_toplevel6378, 0, Arg6376];
  return (Shen.globals["shen.*history*"] = [])});




Shen.call_toplevel(function shen_toplevel6381(Arg6379) {
  if (Arg6379.length < 0) return [Shen.type_func, shen_toplevel6381, 0, Arg6379];
  return (Shen.globals["shen.*tc*"] = false)});




Shen.call_toplevel(function shen_toplevel6384(Arg6382) {
  if (Arg6382.length < 0) return [Shen.type_func, shen_toplevel6384, 0, Arg6382];
  return (Shen.globals["*property-vector*"] = Shen.vector(20000))});




Shen.call_toplevel(function shen_toplevel6387(Arg6385) {
  if (Arg6385.length < 0) return [Shen.type_func, shen_toplevel6387, 0, Arg6385];
  return (Shen.globals["shen.*process-counter*"] = 0)});




Shen.call_toplevel(function shen_toplevel6390(Arg6388) {
  if (Arg6388.length < 0) return [Shen.type_func, shen_toplevel6390, 0, Arg6388];
  return (Shen.globals["shen.*varcounter*"] = Shen.vector(1000))});




Shen.call_toplevel(function shen_toplevel6393(Arg6391) {
  if (Arg6391.length < 0) return [Shen.type_func, shen_toplevel6393, 0, Arg6391];
  return (Shen.globals["shen.*prologvectors*"] = Shen.vector(1000))});




Shen.call_toplevel(function shen_toplevel6396(Arg6394) {
  if (Arg6394.length < 0) return [Shen.type_func, shen_toplevel6396, 0, Arg6394];
  return (Shen.globals["shen.*reader-macros*"] = [])});




Shen.call_toplevel(function shen_toplevel6399(Arg6397) {
  if (Arg6397.length < 0) return [Shen.type_func, shen_toplevel6399, 0, Arg6397];
  return (Shen.globals["*home-directory*"] = [])});




Shen.call_toplevel(function shen_toplevel6402(Arg6400) {
  if (Arg6400.length < 0) return [Shen.type_func, shen_toplevel6402, 0, Arg6400];
  return (Shen.globals["shen.*gensym*"] = 0)});




Shen.call_toplevel(function shen_toplevel6405(Arg6403) {
  if (Arg6403.length < 0) return [Shen.type_func, shen_toplevel6405, 0, Arg6403];
  return (Shen.globals["shen.*tracking*"] = [])});




Shen.call_toplevel(function shen_toplevel6408(Arg6406) {
  if (Arg6406.length < 0) return [Shen.type_func, shen_toplevel6408, 0, Arg6406];
  return (Shen.globals["*home-directory*"] = "")});




Shen.call_toplevel(function shen_toplevel6411(Arg6409) {
  if (Arg6409.length < 0) return [Shen.type_func, shen_toplevel6411, 0, Arg6409];
  return (Shen.globals["shen.*alphabet*"] = [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "C"], [Shen.type_cons, [Shen.type_symbol, "D"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_symbol, "F"], [Shen.type_cons, [Shen.type_symbol, "G"], [Shen.type_cons, [Shen.type_symbol, "H"], [Shen.type_cons, [Shen.type_symbol, "I"], [Shen.type_cons, [Shen.type_symbol, "J"], [Shen.type_cons, [Shen.type_symbol, "K"], [Shen.type_cons, [Shen.type_symbol, "L"], [Shen.type_cons, [Shen.type_symbol, "M"], [Shen.type_cons, [Shen.type_symbol, "N"], [Shen.type_cons, [Shen.type_symbol, "O"], [Shen.type_cons, [Shen.type_symbol, "P"], [Shen.type_cons, [Shen.type_symbol, "Q"], [Shen.type_cons, [Shen.type_symbol, "R"], [Shen.type_cons, [Shen.type_symbol, "S"], [Shen.type_cons, [Shen.type_symbol, "T"], [Shen.type_cons, [Shen.type_symbol, "U"], [Shen.type_cons, [Shen.type_symbol, "V"], [Shen.type_cons, [Shen.type_symbol, "W"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]]]]]]]]]]]]]]]]]]]]]]]]])});




Shen.call_toplevel(function shen_toplevel6414(Arg6412) {
  if (Arg6412.length < 0) return [Shen.type_func, shen_toplevel6414, 0, Arg6412];
  return (Shen.globals["shen.*special*"] = [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]]]]]]]]])});




Shen.call_toplevel(function shen_toplevel6417(Arg6415) {
  if (Arg6415.length < 0) return [Shen.type_func, shen_toplevel6417, 0, Arg6415];
  return (Shen.globals["shen.*extraspecial*"] = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "read+"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], []]]]]]])});




Shen.call_toplevel(function shen_toplevel6420(Arg6418) {
  if (Arg6418.length < 0) return [Shen.type_func, shen_toplevel6420, 0, Arg6418];
  return (Shen.globals["shen.*spy*"] = false)});




Shen.call_toplevel(function shen_toplevel6423(Arg6421) {
  if (Arg6421.length < 0) return [Shen.type_func, shen_toplevel6423, 0, Arg6421];
  return (Shen.globals["shen.*datatypes*"] = [])});




Shen.call_toplevel(function shen_toplevel6426(Arg6424) {
  if (Arg6424.length < 0) return [Shen.type_func, shen_toplevel6426, 0, Arg6424];
  return (Shen.globals["shen.*alldatatypes*"] = [])});




Shen.call_toplevel(function shen_toplevel6429(Arg6427) {
  if (Arg6427.length < 0) return [Shen.type_func, shen_toplevel6429, 0, Arg6427];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)});




Shen.call_toplevel(function shen_toplevel6432(Arg6430) {
  if (Arg6430.length < 0) return [Shen.type_func, shen_toplevel6432, 0, Arg6430];
  return (Shen.globals["shen.*synonyms*"] = [])});




Shen.call_toplevel(function shen_toplevel6435(Arg6433) {
  if (Arg6433.length < 0) return [Shen.type_func, shen_toplevel6435, 0, Arg6433];
  return (Shen.globals["shen.*system*"] = [])});




Shen.call_toplevel(function shen_toplevel6438(Arg6436) {
  if (Arg6436.length < 0) return [Shen.type_func, shen_toplevel6438, 0, Arg6436];
  return (Shen.globals["shen.*signedfuncs*"] = [])});




Shen.call_toplevel(function shen_toplevel6441(Arg6439) {
  if (Arg6439.length < 0) return [Shen.type_func, shen_toplevel6441, 0, Arg6439];
  return (Shen.globals["shen.*maxcomplexity*"] = 128)});




Shen.call_toplevel(function shen_toplevel6444(Arg6442) {
  if (Arg6442.length < 0) return [Shen.type_func, shen_toplevel6444, 0, Arg6442];
  return (Shen.globals["shen.*occurs*"] = true)});




Shen.call_toplevel(function shen_toplevel6447(Arg6445) {
  if (Arg6445.length < 0) return [Shen.type_func, shen_toplevel6447, 0, Arg6445];
  return (Shen.globals["shen.*maxinferences*"] = 1000000)});




Shen.call_toplevel(function shen_toplevel6450(Arg6448) {
  if (Arg6448.length < 0) return [Shen.type_func, shen_toplevel6450, 0, Arg6448];
  return (Shen.globals["*maximum-print-sequence-size*"] = 20)});




Shen.call_toplevel(function shen_toplevel6453(Arg6451) {
  if (Arg6451.length < 0) return [Shen.type_func, shen_toplevel6453, 0, Arg6451];
  return (Shen.globals["shen.*catch*"] = 0)});




Shen.call_toplevel(function shen_toplevel6456(Arg6454) {
  if (Arg6454.length < 0) return [Shen.type_func, shen_toplevel6456, 0, Arg6454];
  return (Shen.globals["shen.*call*"] = 0)});




Shen.call_toplevel(function shen_toplevel6459(Arg6457) {
  if (Arg6457.length < 0) return [Shen.type_func, shen_toplevel6459, 0, Arg6457];
  return (Shen.globals["shen.*infs*"] = 0)});




Shen.call_toplevel(function shen_toplevel6462(Arg6460) {
  if (Arg6460.length < 0) return [Shen.type_func, shen_toplevel6462, 0, Arg6460];
  return (Shen.globals["*hush*"] = false)});




Shen.call_toplevel(function shen_toplevel6465(Arg6463) {
  if (Arg6463.length < 0) return [Shen.type_func, shen_toplevel6465, 0, Arg6463];
  return (Shen.globals["shen.*optimise*"] = false)});




Shen.fns["shen.initialise_arity_table"] = [Shen.type_func, function shen_user_lambda6467(Arg6466) {
  if (Arg6466.length < 1) return [Shen.type_func, shen_user_lambda6467, 1, Arg6466];
  var Arg6466_0 = Arg6466[0];
  return ((Shen.empty$question$(Arg6466_0))
  ? []
  : (((Shen.is_type(Arg6466_0, Shen.type_cons) && Shen.is_type(Arg6466_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["put"], [Arg6466_0[1], [Shen.type_symbol, "arity"], Arg6466_0[2][1], (Shen.globals["*property-vector*"])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [Arg6466_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.initialise_arity_table"]]);})))}, 1, [], "shen.initialise_arity_table"];





Shen.fns["arity"] = [Shen.type_func, function shen_user_lambda6469(Arg6468) {
  if (Arg6468.length < 1) return [Shen.type_func, shen_user_lambda6469, 1, Arg6468];
  var Arg6468_0 = Arg6468[0];
  return (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["get"], [Arg6468_0, [Shen.type_symbol, "arity"], (Shen.globals["*property-vector*"])]);}, [Shen.type_func, function shen_user_lambda6471(Arg6470) {
  if (Arg6470.length < 1) return [Shen.type_func, shen_user_lambda6471, 1, Arg6470];
  var Arg6470_0 = Arg6470[0];
  return -1}, 1, [], undefined]);})}, 1, [], "arity"];





Shen.call_toplevel(function shen_toplevel6474(Arg6472) {
  if (Arg6472.length < 0) return [Shen.type_func, shen_toplevel6474, 0, Arg6472];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [[Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "interror"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, 5, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "kill"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "optimise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "shen.reassemble"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "shen.strong-warning"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "shen.sum"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "write-byte"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, 2, []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})});




Shen.fns["systemf"] = [Shen.type_func, function shen_user_lambda6476(Arg6475) {
  if (Arg6475.length < 1) return [Shen.type_func, shen_user_lambda6476, 1, Arg6475];
  var Arg6475_0 = Arg6475[0];
  var R0, R1;
  return ((R0 = [Shen.type_symbol, "shen"]),
  (R1 = Shen.call(Shen.fns["get"], [R0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [R0, [Shen.type_symbol, "shen.external-symbols"], Shen.call(Shen.fns["adjoin"], [Arg6475_0, R1]), (Shen.globals["*property-vector*"])]);}))}, 1, [], "systemf"];





Shen.fns["adjoin"] = [Shen.type_func, function shen_user_lambda6478(Arg6477) {
  if (Arg6477.length < 2) return [Shen.type_func, shen_user_lambda6478, 2, Arg6477];
  var Arg6477_0 = Arg6477[0], Arg6477_1 = Arg6477[1];
  return ((Shen.call(Shen.fns["element?"], [Arg6477_0, Arg6477_1]))
  ? Arg6477_1
  : [Shen.type_cons, Arg6477_0, Arg6477_1])}, 2, [], "adjoin"];





Shen.call_toplevel(function shen_toplevel6481(Arg6479) {
  if (Arg6479.length < 0) return [Shen.type_func, shen_toplevel6481, 0, Arg6479];
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], [Shen.type_cons, [Shen.type_symbol, "!"], [Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "<--"], [Shen.type_cons, [Shen.type_symbol, "&&"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "*language*"], [Shen.type_cons, [Shen.type_symbol, "*implementation*"], [Shen.type_cons, [Shen.type_symbol, "*stinput*"], [Shen.type_cons, [Shen.type_symbol, "*home-directory*"], [Shen.type_cons, [Shen.type_symbol, "*version*"], [Shen.type_cons, [Shen.type_symbol, "*maximum-print-sequence-size*"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_symbol, "*os*"], [Shen.type_cons, [Shen.type_symbol, "*release*"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "*port*"], [Shen.type_cons, [Shen.type_symbol, "*porters*"], [Shen.type_cons, [Shen.type_symbol, "*hush*"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, [Shen.type_symbol, "=!"], [Shen.type_cons, [Shen.type_symbol, "$"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, Shen.vector(0), [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "write-byte"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "when"], [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "verified"], [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "unit"], [Shen.type_cons, [Shen.type_symbol, "shen.unix"], [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, true, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "time"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "synonyms"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "save"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "run"], [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_symbol, "read+"], [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "quit"], [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "prolog?"], [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "output"], [Shen.type_cons, [Shen.type_symbol, "out"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_symbol, "macro"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_symbol, "make-string"], [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "loaded"], [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "kill"], [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_symbol, "file"], [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, false, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "defprolog"], [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, [Shen.type_symbol, "datatype"], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "cond"], [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "cases"], [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "bar!"], [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "abort"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], (Shen.globals["*property-vector*"])]);})});




Shen.fns["specialise"] = [Shen.type_func, function shen_user_lambda6483(Arg6482) {
  if (Arg6482.length < 1) return [Shen.type_func, shen_user_lambda6483, 1, Arg6482];
  var Arg6482_0 = Arg6482[0];
  return ((Shen.globals["shen.*special*"] = [Shen.type_cons, Arg6482_0, (Shen.globals["shen.*special*"])]),
  Arg6482_0)}, 1, [], "specialise"];





Shen.fns["unspecialise"] = [Shen.type_func, function shen_user_lambda6485(Arg6484) {
  if (Arg6484.length < 1) return [Shen.type_func, shen_user_lambda6485, 1, Arg6484];
  var Arg6484_0 = Arg6484[0];
  return ((Shen.globals["shen.*special*"] = Shen.call(Shen.fns["remove"], [Arg6484_0, (Shen.globals["shen.*special*"])])),
  Arg6484_0)}, 1, [], "unspecialise"];










Shen.fns["load"] = [Shen.type_func, function shen_user_lambda6488(Arg6487) {
  if (Arg6487.length < 1) return [Shen.type_func, shen_user_lambda6488, 1, Arg6487];
  var Arg6487_0 = Arg6487[0];
  var R0, R1, R2;
  return (((R0 = Shen.get_time([Shen.type_symbol, "run"])),
  (R1 = Shen.call(Shen.fns["shen.load-help"], [(Shen.globals["shen.*tc*"]), Shen.call(Shen.fns["read-file"], [Arg6487_0])])),
  (R2 = Shen.get_time([Shen.type_symbol, "run"])),
  (R2 = (R2 - R0)),
  Shen.call(Shen.fns["shen.prhush"], [("\x0arun time: " + (Shen.str(R2) + " secs\x0a")), Shen.call(Shen.fns["stoutput"], [])]),
  R1),
  (((Shen.globals["shen.*tc*"]))
  ? Shen.call(Shen.fns["shen.prhush"], [("\x0atypechecked in " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["inferences"], []), " inferences\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])])
  : [Shen.type_symbol, "shen.skip"]),
  [Shen.type_symbol, "loaded"])}, 1, [], "load"];





Shen.fns["shen.load-help"] = [Shen.type_func, function shen_user_lambda6490(Arg6489) {
  if (Arg6489.length < 2) return [Shen.type_func, shen_user_lambda6490, 2, Arg6489];
  var Arg6489_0 = Arg6489[0], Arg6489_1 = Arg6489[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg6489_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6492(Arg6491) {
  if (Arg6491.length < 1) return [Shen.type_func, shen_user_lambda6492, 1, Arg6491];
  var Arg6491_0 = Arg6491[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6491_0]), "\x0a", [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Arg6489_1]);})
  : ((R0 = Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.remove-synonyms"], Arg6489_1])),
  (R1 = Shen.call(Shen.fns["mapcan"], [[Shen.type_symbol, "shen.typetable"], R0])),
  Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.assumetype"], R1]),
  (function() {
  return Shen.trap_error(function() {return Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.typecheck-and-load"], R0]);}, [Shen.type_func, function shen_user_lambda6494(Arg6493) {
  if (Arg6493.length < 2) return [Shen.type_func, shen_user_lambda6494, 2, Arg6493];
  var Arg6493_0 = Arg6493[0], Arg6493_1 = Arg6493[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6493_1, Arg6493_0]);})}, 2, [R1], undefined]);})))}, 2, [], "shen.load-help"];





Shen.fns["shen.remove-synonyms"] = [Shen.type_func, function shen_user_lambda6496(Arg6495) {
  if (Arg6495.length < 1) return [Shen.type_func, shen_user_lambda6496, 1, Arg6495];
  var Arg6495_0 = Arg6495[0];
  return (((Shen.is_type(Arg6495_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], Arg6495_0[1]))))
  ? (Shen.call(Shen.fns["eval"], [Arg6495_0]),
  [])
  : [Shen.type_cons, Arg6495_0, []])}, 1, [], "shen.remove-synonyms"];





Shen.fns["shen.typecheck-and-load"] = [Shen.type_func, function shen_user_lambda6498(Arg6497) {
  if (Arg6497.length < 1) return [Shen.type_func, shen_user_lambda6498, 1, Arg6497];
  var Arg6497_0 = Arg6497[0];
  return (Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg6497_0, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);}))}, 1, [], "shen.typecheck-and-load"];





Shen.fns["shen.typetable"] = [Shen.type_func, function shen_user_lambda6500(Arg6499) {
  if (Arg6499.length < 1) return [Shen.type_func, shen_user_lambda6500, 1, Arg6499];
  var Arg6499_0 = Arg6499[0];
  var R0;
  return (((Shen.is_type(Arg6499_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg6499_0[1])) && Shen.is_type(Arg6499_0[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<sig+rest>"], Arg6499_0[2][2], []])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6499_0[2][1], " lacks a proper signature.\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [Shen.type_cons, [Shen.type_cons, Arg6499_0[2][1], R0], []]))
  : (((Shen.is_type(Arg6499_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6499_0[1])) && (Shen.is_type(Arg6499_0[2], Shen.type_cons) && (Shen.is_type(Arg6499_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg6499_0[2][2][1])) && (Shen.is_type(Arg6499_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6499_0[2][2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6499_0[2][2][2][1][1])) && (Shen.is_type(Arg6499_0[2][2][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg6499_0[2][2][2][1][2][2]) && (Shen.is_type(Arg6499_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], Arg6499_0[2][2][2][2][1])) && (Shen.is_type(Arg6499_0[2][2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6499_0[2][2][2][2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], Arg6499_0[2][2][2][2][2][2][1])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6499_0[2][1], [Shen.type_cons, Arg6499_0[2][2][2][1], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6499_0[2][2][2][2][2][1], []]]]], []]
  : (((Shen.is_type(Arg6499_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6499_0[1])) && Shen.is_type(Arg6499_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6499_0[2][1], " lacks a proper signature.\x0a", [Shen.type_symbol, "shen.a"]]));})
  : [])))}, 1, [], "shen.typetable"];





Shen.fns["shen.assumetype"] = [Shen.type_func, function shen_user_lambda6502(Arg6501) {
  if (Arg6501.length < 1) return [Shen.type_func, shen_user_lambda6502, 1, Arg6501];
  var Arg6501_0 = Arg6501[0];
  return ((Shen.is_type(Arg6501_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg6501_0[1], Arg6501_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.assumetype"]]);}))}, 1, [], "shen.assumetype"];





Shen.fns["shen.unwind-types"] = [Shen.type_func, function shen_user_lambda6504(Arg6503) {
  if (Arg6503.length < 2) return [Shen.type_func, shen_user_lambda6504, 2, Arg6503];
  var Arg6503_0 = Arg6503[0], Arg6503_1 = Arg6503[1];
  return ((Shen.empty$question$(Arg6503_1))
  ? (function() {
  return Shen.simple_error(Shen.error_to_string(Arg6503_0));})
  : (((Shen.is_type(Arg6503_1, Shen.type_cons) && Shen.is_type(Arg6503_1[1], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.remtype"], [Arg6503_1[1][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6503_0, Arg6503_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.unwind-types"]]);})))}, 2, [], "shen.unwind-types"];





Shen.fns["shen.remtype"] = [Shen.type_func, function shen_user_lambda6506(Arg6505) {
  if (Arg6505.length < 1) return [Shen.type_func, shen_user_lambda6506, 1, Arg6505];
  var Arg6505_0 = Arg6505[0];
  return (Shen.globals["shen.*signedfuncs*"] = Shen.call(Shen.fns["shen.removetype"], [Arg6505_0, (Shen.globals["shen.*signedfuncs*"])]))}, 1, [], "shen.remtype"];





Shen.fns["shen.removetype"] = [Shen.type_func, function shen_user_lambda6508(Arg6507) {
  if (Arg6507.length < 2) return [Shen.type_func, shen_user_lambda6508, 2, Arg6507];
  var Arg6507_0 = Arg6507[0], Arg6507_1 = Arg6507[1];
  return ((Shen.empty$question$(Arg6507_1))
  ? []
  : (((Shen.is_type(Arg6507_1, Shen.type_cons) && (Shen.is_type(Arg6507_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6507_1[1][1], Arg6507_0)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.removetype"], [Arg6507_1[1][1], Arg6507_1[2]]);})
  : ((Shen.is_type(Arg6507_1, Shen.type_cons))
  ? [Shen.type_cons, Arg6507_1[1], Shen.call(Shen.fns["shen.removetype"], [Arg6507_0, Arg6507_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.removetype"]]);}))))}, 2, [], "shen.removetype"];





Shen.fns["shen.<sig+rest>"] = [Shen.type_func, function shen_user_lambda6510(Arg6509) {
  if (Arg6509.length < 1) return [Shen.type_func, shen_user_lambda6510, 1, Arg6509];
  var Arg6509_0 = Arg6509[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg6509_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["<!>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rest>"];





Shen.fns["write-to-file"] = [Shen.type_func, function shen_user_lambda6512(Arg6511) {
  if (Arg6511.length < 2) return [Shen.type_func, shen_user_lambda6512, 2, Arg6511];
  var Arg6511_0 = Arg6511[0], Arg6511_1 = Arg6511[1];
  var R0, R1;
  return ((R0 = [Shen.type_func, Shen.fns["open"][1], 2, [[Shen.type_symbol, "file"], Arg6511_0, [Shen.type_symbol, "out"]], undefined]),
  (((typeof(Arg6511_1) == 'string'))
  ? (R1 = Shen.call(Shen.fns["shen.app"], [Arg6511_1, "\x0a\x0a", [Shen.type_symbol, "shen.a"]]))
  : (R1 = Shen.call(Shen.fns["shen.app"], [Arg6511_1, "\x0a\x0a", [Shen.type_symbol, "shen.s"]]))),
  Shen.call(Shen.fns["pr"], [R1, R0]),
  Shen.close(R0),
  Arg6511_1)}, 2, [], "write-to-file"];










Shen.fns["macroexpand"] = [Shen.type_func, function shen_user_lambda6515(Arg6514) {
  if (Arg6514.length < 1) return [Shen.type_func, shen_user_lambda6515, 1, Arg6514];
  var Arg6514_0 = Arg6514[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compose"], [(Shen.globals["*macros*"]), Arg6514_0])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6514_0, R0)))
  ? Arg6514_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda6517(Arg6516) {
  if (Arg6516.length < 1) return [Shen.type_func, shen_user_lambda6517, 1, Arg6516];
  var Arg6516_0 = Arg6516[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg6516_0]);})}, 1, [], undefined], R0]);})))}, 1, [], "macroexpand"];





Shen.call_toplevel(function shen_toplevel6520(Arg6518) {
  if (Arg6518.length < 0) return [Shen.type_func, shen_toplevel6520, 0, Arg6518];
  return (Shen.globals["*macros*"] = [Shen.type_cons, [Shen.type_symbol, "shen.timer-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.cases-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.abs-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.put/get-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.compile-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.let-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.assoc-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.make-string-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.output-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.input-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.error-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.prolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.nl-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.@s-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.defprolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.function-macro"], []]]]]]]]]]]]]]]]]]])});




Shen.fns["shen.error-macro"] = [Shen.type_func, function shen_user_lambda6522(Arg6521) {
  if (Arg6521.length < 1) return [Shen.type_func, shen_user_lambda6522, 1, Arg6521];
  var Arg6521_0 = Arg6521[0];
  return (((Shen.is_type(Arg6521_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "error"], Arg6521_0[1])) && Shen.is_type(Arg6521_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6521_0[2][1], Arg6521_0[2][2]]), []]]
  : Arg6521_0)}, 1, [], "shen.error-macro"];





Shen.fns["shen.output-macro"] = [Shen.type_func, function shen_user_lambda6524(Arg6523) {
  if (Arg6523.length < 1) return [Shen.type_func, shen_user_lambda6524, 1, Arg6523];
  var Arg6523_0 = Arg6523[0];
  return (((Shen.is_type(Arg6523_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "output"], Arg6523_0[1])) && Shen.is_type(Arg6523_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.prhush"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6523_0[2][1], Arg6523_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]]
  : (((Shen.is_type(Arg6523_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pr"], Arg6523_0[1])) && (Shen.is_type(Arg6523_0[2], Shen.type_cons) && Shen.empty$question$(Arg6523_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, Arg6523_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]]
  : Arg6523_0))}, 1, [], "shen.output-macro"];





Shen.fns["shen.make-string-macro"] = [Shen.type_func, function shen_user_lambda6526(Arg6525) {
  if (Arg6525.length < 1) return [Shen.type_func, shen_user_lambda6526, 1, Arg6525];
  var Arg6525_0 = Arg6525[0];
  return (((Shen.is_type(Arg6525_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "make-string"], Arg6525_0[1])) && Shen.is_type(Arg6525_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr"], [Arg6525_0[2][1], Arg6525_0[2][2]]);})
  : Arg6525_0)}, 1, [], "shen.make-string-macro"];





Shen.fns["shen.input-macro"] = [Shen.type_func, function shen_user_lambda6528(Arg6527) {
  if (Arg6527.length < 1) return [Shen.type_func, shen_user_lambda6528, 1, Arg6527];
  var Arg6527_0 = Arg6527[0];
  return (((Shen.is_type(Arg6527_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lineread"], Arg6527_0[1])) && Shen.empty$question$(Arg6527_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : (((Shen.is_type(Arg6527_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input"], Arg6527_0[1])) && Shen.empty$question$(Arg6527_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : (((Shen.is_type(Arg6527_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read"], Arg6527_0[1])) && Shen.empty$question$(Arg6527_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : (((Shen.is_type(Arg6527_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg6527_0[1])) && (Shen.is_type(Arg6527_0[2], Shen.type_cons) && Shen.empty$question$(Arg6527_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Arg6527_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]]
  : (((Shen.is_type(Arg6527_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read+"], Arg6527_0[1])) && (Shen.is_type(Arg6527_0[2], Shen.type_cons) && Shen.empty$question$(Arg6527_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "read+"], [Shen.type_cons, Arg6527_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]]
  : Arg6527_0)))))}, 1, [], "shen.input-macro"];





Shen.fns["shen.compose"] = [Shen.type_func, function shen_user_lambda6530(Arg6529) {
  if (Arg6529.length < 2) return [Shen.type_func, shen_user_lambda6530, 2, Arg6529];
  var Arg6529_0 = Arg6529[0], Arg6529_1 = Arg6529[1];
  return ((Shen.empty$question$(Arg6529_0))
  ? Arg6529_1
  : ((Shen.is_type(Arg6529_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.compose"], [Arg6529_0[2], Shen.call(Arg6529_0[1], [Arg6529_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.compose"]]);})))}, 2, [], "shen.compose"];





Shen.fns["shen.compile-macro"] = [Shen.type_func, function shen_user_lambda6532(Arg6531) {
  if (Arg6531.length < 1) return [Shen.type_func, shen_user_lambda6532, 1, Arg6531];
  var Arg6531_0 = Arg6531[0];
  return (((Shen.is_type(Arg6531_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "compile"], Arg6531_0[1])) && (Shen.is_type(Arg6531_0[2], Shen.type_cons) && (Shen.is_type(Arg6531_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6531_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, Arg6531_0[2][1], [Shen.type_cons, Arg6531_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "E"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error here: ~S~%", [Shen.type_cons, [Shen.type_symbol, "E"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error~%", []]], []]]]], []]]], []]]]]
  : Arg6531_0)}, 1, [], "shen.compile-macro"];





Shen.fns["shen.prolog-macro"] = [Shen.type_func, function shen_user_lambda6534(Arg6533) {
  if (Arg6533.length < 1) return [Shen.type_func, shen_user_lambda6534, 1, Arg6533];
  var Arg6533_0 = Arg6533[0];
  return (((Shen.is_type(Arg6533_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "prolog?"], Arg6533_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.intprolog"], [Shen.type_cons, Shen.call(Shen.fns["shen.prolog-form"], [Arg6533_0[2]]), []]]
  : Arg6533_0)}, 1, [], "shen.prolog-macro"];





Shen.fns["shen.defprolog-macro"] = [Shen.type_func, function shen_user_lambda6536(Arg6535) {
  if (Arg6535.length < 1) return [Shen.type_func, shen_user_lambda6536, 1, Arg6535];
  var Arg6535_0 = Arg6535[0];
  return (((Shen.is_type(Arg6535_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defprolog"], Arg6535_0[1])) && Shen.is_type(Arg6535_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_symbol, "shen.<defprolog>"], Arg6535_0[2], [Shen.type_func, function shen_user_lambda6538(Arg6537) {
  if (Arg6537.length < 2) return [Shen.type_func, shen_user_lambda6538, 2, Arg6537];
  var Arg6537_0 = Arg6537[0], Arg6537_1 = Arg6537[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-error"], [Arg6537_0[2][1], Arg6537_1]);})}, 2, [Arg6535_0], undefined]]);})
  : Arg6535_0)}, 1, [], "shen.defprolog-macro"];





Shen.fns["shen.prolog-form"] = [Shen.type_func, function shen_user_lambda6540(Arg6539) {
  if (Arg6539.length < 1) return [Shen.type_func, shen_user_lambda6540, 1, Arg6539];
  var Arg6539_0 = Arg6539[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.cons_form"], Arg6539_0])]);})}, 1, [], "shen.prolog-form"];





Shen.fns["shen.datatype-macro"] = [Shen.type_func, function shen_user_lambda6542(Arg6541) {
  if (Arg6541.length < 1) return [Shen.type_func, shen_user_lambda6542, 1, Arg6541];
  var Arg6541_0 = Arg6541[0];
  return (((Shen.is_type(Arg6541_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "datatype"], Arg6541_0[1])) && Shen.is_type(Arg6541_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, Shen.call(Shen.fns["shen.intern-type"], [Arg6541_0[2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.<datatype-rules>"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6541_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-error"], []]], []]]]], []]]]
  : Arg6541_0)}, 1, [], "shen.datatype-macro"];





Shen.fns["shen.intern-type"] = [Shen.type_func, function shen_user_lambda6544(Arg6543) {
  if (Arg6543.length < 1) return [Shen.type_func, shen_user_lambda6544, 1, Arg6543];
  var Arg6543_0 = Arg6543[0];
  return (function() {
  return Shen.intern(("type#" + Shen.str(Arg6543_0)));})}, 1, [], "shen.intern-type"];










Shen.fns["shen.@s-macro"] = [Shen.type_func, function shen_user_lambda6547(Arg6546) {
  if (Arg6546.length < 1) return [Shen.type_func, shen_user_lambda6547, 1, Arg6546];
  var Arg6546_0 = Arg6546[0];
  var R0;
  return (((Shen.is_type(Arg6546_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6546_0[1])) && (Shen.is_type(Arg6546_0[2], Shen.type_cons) && (Shen.is_type(Arg6546_0[2][2], Shen.type_cons) && Shen.is_type(Arg6546_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Arg6546_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Arg6546_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6546_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6546_0[1])) && (Shen.is_type(Arg6546_0[2], Shen.type_cons) && (Shen.is_type(Arg6546_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6546_0[2][2][2]) && (typeof(Arg6546_0[2][1]) == 'string')))))))
  ? ((R0 = Shen.call(Shen.fns["explode"], [Arg6546_0[2][1]])),
  (((Shen.call(Shen.fns["length"], [R0]) > 1))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Shen.call(Shen.fns["append"], [R0, Arg6546_0[2][2]])]]);})
  : Arg6546_0))
  : Arg6546_0))}, 1, [], "shen.@s-macro"];





Shen.fns["shen.synonyms-macro"] = [Shen.type_func, function shen_user_lambda6549(Arg6548) {
  if (Arg6548.length < 1) return [Shen.type_func, shen_user_lambda6549, 1, Arg6548];
  var Arg6548_0 = Arg6548[0];
  return (((Shen.is_type(Arg6548_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "synonyms"], Arg6548_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-help"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6548_0[2]]), []]]
  : Arg6548_0)}, 1, [], "shen.synonyms-macro"];





Shen.fns["shen.nl-macro"] = [Shen.type_func, function shen_user_lambda6551(Arg6550) {
  if (Arg6550.length < 1) return [Shen.type_func, shen_user_lambda6551, 1, Arg6550];
  var Arg6550_0 = Arg6550[0];
  return (((Shen.is_type(Arg6550_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "nl"], Arg6550_0[1])) && Shen.empty$question$(Arg6550_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, 1, []]]
  : Arg6550_0)}, 1, [], "shen.nl-macro"];





Shen.fns["shen.assoc-macro"] = [Shen.type_func, function shen_user_lambda6553(Arg6552) {
  if (Arg6552.length < 1) return [Shen.type_func, shen_user_lambda6553, 1, Arg6552];
  var Arg6552_0 = Arg6552[0];
  return (((Shen.is_type(Arg6552_0, Shen.type_cons) && (Shen.is_type(Arg6552_0[2], Shen.type_cons) && (Shen.is_type(Arg6552_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6552_0[2][2][2], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6552_0[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "do"], []]]]]]]]]]))))))
  ? [Shen.type_cons, Arg6552_0[1], [Shen.type_cons, Arg6552_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assoc-macro"], [[Shen.type_cons, Arg6552_0[1], Arg6552_0[2][2]]]), []]]]
  : Arg6552_0)}, 1, [], "shen.assoc-macro"];





Shen.fns["shen.let-macro"] = [Shen.type_func, function shen_user_lambda6555(Arg6554) {
  if (Arg6554.length < 1) return [Shen.type_func, shen_user_lambda6555, 1, Arg6554];
  var Arg6554_0 = Arg6554[0];
  return (((Shen.is_type(Arg6554_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6554_0[1])) && (Shen.is_type(Arg6554_0[2], Shen.type_cons) && (Shen.is_type(Arg6554_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6554_0[2][2][2], Shen.type_cons) && Shen.is_type(Arg6554_0[2][2][2][2], Shen.type_cons)))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6554_0[2][1], [Shen.type_cons, Arg6554_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], Arg6554_0[2][2][2]]]), []]]]]
  : Arg6554_0)}, 1, [], "shen.let-macro"];





Shen.fns["shen.abs-macro"] = [Shen.type_func, function shen_user_lambda6557(Arg6556) {
  if (Arg6556.length < 1) return [Shen.type_func, shen_user_lambda6557, 1, Arg6556];
  var Arg6556_0 = Arg6556[0];
  return (((Shen.is_type(Arg6556_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6556_0[1])) && (Shen.is_type(Arg6556_0[2], Shen.type_cons) && (Shen.is_type(Arg6556_0[2][2], Shen.type_cons) && Shen.is_type(Arg6556_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg6556_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.abs-macro"], [[Shen.type_cons, [Shen.type_symbol, "/."], Arg6556_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6556_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6556_0[1])) && (Shen.is_type(Arg6556_0[2], Shen.type_cons) && (Shen.is_type(Arg6556_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6556_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], Arg6556_0[2]]
  : Arg6556_0))}, 1, [], "shen.abs-macro"];





Shen.fns["shen.cases-macro"] = [Shen.type_func, function shen_user_lambda6559(Arg6558) {
  if (Arg6558.length < 1) return [Shen.type_func, shen_user_lambda6559, 1, Arg6558];
  var Arg6558_0 = Arg6558[0];
  return (((Shen.is_type(Arg6558_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6558_0[1])) && (Shen.is_type(Arg6558_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6558_0[2][1])) && Shen.is_type(Arg6558_0[2][2], Shen.type_cons))))))
  ? Arg6558_0[2][2][1]
  : (((Shen.is_type(Arg6558_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6558_0[1])) && (Shen.is_type(Arg6558_0[2], Shen.type_cons) && (Shen.is_type(Arg6558_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6558_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6558_0[2][1], [Shen.type_cons, Arg6558_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, "error: cases exhausted", []]], []]]]]
  : (((Shen.is_type(Arg6558_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6558_0[1])) && (Shen.is_type(Arg6558_0[2], Shen.type_cons) && Shen.is_type(Arg6558_0[2][2], Shen.type_cons)))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6558_0[2][1], [Shen.type_cons, Arg6558_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.cases-macro"], [[Shen.type_cons, [Shen.type_symbol, "cases"], Arg6558_0[2][2][2]]]), []]]]]
  : (((Shen.is_type(Arg6558_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6558_0[1])) && (Shen.is_type(Arg6558_0[2], Shen.type_cons) && Shen.empty$question$(Arg6558_0[2][2])))))
  ? (function() {
  return Shen.simple_error("error: odd number of case elements\x0a");})
  : Arg6558_0))))}, 1, [], "shen.cases-macro"];





Shen.fns["shen.timer-macro"] = [Shen.type_func, function shen_user_lambda6561(Arg6560) {
  if (Arg6560.length < 1) return [Shen.type_func, shen_user_lambda6561, 1, Arg6560];
  var Arg6560_0 = Arg6560[0];
  return (((Shen.is_type(Arg6560_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "time"], Arg6560_0[1])) && (Shen.is_type(Arg6560_0[2], Shen.type_cons) && Shen.empty$question$(Arg6560_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6560_0[2][1], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Time"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_symbol, "Message"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.prhush"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, "\x0arun time: ", [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "Time"], []]], [Shen.type_cons, " secs\x0a", []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]]]]]]]]]]]);})
  : Arg6560_0)}, 1, [], "shen.timer-macro"];





Shen.fns["shen.tuple-up"] = [Shen.type_func, function shen_user_lambda6563(Arg6562) {
  if (Arg6562.length < 1) return [Shen.type_func, shen_user_lambda6563, 1, Arg6562];
  var Arg6562_0 = Arg6562[0];
  return ((Shen.is_type(Arg6562_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Arg6562_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.tuple-up"], [Arg6562_0[2]]), []]]]
  : Arg6562_0)}, 1, [], "shen.tuple-up"];





Shen.fns["shen.put/get-macro"] = [Shen.type_func, function shen_user_lambda6565(Arg6564) {
  if (Arg6564.length < 1) return [Shen.type_func, shen_user_lambda6565, 1, Arg6564];
  var Arg6564_0 = Arg6564[0];
  return (((Shen.is_type(Arg6564_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "put"], Arg6564_0[1])) && (Shen.is_type(Arg6564_0[2], Shen.type_cons) && (Shen.is_type(Arg6564_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6564_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6564_0[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, Arg6564_0[2][1], [Shen.type_cons, Arg6564_0[2][2][1], [Shen.type_cons, Arg6564_0[2][2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]]
  : (((Shen.is_type(Arg6564_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "get"], Arg6564_0[1])) && (Shen.is_type(Arg6564_0[2], Shen.type_cons) && (Shen.is_type(Arg6564_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6564_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, Arg6564_0[2][1], [Shen.type_cons, Arg6564_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]
  : Arg6564_0))}, 1, [], "shen.put/get-macro"];





Shen.fns["shen.function-macro"] = [Shen.type_func, function shen_user_lambda6567(Arg6566) {
  if (Arg6566.length < 1) return [Shen.type_func, shen_user_lambda6567, 1, Arg6566];
  var Arg6566_0 = Arg6566[0];
  return (((Shen.is_type(Arg6566_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg6566_0[1])) && (Shen.is_type(Arg6566_0[2], Shen.type_cons) && Shen.empty$question$(Arg6566_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction"], [Arg6566_0[2][1], Shen.call(Shen.fns["arity"], [Arg6566_0[2][1]])]);})
  : Arg6566_0)}, 1, [], "shen.function-macro"];





Shen.fns["shen.function-abstraction"] = [Shen.type_func, function shen_user_lambda6569(Arg6568) {
  if (Arg6568.length < 2) return [Shen.type_func, shen_user_lambda6569, 2, Arg6568];
  var Arg6568_0 = Arg6568[0], Arg6568_1 = Arg6568[1];
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6568_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Arg6568_0, []]]
  : ((Shen.unwind_tail(Shen.$eq$(-1, Arg6568_1)))
  ? Arg6568_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction-help"], [Arg6568_0, Arg6568_1, []]);})))}, 2, [], "shen.function-abstraction"];





Shen.fns["shen.function-abstraction-help"] = [Shen.type_func, function shen_user_lambda6571(Arg6570) {
  if (Arg6570.length < 3) return [Shen.type_func, shen_user_lambda6571, 3, Arg6570];
  var Arg6570_0 = Arg6570[0], Arg6570_1 = Arg6570[1], Arg6570_2 = Arg6570[2];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6570_1)))
  ? [Shen.type_cons, Arg6570_0, Arg6570_2]
  : ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["shen.function-abstraction-help"], [Arg6570_0, (Arg6570_1 - 1), Shen.call(Shen.fns["append"], [Arg6570_2, [Shen.type_cons, R0, []]])]), []]]]))}, 3, [], "shen.function-abstraction-help"];





Shen.fns["undefmacro"] = [Shen.type_func, function shen_user_lambda6573(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6573, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  return ((Shen.globals["*macros*"] = Shen.call(Shen.fns["remove"], [Arg6572_0, (Shen.globals["*macros*"])])),
  Arg6572_0)}, 1, [], "undefmacro"];










Shen.fns["declare"] = [Shen.type_func, function shen_user_lambda7420(Arg7419) {
  if (Arg7419.length < 2) return [Shen.type_func, shen_user_lambda7420, 2, Arg7419];
  var Arg7419_0 = Arg7419[0], Arg7419_1 = Arg7419[1];
  var R0, R1, R2;
  return ((Shen.globals["shen.*signedfuncs*"] = [Shen.type_cons, [Shen.type_cons, Arg7419_0, Arg7419_1], (Shen.globals["shen.*signedfuncs*"])]),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen.variancy-test"], [Arg7419_0, Arg7419_1]);}, [Shen.type_func, function shen_user_lambda7422(Arg7421) {
  if (Arg7421.length < 1) return [Shen.type_func, shen_user_lambda7422, 1, Arg7421];
  var Arg7421_0 = Arg7421[0];
  return [Shen.type_symbol, "shen.skip"]}, 1, [], undefined]),
  (R0 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.demodulate"], [Arg7419_1])])),
  (R1 = Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg7419_0])),
  (R2 = Shen.call(Shen.fns["shen.parameters"], [1])),
  (R0 = [Shen.type_cons, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "X"], []]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, R0, []]]], []], []]]]),
  (R0 = Shen.call(Shen.fns["shen.aum"], [R0, R2])),
  (R0 = Shen.call(Shen.fns["shen.aum_to_shen"], [R0])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, R1, Shen.call(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R2]),
  Arg7419_0)}, 2, [], "declare"];





Shen.fns["shen.demodulate"] = [Shen.type_func, function shen_user_lambda7424(Arg7423) {
  if (Arg7423.length < 1) return [Shen.type_func, shen_user_lambda7424, 1, Arg7423];
  var Arg7423_0 = Arg7423[0];
  return (function() {
  return Shen.call_tail(Shen.fns["fix"], [[Shen.type_symbol, "shen.demodh"], Arg7423_0]);})}, 1, [], "shen.demodulate"];





Shen.fns["shen.demodh"] = [Shen.type_func, function shen_user_lambda7426(Arg7425) {
  if (Arg7425.length < 1) return [Shen.type_func, shen_user_lambda7426, 1, Arg7425];
  var Arg7425_0 = Arg7425[0];
  return ((Shen.is_type(Arg7425_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.demodh"], Arg7425_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.demod-atom"], [Arg7425_0]);}))}, 1, [], "shen.demodh"];





Shen.fns["shen.demod-atom"] = [Shen.type_func, function shen_user_lambda7428(Arg7427) {
  if (Arg7427.length < 1) return [Shen.type_func, shen_user_lambda7428, 1, Arg7427];
  var Arg7427_0 = Arg7427[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["assoc"], [Arg7427_0, (Shen.globals["shen.*synonyms*"])])),
  ((Shen.empty$question$(R0))
  ? Arg7427_0
  : R0[2]))}, 1, [], "shen.demod-atom"];





Shen.fns["shen.variancy-test"] = [Shen.type_func, function shen_user_lambda7430(Arg7429) {
  if (Arg7429.length < 2) return [Shen.type_func, shen_user_lambda7430, 2, Arg7429];
  var Arg7429_0 = Arg7429[0], Arg7429_1 = Arg7429[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg7429_0, [Shen.type_symbol, "B"]])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.call(Shen.fns["shen.variant?"], [R0, Arg7429_1]))
  ? [Shen.type_symbol, "shen.skip"]
  : Shen.call(Shen.fns["shen.prhush"], [("warning: changing the type of " + Shen.call(Shen.fns["shen.app"], [Arg7429_0, " may create errors\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]))),
  [Shen.type_symbol, "shen.skip"])}, 2, [], "shen.variancy-test"];





Shen.fns["shen.variant?"] = [Shen.type_func, function shen_user_lambda7432(Arg7431) {
  if (Arg7431.length < 2) return [Shen.type_func, shen_user_lambda7432, 2, Arg7431];
  var Arg7431_0 = Arg7431[0], Arg7431_1 = Arg7431[1];
  return ((Shen.unwind_tail(Shen.$eq$(Arg7431_1, Arg7431_0)))
  ? true
  : (((Shen.is_type(Arg7431_0, Shen.type_cons) && (Shen.is_type(Arg7431_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7431_1[1], Arg7431_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Arg7431_0[2], Arg7431_1[2]]);})
  : (((Shen.is_type(Arg7431_0, Shen.type_cons) && (Shen.is_type(Arg7431_1, Shen.type_cons) && (Shen.call(Shen.fns["shen.pvar?"], [Arg7431_0[1]]) && Shen.call(Shen.fns["variable?"], [Arg7431_1[1]])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg7431_0[1], Arg7431_0[2]]), Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg7431_1[1], Arg7431_1[2]])]);})
  : (((Shen.is_type(Arg7431_0, Shen.type_cons) && (Shen.is_type(Arg7431_0[1], Shen.type_cons) && (Shen.is_type(Arg7431_1, Shen.type_cons) && Shen.is_type(Arg7431_1[1], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["append"], [Arg7431_0[1], Arg7431_0[2]]), Shen.call(Shen.fns["append"], [Arg7431_1[1], Arg7431_1[2]])]);})
  : false))))}, 2, [], "shen.variant?"];





Shen.call_toplevel(function shen_toplevel7435(Arg7433) {
  if (Arg7433.length < 0) return [Shen.type_func, shen_toplevel7435, 0, Arg7433];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7438(Arg7436) {
  if (Arg7436.length < 0) return [Shen.type_func, shen_toplevel7438, 0, Arg7436];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7441(Arg7439) {
  if (Arg7439.length < 0) return [Shen.type_func, shen_toplevel7441, 0, Arg7439];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7444(Arg7442) {
  if (Arg7442.length < 0) return [Shen.type_func, shen_toplevel7444, 0, Arg7442];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.app"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7447(Arg7445) {
  if (Arg7445.length < 0) return [Shen.type_func, shen_toplevel7447, 0, Arg7445];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7450(Arg7448) {
  if (Arg7448.length < 0) return [Shen.type_func, shen_toplevel7450, 0, Arg7448];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7453(Arg7451) {
  if (Arg7451.length < 0) return [Shen.type_func, shen_toplevel7453, 0, Arg7451];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7456(Arg7454) {
  if (Arg7454.length < 0) return [Shen.type_func, shen_toplevel7456, 0, Arg7454];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7459(Arg7457) {
  if (Arg7457.length < 0) return [Shen.type_func, shen_toplevel7459, 0, Arg7457];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7462(Arg7460) {
  if (Arg7460.length < 0) return [Shen.type_func, shen_toplevel7462, 0, Arg7460];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7465(Arg7463) {
  if (Arg7463.length < 0) return [Shen.type_func, shen_toplevel7465, 0, Arg7463];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7468(Arg7466) {
  if (Arg7466.length < 0) return [Shen.type_func, shen_toplevel7468, 0, Arg7466];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7471(Arg7469) {
  if (Arg7469.length < 0) return [Shen.type_func, shen_toplevel7471, 0, Arg7469];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7474(Arg7472) {
  if (Arg7472.length < 0) return [Shen.type_func, shen_toplevel7474, 0, Arg7472];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7477(Arg7475) {
  if (Arg7475.length < 0) return [Shen.type_func, shen_toplevel7477, 0, Arg7475];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7480(Arg7478) {
  if (Arg7478.length < 0) return [Shen.type_func, shen_toplevel7480, 0, Arg7478];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7483(Arg7481) {
  if (Arg7481.length < 0) return [Shen.type_func, shen_toplevel7483, 0, Arg7481];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7486(Arg7484) {
  if (Arg7484.length < 0) return [Shen.type_func, shen_toplevel7486, 0, Arg7484];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7489(Arg7487) {
  if (Arg7487.length < 0) return [Shen.type_func, shen_toplevel7489, 0, Arg7487];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<!>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7492(Arg7490) {
  if (Arg7490.length < 0) return [Shen.type_func, shen_toplevel7492, 0, Arg7490];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7495(Arg7493) {
  if (Arg7493.length < 0) return [Shen.type_func, shen_toplevel7495, 0, Arg7493];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7498(Arg7496) {
  if (Arg7496.length < 0) return [Shen.type_func, shen_toplevel7498, 0, Arg7496];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7501(Arg7499) {
  if (Arg7499.length < 0) return [Shen.type_func, shen_toplevel7501, 0, Arg7499];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7504(Arg7502) {
  if (Arg7502.length < 0) return [Shen.type_func, shen_toplevel7504, 0, Arg7502];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7507(Arg7505) {
  if (Arg7505.length < 0) return [Shen.type_func, shen_toplevel7507, 0, Arg7505];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "string"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7510(Arg7508) {
  if (Arg7508.length < 0) return [Shen.type_func, shen_toplevel7510, 0, Arg7508];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7513(Arg7511) {
  if (Arg7511.length < 0) return [Shen.type_func, shen_toplevel7513, 0, Arg7511];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7516(Arg7514) {
  if (Arg7514.length < 0) return [Shen.type_func, shen_toplevel7516, 0, Arg7514];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7519(Arg7517) {
  if (Arg7517.length < 0) return [Shen.type_func, shen_toplevel7519, 0, Arg7517];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7522(Arg7520) {
  if (Arg7520.length < 0) return [Shen.type_func, shen_toplevel7522, 0, Arg7520];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7525(Arg7523) {
  if (Arg7523.length < 0) return [Shen.type_func, shen_toplevel7525, 0, Arg7523];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7528(Arg7526) {
  if (Arg7526.length < 0) return [Shen.type_func, shen_toplevel7528, 0, Arg7526];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7531(Arg7529) {
  if (Arg7529.length < 0) return [Shen.type_func, shen_toplevel7531, 0, Arg7529];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7534(Arg7532) {
  if (Arg7532.length < 0) return [Shen.type_func, shen_toplevel7534, 0, Arg7532];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7537(Arg7535) {
  if (Arg7535.length < 0) return [Shen.type_func, shen_toplevel7537, 0, Arg7535];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7540(Arg7538) {
  if (Arg7538.length < 0) return [Shen.type_func, shen_toplevel7540, 0, Arg7538];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7543(Arg7541) {
  if (Arg7541.length < 0) return [Shen.type_func, shen_toplevel7543, 0, Arg7541];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7546(Arg7544) {
  if (Arg7544.length < 0) return [Shen.type_func, shen_toplevel7546, 0, Arg7544];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7549(Arg7547) {
  if (Arg7547.length < 0) return [Shen.type_func, shen_toplevel7549, 0, Arg7547];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7552(Arg7550) {
  if (Arg7550.length < 0) return [Shen.type_func, shen_toplevel7552, 0, Arg7550];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7555(Arg7553) {
  if (Arg7553.length < 0) return [Shen.type_func, shen_toplevel7555, 0, Arg7553];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7558(Arg7556) {
  if (Arg7556.length < 0) return [Shen.type_func, shen_toplevel7558, 0, Arg7556];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]);})});




Shen.call_toplevel(function shen_toplevel7561(Arg7559) {
  if (Arg7559.length < 0) return [Shen.type_func, shen_toplevel7561, 0, Arg7559];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.insert"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7564(Arg7562) {
  if (Arg7562.length < 0) return [Shen.type_func, shen_toplevel7564, 0, Arg7562];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7567(Arg7565) {
  if (Arg7565.length < 0) return [Shen.type_func, shen_toplevel7567, 0, Arg7565];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7570(Arg7568) {
  if (Arg7568.length < 0) return [Shen.type_func, shen_toplevel7570, 0, Arg7568];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "kill"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]);})});




Shen.call_toplevel(function shen_toplevel7573(Arg7571) {
  if (Arg7571.length < 0) return [Shen.type_func, shen_toplevel7573, 0, Arg7571];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7576(Arg7574) {
  if (Arg7574.length < 0) return [Shen.type_func, shen_toplevel7576, 0, Arg7574];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7579(Arg7577) {
  if (Arg7577.length < 0) return [Shen.type_func, shen_toplevel7579, 0, Arg7577];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7582(Arg7580) {
  if (Arg7580.length < 0) return [Shen.type_func, shen_toplevel7582, 0, Arg7580];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7585(Arg7583) {
  if (Arg7583.length < 0) return [Shen.type_func, shen_toplevel7585, 0, Arg7583];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7588(Arg7586) {
  if (Arg7586.length < 0) return [Shen.type_func, shen_toplevel7588, 0, Arg7586];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7591(Arg7589) {
  if (Arg7589.length < 0) return [Shen.type_func, shen_toplevel7591, 0, Arg7589];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7594(Arg7592) {
  if (Arg7592.length < 0) return [Shen.type_func, shen_toplevel7594, 0, Arg7592];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7597(Arg7595) {
  if (Arg7595.length < 0) return [Shen.type_func, shen_toplevel7597, 0, Arg7595];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7600(Arg7598) {
  if (Arg7598.length < 0) return [Shen.type_func, shen_toplevel7600, 0, Arg7598];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7603(Arg7601) {
  if (Arg7601.length < 0) return [Shen.type_func, shen_toplevel7603, 0, Arg7601];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7606(Arg7604) {
  if (Arg7604.length < 0) return [Shen.type_func, shen_toplevel7606, 0, Arg7604];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7609(Arg7607) {
  if (Arg7607.length < 0) return [Shen.type_func, shen_toplevel7609, 0, Arg7607];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7612(Arg7610) {
  if (Arg7610.length < 0) return [Shen.type_func, shen_toplevel7612, 0, Arg7610];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "optimise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7615(Arg7613) {
  if (Arg7613.length < 0) return [Shen.type_func, shen_toplevel7615, 0, Arg7613];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7618(Arg7616) {
  if (Arg7616.length < 0) return [Shen.type_func, shen_toplevel7618, 0, Arg7616];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7621(Arg7619) {
  if (Arg7619.length < 0) return [Shen.type_func, shen_toplevel7621, 0, Arg7619];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7624(Arg7622) {
  if (Arg7622.length < 0) return [Shen.type_func, shen_toplevel7624, 0, Arg7622];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7627(Arg7625) {
  if (Arg7625.length < 0) return [Shen.type_func, shen_toplevel7627, 0, Arg7625];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7630(Arg7628) {
  if (Arg7628.length < 0) return [Shen.type_func, shen_toplevel7630, 0, Arg7628];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7633(Arg7631) {
  if (Arg7631.length < 0) return [Shen.type_func, shen_toplevel7633, 0, Arg7631];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7636(Arg7634) {
  if (Arg7634.length < 0) return [Shen.type_func, shen_toplevel7636, 0, Arg7634];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7639(Arg7637) {
  if (Arg7637.length < 0) return [Shen.type_func, shen_toplevel7639, 0, Arg7637];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7642(Arg7640) {
  if (Arg7640.length < 0) return [Shen.type_func, shen_toplevel7642, 0, Arg7640];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7645(Arg7643) {
  if (Arg7643.length < 0) return [Shen.type_func, shen_toplevel7645, 0, Arg7643];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.prhush"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7648(Arg7646) {
  if (Arg7646.length < 0) return [Shen.type_func, shen_toplevel7648, 0, Arg7646];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7651(Arg7649) {
  if (Arg7649.length < 0) return [Shen.type_func, shen_toplevel7651, 0, Arg7649];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7654(Arg7652) {
  if (Arg7652.length < 0) return [Shen.type_func, shen_toplevel7654, 0, Arg7652];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7657(Arg7655) {
  if (Arg7655.length < 0) return [Shen.type_func, shen_toplevel7657, 0, Arg7655];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7660(Arg7658) {
  if (Arg7658.length < 0) return [Shen.type_func, shen_toplevel7660, 0, Arg7658];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7663(Arg7661) {
  if (Arg7661.length < 0) return [Shen.type_func, shen_toplevel7663, 0, Arg7661];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7666(Arg7664) {
  if (Arg7664.length < 0) return [Shen.type_func, shen_toplevel7666, 0, Arg7664];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7669(Arg7667) {
  if (Arg7667.length < 0) return [Shen.type_func, shen_toplevel7669, 0, Arg7667];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7672(Arg7670) {
  if (Arg7670.length < 0) return [Shen.type_func, shen_toplevel7672, 0, Arg7670];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7675(Arg7673) {
  if (Arg7673.length < 0) return [Shen.type_func, shen_toplevel7675, 0, Arg7673];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7678(Arg7676) {
  if (Arg7676.length < 0) return [Shen.type_func, shen_toplevel7678, 0, Arg7676];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7681(Arg7679) {
  if (Arg7679.length < 0) return [Shen.type_func, shen_toplevel7681, 0, Arg7679];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7684(Arg7682) {
  if (Arg7682.length < 0) return [Shen.type_func, shen_toplevel7684, 0, Arg7682];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7687(Arg7685) {
  if (Arg7685.length < 0) return [Shen.type_func, shen_toplevel7687, 0, Arg7685];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], []]]]);})});




Shen.call_toplevel(function shen_toplevel7690(Arg7688) {
  if (Arg7688.length < 0) return [Shen.type_func, shen_toplevel7690, 0, Arg7688];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], []]]]);})});




Shen.call_toplevel(function shen_toplevel7693(Arg7691) {
  if (Arg7691.length < 0) return [Shen.type_func, shen_toplevel7693, 0, Arg7691];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7696(Arg7694) {
  if (Arg7694.length < 0) return [Shen.type_func, shen_toplevel7696, 0, Arg7694];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7699(Arg7697) {
  if (Arg7697.length < 0) return [Shen.type_func, shen_toplevel7699, 0, Arg7697];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7702(Arg7700) {
  if (Arg7700.length < 0) return [Shen.type_func, shen_toplevel7702, 0, Arg7700];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7705(Arg7703) {
  if (Arg7703.length < 0) return [Shen.type_func, shen_toplevel7705, 0, Arg7703];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.sum"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7708(Arg7706) {
  if (Arg7706.length < 0) return [Shen.type_func, shen_toplevel7708, 0, Arg7706];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7711(Arg7709) {
  if (Arg7709.length < 0) return [Shen.type_func, shen_toplevel7711, 0, Arg7709];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7714(Arg7712) {
  if (Arg7712.length < 0) return [Shen.type_func, shen_toplevel7714, 0, Arg7712];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7717(Arg7715) {
  if (Arg7715.length < 0) return [Shen.type_func, shen_toplevel7717, 0, Arg7715];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7720(Arg7718) {
  if (Arg7718.length < 0) return [Shen.type_func, shen_toplevel7720, 0, Arg7718];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7723(Arg7721) {
  if (Arg7721.length < 0) return [Shen.type_func, shen_toplevel7723, 0, Arg7721];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7726(Arg7724) {
  if (Arg7724.length < 0) return [Shen.type_func, shen_toplevel7726, 0, Arg7724];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]);})});




Shen.call_toplevel(function shen_toplevel7729(Arg7727) {
  if (Arg7727.length < 0) return [Shen.type_func, shen_toplevel7729, 0, Arg7727];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7732(Arg7730) {
  if (Arg7730.length < 0) return [Shen.type_func, shen_toplevel7732, 0, Arg7730];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7735(Arg7733) {
  if (Arg7733.length < 0) return [Shen.type_func, shen_toplevel7735, 0, Arg7733];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7738(Arg7736) {
  if (Arg7736.length < 0) return [Shen.type_func, shen_toplevel7738, 0, Arg7736];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "shen.truncate"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7741(Arg7739) {
  if (Arg7739.length < 0) return [Shen.type_func, shen_toplevel7741, 0, Arg7739];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "tuple?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7744(Arg7742) {
  if (Arg7742.length < 0) return [Shen.type_func, shen_toplevel7744, 0, Arg7742];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7747(Arg7745) {
  if (Arg7745.length < 0) return [Shen.type_func, shen_toplevel7747, 0, Arg7745];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7750(Arg7748) {
  if (Arg7748.length < 0) return [Shen.type_func, shen_toplevel7750, 0, Arg7748];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7753(Arg7751) {
  if (Arg7751.length < 0) return [Shen.type_func, shen_toplevel7753, 0, Arg7751];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7756(Arg7754) {
  if (Arg7754.length < 0) return [Shen.type_func, shen_toplevel7756, 0, Arg7754];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7759(Arg7757) {
  if (Arg7757.length < 0) return [Shen.type_func, shen_toplevel7759, 0, Arg7757];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7762(Arg7760) {
  if (Arg7760.length < 0) return [Shen.type_func, shen_toplevel7762, 0, Arg7760];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7765(Arg7763) {
  if (Arg7763.length < 0) return [Shen.type_func, shen_toplevel7765, 0, Arg7763];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7768(Arg7766) {
  if (Arg7766.length < 0) return [Shen.type_func, shen_toplevel7768, 0, Arg7766];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7771(Arg7769) {
  if (Arg7769.length < 0) return [Shen.type_func, shen_toplevel7771, 0, Arg7769];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "write-byte"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7774(Arg7772) {
  if (Arg7772.length < 0) return [Shen.type_func, shen_toplevel7774, 0, Arg7772];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7777(Arg7775) {
  if (Arg7775.length < 0) return [Shen.type_func, shen_toplevel7777, 0, Arg7775];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7780(Arg7778) {
  if (Arg7778.length < 0) return [Shen.type_func, shen_toplevel7780, 0, Arg7778];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7783(Arg7781) {
  if (Arg7781.length < 0) return [Shen.type_func, shen_toplevel7783, 0, Arg7781];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7786(Arg7784) {
  if (Arg7784.length < 0) return [Shen.type_func, shen_toplevel7786, 0, Arg7784];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7789(Arg7787) {
  if (Arg7787.length < 0) return [Shen.type_func, shen_toplevel7789, 0, Arg7787];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7792(Arg7790) {
  if (Arg7790.length < 0) return [Shen.type_func, shen_toplevel7792, 0, Arg7790];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7795(Arg7793) {
  if (Arg7793.length < 0) return [Shen.type_func, shen_toplevel7795, 0, Arg7793];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7798(Arg7796) {
  if (Arg7796.length < 0) return [Shen.type_func, shen_toplevel7798, 0, Arg7796];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7801(Arg7799) {
  if (Arg7799.length < 0) return [Shen.type_func, shen_toplevel7801, 0, Arg7799];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]);})});




Shen.call_toplevel(function shen_toplevel7804(Arg7802) {
  if (Arg7802.length < 0) return [Shen.type_func, shen_toplevel7804, 0, Arg7802];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);})});









Shen.fns["shen.typecheck"] = [Shen.type_func, function shen_user_lambda5720(Arg5719) {
  if (Arg5719.length < 2) return [Shen.type_func, shen_user_lambda5720, 2, Arg5719];
  var Arg5719_0 = Arg5719[0], Arg5719_1 = Arg5719[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.curry"], [Arg5719_0])),
  (R1 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (R2 = Shen.call(Shen.fns["shen.insert-prolog-variables"], [Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Arg5719_1])]), R1])),
  (R3 = (new Shen.Freeze([R0, R2, R1], function(Arg5721) {
  var Arg5721_0 = Arg5721[0], Arg5721_1 = Arg5721[1], Arg5721_2 = Arg5721[2];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["return"], [Arg5721_1, Arg5721_2, [Shen.type_symbol, "shen.void"]]);});})}))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R2, []]]], [], R1, R3]);}))}, 2, [], "shen.typecheck"];





Shen.fns["shen.curry"] = [Shen.type_func, function shen_user_lambda5724(Arg5723) {
  if (Arg5723.length < 1) return [Shen.type_func, shen_user_lambda5724, 1, Arg5723];
  var Arg5723_0 = Arg5723[0];
  return (((Shen.is_type(Arg5723_0, Shen.type_cons) && Shen.call(Shen.fns["shen.special?"], [Arg5723_0[1]])))
  ? [Shen.type_cons, Arg5723_0[1], Shen.call(Shen.fns["map"], [[Shen.type_symbol, "shen.curry"], Arg5723_0[2]])]
  : (((Shen.is_type(Arg5723_0, Shen.type_cons) && (Shen.is_type(Arg5723_0[2], Shen.type_cons) && Shen.call(Shen.fns["shen.extraspecial?"], [Arg5723_0[1]]))))
  ? Arg5723_0
  : (((Shen.is_type(Arg5723_0, Shen.type_cons) && (Shen.is_type(Arg5723_0[2], Shen.type_cons) && Shen.is_type(Arg5723_0[2][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry"], [[Shen.type_cons, [Shen.type_cons, Arg5723_0[1], [Shen.type_cons, Arg5723_0[2][1], []]], Arg5723_0[2][2]]]);})
  : (((Shen.is_type(Arg5723_0, Shen.type_cons) && (Shen.is_type(Arg5723_0[2], Shen.type_cons) && Shen.empty$question$(Arg5723_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg5723_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg5723_0[2][1]]), []]]
  : Arg5723_0))))}, 1, [], "shen.curry"];





Shen.fns["shen.special?"] = [Shen.type_func, function shen_user_lambda5726(Arg5725) {
  if (Arg5725.length < 1) return [Shen.type_func, shen_user_lambda5726, 1, Arg5725];
  var Arg5725_0 = Arg5725[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5725_0, (Shen.globals["shen.*special*"])]);})}, 1, [], "shen.special?"];





Shen.fns["shen.extraspecial?"] = [Shen.type_func, function shen_user_lambda5728(Arg5727) {
  if (Arg5727.length < 1) return [Shen.type_func, shen_user_lambda5728, 1, Arg5727];
  var Arg5727_0 = Arg5727[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5727_0, (Shen.globals["shen.*extraspecial*"])]);})}, 1, [], "shen.extraspecial?"];





Shen.fns["shen.t*"] = [Shen.type_func, function shen_user_lambda5730(Arg5729) {
  if (Arg5729.length < 4) return [Shen.type_func, shen_user_lambda5730, 4, Arg5729];
  var Arg5729_0 = Arg5729[0], Arg5729_1 = Arg5729[1], Arg5729_2 = Arg5729[2], Arg5729_3 = Arg5729[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5729_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.maxinfexceeded?"], []), Arg5729_2, (new Shen.Freeze([R1, Arg5729_2, Arg5729_3, R0, Arg5729_0, Arg5729_1, Arg5729_2, Arg5729_3], function(Arg5731) {
  var Arg5731_0 = Arg5731[0], Arg5731_1 = Arg5731[1], Arg5731_2 = Arg5731[2], Arg5731_3 = Arg5731[3], Arg5731_4 = Arg5731[4], Arg5731_5 = Arg5731[5], Arg5731_6 = Arg5731[6], Arg5731_7 = Arg5731[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5731_0, Shen.call(Shen.fns["shen.errormaxinfs"], []), Arg5731_1, Arg5731_2]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5729_0, Arg5729_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5729_2, (new Shen.Freeze([R0, Arg5729_0, Arg5729_1, Arg5729_2, Arg5729_3], function(Arg5733) {
  var Arg5733_0 = Arg5733[0], Arg5733_1 = Arg5733[1], Arg5733_2 = Arg5733[2], Arg5733_3 = Arg5733[3], Arg5733_4 = Arg5733[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-failure"], [Arg5733_3, Arg5733_4]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5729_0, Arg5729_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5729_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5729_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5729_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5729_2])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.type-theory-enabled?"], []), Arg5729_2, (new Shen.Freeze([R0, R2, R1, Arg5729_0, Arg5729_1, Arg5729_2, Arg5729_3], function(Arg5735) {
  var Arg5735_0 = Arg5735[0], Arg5735_1 = Arg5735[1], Arg5735_2 = Arg5735[2], Arg5735_3 = Arg5735[3], Arg5735_4 = Arg5735[4], Arg5735_5 = Arg5735[5], Arg5735_6 = Arg5735[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5735_0, Arg5735_5, (new Shen.Freeze([Arg5735_0, Arg5735_1, Arg5735_2, Arg5735_4, Arg5735_5, Arg5735_6], function(Arg5737) {
  var Arg5737_0 = Arg5737[0], Arg5737_1 = Arg5737[1], Arg5737_2 = Arg5737[2], Arg5737_3 = Arg5737[3], Arg5737_4 = Arg5737[4], Arg5737_5 = Arg5737[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5737_1, Arg5737_2, Arg5737_3, Arg5737_4, Arg5737_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5729_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.show"], [Arg5729_0, Arg5729_1, Arg5729_2, (new Shen.Freeze([Arg5729_0, Arg5729_1, R1, Arg5729_2, Arg5729_3], function(Arg5739) {
  var Arg5739_0 = Arg5739[0], Arg5739_1 = Arg5739[1], Arg5739_2 = Arg5739[2], Arg5739_3 = Arg5739[3], Arg5739_4 = Arg5739[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5739_2, (Shen.globals["shen.*datatypes*"]), Arg5739_3, (new Shen.Freeze([Arg5739_0, Arg5739_1, Arg5739_2, Arg5739_3, Arg5739_4], function(Arg5741) {
  var Arg5741_0 = Arg5741[0], Arg5741_1 = Arg5741[1], Arg5741_2 = Arg5741[2], Arg5741_3 = Arg5741[3], Arg5741_4 = Arg5741[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg5741_0, Arg5741_1, Arg5741_2, Arg5741_3, Arg5741_4]);});})}))]);});})}))]))
  : R1))
  : R1))
  : R1))]);}))}, 4, [], "shen.t*"];





Shen.fns["shen.type-theory-enabled?"] = [Shen.type_func, function shen_user_lambda5744(Arg5743) {
  if (Arg5743.length < 0) return [Shen.type_func, shen_user_lambda5744, 0, Arg5743];
  return (Shen.globals["shen.*shen-type-theory-enabled?*"])}, 0, [], "shen.type-theory-enabled?"];





Shen.fns["enable-type-theory"] = [Shen.type_func, function shen_user_lambda5746(Arg5745) {
  if (Arg5745.length < 1) return [Shen.type_func, shen_user_lambda5746, 1, Arg5745];
  var Arg5745_0 = Arg5745[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5745_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5745_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = false)
  : (function() {
  return Shen.simple_error("enable-type-theory expects a + or a -\x0a");})))}, 1, [], "enable-type-theory"];





Shen.fns["shen.prolog-failure"] = [Shen.type_func, function shen_user_lambda5748(Arg5747) {
  if (Arg5747.length < 2) return [Shen.type_func, shen_user_lambda5748, 2, Arg5747];
  var Arg5747_0 = Arg5747[0], Arg5747_1 = Arg5747[1];
  return false}, 2, [], "shen.prolog-failure"];





Shen.fns["shen.maxinfexceeded?"] = [Shen.type_func, function shen_user_lambda5750(Arg5749) {
  if (Arg5749.length < 0) return [Shen.type_func, shen_user_lambda5750, 0, Arg5749];
  return (Shen.call(Shen.fns["inferences"], []) > (Shen.globals["shen.*maxinferences*"]))}, 0, [], "shen.maxinfexceeded?"];





Shen.fns["shen.errormaxinfs"] = [Shen.type_func, function shen_user_lambda5752(Arg5751) {
  if (Arg5751.length < 0) return [Shen.type_func, shen_user_lambda5752, 0, Arg5751];
  return (function() {
  return Shen.simple_error("maximum inferences exceeded~%");})}, 0, [], "shen.errormaxinfs"];





Shen.fns["shen.udefs*"] = [Shen.type_func, function shen_user_lambda5754(Arg5753) {
  if (Arg5753.length < 5) return [Shen.type_func, shen_user_lambda5754, 5, Arg5753];
  var Arg5753_0 = Arg5753[0], Arg5753_1 = Arg5753[1], Arg5753_2 = Arg5753[2], Arg5753_3 = Arg5753[3], Arg5753_4 = Arg5753[4];
  var R0;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5753_2, Arg5753_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[1]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [[Shen.type_cons, R0, [Shen.type_cons, Arg5753_0, [Shen.type_cons, Arg5753_1, []]]], Arg5753_3, Arg5753_4])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5753_2, Arg5753_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg5753_0, Arg5753_1, R0, Arg5753_3, Arg5753_4]);}))
  : false))
  : R0))}, 5, [], "shen.udefs*"];





Shen.fns["shen.th*"] = [Shen.type_func, function shen_user_lambda5756(Arg5755) {
  if (Arg5755.length < 5) return [Shen.type_func, shen_user_lambda5756, 5, Arg5755];
  var Arg5755_0 = Arg5755[0], Arg5755_1 = Arg5755[1], Arg5755_2 = Arg5755[2], Arg5755_3 = Arg5755[3], Arg5755_4 = Arg5755[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.show"], [[Shen.type_cons, Arg5755_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5755_1, []]]], Arg5755_2, Arg5755_3, (new Shen.Freeze([R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5757) {
  var Arg5757_0 = Arg5757[0], Arg5757_1 = Arg5757[1], Arg5757_2 = Arg5757[2], Arg5757_3 = Arg5757[3], Arg5757_4 = Arg5757[4], Arg5757_5 = Arg5757[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg5757_4, Arg5757_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.typedf?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])]), Arg5755_3, (new Shen.Freeze([Arg5755_0, R1, Arg5755_1, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5759) {
  var Arg5759_0 = Arg5759[0], Arg5759_1 = Arg5759[1], Arg5759_2 = Arg5759[2], Arg5759_3 = Arg5759[3], Arg5759_4 = Arg5759[4], Arg5759_5 = Arg5759[5], Arg5759_6 = Arg5759[6], Arg5759_7 = Arg5759[7], Arg5759_8 = Arg5759[8], Arg5759_9 = Arg5759[9], Arg5759_10 = Arg5759[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5759_1, Shen.call(Shen.fns["shen.sigf"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5759_0, Arg5759_3])]), Arg5759_3, (new Shen.Freeze([Arg5759_0, Arg5759_1, Arg5759_2, Arg5759_3, Arg5759_4], function(Arg5761) {
  var Arg5761_0 = Arg5761[0], Arg5761_1 = Arg5761[1], Arg5761_2 = Arg5761[2], Arg5761_3 = Arg5761[3], Arg5761_4 = Arg5761[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["call"], [[Shen.type_cons, Arg5761_1, [Shen.type_cons, Arg5761_2, []]], Arg5761_3, Arg5761_4]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.base"], [Arg5755_0, Arg5755_1, Arg5755_3, Arg5755_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.by_hypothesis"], [Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5755_1, []]], Arg5755_2, Arg5755_3, Arg5755_4])))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5755_1, []]]], Arg5755_2, Arg5755_3, (new Shen.Freeze([R2, Arg5755_1, R3, R1, Arg5755_2, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5763) {
  var Arg5763_0 = Arg5763[0], Arg5763_1 = Arg5763[1], Arg5763_2 = Arg5763[2], Arg5763_3 = Arg5763[3], Arg5763_4 = Arg5763[4], Arg5763_5 = Arg5763[5], Arg5763_6 = Arg5763[6], Arg5763_7 = Arg5763[7], Arg5763_8 = Arg5763[8], Arg5763_9 = Arg5763[9], Arg5763_10 = Arg5763[10], Arg5763_11 = Arg5763[11], Arg5763_12 = Arg5763[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5763_2, Arg5763_3, Arg5763_4, Arg5763_5, Arg5763_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5755_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5765) {
  var Arg5765_0 = Arg5765[0], Arg5765_1 = Arg5765[1], Arg5765_2 = Arg5765[2], Arg5765_3 = Arg5765[3], Arg5765_4 = Arg5765[4], Arg5765_5 = Arg5765[5], Arg5765_6 = Arg5765[6], Arg5765_7 = Arg5765[7], Arg5765_8 = Arg5765[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5765_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5765_2, []]], Arg5765_6, Arg5765_7, Arg5765_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5767) {
  var Arg5767_0 = Arg5767[0], Arg5767_1 = Arg5767[1], Arg5767_2 = Arg5767[2], Arg5767_3 = Arg5767[3], Arg5767_4 = Arg5767[4], Arg5767_5 = Arg5767[5], Arg5767_6 = Arg5767[6], Arg5767_7 = Arg5767[7], Arg5767_8 = Arg5767[8], Arg5767_9 = Arg5767[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5767_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5767_2, []]], Arg5767_7, Arg5767_8, Arg5767_9]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R2, Arg5755_2, Arg5755_4, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5769) {
  var Arg5769_0 = Arg5769[0], Arg5769_1 = Arg5769[1], Arg5769_2 = Arg5769[2], Arg5769_3 = Arg5769[3], Arg5769_4 = Arg5769[4], Arg5769_5 = Arg5769[5], Arg5769_6 = Arg5769[6], Arg5769_7 = Arg5769[7], Arg5769_8 = Arg5769[8], Arg5769_9 = Arg5769[9], Arg5769_10 = Arg5769[10], Arg5769_11 = Arg5769[11], Arg5769_12 = Arg5769[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5769_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5769_2, []]], Arg5769_3, Arg5769_6, Arg5769_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "list"], Arg5755_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R5, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5771) {
  var Arg5771_0 = Arg5771[0], Arg5771_1 = Arg5771[1], Arg5771_2 = Arg5771[2], Arg5771_3 = Arg5771[3], Arg5771_4 = Arg5771[4], Arg5771_5 = Arg5771[5], Arg5771_6 = Arg5771[6], Arg5771_7 = Arg5771[7], Arg5771_8 = Arg5771[8], Arg5771_9 = Arg5771[9], Arg5771_10 = Arg5771[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5771_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5771_2, []]], Arg5771_8, Arg5771_4, Arg5771_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5773) {
  var Arg5773_0 = Arg5773[0], Arg5773_1 = Arg5773[1], Arg5773_2 = Arg5773[2], Arg5773_3 = Arg5773[3], Arg5773_4 = Arg5773[4], Arg5773_5 = Arg5773[5], Arg5773_6 = Arg5773[6], Arg5773_7 = Arg5773[7], Arg5773_8 = Arg5773[8], Arg5773_9 = Arg5773[9], Arg5773_10 = Arg5773[10], Arg5773_11 = Arg5773[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5773_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5773_2, []]], Arg5773_9, Arg5773_5, Arg5773_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R5, Arg5755_2, Arg5755_4, R2, Arg5755_3, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5775) {
  var Arg5775_0 = Arg5775[0], Arg5775_1 = Arg5775[1], Arg5775_2 = Arg5775[2], Arg5775_3 = Arg5775[3], Arg5775_4 = Arg5775[4], Arg5775_5 = Arg5775[5], Arg5775_6 = Arg5775[6], Arg5775_7 = Arg5775[7], Arg5775_8 = Arg5775[8], Arg5775_9 = Arg5775[9], Arg5775_10 = Arg5775[10], Arg5775_11 = Arg5775[11], Arg5775_12 = Arg5775[12], Arg5775_13 = Arg5775[13], Arg5775_14 = Arg5775[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5775_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5775_2, []]], Arg5775_3, Arg5775_6, Arg5775_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R4, []]], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R4, Arg5755_2, Arg5755_4, R2, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5777) {
  var Arg5777_0 = Arg5777[0], Arg5777_1 = Arg5777[1], Arg5777_2 = Arg5777[2], Arg5777_3 = Arg5777[3], Arg5777_4 = Arg5777[4], Arg5777_5 = Arg5777[5], Arg5777_6 = Arg5777[6], Arg5777_7 = Arg5777[7], Arg5777_8 = Arg5777[8], Arg5777_9 = Arg5777[9], Arg5777_10 = Arg5777[10], Arg5777_11 = Arg5777[11], Arg5777_12 = Arg5777[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5777_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg5777_2, []]], Arg5777_3, Arg5777_6, Arg5777_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5755_3])),
  ((Shen.empty$question$(R5))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R4, R3, R2, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5779) {
  var Arg5779_0 = Arg5779[0], Arg5779_1 = Arg5779[1], Arg5779_2 = Arg5779[2], Arg5779_3 = Arg5779[3], Arg5779_4 = Arg5779[4], Arg5779_5 = Arg5779[5], Arg5779_6 = Arg5779[6], Arg5779_7 = Arg5779[7], Arg5779_8 = Arg5779[8], Arg5779_9 = Arg5779[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5779_2, Arg5779_3, Arg5779_7, Arg5779_8, Arg5779_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R4, R3, R2, R5, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5781) {
  var Arg5781_0 = Arg5781[0], Arg5781_1 = Arg5781[1], Arg5781_2 = Arg5781[2], Arg5781_3 = Arg5781[3], Arg5781_4 = Arg5781[4], Arg5781_5 = Arg5781[5], Arg5781_6 = Arg5781[6], Arg5781_7 = Arg5781[7], Arg5781_8 = Arg5781[8], Arg5781_9 = Arg5781[9], Arg5781_10 = Arg5781[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5781_2, Arg5781_3, Arg5781_8, Arg5781_9, Arg5781_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5755_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R4, R3, R2, Arg5755_2, Arg5755_4, R5, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5783) {
  var Arg5783_0 = Arg5783[0], Arg5783_1 = Arg5783[1], Arg5783_2 = Arg5783[2], Arg5783_3 = Arg5783[3], Arg5783_4 = Arg5783[4], Arg5783_5 = Arg5783[5], Arg5783_6 = Arg5783[6], Arg5783_7 = Arg5783[7], Arg5783_8 = Arg5783[8], Arg5783_9 = Arg5783[9], Arg5783_10 = Arg5783[10], Arg5783_11 = Arg5783[11], Arg5783_12 = Arg5783[12], Arg5783_13 = Arg5783[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5783_2, Arg5783_3, Arg5783_4, Arg5783_7, Arg5783_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5755_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "*"], Arg5755_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R4, R3, R6, R5, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5785) {
  var Arg5785_0 = Arg5785[0], Arg5785_1 = Arg5785[1], Arg5785_2 = Arg5785[2], Arg5785_3 = Arg5785[3], Arg5785_4 = Arg5785[4], Arg5785_5 = Arg5785[5], Arg5785_6 = Arg5785[6], Arg5785_7 = Arg5785[7], Arg5785_8 = Arg5785[8], Arg5785_9 = Arg5785[9], Arg5785_10 = Arg5785[10], Arg5785_11 = Arg5785[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5785_2, Arg5785_3, Arg5785_9, Arg5785_5, Arg5785_10]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R4, R3, R6, R2, R5, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5787) {
  var Arg5787_0 = Arg5787[0], Arg5787_1 = Arg5787[1], Arg5787_2 = Arg5787[2], Arg5787_3 = Arg5787[3], Arg5787_4 = Arg5787[4], Arg5787_5 = Arg5787[5], Arg5787_6 = Arg5787[6], Arg5787_7 = Arg5787[7], Arg5787_8 = Arg5787[8], Arg5787_9 = Arg5787[9], Arg5787_10 = Arg5787[10], Arg5787_11 = Arg5787[11], Arg5787_12 = Arg5787[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5787_2, Arg5787_3, Arg5787_10, Arg5787_6, Arg5787_11]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R4, R3, R6, Arg5755_2, Arg5755_4, R2, Arg5755_3, R5, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5789) {
  var Arg5789_0 = Arg5789[0], Arg5789_1 = Arg5789[1], Arg5789_2 = Arg5789[2], Arg5789_3 = Arg5789[3], Arg5789_4 = Arg5789[4], Arg5789_5 = Arg5789[5], Arg5789_6 = Arg5789[6], Arg5789_7 = Arg5789[7], Arg5789_8 = Arg5789[8], Arg5789_9 = Arg5789[9], Arg5789_10 = Arg5789[10], Arg5789_11 = Arg5789[11], Arg5789_12 = Arg5789[12], Arg5789_13 = Arg5789[13], Arg5789_14 = Arg5789[14], Arg5789_15 = Arg5789[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5789_2, Arg5789_3, Arg5789_4, Arg5789_7, Arg5789_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5755_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R4, R3, R5, Arg5755_2, Arg5755_4, R2, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5791) {
  var Arg5791_0 = Arg5791[0], Arg5791_1 = Arg5791[1], Arg5791_2 = Arg5791[2], Arg5791_3 = Arg5791[3], Arg5791_4 = Arg5791[4], Arg5791_5 = Arg5791[5], Arg5791_6 = Arg5791[6], Arg5791_7 = Arg5791[7], Arg5791_8 = Arg5791[8], Arg5791_9 = Arg5791[9], Arg5791_10 = Arg5791[10], Arg5791_11 = Arg5791[11], Arg5791_12 = Arg5791[12], Arg5791_13 = Arg5791[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5791_2, Arg5791_3, Arg5791_4, Arg5791_7, Arg5791_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]]], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R4, R3, R5, Arg5755_2, Arg5755_4, R2, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5793) {
  var Arg5793_0 = Arg5793[0], Arg5793_1 = Arg5793[1], Arg5793_2 = Arg5793[2], Arg5793_3 = Arg5793[3], Arg5793_4 = Arg5793[4], Arg5793_5 = Arg5793[5], Arg5793_6 = Arg5793[6], Arg5793_7 = Arg5793[7], Arg5793_8 = Arg5793[8], Arg5793_9 = Arg5793[9], Arg5793_10 = Arg5793[10], Arg5793_11 = Arg5793[11], Arg5793_12 = Arg5793[12], Arg5793_13 = Arg5793[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5793_2, Arg5793_3, Arg5793_4, Arg5793_7, Arg5793_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5755_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5795) {
  var Arg5795_0 = Arg5795[0], Arg5795_1 = Arg5795[1], Arg5795_2 = Arg5795[2], Arg5795_3 = Arg5795[3], Arg5795_4 = Arg5795[4], Arg5795_5 = Arg5795[5], Arg5795_6 = Arg5795[6], Arg5795_7 = Arg5795[7], Arg5795_8 = Arg5795[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5795_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5795_2, []]], Arg5795_6, Arg5795_7, Arg5795_8]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R2, R4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5797) {
  var Arg5797_0 = Arg5797[0], Arg5797_1 = Arg5797[1], Arg5797_2 = Arg5797[2], Arg5797_3 = Arg5797[3], Arg5797_4 = Arg5797[4], Arg5797_5 = Arg5797[5], Arg5797_6 = Arg5797[6], Arg5797_7 = Arg5797[7], Arg5797_8 = Arg5797[8], Arg5797_9 = Arg5797[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5797_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5797_2, []]], Arg5797_7, Arg5797_8, Arg5797_9]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R2, Arg5755_2, Arg5755_4, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5799) {
  var Arg5799_0 = Arg5799[0], Arg5799_1 = Arg5799[1], Arg5799_2 = Arg5799[2], Arg5799_3 = Arg5799[3], Arg5799_4 = Arg5799[4], Arg5799_5 = Arg5799[5], Arg5799_6 = Arg5799[6], Arg5799_7 = Arg5799[7], Arg5799_8 = Arg5799[8], Arg5799_9 = Arg5799[9], Arg5799_10 = Arg5799[10], Arg5799_11 = Arg5799[11], Arg5799_12 = Arg5799[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5799_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5799_2, []]], Arg5799_3, Arg5799_6, Arg5799_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "vector"], Arg5755_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R5, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5801) {
  var Arg5801_0 = Arg5801[0], Arg5801_1 = Arg5801[1], Arg5801_2 = Arg5801[2], Arg5801_3 = Arg5801[3], Arg5801_4 = Arg5801[4], Arg5801_5 = Arg5801[5], Arg5801_6 = Arg5801[6], Arg5801_7 = Arg5801[7], Arg5801_8 = Arg5801[8], Arg5801_9 = Arg5801[9], Arg5801_10 = Arg5801[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5801_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5801_2, []]], Arg5801_8, Arg5801_4, Arg5801_9]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R5, R2, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5803) {
  var Arg5803_0 = Arg5803[0], Arg5803_1 = Arg5803[1], Arg5803_2 = Arg5803[2], Arg5803_3 = Arg5803[3], Arg5803_4 = Arg5803[4], Arg5803_5 = Arg5803[5], Arg5803_6 = Arg5803[6], Arg5803_7 = Arg5803[7], Arg5803_8 = Arg5803[8], Arg5803_9 = Arg5803[9], Arg5803_10 = Arg5803[10], Arg5803_11 = Arg5803[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5803_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5803_2, []]], Arg5803_9, Arg5803_5, Arg5803_10]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R5, Arg5755_2, Arg5755_4, R2, Arg5755_3, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5805) {
  var Arg5805_0 = Arg5805[0], Arg5805_1 = Arg5805[1], Arg5805_2 = Arg5805[2], Arg5805_3 = Arg5805[3], Arg5805_4 = Arg5805[4], Arg5805_5 = Arg5805[5], Arg5805_6 = Arg5805[6], Arg5805_7 = Arg5805[7], Arg5805_8 = Arg5805[8], Arg5805_9 = Arg5805[9], Arg5805_10 = Arg5805[10], Arg5805_11 = Arg5805[11], Arg5805_12 = Arg5805[12], Arg5805_13 = Arg5805[13], Arg5805_14 = Arg5805[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5805_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5805_2, []]], Arg5805_3, Arg5805_6, Arg5805_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R4, []]], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R4, Arg5755_2, Arg5755_4, R2, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5807) {
  var Arg5807_0 = Arg5807[0], Arg5807_1 = Arg5807[1], Arg5807_2 = Arg5807[2], Arg5807_3 = Arg5807[3], Arg5807_4 = Arg5807[4], Arg5807_5 = Arg5807[5], Arg5807_6 = Arg5807[6], Arg5807_7 = Arg5807[7], Arg5807_8 = Arg5807[8], Arg5807_9 = Arg5807[9], Arg5807_10 = Arg5807[10], Arg5807_11 = Arg5807[11], Arg5807_12 = Arg5807[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5807_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg5807_2, []]], Arg5807_3, Arg5807_6, Arg5807_4]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5809) {
  var Arg5809_0 = Arg5809[0], Arg5809_1 = Arg5809[1], Arg5809_2 = Arg5809[2], Arg5809_3 = Arg5809[3], Arg5809_4 = Arg5809[4], Arg5809_5 = Arg5809[5], Arg5809_6 = Arg5809[6], Arg5809_7 = Arg5809[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5809_1, [Shen.type_symbol, "string"], Arg5809_5, Arg5809_6, Arg5809_7]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "string"], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg5755_2, Arg5755_3, (new Shen.Freeze([R1, R3, R2, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5811) {
  var Arg5811_0 = Arg5811[0], Arg5811_1 = Arg5811[1], Arg5811_2 = Arg5811[2], Arg5811_3 = Arg5811[3], Arg5811_4 = Arg5811[4], Arg5811_5 = Arg5811[5], Arg5811_6 = Arg5811[6], Arg5811_7 = Arg5811[7], Arg5811_8 = Arg5811[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5811_1, [Shen.type_symbol, "string"], Arg5811_6, Arg5811_7, Arg5811_8]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5755_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R3, R5, R2, R6, R4, Arg5755_2, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5813) {
  var Arg5813_0 = Arg5813[0], Arg5813_1 = Arg5813[1], Arg5813_2 = Arg5813[2], Arg5813_3 = Arg5813[3], Arg5813_4 = Arg5813[4], Arg5813_5 = Arg5813[5], Arg5813_6 = Arg5813[6], Arg5813_7 = Arg5813[7], Arg5813_8 = Arg5813[8], Arg5813_9 = Arg5813[9], Arg5813_10 = Arg5813[10], Arg5813_11 = Arg5813[11], Arg5813_12 = Arg5813[12], Arg5813_13 = Arg5813[13], Arg5813_14 = Arg5813[14], Arg5813_15 = Arg5813[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5813_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5813_8, (new Shen.Freeze([Arg5813_1, Arg5813_2, Arg5813_3, Arg5813_4, Arg5813_5, Arg5813_6, Arg5813_7, Arg5813_8, Arg5813_9], function(Arg5815) {
  var Arg5815_0 = Arg5815[0], Arg5815_1 = Arg5815[1], Arg5815_2 = Arg5815[2], Arg5815_3 = Arg5815[3], Arg5815_4 = Arg5815[4], Arg5815_5 = Arg5815[5], Arg5815_6 = Arg5815[6], Arg5815_7 = Arg5815[7], Arg5815_8 = Arg5815[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5815_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5815_4, Arg5815_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5815_0, Arg5815_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5815_1, Arg5815_7])]), Arg5815_7, (new Shen.Freeze([Arg5815_0, Arg5815_1, Arg5815_2, Arg5815_3, Arg5815_4, Arg5815_5, Arg5815_6, Arg5815_7, Arg5815_8], function(Arg5817) {
  var Arg5817_0 = Arg5817[0], Arg5817_1 = Arg5817[1], Arg5817_2 = Arg5817[2], Arg5817_3 = Arg5817[3], Arg5817_4 = Arg5817[4], Arg5817_5 = Arg5817[5], Arg5817_6 = Arg5817[6], Arg5817_7 = Arg5817[7], Arg5817_8 = Arg5817[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5817_2, Arg5817_3, [Shen.type_cons, [Shen.type_cons, Arg5817_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5817_5, []]]], Arg5817_6], Arg5817_7, Arg5817_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5755_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg5755_2, Arg5755_3, Arg5755_4, R5, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5819) {
  var Arg5819_0 = Arg5819[0], Arg5819_1 = Arg5819[1], Arg5819_2 = Arg5819[2], Arg5819_3 = Arg5819[3], Arg5819_4 = Arg5819[4], Arg5819_5 = Arg5819[5], Arg5819_6 = Arg5819[6], Arg5819_7 = Arg5819[7], Arg5819_8 = Arg5819[8], Arg5819_9 = Arg5819[9], Arg5819_10 = Arg5819[10], Arg5819_11 = Arg5819[11], Arg5819_12 = Arg5819[12], Arg5819_13 = Arg5819[13], Arg5819_14 = Arg5819[14], Arg5819_15 = Arg5819[15], Arg5819_16 = Arg5819[16], Arg5819_17 = Arg5819[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5819_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5819_8, (new Shen.Freeze([Arg5819_1, Arg5819_2, Arg5819_3, Arg5819_4, Arg5819_5, Arg5819_6, Arg5819_7, Arg5819_8, Arg5819_9], function(Arg5821) {
  var Arg5821_0 = Arg5821[0], Arg5821_1 = Arg5821[1], Arg5821_2 = Arg5821[2], Arg5821_3 = Arg5821[3], Arg5821_4 = Arg5821[4], Arg5821_5 = Arg5821[5], Arg5821_6 = Arg5821[6], Arg5821_7 = Arg5821[7], Arg5821_8 = Arg5821[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5821_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5821_4, Arg5821_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5821_0, Arg5821_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5821_1, Arg5821_7])]), Arg5821_7, (new Shen.Freeze([Arg5821_0, Arg5821_1, Arg5821_2, Arg5821_3, Arg5821_4, Arg5821_5, Arg5821_6, Arg5821_7, Arg5821_8], function(Arg5823) {
  var Arg5823_0 = Arg5823[0], Arg5823_1 = Arg5823[1], Arg5823_2 = Arg5823[2], Arg5823_3 = Arg5823[3], Arg5823_4 = Arg5823[4], Arg5823_5 = Arg5823[5], Arg5823_6 = Arg5823[6], Arg5823_7 = Arg5823[7], Arg5823_8 = Arg5823[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5823_2, Arg5823_3, [Shen.type_cons, [Shen.type_cons, Arg5823_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5823_5, []]]], Arg5823_6], Arg5823_7, Arg5823_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5755_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg5755_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R3, R6, R2, R7, R4, Arg5755_2, Arg5755_3, Arg5755_4, R5, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5825) {
  var Arg5825_0 = Arg5825[0], Arg5825_1 = Arg5825[1], Arg5825_2 = Arg5825[2], Arg5825_3 = Arg5825[3], Arg5825_4 = Arg5825[4], Arg5825_5 = Arg5825[5], Arg5825_6 = Arg5825[6], Arg5825_7 = Arg5825[7], Arg5825_8 = Arg5825[8], Arg5825_9 = Arg5825[9], Arg5825_10 = Arg5825[10], Arg5825_11 = Arg5825[11], Arg5825_12 = Arg5825[12], Arg5825_13 = Arg5825[13], Arg5825_14 = Arg5825[14], Arg5825_15 = Arg5825[15], Arg5825_16 = Arg5825[16], Arg5825_17 = Arg5825[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5825_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5825_8, (new Shen.Freeze([Arg5825_1, Arg5825_2, Arg5825_3, Arg5825_4, Arg5825_5, Arg5825_6, Arg5825_7, Arg5825_8, Arg5825_9], function(Arg5827) {
  var Arg5827_0 = Arg5827[0], Arg5827_1 = Arg5827[1], Arg5827_2 = Arg5827[2], Arg5827_3 = Arg5827[3], Arg5827_4 = Arg5827[4], Arg5827_5 = Arg5827[5], Arg5827_6 = Arg5827[6], Arg5827_7 = Arg5827[7], Arg5827_8 = Arg5827[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5827_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5827_4, Arg5827_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5827_0, Arg5827_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5827_1, Arg5827_7])]), Arg5827_7, (new Shen.Freeze([Arg5827_0, Arg5827_1, Arg5827_2, Arg5827_3, Arg5827_4, Arg5827_5, Arg5827_6, Arg5827_7, Arg5827_8], function(Arg5829) {
  var Arg5829_0 = Arg5829[0], Arg5829_1 = Arg5829[1], Arg5829_2 = Arg5829[2], Arg5829_3 = Arg5829[3], Arg5829_4 = Arg5829[4], Arg5829_5 = Arg5829[5], Arg5829_6 = Arg5829[6], Arg5829_7 = Arg5829[7], Arg5829_8 = Arg5829[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5829_2, Arg5829_3, [Shen.type_cons, [Shen.type_cons, Arg5829_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5829_5, []]]], Arg5829_6], Arg5829_7, Arg5829_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5755_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "-->"], Arg5755_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R3, R2, R6, R7, R4, Arg5755_2, Arg5755_3, Arg5755_4, R5, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5831) {
  var Arg5831_0 = Arg5831[0], Arg5831_1 = Arg5831[1], Arg5831_2 = Arg5831[2], Arg5831_3 = Arg5831[3], Arg5831_4 = Arg5831[4], Arg5831_5 = Arg5831[5], Arg5831_6 = Arg5831[6], Arg5831_7 = Arg5831[7], Arg5831_8 = Arg5831[8], Arg5831_9 = Arg5831[9], Arg5831_10 = Arg5831[10], Arg5831_11 = Arg5831[11], Arg5831_12 = Arg5831[12], Arg5831_13 = Arg5831[13], Arg5831_14 = Arg5831[14], Arg5831_15 = Arg5831[15], Arg5831_16 = Arg5831[16], Arg5831_17 = Arg5831[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5831_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5831_8, (new Shen.Freeze([Arg5831_1, Arg5831_2, Arg5831_3, Arg5831_4, Arg5831_5, Arg5831_6, Arg5831_7, Arg5831_8, Arg5831_9], function(Arg5833) {
  var Arg5833_0 = Arg5833[0], Arg5833_1 = Arg5833[1], Arg5833_2 = Arg5833[2], Arg5833_3 = Arg5833[3], Arg5833_4 = Arg5833[4], Arg5833_5 = Arg5833[5], Arg5833_6 = Arg5833[6], Arg5833_7 = Arg5833[7], Arg5833_8 = Arg5833[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5833_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5833_4, Arg5833_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5833_0, Arg5833_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5833_1, Arg5833_7])]), Arg5833_7, (new Shen.Freeze([Arg5833_0, Arg5833_1, Arg5833_2, Arg5833_3, Arg5833_4, Arg5833_5, Arg5833_6, Arg5833_7, Arg5833_8], function(Arg5835) {
  var Arg5835_0 = Arg5835[0], Arg5835_1 = Arg5835[1], Arg5835_2 = Arg5835[2], Arg5835_3 = Arg5835[3], Arg5835_4 = Arg5835[4], Arg5835_5 = Arg5835[5], Arg5835_6 = Arg5835[6], Arg5835_7 = Arg5835[7], Arg5835_8 = Arg5835[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5835_2, Arg5835_3, [Shen.type_cons, [Shen.type_cons, Arg5835_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5835_5, []]]], Arg5835_6], Arg5835_7, Arg5835_8]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5755_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg5755_2, Arg5755_3, Arg5755_4, R2, Arg5755_3, R5, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5837) {
  var Arg5837_0 = Arg5837[0], Arg5837_1 = Arg5837[1], Arg5837_2 = Arg5837[2], Arg5837_3 = Arg5837[3], Arg5837_4 = Arg5837[4], Arg5837_5 = Arg5837[5], Arg5837_6 = Arg5837[6], Arg5837_7 = Arg5837[7], Arg5837_8 = Arg5837[8], Arg5837_9 = Arg5837[9], Arg5837_10 = Arg5837[10], Arg5837_11 = Arg5837[11], Arg5837_12 = Arg5837[12], Arg5837_13 = Arg5837[13], Arg5837_14 = Arg5837[14], Arg5837_15 = Arg5837[15], Arg5837_16 = Arg5837[16], Arg5837_17 = Arg5837[17], Arg5837_18 = Arg5837[18], Arg5837_19 = Arg5837[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5837_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5837_8, (new Shen.Freeze([Arg5837_1, Arg5837_2, Arg5837_3, Arg5837_4, Arg5837_5, Arg5837_6, Arg5837_7, Arg5837_8, Arg5837_9], function(Arg5839) {
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1], Arg5839_2 = Arg5839[2], Arg5839_3 = Arg5839[3], Arg5839_4 = Arg5839[4], Arg5839_5 = Arg5839[5], Arg5839_6 = Arg5839[6], Arg5839_7 = Arg5839[7], Arg5839_8 = Arg5839[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5839_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5839_4, Arg5839_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5839_0, Arg5839_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5839_1, Arg5839_7])]), Arg5839_7, (new Shen.Freeze([Arg5839_0, Arg5839_1, Arg5839_2, Arg5839_3, Arg5839_4, Arg5839_5, Arg5839_6, Arg5839_7, Arg5839_8], function(Arg5841) {
  var Arg5841_0 = Arg5841[0], Arg5841_1 = Arg5841[1], Arg5841_2 = Arg5841[2], Arg5841_3 = Arg5841[3], Arg5841_4 = Arg5841[4], Arg5841_5 = Arg5841[5], Arg5841_6 = Arg5841[6], Arg5841_7 = Arg5841[7], Arg5841_8 = Arg5841[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5841_2, Arg5841_3, [Shen.type_cons, [Shen.type_cons, Arg5841_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5841_5, []]]], Arg5841_6], Arg5841_7, Arg5841_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg5755_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R3, R7, R6, R8, R4, Arg5755_2, Arg5755_3, Arg5755_4, R2, Arg5755_3, R5, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5843) {
  var Arg5843_0 = Arg5843[0], Arg5843_1 = Arg5843[1], Arg5843_2 = Arg5843[2], Arg5843_3 = Arg5843[3], Arg5843_4 = Arg5843[4], Arg5843_5 = Arg5843[5], Arg5843_6 = Arg5843[6], Arg5843_7 = Arg5843[7], Arg5843_8 = Arg5843[8], Arg5843_9 = Arg5843[9], Arg5843_10 = Arg5843[10], Arg5843_11 = Arg5843[11], Arg5843_12 = Arg5843[12], Arg5843_13 = Arg5843[13], Arg5843_14 = Arg5843[14], Arg5843_15 = Arg5843[15], Arg5843_16 = Arg5843[16], Arg5843_17 = Arg5843[17], Arg5843_18 = Arg5843[18], Arg5843_19 = Arg5843[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5843_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5843_8, (new Shen.Freeze([Arg5843_1, Arg5843_2, Arg5843_3, Arg5843_4, Arg5843_5, Arg5843_6, Arg5843_7, Arg5843_8, Arg5843_9], function(Arg5845) {
  var Arg5845_0 = Arg5845[0], Arg5845_1 = Arg5845[1], Arg5845_2 = Arg5845[2], Arg5845_3 = Arg5845[3], Arg5845_4 = Arg5845[4], Arg5845_5 = Arg5845[5], Arg5845_6 = Arg5845[6], Arg5845_7 = Arg5845[7], Arg5845_8 = Arg5845[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5845_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5845_4, Arg5845_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5845_0, Arg5845_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5845_1, Arg5845_7])]), Arg5845_7, (new Shen.Freeze([Arg5845_0, Arg5845_1, Arg5845_2, Arg5845_3, Arg5845_4, Arg5845_5, Arg5845_6, Arg5845_7, Arg5845_8], function(Arg5847) {
  var Arg5847_0 = Arg5847[0], Arg5847_1 = Arg5847[1], Arg5847_2 = Arg5847[2], Arg5847_3 = Arg5847[3], Arg5847_4 = Arg5847[4], Arg5847_5 = Arg5847[5], Arg5847_6 = Arg5847[6], Arg5847_7 = Arg5847[7], Arg5847_8 = Arg5847[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5847_2, Arg5847_3, [Shen.type_cons, [Shen.type_cons, Arg5847_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5847_5, []]]], Arg5847_6], Arg5847_7, Arg5847_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5755_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]], Arg5755_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg5755_2, Arg5755_3, Arg5755_4, R2, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5849) {
  var Arg5849_0 = Arg5849[0], Arg5849_1 = Arg5849[1], Arg5849_2 = Arg5849[2], Arg5849_3 = Arg5849[3], Arg5849_4 = Arg5849[4], Arg5849_5 = Arg5849[5], Arg5849_6 = Arg5849[6], Arg5849_7 = Arg5849[7], Arg5849_8 = Arg5849[8], Arg5849_9 = Arg5849[9], Arg5849_10 = Arg5849[10], Arg5849_11 = Arg5849[11], Arg5849_12 = Arg5849[12], Arg5849_13 = Arg5849[13], Arg5849_14 = Arg5849[14], Arg5849_15 = Arg5849[15], Arg5849_16 = Arg5849[16], Arg5849_17 = Arg5849[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5849_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5849_8, (new Shen.Freeze([Arg5849_1, Arg5849_2, Arg5849_3, Arg5849_4, Arg5849_5, Arg5849_6, Arg5849_7, Arg5849_8, Arg5849_9], function(Arg5851) {
  var Arg5851_0 = Arg5851[0], Arg5851_1 = Arg5851[1], Arg5851_2 = Arg5851[2], Arg5851_3 = Arg5851[3], Arg5851_4 = Arg5851[4], Arg5851_5 = Arg5851[5], Arg5851_6 = Arg5851[6], Arg5851_7 = Arg5851[7], Arg5851_8 = Arg5851[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5851_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5851_4, Arg5851_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5851_0, Arg5851_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5851_1, Arg5851_7])]), Arg5851_7, (new Shen.Freeze([Arg5851_0, Arg5851_1, Arg5851_2, Arg5851_3, Arg5851_4, Arg5851_5, Arg5851_6, Arg5851_7, Arg5851_8], function(Arg5853) {
  var Arg5853_0 = Arg5853[0], Arg5853_1 = Arg5853[1], Arg5853_2 = Arg5853[2], Arg5853_3 = Arg5853[3], Arg5853_4 = Arg5853[4], Arg5853_5 = Arg5853[5], Arg5853_6 = Arg5853[6], Arg5853_7 = Arg5853[7], Arg5853_8 = Arg5853[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5853_2, Arg5853_3, [Shen.type_cons, [Shen.type_cons, Arg5853_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5853_5, []]]], Arg5853_6], Arg5853_7, Arg5853_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]]], Arg5755_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R3, R6, R5, R7, R4, Arg5755_2, Arg5755_3, Arg5755_4, R2, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5855) {
  var Arg5855_0 = Arg5855[0], Arg5855_1 = Arg5855[1], Arg5855_2 = Arg5855[2], Arg5855_3 = Arg5855[3], Arg5855_4 = Arg5855[4], Arg5855_5 = Arg5855[5], Arg5855_6 = Arg5855[6], Arg5855_7 = Arg5855[7], Arg5855_8 = Arg5855[8], Arg5855_9 = Arg5855[9], Arg5855_10 = Arg5855[10], Arg5855_11 = Arg5855[11], Arg5855_12 = Arg5855[12], Arg5855_13 = Arg5855[13], Arg5855_14 = Arg5855[14], Arg5855_15 = Arg5855[15], Arg5855_16 = Arg5855[16], Arg5855_17 = Arg5855[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5855_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5855_8, (new Shen.Freeze([Arg5855_1, Arg5855_2, Arg5855_3, Arg5855_4, Arg5855_5, Arg5855_6, Arg5855_7, Arg5855_8, Arg5855_9], function(Arg5857) {
  var Arg5857_0 = Arg5857[0], Arg5857_1 = Arg5857[1], Arg5857_2 = Arg5857[2], Arg5857_3 = Arg5857[3], Arg5857_4 = Arg5857[4], Arg5857_5 = Arg5857[5], Arg5857_6 = Arg5857[6], Arg5857_7 = Arg5857[7], Arg5857_8 = Arg5857[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5857_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5857_4, Arg5857_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5857_0, Arg5857_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5857_1, Arg5857_7])]), Arg5857_7, (new Shen.Freeze([Arg5857_0, Arg5857_1, Arg5857_2, Arg5857_3, Arg5857_4, Arg5857_5, Arg5857_6, Arg5857_7, Arg5857_8], function(Arg5859) {
  var Arg5859_0 = Arg5859[0], Arg5859_1 = Arg5859[1], Arg5859_2 = Arg5859[2], Arg5859_3 = Arg5859[3], Arg5859_4 = Arg5859[4], Arg5859_5 = Arg5859[5], Arg5859_6 = Arg5859[6], Arg5859_7 = Arg5859[7], Arg5859_8 = Arg5859[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5859_2, Arg5859_3, [Shen.type_cons, [Shen.type_cons, Arg5859_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5859_5, []]]], Arg5859_6], Arg5859_7, Arg5859_8]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R3, R1, R4, R2, Arg5755_1, R5, R6, Arg5755_2, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5861) {
  var Arg5861_0 = Arg5861[0], Arg5861_1 = Arg5861[1], Arg5861_2 = Arg5861[2], Arg5861_3 = Arg5861[3], Arg5861_4 = Arg5861[4], Arg5861_5 = Arg5861[5], Arg5861_6 = Arg5861[6], Arg5861_7 = Arg5861[7], Arg5861_8 = Arg5861[8], Arg5861_9 = Arg5861[9], Arg5861_10 = Arg5861[10], Arg5861_11 = Arg5861[11], Arg5861_12 = Arg5861[12], Arg5861_13 = Arg5861[13], Arg5861_14 = Arg5861[14], Arg5861_15 = Arg5861[15], Arg5861_16 = Arg5861[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5861_1, Arg5861_7, Arg5861_8, Arg5861_9, (new Shen.Freeze([Arg5861_1, Arg5861_2, Arg5861_3, Arg5861_4, Arg5861_5, Arg5861_6, Arg5861_7, Arg5861_8, Arg5861_9, Arg5861_10], function(Arg5863) {
  var Arg5863_0 = Arg5863[0], Arg5863_1 = Arg5863[1], Arg5863_2 = Arg5863[2], Arg5863_3 = Arg5863[3], Arg5863_4 = Arg5863[4], Arg5863_5 = Arg5863[5], Arg5863_6 = Arg5863[6], Arg5863_7 = Arg5863[7], Arg5863_8 = Arg5863[8], Arg5863_9 = Arg5863[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5863_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg5863_8, (new Shen.Freeze([Arg5863_1, Arg5863_2, Arg5863_3, Arg5863_4, Arg5863_5, Arg5863_6, Arg5863_7, Arg5863_8, Arg5863_9], function(Arg5865) {
  var Arg5865_0 = Arg5865[0], Arg5865_1 = Arg5865[1], Arg5865_2 = Arg5865[2], Arg5865_3 = Arg5865[3], Arg5865_4 = Arg5865[4], Arg5865_5 = Arg5865[5], Arg5865_6 = Arg5865[6], Arg5865_7 = Arg5865[7], Arg5865_8 = Arg5865[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5865_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5865_4, Arg5865_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5865_0, Arg5865_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5865_1, Arg5865_7])]), Arg5865_7, (new Shen.Freeze([Arg5865_0, Arg5865_1, Arg5865_2, Arg5865_3, Arg5865_4, Arg5865_5, Arg5865_6, Arg5865_7, Arg5865_8], function(Arg5867) {
  var Arg5867_0 = Arg5867[0], Arg5867_1 = Arg5867[1], Arg5867_2 = Arg5867[2], Arg5867_3 = Arg5867[3], Arg5867_4 = Arg5867[4], Arg5867_5 = Arg5867[5], Arg5867_6 = Arg5867[6], Arg5867_7 = Arg5867[7], Arg5867_8 = Arg5867[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5867_2, Arg5867_3, [Shen.type_cons, [Shen.type_cons, Arg5867_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5867_5, []]]], Arg5867_6], Arg5867_7, Arg5867_8]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "open"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "stream"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5755_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5755_3, (new Shen.Freeze([R2, R3, R1, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5869) {
  var Arg5869_0 = Arg5869[0], Arg5869_1 = Arg5869[1], Arg5869_2 = Arg5869[2], Arg5869_3 = Arg5869[3], Arg5869_4 = Arg5869[4], Arg5869_5 = Arg5869[5], Arg5869_6 = Arg5869[6], Arg5869_7 = Arg5869[7], Arg5869_8 = Arg5869[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5869_3, Arg5869_7, (new Shen.Freeze([Arg5869_3, Arg5869_2, Arg5869_6, Arg5869_7, Arg5869_8], function(Arg5871) {
  var Arg5871_0 = Arg5871[0], Arg5871_1 = Arg5871[1], Arg5871_2 = Arg5871[2], Arg5871_3 = Arg5871[3], Arg5871_4 = Arg5871[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5871_1, [Shen.type_symbol, "string"], Arg5871_2, Arg5871_3, Arg5871_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5755_3, (new Shen.Freeze([R2, R3, R1, R4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5873) {
  var Arg5873_0 = Arg5873[0], Arg5873_1 = Arg5873[1], Arg5873_2 = Arg5873[2], Arg5873_3 = Arg5873[3], Arg5873_4 = Arg5873[4], Arg5873_5 = Arg5873[5], Arg5873_6 = Arg5873[6], Arg5873_7 = Arg5873[7], Arg5873_8 = Arg5873[8], Arg5873_9 = Arg5873[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5873_4, Arg5873_8, (new Shen.Freeze([Arg5873_4, Arg5873_2, Arg5873_7, Arg5873_8, Arg5873_9], function(Arg5875) {
  var Arg5875_0 = Arg5875[0], Arg5875_1 = Arg5875[1], Arg5875_2 = Arg5875[2], Arg5875_3 = Arg5875[3], Arg5875_4 = Arg5875[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5875_1, [Shen.type_symbol, "string"], Arg5875_2, Arg5875_3, Arg5875_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg5755_3, (new Shen.Freeze([R2, R3, R0, R1, Arg5755_2, Arg5755_4, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5877) {
  var Arg5877_0 = Arg5877[0], Arg5877_1 = Arg5877[1], Arg5877_2 = Arg5877[2], Arg5877_3 = Arg5877[3], Arg5877_4 = Arg5877[4], Arg5877_5 = Arg5877[5], Arg5877_6 = Arg5877[6], Arg5877_7 = Arg5877[7], Arg5877_8 = Arg5877[8], Arg5877_9 = Arg5877[9], Arg5877_10 = Arg5877[10], Arg5877_11 = Arg5877[11], Arg5877_12 = Arg5877[12], Arg5877_13 = Arg5877[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5877_2, Arg5877_7, (new Shen.Freeze([Arg5877_2, Arg5877_3, Arg5877_4, Arg5877_7, Arg5877_5], function(Arg5879) {
  var Arg5879_0 = Arg5879[0], Arg5879_1 = Arg5879[1], Arg5879_2 = Arg5879[2], Arg5879_3 = Arg5879[3], Arg5879_4 = Arg5879[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5879_1, [Shen.type_symbol, "string"], Arg5879_2, Arg5879_3, Arg5879_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "stream"], Arg5755_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5755_3, (new Shen.Freeze([R5, R3, R1, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5881) {
  var Arg5881_0 = Arg5881[0], Arg5881_1 = Arg5881[1], Arg5881_2 = Arg5881[2], Arg5881_3 = Arg5881[3], Arg5881_4 = Arg5881[4], Arg5881_5 = Arg5881[5], Arg5881_6 = Arg5881[6], Arg5881_7 = Arg5881[7], Arg5881_8 = Arg5881[8], Arg5881_9 = Arg5881[9], Arg5881_10 = Arg5881[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5881_5, Arg5881_4, (new Shen.Freeze([Arg5881_5, Arg5881_2, Arg5881_8, Arg5881_4, Arg5881_9], function(Arg5883) {
  var Arg5883_0 = Arg5883[0], Arg5883_1 = Arg5883[1], Arg5883_2 = Arg5883[2], Arg5883_3 = Arg5883[3], Arg5883_4 = Arg5883[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5883_1, [Shen.type_symbol, "string"], Arg5883_2, Arg5883_3, Arg5883_4]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5755_3, (new Shen.Freeze([R5, R3, R1, R2, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5885) {
  var Arg5885_0 = Arg5885[0], Arg5885_1 = Arg5885[1], Arg5885_2 = Arg5885[2], Arg5885_3 = Arg5885[3], Arg5885_4 = Arg5885[4], Arg5885_5 = Arg5885[5], Arg5885_6 = Arg5885[6], Arg5885_7 = Arg5885[7], Arg5885_8 = Arg5885[8], Arg5885_9 = Arg5885[9], Arg5885_10 = Arg5885[10], Arg5885_11 = Arg5885[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5885_6, Arg5885_5, (new Shen.Freeze([Arg5885_6, Arg5885_2, Arg5885_9, Arg5885_5, Arg5885_10], function(Arg5887) {
  var Arg5887_0 = Arg5887[0], Arg5887_1 = Arg5887[1], Arg5887_2 = Arg5887[2], Arg5887_3 = Arg5887[3], Arg5887_4 = Arg5887[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5887_1, [Shen.type_symbol, "string"], Arg5887_2, Arg5887_3, Arg5887_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg5755_3, (new Shen.Freeze([R5, R3, R0, R1, Arg5755_2, Arg5755_4, R2, Arg5755_3, R4, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5889) {
  var Arg5889_0 = Arg5889[0], Arg5889_1 = Arg5889[1], Arg5889_2 = Arg5889[2], Arg5889_3 = Arg5889[3], Arg5889_4 = Arg5889[4], Arg5889_5 = Arg5889[5], Arg5889_6 = Arg5889[6], Arg5889_7 = Arg5889[7], Arg5889_8 = Arg5889[8], Arg5889_9 = Arg5889[9], Arg5889_10 = Arg5889[10], Arg5889_11 = Arg5889[11], Arg5889_12 = Arg5889[12], Arg5889_13 = Arg5889[13], Arg5889_14 = Arg5889[14], Arg5889_15 = Arg5889[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5889_2, Arg5889_7, (new Shen.Freeze([Arg5889_2, Arg5889_3, Arg5889_4, Arg5889_7, Arg5889_5], function(Arg5891) {
  var Arg5891_0 = Arg5891[0], Arg5891_1 = Arg5891[1], Arg5891_2 = Arg5891[2], Arg5891_3 = Arg5891[3], Arg5891_4 = Arg5891[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5891_1, [Shen.type_symbol, "string"], Arg5891_2, Arg5891_3, Arg5891_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg5755_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, R4, []]], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R3, Arg5755_3, (new Shen.Freeze([R4, R3, R0, R1, Arg5755_2, Arg5755_4, R2, Arg5755_3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5893) {
  var Arg5893_0 = Arg5893[0], Arg5893_1 = Arg5893[1], Arg5893_2 = Arg5893[2], Arg5893_3 = Arg5893[3], Arg5893_4 = Arg5893[4], Arg5893_5 = Arg5893[5], Arg5893_6 = Arg5893[6], Arg5893_7 = Arg5893[7], Arg5893_8 = Arg5893[8], Arg5893_9 = Arg5893[9], Arg5893_10 = Arg5893[10], Arg5893_11 = Arg5893[11], Arg5893_12 = Arg5893[12], Arg5893_13 = Arg5893[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5893_2, Arg5893_7, (new Shen.Freeze([Arg5893_2, Arg5893_3, Arg5893_4, Arg5893_7, Arg5893_5], function(Arg5895) {
  var Arg5895_0 = Arg5895[0], Arg5895_1 = Arg5895[1], Arg5895_2 = Arg5895[2], Arg5895_3 = Arg5895[3], Arg5895_4 = Arg5895[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5895_1, [Shen.type_symbol, "string"], Arg5895_2, Arg5895_3, Arg5895_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R1, R3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5897) {
  var Arg5897_0 = Arg5897[0], Arg5897_1 = Arg5897[1], Arg5897_2 = Arg5897[2], Arg5897_3 = Arg5897[3], Arg5897_4 = Arg5897[4], Arg5897_5 = Arg5897[5], Arg5897_6 = Arg5897[6], Arg5897_7 = Arg5897[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg5897_1, Arg5897_4, Arg5897_6, (new Shen.Freeze([Arg5897_4, Arg5897_0, Arg5897_1, Arg5897_5, Arg5897_6, Arg5897_7], function(Arg5899) {
  var Arg5899_0 = Arg5899[0], Arg5899_1 = Arg5899[1], Arg5899_2 = Arg5899[2], Arg5899_3 = Arg5899[3], Arg5899_4 = Arg5899[4], Arg5899_5 = Arg5899[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5899_1, Arg5899_2, Arg5899_3, Arg5899_4, Arg5899_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["bind"], [R2, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5755_3])]), Arg5755_3, (new Shen.Freeze([R1, Arg5755_1, R2, R3, Arg5755_2, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5901) {
  var Arg5901_0 = Arg5901[0], Arg5901_1 = Arg5901[1], Arg5901_2 = Arg5901[2], Arg5901_3 = Arg5901[3], Arg5901_4 = Arg5901[4], Arg5901_5 = Arg5901[5], Arg5901_6 = Arg5901[6], Arg5901_7 = Arg5901[7], Arg5901_8 = Arg5901[8], Arg5901_9 = Arg5901[9], Arg5901_10 = Arg5901[10], Arg5901_11 = Arg5901[11], Arg5901_12 = Arg5901[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg5901_1, Arg5901_2, Arg5901_5, (new Shen.Freeze([Arg5901_1, Arg5901_2, Arg5901_3, Arg5901_4, Arg5901_5, Arg5901_6], function(Arg5903) {
  var Arg5903_0 = Arg5903[0], Arg5903_1 = Arg5903[1], Arg5903_2 = Arg5903[2], Arg5903_3 = Arg5903[3], Arg5903_4 = Arg5903[4], Arg5903_5 = Arg5903[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5903_2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], Arg5903_3, Arg5903_4, Arg5903_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read+"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["bind"], [R2, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5755_3])]), Arg5755_3, (new Shen.Freeze([R1, Arg5755_1, R2, R3, Arg5755_2, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5905) {
  var Arg5905_0 = Arg5905[0], Arg5905_1 = Arg5905[1], Arg5905_2 = Arg5905[2], Arg5905_3 = Arg5905[3], Arg5905_4 = Arg5905[4], Arg5905_5 = Arg5905[5], Arg5905_6 = Arg5905[6], Arg5905_7 = Arg5905[7], Arg5905_8 = Arg5905[8], Arg5905_9 = Arg5905[9], Arg5905_10 = Arg5905[10], Arg5905_11 = Arg5905[11], Arg5905_12 = Arg5905[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg5905_1, Arg5905_2, Arg5905_5, (new Shen.Freeze([Arg5905_1, Arg5905_2, Arg5905_3, Arg5905_4, Arg5905_5, Arg5905_6], function(Arg5907) {
  var Arg5907_0 = Arg5907[0], Arg5907_1 = Arg5907[1], Arg5907_2 = Arg5907[2], Arg5907_3 = Arg5907[3], Arg5907_4 = Arg5907[4], Arg5907_5 = Arg5907[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5907_2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], Arg5907_3, Arg5907_4, Arg5907_5]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R1, R3, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5909) {
  var Arg5909_0 = Arg5909[0], Arg5909_1 = Arg5909[1], Arg5909_2 = Arg5909[2], Arg5909_3 = Arg5909[3], Arg5909_4 = Arg5909[4], Arg5909_5 = Arg5909[5], Arg5909_6 = Arg5909[6], Arg5909_7 = Arg5909[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5909_0, [Shen.type_symbol, "symbol"], Arg5909_5, Arg5909_6, (new Shen.Freeze([Arg5909_2, Arg5909_0, Arg5909_1, Arg5909_4, Arg5909_5, Arg5909_6, Arg5909_7], function(Arg5911) {
  var Arg5911_0 = Arg5911[0], Arg5911_1 = Arg5911[1], Arg5911_2 = Arg5911[2], Arg5911_3 = Arg5911[3], Arg5911_4 = Arg5911[4], Arg5911_5 = Arg5911[5], Arg5911_6 = Arg5911[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5911_0, Arg5911_5, (new Shen.Freeze([Arg5911_0, Arg5911_1, Arg5911_2, Arg5911_3, Arg5911_4, Arg5911_5, Arg5911_6], function(Arg5913) {
  var Arg5913_0 = Arg5913[0], Arg5913_1 = Arg5913[1], Arg5913_2 = Arg5913[2], Arg5913_3 = Arg5913[3], Arg5913_4 = Arg5913[4], Arg5913_5 = Arg5913[5], Arg5913_6 = Arg5913[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [[Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, Arg5913_1, []]], Arg5913_3, Arg5913_4, Arg5913_5, (new Shen.Freeze([Arg5913_1, Arg5913_2, Arg5913_3, Arg5913_4, Arg5913_5, Arg5913_6], function(Arg5915) {
  var Arg5915_0 = Arg5915[0], Arg5915_1 = Arg5915[1], Arg5915_2 = Arg5915[2], Arg5915_3 = Arg5915[3], Arg5915_4 = Arg5915[4], Arg5915_5 = Arg5915[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5915_1, Arg5915_2, Arg5915_3, Arg5915_4, Arg5915_5]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.<-sem"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R2, R1, R0, Arg5755_1, R3, R4, Arg5755_2, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5917) {
  var Arg5917_0 = Arg5917[0], Arg5917_1 = Arg5917[1], Arg5917_2 = Arg5917[2], Arg5917_3 = Arg5917[3], Arg5917_4 = Arg5917[4], Arg5917_5 = Arg5917[5], Arg5917_6 = Arg5917[6], Arg5917_7 = Arg5917[7], Arg5917_8 = Arg5917[8], Arg5917_9 = Arg5917[9], Arg5917_10 = Arg5917[10], Arg5917_11 = Arg5917[11], Arg5917_12 = Arg5917[12], Arg5917_13 = Arg5917[13], Arg5917_14 = Arg5917[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5917_1, [Shen.type_cons, Arg5917_0, [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg5917_5, []]]], Arg5917_6, Arg5917_7, (new Shen.Freeze([Arg5917_0, Arg5917_1, Arg5917_2, Arg5917_3, Arg5917_4, Arg5917_5, Arg5917_6, Arg5917_7, Arg5917_8], function(Arg5919) {
  var Arg5919_0 = Arg5919[0], Arg5919_1 = Arg5919[1], Arg5919_2 = Arg5919[2], Arg5919_3 = Arg5919[3], Arg5919_4 = Arg5919[4], Arg5919_5 = Arg5919[5], Arg5919_6 = Arg5919[6], Arg5919_7 = Arg5919[7], Arg5919_8 = Arg5919[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5919_2, Arg5919_7, (new Shen.Freeze([Arg5919_1, Arg5919_2, Arg5919_3, Arg5919_4, Arg5919_5, Arg5919_6, Arg5919_7, Arg5919_8], function(Arg5921) {
  var Arg5921_0 = Arg5921[0], Arg5921_1 = Arg5921[1], Arg5921_2 = Arg5921[2], Arg5921_3 = Arg5921[3], Arg5921_4 = Arg5921[4], Arg5921_5 = Arg5921[5], Arg5921_6 = Arg5921[6], Arg5921_7 = Arg5921[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5921_3, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Shen.call(Shen.fns["shen.lazyderef"], [Arg5921_0, Arg5921_6])]), Arg5921_6, (new Shen.Freeze([Arg5921_0, Arg5921_1, Arg5921_2, Arg5921_3, Arg5921_4, Arg5921_5, Arg5921_6, Arg5921_7], function(Arg5923) {
  var Arg5923_0 = Arg5923[0], Arg5923_1 = Arg5923[1], Arg5923_2 = Arg5923[2], Arg5923_3 = Arg5923[3], Arg5923_4 = Arg5923[4], Arg5923_5 = Arg5923[5], Arg5923_6 = Arg5923[6], Arg5923_7 = Arg5923[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5923_1, Arg5923_6, (new Shen.Freeze([Arg5923_1, Arg5923_2, Arg5923_3, Arg5923_4, Arg5923_5, Arg5923_6, Arg5923_7], function(Arg5925) {
  var Arg5925_0 = Arg5925[0], Arg5925_1 = Arg5925[1], Arg5925_2 = Arg5925[2], Arg5925_3 = Arg5925[3], Arg5925_4 = Arg5925[4], Arg5925_5 = Arg5925[5], Arg5925_6 = Arg5925[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5925_2, Arg5925_1, [Shen.type_cons, [Shen.type_cons, Arg5925_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5925_3, []]]], Arg5925_4], Arg5925_5, Arg5925_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5755_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "symbol"], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5755_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg5755_3]),
  (R1 = R1))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-hyps"], [Arg5755_2, R1, Arg5755_3, (new Shen.Freeze([Arg5755_2, Arg5755_0, Arg5755_1, R1, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5927) {
  var Arg5927_0 = Arg5927[0], Arg5927_1 = Arg5927[1], Arg5927_2 = Arg5927[2], Arg5927_3 = Arg5927[3], Arg5927_4 = Arg5927[4], Arg5927_5 = Arg5927[5], Arg5927_6 = Arg5927[6], Arg5927_7 = Arg5927[7], Arg5927_8 = Arg5927[8], Arg5927_9 = Arg5927[9], Arg5927_10 = Arg5927[10], Arg5927_11 = Arg5927[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg5927_1, Arg5927_2, Arg5927_3, Arg5927_4, Arg5927_5]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R2, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5929) {
  var Arg5929_0 = Arg5929[0], Arg5929_1 = Arg5929[1], Arg5929_2 = Arg5929[2], Arg5929_3 = Arg5929[3], Arg5929_4 = Arg5929[4], Arg5929_5 = Arg5929[5], Arg5929_6 = Arg5929[6], Arg5929_7 = Arg5929[7], Arg5929_8 = Arg5929[8], Arg5929_9 = Arg5929[9], Arg5929_10 = Arg5929[10], Arg5929_11 = Arg5929[11], Arg5929_12 = Arg5929[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg5929_1, Arg5929_2]], Arg5929_3, Arg5929_4, Arg5929_5, Arg5929_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5755_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, (new Shen.Freeze([R0, R1, R2, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4, R0, Arg5755_0, Arg5755_1, Arg5755_2, Arg5755_3, Arg5755_4], function(Arg5931) {
  var Arg5931_0 = Arg5931[0], Arg5931_1 = Arg5931[1], Arg5931_2 = Arg5931[2], Arg5931_3 = Arg5931[3], Arg5931_4 = Arg5931[4], Arg5931_5 = Arg5931[5], Arg5931_6 = Arg5931[6], Arg5931_7 = Arg5931[7], Arg5931_8 = Arg5931[8], Arg5931_9 = Arg5931[9], Arg5931_10 = Arg5931[10], Arg5931_11 = Arg5931[11], Arg5931_12 = Arg5931[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defcc"], [[Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, Arg5931_1, Arg5931_2]], Arg5931_3, Arg5931_4, Arg5931_5, Arg5931_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "unit"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, Arg5755_4])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "unit"], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["cut"], [R0, Arg5755_3, Arg5755_4]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5755_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.process-datatype"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5755_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5755_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5755_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_0, Arg5755_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5755_1, Arg5755_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5755_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg5755_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5755_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5755_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5755_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, (Shen.globals["shen.*datatypes*"]), Arg5755_3, (new Shen.Freeze([Arg5755_0, Arg5755_1, Arg5755_2, R1, Arg5755_3, Arg5755_4], function(Arg5933) {
  var Arg5933_0 = Arg5933[0], Arg5933_1 = Arg5933[1], Arg5933_2 = Arg5933[2], Arg5933_3 = Arg5933[3], Arg5933_4 = Arg5933[4], Arg5933_5 = Arg5933[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [[Shen.type_cons, Arg5933_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5933_1, []]]], Arg5933_2, Arg5933_3, Arg5933_4, Arg5933_5]);});})}))]))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.th*"];





Shen.fns["shen.t*-hyps"] = [Shen.type_func, function shen_user_lambda5936(Arg5935) {
  if (Arg5935.length < 4) return [Shen.type_func, shen_user_lambda5936, 4, Arg5935];
  var Arg5935_0 = Arg5935[0], Arg5935_1 = Arg5935[1], Arg5935_2 = Arg5935[2], Arg5935_3 = Arg5935[3];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5935_0, Arg5935_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5935_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5935_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5935_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "list"], Arg5935_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R5, []]], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5935_0, Arg5935_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5935_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg5935_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg5935_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5935_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5935_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R1, []], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5935_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, "*"], Arg5935_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R7 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R7, []], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg5935_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R0 = R6))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]]], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R0 = R6))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5935_0, Arg5935_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5935_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg5935_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5935_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "vector"], Arg5935_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R5, []]], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg5935_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5935_0, Arg5935_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5935_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5935_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg5935_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "string"], Arg5935_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5935_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg5935_2])]], Arg5935_2, Arg5935_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg5935_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg5935_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg5935_2])]], Arg5935_2, Arg5935_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg5935_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5935_2]),
  (R0 = R4))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5935_0, Arg5935_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5935_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5935_1, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg5935_2]), Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg5935_2])], Arg5935_2, (new Shen.Freeze([Arg5935_1, R1, R0, R2, Arg5935_2, Arg5935_3], function(Arg5937) {
  var Arg5937_0 = Arg5937[0], Arg5937_1 = Arg5937[1], Arg5937_2 = Arg5937[2], Arg5937_3 = Arg5937[3], Arg5937_4 = Arg5937[4], Arg5937_5 = Arg5937[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-hyps"], [Arg5937_2, Arg5937_3, Arg5937_4, Arg5937_5]);});})}))]);}))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.t*-hyps"];





Shen.fns["shen.show"] = [Shen.type_func, function shen_user_lambda5940(Arg5939) {
  if (Arg5939.length < 4) return [Shen.type_func, shen_user_lambda5940, 4, Arg5939];
  var Arg5939_0 = Arg5939[0], Arg5939_1 = Arg5939[1], Arg5939_2 = Arg5939[2], Arg5939_3 = Arg5939[3];
  return (((Shen.globals["shen.*spy*"]))
  ? (Shen.call(Shen.fns["shen.line"], []),
  Shen.call(Shen.fns["shen.show-p"], [Shen.call(Shen.fns["shen.deref"], [Arg5939_0, Arg5939_2])]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["shen.show-assumptions"], [Shen.call(Shen.fns["shen.deref"], [Arg5939_1, Arg5939_2]), 1]),
  Shen.call(Shen.fns["shen.prhush"], ["\x0a> ", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.pause-for-user"], []),
  Shen.thaw(Arg5939_3))
  : Shen.thaw(Arg5939_3))}, 4, [], "shen.show"];





Shen.fns["shen.line"] = [Shen.type_func, function shen_user_lambda5942(Arg5941) {
  if (Arg5941.length < 0) return [Shen.type_func, shen_user_lambda5942, 0, Arg5941];
  var R0;
  return ((R0 = Shen.call(Shen.fns["inferences"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("____________________________________________________________ " + Shen.call(Shen.fns["shen.app"], [R0, (" inference" + Shen.call(Shen.fns["shen.app"], [((Shen.unwind_tail(Shen.$eq$(1, R0)))
  ? ""
  : "s"), " \x0a?- ", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.line"];





Shen.fns["shen.show-p"] = [Shen.type_func, function shen_user_lambda5944(Arg5943) {
  if (Arg5943.length < 1) return [Shen.type_func, shen_user_lambda5944, 1, Arg5943];
  var Arg5943_0 = Arg5943[0];
  return (((Shen.is_type(Arg5943_0, Shen.type_cons) && (Shen.is_type(Arg5943_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg5943_0[2][1])) && (Shen.is_type(Arg5943_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5943_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg5943_0[1], (" : " + Shen.call(Shen.fns["shen.app"], [Arg5943_0[2][2][1], "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], [])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg5943_0, "", [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], [])]);}))}, 1, [], "shen.show-p"];





Shen.fns["shen.show-assumptions"] = [Shen.type_func, function shen_user_lambda5946(Arg5945) {
  if (Arg5945.length < 2) return [Shen.type_func, shen_user_lambda5946, 2, Arg5945];
  var Arg5945_0 = Arg5945[0], Arg5945_1 = Arg5945[1];
  return ((Shen.empty$question$(Arg5945_0))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.is_type(Arg5945_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg5945_1, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.show-p"], [Arg5945_0[1]]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.show-assumptions"], [Arg5945_0[2], (Arg5945_1 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.show-assumptions"]]);})))}, 2, [], "shen.show-assumptions"];





Shen.fns["shen.pause-for-user"] = [Shen.type_func, function shen_user_lambda5948(Arg5947) {
  if (Arg5947.length < 0) return [Shen.type_func, shen_user_lambda5948, 0, Arg5947];
  var R0;
  return ((R0 = Shen.read_byte(Shen.call(Shen.fns["stinput"], []))),
  ((Shen.unwind_tail(Shen.$eq$(R0, 94)))
  ? (function() {
  return Shen.simple_error("input aborted\x0a");})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);})))}, 0, [], "shen.pause-for-user"];





Shen.fns["shen.typedf?"] = [Shen.type_func, function shen_user_lambda5950(Arg5949) {
  if (Arg5949.length < 1) return [Shen.type_func, shen_user_lambda5950, 1, Arg5949];
  var Arg5949_0 = Arg5949[0];
  return Shen.is_type(Shen.call(Shen.fns["assoc"], [Arg5949_0, (Shen.globals["shen.*signedfuncs*"])]), Shen.type_cons)}, 1, [], "shen.typedf?"];





Shen.fns["shen.sigf"] = [Shen.type_func, function shen_user_lambda5952(Arg5951) {
  if (Arg5951.length < 1) return [Shen.type_func, shen_user_lambda5952, 1, Arg5951];
  var Arg5951_0 = Arg5951[0];
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg5951_0]);})}, 1, [], "shen.sigf"];





Shen.fns["shen.placeholder"] = [Shen.type_func, function shen_user_lambda5954(Arg5953) {
  if (Arg5953.length < 0) return [Shen.type_func, shen_user_lambda5954, 0, Arg5953];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "&&"]]);})}, 0, [], "shen.placeholder"];





Shen.fns["shen.base"] = [Shen.type_func, function shen_user_lambda5956(Arg5955) {
  if (Arg5955.length < 4) return [Shen.type_func, shen_user_lambda5956, 4, Arg5955];
  var Arg5955_0 = Arg5955[0], Arg5955_1 = Arg5955[1], Arg5955_2 = Arg5955[2], Arg5955_3 = Arg5955[3];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_1, Arg5955_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_0, Arg5955_2])) == 'number'), Arg5955_2, Arg5955_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "number"], Arg5955_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_0, Arg5955_2])) == 'number'), Arg5955_2, Arg5955_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5955_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_1, Arg5955_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_0, Arg5955_2])), Arg5955_2, Arg5955_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "boolean"], Arg5955_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_0, Arg5955_2])), Arg5955_2, Arg5955_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5955_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_1, Arg5955_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_0, Arg5955_2])) == 'string'), Arg5955_2, Arg5955_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "string"], Arg5955_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_0, Arg5955_2])) == 'string'), Arg5955_2, Arg5955_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5955_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_1, Arg5955_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_0, Arg5955_2]), Shen.type_symbol), Arg5955_2, (new Shen.Freeze([Arg5955_0, Arg5955_1, Arg5955_3, Arg5955_2], function(Arg5957) {
  var Arg5957_0 = Arg5957[0], Arg5957_1 = Arg5957[1], Arg5957_2 = Arg5957[2], Arg5957_3 = Arg5957[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5957_0, Arg5957_3])])), Arg5957_3, Arg5957_2]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "symbol"], Arg5955_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_0, Arg5955_2]), Shen.type_symbol), Arg5955_2, (new Shen.Freeze([R0, Arg5955_0, Arg5955_1, Arg5955_3, Arg5955_2], function(Arg5959) {
  var Arg5959_0 = Arg5959[0], Arg5959_1 = Arg5959[1], Arg5959_2 = Arg5959[2], Arg5959_3 = Arg5959[3], Arg5959_4 = Arg5959[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5959_1, Arg5959_4])])), Arg5959_4, Arg5959_3]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5955_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_0, Arg5955_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5955_1, Arg5955_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5955_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5955_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? (R1[1],
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5955_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.thaw(Arg5955_3))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg5955_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5955_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5955_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg5955_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, []], Arg5955_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5955_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5955_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "list"], Arg5955_2]),
  ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5955_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0[1],
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5955_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg5955_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg5955_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg5955_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5955_2]),
  (R0 = R2))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg5955_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, R2, []], Arg5955_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg5955_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5955_2]),
  (R0 = R2))
  : (R0 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg5955_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5955_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R1, []]], Arg5955_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5955_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg5955_2]),
  R1)
  : false)))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.base"];





Shen.fns["shen.by_hypothesis"] = [Shen.type_func, function shen_user_lambda5962(Arg5961) {
  if (Arg5961.length < 5) return [Shen.type_func, shen_user_lambda5962, 5, Arg5961];
  var Arg5961_0 = Arg5961[0], Arg5961_1 = Arg5961[1], Arg5961_2 = Arg5961[2], Arg5961_3 = Arg5961[3], Arg5961_4 = Arg5961[4];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5961_2, Arg5961_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5961_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5961_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5961_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5961_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R0 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5961_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["identical"], [Arg5961_0, R1, Arg5961_3, (new Shen.Freeze([R1, R0, Arg5961_2, Arg5961_0, Arg5961_1, Arg5961_3, Arg5961_4], function(Arg5963) {
  var Arg5963_0 = Arg5963[0], Arg5963_1 = Arg5963[1], Arg5963_2 = Arg5963[2], Arg5963_3 = Arg5963[3], Arg5963_4 = Arg5963[4], Arg5963_5 = Arg5963[5], Arg5963_6 = Arg5963[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg5963_4, Arg5963_1, Arg5963_5, Arg5963_6]);});})}))])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5961_2, Arg5961_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.by_hypothesis"], [Arg5961_0, Arg5961_1, R0, Arg5961_3, Arg5961_4]);}))
  : false))
  : R0))}, 5, [], "shen.by_hypothesis"];





Shen.fns["shen.t*-def"] = [Shen.type_func, function shen_user_lambda5966(Arg5965) {
  if (Arg5965.length < 5) return [Shen.type_func, shen_user_lambda5966, 5, Arg5965];
  var Arg5965_0 = Arg5965[0], Arg5965_1 = Arg5965[1], Arg5965_2 = Arg5965[2], Arg5965_3 = Arg5965[3], Arg5965_4 = Arg5965[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5965_0, Arg5965_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg5965_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg5965_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.newpv"], [Arg5965_3]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defh"], [Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<sig+rules>"], R1, [Shen.type_func, function shen_user_lambda5968(Arg5967) {
  if (Arg5967.length < 1) return [Shen.type_func, shen_user_lambda5968, 1, Arg5967];
  var Arg5967_0 = Arg5967[0];
  return ((Shen.is_type(Arg5967_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg5967_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]]), R0, Arg5965_1, Arg5965_2, Arg5965_3, Arg5965_4]);}))
  : false))
  : false))
  : false))}, 5, [], "shen.t*-def"];





Shen.fns["shen.t*-defh"] = [Shen.type_func, function shen_user_lambda5970(Arg5969) {
  if (Arg5969.length < 6) return [Shen.type_func, shen_user_lambda5970, 6, Arg5969];
  var Arg5969_0 = Arg5969[0], Arg5969_1 = Arg5969[1], Arg5969_2 = Arg5969[2], Arg5969_3 = Arg5969[3], Arg5969_4 = Arg5969[4], Arg5969_5 = Arg5969[5];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5969_0, Arg5969_4])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defhh"], [R1, Shen.call(Shen.fns["shen.ue"], [R1]), Arg5969_1, Arg5969_2, Arg5969_3, R0, Arg5969_4, Arg5969_5]);}))
  : false))}, 6, [], "shen.t*-defh"];





Shen.fns["shen.t*-defhh"] = [Shen.type_func, function shen_user_lambda5972(Arg5971) {
  if (Arg5971.length < 8) return [Shen.type_func, shen_user_lambda5972, 8, Arg5971];
  var Arg5971_0 = Arg5971[0], Arg5971_1 = Arg5971[1], Arg5971_2 = Arg5971[2], Arg5971_3 = Arg5971[3], Arg5971_4 = Arg5971[4], Arg5971_5 = Arg5971[5], Arg5971_6 = Arg5971[6], Arg5971_7 = Arg5971[7];
  return (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5971_5, Arg5971_1, 1, Arg5971_2, [Shen.type_cons, [Shen.type_cons, Arg5971_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg5971_1, []]]], Arg5971_4], Arg5971_6, (new Shen.Freeze([Arg5971_5, Arg5971_1, Arg5971_4, Arg5971_2, Arg5971_0, Arg5971_3, Arg5971_6, Arg5971_7], function(Arg5973) {
  var Arg5973_0 = Arg5973[0], Arg5973_1 = Arg5973[1], Arg5973_2 = Arg5973[2], Arg5973_3 = Arg5973[3], Arg5973_4 = Arg5973[4], Arg5973_5 = Arg5973[5], Arg5973_6 = Arg5973[6], Arg5973_7 = Arg5973[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.memo"], [Arg5973_3, Arg5973_4, Arg5973_5, Arg5973_6, Arg5973_7]);});})}))]);}))}, 8, [], "shen.t*-defhh"];





Shen.fns["shen.memo"] = [Shen.type_func, function shen_user_lambda5976(Arg5975) {
  if (Arg5975.length < 5) return [Shen.type_func, shen_user_lambda5976, 5, Arg5975];
  var Arg5975_0 = Arg5975[0], Arg5975_1 = Arg5975[1], Arg5975_2 = Arg5975[2], Arg5975_3 = Arg5975[3], Arg5975_4 = Arg5975[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg5975_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg5975_2, Arg5975_1, Arg5975_3, (new Shen.Freeze([Arg5975_1, R0, Arg5975_0, Arg5975_2, Arg5975_3, Arg5975_4], function(Arg5977) {
  var Arg5977_0 = Arg5977[0], Arg5977_1 = Arg5977[1], Arg5977_2 = Arg5977[2], Arg5977_3 = Arg5977[3], Arg5977_4 = Arg5977[4], Arg5977_5 = Arg5977[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg5977_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5977_2, Arg5977_4]), Shen.call(Shen.fns["shen.lazyderef"], [Arg5977_3, Arg5977_4])]), Arg5977_4, Arg5977_5]);});})}))]);}))}, 5, [], "shen.memo"];





Shen.fns["shen.<sig+rules>"] = [Shen.type_func, function shen_user_lambda5980(Arg5979) {
  if (Arg5979.length < 1) return [Shen.type_func, shen_user_lambda5980, 1, Arg5979];
  var Arg5979_0 = Arg5979[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg5979_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? Shen.fail_obj
  : R0))}, 1, [], "shen.<sig+rules>"];





Shen.fns["shen.ue"] = [Shen.type_func, function shen_user_lambda5982(Arg5981) {
  if (Arg5981.length < 1) return [Shen.type_func, shen_user_lambda5982, 1, Arg5981];
  var Arg5981_0 = Arg5981[0];
  return (((Shen.is_type(Arg5981_0, Shen.type_cons) && (Shen.is_type(Arg5981_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5981_0[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg5981_0[1], [Shen.type_symbol, "protect"]))))))
  ? Arg5981_0
  : ((Shen.is_type(Arg5981_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.ue"], Arg5981_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg5981_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Arg5981_0]);})
  : Arg5981_0)))}, 1, [], "shen.ue"];





Shen.fns["shen.ues"] = [Shen.type_func, function shen_user_lambda5984(Arg5983) {
  if (Arg5983.length < 1) return [Shen.type_func, shen_user_lambda5984, 1, Arg5983];
  var Arg5983_0 = Arg5983[0];
  return ((Shen.call(Shen.fns["shen.ue?"], [Arg5983_0]))
  ? [Shen.type_cons, Arg5983_0, []]
  : ((Shen.is_type(Arg5983_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.ues"], [Arg5983_0[1]]), Shen.call(Shen.fns["shen.ues"], [Arg5983_0[2]])]);})
  : []))}, 1, [], "shen.ues"];





Shen.fns["shen.ue?"] = [Shen.type_func, function shen_user_lambda5986(Arg5985) {
  if (Arg5985.length < 1) return [Shen.type_func, shen_user_lambda5986, 1, Arg5985];
  var Arg5985_0 = Arg5985[0];
  return (Shen.is_type(Arg5985_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.ue-h?"], [Shen.str(Arg5985_0)]))}, 1, [], "shen.ue?"];





Shen.fns["shen.ue-h?"] = [Shen.type_func, function shen_user_lambda5988(Arg5987) {
  if (Arg5987.length < 1) return [Shen.type_func, shen_user_lambda5988, 1, Arg5987];
  var Arg5987_0 = Arg5987[0];
  return (((Shen.call(Shen.fns["shen.+string?"], [Arg5987_0]) && (Shen.unwind_tail(Shen.$eq$("&", Arg5987_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg5987_0)]) && Shen.unwind_tail(Shen.$eq$("&", Shen.tlstr(Arg5987_0)[0]))))))
  ? true
  : false)}, 1, [], "shen.ue-h?"];





Shen.fns["shen.t*-rules"] = [Shen.type_func, function shen_user_lambda5990(Arg5989) {
  if (Arg5989.length < 7) return [Shen.type_func, shen_user_lambda5990, 7, Arg5989];
  var Arg5989_0 = Arg5989[0], Arg5989_1 = Arg5989[1], Arg5989_2 = Arg5989[2], Arg5989_3 = Arg5989[3], Arg5989_4 = Arg5989[4], Arg5989_5 = Arg5989[5], Arg5989_6 = Arg5989[6];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5989_0, Arg5989_5])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg5989_6))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5989_0, Arg5989_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5989_5])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg5989_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5989_5])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg5989_5])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R1[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5989_1, Arg5989_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5989_5])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5989_5])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg5989_5])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [[Shen.type_cons, [], [Shen.type_cons, Shen.call(Shen.fns["shen.ue"], [R2]), []]], R1, Arg5989_4, Arg5989_5, (new Shen.Freeze([R2, R3, R1, Arg5989_0, R0, Arg5989_1, Arg5989_4, Arg5989_2, Arg5989_3, Arg5989_5, Arg5989_6], function(Arg5991) {
  var Arg5991_0 = Arg5991[0], Arg5991_1 = Arg5991[1], Arg5991_2 = Arg5991[2], Arg5991_3 = Arg5991[3], Arg5991_4 = Arg5991[4], Arg5991_5 = Arg5991[5], Arg5991_6 = Arg5991[6], Arg5991_7 = Arg5991[7], Arg5991_8 = Arg5991[8], Arg5991_9 = Arg5991[9], Arg5991_10 = Arg5991[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5991_4, Arg5991_9, (new Shen.Freeze([Arg5991_4, Arg5991_1, Arg5991_2, Arg5991_7, Arg5991_8, Arg5991_6, Arg5991_9, Arg5991_10], function(Arg5993) {
  var Arg5993_0 = Arg5993[0], Arg5993_1 = Arg5993[1], Arg5993_2 = Arg5993[2], Arg5993_3 = Arg5993[3], Arg5993_4 = Arg5993[4], Arg5993_5 = Arg5993[5], Arg5993_6 = Arg5993[6], Arg5993_7 = Arg5993[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5993_1, Arg5993_2, (Arg5993_3 + 1), Arg5993_4, Arg5993_5, Arg5993_6, Arg5993_7]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5989_0, Arg5989_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [Shen.call(Shen.fns["shen.ue"], [R2]), Arg5989_1, Arg5989_4, Arg5989_5, (new Shen.Freeze([R2, R0, R1, Arg5989_1, Arg5989_2, Arg5989_3, Arg5989_4, Arg5989_5, Arg5989_6, Arg5989_2, Arg5989_3, Arg5989_5, Arg5989_6], function(Arg5995) {
  var Arg5995_0 = Arg5995[0], Arg5995_1 = Arg5995[1], Arg5995_2 = Arg5995[2], Arg5995_3 = Arg5995[3], Arg5995_4 = Arg5995[4], Arg5995_5 = Arg5995[5], Arg5995_6 = Arg5995[6], Arg5995_7 = Arg5995[7], Arg5995_8 = Arg5995[8], Arg5995_9 = Arg5995[9], Arg5995_10 = Arg5995[10], Arg5995_11 = Arg5995[11], Arg5995_12 = Arg5995[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg5995_1, Arg5995_7, (new Shen.Freeze([Arg5995_1, Arg5995_2, Arg5995_3, Arg5995_4, Arg5995_5, Arg5995_6, Arg5995_7, Arg5995_8], function(Arg5997) {
  var Arg5997_0 = Arg5997[0], Arg5997_1 = Arg5997[1], Arg5997_2 = Arg5997[2], Arg5997_3 = Arg5997[3], Arg5997_4 = Arg5997[4], Arg5997_5 = Arg5997[5], Arg5997_6 = Arg5997[6], Arg5997_7 = Arg5997[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg5997_1, Arg5997_2, (Arg5997_3 + 1), Arg5997_4, Arg5997_5, Arg5997_6, Arg5997_7]);});})}))]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg5989_5])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5989_2, Arg5989_5]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg5989_3, Arg5989_5]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg5989_5, Arg5989_6]))
  : R1))
  : R1))
  : R1))]);}))}, 7, [], "shen.t*-rules"];





Shen.fns["shen.t*-rule"] = [Shen.type_func, function shen_user_lambda6000(Arg5999) {
  if (Arg5999.length < 5) return [Shen.type_func, shen_user_lambda6000, 5, Arg5999];
  var Arg5999_0 = Arg5999[0], Arg5999_1 = Arg5999[1], Arg5999_2 = Arg5999[2], Arg5999_3 = Arg5999[3], Arg5999_4 = Arg5999[4];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5999_0, Arg5999_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5999_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5999_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg5999_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg5999_3, (new Shen.Freeze([R1, Arg5999_0, Arg5999_1, R0, Arg5999_2, Arg5999_3, Arg5999_4], function(Arg6001) {
  var Arg6001_0 = Arg6001[0], Arg6001_1 = Arg6001[1], Arg6001_2 = Arg6001[2], Arg6001_3 = Arg6001[3], Arg6001_4 = Arg6001[4], Arg6001_5 = Arg6001[5], Arg6001_6 = Arg6001[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Shen.call(Shen.fns["shen.curry"], [Arg6001_0]), Arg6001_2, Arg6001_4, Arg6001_5, Arg6001_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5999_0, Arg5999_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5999_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5999_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R4 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5999_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg5999_1, Arg5999_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5999_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg5999_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg5999_3])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg5999_3])),
  ((Shen.empty$question$(R6))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*-pattern"], [R3, R5, Arg5999_3, (new Shen.Freeze([R0, R2, R4, R1, R3, R5, Arg5999_2, Arg5999_3, Arg5999_4], function(Arg6003) {
  var Arg6003_0 = Arg6003[0], Arg6003_1 = Arg6003[1], Arg6003_2 = Arg6003[2], Arg6003_3 = Arg6003[3], Arg6003_4 = Arg6003[4], Arg6003_5 = Arg6003[5], Arg6003_6 = Arg6003[6], Arg6003_7 = Arg6003[7], Arg6003_8 = Arg6003[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6003_0, Arg6003_7, (new Shen.Freeze([Arg6003_0, Arg6003_1, Arg6003_2, Arg6003_3, Arg6003_4, Arg6003_5, Arg6003_6, Arg6003_7, Arg6003_8], function(Arg6005) {
  var Arg6005_0 = Arg6005[0], Arg6005_1 = Arg6005[1], Arg6005_2 = Arg6005[2], Arg6005_3 = Arg6005[3], Arg6005_4 = Arg6005[4], Arg6005_5 = Arg6005[5], Arg6005_6 = Arg6005[6], Arg6005_7 = Arg6005[7], Arg6005_8 = Arg6005[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rule"], [[Shen.type_cons, Arg6005_1, [Shen.type_cons, Arg6005_2, []]], Arg6005_3, [Shen.type_cons, [Shen.type_cons, Arg6005_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6005_5, []]]], Arg6005_6], Arg6005_7, Arg6005_8]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 5, [], "shen.t*-rule"];





Shen.fns["shen.t*-action"] = [Shen.type_func, function shen_user_lambda6008(Arg6007) {
  if (Arg6007.length < 5) return [Shen.type_func, shen_user_lambda6008, 5, Arg6007];
  var Arg6007_0 = Arg6007[0], Arg6007_1 = Arg6007[1], Arg6007_2 = Arg6007[2], Arg6007_3 = Arg6007[3], Arg6007_4 = Arg6007[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6007_0, Arg6007_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6007_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6007_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6007_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6007_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6007_3, (new Shen.Freeze([R3, R1, R0, Arg6007_0, Arg6007_1, Arg6007_2, Arg6007_3, Arg6007_4], function(Arg6009) {
  var Arg6009_0 = Arg6009[0], Arg6009_1 = Arg6009[1], Arg6009_2 = Arg6009[2], Arg6009_3 = Arg6009[3], Arg6009_4 = Arg6009[4], Arg6009_5 = Arg6009[5], Arg6009_6 = Arg6009[6], Arg6009_7 = Arg6009[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6009_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], Arg6009_5, Arg6009_6, (new Shen.Freeze([Arg6009_2, Arg6009_0, Arg6009_4, Arg6009_1, Arg6009_5, Arg6009_6, Arg6009_7], function(Arg6011) {
  var Arg6011_0 = Arg6011[0], Arg6011_1 = Arg6011[1], Arg6011_2 = Arg6011[2], Arg6011_3 = Arg6011[3], Arg6011_4 = Arg6011[4], Arg6011_5 = Arg6011[5], Arg6011_6 = Arg6011[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6011_0, Arg6011_5, (new Shen.Freeze([Arg6011_0, Arg6011_1, Arg6011_2, Arg6011_3, Arg6011_4, Arg6011_5, Arg6011_6], function(Arg6013) {
  var Arg6013_0 = Arg6013[0], Arg6013_1 = Arg6013[1], Arg6013_2 = Arg6013[2], Arg6013_3 = Arg6013[3], Arg6013_4 = Arg6013[4], Arg6013_5 = Arg6013[5], Arg6013_6 = Arg6013[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Arg6013_1, Arg6013_2, [Shen.type_cons, [Shen.type_cons, Arg6013_3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "verified"], []]]], Arg6013_4], Arg6013_5, Arg6013_6]);});})}))]);});})}))]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6007_0, Arg6007_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6007_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6007_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6007_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6007_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6007_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail-if"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6007_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6007_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6007_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6007_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6007_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6007_3, (new Shen.Freeze([R3, R1, R0, Arg6007_0, Arg6007_1, Arg6007_2, Arg6007_3, Arg6007_4], function(Arg6015) {
  var Arg6015_0 = Arg6015[0], Arg6015_1 = Arg6015[1], Arg6015_2 = Arg6015[2], Arg6015_3 = Arg6015[3], Arg6015_4 = Arg6015[4], Arg6015_5 = Arg6015[5], Arg6015_6 = Arg6015[6], Arg6015_7 = Arg6015[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, Arg6015_0, [Shen.type_cons, Arg6015_1, []]], []]], [Shen.type_cons, Arg6015_1, []]]], Arg6015_4, Arg6015_5, Arg6015_6, Arg6015_7]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6007_0, Arg6007_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6007_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6007_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6007_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6007_3, (new Shen.Freeze([R0, R1, Arg6007_0, Arg6007_1, Arg6007_2, Arg6007_3, Arg6007_4], function(Arg6017) {
  var Arg6017_0 = Arg6017[0], Arg6017_1 = Arg6017[1], Arg6017_2 = Arg6017[2], Arg6017_3 = Arg6017[3], Arg6017_4 = Arg6017[4], Arg6017_5 = Arg6017[5], Arg6017_6 = Arg6017[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6017_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]], []]], [Shen.type_cons, Arg6017_1, []]]], Arg6017_3, Arg6017_4, Arg6017_5, Arg6017_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6007_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6007_1, []]]], Arg6007_2, Arg6007_3, Arg6007_4]))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.t*-action"];





Shen.fns["shen.t*-pattern"] = [Shen.type_func, function shen_user_lambda6020(Arg6019) {
  if (Arg6019.length < 4) return [Shen.type_func, shen_user_lambda6020, 4, Arg6019];
  var Arg6019_0 = Arg6019[0], Arg6019_1 = Arg6019[1], Arg6019_2 = Arg6019[2], Arg6019_3 = Arg6019[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6019_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tms->hyp"], [Shen.call(Shen.fns["shen.ues"], [Arg6019_0]), R1, Arg6019_2, (new Shen.Freeze([R0, Arg6019_0, Arg6019_1, R1, Arg6019_2, Arg6019_3], function(Arg6021) {
  var Arg6021_0 = Arg6021[0], Arg6021_1 = Arg6021[1], Arg6021_2 = Arg6021[2], Arg6021_3 = Arg6021[3], Arg6021_4 = Arg6021[4], Arg6021_5 = Arg6021[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6021_0, Arg6021_4, (new Shen.Freeze([Arg6021_0, Arg6021_1, Arg6021_2, Arg6021_3, Arg6021_4, Arg6021_5], function(Arg6023) {
  var Arg6023_0 = Arg6023[0], Arg6023_1 = Arg6023[1], Arg6023_2 = Arg6023[2], Arg6023_3 = Arg6023[3], Arg6023_4 = Arg6023[4], Arg6023_5 = Arg6023[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6023_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6023_2, []]]], Arg6023_3, Arg6023_4, Arg6023_5]);});})}))]);});})}))]))]);}))}, 4, [], "shen.t*-pattern"];





Shen.fns["shen.tms->hyp"] = [Shen.type_func, function shen_user_lambda6026(Arg6025) {
  if (Arg6025.length < 4) return [Shen.type_func, shen_user_lambda6026, 4, Arg6025];
  var Arg6025_0 = Arg6025[0], Arg6025_1 = Arg6025[1], Arg6025_2 = Arg6025[2], Arg6025_3 = Arg6025[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6025_0, Arg6025_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6025_1, Arg6025_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6025_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg6025_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6025_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6025_2]),
  (R0 = R1))
  : (R0 = false))))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6025_0, Arg6025_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6025_1, Arg6025_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6025_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6025_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6025_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6025_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? (R5[1],
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6025_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [R4, R1, Arg6025_2, (new Shen.Freeze([R4, R1, R0, R5, Arg6025_2, Arg6025_3], function(Arg6027) {
  var Arg6027_0 = Arg6027[0], Arg6027_1 = Arg6027[1], Arg6027_2 = Arg6027[2], Arg6027_3 = Arg6027[3], Arg6027_4 = Arg6027[4], Arg6027_5 = Arg6027[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6027_2, Arg6027_3, Arg6027_4, Arg6027_5]);});})}))]);}))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6025_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6025_2, (new Shen.Freeze([R4, R1, R0, R3, Arg6025_2, Arg6025_3, R5, Arg6025_2], function(Arg6029) {
  var Arg6029_0 = Arg6029[0], Arg6029_1 = Arg6029[1], Arg6029_2 = Arg6029[2], Arg6029_3 = Arg6029[3], Arg6029_4 = Arg6029[4], Arg6029_5 = Arg6029[5], Arg6029_6 = Arg6029[6], Arg6029_7 = Arg6029[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6029_2, Arg6029_3, Arg6029_4, Arg6029_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6025_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6025_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R3, []], Arg6025_2]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6025_2, (new Shen.Freeze([R4, R1, R0, R3, Arg6025_2, Arg6025_3, R5, Arg6025_2], function(Arg6031) {
  var Arg6031_0 = Arg6031[0], Arg6031_1 = Arg6031[1], Arg6031_2 = Arg6031[2], Arg6031_3 = Arg6031[3], Arg6031_4 = Arg6031[4], Arg6031_5 = Arg6031[5], Arg6031_6 = Arg6031[6], Arg6031_7 = Arg6031[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6031_2, Arg6031_3, Arg6031_4, Arg6031_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6025_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, ":"], Arg6025_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6025_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? (R3[1],
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6025_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6025_2, (new Shen.Freeze([R4, R1, R0, R3, Arg6025_2, Arg6025_3, R5, Arg6025_2], function(Arg6033) {
  var Arg6033_0 = Arg6033[0], Arg6033_1 = Arg6033[1], Arg6033_2 = Arg6033[2], Arg6033_3 = Arg6033[3], Arg6033_4 = Arg6033[4], Arg6033_5 = Arg6033[5], Arg6033_6 = Arg6033[6], Arg6033_7 = Arg6033[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6033_2, Arg6033_3, Arg6033_4, Arg6033_5]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6025_2]),
  ((R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6025_2, (new Shen.Freeze([R4, R1, R0, R2, Arg6025_2, Arg6025_3, R3, Arg6025_2, R5, Arg6025_2], function(Arg6035) {
  var Arg6035_0 = Arg6035[0], Arg6035_1 = Arg6035[1], Arg6035_2 = Arg6035[2], Arg6035_3 = Arg6035[3], Arg6035_4 = Arg6035[4], Arg6035_5 = Arg6035[5], Arg6035_6 = Arg6035[6], Arg6035_7 = Arg6035[7], Arg6035_8 = Arg6035[8], Arg6035_9 = Arg6035[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6035_2, Arg6035_3, Arg6035_4, Arg6035_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6025_2]),
  (R4 = R4))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6025_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R6, []], Arg6025_2]),
  ((R6 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6025_2, (new Shen.Freeze([R4, R1, R0, R6, Arg6025_2, Arg6025_3, R3, Arg6025_2, R5, Arg6025_2], function(Arg6037) {
  var Arg6037_0 = Arg6037[0], Arg6037_1 = Arg6037[1], Arg6037_2 = Arg6037[2], Arg6037_3 = Arg6037[3], Arg6037_4 = Arg6037[4], Arg6037_5 = Arg6037[5], Arg6037_6 = Arg6037[6], Arg6037_7 = Arg6037[7], Arg6037_8 = Arg6037[8], Arg6037_9 = Arg6037[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6037_2, Arg6037_3, Arg6037_4, Arg6037_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6025_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6025_2]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6025_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]], Arg6025_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6025_2, (new Shen.Freeze([R4, R1, R0, R5, Arg6025_2, Arg6025_3, R3, Arg6025_2], function(Arg6039) {
  var Arg6039_0 = Arg6039[0], Arg6039_1 = Arg6039[1], Arg6039_2 = Arg6039[2], Arg6039_3 = Arg6039[3], Arg6039_4 = Arg6039[4], Arg6039_5 = Arg6039[5], Arg6039_6 = Arg6039[6], Arg6039_7 = Arg6039[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6039_2, Arg6039_3, Arg6039_4, Arg6039_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6025_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6025_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6025_2])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], Arg6025_2]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6025_2, (new Shen.Freeze([R4, R1, R0, R5, Arg6025_2, Arg6025_3, R3, Arg6025_2], function(Arg6041) {
  var Arg6041_0 = Arg6041[0], Arg6041_1 = Arg6041[1], Arg6041_2 = Arg6041[2], Arg6041_3 = Arg6041[3], Arg6041_4 = Arg6041[4], Arg6041_5 = Arg6041[5], Arg6041_6 = Arg6041[6], Arg6041_7 = Arg6041[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6041_2, Arg6041_3, Arg6041_4, Arg6041_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6025_2]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6025_2])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6025_2])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6025_2])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_cons, R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R4, []]]], R5], Arg6025_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg6025_2, (new Shen.Freeze([R4, R3, R1, R0, R5, Arg6025_3, R2, Arg6025_2], function(Arg6043) {
  var Arg6043_0 = Arg6043[0], Arg6043_1 = Arg6043[1], Arg6043_2 = Arg6043[2], Arg6043_3 = Arg6043[3], Arg6043_4 = Arg6043[4], Arg6043_5 = Arg6043[5], Arg6043_6 = Arg6043[6], Arg6043_7 = Arg6043[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tms->hyp"], [Arg6043_3, Arg6043_4, Arg6043_7, Arg6043_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6025_2]),
  R5)
  : false)))
  : false))
  : R0))}, 4, [], "shen.tms->hyp"];





Shen.fns["findall"] = [Shen.type_func, function shen_user_lambda6046(Arg6045) {
  if (Arg6045.length < 5) return [Shen.type_func, shen_user_lambda6046, 5, Arg6045];
  var Arg6045_0 = Arg6045[0], Arg6045_1 = Arg6045[1], Arg6045_2 = Arg6045[2], Arg6045_3 = Arg6045[3], Arg6045_4 = Arg6045[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6045_3])),
  (R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6045_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R1, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.a"]]), Arg6045_3, (new Shen.Freeze([R0, Arg6045_0, Arg6045_1, Arg6045_2, R1, Arg6045_3, Arg6045_4], function(Arg6047) {
  var Arg6047_0 = Arg6047[0], Arg6047_1 = Arg6047[1], Arg6047_2 = Arg6047[2], Arg6047_3 = Arg6047[3], Arg6047_4 = Arg6047[4], Arg6047_5 = Arg6047[5], Arg6047_6 = Arg6047[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6047_0, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6047_4, Arg6047_5])[1]] = []), Arg6047_5, (new Shen.Freeze([Arg6047_0, Arg6047_1, Arg6047_2, Arg6047_3, Arg6047_4, Arg6047_5, Arg6047_6], function(Arg6049) {
  var Arg6049_0 = Arg6049[0], Arg6049_1 = Arg6049[1], Arg6049_2 = Arg6049[2], Arg6049_3 = Arg6049[3], Arg6049_4 = Arg6049[4], Arg6049_5 = Arg6049[5], Arg6049_6 = Arg6049[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.findallhelp"], [Arg6049_1, Arg6049_2, Arg6049_3, Arg6049_4, Arg6049_5, Arg6049_6]);});})}))]);});})}))]);}))}, 5, [], "findall"];





Shen.fns["shen.findallhelp"] = [Shen.type_func, function shen_user_lambda6052(Arg6051) {
  if (Arg6051.length < 6) return [Shen.type_func, shen_user_lambda6052, 6, Arg6051];
  var Arg6051_0 = Arg6051[0], Arg6051_1 = Arg6051[1], Arg6051_2 = Arg6051[2], Arg6051_3 = Arg6051[3], Arg6051_4 = Arg6051[4], Arg6051_5 = Arg6051[5];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [Arg6051_1, Arg6051_4, (new Shen.Freeze([Arg6051_1, Arg6051_0, Arg6051_2, Arg6051_3, Arg6051_4, Arg6051_5], function(Arg6053) {
  var Arg6053_0 = Arg6053[0], Arg6053_1 = Arg6053[1], Arg6053_2 = Arg6053[2], Arg6053_3 = Arg6053[3], Arg6053_4 = Arg6053[4], Arg6053_5 = Arg6053[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember"], [Arg6053_3, Arg6053_1, Arg6053_4, (new Shen.Freeze([Arg6053_3, Arg6053_1, Arg6053_4, Arg6053_5], function(Arg6055) {
  var Arg6055_0 = Arg6055[0], Arg6055_1 = Arg6055[1], Arg6055_2 = Arg6055[2], Arg6055_3 = Arg6055[3];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg6055_2, Arg6055_3]);});})}))]);});})}))]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6051_2, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6051_3, Arg6051_4])[1]]), Arg6051_4, Arg6051_5]);}))
  : R0))}, 6, [], "shen.findallhelp"];





Shen.fns["shen.remember"] = [Shen.type_func, function shen_user_lambda6058(Arg6057) {
  if (Arg6057.length < 4) return [Shen.type_func, shen_user_lambda6058, 4, Arg6057];
  var Arg6057_0 = Arg6057[0], Arg6057_1 = Arg6057[1], Arg6057_2 = Arg6057[2], Arg6057_3 = Arg6057[3];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6057_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6057_0, Arg6057_2])[1]] = [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6057_1, Arg6057_2]), (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6057_0, Arg6057_2])[1]])]), Arg6057_2, Arg6057_3]);}))}, 4, [], "shen.remember"];





Shen.fns["shen.t*-defcc"] = [Shen.type_func, function shen_user_lambda6060(Arg6059) {
  if (Arg6059.length < 5) return [Shen.type_func, shen_user_lambda6060, 5, Arg6059];
  var Arg6059_0 = Arg6059[0], Arg6059_1 = Arg6059[1], Arg6059_2 = Arg6059[2], Arg6059_3 = Arg6059[3], Arg6059_4 = Arg6059[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6059_0, Arg6059_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6059_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6059_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6059_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6059_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6059_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6059_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6059_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6059_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6059_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6059_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6059_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "==>"], R3)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6059_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6059_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6059_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R5)))
  ? ((R5 = R4[2]),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6059_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6059_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6059_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg6059_3])),
  (R9 = Shen.call(Shen.fns["shen.newpv"], [Arg6059_3])),
  (R10 = Shen.call(Shen.fns["shen.newpv"], [Arg6059_3])),
  (R11 = Shen.call(Shen.fns["shen.newpv"], [Arg6059_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R10, Shen.call(Shen.fns["shen.ue"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6059_3]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6059_3]), []]]]]), Arg6059_3, (new Shen.Freeze([R5, R4, R6, R0, R7, R8, R9, R10, Arg6059_2, Arg6059_1, R11, R1, R2, R3, Arg6059_3, Arg6059_4], function(Arg6061) {
  var Arg6061_0 = Arg6061[0], Arg6061_1 = Arg6061[1], Arg6061_2 = Arg6061[2], Arg6061_3 = Arg6061[3], Arg6061_4 = Arg6061[4], Arg6061_5 = Arg6061[5], Arg6061_6 = Arg6061[6], Arg6061_7 = Arg6061[7], Arg6061_8 = Arg6061[8], Arg6061_9 = Arg6061[9], Arg6061_10 = Arg6061[10], Arg6061_11 = Arg6061[11], Arg6061_12 = Arg6061[12], Arg6061_13 = Arg6061[13], Arg6061_14 = Arg6061[14], Arg6061_15 = Arg6061[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6061_5, Shen.call(Shen.fns["shen.lazyderef"], [Arg6061_7, Arg6061_14])[1], Arg6061_14, (new Shen.Freeze([Arg6061_0, Arg6061_1, Arg6061_2, Arg6061_3, Arg6061_4, Arg6061_5, Arg6061_6, Arg6061_7, Arg6061_8, Arg6061_9, Arg6061_10, Arg6061_11, Arg6061_12, Arg6061_13, Arg6061_14, Arg6061_15], function(Arg6063) {
  var Arg6063_0 = Arg6063[0], Arg6063_1 = Arg6063[1], Arg6063_2 = Arg6063[2], Arg6063_3 = Arg6063[3], Arg6063_4 = Arg6063[4], Arg6063_5 = Arg6063[5], Arg6063_6 = Arg6063[6], Arg6063_7 = Arg6063[7], Arg6063_8 = Arg6063[8], Arg6063_9 = Arg6063[9], Arg6063_10 = Arg6063[10], Arg6063_11 = Arg6063[11], Arg6063_12 = Arg6063[12], Arg6063_13 = Arg6063[13], Arg6063_14 = Arg6063[14], Arg6063_15 = Arg6063[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6063_6, Shen.call(Shen.fns["shen.lazyderef"], [Arg6063_7, Arg6063_14])[2][2][1], Arg6063_14, (new Shen.Freeze([Arg6063_0, Arg6063_1, Arg6063_2, Arg6063_3, Arg6063_4, Arg6063_5, Arg6063_6, Arg6063_7, Arg6063_8, Arg6063_9, Arg6063_10, Arg6063_11, Arg6063_12, Arg6063_13, Arg6063_14, Arg6063_15], function(Arg6065) {
  var Arg6065_0 = Arg6065[0], Arg6065_1 = Arg6065[1], Arg6065_2 = Arg6065[2], Arg6065_3 = Arg6065[3], Arg6065_4 = Arg6065[4], Arg6065_5 = Arg6065[5], Arg6065_6 = Arg6065[6], Arg6065_7 = Arg6065[7], Arg6065_8 = Arg6065[8], Arg6065_9 = Arg6065[9], Arg6065_10 = Arg6065[10], Arg6065_11 = Arg6065[11], Arg6065_12 = Arg6065[12], Arg6065_13 = Arg6065[13], Arg6065_14 = Arg6065[14], Arg6065_15 = Arg6065[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6065_1, Shen.call(Shen.fns["shen.plug-wildcards"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6065_0, Arg6065_14])]), Arg6065_14, (new Shen.Freeze([Arg6065_0, Arg6065_1, Arg6065_2, Arg6065_3, Arg6065_4, Arg6065_5, Arg6065_6, Arg6065_7, Arg6065_8, Arg6065_9, Arg6065_10, Arg6065_11, Arg6065_12, Arg6065_13, Arg6065_14, Arg6065_15], function(Arg6067) {
  var Arg6067_0 = Arg6067[0], Arg6067_1 = Arg6067[1], Arg6067_2 = Arg6067[2], Arg6067_3 = Arg6067[3], Arg6067_4 = Arg6067[4], Arg6067_5 = Arg6067[5], Arg6067_6 = Arg6067[6], Arg6067_7 = Arg6067[7], Arg6067_8 = Arg6067[8], Arg6067_9 = Arg6067[9], Arg6067_10 = Arg6067[10], Arg6067_11 = Arg6067[11], Arg6067_12 = Arg6067[12], Arg6067_13 = Arg6067[13], Arg6067_14 = Arg6067[14], Arg6067_15 = Arg6067[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6067_2, Shen.call(Shen.fns["shen.ue"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6067_1, Arg6067_14])]), Arg6067_14, (new Shen.Freeze([Arg6067_1, Arg6067_2, Arg6067_3, Arg6067_4, Arg6067_5, Arg6067_6, Arg6067_7, Arg6067_8, Arg6067_9, Arg6067_10, Arg6067_11, Arg6067_12, Arg6067_13, Arg6067_14, Arg6067_15], function(Arg6069) {
  var Arg6069_0 = Arg6069[0], Arg6069_1 = Arg6069[1], Arg6069_2 = Arg6069[2], Arg6069_3 = Arg6069[3], Arg6069_4 = Arg6069[4], Arg6069_5 = Arg6069[5], Arg6069_6 = Arg6069[6], Arg6069_7 = Arg6069[7], Arg6069_8 = Arg6069[8], Arg6069_9 = Arg6069[9], Arg6069_10 = Arg6069[10], Arg6069_11 = Arg6069[11], Arg6069_12 = Arg6069[12], Arg6069_13 = Arg6069[13], Arg6069_14 = Arg6069[14];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6069_3, Arg6069_1, Arg6069_13, (new Shen.Freeze([Arg6069_1, Arg6069_2, Arg6069_3, Arg6069_4, Arg6069_5, Arg6069_6, Arg6069_7, Arg6069_8, Arg6069_9, Arg6069_10, Arg6069_11, Arg6069_12, Arg6069_13, Arg6069_14], function(Arg6071) {
  var Arg6071_0 = Arg6071[0], Arg6071_1 = Arg6071[1], Arg6071_2 = Arg6071[2], Arg6071_3 = Arg6071[3], Arg6071_4 = Arg6071[4], Arg6071_5 = Arg6071[5], Arg6071_6 = Arg6071[6], Arg6071_7 = Arg6071[7], Arg6071_8 = Arg6071[8], Arg6071_9 = Arg6071[9], Arg6071_10 = Arg6071[10], Arg6071_11 = Arg6071[11], Arg6071_12 = Arg6071[12], Arg6071_13 = Arg6071[13];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6071_1, Arg6071_12, (new Shen.Freeze([Arg6071_1, Arg6071_2, Arg6071_3, Arg6071_4, Arg6071_5, Arg6071_6, Arg6071_7, Arg6071_8, Arg6071_9, Arg6071_10, Arg6071_11, Arg6071_12, Arg6071_13], function(Arg6073) {
  var Arg6073_0 = Arg6073[0], Arg6073_1 = Arg6073[1], Arg6073_2 = Arg6073[2], Arg6073_3 = Arg6073[3], Arg6073_4 = Arg6073[4], Arg6073_5 = Arg6073[5], Arg6073_6 = Arg6073[6], Arg6073_7 = Arg6073[7], Arg6073_8 = Arg6073[8], Arg6073_9 = Arg6073[9], Arg6073_10 = Arg6073[10], Arg6073_11 = Arg6073[11], Arg6073_12 = Arg6073[12];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6073_8, Arg6073_1, Arg6073_2, Arg6073_3, [Shen.type_cons, [Shen.type_cons, Arg6073_8, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6073_4, []]]], Arg6073_5], 1, Arg6073_11, (new Shen.Freeze([Arg6073_1, Arg6073_2, Arg6073_3, Arg6073_4, Arg6073_5, Arg6073_6, Arg6073_7, Arg6073_8, Arg6073_9, Arg6073_10, Arg6073_11, Arg6073_12], function(Arg6075) {
  var Arg6075_0 = Arg6075[0], Arg6075_1 = Arg6075[1], Arg6075_2 = Arg6075[2], Arg6075_3 = Arg6075[3], Arg6075_4 = Arg6075[4], Arg6075_5 = Arg6075[5], Arg6075_6 = Arg6075[6], Arg6075_7 = Arg6075[7], Arg6075_8 = Arg6075[8], Arg6075_9 = Arg6075[9], Arg6075_10 = Arg6075[10], Arg6075_11 = Arg6075[11];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg6075_5, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6075_8, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6075_9, []]]], Arg6075_10, (new Shen.Freeze([Arg6075_5, Arg6075_6, Arg6075_7, Arg6075_8, Arg6075_9, Arg6075_10, Arg6075_11], function(Arg6077) {
  var Arg6077_0 = Arg6077[0], Arg6077_1 = Arg6077[1], Arg6077_2 = Arg6077[2], Arg6077_3 = Arg6077[3], Arg6077_4 = Arg6077[4], Arg6077_5 = Arg6077[5], Arg6077_6 = Arg6077[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6077_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6077_2, Arg6077_5]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6077_3, Arg6077_5]), []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6077_4, Arg6077_5]), []]]]]), Arg6077_5, Arg6077_6]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))]);}))}, 5, [], "shen.t*-defcc"];





Shen.fns["shen.plug-wildcards"] = [Shen.type_func, function shen_user_lambda6080(Arg6079) {
  if (Arg6079.length < 1) return [Shen.type_func, shen_user_lambda6080, 1, Arg6079];
  var Arg6079_0 = Arg6079[0];
  return ((Shen.is_type(Arg6079_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_symbol, "shen.plug-wildcards"], Arg6079_0]);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg6079_0, [Shen.type_symbol, "_"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "X"]]);})
  : Arg6079_0))}, 1, [], "shen.plug-wildcards"];





Shen.fns["shen.get-rules"] = [Shen.type_func, function shen_user_lambda6082(Arg6081) {
  if (Arg6081.length < 4) return [Shen.type_func, shen_user_lambda6082, 4, Arg6081];
  var Arg6081_0 = Arg6081[0], Arg6081_1 = Arg6081[1], Arg6081_2 = Arg6081[2], Arg6081_3 = Arg6081[3];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6081_0, Arg6081_2])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6081_1, Arg6081_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6081_2, Arg6081_3])))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6081_2]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6081_1, Arg6081_2])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["cut"], [R0, Arg6081_2, Arg6081_3])))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6081_2]),
  (R1 = R2))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6081_0, Arg6081_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6081_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.first-rule"], [Arg6081_1, R2, R3, Arg6081_2, (new Shen.Freeze([Arg6081_1, R2, R0, R1, R3, Arg6081_2, Arg6081_3], function(Arg6083) {
  var Arg6083_0 = Arg6083[0], Arg6083_1 = Arg6083[1], Arg6083_2 = Arg6083[2], Arg6083_3 = Arg6083[3], Arg6083_4 = Arg6083[4], Arg6083_5 = Arg6083[5], Arg6083_6 = Arg6083[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6083_2, Arg6083_5, (new Shen.Freeze([Arg6083_2, Arg6083_3, Arg6083_4, Arg6083_5, Arg6083_6], function(Arg6085) {
  var Arg6085_0 = Arg6085[0], Arg6085_1 = Arg6085[1], Arg6085_2 = Arg6085[2], Arg6085_3 = Arg6085[3], Arg6085_4 = Arg6085[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6085_1, Arg6085_2, Arg6085_3, Arg6085_4]);});})}))]);});})}))]))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6081_2])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6081_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R2, R3], Arg6081_2]),
  ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6081_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.first-rule"], [Arg6081_1, R2, R4, Arg6081_2, (new Shen.Freeze([Arg6081_1, R2, R0, R3, R4, Arg6081_2, Arg6081_3, R1, Arg6081_2], function(Arg6087) {
  var Arg6087_0 = Arg6087[0], Arg6087_1 = Arg6087[1], Arg6087_2 = Arg6087[2], Arg6087_3 = Arg6087[3], Arg6087_4 = Arg6087[4], Arg6087_5 = Arg6087[5], Arg6087_6 = Arg6087[6], Arg6087_7 = Arg6087[7], Arg6087_8 = Arg6087[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6087_2, Arg6087_5, (new Shen.Freeze([Arg6087_2, Arg6087_3, Arg6087_4, Arg6087_5, Arg6087_6], function(Arg6089) {
  var Arg6089_0 = Arg6089[0], Arg6089_1 = Arg6089[1], Arg6089_2 = Arg6089[2], Arg6089_3 = Arg6089[3], Arg6089_4 = Arg6089[4];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-rules"], [Arg6089_1, Arg6089_2, Arg6089_3, Arg6089_4]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6081_2]),
  R3)
  : false)))
  : R1))]);}))}, 4, [], "shen.get-rules"];





Shen.fns["shen.first-rule"] = [Shen.type_func, function shen_user_lambda6092(Arg6091) {
  if (Arg6091.length < 5) return [Shen.type_func, shen_user_lambda6092, 5, Arg6091];
  var Arg6091_0 = Arg6091[0], Arg6091_1 = Arg6091[1], Arg6091_2 = Arg6091[2], Arg6091_3 = Arg6091[3], Arg6091_4 = Arg6091[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6091_0, Arg6091_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6091_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], R2)))
  ? ((R2 = R1[2]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6091_1, Arg6091_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["unify!"], [Arg6091_2, R2, Arg6091_3, (new Shen.Freeze([R2, R0, Arg6091_0, Arg6091_1, Arg6091_2, Arg6091_4, Arg6091_3], function(Arg6093) {
  var Arg6093_0 = Arg6093[0], Arg6093_1 = Arg6093[1], Arg6093_2 = Arg6093[2], Arg6093_3 = Arg6093[3], Arg6093_4 = Arg6093[4], Arg6093_5 = Arg6093[5], Arg6093_6 = Arg6093[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6093_1, Arg6093_6, Arg6093_5]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6091_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["unify!"], [Arg6091_2, R2, Arg6091_3, (new Shen.Freeze([R2, R0, R1, Arg6091_0, Arg6091_1, Arg6091_2, Arg6091_4, Arg6091_3], function(Arg6095) {
  var Arg6095_0 = Arg6095[0], Arg6095_1 = Arg6095[1], Arg6095_2 = Arg6095[2], Arg6095_3 = Arg6095[3], Arg6095_4 = Arg6095[4], Arg6095_5 = Arg6095[5], Arg6095_6 = Arg6095[6], Arg6095_7 = Arg6095[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6095_1, Arg6095_7, Arg6095_6]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6091_3]),
  (R0 = R2))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6091_0, Arg6091_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6091_1, Arg6091_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["unify!"], [R3, R1, Arg6091_3, (new Shen.Freeze([R3, R1, R0, R2, Arg6091_2, Arg6091_3, Arg6091_4], function(Arg6097) {
  var Arg6097_0 = Arg6097[0], Arg6097_1 = Arg6097[1], Arg6097_2 = Arg6097[2], Arg6097_3 = Arg6097[3], Arg6097_4 = Arg6097[4], Arg6097_5 = Arg6097[5], Arg6097_6 = Arg6097[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.first-rule"], [Arg6097_2, Arg6097_3, Arg6097_4, Arg6097_5, Arg6097_6]);});})}))]))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6091_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6091_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R3, R4], Arg6091_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg6091_3, (new Shen.Freeze([R3, R1, R0, R4, Arg6091_2, Arg6091_4, R2, Arg6091_3], function(Arg6099) {
  var Arg6099_0 = Arg6099[0], Arg6099_1 = Arg6099[1], Arg6099_2 = Arg6099[2], Arg6099_3 = Arg6099[3], Arg6099_4 = Arg6099[4], Arg6099_5 = Arg6099[5], Arg6099_6 = Arg6099[6], Arg6099_7 = Arg6099[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.first-rule"], [Arg6099_2, Arg6099_3, Arg6099_4, Arg6099_7, Arg6099_5]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6091_3]),
  R4)
  : false)))
  : false))
  : R0))]);}))}, 5, [], "shen.first-rule"];





Shen.fns["shen.tc-rules"] = [Shen.type_func, function shen_user_lambda6102(Arg6101) {
  if (Arg6101.length < 8) return [Shen.type_func, shen_user_lambda6102, 8, Arg6101];
  var Arg6101_0 = Arg6101[0], Arg6101_1 = Arg6101[1], Arg6101_2 = Arg6101[2], Arg6101_3 = Arg6101[3], Arg6101_4 = Arg6101[4], Arg6101_5 = Arg6101[5], Arg6101_6 = Arg6101[6], Arg6101_7 = Arg6101[7];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6101_1, Arg6101_6])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6101_7))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6101_1, Arg6101_6])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6101_2, Arg6101_6])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6101_6])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6101_6])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6101_6])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6101_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.tc-rule"], [Arg6101_0, R2, R3, Arg6101_3, Arg6101_4, Arg6101_5, Arg6101_6, (new Shen.Freeze([R2, Arg6101_5, R0, Arg6101_0, R1, R3, Arg6101_3, Arg6101_4, R4, Arg6101_6, Arg6101_7], function(Arg6103) {
  var Arg6103_0 = Arg6103[0], Arg6103_1 = Arg6103[1], Arg6103_2 = Arg6103[2], Arg6103_3 = Arg6103[3], Arg6103_4 = Arg6103[4], Arg6103_5 = Arg6103[5], Arg6103_6 = Arg6103[6], Arg6103_7 = Arg6103[7], Arg6103_8 = Arg6103[8], Arg6103_9 = Arg6103[9], Arg6103_10 = Arg6103[10];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6103_8, (Shen.call(Shen.fns["shen.deref"], [Arg6103_1, Arg6103_9]) + 1), Arg6103_9, (new Shen.Freeze([Arg6103_1, Arg6103_2, Arg6103_3, Arg6103_4, Arg6103_5, Arg6103_6, Arg6103_7, Arg6103_8, Arg6103_9, Arg6103_10], function(Arg6105) {
  var Arg6105_0 = Arg6105[0], Arg6105_1 = Arg6105[1], Arg6105_2 = Arg6105[2], Arg6105_3 = Arg6105[3], Arg6105_4 = Arg6105[4], Arg6105_5 = Arg6105[5], Arg6105_6 = Arg6105[6], Arg6105_7 = Arg6105[7], Arg6105_8 = Arg6105[8], Arg6105_9 = Arg6105[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6105_1, Arg6105_8, (new Shen.Freeze([Arg6105_1, Arg6105_2, Arg6105_3, Arg6105_4, Arg6105_5, Arg6105_6, Arg6105_7, Arg6105_8, Arg6105_9], function(Arg6107) {
  var Arg6107_0 = Arg6107[0], Arg6107_1 = Arg6107[1], Arg6107_2 = Arg6107[2], Arg6107_3 = Arg6107[3], Arg6107_4 = Arg6107[4], Arg6107_5 = Arg6107[5], Arg6107_6 = Arg6107[6], Arg6107_7 = Arg6107[7], Arg6107_8 = Arg6107[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.tc-rules"], [Arg6107_1, Arg6107_2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6107_3, []]], Arg6107_4, Arg6107_5, Arg6107_6, Arg6107_7, Arg6107_8]);});})}))]);});})}))]);});})}))]))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R1))]);}))}, 8, [], "shen.tc-rules"];





Shen.fns["shen.tc-rule"] = [Shen.type_func, function shen_user_lambda6110(Arg6109) {
  if (Arg6109.length < 8) return [Shen.type_func, shen_user_lambda6110, 8, Arg6109];
  var Arg6109_0 = Arg6109[0], Arg6109_1 = Arg6109[1], Arg6109_2 = Arg6109[2], Arg6109_3 = Arg6109[3], Arg6109_4 = Arg6109[4], Arg6109_5 = Arg6109[5], Arg6109_6 = Arg6109[6], Arg6109_7 = Arg6109[7];
  var R0;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["shen.check-defcc-rule"], [Arg6109_1, Arg6109_2, Arg6109_3, Arg6109_4, Arg6109_6, Arg6109_7]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6109_6])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6109_5, Arg6109_6]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6109_0, Arg6109_6]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg6109_6, Arg6109_7]);}))
  : R0))}, 8, [], "shen.tc-rule"];





Shen.fns["shen.check-defcc-rule"] = [Shen.type_func, function shen_user_lambda6112(Arg6111) {
  if (Arg6111.length < 6) return [Shen.type_func, shen_user_lambda6112, 6, Arg6111];
  var Arg6111_0 = Arg6111[0], Arg6111_1 = Arg6111[1], Arg6111_2 = Arg6111[2], Arg6111_3 = Arg6111[3], Arg6111_4 = Arg6111[4], Arg6111_5 = Arg6111[5];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6111_4])),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6111_4])),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6111_4])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.get-syntax+semantics"], [R1, R2, Arg6111_0, Arg6111_4, (new Shen.Freeze([Arg6111_0, Arg6111_3, R1, Arg6111_1, R0, R2, Arg6111_2, R3, Arg6111_4, Arg6111_5], function(Arg6113) {
  var Arg6113_0 = Arg6113[0], Arg6113_1 = Arg6113[1], Arg6113_2 = Arg6113[2], Arg6113_3 = Arg6113[3], Arg6113_4 = Arg6113[4], Arg6113_5 = Arg6113[5], Arg6113_6 = Arg6113[6], Arg6113_7 = Arg6113[7], Arg6113_8 = Arg6113[8], Arg6113_9 = Arg6113[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6113_4, Arg6113_8, (new Shen.Freeze([Arg6113_1, Arg6113_2, Arg6113_3, Arg6113_4, Arg6113_5, Arg6113_6, Arg6113_7, Arg6113_8, Arg6113_9], function(Arg6115) {
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1], Arg6115_2 = Arg6115[2], Arg6115_3 = Arg6115[3], Arg6115_4 = Arg6115[4], Arg6115_5 = Arg6115[5], Arg6115_6 = Arg6115[6], Arg6115_7 = Arg6115[7], Arg6115_8 = Arg6115[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6115_1, Arg6115_0, Arg6115_6, Arg6115_2, Arg6115_7, (new Shen.Freeze([Arg6115_0, Arg6115_1, Arg6115_2, Arg6115_3, Arg6115_4, Arg6115_5, Arg6115_6, Arg6115_7, Arg6115_8], function(Arg6117) {
  var Arg6117_0 = Arg6117[0], Arg6117_1 = Arg6117[1], Arg6117_2 = Arg6117[2], Arg6117_3 = Arg6117[3], Arg6117_4 = Arg6117[4], Arg6117_5 = Arg6117[5], Arg6117_6 = Arg6117[6], Arg6117_7 = Arg6117[7], Arg6117_8 = Arg6117[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6117_3, Arg6117_7, (new Shen.Freeze([Arg6117_1, Arg6117_2, Arg6117_3, Arg6117_4, Arg6117_5, Arg6117_6, Arg6117_7, Arg6117_8], function(Arg6119) {
  var Arg6119_0 = Arg6119[0], Arg6119_1 = Arg6119[1], Arg6119_2 = Arg6119[2], Arg6119_3 = Arg6119[3], Arg6119_4 = Arg6119[4], Arg6119_5 = Arg6119[5], Arg6119_6 = Arg6119[6], Arg6119_7 = Arg6119[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6119_0, Arg6119_1, Arg6119_5, Arg6119_6, (new Shen.Freeze([Arg6119_0, Arg6119_1, Arg6119_2, Arg6119_3, Arg6119_4, Arg6119_5, Arg6119_6, Arg6119_7], function(Arg6121) {
  var Arg6121_0 = Arg6121[0], Arg6121_1 = Arg6121[1], Arg6121_2 = Arg6121[2], Arg6121_3 = Arg6121[3], Arg6121_4 = Arg6121[4], Arg6121_5 = Arg6121[5], Arg6121_6 = Arg6121[6], Arg6121_7 = Arg6121[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6121_2, Arg6121_6, (new Shen.Freeze([Arg6121_2, Arg6121_3, Arg6121_4, Arg6121_5, Arg6121_6, Arg6121_7], function(Arg6123) {
  var Arg6123_0 = Arg6123[0], Arg6123_1 = Arg6123[1], Arg6123_2 = Arg6123[2], Arg6123_3 = Arg6123[3], Arg6123_4 = Arg6123[4], Arg6123_5 = Arg6123[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.semantics-check"], [Arg6123_1, Arg6123_2, Arg6123_3, Arg6123_4, Arg6123_5]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]))]);}))}, 6, [], "shen.check-defcc-rule"];





Shen.fns["shen.syntax-hyps"] = [Shen.type_func, function shen_user_lambda6126(Arg6125) {
  if (Arg6125.length < 6) return [Shen.type_func, shen_user_lambda6126, 6, Arg6125];
  var Arg6125_0 = Arg6125[0], Arg6125_1 = Arg6125[1], Arg6125_2 = Arg6125[2], Arg6125_3 = Arg6125[3], Arg6125_4 = Arg6125[4], Arg6125_5 = Arg6125[5];
  var R0, R1, R2, R3, R4, R5, R6, R7;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6125_0, Arg6125_4])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6125_2, Arg6125_1, Arg6125_4, Arg6125_5])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6125_0, Arg6125_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6125_2, Arg6125_4])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6125_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R5 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6125_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[1], Arg6125_4])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6125_4])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R4 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg6125_4])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [Arg6125_3, R4, Arg6125_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6125_1, R6, Arg6125_3, Arg6125_4, Arg6125_5, Arg6125_0, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5], function(Arg6127) {
  var Arg6127_0 = Arg6127[0], Arg6127_1 = Arg6127[1], Arg6127_2 = Arg6127[2], Arg6127_3 = Arg6127[3], Arg6127_4 = Arg6127[4], Arg6127_5 = Arg6127[5], Arg6127_6 = Arg6127[6], Arg6127_7 = Arg6127[7], Arg6127_8 = Arg6127[8], Arg6127_9 = Arg6127[9], Arg6127_10 = Arg6127[10], Arg6127_11 = Arg6127[11], Arg6127_12 = Arg6127[12], Arg6127_13 = Arg6127[13], Arg6127_14 = Arg6127[14], Arg6127_15 = Arg6127[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6127_2, Arg6127_1, Arg6127_8, (new Shen.Freeze([Arg6127_1, Arg6127_2, Arg6127_3, Arg6127_4, Arg6127_5, Arg6127_6, Arg6127_7, Arg6127_8, Arg6127_9], function(Arg6129) {
  var Arg6129_0 = Arg6129[0], Arg6129_1 = Arg6129[1], Arg6129_2 = Arg6129[2], Arg6129_3 = Arg6129[3], Arg6129_4 = Arg6129[4], Arg6129_5 = Arg6129[5], Arg6129_6 = Arg6129[6], Arg6129_7 = Arg6129[7], Arg6129_8 = Arg6129[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6129_1, Arg6129_7])]), Arg6129_7, (new Shen.Freeze([Arg6129_1, Arg6129_2, Arg6129_3, Arg6129_4, Arg6129_5, Arg6129_6, Arg6129_7, Arg6129_8], function(Arg6131) {
  var Arg6131_0 = Arg6131[0], Arg6131_1 = Arg6131[1], Arg6131_2 = Arg6131[2], Arg6131_3 = Arg6131[3], Arg6131_4 = Arg6131[4], Arg6131_5 = Arg6131[5], Arg6131_6 = Arg6131[6], Arg6131_7 = Arg6131[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6131_1, Arg6131_6, (new Shen.Freeze([Arg6131_1, Arg6131_2, Arg6131_3, Arg6131_4, Arg6131_5, Arg6131_6, Arg6131_7], function(Arg6133) {
  var Arg6133_0 = Arg6133[0], Arg6133_1 = Arg6133[1], Arg6133_2 = Arg6133[2], Arg6133_3 = Arg6133[3], Arg6133_4 = Arg6133[4], Arg6133_5 = Arg6133[5], Arg6133_6 = Arg6133[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6133_1, Arg6133_2, Arg6133_3, Arg6133_4, Arg6133_5, Arg6133_6]);});})}))]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg6125_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6125_3, R4, Arg6125_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6125_1, R3, Arg6125_3, Arg6125_4, Arg6125_5, R6, Arg6125_4, Arg6125_0, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5], function(Arg6135) {
  var Arg6135_0 = Arg6135[0], Arg6135_1 = Arg6135[1], Arg6135_2 = Arg6135[2], Arg6135_3 = Arg6135[3], Arg6135_4 = Arg6135[4], Arg6135_5 = Arg6135[5], Arg6135_6 = Arg6135[6], Arg6135_7 = Arg6135[7], Arg6135_8 = Arg6135[8], Arg6135_9 = Arg6135[9], Arg6135_10 = Arg6135[10], Arg6135_11 = Arg6135[11], Arg6135_12 = Arg6135[12], Arg6135_13 = Arg6135[13], Arg6135_14 = Arg6135[14], Arg6135_15 = Arg6135[15], Arg6135_16 = Arg6135[16], Arg6135_17 = Arg6135[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6135_2, Arg6135_1, Arg6135_8, (new Shen.Freeze([Arg6135_1, Arg6135_2, Arg6135_3, Arg6135_4, Arg6135_5, Arg6135_6, Arg6135_7, Arg6135_8, Arg6135_9], function(Arg6137) {
  var Arg6137_0 = Arg6137[0], Arg6137_1 = Arg6137[1], Arg6137_2 = Arg6137[2], Arg6137_3 = Arg6137[3], Arg6137_4 = Arg6137[4], Arg6137_5 = Arg6137[5], Arg6137_6 = Arg6137[6], Arg6137_7 = Arg6137[7], Arg6137_8 = Arg6137[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6137_1, Arg6137_7])]), Arg6137_7, (new Shen.Freeze([Arg6137_1, Arg6137_2, Arg6137_3, Arg6137_4, Arg6137_5, Arg6137_6, Arg6137_7, Arg6137_8], function(Arg6139) {
  var Arg6139_0 = Arg6139[0], Arg6139_1 = Arg6139[1], Arg6139_2 = Arg6139[2], Arg6139_3 = Arg6139[3], Arg6139_4 = Arg6139[4], Arg6139_5 = Arg6139[5], Arg6139_6 = Arg6139[6], Arg6139_7 = Arg6139[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6139_1, Arg6139_6, (new Shen.Freeze([Arg6139_1, Arg6139_2, Arg6139_3, Arg6139_4, Arg6139_5, Arg6139_6, Arg6139_7], function(Arg6141) {
  var Arg6141_0 = Arg6141[0], Arg6141_1 = Arg6141[1], Arg6141_2 = Arg6141[2], Arg6141_3 = Arg6141[3], Arg6141_4 = Arg6141[4], Arg6141_5 = Arg6141[5], Arg6141_6 = Arg6141[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6141_1, Arg6141_2, Arg6141_3, Arg6141_4, Arg6141_5, Arg6141_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6125_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6125_4])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R4, []], Arg6125_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6125_3, R4, Arg6125_4, (new Shen.Freeze([R4, R2, R5, R0, R1, Arg6125_1, R3, Arg6125_3, Arg6125_4, Arg6125_5, R6, Arg6125_4, Arg6125_0, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5], function(Arg6143) {
  var Arg6143_0 = Arg6143[0], Arg6143_1 = Arg6143[1], Arg6143_2 = Arg6143[2], Arg6143_3 = Arg6143[3], Arg6143_4 = Arg6143[4], Arg6143_5 = Arg6143[5], Arg6143_6 = Arg6143[6], Arg6143_7 = Arg6143[7], Arg6143_8 = Arg6143[8], Arg6143_9 = Arg6143[9], Arg6143_10 = Arg6143[10], Arg6143_11 = Arg6143[11], Arg6143_12 = Arg6143[12], Arg6143_13 = Arg6143[13], Arg6143_14 = Arg6143[14], Arg6143_15 = Arg6143[15], Arg6143_16 = Arg6143[16], Arg6143_17 = Arg6143[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6143_2, Arg6143_1, Arg6143_8, (new Shen.Freeze([Arg6143_1, Arg6143_2, Arg6143_3, Arg6143_4, Arg6143_5, Arg6143_6, Arg6143_7, Arg6143_8, Arg6143_9], function(Arg6145) {
  var Arg6145_0 = Arg6145[0], Arg6145_1 = Arg6145[1], Arg6145_2 = Arg6145[2], Arg6145_3 = Arg6145[3], Arg6145_4 = Arg6145[4], Arg6145_5 = Arg6145[5], Arg6145_6 = Arg6145[6], Arg6145_7 = Arg6145[7], Arg6145_8 = Arg6145[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6145_1, Arg6145_7])]), Arg6145_7, (new Shen.Freeze([Arg6145_1, Arg6145_2, Arg6145_3, Arg6145_4, Arg6145_5, Arg6145_6, Arg6145_7, Arg6145_8], function(Arg6147) {
  var Arg6147_0 = Arg6147[0], Arg6147_1 = Arg6147[1], Arg6147_2 = Arg6147[2], Arg6147_3 = Arg6147[3], Arg6147_4 = Arg6147[4], Arg6147_5 = Arg6147[5], Arg6147_6 = Arg6147[6], Arg6147_7 = Arg6147[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6147_1, Arg6147_6, (new Shen.Freeze([Arg6147_1, Arg6147_2, Arg6147_3, Arg6147_4, Arg6147_5, Arg6147_6, Arg6147_7], function(Arg6149) {
  var Arg6149_0 = Arg6149[0], Arg6149_1 = Arg6149[1], Arg6149_2 = Arg6149[2], Arg6149_3 = Arg6149[3], Arg6149_4 = Arg6149[4], Arg6149_5 = Arg6149[5], Arg6149_6 = Arg6149[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6149_1, Arg6149_2, Arg6149_3, Arg6149_4, Arg6149_5, Arg6149_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6125_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, ":"], Arg6125_4]),
  ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6125_4])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R7 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6125_4])),
  ((Shen.empty$question$(R4))
  ? ((R4 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [Arg6125_3, R7, Arg6125_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6125_1, R4, Arg6125_3, Arg6125_4, Arg6125_5, R6, Arg6125_4, Arg6125_0, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5], function(Arg6151) {
  var Arg6151_0 = Arg6151[0], Arg6151_1 = Arg6151[1], Arg6151_2 = Arg6151[2], Arg6151_3 = Arg6151[3], Arg6151_4 = Arg6151[4], Arg6151_5 = Arg6151[5], Arg6151_6 = Arg6151[6], Arg6151_7 = Arg6151[7], Arg6151_8 = Arg6151[8], Arg6151_9 = Arg6151[9], Arg6151_10 = Arg6151[10], Arg6151_11 = Arg6151[11], Arg6151_12 = Arg6151[12], Arg6151_13 = Arg6151[13], Arg6151_14 = Arg6151[14], Arg6151_15 = Arg6151[15], Arg6151_16 = Arg6151[16], Arg6151_17 = Arg6151[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6151_2, Arg6151_1, Arg6151_8, (new Shen.Freeze([Arg6151_1, Arg6151_2, Arg6151_3, Arg6151_4, Arg6151_5, Arg6151_6, Arg6151_7, Arg6151_8, Arg6151_9], function(Arg6153) {
  var Arg6153_0 = Arg6153[0], Arg6153_1 = Arg6153[1], Arg6153_2 = Arg6153[2], Arg6153_3 = Arg6153[3], Arg6153_4 = Arg6153[4], Arg6153_5 = Arg6153[5], Arg6153_6 = Arg6153[6], Arg6153_7 = Arg6153[7], Arg6153_8 = Arg6153[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6153_1, Arg6153_7])]), Arg6153_7, (new Shen.Freeze([Arg6153_1, Arg6153_2, Arg6153_3, Arg6153_4, Arg6153_5, Arg6153_6, Arg6153_7, Arg6153_8], function(Arg6155) {
  var Arg6155_0 = Arg6155[0], Arg6155_1 = Arg6155[1], Arg6155_2 = Arg6155[2], Arg6155_3 = Arg6155[3], Arg6155_4 = Arg6155[4], Arg6155_5 = Arg6155[5], Arg6155_6 = Arg6155[6], Arg6155_7 = Arg6155[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6155_1, Arg6155_6, (new Shen.Freeze([Arg6155_1, Arg6155_2, Arg6155_3, Arg6155_4, Arg6155_5, Arg6155_6, Arg6155_7], function(Arg6157) {
  var Arg6157_0 = Arg6157[0], Arg6157_1 = Arg6157[1], Arg6157_2 = Arg6157[2], Arg6157_3 = Arg6157[3], Arg6157_4 = Arg6157[4], Arg6157_5 = Arg6157[5], Arg6157_6 = Arg6157[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6157_1, Arg6157_2, Arg6157_3, Arg6157_4, Arg6157_5, Arg6157_6]);});})}))]);});})}))]);});})}))]);});})}))])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6125_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6125_3, R7, Arg6125_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6125_1, R3, Arg6125_3, Arg6125_4, Arg6125_5, R4, Arg6125_4, R6, Arg6125_4, Arg6125_0, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5], function(Arg6159) {
  var Arg6159_0 = Arg6159[0], Arg6159_1 = Arg6159[1], Arg6159_2 = Arg6159[2], Arg6159_3 = Arg6159[3], Arg6159_4 = Arg6159[4], Arg6159_5 = Arg6159[5], Arg6159_6 = Arg6159[6], Arg6159_7 = Arg6159[7], Arg6159_8 = Arg6159[8], Arg6159_9 = Arg6159[9], Arg6159_10 = Arg6159[10], Arg6159_11 = Arg6159[11], Arg6159_12 = Arg6159[12], Arg6159_13 = Arg6159[13], Arg6159_14 = Arg6159[14], Arg6159_15 = Arg6159[15], Arg6159_16 = Arg6159[16], Arg6159_17 = Arg6159[17], Arg6159_18 = Arg6159[18], Arg6159_19 = Arg6159[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6159_2, Arg6159_1, Arg6159_8, (new Shen.Freeze([Arg6159_1, Arg6159_2, Arg6159_3, Arg6159_4, Arg6159_5, Arg6159_6, Arg6159_7, Arg6159_8, Arg6159_9], function(Arg6161) {
  var Arg6161_0 = Arg6161[0], Arg6161_1 = Arg6161[1], Arg6161_2 = Arg6161[2], Arg6161_3 = Arg6161[3], Arg6161_4 = Arg6161[4], Arg6161_5 = Arg6161[5], Arg6161_6 = Arg6161[6], Arg6161_7 = Arg6161[7], Arg6161_8 = Arg6161[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6161_1, Arg6161_7])]), Arg6161_7, (new Shen.Freeze([Arg6161_1, Arg6161_2, Arg6161_3, Arg6161_4, Arg6161_5, Arg6161_6, Arg6161_7, Arg6161_8], function(Arg6163) {
  var Arg6163_0 = Arg6163[0], Arg6163_1 = Arg6163[1], Arg6163_2 = Arg6163[2], Arg6163_3 = Arg6163[3], Arg6163_4 = Arg6163[4], Arg6163_5 = Arg6163[5], Arg6163_6 = Arg6163[6], Arg6163_7 = Arg6163[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6163_1, Arg6163_6, (new Shen.Freeze([Arg6163_1, Arg6163_2, Arg6163_3, Arg6163_4, Arg6163_5, Arg6163_6, Arg6163_7], function(Arg6165) {
  var Arg6165_0 = Arg6165[0], Arg6165_1 = Arg6165[1], Arg6165_2 = Arg6165[2], Arg6165_3 = Arg6165[3], Arg6165_4 = Arg6165[4], Arg6165_5 = Arg6165[5], Arg6165_6 = Arg6165[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6165_1, Arg6165_2, Arg6165_3, Arg6165_4, Arg6165_5, Arg6165_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6125_4]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6125_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R7, []], Arg6125_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["unify!"], [Arg6125_3, R7, Arg6125_4, (new Shen.Freeze([R7, R2, R5, R0, R1, Arg6125_1, R3, Arg6125_3, Arg6125_4, Arg6125_5, R4, Arg6125_4, R6, Arg6125_4, Arg6125_0, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5], function(Arg6167) {
  var Arg6167_0 = Arg6167[0], Arg6167_1 = Arg6167[1], Arg6167_2 = Arg6167[2], Arg6167_3 = Arg6167[3], Arg6167_4 = Arg6167[4], Arg6167_5 = Arg6167[5], Arg6167_6 = Arg6167[6], Arg6167_7 = Arg6167[7], Arg6167_8 = Arg6167[8], Arg6167_9 = Arg6167[9], Arg6167_10 = Arg6167[10], Arg6167_11 = Arg6167[11], Arg6167_12 = Arg6167[12], Arg6167_13 = Arg6167[13], Arg6167_14 = Arg6167[14], Arg6167_15 = Arg6167[15], Arg6167_16 = Arg6167[16], Arg6167_17 = Arg6167[17], Arg6167_18 = Arg6167[18], Arg6167_19 = Arg6167[19];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6167_2, Arg6167_1, Arg6167_8, (new Shen.Freeze([Arg6167_1, Arg6167_2, Arg6167_3, Arg6167_4, Arg6167_5, Arg6167_6, Arg6167_7, Arg6167_8, Arg6167_9], function(Arg6169) {
  var Arg6169_0 = Arg6169[0], Arg6169_1 = Arg6169[1], Arg6169_2 = Arg6169[2], Arg6169_3 = Arg6169[3], Arg6169_4 = Arg6169[4], Arg6169_5 = Arg6169[5], Arg6169_6 = Arg6169[6], Arg6169_7 = Arg6169[7], Arg6169_8 = Arg6169[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6169_1, Arg6169_7])]), Arg6169_7, (new Shen.Freeze([Arg6169_1, Arg6169_2, Arg6169_3, Arg6169_4, Arg6169_5, Arg6169_6, Arg6169_7, Arg6169_8], function(Arg6171) {
  var Arg6171_0 = Arg6171[0], Arg6171_1 = Arg6171[1], Arg6171_2 = Arg6171[2], Arg6171_3 = Arg6171[3], Arg6171_4 = Arg6171[4], Arg6171_5 = Arg6171[5], Arg6171_6 = Arg6171[6], Arg6171_7 = Arg6171[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6171_1, Arg6171_6, (new Shen.Freeze([Arg6171_1, Arg6171_2, Arg6171_3, Arg6171_4, Arg6171_5, Arg6171_6, Arg6171_7], function(Arg6173) {
  var Arg6173_0 = Arg6173[0], Arg6173_1 = Arg6173[1], Arg6173_2 = Arg6173[2], Arg6173_3 = Arg6173[3], Arg6173_4 = Arg6173[4], Arg6173_5 = Arg6173[5], Arg6173_6 = Arg6173[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6173_1, Arg6173_2, Arg6173_3, Arg6173_4, Arg6173_5, Arg6173_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6125_4]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6125_4]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6125_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]], Arg6125_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6125_3, R6, Arg6125_4, (new Shen.Freeze([R6, R2, R5, R0, R1, Arg6125_1, R3, Arg6125_3, Arg6125_4, Arg6125_5, R4, Arg6125_4, Arg6125_0, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5], function(Arg6175) {
  var Arg6175_0 = Arg6175[0], Arg6175_1 = Arg6175[1], Arg6175_2 = Arg6175[2], Arg6175_3 = Arg6175[3], Arg6175_4 = Arg6175[4], Arg6175_5 = Arg6175[5], Arg6175_6 = Arg6175[6], Arg6175_7 = Arg6175[7], Arg6175_8 = Arg6175[8], Arg6175_9 = Arg6175[9], Arg6175_10 = Arg6175[10], Arg6175_11 = Arg6175[11], Arg6175_12 = Arg6175[12], Arg6175_13 = Arg6175[13], Arg6175_14 = Arg6175[14], Arg6175_15 = Arg6175[15], Arg6175_16 = Arg6175[16], Arg6175_17 = Arg6175[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6175_2, Arg6175_1, Arg6175_8, (new Shen.Freeze([Arg6175_1, Arg6175_2, Arg6175_3, Arg6175_4, Arg6175_5, Arg6175_6, Arg6175_7, Arg6175_8, Arg6175_9], function(Arg6177) {
  var Arg6177_0 = Arg6177[0], Arg6177_1 = Arg6177[1], Arg6177_2 = Arg6177[2], Arg6177_3 = Arg6177[3], Arg6177_4 = Arg6177[4], Arg6177_5 = Arg6177[5], Arg6177_6 = Arg6177[6], Arg6177_7 = Arg6177[7], Arg6177_8 = Arg6177[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6177_1, Arg6177_7])]), Arg6177_7, (new Shen.Freeze([Arg6177_1, Arg6177_2, Arg6177_3, Arg6177_4, Arg6177_5, Arg6177_6, Arg6177_7, Arg6177_8], function(Arg6179) {
  var Arg6179_0 = Arg6179[0], Arg6179_1 = Arg6179[1], Arg6179_2 = Arg6179[2], Arg6179_3 = Arg6179[3], Arg6179_4 = Arg6179[4], Arg6179_5 = Arg6179[5], Arg6179_6 = Arg6179[6], Arg6179_7 = Arg6179[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6179_1, Arg6179_6, (new Shen.Freeze([Arg6179_1, Arg6179_2, Arg6179_3, Arg6179_4, Arg6179_5, Arg6179_6, Arg6179_7], function(Arg6181) {
  var Arg6181_0 = Arg6181[0], Arg6181_1 = Arg6181[1], Arg6181_2 = Arg6181[2], Arg6181_3 = Arg6181[3], Arg6181_4 = Arg6181[4], Arg6181_5 = Arg6181[5], Arg6181_6 = Arg6181[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6181_1, Arg6181_2, Arg6181_3, Arg6181_4, Arg6181_5, Arg6181_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6125_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6125_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6125_4])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R6, []]]], Arg6125_4]),
  ((R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6125_3, R6, Arg6125_4, (new Shen.Freeze([R6, R2, R5, R0, R1, Arg6125_1, R3, Arg6125_3, Arg6125_4, Arg6125_5, R4, Arg6125_4, Arg6125_0, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5], function(Arg6183) {
  var Arg6183_0 = Arg6183[0], Arg6183_1 = Arg6183[1], Arg6183_2 = Arg6183[2], Arg6183_3 = Arg6183[3], Arg6183_4 = Arg6183[4], Arg6183_5 = Arg6183[5], Arg6183_6 = Arg6183[6], Arg6183_7 = Arg6183[7], Arg6183_8 = Arg6183[8], Arg6183_9 = Arg6183[9], Arg6183_10 = Arg6183[10], Arg6183_11 = Arg6183[11], Arg6183_12 = Arg6183[12], Arg6183_13 = Arg6183[13], Arg6183_14 = Arg6183[14], Arg6183_15 = Arg6183[15], Arg6183_16 = Arg6183[16], Arg6183_17 = Arg6183[17];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6183_2, Arg6183_1, Arg6183_8, (new Shen.Freeze([Arg6183_1, Arg6183_2, Arg6183_3, Arg6183_4, Arg6183_5, Arg6183_6, Arg6183_7, Arg6183_8, Arg6183_9], function(Arg6185) {
  var Arg6185_0 = Arg6185[0], Arg6185_1 = Arg6185[1], Arg6185_2 = Arg6185[2], Arg6185_3 = Arg6185[3], Arg6185_4 = Arg6185[4], Arg6185_5 = Arg6185[5], Arg6185_6 = Arg6185[6], Arg6185_7 = Arg6185[7], Arg6185_8 = Arg6185[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6185_1, Arg6185_7])]), Arg6185_7, (new Shen.Freeze([Arg6185_1, Arg6185_2, Arg6185_3, Arg6185_4, Arg6185_5, Arg6185_6, Arg6185_7, Arg6185_8], function(Arg6187) {
  var Arg6187_0 = Arg6187[0], Arg6187_1 = Arg6187[1], Arg6187_2 = Arg6187[2], Arg6187_3 = Arg6187[3], Arg6187_4 = Arg6187[4], Arg6187_5 = Arg6187[5], Arg6187_6 = Arg6187[6], Arg6187_7 = Arg6187[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6187_1, Arg6187_6, (new Shen.Freeze([Arg6187_1, Arg6187_2, Arg6187_3, Arg6187_4, Arg6187_5, Arg6187_6, Arg6187_7], function(Arg6189) {
  var Arg6189_0 = Arg6189[0], Arg6189_1 = Arg6189[1], Arg6189_2 = Arg6189[2], Arg6189_3 = Arg6189[3], Arg6189_4 = Arg6189[4], Arg6189_5 = Arg6189[5], Arg6189_6 = Arg6189[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6189_1, Arg6189_2, Arg6189_3, Arg6189_4, Arg6189_5, Arg6189_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6125_4]),
  (R1 = R6))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6125_4])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6125_4])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6125_4])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], R6], Arg6125_4]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [Arg6125_3, R5, Arg6125_4, (new Shen.Freeze([R5, R2, R4, R0, R1, Arg6125_1, R6, Arg6125_3, Arg6125_5, R3, Arg6125_4, Arg6125_0, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5], function(Arg6191) {
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2], Arg6191_3 = Arg6191[3], Arg6191_4 = Arg6191[4], Arg6191_5 = Arg6191[5], Arg6191_6 = Arg6191[6], Arg6191_7 = Arg6191[7], Arg6191_8 = Arg6191[8], Arg6191_9 = Arg6191[9], Arg6191_10 = Arg6191[10], Arg6191_11 = Arg6191[11], Arg6191_12 = Arg6191[12], Arg6191_13 = Arg6191[13], Arg6191_14 = Arg6191[14], Arg6191_15 = Arg6191[15], Arg6191_16 = Arg6191[16];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6191_2, Arg6191_1, Arg6191_10, (new Shen.Freeze([Arg6191_1, Arg6191_2, Arg6191_3, Arg6191_4, Arg6191_5, Arg6191_6, Arg6191_7, Arg6191_10, Arg6191_8], function(Arg6193) {
  var Arg6193_0 = Arg6193[0], Arg6193_1 = Arg6193[1], Arg6193_2 = Arg6193[2], Arg6193_3 = Arg6193[3], Arg6193_4 = Arg6193[4], Arg6193_5 = Arg6193[5], Arg6193_6 = Arg6193[6], Arg6193_7 = Arg6193[7], Arg6193_8 = Arg6193[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.deref"], [Arg6193_1, Arg6193_7])]), Arg6193_7, (new Shen.Freeze([Arg6193_1, Arg6193_2, Arg6193_3, Arg6193_4, Arg6193_5, Arg6193_6, Arg6193_7, Arg6193_8], function(Arg6195) {
  var Arg6195_0 = Arg6195[0], Arg6195_1 = Arg6195[1], Arg6195_2 = Arg6195[2], Arg6195_3 = Arg6195[3], Arg6195_4 = Arg6195[4], Arg6195_5 = Arg6195[5], Arg6195_6 = Arg6195[6], Arg6195_7 = Arg6195[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6195_1, Arg6195_6, (new Shen.Freeze([Arg6195_1, Arg6195_2, Arg6195_3, Arg6195_4, Arg6195_5, Arg6195_6, Arg6195_7], function(Arg6197) {
  var Arg6197_0 = Arg6197[0], Arg6197_1 = Arg6197[1], Arg6197_2 = Arg6197[2], Arg6197_3 = Arg6197[3], Arg6197_4 = Arg6197[4], Arg6197_5 = Arg6197[5], Arg6197_6 = Arg6197[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-hyps"], [Arg6197_1, Arg6197_2, Arg6197_3, Arg6197_4, Arg6197_5, Arg6197_6]);});})}))]);});})}))]);});})}))]);});})}))]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6125_4]),
  (R1 = R6))
  : (R1 = false))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6125_0, Arg6125_4])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.syntax-hyps"], [R1, Arg6125_1, Arg6125_2, Arg6125_3, Arg6125_4, Arg6125_5]))
  : false))
  : R1))
  : R1))]);}))}, 6, [], "shen.syntax-hyps"];





Shen.fns["shen.get-syntax+semantics"] = [Shen.type_func, function shen_user_lambda6200(Arg6199) {
  if (Arg6199.length < 5) return [Shen.type_func, shen_user_lambda6200, 5, Arg6199];
  var Arg6199_0 = Arg6199[0], Arg6199_1 = Arg6199[1], Arg6199_2 = Arg6199[2], Arg6199_3 = Arg6199[3], Arg6199_4 = Arg6199[4];
  var R0, R1, R2, R3, R4;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6199_0, Arg6199_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6199_2, Arg6199_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6199_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6199_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6199_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6199_3, (new Shen.Freeze([R1, R0, Arg6199_0, Arg6199_2, Arg6199_1, Arg6199_4, Arg6199_3], function(Arg6201) {
  var Arg6201_0 = Arg6201[0], Arg6201_1 = Arg6201[1], Arg6201_2 = Arg6201[2], Arg6201_3 = Arg6201[3], Arg6201_4 = Arg6201[4], Arg6201_5 = Arg6201[5], Arg6201_6 = Arg6201[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6201_4, Shen.call(Shen.fns["shen.lazyderef"], [Arg6201_0, Arg6201_6]), Arg6201_6, Arg6201_5]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6199_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6199_2, Arg6199_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6199_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6199_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6199_3])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["cut"], [R0, Arg6199_3, (new Shen.Freeze([R2, R1, Arg6199_3, R0, Arg6199_0, Arg6199_2, Arg6199_1, Arg6199_4, Arg6199_3], function(Arg6203) {
  var Arg6203_0 = Arg6203[0], Arg6203_1 = Arg6203[1], Arg6203_2 = Arg6203[2], Arg6203_3 = Arg6203[3], Arg6203_4 = Arg6203[4], Arg6203_5 = Arg6203[5], Arg6203_6 = Arg6203[6], Arg6203_7 = Arg6203[7], Arg6203_8 = Arg6203[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6203_6, Shen.call(Shen.fns["shen.lazyderef"], [Arg6203_0, Arg6203_2]), Arg6203_2, Arg6203_7]);});})}))])))
  : (R2 = false)))
  : (R2 = false)))
  : (R2 = false)))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6199_3]),
  (R1 = R2))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6199_0, Arg6199_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6199_2, Arg6199_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6199_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6199_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6199_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6199_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6199_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6199_3])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6199_3, (new Shen.Freeze([R0, R2, R1, Arg6199_0, Arg6199_2, Arg6199_1, Arg6199_4, Arg6199_3], function(Arg6205) {
  var Arg6205_0 = Arg6205[0], Arg6205_1 = Arg6205[1], Arg6205_2 = Arg6205[2], Arg6205_3 = Arg6205[3], Arg6205_4 = Arg6205[4], Arg6205_5 = Arg6205[5], Arg6205_6 = Arg6205[6], Arg6205_7 = Arg6205[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6205_5, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6205_1, Arg6205_7]), [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6205_2, Arg6205_7]), []]]], Arg6205_7, Arg6205_6]);});})}))])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6199_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6199_2, Arg6199_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6199_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6199_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6199_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6199_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6199_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6199_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["cut"], [R0, Arg6199_3, (new Shen.Freeze([R0, R3, R2, R1, Arg6199_3, Arg6199_0, Arg6199_2, Arg6199_1, Arg6199_4, Arg6199_3], function(Arg6207) {
  var Arg6207_0 = Arg6207[0], Arg6207_1 = Arg6207[1], Arg6207_2 = Arg6207[2], Arg6207_3 = Arg6207[3], Arg6207_4 = Arg6207[4], Arg6207_5 = Arg6207[5], Arg6207_6 = Arg6207[6], Arg6207_7 = Arg6207[7], Arg6207_8 = Arg6207[8], Arg6207_9 = Arg6207[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6207_7, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6207_1, Arg6207_4]), [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [Arg6207_2, Arg6207_4]), []]]], Arg6207_4, Arg6207_8]);});})}))])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6199_3]),
  (R1 = R0))
  : (R1 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6199_0, Arg6199_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6199_2, Arg6199_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["unify!"], [R3, R0, Arg6199_3, (new Shen.Freeze([R3, R0, R1, Arg6199_1, R2, Arg6199_3, Arg6199_4], function(Arg6209) {
  var Arg6209_0 = Arg6209[0], Arg6209_1 = Arg6209[1], Arg6209_2 = Arg6209[2], Arg6209_3 = Arg6209[3], Arg6209_4 = Arg6209[4], Arg6209_5 = Arg6209[5], Arg6209_6 = Arg6209[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-syntax+semantics"], [Arg6209_2, Arg6209_3, Arg6209_4, Arg6209_5, Arg6209_6]);});})}))]))
  : false))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6199_3])),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6199_3])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, R2], Arg6199_3]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6199_2, Arg6199_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = R3[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.call(Shen.fns["unify!"], [R4, R0, Arg6199_3, (new Shen.Freeze([R4, R0, R2, Arg6199_1, R3, Arg6199_3, Arg6199_4, R1, Arg6199_3], function(Arg6211) {
  var Arg6211_0 = Arg6211[0], Arg6211_1 = Arg6211[1], Arg6211_2 = Arg6211[2], Arg6211_3 = Arg6211[3], Arg6211_4 = Arg6211[4], Arg6211_5 = Arg6211[5], Arg6211_6 = Arg6211[6], Arg6211_7 = Arg6211[7], Arg6211_8 = Arg6211[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.get-syntax+semantics"], [Arg6211_2, Arg6211_3, Arg6211_4, Arg6211_5, Arg6211_6]);});})}))])))
  : (R2 = false))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6199_3]),
  R2)
  : false)))
  : R1))
  : R1))]);}))}, 5, [], "shen.get-syntax+semantics"];





Shen.fns["shen.syntax-check"] = [Shen.type_func, function shen_user_lambda6214(Arg6213) {
  if (Arg6213.length < 5) return [Shen.type_func, shen_user_lambda6214, 5, Arg6213];
  var Arg6213_0 = Arg6213[0], Arg6213_1 = Arg6213[1], Arg6213_2 = Arg6213[2], Arg6213_3 = Arg6213[3], Arg6213_4 = Arg6213[4];
  var R0, R1, R2, R3, R4, R5;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6213_0, Arg6213_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6213_4))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6213_0, Arg6213_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  (R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6213_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6213_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6213_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.grammar_symbol?"], [Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6213_3])]), Arg6213_3, (new Shen.Freeze([R3, R2, R4, R5, R0, R1, Arg6213_1, Arg6213_2, Arg6213_3, Arg6213_4, Arg6213_0, R0, Arg6213_1, Arg6213_2, Arg6213_3, Arg6213_4], function(Arg6215) {
  var Arg6215_0 = Arg6215[0], Arg6215_1 = Arg6215[1], Arg6215_2 = Arg6215[2], Arg6215_3 = Arg6215[3], Arg6215_4 = Arg6215[4], Arg6215_5 = Arg6215[5], Arg6215_6 = Arg6215[6], Arg6215_7 = Arg6215[7], Arg6215_8 = Arg6215[8], Arg6215_9 = Arg6215[9], Arg6215_10 = Arg6215[10], Arg6215_11 = Arg6215[11], Arg6215_12 = Arg6215[12], Arg6215_13 = Arg6215[13], Arg6215_14 = Arg6215[14], Arg6215_15 = Arg6215[15];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6215_4, Arg6215_8, (new Shen.Freeze([Arg6215_0, Arg6215_1, Arg6215_2, Arg6215_3, Arg6215_4, Arg6215_5, Arg6215_6, Arg6215_7, Arg6215_8, Arg6215_9], function(Arg6217) {
  var Arg6217_0 = Arg6217[0], Arg6217_1 = Arg6217[1], Arg6217_2 = Arg6217[2], Arg6217_3 = Arg6217[3], Arg6217_4 = Arg6217[4], Arg6217_5 = Arg6217[5], Arg6217_6 = Arg6217[6], Arg6217_7 = Arg6217[7], Arg6217_8 = Arg6217[8], Arg6217_9 = Arg6217[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6217_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6217_3, []]], [Shen.type_cons, [Shen.type_symbol, "==>"], [Shen.type_cons, Arg6217_0, []]]], []]]], Arg6217_7, Arg6217_8, (new Shen.Freeze([Arg6217_0, Arg6217_1, Arg6217_2, Arg6217_3, Arg6217_4, Arg6217_5, Arg6217_6, Arg6217_7, Arg6217_8, Arg6217_9], function(Arg6219) {
  var Arg6219_0 = Arg6219[0], Arg6219_1 = Arg6219[1], Arg6219_2 = Arg6219[2], Arg6219_3 = Arg6219[3], Arg6219_4 = Arg6219[4], Arg6219_5 = Arg6219[5], Arg6219_6 = Arg6219[6], Arg6219_7 = Arg6219[7], Arg6219_8 = Arg6219[8], Arg6219_9 = Arg6219[9];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6219_4, Arg6219_8, (new Shen.Freeze([Arg6219_1, Arg6219_2, Arg6219_3, Arg6219_4, Arg6219_5, Arg6219_6, Arg6219_7, Arg6219_8, Arg6219_9], function(Arg6221) {
  var Arg6221_0 = Arg6221[0], Arg6221_1 = Arg6221[1], Arg6221_2 = Arg6221[2], Arg6221_3 = Arg6221[3], Arg6221_4 = Arg6221[4], Arg6221_5 = Arg6221[5], Arg6221_6 = Arg6221[6], Arg6221_7 = Arg6221[7], Arg6221_8 = Arg6221[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6221_1, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Shen.call(Shen.fns["shen.lazyderef"], [Arg6221_0, Arg6221_7])]), Arg6221_7, (new Shen.Freeze([Arg6221_0, Arg6221_1, Arg6221_2, Arg6221_3, Arg6221_4, Arg6221_5, Arg6221_6, Arg6221_7, Arg6221_8], function(Arg6223) {
  var Arg6223_0 = Arg6223[0], Arg6223_1 = Arg6223[1], Arg6223_2 = Arg6223[2], Arg6223_3 = Arg6223[3], Arg6223_4 = Arg6223[4], Arg6223_5 = Arg6223[5], Arg6223_6 = Arg6223[6], Arg6223_7 = Arg6223[7], Arg6223_8 = Arg6223[8];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6223_3, Arg6223_7, (new Shen.Freeze([Arg6223_1, Arg6223_2, Arg6223_3, Arg6223_4, Arg6223_5, Arg6223_6, Arg6223_7, Arg6223_8], function(Arg6225) {
  var Arg6225_0 = Arg6225[0], Arg6225_1 = Arg6225[1], Arg6225_2 = Arg6225[2], Arg6225_3 = Arg6225[3], Arg6225_4 = Arg6225[4], Arg6225_5 = Arg6225[5], Arg6225_6 = Arg6225[6], Arg6225_7 = Arg6225[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6225_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6225_4, []]], []]]], [Shen.type_cons, [Shen.type_cons, Arg6225_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6225_1, []]], []]]], Arg6225_5], Arg6225_6, (new Shen.Freeze([Arg6225_0, Arg6225_1, Arg6225_2, Arg6225_3, Arg6225_4, Arg6225_5, Arg6225_6, Arg6225_7], function(Arg6227) {
  var Arg6227_0 = Arg6227[0], Arg6227_1 = Arg6227[1], Arg6227_2 = Arg6227[2], Arg6227_3 = Arg6227[3], Arg6227_4 = Arg6227[4], Arg6227_5 = Arg6227[5], Arg6227_6 = Arg6227[6], Arg6227_7 = Arg6227[7];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6227_2, Arg6227_6, (new Shen.Freeze([Arg6227_2, Arg6227_3, Arg6227_4, Arg6227_5, Arg6227_6, Arg6227_7], function(Arg6229) {
  var Arg6229_0 = Arg6229[0], Arg6229_1 = Arg6229[1], Arg6229_2 = Arg6229[2], Arg6229_3 = Arg6229[3], Arg6229_4 = Arg6229[4], Arg6229_5 = Arg6229[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6229_1, Arg6229_2, Arg6229_3, Arg6229_4, Arg6229_5]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))]);});})}))])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6213_0, Arg6213_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, R2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6213_1, []]]], Arg6213_2, Arg6213_3, (new Shen.Freeze([R2, R0, R1, Arg6213_1, Arg6213_2, Arg6213_3, Arg6213_4], function(Arg6231) {
  var Arg6231_0 = Arg6231[0], Arg6231_1 = Arg6231[1], Arg6231_2 = Arg6231[2], Arg6231_3 = Arg6231[3], Arg6231_4 = Arg6231[4], Arg6231_5 = Arg6231[5], Arg6231_6 = Arg6231[6];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6231_1, Arg6231_5, (new Shen.Freeze([Arg6231_1, Arg6231_2, Arg6231_3, Arg6231_4, Arg6231_5, Arg6231_6], function(Arg6233) {
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1], Arg6233_2 = Arg6233[2], Arg6233_3 = Arg6233[3], Arg6233_4 = Arg6233[4], Arg6233_5 = Arg6233[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.syntax-check"], [Arg6233_1, Arg6233_2, Arg6233_3, Arg6233_4, Arg6233_5]);});})}))]);});})}))]))
  : false))
  : R1))
  : R1))]);}))}, 5, [], "shen.syntax-check"];





Shen.fns["shen.semantics-check"] = [Shen.type_func, function shen_user_lambda6236(Arg6235) {
  if (Arg6235.length < 5) return [Shen.type_func, shen_user_lambda6236, 5, Arg6235];
  var Arg6235_0 = Arg6235[0], Arg6235_1 = Arg6235[1], Arg6235_2 = Arg6235[2], Arg6235_3 = Arg6235[3], Arg6235_4 = Arg6235[4];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6235_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.rename-semantics"], [Shen.call(Shen.fns["shen.deref"], [Arg6235_0, Arg6235_3])])]), Arg6235_3, (new Shen.Freeze([Arg6235_0, R0, Arg6235_1, Arg6235_2, Arg6235_3, Arg6235_4], function(Arg6237) {
  var Arg6237_0 = Arg6237[0], Arg6237_1 = Arg6237[1], Arg6237_2 = Arg6237[2], Arg6237_3 = Arg6237[3], Arg6237_4 = Arg6237[4], Arg6237_5 = Arg6237[5];
  return (function() {
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6237_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6237_2, []]]], Arg6237_3, Arg6237_4, Arg6237_5]);});})}))]);}))}, 5, [], "shen.semantics-check"];





Shen.fns["shen.rename-semantics"] = [Shen.type_func, function shen_user_lambda6240(Arg6239) {
  if (Arg6239.length < 1) return [Shen.type_func, shen_user_lambda6240, 1, Arg6239];
  var Arg6239_0 = Arg6239[0];
  return ((Shen.is_type(Arg6239_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rename-semantics"], [Arg6239_0[1]]), Shen.call(Shen.fns["shen.rename-semantics"], [Arg6239_0[2]])]
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg6239_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.<-sem"], [Shen.type_cons, Arg6239_0, []]]
  : Arg6239_0))}, 1, [], "shen.rename-semantics"];










Shen.fns["shen.shen"] = [Shen.type_func, function shen_user_lambda7281(Arg7280) {
  if (Arg7280.length < 0) return [Shen.type_func, shen_user_lambda7281, 0, Arg7280];
  return (Shen.call(Shen.fns["shen.credits"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.shen"];





Shen.fns["shen.loop"] = [Shen.type_func, function shen_user_lambda7283(Arg7282) {
  if (Arg7282.length < 0) return [Shen.type_func, shen_user_lambda7283, 0, Arg7282];
  return (Shen.call(Shen.fns["shen.initialise_environment"], []),
  Shen.call(Shen.fns["shen.prompt"], []),
  Shen.trap_error(function() {return Shen.call(Shen.fns["shen.read-evaluate-print"], []);}, [Shen.type_func, function shen_user_lambda7285(Arg7284) {
  if (Arg7284.length < 1) return [Shen.type_func, shen_user_lambda7285, 1, Arg7284];
  var Arg7284_0 = Arg7284[0];
  return (function() {
  return Shen.call_tail(Shen.fns["pr"], [Shen.error_to_string(Arg7284_0), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.loop"];





Shen.fns["version"] = [Shen.type_func, function shen_user_lambda7287(Arg7286) {
  if (Arg7286.length < 1) return [Shen.type_func, shen_user_lambda7287, 1, Arg7286];
  var Arg7286_0 = Arg7286[0];
  return (Shen.globals["*version*"] = Arg7286_0)}, 1, [], "version"];





Shen.call_toplevel(function shen_toplevel7290(Arg7288) {
  if (Arg7288.length < 0) return [Shen.type_func, shen_toplevel7290, 0, Arg7288];
  return (function() {
  return Shen.call_tail(Shen.fns["version"], ["version 13"]);})});




Shen.fns["shen.credits"] = [Shen.type_func, function shen_user_lambda7292(Arg7291) {
  if (Arg7291.length < 0) return [Shen.type_func, shen_user_lambda7292, 0, Arg7291];
  return (Shen.call(Shen.fns["shen.prhush"], ["\x0aShen 2010, copyright (C) 2010 Mark Tarver\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], ["released under the Shen license\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [("www.shenlanguage.org, " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*version*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [("running under " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*language*"]), (", implementation: " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*implementation*"]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0aport " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*port*"]), (" ported by " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*porters*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.credits"];





Shen.fns["shen.initialise_environment"] = [Shen.type_func, function shen_user_lambda7294(Arg7293) {
  if (Arg7293.length < 0) return [Shen.type_func, shen_user_lambda7294, 0, Arg7293];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [[Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*infs*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*process-counter*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*catch*"], [Shen.type_cons, 0, []]]]]]]]]]);})}, 0, [], "shen.initialise_environment"];





Shen.fns["shen.multiple-set"] = [Shen.type_func, function shen_user_lambda7296(Arg7295) {
  if (Arg7295.length < 1) return [Shen.type_func, shen_user_lambda7296, 1, Arg7295];
  var Arg7295_0 = Arg7295[0];
  return ((Shen.empty$question$(Arg7295_0))
  ? []
  : (((Shen.is_type(Arg7295_0, Shen.type_cons) && Shen.is_type(Arg7295_0[2], Shen.type_cons)))
  ? ((Shen.globals[Arg7295_0[1][1]] = Arg7295_0[2][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [Arg7295_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.multiple-set"]]);})))}, 1, [], "shen.multiple-set"];





Shen.fns["destroy"] = [Shen.type_func, function shen_user_lambda7298(Arg7297) {
  if (Arg7297.length < 1) return [Shen.type_func, shen_user_lambda7298, 1, Arg7297];
  var Arg7297_0 = Arg7297[0];
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg7297_0, []]);})}, 1, [], "destroy"];





Shen.call_toplevel(function shen_toplevel7301(Arg7299) {
  if (Arg7299.length < 0) return [Shen.type_func, shen_toplevel7301, 0, Arg7299];
  return (Shen.globals["shen.*history*"] = [])});




Shen.fns["shen.read-evaluate-print"] = [Shen.type_func, function shen_user_lambda7303(Arg7302) {
  if (Arg7302.length < 0) return [Shen.type_func, shen_user_lambda7303, 0, Arg7302];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.toplineread"], [])),
  (R1 = (Shen.globals["shen.*history*"])),
  (R0 = Shen.call(Shen.fns["shen.retrieve-from-history-if-needed"], [R0, R1])),
  Shen.call(Shen.fns["shen.update_history"], [R0, R1]),
  (R1 = Shen.call(Shen.fns["fst"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel"], [R1]);}))}, 0, [], "shen.read-evaluate-print"];





Shen.fns["shen.retrieve-from-history-if-needed"] = [Shen.type_func, function shen_user_lambda7305(Arg7304) {
  if (Arg7304.length < 2) return [Shen.type_func, shen_user_lambda7305, 2, Arg7304];
  var Arg7304_0 = Arg7304[0], Arg7304_1 = Arg7304[1];
  var R0;
  return (((Shen.is_type(Arg7304_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7304_0]), Shen.type_cons) && Shen.call(Shen.fns["element?"], [Shen.call(Shen.fns["snd"], [Arg7304_0])[1], [Shen.type_cons, Shen.call(Shen.fns["shen.space"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), []]]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.retrieve-from-history-if-needed"], [[Shen.fns['shen.tuple'], Shen.call(Shen.fns["fst"], [Arg7304_0]), Shen.call(Shen.fns["snd"], [Arg7304_0])[2]], Arg7304_1]);})
  : (((Shen.is_type(Arg7304_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7304_0]), Shen.type_cons) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7304_0])[2], Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg7304_0])[2][2]) && (Shen.is_type(Arg7304_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7304_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7304_0])[2][1], Shen.call(Shen.fns["shen.exclamation"], []))))))))))
  ? (Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg7304_1[1]])]),
  Arg7304_1[1])
  : (((Shen.is_type(Arg7304_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7304_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7304_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg7304_0])[2], Arg7304_1])),
  (R0 = Shen.call(Shen.fns["head"], [Shen.call(Shen.fns["shen.find-past-inputs"], [R0, Arg7304_1])])),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [R0])]),
  R0)
  : (((Shen.is_type(Arg7304_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7304_0]), Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg7304_0])[2]) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7304_0])[1], Shen.call(Shen.fns["shen.percent"], [])))))))
  ? (Shen.call(Shen.fns["shen.print-past-inputs"], [[Shen.type_func, function shen_user_lambda7307(Arg7306) {
  if (Arg7306.length < 1) return [Shen.type_func, shen_user_lambda7307, 1, Arg7306];
  var Arg7306_0 = Arg7306[0];
  return true}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg7304_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : (((Shen.is_type(Arg7304_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg7304_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg7304_0])[1], Shen.call(Shen.fns["shen.percent"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg7304_0])[2], Arg7304_1])),
  Shen.call(Shen.fns["shen.print-past-inputs"], [R0, Shen.call(Shen.fns["reverse"], [Arg7304_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : Arg7304_0)))))}, 2, [], "shen.retrieve-from-history-if-needed"];





Shen.fns["shen.percent"] = [Shen.type_func, function shen_user_lambda7309(Arg7308) {
  if (Arg7308.length < 0) return [Shen.type_func, shen_user_lambda7309, 0, Arg7308];
  return 37}, 0, [], "shen.percent"];





Shen.fns["shen.exclamation"] = [Shen.type_func, function shen_user_lambda7311(Arg7310) {
  if (Arg7310.length < 0) return [Shen.type_func, shen_user_lambda7311, 0, Arg7310];
  return 33}, 0, [], "shen.exclamation"];





Shen.fns["shen.prbytes"] = [Shen.type_func, function shen_user_lambda7313(Arg7312) {
  if (Arg7312.length < 1) return [Shen.type_func, shen_user_lambda7313, 1, Arg7312];
  var Arg7312_0 = Arg7312[0];
  return (Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda7315(Arg7314) {
  if (Arg7314.length < 1) return [Shen.type_func, shen_user_lambda7315, 1, Arg7314];
  var Arg7314_0 = Arg7314[0];
  return (function() {
  return Shen.call_tail(Shen.fns["pr"], [Shen.n_$gt$string(Arg7314_0), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Arg7312_0]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 1, [], "shen.prbytes"];





Shen.fns["shen.update_history"] = [Shen.type_func, function shen_user_lambda7317(Arg7316) {
  if (Arg7316.length < 2) return [Shen.type_func, shen_user_lambda7317, 2, Arg7316];
  var Arg7316_0 = Arg7316[0], Arg7316_1 = Arg7316[1];
  return (Shen.globals["shen.*history*"] = [Shen.type_cons, Arg7316_0, Arg7316_1])}, 2, [], "shen.update_history"];





Shen.fns["shen.toplineread"] = [Shen.type_func, function shen_user_lambda7319(Arg7318) {
  if (Arg7318.length < 0) return [Shen.type_func, shen_user_lambda7319, 0, Arg7318];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), []]);})}, 0, [], "shen.toplineread"];





Shen.fns["shen.toplineread_loop"] = [Shen.type_func, function shen_user_lambda7321(Arg7320) {
  if (Arg7320.length < 2) return [Shen.type_func, shen_user_lambda7321, 2, Arg7320];
  var Arg7320_0 = Arg7320[0], Arg7320_1 = Arg7320[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg7320_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg7320_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg7320_1, [Shen.type_func, function shen_user_lambda7323(Arg7322) {
  if (Arg7322.length < 1) return [Shen.type_func, shen_user_lambda7323, 1, Arg7322];
  var Arg7322_0 = Arg7322[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg7320_1, [Shen.type_cons, Arg7320_0, []]])]);})
  : [Shen.fns['shen.tuple'], R0, Arg7320_1]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg7320_1, [Shen.type_cons, Arg7320_0, []]])]);})))}, 2, [], "shen.toplineread_loop"];





Shen.fns["shen.hat"] = [Shen.type_func, function shen_user_lambda7325(Arg7324) {
  if (Arg7324.length < 0) return [Shen.type_func, shen_user_lambda7325, 0, Arg7324];
  return 94}, 0, [], "shen.hat"];





Shen.fns["shen.newline"] = [Shen.type_func, function shen_user_lambda7327(Arg7326) {
  if (Arg7326.length < 0) return [Shen.type_func, shen_user_lambda7327, 0, Arg7326];
  return 10}, 0, [], "shen.newline"];





Shen.fns["shen.carriage-return"] = [Shen.type_func, function shen_user_lambda7329(Arg7328) {
  if (Arg7328.length < 0) return [Shen.type_func, shen_user_lambda7329, 0, Arg7328];
  return 13}, 0, [], "shen.carriage-return"];





Shen.fns["tc"] = [Shen.type_func, function shen_user_lambda7331(Arg7330) {
  if (Arg7330.length < 1) return [Shen.type_func, shen_user_lambda7331, 1, Arg7330];
  var Arg7330_0 = Arg7330[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg7330_0)))
  ? (Shen.globals["shen.*tc*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg7330_0)))
  ? (Shen.globals["shen.*tc*"] = false)
  : (function() {
  return Shen.simple_error("tc expects a + or -");})))}, 1, [], "tc"];





Shen.fns["shen.prompt"] = [Shen.type_func, function shen_user_lambda7333(Arg7332) {
  if (Arg7332.length < 0) return [Shen.type_func, shen_user_lambda7333, 0, Arg7332];
  return (((Shen.globals["shen.*tc*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "+) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "-) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.prompt"];





Shen.fns["shen.toplevel"] = [Shen.type_func, function shen_user_lambda7335(Arg7334) {
  if (Arg7334.length < 1) return [Shen.type_func, shen_user_lambda7335, 1, Arg7334];
  var Arg7334_0 = Arg7334[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg7334_0, (Shen.globals["shen.*tc*"])]);})}, 1, [], "shen.toplevel"];





Shen.fns["shen.find-past-inputs"] = [Shen.type_func, function shen_user_lambda7337(Arg7336) {
  if (Arg7336.length < 2) return [Shen.type_func, shen_user_lambda7337, 2, Arg7336];
  var Arg7336_0 = Arg7336[0], Arg7336_1 = Arg7336[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.find"], [Arg7336_0, Arg7336_1])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("input not found\x0a");})
  : R0))}, 2, [], "shen.find-past-inputs"];





Shen.fns["shen.make-key"] = [Shen.type_func, function shen_user_lambda7339(Arg7338) {
  if (Arg7338.length < 2) return [Shen.type_func, shen_user_lambda7339, 2, Arg7338];
  var Arg7338_0 = Arg7338[0], Arg7338_1 = Arg7338[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_symbol, "shen.<st_input>"], Arg7338_0, [Shen.type_func, function shen_user_lambda7341(Arg7340) {
  if (Arg7340.length < 1) return [Shen.type_func, shen_user_lambda7341, 1, Arg7340];
  var Arg7340_0 = Arg7340[0];
  return ((Shen.is_type(Arg7340_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg7340_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]])[1]),
  ((Shen.call(Shen.fns["integer?"], [R0]))
  ? [Shen.type_func, function shen_user_lambda7343(Arg7342) {
  if (Arg7342.length < 3) return [Shen.type_func, shen_user_lambda7343, 3, Arg7342];
  var Arg7342_0 = Arg7342[0], Arg7342_1 = Arg7342[1], Arg7342_2 = Arg7342[2];
  return Shen.$eq$(Arg7342_2, Shen.call(Shen.fns["nth"], [(Arg7342_0 + 1), Shen.call(Shen.fns["reverse"], [Arg7342_1])]))}, 3, [R0, Arg7338_1], undefined]
  : [Shen.type_func, function shen_user_lambda7345(Arg7344) {
  if (Arg7344.length < 2) return [Shen.type_func, shen_user_lambda7345, 2, Arg7344];
  var Arg7344_0 = Arg7344[0], Arg7344_1 = Arg7344[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg7344_0, Shen.call(Shen.fns["shen.trim-gubbins"], [Shen.call(Shen.fns["snd"], [Arg7344_1])])]);})}, 2, [Arg7338_0], undefined]))}, 2, [], "shen.make-key"];





Shen.fns["shen.trim-gubbins"] = [Shen.type_func, function shen_user_lambda7347(Arg7346) {
  if (Arg7346.length < 1) return [Shen.type_func, shen_user_lambda7347, 1, Arg7346];
  var Arg7346_0 = Arg7346[0];
  return (((Shen.is_type(Arg7346_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7346_0[1], Shen.call(Shen.fns["shen.space"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7346_0[2]]);})
  : (((Shen.is_type(Arg7346_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7346_0[1], Shen.call(Shen.fns["shen.newline"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7346_0[2]]);})
  : (((Shen.is_type(Arg7346_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7346_0[1], Shen.call(Shen.fns["shen.carriage-return"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7346_0[2]]);})
  : (((Shen.is_type(Arg7346_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7346_0[1], Shen.call(Shen.fns["shen.tab"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7346_0[2]]);})
  : (((Shen.is_type(Arg7346_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7346_0[1], Shen.call(Shen.fns["shen.left-round"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg7346_0[2]]);})
  : Arg7346_0)))))}, 1, [], "shen.trim-gubbins"];





Shen.fns["shen.space"] = [Shen.type_func, function shen_user_lambda7349(Arg7348) {
  if (Arg7348.length < 0) return [Shen.type_func, shen_user_lambda7349, 0, Arg7348];
  return 32}, 0, [], "shen.space"];





Shen.fns["shen.tab"] = [Shen.type_func, function shen_user_lambda7351(Arg7350) {
  if (Arg7350.length < 0) return [Shen.type_func, shen_user_lambda7351, 0, Arg7350];
  return 9}, 0, [], "shen.tab"];





Shen.fns["shen.left-round"] = [Shen.type_func, function shen_user_lambda7353(Arg7352) {
  if (Arg7352.length < 0) return [Shen.type_func, shen_user_lambda7353, 0, Arg7352];
  return 40}, 0, [], "shen.left-round"];





Shen.fns["shen.find"] = [Shen.type_func, function shen_user_lambda7355(Arg7354) {
  if (Arg7354.length < 2) return [Shen.type_func, shen_user_lambda7355, 2, Arg7354];
  var Arg7354_0 = Arg7354[0], Arg7354_1 = Arg7354[1];
  return ((Shen.empty$question$(Arg7354_1))
  ? []
  : (((Shen.is_type(Arg7354_1, Shen.type_cons) && Shen.call(Arg7354_0, [Arg7354_1[1]])))
  ? [Shen.type_cons, Arg7354_1[1], Shen.call(Shen.fns["shen.find"], [Arg7354_0, Arg7354_1[2]])]
  : ((Shen.is_type(Arg7354_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.find"], [Arg7354_0, Arg7354_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.find"]]);}))))}, 2, [], "shen.find"];





Shen.fns["shen.prefix?"] = [Shen.type_func, function shen_user_lambda7357(Arg7356) {
  if (Arg7356.length < 2) return [Shen.type_func, shen_user_lambda7357, 2, Arg7356];
  var Arg7356_0 = Arg7356[0], Arg7356_1 = Arg7356[1];
  return ((Shen.empty$question$(Arg7356_0))
  ? true
  : (((Shen.is_type(Arg7356_0, Shen.type_cons) && (Shen.is_type(Arg7356_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg7356_1[1], Arg7356_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg7356_0[2], Arg7356_1[2]]);})
  : false))}, 2, [], "shen.prefix?"];





Shen.fns["shen.print-past-inputs"] = [Shen.type_func, function shen_user_lambda7359(Arg7358) {
  if (Arg7358.length < 3) return [Shen.type_func, shen_user_lambda7359, 3, Arg7358];
  var Arg7358_0 = Arg7358[0], Arg7358_1 = Arg7358[1], Arg7358_2 = Arg7358[2];
  return ((Shen.empty$question$(Arg7358_1))
  ? [Shen.type_symbol, "_"]
  : (((Shen.is_type(Arg7358_1, Shen.type_cons) && (!Shen.call(Arg7358_0, [Arg7358_1[1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg7358_0, Arg7358_1[2], (Arg7358_2 + 1)]);})
  : (((Shen.is_type(Arg7358_1, Shen.type_cons) && Shen.is_type(Arg7358_1[1], Shen.fns['shen.tuple'])))
  ? (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg7358_2, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg7358_1[1]])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg7358_0, Arg7358_1[2], (Arg7358_2 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.print-past-inputs"]]);}))))}, 3, [], "shen.print-past-inputs"];





Shen.fns["shen.toplevel_evaluate"] = [Shen.type_func, function shen_user_lambda7361(Arg7360) {
  if (Arg7360.length < 2) return [Shen.type_func, shen_user_lambda7361, 2, Arg7360];
  var Arg7360_0 = Arg7360[0], Arg7360_1 = Arg7360[1];
  var R0;
  return (((Shen.is_type(Arg7360_0, Shen.type_cons) && (Shen.is_type(Arg7360_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg7360_0[2][1])) && (Shen.is_type(Arg7360_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg7360_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7360_1))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg7360_0[1], Arg7360_0[2][2][1]]);})
  : (((Shen.is_type(Arg7360_0, Shen.type_cons) && Shen.is_type(Arg7360_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.toplevel_evaluate"], [[Shen.type_cons, Arg7360_0[1], []], Arg7360_1]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg7360_0[2], Arg7360_1]);}))
  : (((Shen.is_type(Arg7360_0, Shen.type_cons) && (Shen.empty$question$(Arg7360_0[2]) && Shen.unwind_tail(Shen.$eq$(true, Arg7360_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg7360_0[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);})
  : (((Shen.is_type(Arg7360_0, Shen.type_cons) && (Shen.empty$question$(Arg7360_0[2]) && Shen.unwind_tail(Shen.$eq$(false, Arg7360_1)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7360_0[1]])),
  (function() {
  return Shen.call_tail(Shen.fns["print"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.toplevel_evaluate"]]);})))))}, 2, [], "shen.toplevel_evaluate"];





Shen.fns["shen.typecheck-and-evaluate"] = [Shen.type_func, function shen_user_lambda7363(Arg7362) {
  if (Arg7362.length < 2) return [Shen.type_func, shen_user_lambda7363, 2, Arg7362];
  var Arg7362_0 = Arg7362[0], Arg7362_1 = Arg7362[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg7362_0, Arg7362_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (function() {
  return Shen.simple_error("type error\x0a");})
  : ((R1 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg7362_0])),
  (R0 = Shen.call(Shen.fns["shen.pretty-type"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [R1, (" : " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], [])]);}))))}, 2, [], "shen.typecheck-and-evaluate"];





Shen.fns["shen.pretty-type"] = [Shen.type_func, function shen_user_lambda7365(Arg7364) {
  if (Arg7364.length < 1) return [Shen.type_func, shen_user_lambda7365, 1, Arg7364];
  var Arg7364_0 = Arg7364[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [(Shen.globals["shen.*alphabet*"]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg7364_0]), Arg7364_0]);})}, 1, [], "shen.pretty-type"];





Shen.fns["shen.extract-pvars"] = [Shen.type_func, function shen_user_lambda7367(Arg7366) {
  if (Arg7366.length < 1) return [Shen.type_func, shen_user_lambda7367, 1, Arg7366];
  var Arg7366_0 = Arg7366[0];
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg7366_0]))
  ? [Shen.type_cons, Arg7366_0, []]
  : ((Shen.is_type(Arg7366_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract-pvars"], [Arg7366_0[1]]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg7366_0[2]])]);})
  : []))}, 1, [], "shen.extract-pvars"];





Shen.fns["shen.mult_subst"] = [Shen.type_func, function shen_user_lambda7369(Arg7368) {
  if (Arg7368.length < 3) return [Shen.type_func, shen_user_lambda7369, 3, Arg7368];
  var Arg7368_0 = Arg7368[0], Arg7368_1 = Arg7368[1], Arg7368_2 = Arg7368[2];
  return ((Shen.empty$question$(Arg7368_0))
  ? Arg7368_2
  : ((Shen.empty$question$(Arg7368_1))
  ? Arg7368_2
  : (((Shen.is_type(Arg7368_0, Shen.type_cons) && Shen.is_type(Arg7368_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [Arg7368_0[2], Arg7368_1[2], Shen.call(Shen.fns["subst"], [Arg7368_0[1], Arg7368_1[1], Arg7368_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.sys-error"], [[Shen.type_symbol, "shen.mult_subst"]]);}))))}, 3, [], "shen.mult_subst"];



